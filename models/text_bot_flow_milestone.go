// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TextBotFlowMilestone text bot flow milestone
//
// swagger:model TextBotFlowMilestone
type TextBotFlowMilestone struct {

	// The timestamp of when the milestone was reached. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
	// Required: true
	// Format: date-time
	DateReached *strfmt.DateTime `json:"dateReached"`

	// The Milestone's ID.
	// Required: true
	ID *string `json:"id"`

	// The sequence number of the milestone.
	// Required: true
	Sequence *int64 `json:"sequence"`
}

// Validate validates this text bot flow milestone
func (m *TextBotFlowMilestone) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDateReached(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSequence(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TextBotFlowMilestone) validateDateReached(formats strfmt.Registry) error {

	if err := validate.Required("dateReached", "body", m.DateReached); err != nil {
		return err
	}

	if err := validate.FormatOf("dateReached", "body", "date-time", m.DateReached.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *TextBotFlowMilestone) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", m.ID); err != nil {
		return err
	}

	return nil
}

func (m *TextBotFlowMilestone) validateSequence(formats strfmt.Registry) error {

	if err := validate.Required("sequence", "body", m.Sequence); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TextBotFlowMilestone) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TextBotFlowMilestone) UnmarshalBinary(b []byte) error {
	var res TextBotFlowMilestone
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
