// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ExternalOrganizationTrustorLink external organization trustor link
//
// swagger:model ExternalOrganizationTrustorLink
type ExternalOrganizationTrustorLink struct {

	// Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
	// Format: date-time
	DateCreated strfmt.DateTime `json:"dateCreated,omitempty"`

	// The id of a PureCloud External Organization entity in the External Contacts system that will be used to represent the trustor org
	ExternalOrganizationID string `json:"externalOrganizationId,omitempty"`

	// The URI for the External Organization that is linked to the trustor org
	// Read Only: true
	// Format: uri
	ExternalOrganizationURI strfmt.URI `json:"externalOrganizationUri,omitempty"`

	// The id of a PureCloud organization that has granted trust to this PureCloud organization
	TrustorOrgID string `json:"trustorOrgId,omitempty"`
}

// Validate validates this external organization trustor link
func (m *ExternalOrganizationTrustorLink) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDateCreated(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateExternalOrganizationURI(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ExternalOrganizationTrustorLink) validateDateCreated(formats strfmt.Registry) error {
	if swag.IsZero(m.DateCreated) { // not required
		return nil
	}

	if err := validate.FormatOf("dateCreated", "body", "date-time", m.DateCreated.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *ExternalOrganizationTrustorLink) validateExternalOrganizationURI(formats strfmt.Registry) error {
	if swag.IsZero(m.ExternalOrganizationURI) { // not required
		return nil
	}

	if err := validate.FormatOf("externalOrganizationUri", "body", "uri", m.ExternalOrganizationURI.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this external organization trustor link based on the context it is used
func (m *ExternalOrganizationTrustorLink) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateExternalOrganizationURI(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ExternalOrganizationTrustorLink) contextValidateExternalOrganizationURI(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "externalOrganizationUri", "body", strfmt.URI(m.ExternalOrganizationURI)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ExternalOrganizationTrustorLink) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ExternalOrganizationTrustorLink) UnmarshalBinary(b []byte) error {
	var res ExternalOrganizationTrustorLink
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
