// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PromptAsset prompt asset
//
// swagger:model PromptAsset
type PromptAsset struct {

	// duration seconds
	DurationSeconds float64 `json:"durationSeconds,omitempty"`

	// The globally unique identifier for the object.
	// Read Only: true
	ID string `json:"id,omitempty"`

	// Prompt resource language
	// Read Only: true
	Language string `json:"language,omitempty"`

	// Whether or not this resource locale is the default for the language
	// Read Only: true
	LanguageDefault *bool `json:"languageDefault,omitempty"`

	// URI of the resource audio
	// Read Only: true
	MediaURI string `json:"mediaUri,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// Associated prompt ID
	// Read Only: true
	PromptID string `json:"promptId,omitempty"`

	// The URI for this object
	// Read Only: true
	// Format: uri
	SelfURI strfmt.URI `json:"selfUri,omitempty"`

	// tags
	Tags map[string][]string `json:"tags,omitempty"`

	// Text of the resource
	Text string `json:"text,omitempty"`

	// Text to speech of the resource
	TtsString string `json:"ttsString,omitempty"`

	// Audio upload status
	// Read Only: true
	// Enum: [created uploaded transcoded transcodeFailed]
	UploadStatus string `json:"uploadStatus,omitempty"`

	// Upload URI for the resource audio
	// Read Only: true
	UploadURI string `json:"uploadUri,omitempty"`
}

// Validate validates this prompt asset
func (m *PromptAsset) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSelfURI(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUploadStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PromptAsset) validateSelfURI(formats strfmt.Registry) error {

	if swag.IsZero(m.SelfURI) { // not required
		return nil
	}

	if err := validate.FormatOf("selfUri", "body", "uri", m.SelfURI.String(), formats); err != nil {
		return err
	}

	return nil
}

var promptAssetTypeUploadStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["created","uploaded","transcoded","transcodeFailed"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		promptAssetTypeUploadStatusPropEnum = append(promptAssetTypeUploadStatusPropEnum, v)
	}
}

const (

	// PromptAssetUploadStatusCreated captures enum value "created"
	PromptAssetUploadStatusCreated string = "created"

	// PromptAssetUploadStatusUploaded captures enum value "uploaded"
	PromptAssetUploadStatusUploaded string = "uploaded"

	// PromptAssetUploadStatusTranscoded captures enum value "transcoded"
	PromptAssetUploadStatusTranscoded string = "transcoded"

	// PromptAssetUploadStatusTranscodeFailed captures enum value "transcodeFailed"
	PromptAssetUploadStatusTranscodeFailed string = "transcodeFailed"
)

// prop value enum
func (m *PromptAsset) validateUploadStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, promptAssetTypeUploadStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *PromptAsset) validateUploadStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.UploadStatus) { // not required
		return nil
	}

	// value enum
	if err := m.validateUploadStatusEnum("uploadStatus", "body", m.UploadStatus); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PromptAsset) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PromptAsset) UnmarshalBinary(b []byte) error {
	var res PromptAsset
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
