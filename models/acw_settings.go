// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AcwSettings acw settings
//
// swagger:model AcwSettings
type AcwSettings struct {

	// The amount of time the agent can stay in ACW (Min: 1 sec, Max: 1 day).  Can only be used when ACW is MANDATORY_TIMEOUT or MANDATORY_FORCED_TIMEOUT.
	TimeoutMs int32 `json:"timeoutMs,omitempty"`

	// This field controls how the UI prompts the agent for a wrapup.
	// Enum: [MANDATORY OPTIONAL MANDATORY_TIMEOUT MANDATORY_FORCED_TIMEOUT AGENT_REQUESTED]
	WrapupPrompt string `json:"wrapupPrompt,omitempty"`
}

// Validate validates this acw settings
func (m *AcwSettings) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateWrapupPrompt(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var acwSettingsTypeWrapupPromptPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["MANDATORY","OPTIONAL","MANDATORY_TIMEOUT","MANDATORY_FORCED_TIMEOUT","AGENT_REQUESTED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		acwSettingsTypeWrapupPromptPropEnum = append(acwSettingsTypeWrapupPromptPropEnum, v)
	}
}

const (

	// AcwSettingsWrapupPromptMANDATORY captures enum value "MANDATORY"
	AcwSettingsWrapupPromptMANDATORY string = "MANDATORY"

	// AcwSettingsWrapupPromptOPTIONAL captures enum value "OPTIONAL"
	AcwSettingsWrapupPromptOPTIONAL string = "OPTIONAL"

	// AcwSettingsWrapupPromptMANDATORYTIMEOUT captures enum value "MANDATORY_TIMEOUT"
	AcwSettingsWrapupPromptMANDATORYTIMEOUT string = "MANDATORY_TIMEOUT"

	// AcwSettingsWrapupPromptMANDATORYFORCEDTIMEOUT captures enum value "MANDATORY_FORCED_TIMEOUT"
	AcwSettingsWrapupPromptMANDATORYFORCEDTIMEOUT string = "MANDATORY_FORCED_TIMEOUT"

	// AcwSettingsWrapupPromptAGENTREQUESTED captures enum value "AGENT_REQUESTED"
	AcwSettingsWrapupPromptAGENTREQUESTED string = "AGENT_REQUESTED"
)

// prop value enum
func (m *AcwSettings) validateWrapupPromptEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, acwSettingsTypeWrapupPromptPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *AcwSettings) validateWrapupPrompt(formats strfmt.Registry) error {
	if swag.IsZero(m.WrapupPrompt) { // not required
		return nil
	}

	// value enum
	if err := m.validateWrapupPromptEnum("wrapupPrompt", "body", m.WrapupPrompt); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this acw settings based on context it is used
func (m *AcwSettings) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AcwSettings) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AcwSettings) UnmarshalBinary(b []byte) error {
	var res AcwSettings
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
