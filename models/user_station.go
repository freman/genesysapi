// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UserStation user station
//
// swagger:model UserStation
type UserStation struct {

	// Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
	// Format: date-time
	AssociatedDate strfmt.DateTime `json:"associatedDate,omitempty"`

	// associated user
	AssociatedUser *User `json:"associatedUser,omitempty"`

	// default user
	DefaultUser *User `json:"defaultUser,omitempty"`

	// A globally unique identifier for this station
	// Read Only: true
	ID string `json:"id,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// Provider-specific info for this station, e.g. { "edgeGroupId": "ffe7b15c-a9cc-4f4c-88f5-781327819a49" }
	ProviderInfo map[string]string `json:"providerInfo,omitempty"`

	// type
	Type string `json:"type,omitempty"`

	// The number of call appearances on the station.
	// Read Only: true
	WebRtcCallAppearances int32 `json:"webRtcCallAppearances,omitempty"`
}

// Validate validates this user station
func (m *UserStation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAssociatedDate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAssociatedUser(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDefaultUser(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UserStation) validateAssociatedDate(formats strfmt.Registry) error {

	if swag.IsZero(m.AssociatedDate) { // not required
		return nil
	}

	if err := validate.FormatOf("associatedDate", "body", "date-time", m.AssociatedDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *UserStation) validateAssociatedUser(formats strfmt.Registry) error {

	if swag.IsZero(m.AssociatedUser) { // not required
		return nil
	}

	if m.AssociatedUser != nil {
		if err := m.AssociatedUser.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("associatedUser")
			}
			return err
		}
	}

	return nil
}

func (m *UserStation) validateDefaultUser(formats strfmt.Registry) error {

	if swag.IsZero(m.DefaultUser) { // not required
		return nil
	}

	if m.DefaultUser != nil {
		if err := m.DefaultUser.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("defaultUser")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *UserStation) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UserStation) UnmarshalBinary(b []byte) error {
	var res UserStation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
