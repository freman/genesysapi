// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// WorkPlanActivity Activity configured for shift in work plan
//
// swagger:model WorkPlanActivity
type WorkPlanActivity struct {

	// ID of the activity code associated with this activity
	ActivityCodeID string `json:"activityCodeId,omitempty"`

	// Whether the activity duration is counted towards contiguous work time
	CountsAsContiguousWorkTime bool `json:"countsAsContiguousWorkTime"`

	// Whether the activity is paid
	CountsAsPaidTime bool `json:"countsAsPaidTime"`

	// If marked true for updating an existing activity, the activity will be permanently deleted
	Delete bool `json:"delete"`

	// Description of the activity
	Description string `json:"description,omitempty"`

	// Earliest activity start in offset minutes relative to shift start time if startTimeIsRelativeToShiftStart == true else its based on midnight. Used if flexibleStartTime == true
	EarliestStartTimeMinutes int32 `json:"earliestStartTimeMinutes,omitempty"`

	// Exact activity start in offset minutes relative to shift start time if startTimeIsRelativeToShiftStart == true else its based on midnight. Used if flexibleStartTime == false
	ExactStartTimeMinutes int32 `json:"exactStartTimeMinutes,omitempty"`

	// Whether the start time of the activity is flexible
	FlexibleStartTime bool `json:"flexibleStartTime"`

	// ID of the activity. This is required only for the case of updating an existing activity
	ID string `json:"id,omitempty"`

	// Latest activity start in offset minutes relative to shift start time if startTimeIsRelativeToShiftStart == true else its based on midnight. Used if flexibleStartTime == true
	LatestStartTimeMinutes int32 `json:"latestStartTimeMinutes,omitempty"`

	// Length of the activity in minutes
	LengthMinutes int32 `json:"lengthMinutes,omitempty"`

	// Increment in offset minutes that would contribute to different possible start times for the activity
	StartTimeIncrementMinutes int32 `json:"startTimeIncrementMinutes,omitempty"`

	// Whether the start time of the activity is relative to the start time of the shift it belongs to
	StartTimeIsRelativeToShiftStart bool `json:"startTimeIsRelativeToShiftStart"`
}

// Validate validates this work plan activity
func (m *WorkPlanActivity) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *WorkPlanActivity) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *WorkPlanActivity) UnmarshalBinary(b []byte) error {
	var res WorkPlanActivity
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
