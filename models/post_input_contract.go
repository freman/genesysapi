// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PostInputContract The schemas defining all of the expected requests/inputs.
//
// swagger:model PostInputContract
type PostInputContract struct {

	// JSON Schema that defines the body of the request that the client (edge/architect/postman) is sending to the service, on the /execute path.
	// Required: true
	InputSchema *JSONSchemaDocument `json:"inputSchema"`
}

// Validate validates this post input contract
func (m *PostInputContract) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateInputSchema(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PostInputContract) validateInputSchema(formats strfmt.Registry) error {

	if err := validate.Required("inputSchema", "body", m.InputSchema); err != nil {
		return err
	}

	if m.InputSchema != nil {
		if err := m.InputSchema.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("inputSchema")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PostInputContract) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PostInputContract) UnmarshalBinary(b []byte) error {
	var res PostInputContract
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
