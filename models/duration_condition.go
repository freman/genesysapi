// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DurationCondition duration condition
//
// swagger:model DurationCondition
type DurationCondition struct {

	// duration operator
	DurationOperator string `json:"durationOperator,omitempty"`

	// duration range
	DurationRange string `json:"durationRange,omitempty"`

	// duration target
	// Enum: [DURATION DURATION_RANGE]
	DurationTarget string `json:"durationTarget,omitempty"`
}

// Validate validates this duration condition
func (m *DurationCondition) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDurationTarget(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var durationConditionTypeDurationTargetPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["DURATION","DURATION_RANGE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		durationConditionTypeDurationTargetPropEnum = append(durationConditionTypeDurationTargetPropEnum, v)
	}
}

const (

	// DurationConditionDurationTargetDURATION captures enum value "DURATION"
	DurationConditionDurationTargetDURATION string = "DURATION"

	// DurationConditionDurationTargetDURATIONRANGE captures enum value "DURATION_RANGE"
	DurationConditionDurationTargetDURATIONRANGE string = "DURATION_RANGE"
)

// prop value enum
func (m *DurationCondition) validateDurationTargetEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, durationConditionTypeDurationTargetPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *DurationCondition) validateDurationTarget(formats strfmt.Registry) error {

	if swag.IsZero(m.DurationTarget) { // not required
		return nil
	}

	// value enum
	if err := m.validateDurationTargetEnum("durationTarget", "body", m.DurationTarget); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DurationCondition) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DurationCondition) UnmarshalBinary(b []byte) error {
	var res DurationCondition
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
