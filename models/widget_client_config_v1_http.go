// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// WidgetClientConfigV1HTTP widget client config v1 Http
//
// swagger:model WidgetClientConfigV1Http
type WidgetClientConfigV1HTTP struct {

	// authentication Url
	// Format: uri
	AuthenticationURL strfmt.URI `json:"authenticationUrl,omitempty"`

	// web chat skin
	// Enum: [basic modern-caret-skin]
	WebChatSkin string `json:"webChatSkin,omitempty"`
}

// Validate validates this widget client config v1 Http
func (m *WidgetClientConfigV1HTTP) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAuthenticationURL(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateWebChatSkin(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *WidgetClientConfigV1HTTP) validateAuthenticationURL(formats strfmt.Registry) error {

	if swag.IsZero(m.AuthenticationURL) { // not required
		return nil
	}

	if err := validate.FormatOf("authenticationUrl", "body", "uri", m.AuthenticationURL.String(), formats); err != nil {
		return err
	}

	return nil
}

var widgetClientConfigV1HttpTypeWebChatSkinPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["basic","modern-caret-skin"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		widgetClientConfigV1HttpTypeWebChatSkinPropEnum = append(widgetClientConfigV1HttpTypeWebChatSkinPropEnum, v)
	}
}

const (

	// WidgetClientConfigV1HTTPWebChatSkinBasic captures enum value "basic"
	WidgetClientConfigV1HTTPWebChatSkinBasic string = "basic"

	// WidgetClientConfigV1HTTPWebChatSkinModernCaretSkin captures enum value "modern-caret-skin"
	WidgetClientConfigV1HTTPWebChatSkinModernCaretSkin string = "modern-caret-skin"
)

// prop value enum
func (m *WidgetClientConfigV1HTTP) validateWebChatSkinEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, widgetClientConfigV1HttpTypeWebChatSkinPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *WidgetClientConfigV1HTTP) validateWebChatSkin(formats strfmt.Registry) error {

	if swag.IsZero(m.WebChatSkin) { // not required
		return nil
	}

	// value enum
	if err := m.validateWebChatSkinEnum("webChatSkin", "body", m.WebChatSkin); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *WidgetClientConfigV1HTTP) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *WidgetClientConfigV1HTTP) UnmarshalBinary(b []byte) error {
	var res WidgetClientConfigV1HTTP
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
