// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UpdateServiceGoalTemplate update service goal template
//
// swagger:model UpdateServiceGoalTemplate
type UpdateServiceGoalTemplate struct {

	// Abandon rate targets for this service goal template
	AbandonRate *BuAbandonRate `json:"abandonRate,omitempty"`

	// Average speed of answer targets for this service goal template
	AverageSpeedOfAnswer *BuAverageSpeedOfAnswer `json:"averageSpeedOfAnswer,omitempty"`

	// Version metadata for the service goal template
	// Required: true
	Metadata *WfmVersionedEntityMetadata `json:"metadata"`

	// The name of the service goal template.
	Name string `json:"name,omitempty"`

	// Service level targets for this service goal template
	ServiceLevel *BuServiceLevel `json:"serviceLevel,omitempty"`
}

// Validate validates this update service goal template
func (m *UpdateServiceGoalTemplate) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAbandonRate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAverageSpeedOfAnswer(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMetadata(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateServiceLevel(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UpdateServiceGoalTemplate) validateAbandonRate(formats strfmt.Registry) error {

	if swag.IsZero(m.AbandonRate) { // not required
		return nil
	}

	if m.AbandonRate != nil {
		if err := m.AbandonRate.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("abandonRate")
			}
			return err
		}
	}

	return nil
}

func (m *UpdateServiceGoalTemplate) validateAverageSpeedOfAnswer(formats strfmt.Registry) error {

	if swag.IsZero(m.AverageSpeedOfAnswer) { // not required
		return nil
	}

	if m.AverageSpeedOfAnswer != nil {
		if err := m.AverageSpeedOfAnswer.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("averageSpeedOfAnswer")
			}
			return err
		}
	}

	return nil
}

func (m *UpdateServiceGoalTemplate) validateMetadata(formats strfmt.Registry) error {

	if err := validate.Required("metadata", "body", m.Metadata); err != nil {
		return err
	}

	if m.Metadata != nil {
		if err := m.Metadata.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("metadata")
			}
			return err
		}
	}

	return nil
}

func (m *UpdateServiceGoalTemplate) validateServiceLevel(formats strfmt.Registry) error {

	if swag.IsZero(m.ServiceLevel) { // not required
		return nil
	}

	if m.ServiceLevel != nil {
		if err := m.ServiceLevel.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("serviceLevel")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *UpdateServiceGoalTemplate) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UpdateServiceGoalTemplate) UnmarshalBinary(b []byte) error {
	var res UpdateServiceGoalTemplate
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
