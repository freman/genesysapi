// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GuestMemberInfo guest member info
//
// swagger:model GuestMemberInfo
type GuestMemberInfo struct {

	// The URL to the avatar image to use for the guest member in the conversation, if any.
	// Format: uri
	AvatarImageURL strfmt.URI `json:"avatarImageUrl,omitempty"`

	// Any custom fields of information, in key-value format, to attach to the guest member in the conversation.
	CustomFields map[string]string `json:"customFields,omitempty"`

	// The display name to use for the guest member in the conversation.
	// Required: true
	DisplayName *string `json:"displayName"`

	// The email address to use for the guest member in the conversation.
	Email string `json:"email,omitempty"`

	// The first name to use for the guest member in the conversation.
	FirstName string `json:"firstName,omitempty"`

	// The last name to use for the guest member in the conversation.
	LastName string `json:"lastName,omitempty"`

	// The phone number to use for the guest member in the conversation.
	PhoneNumber string `json:"phoneNumber,omitempty"`
}

// Validate validates this guest member info
func (m *GuestMemberInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAvatarImageURL(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDisplayName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GuestMemberInfo) validateAvatarImageURL(formats strfmt.Registry) error {

	if swag.IsZero(m.AvatarImageURL) { // not required
		return nil
	}

	if err := validate.FormatOf("avatarImageUrl", "body", "uri", m.AvatarImageURL.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *GuestMemberInfo) validateDisplayName(formats strfmt.Registry) error {

	if err := validate.Required("displayName", "body", m.DisplayName); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GuestMemberInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GuestMemberInfo) UnmarshalBinary(b []byte) error {
	var res GuestMemberInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
