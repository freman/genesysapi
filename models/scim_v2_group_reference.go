// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ScimV2GroupReference Defines a reference to SCIM groups.
//
// swagger:model ScimV2GroupReference
type ScimV2GroupReference struct {

	// The reference URI of the SCIM resource.
	// Read Only: true
	// Format: uri
	DollarRef strfmt.URI `json:"$ref,omitempty"`

	// The type of SCIM resource.
	// Read Only: true
	// Enum: [User Group ServiceProviderConfig ResourceType Schema]
	Type string `json:"type,omitempty"`

	// The ID of the group member. Can be "userId" or "groupId".
	Value string `json:"value,omitempty"`
}

// Validate validates this scim v2 group reference
func (m *ScimV2GroupReference) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDollarRef(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ScimV2GroupReference) validateDollarRef(formats strfmt.Registry) error {

	if swag.IsZero(m.DollarRef) { // not required
		return nil
	}

	if err := validate.FormatOf("$ref", "body", "uri", m.DollarRef.String(), formats); err != nil {
		return err
	}

	return nil
}

var scimV2GroupReferenceTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["User","Group","ServiceProviderConfig","ResourceType","Schema"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		scimV2GroupReferenceTypeTypePropEnum = append(scimV2GroupReferenceTypeTypePropEnum, v)
	}
}

const (

	// ScimV2GroupReferenceTypeUser captures enum value "User"
	ScimV2GroupReferenceTypeUser string = "User"

	// ScimV2GroupReferenceTypeGroup captures enum value "Group"
	ScimV2GroupReferenceTypeGroup string = "Group"

	// ScimV2GroupReferenceTypeServiceProviderConfig captures enum value "ServiceProviderConfig"
	ScimV2GroupReferenceTypeServiceProviderConfig string = "ServiceProviderConfig"

	// ScimV2GroupReferenceTypeResourceType captures enum value "ResourceType"
	ScimV2GroupReferenceTypeResourceType string = "ResourceType"

	// ScimV2GroupReferenceTypeSchema captures enum value "Schema"
	ScimV2GroupReferenceTypeSchema string = "Schema"
)

// prop value enum
func (m *ScimV2GroupReference) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, scimV2GroupReferenceTypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *ScimV2GroupReference) validateType(formats strfmt.Registry) error {

	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ScimV2GroupReference) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ScimV2GroupReference) UnmarshalBinary(b []byte) error {
	var res ScimV2GroupReference
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
