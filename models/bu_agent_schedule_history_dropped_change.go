// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// BuAgentScheduleHistoryDroppedChange bu agent schedule history dropped change
//
// swagger:model BuAgentScheduleHistoryDroppedChange
type BuAgentScheduleHistoryDroppedChange struct {

	// The deleted shifts, full day time off markers, or the entire agent schedule
	Deletes *BuAgentScheduleHistoryDeletedChange `json:"deletes,omitempty"`

	// The dates of any deleted full day time off markers
	// Unique: true
	FullDayTimeOffMarkerDates []strfmt.Date `json:"fullDayTimeOffMarkerDates"`

	// The metadata of the change, including who and when the change was made
	Metadata *BuAgentScheduleHistoryChangeMetadata `json:"metadata,omitempty"`

	// The IDs of deleted shifts
	// Unique: true
	ShiftIds []string `json:"shiftIds"`
}

// Validate validates this bu agent schedule history dropped change
func (m *BuAgentScheduleHistoryDroppedChange) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDeletes(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFullDayTimeOffMarkerDates(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMetadata(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateShiftIds(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *BuAgentScheduleHistoryDroppedChange) validateDeletes(formats strfmt.Registry) error {

	if swag.IsZero(m.Deletes) { // not required
		return nil
	}

	if m.Deletes != nil {
		if err := m.Deletes.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("deletes")
			}
			return err
		}
	}

	return nil
}

func (m *BuAgentScheduleHistoryDroppedChange) validateFullDayTimeOffMarkerDates(formats strfmt.Registry) error {

	if swag.IsZero(m.FullDayTimeOffMarkerDates) { // not required
		return nil
	}

	if err := validate.UniqueItems("fullDayTimeOffMarkerDates", "body", m.FullDayTimeOffMarkerDates); err != nil {
		return err
	}

	for i := 0; i < len(m.FullDayTimeOffMarkerDates); i++ {

		if err := validate.FormatOf("fullDayTimeOffMarkerDates"+"."+strconv.Itoa(i), "body", "date", m.FullDayTimeOffMarkerDates[i].String(), formats); err != nil {
			return err
		}

	}

	return nil
}

func (m *BuAgentScheduleHistoryDroppedChange) validateMetadata(formats strfmt.Registry) error {

	if swag.IsZero(m.Metadata) { // not required
		return nil
	}

	if m.Metadata != nil {
		if err := m.Metadata.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("metadata")
			}
			return err
		}
	}

	return nil
}

func (m *BuAgentScheduleHistoryDroppedChange) validateShiftIds(formats strfmt.Registry) error {

	if swag.IsZero(m.ShiftIds) { // not required
		return nil
	}

	if err := validate.UniqueItems("shiftIds", "body", m.ShiftIds); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *BuAgentScheduleHistoryDroppedChange) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BuAgentScheduleHistoryDroppedChange) UnmarshalBinary(b []byte) error {
	var res BuAgentScheduleHistoryDroppedChange
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
