// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MediaRegions media regions
//
// swagger:model MediaRegions
type MediaRegions struct {

	// The list of AWS regions to which Genesys Cloud is deployed with full functionality including media streaming.
	// Read Only: true
	AwsCoreRegions []string `json:"awsCoreRegions"`

	// The AWS region your organization is in.
	// Read Only: true
	AwsHomeRegion string `json:"awsHomeRegion,omitempty"`

	// The list of AWS regions that Genesys Cloud uses only for media streaming.
	// Read Only: true
	AwsSatelliteRegions []string `json:"awsSatelliteRegions"`
}

// Validate validates this media regions
func (m *MediaRegions) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validate this media regions based on the context it is used
func (m *MediaRegions) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateAwsCoreRegions(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateAwsHomeRegion(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateAwsSatelliteRegions(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MediaRegions) contextValidateAwsCoreRegions(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "awsCoreRegions", "body", []string(m.AwsCoreRegions)); err != nil {
		return err
	}

	return nil
}

func (m *MediaRegions) contextValidateAwsHomeRegion(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "awsHomeRegion", "body", string(m.AwsHomeRegion)); err != nil {
		return err
	}

	return nil
}

func (m *MediaRegions) contextValidateAwsSatelliteRegions(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "awsSatelliteRegions", "body", []string(m.AwsSatelliteRegions)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *MediaRegions) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MediaRegions) UnmarshalBinary(b []byte) error {
	var res MediaRegions
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
