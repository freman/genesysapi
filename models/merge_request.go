// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MergeRequest merge request
//
// swagger:model MergeRequest
type MergeRequest struct {

	// The ID of the source contact for the merge operation
	// Required: true
	SourceContactID *string `json:"sourceContactId"`

	// The ID of the target contact for the merge operation
	// Required: true
	TargetContactID *string `json:"targetContactId"`
}

// Validate validates this merge request
func (m *MergeRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSourceContactID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTargetContactID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MergeRequest) validateSourceContactID(formats strfmt.Registry) error {

	if err := validate.Required("sourceContactId", "body", m.SourceContactID); err != nil {
		return err
	}

	return nil
}

func (m *MergeRequest) validateTargetContactID(formats strfmt.Registry) error {

	if err := validate.Required("targetContactId", "body", m.TargetContactID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this merge request based on context it is used
func (m *MergeRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *MergeRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MergeRequest) UnmarshalBinary(b []byte) error {
	var res MergeRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
