// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AmazonLexRequest amazon lex request
//
// swagger:model AmazonLexRequest
type AmazonLexRequest struct {

	// AttributeName/AttributeValue pairs of User Defined Request Attributes to be sent to the amazon bot See - https://docs.aws.amazon.com/lex/latest/dg/context-mgmt.html#context-mgmt-request-attribs
	RequestAttributes map[string]string `json:"requestAttributes,omitempty"`

	// AttributeName/AttributeValue pairs of Session Attributes to be sent to the amazon bot. See - https://docs.aws.amazon.com/lex/latest/dg/context-mgmt.html#context-mgmt-session-attribs
	SessionAttributes map[string]string `json:"sessionAttributes,omitempty"`
}

// Validate validates this amazon lex request
func (m *AmazonLexRequest) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this amazon lex request based on context it is used
func (m *AmazonLexRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AmazonLexRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AmazonLexRequest) UnmarshalBinary(b []byte) error {
	var res AmazonLexRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
