// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// FooterTemplate The Footer template identifies the Footer type and its footerUsage
//
// swagger:model FooterTemplate
type FooterTemplate struct {

	// Specifies the canned response template where the footer can be used.
	ApplicableResources []string `json:"applicableResources"`

	// Specifies the type represented by Footer.
	// Enum: [Signature]
	Type string `json:"type,omitempty"`
}

// Validate validates this footer template
func (m *FooterTemplate) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateApplicableResources(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var footerTemplateApplicableResourcesItemsEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Campaign"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		footerTemplateApplicableResourcesItemsEnum = append(footerTemplateApplicableResourcesItemsEnum, v)
	}
}

func (m *FooterTemplate) validateApplicableResourcesItemsEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, footerTemplateApplicableResourcesItemsEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *FooterTemplate) validateApplicableResources(formats strfmt.Registry) error {

	if swag.IsZero(m.ApplicableResources) { // not required
		return nil
	}

	for i := 0; i < len(m.ApplicableResources); i++ {

		// value enum
		if err := m.validateApplicableResourcesItemsEnum("applicableResources"+"."+strconv.Itoa(i), "body", m.ApplicableResources[i]); err != nil {
			return err
		}

	}

	return nil
}

var footerTemplateTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Signature"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		footerTemplateTypeTypePropEnum = append(footerTemplateTypeTypePropEnum, v)
	}
}

const (

	// FooterTemplateTypeSignature captures enum value "Signature"
	FooterTemplateTypeSignature string = "Signature"
)

// prop value enum
func (m *FooterTemplate) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, footerTemplateTypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *FooterTemplate) validateType(formats strfmt.Registry) error {

	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *FooterTemplate) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *FooterTemplate) UnmarshalBinary(b []byte) error {
	var res FooterTemplate
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
