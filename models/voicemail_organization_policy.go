// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// VoicemailOrganizationPolicy voicemail organization policy
//
// swagger:model VoicemailOrganizationPolicy
type VoicemailOrganizationPolicy struct {

	// The organization's default number of seconds to ring a user's phone before a call is transferred to voicemail
	AlertTimeoutSeconds int32 `json:"alertTimeoutSeconds,omitempty"`

	// Removes any PII from emails. This overrides any analogous group configuration value. This is always true if HIPAA is enabled or unknown for an organization.
	DisableEmailPii bool `json:"disableEmailPii"`

	// Whether voicemail is enabled for this organization
	// Read Only: true
	Enabled *bool `json:"enabled"`

	// Whether to include the voicemail transcription in the notification email
	IncludeEmailTranscriptions bool `json:"includeEmailTranscriptions"`

	// Whether user should be prompted with a confirmation prompt when connecting to a Group Ring call
	InteractiveResponseRequired bool `json:"interactiveResponseRequired"`

	// The date the policy was last modified. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
	// Read Only: true
	// Format: date-time
	ModifiedDate strfmt.DateTime `json:"modifiedDate,omitempty"`

	// The configuration for user PINs to access their voicemail from a phone
	PinConfiguration *PINConfiguration `json:"pinConfiguration,omitempty"`

	// If this is true, a PIN is required when accessing a user's voicemail from a phone.
	PinRequired bool `json:"pinRequired"`

	// Whether email notifications are sent for new voicemails in the organization. If false, new voicemail email notifications are not be sent for the organization overriding any user or group setting.
	SendEmailNotifications bool `json:"sendEmailNotifications"`

	// The extension for voicemail retrieval.  The default value is *86.
	VoicemailExtension string `json:"voicemailExtension,omitempty"`
}

// Validate validates this voicemail organization policy
func (m *VoicemailOrganizationPolicy) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateModifiedDate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePinConfiguration(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *VoicemailOrganizationPolicy) validateModifiedDate(formats strfmt.Registry) error {

	if swag.IsZero(m.ModifiedDate) { // not required
		return nil
	}

	if err := validate.FormatOf("modifiedDate", "body", "date-time", m.ModifiedDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *VoicemailOrganizationPolicy) validatePinConfiguration(formats strfmt.Registry) error {

	if swag.IsZero(m.PinConfiguration) { // not required
		return nil
	}

	if m.PinConfiguration != nil {
		if err := m.PinConfiguration.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("pinConfiguration")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *VoicemailOrganizationPolicy) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VoicemailOrganizationPolicy) UnmarshalBinary(b []byte) error {
	var res VoicemailOrganizationPolicy
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
