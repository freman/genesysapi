// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DocumentBodyListBlock document body list block
//
// swagger:model DocumentBodyListBlock
type DocumentBodyListBlock struct {

	// The list of items for an OrderedList or an UnorderedList.
	// Required: true
	Blocks []*DocumentContentBlock `json:"blocks"`

	// The type of the list block.
	// Required: true
	// Enum: [ListItem]
	Type *string `json:"type"`
}

// Validate validates this document body list block
func (m *DocumentBodyListBlock) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBlocks(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DocumentBodyListBlock) validateBlocks(formats strfmt.Registry) error {

	if err := validate.Required("blocks", "body", m.Blocks); err != nil {
		return err
	}

	for i := 0; i < len(m.Blocks); i++ {
		if swag.IsZero(m.Blocks[i]) { // not required
			continue
		}

		if m.Blocks[i] != nil {
			if err := m.Blocks[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("blocks" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

var documentBodyListBlockTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["ListItem"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		documentBodyListBlockTypeTypePropEnum = append(documentBodyListBlockTypeTypePropEnum, v)
	}
}

const (

	// DocumentBodyListBlockTypeListItem captures enum value "ListItem"
	DocumentBodyListBlockTypeListItem string = "ListItem"
)

// prop value enum
func (m *DocumentBodyListBlock) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, documentBodyListBlockTypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *DocumentBodyListBlock) validateType(formats strfmt.Registry) error {

	if err := validate.Required("type", "body", m.Type); err != nil {
		return err
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", *m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DocumentBodyListBlock) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DocumentBodyListBlock) UnmarshalBinary(b []byte) error {
	var res DocumentBodyListBlock
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
