// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ContactColumnTimeZone contact column time zone
//
// swagger:model ContactColumnTimeZone
type ContactColumnTimeZone struct {

	// Column Type will be either PHONE or ZIP
	// Read Only: true
	// Enum: [PHONE ZIP]
	ColumnType string `json:"columnType,omitempty"`

	// Time zone that the column matched to. Time zones are represented as a string of the zone name as found in the IANA time zone database. For example: UTC, Etc/UTC, or Europe/London
	TimeZone string `json:"timeZone,omitempty"`
}

// Validate validates this contact column time zone
func (m *ContactColumnTimeZone) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateColumnType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var contactColumnTimeZoneTypeColumnTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["PHONE","ZIP"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		contactColumnTimeZoneTypeColumnTypePropEnum = append(contactColumnTimeZoneTypeColumnTypePropEnum, v)
	}
}

const (

	// ContactColumnTimeZoneColumnTypePHONE captures enum value "PHONE"
	ContactColumnTimeZoneColumnTypePHONE string = "PHONE"

	// ContactColumnTimeZoneColumnTypeZIP captures enum value "ZIP"
	ContactColumnTimeZoneColumnTypeZIP string = "ZIP"
)

// prop value enum
func (m *ContactColumnTimeZone) validateColumnTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, contactColumnTimeZoneTypeColumnTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *ContactColumnTimeZone) validateColumnType(formats strfmt.Registry) error {

	if swag.IsZero(m.ColumnType) { // not required
		return nil
	}

	// value enum
	if err := m.validateColumnTypeEnum("columnType", "body", m.ColumnType); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ContactColumnTimeZone) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ContactColumnTimeZone) UnmarshalBinary(b []byte) error {
	var res ContactColumnTimeZone
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
