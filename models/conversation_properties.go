// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ConversationProperties conversation properties
//
// swagger:model ConversationProperties
type ConversationProperties struct {

	// Indicates filtering for WrapUpNotes
	FilterWrapUpNotes bool `json:"filterWrapUpNotes,omitempty"`

	// Indicates filtering for Acd
	IsAcd bool `json:"isAcd,omitempty"`

	// Indicates filtering for active
	IsActive bool `json:"isActive,omitempty"`

	// Indicates filtering for Cobrowse
	IsCobrowse bool `json:"isCobrowse,omitempty"`

	// Indicates filtering for flagged
	IsFlagged bool `json:"isFlagged,omitempty"`

	// Indicates filtering for monitored
	IsMonitored bool `json:"isMonitored,omitempty"`

	// Indicates filtering for Preferred Agent Routing
	IsPreferred bool `json:"isPreferred,omitempty"`

	// Indicates filtering for screenshare
	IsScreenshare bool `json:"isScreenshare,omitempty"`

	// Indicates filtering for Voice mail
	IsVoicemail bool `json:"isVoicemail,omitempty"`

	// Indicates filtering for waiting
	IsWaiting bool `json:"isWaiting,omitempty"`

	// Indicates comparison operation, TRUE indicates filters will use AND logic, FALSE indicates OR logic
	MatchAll bool `json:"matchAll,omitempty"`
}

// Validate validates this conversation properties
func (m *ConversationProperties) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ConversationProperties) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ConversationProperties) UnmarshalBinary(b []byte) error {
	var res ConversationProperties
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
