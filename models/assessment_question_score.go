// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AssessmentQuestionScore assessment question score
//
// swagger:model AssessmentQuestionScore
type AssessmentQuestionScore struct {

	// The ID of the selected answer
	AnswerID string `json:"answerId,omitempty"`

	// Comments provided for the answer
	Comments string `json:"comments,omitempty"`

	// True if this was a failed Kill question
	// Read Only: true
	FailedKillQuestion *bool `json:"failedKillQuestion"`

	// Answer for free text answer type
	FreeTextAnswer string `json:"freeTextAnswer,omitempty"`

	// True if this question was marked as NA
	MarkedNA bool `json:"markedNA"`

	// The ID of the question
	// Required: true
	QuestionID *string `json:"questionId"`

	// The score received for this question
	// Read Only: true
	Score int32 `json:"score,omitempty"`
}

// Validate validates this assessment question score
func (m *AssessmentQuestionScore) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateQuestionID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AssessmentQuestionScore) validateQuestionID(formats strfmt.Registry) error {

	if err := validate.Required("questionId", "body", m.QuestionID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AssessmentQuestionScore) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AssessmentQuestionScore) UnmarshalBinary(b []byte) error {
	var res AssessmentQuestionScore
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
