// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DocumentAudit document audit
//
// swagger:model DocumentAudit
type DocumentAudit struct {

	// action
	// Enum: [CREATE READ UPDATE DELETE DOWNLOAD VIEW UPLOAD SAVE MOVE COPY ADD REMOVE RECEIVE CONVERT FAX CREATE_COVERPAGE USER_ADD USER_REMOVE MEMBER_ADD MEMBER_REMOVE MEMBER_UPDATE TAG_ADD TAG_REMOVE TAG_UPDATE ATTRIBUTE_ADD ATTRIBUTE_REMOVE ATTRIBUTE_UPDATE ATTRIBUTE_GROUP_INSTANCE_ADD ATTRIBUTE_GROUP_INSTANCE_REMOVE ATTRIBUTE_GROUP_INSTANCE_UPDATE INDEX_SAVE INDEX_DELETE INDEX_CREATE FILE_SAVE FILE_DELETE FILE_READ THUMBNAIL_CREATE TEXT_EXTRACT SHARE_ADD SHARE_REMOVE VERSION_CREATE]
	Action string `json:"action,omitempty"`

	// action context
	// Enum: [CREATE READ UPDATE DELETE DOWNLOAD VIEW UPLOAD SAVE MOVE COPY ADD REMOVE RECEIVE CONVERT FAX CREATE_COVERPAGE USER_ADD USER_REMOVE MEMBER_ADD MEMBER_REMOVE MEMBER_UPDATE TAG_ADD TAG_REMOVE TAG_UPDATE ATTRIBUTE_ADD ATTRIBUTE_REMOVE ATTRIBUTE_UPDATE ATTRIBUTE_GROUP_INSTANCE_ADD ATTRIBUTE_GROUP_INSTANCE_REMOVE ATTRIBUTE_GROUP_INSTANCE_UPDATE INDEX_SAVE INDEX_DELETE INDEX_CREATE FILE_SAVE FILE_DELETE FILE_READ THUMBNAIL_CREATE TEXT_EXTRACT SHARE_ADD SHARE_REMOVE VERSION_CREATE]
	ActionContext string `json:"actionContext,omitempty"`

	// application
	Application string `json:"application,omitempty"`

	// changes
	Changes []*AuditChange `json:"changes"`

	// entity
	Entity *AuditEntityReference `json:"entity,omitempty"`

	// The globally unique identifier for the object.
	// Read Only: true
	ID string `json:"id,omitempty"`

	// level
	// Enum: [USER SYSTEM]
	Level string `json:"level,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// The URI for this object
	// Read Only: true
	// Format: uri
	SelfURI strfmt.URI `json:"selfUri,omitempty"`

	// service name
	ServiceName string `json:"serviceName,omitempty"`

	// status
	// Enum: [SUCCESS FAILURE WARNING]
	Status string `json:"status,omitempty"`

	// Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ
	// Format: date-time
	Timestamp strfmt.DateTime `json:"timestamp,omitempty"`

	// transaction Id
	TransactionID string `json:"transactionId,omitempty"`

	// transaction initiator
	TransactionInitiator bool `json:"transactionInitiator,omitempty"`

	// user
	User *DomainEntityRef `json:"user,omitempty"`

	// workspace
	Workspace *DomainEntityRef `json:"workspace,omitempty"`
}

// Validate validates this document audit
func (m *DocumentAudit) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAction(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateActionContext(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateChanges(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEntity(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLevel(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSelfURI(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTimestamp(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUser(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateWorkspace(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var documentAuditTypeActionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["CREATE","READ","UPDATE","DELETE","DOWNLOAD","VIEW","UPLOAD","SAVE","MOVE","COPY","ADD","REMOVE","RECEIVE","CONVERT","FAX","CREATE_COVERPAGE","USER_ADD","USER_REMOVE","MEMBER_ADD","MEMBER_REMOVE","MEMBER_UPDATE","TAG_ADD","TAG_REMOVE","TAG_UPDATE","ATTRIBUTE_ADD","ATTRIBUTE_REMOVE","ATTRIBUTE_UPDATE","ATTRIBUTE_GROUP_INSTANCE_ADD","ATTRIBUTE_GROUP_INSTANCE_REMOVE","ATTRIBUTE_GROUP_INSTANCE_UPDATE","INDEX_SAVE","INDEX_DELETE","INDEX_CREATE","FILE_SAVE","FILE_DELETE","FILE_READ","THUMBNAIL_CREATE","TEXT_EXTRACT","SHARE_ADD","SHARE_REMOVE","VERSION_CREATE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		documentAuditTypeActionPropEnum = append(documentAuditTypeActionPropEnum, v)
	}
}

const (

	// DocumentAuditActionCREATE captures enum value "CREATE"
	DocumentAuditActionCREATE string = "CREATE"

	// DocumentAuditActionREAD captures enum value "READ"
	DocumentAuditActionREAD string = "READ"

	// DocumentAuditActionUPDATE captures enum value "UPDATE"
	DocumentAuditActionUPDATE string = "UPDATE"

	// DocumentAuditActionDELETE captures enum value "DELETE"
	DocumentAuditActionDELETE string = "DELETE"

	// DocumentAuditActionDOWNLOAD captures enum value "DOWNLOAD"
	DocumentAuditActionDOWNLOAD string = "DOWNLOAD"

	// DocumentAuditActionVIEW captures enum value "VIEW"
	DocumentAuditActionVIEW string = "VIEW"

	// DocumentAuditActionUPLOAD captures enum value "UPLOAD"
	DocumentAuditActionUPLOAD string = "UPLOAD"

	// DocumentAuditActionSAVE captures enum value "SAVE"
	DocumentAuditActionSAVE string = "SAVE"

	// DocumentAuditActionMOVE captures enum value "MOVE"
	DocumentAuditActionMOVE string = "MOVE"

	// DocumentAuditActionCOPY captures enum value "COPY"
	DocumentAuditActionCOPY string = "COPY"

	// DocumentAuditActionADD captures enum value "ADD"
	DocumentAuditActionADD string = "ADD"

	// DocumentAuditActionREMOVE captures enum value "REMOVE"
	DocumentAuditActionREMOVE string = "REMOVE"

	// DocumentAuditActionRECEIVE captures enum value "RECEIVE"
	DocumentAuditActionRECEIVE string = "RECEIVE"

	// DocumentAuditActionCONVERT captures enum value "CONVERT"
	DocumentAuditActionCONVERT string = "CONVERT"

	// DocumentAuditActionFAX captures enum value "FAX"
	DocumentAuditActionFAX string = "FAX"

	// DocumentAuditActionCREATECOVERPAGE captures enum value "CREATE_COVERPAGE"
	DocumentAuditActionCREATECOVERPAGE string = "CREATE_COVERPAGE"

	// DocumentAuditActionUSERADD captures enum value "USER_ADD"
	DocumentAuditActionUSERADD string = "USER_ADD"

	// DocumentAuditActionUSERREMOVE captures enum value "USER_REMOVE"
	DocumentAuditActionUSERREMOVE string = "USER_REMOVE"

	// DocumentAuditActionMEMBERADD captures enum value "MEMBER_ADD"
	DocumentAuditActionMEMBERADD string = "MEMBER_ADD"

	// DocumentAuditActionMEMBERREMOVE captures enum value "MEMBER_REMOVE"
	DocumentAuditActionMEMBERREMOVE string = "MEMBER_REMOVE"

	// DocumentAuditActionMEMBERUPDATE captures enum value "MEMBER_UPDATE"
	DocumentAuditActionMEMBERUPDATE string = "MEMBER_UPDATE"

	// DocumentAuditActionTAGADD captures enum value "TAG_ADD"
	DocumentAuditActionTAGADD string = "TAG_ADD"

	// DocumentAuditActionTAGREMOVE captures enum value "TAG_REMOVE"
	DocumentAuditActionTAGREMOVE string = "TAG_REMOVE"

	// DocumentAuditActionTAGUPDATE captures enum value "TAG_UPDATE"
	DocumentAuditActionTAGUPDATE string = "TAG_UPDATE"

	// DocumentAuditActionATTRIBUTEADD captures enum value "ATTRIBUTE_ADD"
	DocumentAuditActionATTRIBUTEADD string = "ATTRIBUTE_ADD"

	// DocumentAuditActionATTRIBUTEREMOVE captures enum value "ATTRIBUTE_REMOVE"
	DocumentAuditActionATTRIBUTEREMOVE string = "ATTRIBUTE_REMOVE"

	// DocumentAuditActionATTRIBUTEUPDATE captures enum value "ATTRIBUTE_UPDATE"
	DocumentAuditActionATTRIBUTEUPDATE string = "ATTRIBUTE_UPDATE"

	// DocumentAuditActionATTRIBUTEGROUPINSTANCEADD captures enum value "ATTRIBUTE_GROUP_INSTANCE_ADD"
	DocumentAuditActionATTRIBUTEGROUPINSTANCEADD string = "ATTRIBUTE_GROUP_INSTANCE_ADD"

	// DocumentAuditActionATTRIBUTEGROUPINSTANCEREMOVE captures enum value "ATTRIBUTE_GROUP_INSTANCE_REMOVE"
	DocumentAuditActionATTRIBUTEGROUPINSTANCEREMOVE string = "ATTRIBUTE_GROUP_INSTANCE_REMOVE"

	// DocumentAuditActionATTRIBUTEGROUPINSTANCEUPDATE captures enum value "ATTRIBUTE_GROUP_INSTANCE_UPDATE"
	DocumentAuditActionATTRIBUTEGROUPINSTANCEUPDATE string = "ATTRIBUTE_GROUP_INSTANCE_UPDATE"

	// DocumentAuditActionINDEXSAVE captures enum value "INDEX_SAVE"
	DocumentAuditActionINDEXSAVE string = "INDEX_SAVE"

	// DocumentAuditActionINDEXDELETE captures enum value "INDEX_DELETE"
	DocumentAuditActionINDEXDELETE string = "INDEX_DELETE"

	// DocumentAuditActionINDEXCREATE captures enum value "INDEX_CREATE"
	DocumentAuditActionINDEXCREATE string = "INDEX_CREATE"

	// DocumentAuditActionFILESAVE captures enum value "FILE_SAVE"
	DocumentAuditActionFILESAVE string = "FILE_SAVE"

	// DocumentAuditActionFILEDELETE captures enum value "FILE_DELETE"
	DocumentAuditActionFILEDELETE string = "FILE_DELETE"

	// DocumentAuditActionFILEREAD captures enum value "FILE_READ"
	DocumentAuditActionFILEREAD string = "FILE_READ"

	// DocumentAuditActionTHUMBNAILCREATE captures enum value "THUMBNAIL_CREATE"
	DocumentAuditActionTHUMBNAILCREATE string = "THUMBNAIL_CREATE"

	// DocumentAuditActionTEXTEXTRACT captures enum value "TEXT_EXTRACT"
	DocumentAuditActionTEXTEXTRACT string = "TEXT_EXTRACT"

	// DocumentAuditActionSHAREADD captures enum value "SHARE_ADD"
	DocumentAuditActionSHAREADD string = "SHARE_ADD"

	// DocumentAuditActionSHAREREMOVE captures enum value "SHARE_REMOVE"
	DocumentAuditActionSHAREREMOVE string = "SHARE_REMOVE"

	// DocumentAuditActionVERSIONCREATE captures enum value "VERSION_CREATE"
	DocumentAuditActionVERSIONCREATE string = "VERSION_CREATE"
)

// prop value enum
func (m *DocumentAudit) validateActionEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, documentAuditTypeActionPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *DocumentAudit) validateAction(formats strfmt.Registry) error {

	if swag.IsZero(m.Action) { // not required
		return nil
	}

	// value enum
	if err := m.validateActionEnum("action", "body", m.Action); err != nil {
		return err
	}

	return nil
}

var documentAuditTypeActionContextPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["CREATE","READ","UPDATE","DELETE","DOWNLOAD","VIEW","UPLOAD","SAVE","MOVE","COPY","ADD","REMOVE","RECEIVE","CONVERT","FAX","CREATE_COVERPAGE","USER_ADD","USER_REMOVE","MEMBER_ADD","MEMBER_REMOVE","MEMBER_UPDATE","TAG_ADD","TAG_REMOVE","TAG_UPDATE","ATTRIBUTE_ADD","ATTRIBUTE_REMOVE","ATTRIBUTE_UPDATE","ATTRIBUTE_GROUP_INSTANCE_ADD","ATTRIBUTE_GROUP_INSTANCE_REMOVE","ATTRIBUTE_GROUP_INSTANCE_UPDATE","INDEX_SAVE","INDEX_DELETE","INDEX_CREATE","FILE_SAVE","FILE_DELETE","FILE_READ","THUMBNAIL_CREATE","TEXT_EXTRACT","SHARE_ADD","SHARE_REMOVE","VERSION_CREATE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		documentAuditTypeActionContextPropEnum = append(documentAuditTypeActionContextPropEnum, v)
	}
}

const (

	// DocumentAuditActionContextCREATE captures enum value "CREATE"
	DocumentAuditActionContextCREATE string = "CREATE"

	// DocumentAuditActionContextREAD captures enum value "READ"
	DocumentAuditActionContextREAD string = "READ"

	// DocumentAuditActionContextUPDATE captures enum value "UPDATE"
	DocumentAuditActionContextUPDATE string = "UPDATE"

	// DocumentAuditActionContextDELETE captures enum value "DELETE"
	DocumentAuditActionContextDELETE string = "DELETE"

	// DocumentAuditActionContextDOWNLOAD captures enum value "DOWNLOAD"
	DocumentAuditActionContextDOWNLOAD string = "DOWNLOAD"

	// DocumentAuditActionContextVIEW captures enum value "VIEW"
	DocumentAuditActionContextVIEW string = "VIEW"

	// DocumentAuditActionContextUPLOAD captures enum value "UPLOAD"
	DocumentAuditActionContextUPLOAD string = "UPLOAD"

	// DocumentAuditActionContextSAVE captures enum value "SAVE"
	DocumentAuditActionContextSAVE string = "SAVE"

	// DocumentAuditActionContextMOVE captures enum value "MOVE"
	DocumentAuditActionContextMOVE string = "MOVE"

	// DocumentAuditActionContextCOPY captures enum value "COPY"
	DocumentAuditActionContextCOPY string = "COPY"

	// DocumentAuditActionContextADD captures enum value "ADD"
	DocumentAuditActionContextADD string = "ADD"

	// DocumentAuditActionContextREMOVE captures enum value "REMOVE"
	DocumentAuditActionContextREMOVE string = "REMOVE"

	// DocumentAuditActionContextRECEIVE captures enum value "RECEIVE"
	DocumentAuditActionContextRECEIVE string = "RECEIVE"

	// DocumentAuditActionContextCONVERT captures enum value "CONVERT"
	DocumentAuditActionContextCONVERT string = "CONVERT"

	// DocumentAuditActionContextFAX captures enum value "FAX"
	DocumentAuditActionContextFAX string = "FAX"

	// DocumentAuditActionContextCREATECOVERPAGE captures enum value "CREATE_COVERPAGE"
	DocumentAuditActionContextCREATECOVERPAGE string = "CREATE_COVERPAGE"

	// DocumentAuditActionContextUSERADD captures enum value "USER_ADD"
	DocumentAuditActionContextUSERADD string = "USER_ADD"

	// DocumentAuditActionContextUSERREMOVE captures enum value "USER_REMOVE"
	DocumentAuditActionContextUSERREMOVE string = "USER_REMOVE"

	// DocumentAuditActionContextMEMBERADD captures enum value "MEMBER_ADD"
	DocumentAuditActionContextMEMBERADD string = "MEMBER_ADD"

	// DocumentAuditActionContextMEMBERREMOVE captures enum value "MEMBER_REMOVE"
	DocumentAuditActionContextMEMBERREMOVE string = "MEMBER_REMOVE"

	// DocumentAuditActionContextMEMBERUPDATE captures enum value "MEMBER_UPDATE"
	DocumentAuditActionContextMEMBERUPDATE string = "MEMBER_UPDATE"

	// DocumentAuditActionContextTAGADD captures enum value "TAG_ADD"
	DocumentAuditActionContextTAGADD string = "TAG_ADD"

	// DocumentAuditActionContextTAGREMOVE captures enum value "TAG_REMOVE"
	DocumentAuditActionContextTAGREMOVE string = "TAG_REMOVE"

	// DocumentAuditActionContextTAGUPDATE captures enum value "TAG_UPDATE"
	DocumentAuditActionContextTAGUPDATE string = "TAG_UPDATE"

	// DocumentAuditActionContextATTRIBUTEADD captures enum value "ATTRIBUTE_ADD"
	DocumentAuditActionContextATTRIBUTEADD string = "ATTRIBUTE_ADD"

	// DocumentAuditActionContextATTRIBUTEREMOVE captures enum value "ATTRIBUTE_REMOVE"
	DocumentAuditActionContextATTRIBUTEREMOVE string = "ATTRIBUTE_REMOVE"

	// DocumentAuditActionContextATTRIBUTEUPDATE captures enum value "ATTRIBUTE_UPDATE"
	DocumentAuditActionContextATTRIBUTEUPDATE string = "ATTRIBUTE_UPDATE"

	// DocumentAuditActionContextATTRIBUTEGROUPINSTANCEADD captures enum value "ATTRIBUTE_GROUP_INSTANCE_ADD"
	DocumentAuditActionContextATTRIBUTEGROUPINSTANCEADD string = "ATTRIBUTE_GROUP_INSTANCE_ADD"

	// DocumentAuditActionContextATTRIBUTEGROUPINSTANCEREMOVE captures enum value "ATTRIBUTE_GROUP_INSTANCE_REMOVE"
	DocumentAuditActionContextATTRIBUTEGROUPINSTANCEREMOVE string = "ATTRIBUTE_GROUP_INSTANCE_REMOVE"

	// DocumentAuditActionContextATTRIBUTEGROUPINSTANCEUPDATE captures enum value "ATTRIBUTE_GROUP_INSTANCE_UPDATE"
	DocumentAuditActionContextATTRIBUTEGROUPINSTANCEUPDATE string = "ATTRIBUTE_GROUP_INSTANCE_UPDATE"

	// DocumentAuditActionContextINDEXSAVE captures enum value "INDEX_SAVE"
	DocumentAuditActionContextINDEXSAVE string = "INDEX_SAVE"

	// DocumentAuditActionContextINDEXDELETE captures enum value "INDEX_DELETE"
	DocumentAuditActionContextINDEXDELETE string = "INDEX_DELETE"

	// DocumentAuditActionContextINDEXCREATE captures enum value "INDEX_CREATE"
	DocumentAuditActionContextINDEXCREATE string = "INDEX_CREATE"

	// DocumentAuditActionContextFILESAVE captures enum value "FILE_SAVE"
	DocumentAuditActionContextFILESAVE string = "FILE_SAVE"

	// DocumentAuditActionContextFILEDELETE captures enum value "FILE_DELETE"
	DocumentAuditActionContextFILEDELETE string = "FILE_DELETE"

	// DocumentAuditActionContextFILEREAD captures enum value "FILE_READ"
	DocumentAuditActionContextFILEREAD string = "FILE_READ"

	// DocumentAuditActionContextTHUMBNAILCREATE captures enum value "THUMBNAIL_CREATE"
	DocumentAuditActionContextTHUMBNAILCREATE string = "THUMBNAIL_CREATE"

	// DocumentAuditActionContextTEXTEXTRACT captures enum value "TEXT_EXTRACT"
	DocumentAuditActionContextTEXTEXTRACT string = "TEXT_EXTRACT"

	// DocumentAuditActionContextSHAREADD captures enum value "SHARE_ADD"
	DocumentAuditActionContextSHAREADD string = "SHARE_ADD"

	// DocumentAuditActionContextSHAREREMOVE captures enum value "SHARE_REMOVE"
	DocumentAuditActionContextSHAREREMOVE string = "SHARE_REMOVE"

	// DocumentAuditActionContextVERSIONCREATE captures enum value "VERSION_CREATE"
	DocumentAuditActionContextVERSIONCREATE string = "VERSION_CREATE"
)

// prop value enum
func (m *DocumentAudit) validateActionContextEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, documentAuditTypeActionContextPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *DocumentAudit) validateActionContext(formats strfmt.Registry) error {

	if swag.IsZero(m.ActionContext) { // not required
		return nil
	}

	// value enum
	if err := m.validateActionContextEnum("actionContext", "body", m.ActionContext); err != nil {
		return err
	}

	return nil
}

func (m *DocumentAudit) validateChanges(formats strfmt.Registry) error {

	if swag.IsZero(m.Changes) { // not required
		return nil
	}

	for i := 0; i < len(m.Changes); i++ {
		if swag.IsZero(m.Changes[i]) { // not required
			continue
		}

		if m.Changes[i] != nil {
			if err := m.Changes[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("changes" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *DocumentAudit) validateEntity(formats strfmt.Registry) error {

	if swag.IsZero(m.Entity) { // not required
		return nil
	}

	if m.Entity != nil {
		if err := m.Entity.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("entity")
			}
			return err
		}
	}

	return nil
}

var documentAuditTypeLevelPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["USER","SYSTEM"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		documentAuditTypeLevelPropEnum = append(documentAuditTypeLevelPropEnum, v)
	}
}

const (

	// DocumentAuditLevelUSER captures enum value "USER"
	DocumentAuditLevelUSER string = "USER"

	// DocumentAuditLevelSYSTEM captures enum value "SYSTEM"
	DocumentAuditLevelSYSTEM string = "SYSTEM"
)

// prop value enum
func (m *DocumentAudit) validateLevelEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, documentAuditTypeLevelPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *DocumentAudit) validateLevel(formats strfmt.Registry) error {

	if swag.IsZero(m.Level) { // not required
		return nil
	}

	// value enum
	if err := m.validateLevelEnum("level", "body", m.Level); err != nil {
		return err
	}

	return nil
}

func (m *DocumentAudit) validateSelfURI(formats strfmt.Registry) error {

	if swag.IsZero(m.SelfURI) { // not required
		return nil
	}

	if err := validate.FormatOf("selfUri", "body", "uri", m.SelfURI.String(), formats); err != nil {
		return err
	}

	return nil
}

var documentAuditTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["SUCCESS","FAILURE","WARNING"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		documentAuditTypeStatusPropEnum = append(documentAuditTypeStatusPropEnum, v)
	}
}

const (

	// DocumentAuditStatusSUCCESS captures enum value "SUCCESS"
	DocumentAuditStatusSUCCESS string = "SUCCESS"

	// DocumentAuditStatusFAILURE captures enum value "FAILURE"
	DocumentAuditStatusFAILURE string = "FAILURE"

	// DocumentAuditStatusWARNING captures enum value "WARNING"
	DocumentAuditStatusWARNING string = "WARNING"
)

// prop value enum
func (m *DocumentAudit) validateStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, documentAuditTypeStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *DocumentAudit) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.Status) { // not required
		return nil
	}

	// value enum
	if err := m.validateStatusEnum("status", "body", m.Status); err != nil {
		return err
	}

	return nil
}

func (m *DocumentAudit) validateTimestamp(formats strfmt.Registry) error {

	if swag.IsZero(m.Timestamp) { // not required
		return nil
	}

	if err := validate.FormatOf("timestamp", "body", "date-time", m.Timestamp.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *DocumentAudit) validateUser(formats strfmt.Registry) error {

	if swag.IsZero(m.User) { // not required
		return nil
	}

	if m.User != nil {
		if err := m.User.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("user")
			}
			return err
		}
	}

	return nil
}

func (m *DocumentAudit) validateWorkspace(formats strfmt.Registry) error {

	if swag.IsZero(m.Workspace) { // not required
		return nil
	}

	if m.Workspace != nil {
		if err := m.Workspace.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("workspace")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DocumentAudit) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DocumentAudit) UnmarshalBinary(b []byte) error {
	var res DocumentAudit
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
