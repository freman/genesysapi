// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UCIntegration UC Integration UI configuration data
//
// swagger:model UCIntegration
type UCIntegration struct {

	// badgeIcon
	// Required: true
	// Read Only: true
	BadgeIcons map[string]UCIcon `json:"badgeIcons"`

	// i10n
	// Required: true
	// Read Only: true
	I10n map[string]UCI10n `json:"i10n"`

	// icon
	// Required: true
	// Read Only: true
	Icon *UCIcon `json:"icon"`

	// The globally unique identifier for the object.
	// Read Only: true
	ID string `json:"id,omitempty"`

	// integrationPresenceType
	// Required: true
	// Read Only: true
	// Enum: [MicrosoftTeams ZoomPhone EightByEight]
	IntegrationPresenceSource string `json:"integrationPresenceSource"`

	// name
	Name string `json:"name,omitempty"`

	// pbxPermission
	// Required: true
	// Read Only: true
	PbxPermission string `json:"pbxPermission"`

	// The URI for this object
	// Read Only: true
	// Format: uri
	SelfURI strfmt.URI `json:"selfUri,omitempty"`

	// ucIntegrationKey
	// Required: true
	// Read Only: true
	UcIntegrationKey string `json:"ucIntegrationKey"`
}

// Validate validates this u c integration
func (m *UCIntegration) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBadgeIcons(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateI10n(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIcon(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIntegrationPresenceSource(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePbxPermission(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSelfURI(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUcIntegrationKey(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UCIntegration) validateBadgeIcons(formats strfmt.Registry) error {

	for k := range m.BadgeIcons {

		if err := validate.Required("badgeIcons"+"."+k, "body", m.BadgeIcons[k]); err != nil {
			return err
		}
		if val, ok := m.BadgeIcons[k]; ok {
			if err := val.Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}

func (m *UCIntegration) validateI10n(formats strfmt.Registry) error {

	for k := range m.I10n {

		if err := validate.Required("i10n"+"."+k, "body", m.I10n[k]); err != nil {
			return err
		}
		if val, ok := m.I10n[k]; ok {
			if err := val.Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}

func (m *UCIntegration) validateIcon(formats strfmt.Registry) error {

	if err := validate.Required("icon", "body", m.Icon); err != nil {
		return err
	}

	if m.Icon != nil {
		if err := m.Icon.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("icon")
			}
			return err
		}
	}

	return nil
}

var uCIntegrationTypeIntegrationPresenceSourcePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["MicrosoftTeams","ZoomPhone","EightByEight"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		uCIntegrationTypeIntegrationPresenceSourcePropEnum = append(uCIntegrationTypeIntegrationPresenceSourcePropEnum, v)
	}
}

const (

	// UCIntegrationIntegrationPresenceSourceMicrosoftTeams captures enum value "MicrosoftTeams"
	UCIntegrationIntegrationPresenceSourceMicrosoftTeams string = "MicrosoftTeams"

	// UCIntegrationIntegrationPresenceSourceZoomPhone captures enum value "ZoomPhone"
	UCIntegrationIntegrationPresenceSourceZoomPhone string = "ZoomPhone"

	// UCIntegrationIntegrationPresenceSourceEightByEight captures enum value "EightByEight"
	UCIntegrationIntegrationPresenceSourceEightByEight string = "EightByEight"
)

// prop value enum
func (m *UCIntegration) validateIntegrationPresenceSourceEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, uCIntegrationTypeIntegrationPresenceSourcePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *UCIntegration) validateIntegrationPresenceSource(formats strfmt.Registry) error {

	if err := validate.RequiredString("integrationPresenceSource", "body", string(m.IntegrationPresenceSource)); err != nil {
		return err
	}

	// value enum
	if err := m.validateIntegrationPresenceSourceEnum("integrationPresenceSource", "body", m.IntegrationPresenceSource); err != nil {
		return err
	}

	return nil
}

func (m *UCIntegration) validatePbxPermission(formats strfmt.Registry) error {

	if err := validate.RequiredString("pbxPermission", "body", string(m.PbxPermission)); err != nil {
		return err
	}

	return nil
}

func (m *UCIntegration) validateSelfURI(formats strfmt.Registry) error {

	if swag.IsZero(m.SelfURI) { // not required
		return nil
	}

	if err := validate.FormatOf("selfUri", "body", "uri", m.SelfURI.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *UCIntegration) validateUcIntegrationKey(formats strfmt.Registry) error {

	if err := validate.RequiredString("ucIntegrationKey", "body", string(m.UcIntegrationKey)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *UCIntegration) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UCIntegration) UnmarshalBinary(b []byte) error {
	var res UCIntegration
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
