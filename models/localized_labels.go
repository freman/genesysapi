// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// LocalizedLabels Contains localized labels used in messenger apps
//
// swagger:model LocalizedLabels
type LocalizedLabels struct {

	// Contains localized label key used in messenger homescreen
	// Enum: [MessengerHomeHeaderTitle MessengerHomeHeaderSubTitle]
	Key string `json:"key,omitempty"`

	// Contains localized label value used in messenger homescreen
	Value string `json:"value,omitempty"`
}

// Validate validates this localized labels
func (m *LocalizedLabels) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateKey(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var localizedLabelsTypeKeyPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["MessengerHomeHeaderTitle","MessengerHomeHeaderSubTitle"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		localizedLabelsTypeKeyPropEnum = append(localizedLabelsTypeKeyPropEnum, v)
	}
}

const (

	// LocalizedLabelsKeyMessengerHomeHeaderTitle captures enum value "MessengerHomeHeaderTitle"
	LocalizedLabelsKeyMessengerHomeHeaderTitle string = "MessengerHomeHeaderTitle"

	// LocalizedLabelsKeyMessengerHomeHeaderSubTitle captures enum value "MessengerHomeHeaderSubTitle"
	LocalizedLabelsKeyMessengerHomeHeaderSubTitle string = "MessengerHomeHeaderSubTitle"
)

// prop value enum
func (m *LocalizedLabels) validateKeyEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, localizedLabelsTypeKeyPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *LocalizedLabels) validateKey(formats strfmt.Registry) error {

	if swag.IsZero(m.Key) { // not required
		return nil
	}

	// value enum
	if err := m.validateKeyEnum("key", "body", m.Key); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *LocalizedLabels) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LocalizedLabels) UnmarshalBinary(b []byte) error {
	var res LocalizedLabels
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
