// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateSecureSession create secure session
//
// swagger:model CreateSecureSession
type CreateSecureSession struct {

	// if true, disconnect the agent after creating the session
	Disconnect bool `json:"disconnect"`

	// the flow id to execute in the secure session
	// Required: true
	FlowID *string `json:"flowId"`

	// requesting participant
	SourceParticipantID string `json:"sourceParticipantId,omitempty"`

	// user data for the secure session
	// Required: true
	UserData *string `json:"userData"`
}

// Validate validates this create secure session
func (m *CreateSecureSession) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFlowID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUserData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateSecureSession) validateFlowID(formats strfmt.Registry) error {

	if err := validate.Required("flowId", "body", m.FlowID); err != nil {
		return err
	}

	return nil
}

func (m *CreateSecureSession) validateUserData(formats strfmt.Registry) error {

	if err := validate.Required("userData", "body", m.UserData); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CreateSecureSession) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateSecureSession) UnmarshalBinary(b []byte) error {
	var res CreateSecureSession
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
