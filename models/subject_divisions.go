// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SubjectDivisions subject divisions
//
// swagger:model SubjectDivisions
type SubjectDivisions struct {

	// A collection of division IDs to associate with the given subjects
	// Required: true
	DivisionIds []string `json:"divisionIds"`

	// A collection of subject IDs to associate with the given divisions
	// Required: true
	SubjectIds []string `json:"subjectIds"`
}

// Validate validates this subject divisions
func (m *SubjectDivisions) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDivisionIds(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSubjectIds(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SubjectDivisions) validateDivisionIds(formats strfmt.Registry) error {

	if err := validate.Required("divisionIds", "body", m.DivisionIds); err != nil {
		return err
	}

	return nil
}

func (m *SubjectDivisions) validateSubjectIds(formats strfmt.Registry) error {

	if err := validate.Required("subjectIds", "body", m.SubjectIds); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this subject divisions based on context it is used
func (m *SubjectDivisions) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SubjectDivisions) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SubjectDivisions) UnmarshalBinary(b []byte) error {
	var res SubjectDivisions
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
