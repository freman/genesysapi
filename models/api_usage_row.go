// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// APIUsageRow Api usage row
//
// swagger:model ApiUsageRow
type APIUsageRow struct {

	// Client Id associated with this query result
	ClientID string `json:"clientId,omitempty"`

	// Client Name associated with this query result
	ClientName string `json:"clientName,omitempty"`

	// Date of requests, based on granularity. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
	// Format: date-time
	Date strfmt.DateTime `json:"date,omitempty"`

	// HTTP Method associated with this query result
	HTTPMethod string `json:"httpMethod,omitempty"`

	// Organization Id associated with this query result
	OrganizationID string `json:"organizationId,omitempty"`

	// Total number of requests
	Requests int64 `json:"requests,omitempty"`

	// Number of requests resulting in a 2xx HTTP status code
	Status200 int64 `json:"status200,omitempty"`

	// Number of requests resulting in a 3xx HTTP status code
	Status300 int64 `json:"status300,omitempty"`

	// Number of requests resulting in a 4xx HTTP status code
	Status400 int64 `json:"status400,omitempty"`

	// Number of requests resulting in a 429 HTTP status code, this is a subset of the count returned with status400
	Status429 int64 `json:"status429,omitempty"`

	// Number of requests resulting in a 5xx HTTP status code
	Status500 int64 `json:"status500,omitempty"`

	// Template Uri associated with this query result
	TemplateURI string `json:"templateUri,omitempty"`

	// User Id associated with this query result
	UserID string `json:"userId,omitempty"`
}

// Validate validates this Api usage row
func (m *APIUsageRow) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *APIUsageRow) validateDate(formats strfmt.Registry) error {

	if swag.IsZero(m.Date) { // not required
		return nil
	}

	if err := validate.FormatOf("date", "body", "date-time", m.Date.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *APIUsageRow) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *APIUsageRow) UnmarshalBinary(b []byte) error {
	var res APIUsageRow
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
