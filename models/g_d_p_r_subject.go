// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GDPRSubject g d p r subject
//
// swagger:model GDPRSubject
type GDPRSubject struct {

	// addresses
	Addresses []string `json:"addresses"`

	// dialer contact Id
	DialerContactID *DialerContactID `json:"dialerContactId,omitempty"`

	// email addresses
	EmailAddresses []string `json:"emailAddresses"`

	// external contact Id
	ExternalContactID string `json:"externalContactId,omitempty"`

	// journey customer
	JourneyCustomer *GDPRJourneyCustomer `json:"journeyCustomer,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// phone numbers
	PhoneNumbers []string `json:"phoneNumbers"`

	// social handle
	SocialHandle *SocialHandle `json:"socialHandle,omitempty"`

	// user Id
	UserID string `json:"userId,omitempty"`
}

// Validate validates this g d p r subject
func (m *GDPRSubject) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDialerContactID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateJourneyCustomer(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSocialHandle(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GDPRSubject) validateDialerContactID(formats strfmt.Registry) error {

	if swag.IsZero(m.DialerContactID) { // not required
		return nil
	}

	if m.DialerContactID != nil {
		if err := m.DialerContactID.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("dialerContactId")
			}
			return err
		}
	}

	return nil
}

func (m *GDPRSubject) validateJourneyCustomer(formats strfmt.Registry) error {

	if swag.IsZero(m.JourneyCustomer) { // not required
		return nil
	}

	if m.JourneyCustomer != nil {
		if err := m.JourneyCustomer.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("journeyCustomer")
			}
			return err
		}
	}

	return nil
}

func (m *GDPRSubject) validateSocialHandle(formats strfmt.Registry) error {

	if swag.IsZero(m.SocialHandle) { // not required
		return nil
	}

	if m.SocialHandle != nil {
		if err := m.SocialHandle.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("socialHandle")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GDPRSubject) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GDPRSubject) UnmarshalBinary(b []byte) error {
	var res GDPRSubject
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
