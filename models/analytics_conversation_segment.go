// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AnalyticsConversationSegment analytics conversation segment
//
// swagger:model AnalyticsConversationSegment
type AnalyticsConversationSegment struct {

	// audio muted
	AudioMuted bool `json:"audioMuted"`

	// Indicates whether the segment was a conference
	Conference bool `json:"conference"`

	// destination conversation Id
	DestinationConversationID string `json:"destinationConversationId,omitempty"`

	// destination session Id
	DestinationSessionID string `json:"destinationSessionId,omitempty"`

	// A description of the event that disconnected the segment
	// Enum: [endpoint client system transfer error peer other spam transportFailure conferenceTransfer consultTransfer forwardTransfer timeout noAnswerTransfer notAvailableTransfer uncallable]
	DisconnectType string `json:"disconnectType,omitempty"`

	// error code
	ErrorCode string `json:"errorCode,omitempty"`

	// group Id
	GroupID string `json:"groupId,omitempty"`

	// properties
	Properties []*AnalyticsProperty `json:"properties"`

	// q850 response codes
	Q850ResponseCodes []int64 `json:"q850ResponseCodes"`

	// Queue identifier
	QueueID string `json:"queueId,omitempty"`

	// A unique identifier for the language requested for an interaction.
	RequestedLanguageID string `json:"requestedLanguageId,omitempty"`

	// requested routing skill ids
	// Unique: true
	RequestedRoutingSkillIds []string `json:"requestedRoutingSkillIds"`

	// requested routing user ids
	RequestedRoutingUserIds []string `json:"requestedRoutingUserIds"`

	// scored agents
	ScoredAgents []*AnalyticsScoredAgent `json:"scoredAgents"`

	// The timestamp when this segment ended. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
	// Format: date-time
	SegmentEnd strfmt.DateTime `json:"segmentEnd,omitempty"`

	// The timestamp when this segment began. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
	// Format: date-time
	SegmentStart strfmt.DateTime `json:"segmentStart,omitempty"`

	// The activity taking place for the participant in the segment
	// Enum: [unknown alert system delay hold interact ivr dialing wrapup voicemail scheduled contacting transmitting converting uploading sharing callback]
	SegmentType string `json:"segmentType,omitempty"`

	// sip response codes
	SipResponseCodes []int64 `json:"sipResponseCodes"`

	// source conversation Id
	SourceConversationID string `json:"sourceConversationId,omitempty"`

	// source session Id
	SourceSessionID string `json:"sourceSessionId,omitempty"`

	// subject
	Subject string `json:"subject,omitempty"`

	// video muted
	VideoMuted bool `json:"videoMuted"`

	// Wrapup Code id
	WrapUpCode string `json:"wrapUpCode,omitempty"`

	// Note entered by an agent during after-call work
	WrapUpNote string `json:"wrapUpNote,omitempty"`

	// wrap up tags
	WrapUpTags []string `json:"wrapUpTags"`
}

// Validate validates this analytics conversation segment
func (m *AnalyticsConversationSegment) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDisconnectType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateProperties(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRequestedRoutingSkillIds(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateScoredAgents(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSegmentEnd(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSegmentStart(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSegmentType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var analyticsConversationSegmentTypeDisconnectTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["endpoint","client","system","transfer","error","peer","other","spam","transportFailure","conferenceTransfer","consultTransfer","forwardTransfer","timeout","noAnswerTransfer","notAvailableTransfer","uncallable"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		analyticsConversationSegmentTypeDisconnectTypePropEnum = append(analyticsConversationSegmentTypeDisconnectTypePropEnum, v)
	}
}

const (

	// AnalyticsConversationSegmentDisconnectTypeEndpoint captures enum value "endpoint"
	AnalyticsConversationSegmentDisconnectTypeEndpoint string = "endpoint"

	// AnalyticsConversationSegmentDisconnectTypeClient captures enum value "client"
	AnalyticsConversationSegmentDisconnectTypeClient string = "client"

	// AnalyticsConversationSegmentDisconnectTypeSystem captures enum value "system"
	AnalyticsConversationSegmentDisconnectTypeSystem string = "system"

	// AnalyticsConversationSegmentDisconnectTypeTransfer captures enum value "transfer"
	AnalyticsConversationSegmentDisconnectTypeTransfer string = "transfer"

	// AnalyticsConversationSegmentDisconnectTypeError captures enum value "error"
	AnalyticsConversationSegmentDisconnectTypeError string = "error"

	// AnalyticsConversationSegmentDisconnectTypePeer captures enum value "peer"
	AnalyticsConversationSegmentDisconnectTypePeer string = "peer"

	// AnalyticsConversationSegmentDisconnectTypeOther captures enum value "other"
	AnalyticsConversationSegmentDisconnectTypeOther string = "other"

	// AnalyticsConversationSegmentDisconnectTypeSpam captures enum value "spam"
	AnalyticsConversationSegmentDisconnectTypeSpam string = "spam"

	// AnalyticsConversationSegmentDisconnectTypeTransportFailure captures enum value "transportFailure"
	AnalyticsConversationSegmentDisconnectTypeTransportFailure string = "transportFailure"

	// AnalyticsConversationSegmentDisconnectTypeConferenceTransfer captures enum value "conferenceTransfer"
	AnalyticsConversationSegmentDisconnectTypeConferenceTransfer string = "conferenceTransfer"

	// AnalyticsConversationSegmentDisconnectTypeConsultTransfer captures enum value "consultTransfer"
	AnalyticsConversationSegmentDisconnectTypeConsultTransfer string = "consultTransfer"

	// AnalyticsConversationSegmentDisconnectTypeForwardTransfer captures enum value "forwardTransfer"
	AnalyticsConversationSegmentDisconnectTypeForwardTransfer string = "forwardTransfer"

	// AnalyticsConversationSegmentDisconnectTypeTimeout captures enum value "timeout"
	AnalyticsConversationSegmentDisconnectTypeTimeout string = "timeout"

	// AnalyticsConversationSegmentDisconnectTypeNoAnswerTransfer captures enum value "noAnswerTransfer"
	AnalyticsConversationSegmentDisconnectTypeNoAnswerTransfer string = "noAnswerTransfer"

	// AnalyticsConversationSegmentDisconnectTypeNotAvailableTransfer captures enum value "notAvailableTransfer"
	AnalyticsConversationSegmentDisconnectTypeNotAvailableTransfer string = "notAvailableTransfer"

	// AnalyticsConversationSegmentDisconnectTypeUncallable captures enum value "uncallable"
	AnalyticsConversationSegmentDisconnectTypeUncallable string = "uncallable"
)

// prop value enum
func (m *AnalyticsConversationSegment) validateDisconnectTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, analyticsConversationSegmentTypeDisconnectTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *AnalyticsConversationSegment) validateDisconnectType(formats strfmt.Registry) error {

	if swag.IsZero(m.DisconnectType) { // not required
		return nil
	}

	// value enum
	if err := m.validateDisconnectTypeEnum("disconnectType", "body", m.DisconnectType); err != nil {
		return err
	}

	return nil
}

func (m *AnalyticsConversationSegment) validateProperties(formats strfmt.Registry) error {

	if swag.IsZero(m.Properties) { // not required
		return nil
	}

	for i := 0; i < len(m.Properties); i++ {
		if swag.IsZero(m.Properties[i]) { // not required
			continue
		}

		if m.Properties[i] != nil {
			if err := m.Properties[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("properties" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *AnalyticsConversationSegment) validateRequestedRoutingSkillIds(formats strfmt.Registry) error {

	if swag.IsZero(m.RequestedRoutingSkillIds) { // not required
		return nil
	}

	if err := validate.UniqueItems("requestedRoutingSkillIds", "body", m.RequestedRoutingSkillIds); err != nil {
		return err
	}

	return nil
}

func (m *AnalyticsConversationSegment) validateScoredAgents(formats strfmt.Registry) error {

	if swag.IsZero(m.ScoredAgents) { // not required
		return nil
	}

	for i := 0; i < len(m.ScoredAgents); i++ {
		if swag.IsZero(m.ScoredAgents[i]) { // not required
			continue
		}

		if m.ScoredAgents[i] != nil {
			if err := m.ScoredAgents[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("scoredAgents" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *AnalyticsConversationSegment) validateSegmentEnd(formats strfmt.Registry) error {

	if swag.IsZero(m.SegmentEnd) { // not required
		return nil
	}

	if err := validate.FormatOf("segmentEnd", "body", "date-time", m.SegmentEnd.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *AnalyticsConversationSegment) validateSegmentStart(formats strfmt.Registry) error {

	if swag.IsZero(m.SegmentStart) { // not required
		return nil
	}

	if err := validate.FormatOf("segmentStart", "body", "date-time", m.SegmentStart.String(), formats); err != nil {
		return err
	}

	return nil
}

var analyticsConversationSegmentTypeSegmentTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["unknown","alert","system","delay","hold","interact","ivr","dialing","wrapup","voicemail","scheduled","contacting","transmitting","converting","uploading","sharing","callback"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		analyticsConversationSegmentTypeSegmentTypePropEnum = append(analyticsConversationSegmentTypeSegmentTypePropEnum, v)
	}
}

const (

	// AnalyticsConversationSegmentSegmentTypeUnknown captures enum value "unknown"
	AnalyticsConversationSegmentSegmentTypeUnknown string = "unknown"

	// AnalyticsConversationSegmentSegmentTypeAlert captures enum value "alert"
	AnalyticsConversationSegmentSegmentTypeAlert string = "alert"

	// AnalyticsConversationSegmentSegmentTypeSystem captures enum value "system"
	AnalyticsConversationSegmentSegmentTypeSystem string = "system"

	// AnalyticsConversationSegmentSegmentTypeDelay captures enum value "delay"
	AnalyticsConversationSegmentSegmentTypeDelay string = "delay"

	// AnalyticsConversationSegmentSegmentTypeHold captures enum value "hold"
	AnalyticsConversationSegmentSegmentTypeHold string = "hold"

	// AnalyticsConversationSegmentSegmentTypeInteract captures enum value "interact"
	AnalyticsConversationSegmentSegmentTypeInteract string = "interact"

	// AnalyticsConversationSegmentSegmentTypeIvr captures enum value "ivr"
	AnalyticsConversationSegmentSegmentTypeIvr string = "ivr"

	// AnalyticsConversationSegmentSegmentTypeDialing captures enum value "dialing"
	AnalyticsConversationSegmentSegmentTypeDialing string = "dialing"

	// AnalyticsConversationSegmentSegmentTypeWrapup captures enum value "wrapup"
	AnalyticsConversationSegmentSegmentTypeWrapup string = "wrapup"

	// AnalyticsConversationSegmentSegmentTypeVoicemail captures enum value "voicemail"
	AnalyticsConversationSegmentSegmentTypeVoicemail string = "voicemail"

	// AnalyticsConversationSegmentSegmentTypeScheduled captures enum value "scheduled"
	AnalyticsConversationSegmentSegmentTypeScheduled string = "scheduled"

	// AnalyticsConversationSegmentSegmentTypeContacting captures enum value "contacting"
	AnalyticsConversationSegmentSegmentTypeContacting string = "contacting"

	// AnalyticsConversationSegmentSegmentTypeTransmitting captures enum value "transmitting"
	AnalyticsConversationSegmentSegmentTypeTransmitting string = "transmitting"

	// AnalyticsConversationSegmentSegmentTypeConverting captures enum value "converting"
	AnalyticsConversationSegmentSegmentTypeConverting string = "converting"

	// AnalyticsConversationSegmentSegmentTypeUploading captures enum value "uploading"
	AnalyticsConversationSegmentSegmentTypeUploading string = "uploading"

	// AnalyticsConversationSegmentSegmentTypeSharing captures enum value "sharing"
	AnalyticsConversationSegmentSegmentTypeSharing string = "sharing"

	// AnalyticsConversationSegmentSegmentTypeCallback captures enum value "callback"
	AnalyticsConversationSegmentSegmentTypeCallback string = "callback"
)

// prop value enum
func (m *AnalyticsConversationSegment) validateSegmentTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, analyticsConversationSegmentTypeSegmentTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *AnalyticsConversationSegment) validateSegmentType(formats strfmt.Registry) error {

	if swag.IsZero(m.SegmentType) { // not required
		return nil
	}

	// value enum
	if err := m.validateSegmentTypeEnum("segmentType", "body", m.SegmentType); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AnalyticsConversationSegment) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AnalyticsConversationSegment) UnmarshalBinary(b []byte) error {
	var res AnalyticsConversationSegment
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
