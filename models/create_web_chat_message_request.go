// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateWebChatMessageRequest create web chat message request
//
// swagger:model CreateWebChatMessageRequest
type CreateWebChatMessageRequest struct {

	// The message body. Note that message bodies are limited to 4,000 characters.
	// Required: true
	Body *string `json:"body"`

	// The purpose of the message within the conversation, such as a standard text entry versus a greeting.
	// Enum: [standard notice member-join member-leave media-request]
	BodyType string `json:"bodyType,omitempty"`
}

// Validate validates this create web chat message request
func (m *CreateWebChatMessageRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBody(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateBodyType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateWebChatMessageRequest) validateBody(formats strfmt.Registry) error {

	if err := validate.Required("body", "body", m.Body); err != nil {
		return err
	}

	return nil
}

var createWebChatMessageRequestTypeBodyTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["standard","notice","member-join","member-leave","media-request"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		createWebChatMessageRequestTypeBodyTypePropEnum = append(createWebChatMessageRequestTypeBodyTypePropEnum, v)
	}
}

const (

	// CreateWebChatMessageRequestBodyTypeStandard captures enum value "standard"
	CreateWebChatMessageRequestBodyTypeStandard string = "standard"

	// CreateWebChatMessageRequestBodyTypeNotice captures enum value "notice"
	CreateWebChatMessageRequestBodyTypeNotice string = "notice"

	// CreateWebChatMessageRequestBodyTypeMemberJoin captures enum value "member-join"
	CreateWebChatMessageRequestBodyTypeMemberJoin string = "member-join"

	// CreateWebChatMessageRequestBodyTypeMemberLeave captures enum value "member-leave"
	CreateWebChatMessageRequestBodyTypeMemberLeave string = "member-leave"

	// CreateWebChatMessageRequestBodyTypeMediaRequest captures enum value "media-request"
	CreateWebChatMessageRequestBodyTypeMediaRequest string = "media-request"
)

// prop value enum
func (m *CreateWebChatMessageRequest) validateBodyTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, createWebChatMessageRequestTypeBodyTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *CreateWebChatMessageRequest) validateBodyType(formats strfmt.Registry) error {

	if swag.IsZero(m.BodyType) { // not required
		return nil
	}

	// value enum
	if err := m.validateBodyTypeEnum("bodyType", "body", m.BodyType); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CreateWebChatMessageRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateWebChatMessageRequest) UnmarshalBinary(b []byte) error {
	var res CreateWebChatMessageRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
