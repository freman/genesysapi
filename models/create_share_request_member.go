// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateShareRequestMember create share request member
//
// swagger:model CreateShareRequestMember
type CreateShareRequestMember struct {

	// member
	Member *MemberEntity `json:"member,omitempty"`

	// member type
	// Enum: [USER GROUP PUBLIC]
	MemberType string `json:"memberType,omitempty"`
}

// Validate validates this create share request member
func (m *CreateShareRequestMember) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMember(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMemberType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateShareRequestMember) validateMember(formats strfmt.Registry) error {
	if swag.IsZero(m.Member) { // not required
		return nil
	}

	if m.Member != nil {
		if err := m.Member.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("member")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("member")
			}
			return err
		}
	}

	return nil
}

var createShareRequestMemberTypeMemberTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["USER","GROUP","PUBLIC"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		createShareRequestMemberTypeMemberTypePropEnum = append(createShareRequestMemberTypeMemberTypePropEnum, v)
	}
}

const (

	// CreateShareRequestMemberMemberTypeUSER captures enum value "USER"
	CreateShareRequestMemberMemberTypeUSER string = "USER"

	// CreateShareRequestMemberMemberTypeGROUP captures enum value "GROUP"
	CreateShareRequestMemberMemberTypeGROUP string = "GROUP"

	// CreateShareRequestMemberMemberTypePUBLIC captures enum value "PUBLIC"
	CreateShareRequestMemberMemberTypePUBLIC string = "PUBLIC"
)

// prop value enum
func (m *CreateShareRequestMember) validateMemberTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, createShareRequestMemberTypeMemberTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *CreateShareRequestMember) validateMemberType(formats strfmt.Registry) error {
	if swag.IsZero(m.MemberType) { // not required
		return nil
	}

	// value enum
	if err := m.validateMemberTypeEnum("memberType", "body", m.MemberType); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this create share request member based on the context it is used
func (m *CreateShareRequestMember) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateMember(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateShareRequestMember) contextValidateMember(ctx context.Context, formats strfmt.Registry) error {

	if m.Member != nil {
		if err := m.Member.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("member")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("member")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CreateShareRequestMember) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateShareRequestMember) UnmarshalBinary(b []byte) error {
	var res CreateShareRequestMember
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
