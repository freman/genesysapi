// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateBenefitAssessmentRequest create benefit assessment request
//
// swagger:model CreateBenefitAssessmentRequest
type CreateBenefitAssessmentRequest struct {

	// The list of queue ids that are to be assessed for Predictive Routing benefit.
	// Required: true
	QueueIds []string `json:"queueIds"`
}

// Validate validates this create benefit assessment request
func (m *CreateBenefitAssessmentRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateQueueIds(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateBenefitAssessmentRequest) validateQueueIds(formats strfmt.Registry) error {

	if err := validate.Required("queueIds", "body", m.QueueIds); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this create benefit assessment request based on context it is used
func (m *CreateBenefitAssessmentRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CreateBenefitAssessmentRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateBenefitAssessmentRequest) UnmarshalBinary(b []byte) error {
	var res CreateBenefitAssessmentRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
