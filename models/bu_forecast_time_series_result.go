// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// BuForecastTimeSeriesResult bu forecast time series result
//
// swagger:model BuForecastTimeSeriesResult
type BuForecastTimeSeriesResult struct {

	// The forecasting type in this forecast result
	// Enum: [LongTerm ShortTerm]
	ForecastType string `json:"forecastType,omitempty"`

	// The forecasting method that was used for this metric
	// Enum: [AutoRegressiveIntegratedMovingAverage MovingAverage SingleExponentialSmoothing RandomWalk DecompositionUsingAdditiveSeasonality DecompositionUsingMultiplicativeSeasonality HoltWintersAdditiveSeasonality HoltWintersAdditiveSeasonalityWithDampedTrend HoltWintersMultiplicativeSeasonality HoltWintersMultiplicativeSeasonalityWithDampedTrend DampedLinearExponentialSmoothing DoubleExponentialSmoothing DoubleMovingAverage LinearExponentialSmoothing LinearWeightedMovingAverage PointEstimateUsingDampedLinearExponentialSmoothing PointEstimateUsingDoubleExponentialSmoothing PointEstimateUsingLatestWeek PointEstimateUsingLinearExponentialSmoothing PointEstimateUsingWeightedAverage CurveFit MultiLinearRegression DynamicHarmonicRegression Theta Ensemble Other]
	ForecastingMethod string `json:"forecastingMethod,omitempty"`

	// The metric this result applies to
	// Enum: [Offered AverageHandleTimeSeconds]
	Metric string `json:"metric,omitempty"`
}

// Validate validates this bu forecast time series result
func (m *BuForecastTimeSeriesResult) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateForecastType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateForecastingMethod(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMetric(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var buForecastTimeSeriesResultTypeForecastTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["LongTerm","ShortTerm"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		buForecastTimeSeriesResultTypeForecastTypePropEnum = append(buForecastTimeSeriesResultTypeForecastTypePropEnum, v)
	}
}

const (

	// BuForecastTimeSeriesResultForecastTypeLongTerm captures enum value "LongTerm"
	BuForecastTimeSeriesResultForecastTypeLongTerm string = "LongTerm"

	// BuForecastTimeSeriesResultForecastTypeShortTerm captures enum value "ShortTerm"
	BuForecastTimeSeriesResultForecastTypeShortTerm string = "ShortTerm"
)

// prop value enum
func (m *BuForecastTimeSeriesResult) validateForecastTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, buForecastTimeSeriesResultTypeForecastTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *BuForecastTimeSeriesResult) validateForecastType(formats strfmt.Registry) error {
	if swag.IsZero(m.ForecastType) { // not required
		return nil
	}

	// value enum
	if err := m.validateForecastTypeEnum("forecastType", "body", m.ForecastType); err != nil {
		return err
	}

	return nil
}

var buForecastTimeSeriesResultTypeForecastingMethodPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["AutoRegressiveIntegratedMovingAverage","MovingAverage","SingleExponentialSmoothing","RandomWalk","DecompositionUsingAdditiveSeasonality","DecompositionUsingMultiplicativeSeasonality","HoltWintersAdditiveSeasonality","HoltWintersAdditiveSeasonalityWithDampedTrend","HoltWintersMultiplicativeSeasonality","HoltWintersMultiplicativeSeasonalityWithDampedTrend","DampedLinearExponentialSmoothing","DoubleExponentialSmoothing","DoubleMovingAverage","LinearExponentialSmoothing","LinearWeightedMovingAverage","PointEstimateUsingDampedLinearExponentialSmoothing","PointEstimateUsingDoubleExponentialSmoothing","PointEstimateUsingLatestWeek","PointEstimateUsingLinearExponentialSmoothing","PointEstimateUsingWeightedAverage","CurveFit","MultiLinearRegression","DynamicHarmonicRegression","Theta","Ensemble","Other"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		buForecastTimeSeriesResultTypeForecastingMethodPropEnum = append(buForecastTimeSeriesResultTypeForecastingMethodPropEnum, v)
	}
}

const (

	// BuForecastTimeSeriesResultForecastingMethodAutoRegressiveIntegratedMovingAverage captures enum value "AutoRegressiveIntegratedMovingAverage"
	BuForecastTimeSeriesResultForecastingMethodAutoRegressiveIntegratedMovingAverage string = "AutoRegressiveIntegratedMovingAverage"

	// BuForecastTimeSeriesResultForecastingMethodMovingAverage captures enum value "MovingAverage"
	BuForecastTimeSeriesResultForecastingMethodMovingAverage string = "MovingAverage"

	// BuForecastTimeSeriesResultForecastingMethodSingleExponentialSmoothing captures enum value "SingleExponentialSmoothing"
	BuForecastTimeSeriesResultForecastingMethodSingleExponentialSmoothing string = "SingleExponentialSmoothing"

	// BuForecastTimeSeriesResultForecastingMethodRandomWalk captures enum value "RandomWalk"
	BuForecastTimeSeriesResultForecastingMethodRandomWalk string = "RandomWalk"

	// BuForecastTimeSeriesResultForecastingMethodDecompositionUsingAdditiveSeasonality captures enum value "DecompositionUsingAdditiveSeasonality"
	BuForecastTimeSeriesResultForecastingMethodDecompositionUsingAdditiveSeasonality string = "DecompositionUsingAdditiveSeasonality"

	// BuForecastTimeSeriesResultForecastingMethodDecompositionUsingMultiplicativeSeasonality captures enum value "DecompositionUsingMultiplicativeSeasonality"
	BuForecastTimeSeriesResultForecastingMethodDecompositionUsingMultiplicativeSeasonality string = "DecompositionUsingMultiplicativeSeasonality"

	// BuForecastTimeSeriesResultForecastingMethodHoltWintersAdditiveSeasonality captures enum value "HoltWintersAdditiveSeasonality"
	BuForecastTimeSeriesResultForecastingMethodHoltWintersAdditiveSeasonality string = "HoltWintersAdditiveSeasonality"

	// BuForecastTimeSeriesResultForecastingMethodHoltWintersAdditiveSeasonalityWithDampedTrend captures enum value "HoltWintersAdditiveSeasonalityWithDampedTrend"
	BuForecastTimeSeriesResultForecastingMethodHoltWintersAdditiveSeasonalityWithDampedTrend string = "HoltWintersAdditiveSeasonalityWithDampedTrend"

	// BuForecastTimeSeriesResultForecastingMethodHoltWintersMultiplicativeSeasonality captures enum value "HoltWintersMultiplicativeSeasonality"
	BuForecastTimeSeriesResultForecastingMethodHoltWintersMultiplicativeSeasonality string = "HoltWintersMultiplicativeSeasonality"

	// BuForecastTimeSeriesResultForecastingMethodHoltWintersMultiplicativeSeasonalityWithDampedTrend captures enum value "HoltWintersMultiplicativeSeasonalityWithDampedTrend"
	BuForecastTimeSeriesResultForecastingMethodHoltWintersMultiplicativeSeasonalityWithDampedTrend string = "HoltWintersMultiplicativeSeasonalityWithDampedTrend"

	// BuForecastTimeSeriesResultForecastingMethodDampedLinearExponentialSmoothing captures enum value "DampedLinearExponentialSmoothing"
	BuForecastTimeSeriesResultForecastingMethodDampedLinearExponentialSmoothing string = "DampedLinearExponentialSmoothing"

	// BuForecastTimeSeriesResultForecastingMethodDoubleExponentialSmoothing captures enum value "DoubleExponentialSmoothing"
	BuForecastTimeSeriesResultForecastingMethodDoubleExponentialSmoothing string = "DoubleExponentialSmoothing"

	// BuForecastTimeSeriesResultForecastingMethodDoubleMovingAverage captures enum value "DoubleMovingAverage"
	BuForecastTimeSeriesResultForecastingMethodDoubleMovingAverage string = "DoubleMovingAverage"

	// BuForecastTimeSeriesResultForecastingMethodLinearExponentialSmoothing captures enum value "LinearExponentialSmoothing"
	BuForecastTimeSeriesResultForecastingMethodLinearExponentialSmoothing string = "LinearExponentialSmoothing"

	// BuForecastTimeSeriesResultForecastingMethodLinearWeightedMovingAverage captures enum value "LinearWeightedMovingAverage"
	BuForecastTimeSeriesResultForecastingMethodLinearWeightedMovingAverage string = "LinearWeightedMovingAverage"

	// BuForecastTimeSeriesResultForecastingMethodPointEstimateUsingDampedLinearExponentialSmoothing captures enum value "PointEstimateUsingDampedLinearExponentialSmoothing"
	BuForecastTimeSeriesResultForecastingMethodPointEstimateUsingDampedLinearExponentialSmoothing string = "PointEstimateUsingDampedLinearExponentialSmoothing"

	// BuForecastTimeSeriesResultForecastingMethodPointEstimateUsingDoubleExponentialSmoothing captures enum value "PointEstimateUsingDoubleExponentialSmoothing"
	BuForecastTimeSeriesResultForecastingMethodPointEstimateUsingDoubleExponentialSmoothing string = "PointEstimateUsingDoubleExponentialSmoothing"

	// BuForecastTimeSeriesResultForecastingMethodPointEstimateUsingLatestWeek captures enum value "PointEstimateUsingLatestWeek"
	BuForecastTimeSeriesResultForecastingMethodPointEstimateUsingLatestWeek string = "PointEstimateUsingLatestWeek"

	// BuForecastTimeSeriesResultForecastingMethodPointEstimateUsingLinearExponentialSmoothing captures enum value "PointEstimateUsingLinearExponentialSmoothing"
	BuForecastTimeSeriesResultForecastingMethodPointEstimateUsingLinearExponentialSmoothing string = "PointEstimateUsingLinearExponentialSmoothing"

	// BuForecastTimeSeriesResultForecastingMethodPointEstimateUsingWeightedAverage captures enum value "PointEstimateUsingWeightedAverage"
	BuForecastTimeSeriesResultForecastingMethodPointEstimateUsingWeightedAverage string = "PointEstimateUsingWeightedAverage"

	// BuForecastTimeSeriesResultForecastingMethodCurveFit captures enum value "CurveFit"
	BuForecastTimeSeriesResultForecastingMethodCurveFit string = "CurveFit"

	// BuForecastTimeSeriesResultForecastingMethodMultiLinearRegression captures enum value "MultiLinearRegression"
	BuForecastTimeSeriesResultForecastingMethodMultiLinearRegression string = "MultiLinearRegression"

	// BuForecastTimeSeriesResultForecastingMethodDynamicHarmonicRegression captures enum value "DynamicHarmonicRegression"
	BuForecastTimeSeriesResultForecastingMethodDynamicHarmonicRegression string = "DynamicHarmonicRegression"

	// BuForecastTimeSeriesResultForecastingMethodTheta captures enum value "Theta"
	BuForecastTimeSeriesResultForecastingMethodTheta string = "Theta"

	// BuForecastTimeSeriesResultForecastingMethodEnsemble captures enum value "Ensemble"
	BuForecastTimeSeriesResultForecastingMethodEnsemble string = "Ensemble"

	// BuForecastTimeSeriesResultForecastingMethodOther captures enum value "Other"
	BuForecastTimeSeriesResultForecastingMethodOther string = "Other"
)

// prop value enum
func (m *BuForecastTimeSeriesResult) validateForecastingMethodEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, buForecastTimeSeriesResultTypeForecastingMethodPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *BuForecastTimeSeriesResult) validateForecastingMethod(formats strfmt.Registry) error {
	if swag.IsZero(m.ForecastingMethod) { // not required
		return nil
	}

	// value enum
	if err := m.validateForecastingMethodEnum("forecastingMethod", "body", m.ForecastingMethod); err != nil {
		return err
	}

	return nil
}

var buForecastTimeSeriesResultTypeMetricPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Offered","AverageHandleTimeSeconds"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		buForecastTimeSeriesResultTypeMetricPropEnum = append(buForecastTimeSeriesResultTypeMetricPropEnum, v)
	}
}

const (

	// BuForecastTimeSeriesResultMetricOffered captures enum value "Offered"
	BuForecastTimeSeriesResultMetricOffered string = "Offered"

	// BuForecastTimeSeriesResultMetricAverageHandleTimeSeconds captures enum value "AverageHandleTimeSeconds"
	BuForecastTimeSeriesResultMetricAverageHandleTimeSeconds string = "AverageHandleTimeSeconds"
)

// prop value enum
func (m *BuForecastTimeSeriesResult) validateMetricEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, buForecastTimeSeriesResultTypeMetricPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *BuForecastTimeSeriesResult) validateMetric(formats strfmt.Registry) error {
	if swag.IsZero(m.Metric) { // not required
		return nil
	}

	// value enum
	if err := m.validateMetricEnum("metric", "body", m.Metric); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this bu forecast time series result based on context it is used
func (m *BuForecastTimeSeriesResult) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *BuForecastTimeSeriesResult) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BuForecastTimeSeriesResult) UnmarshalBinary(b []byte) error {
	var res BuForecastTimeSeriesResult
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
