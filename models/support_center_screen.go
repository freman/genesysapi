// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SupportCenterScreen support center screen
//
// swagger:model SupportCenterScreen
type SupportCenterScreen struct {

	// Module settings for the screen
	ModuleSettings []*SupportCenterModuleSetting `json:"moduleSettings"`

	// The type of the screen
	// Enum: [Home Category SearchResults Article]
	Type string `json:"type,omitempty"`
}

// Validate validates this support center screen
func (m *SupportCenterScreen) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateModuleSettings(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SupportCenterScreen) validateModuleSettings(formats strfmt.Registry) error {

	if swag.IsZero(m.ModuleSettings) { // not required
		return nil
	}

	for i := 0; i < len(m.ModuleSettings); i++ {
		if swag.IsZero(m.ModuleSettings[i]) { // not required
			continue
		}

		if m.ModuleSettings[i] != nil {
			if err := m.ModuleSettings[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("moduleSettings" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

var supportCenterScreenTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Home","Category","SearchResults","Article"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		supportCenterScreenTypeTypePropEnum = append(supportCenterScreenTypeTypePropEnum, v)
	}
}

const (

	// SupportCenterScreenTypeHome captures enum value "Home"
	SupportCenterScreenTypeHome string = "Home"

	// SupportCenterScreenTypeCategory captures enum value "Category"
	SupportCenterScreenTypeCategory string = "Category"

	// SupportCenterScreenTypeSearchResults captures enum value "SearchResults"
	SupportCenterScreenTypeSearchResults string = "SearchResults"

	// SupportCenterScreenTypeArticle captures enum value "Article"
	SupportCenterScreenTypeArticle string = "Article"
)

// prop value enum
func (m *SupportCenterScreen) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, supportCenterScreenTypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *SupportCenterScreen) validateType(formats strfmt.Registry) error {

	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SupportCenterScreen) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SupportCenterScreen) UnmarshalBinary(b []byte) error {
	var res SupportCenterScreen
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
