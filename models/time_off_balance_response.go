// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TimeOffBalanceResponse time off balance response
//
// swagger:model TimeOffBalanceResponse
type TimeOffBalanceResponse struct {

	// The ID for activity code associated with time off balance
	// Required: true
	ActivityCodeID *string `json:"activityCodeId"`

	// The list of available time off balance values in minutes for each day
	BalanceMinutesPerDay []int32 `json:"balanceMinutesPerDay"`

	// The ID of the time off type configured in HRIS integration
	// Required: true
	HrisTimeOffTypeID *string `json:"hrisTimeOffTypeId"`

	// The secondary ID of the time off type configured in HRIS integration
	HrisTimeOffTypeSecondaryID string `json:"hrisTimeOffTypeSecondaryId,omitempty"`

	// The Start date of the requested date range. The end date is determined by the size of interval list. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	// Format: date
	StartDate strfmt.Date `json:"startDate,omitempty"`
}

// Validate validates this time off balance response
func (m *TimeOffBalanceResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateActivityCodeID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateHrisTimeOffTypeID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStartDate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TimeOffBalanceResponse) validateActivityCodeID(formats strfmt.Registry) error {

	if err := validate.Required("activityCodeId", "body", m.ActivityCodeID); err != nil {
		return err
	}

	return nil
}

func (m *TimeOffBalanceResponse) validateHrisTimeOffTypeID(formats strfmt.Registry) error {

	if err := validate.Required("hrisTimeOffTypeId", "body", m.HrisTimeOffTypeID); err != nil {
		return err
	}

	return nil
}

func (m *TimeOffBalanceResponse) validateStartDate(formats strfmt.Registry) error {
	if swag.IsZero(m.StartDate) { // not required
		return nil
	}

	if err := validate.FormatOf("startDate", "body", "date", m.StartDate.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this time off balance response based on context it is used
func (m *TimeOffBalanceResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *TimeOffBalanceResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TimeOffBalanceResponse) UnmarshalBinary(b []byte) error {
	var res TimeOffBalanceResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
