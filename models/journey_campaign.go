// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// JourneyCampaign journey campaign
//
// swagger:model JourneyCampaign
type JourneyCampaign struct {

	// The click ID (unique number that is generated when a potential customer clicks on an affiliate link).
	ClickID string `json:"clickId,omitempty"`

	// Differentiate ads or links that point to the same URL (e.g. textlink).
	Content string `json:"content,omitempty"`

	// Identify a medium such as email or cost-per-click (e.g. CPC).
	Medium string `json:"medium,omitempty"`

	// Identify a specific product promotion or strategic campaign (e.g. 320banner).
	Name string `json:"name,omitempty"`

	// The ad network to which the click ID belongs.
	Network string `json:"network,omitempty"`

	// Identify a search engine, newsletter name, or other source (e.g. Google).
	Source string `json:"source,omitempty"`

	// Note the keywords for this ad (e.g. running+shoes).
	Term string `json:"term,omitempty"`
}

// Validate validates this journey campaign
func (m *JourneyCampaign) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this journey campaign based on context it is used
func (m *JourneyCampaign) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *JourneyCampaign) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *JourneyCampaign) UnmarshalBinary(b []byte) error {
	var res JourneyCampaign
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
