// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// BotSearchResponse bot search response
//
// swagger:model BotSearchResponse
type BotSearchResponse struct {

	// The provider of the bot
	// Required: true
	// Enum: [GenesysBotConnector GenesysDialogEngine AmazonLex GoogleDialogFlowES GoogleDialogFlowCX NuanceDlg GenesysBotFlow]
	BotType *string `json:"botType"`

	// The description of the bot
	Description string `json:"description,omitempty"`

	// The id of the bot
	// Required: true
	ID *string `json:"id"`

	// The name of the bot
	// Required: true
	Name *string `json:"name"`

	// The URI for this object
	// Read Only: true
	// Format: uri
	SelfURI strfmt.URI `json:"selfUri,omitempty"`
}

// Validate validates this bot search response
func (m *BotSearchResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBotType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSelfURI(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var botSearchResponseTypeBotTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["GenesysBotConnector","GenesysDialogEngine","AmazonLex","GoogleDialogFlowES","GoogleDialogFlowCX","NuanceDlg","GenesysBotFlow"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		botSearchResponseTypeBotTypePropEnum = append(botSearchResponseTypeBotTypePropEnum, v)
	}
}

const (

	// BotSearchResponseBotTypeGenesysBotConnector captures enum value "GenesysBotConnector"
	BotSearchResponseBotTypeGenesysBotConnector string = "GenesysBotConnector"

	// BotSearchResponseBotTypeGenesysDialogEngine captures enum value "GenesysDialogEngine"
	BotSearchResponseBotTypeGenesysDialogEngine string = "GenesysDialogEngine"

	// BotSearchResponseBotTypeAmazonLex captures enum value "AmazonLex"
	BotSearchResponseBotTypeAmazonLex string = "AmazonLex"

	// BotSearchResponseBotTypeGoogleDialogFlowES captures enum value "GoogleDialogFlowES"
	BotSearchResponseBotTypeGoogleDialogFlowES string = "GoogleDialogFlowES"

	// BotSearchResponseBotTypeGoogleDialogFlowCX captures enum value "GoogleDialogFlowCX"
	BotSearchResponseBotTypeGoogleDialogFlowCX string = "GoogleDialogFlowCX"

	// BotSearchResponseBotTypeNuanceDlg captures enum value "NuanceDlg"
	BotSearchResponseBotTypeNuanceDlg string = "NuanceDlg"

	// BotSearchResponseBotTypeGenesysBotFlow captures enum value "GenesysBotFlow"
	BotSearchResponseBotTypeGenesysBotFlow string = "GenesysBotFlow"
)

// prop value enum
func (m *BotSearchResponse) validateBotTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, botSearchResponseTypeBotTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *BotSearchResponse) validateBotType(formats strfmt.Registry) error {

	if err := validate.Required("botType", "body", m.BotType); err != nil {
		return err
	}

	// value enum
	if err := m.validateBotTypeEnum("botType", "body", *m.BotType); err != nil {
		return err
	}

	return nil
}

func (m *BotSearchResponse) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", m.ID); err != nil {
		return err
	}

	return nil
}

func (m *BotSearchResponse) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

func (m *BotSearchResponse) validateSelfURI(formats strfmt.Registry) error {

	if swag.IsZero(m.SelfURI) { // not required
		return nil
	}

	if err := validate.FormatOf("selfUri", "body", "uri", m.SelfURI.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *BotSearchResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BotSearchResponse) UnmarshalBinary(b []byte) error {
	var res BotSearchResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
