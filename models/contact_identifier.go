// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ContactIdentifier contact identifier
//
// swagger:model ContactIdentifier
type ContactIdentifier struct {

	// Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
	// Format: date-time
	DateCreated strfmt.DateTime `json:"dateCreated,omitempty"`

	// The type of this identifier
	// Required: true
	// Enum: [SocialLine SocialFacebook SocialTwitter SocialWhatsapp Email Phone Cookie]
	Type *string `json:"type"`

	// The string value of the identifier. Will vary in syntax by type.
	// Required: true
	Value *string `json:"value"`
}

// Validate validates this contact identifier
func (m *ContactIdentifier) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDateCreated(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateValue(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ContactIdentifier) validateDateCreated(formats strfmt.Registry) error {

	if swag.IsZero(m.DateCreated) { // not required
		return nil
	}

	if err := validate.FormatOf("dateCreated", "body", "date-time", m.DateCreated.String(), formats); err != nil {
		return err
	}

	return nil
}

var contactIdentifierTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["SocialLine","SocialFacebook","SocialTwitter","SocialWhatsapp","Email","Phone","Cookie"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		contactIdentifierTypeTypePropEnum = append(contactIdentifierTypeTypePropEnum, v)
	}
}

const (

	// ContactIdentifierTypeSocialLine captures enum value "SocialLine"
	ContactIdentifierTypeSocialLine string = "SocialLine"

	// ContactIdentifierTypeSocialFacebook captures enum value "SocialFacebook"
	ContactIdentifierTypeSocialFacebook string = "SocialFacebook"

	// ContactIdentifierTypeSocialTwitter captures enum value "SocialTwitter"
	ContactIdentifierTypeSocialTwitter string = "SocialTwitter"

	// ContactIdentifierTypeSocialWhatsapp captures enum value "SocialWhatsapp"
	ContactIdentifierTypeSocialWhatsapp string = "SocialWhatsapp"

	// ContactIdentifierTypeEmail captures enum value "Email"
	ContactIdentifierTypeEmail string = "Email"

	// ContactIdentifierTypePhone captures enum value "Phone"
	ContactIdentifierTypePhone string = "Phone"

	// ContactIdentifierTypeCookie captures enum value "Cookie"
	ContactIdentifierTypeCookie string = "Cookie"
)

// prop value enum
func (m *ContactIdentifier) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, contactIdentifierTypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *ContactIdentifier) validateType(formats strfmt.Registry) error {

	if err := validate.Required("type", "body", m.Type); err != nil {
		return err
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", *m.Type); err != nil {
		return err
	}

	return nil
}

func (m *ContactIdentifier) validateValue(formats strfmt.Registry) error {

	if err := validate.Required("value", "body", m.Value); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ContactIdentifier) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ContactIdentifier) UnmarshalBinary(b []byte) error {
	var res ContactIdentifier
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
