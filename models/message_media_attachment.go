// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MessageMediaAttachment message media attachment
//
// swagger:model MessageMediaAttachment
type MessageMediaAttachment struct {

	// The optional content length of the the media object, in bytes.
	ContentLength int64 `json:"contentLength,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// The optional internet media type of the the media object.If null then the media type should be dictated by the url.
	// Enum: [image/png image/jpeg image/gif]
	MediaType string `json:"mediaType,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// The location of the media, useful for retrieving it
	URL string `json:"url,omitempty"`
}

// Validate validates this message media attachment
func (m *MessageMediaAttachment) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMediaType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var messageMediaAttachmentTypeMediaTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["image/png","image/jpeg","image/gif"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		messageMediaAttachmentTypeMediaTypePropEnum = append(messageMediaAttachmentTypeMediaTypePropEnum, v)
	}
}

const (

	// MessageMediaAttachmentMediaTypeImagePng captures enum value "image/png"
	MessageMediaAttachmentMediaTypeImagePng string = "image/png"

	// MessageMediaAttachmentMediaTypeImageJpeg captures enum value "image/jpeg"
	MessageMediaAttachmentMediaTypeImageJpeg string = "image/jpeg"

	// MessageMediaAttachmentMediaTypeImageGif captures enum value "image/gif"
	MessageMediaAttachmentMediaTypeImageGif string = "image/gif"
)

// prop value enum
func (m *MessageMediaAttachment) validateMediaTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, messageMediaAttachmentTypeMediaTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *MessageMediaAttachment) validateMediaType(formats strfmt.Registry) error {

	if swag.IsZero(m.MediaType) { // not required
		return nil
	}

	// value enum
	if err := m.validateMediaTypeEnum("mediaType", "body", m.MediaType); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *MessageMediaAttachment) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MessageMediaAttachment) UnmarshalBinary(b []byte) error {
	var res MessageMediaAttachment
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
