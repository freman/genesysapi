// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TtsEngineEntity tts engine entity
//
// swagger:model TtsEngineEntity
type TtsEngineEntity struct {

	// The globally unique identifier for the object.
	// Read Only: true
	ID string `json:"id,omitempty"`

	// The TTS engine is the global default engine
	IsDefault bool `json:"isDefault"`

	// The TTS engine can be used in a secure call flow
	IsSecure bool `json:"isSecure"`

	// The set of languages the TTS engine supports
	// Required: true
	Languages []string `json:"languages"`

	// name
	Name string `json:"name,omitempty"`

	// The set of output formats the TTS engine can produce
	// Required: true
	OutputFormats []string `json:"outputFormats"`

	// The URI for this object
	// Read Only: true
	// Format: uri
	SelfURI strfmt.URI `json:"selfUri,omitempty"`

	// The set of voices the TTS engine supports
	Voices []*TtsVoiceEntity `json:"voices"`
}

// Validate validates this tts engine entity
func (m *TtsEngineEntity) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLanguages(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOutputFormats(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSelfURI(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateVoices(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TtsEngineEntity) validateLanguages(formats strfmt.Registry) error {

	if err := validate.Required("languages", "body", m.Languages); err != nil {
		return err
	}

	return nil
}

func (m *TtsEngineEntity) validateOutputFormats(formats strfmt.Registry) error {

	if err := validate.Required("outputFormats", "body", m.OutputFormats); err != nil {
		return err
	}

	return nil
}

func (m *TtsEngineEntity) validateSelfURI(formats strfmt.Registry) error {

	if swag.IsZero(m.SelfURI) { // not required
		return nil
	}

	if err := validate.FormatOf("selfUri", "body", "uri", m.SelfURI.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *TtsEngineEntity) validateVoices(formats strfmt.Registry) error {

	if swag.IsZero(m.Voices) { // not required
		return nil
	}

	for i := 0; i < len(m.Voices); i++ {
		if swag.IsZero(m.Voices[i]) { // not required
			continue
		}

		if m.Voices[i] != nil {
			if err := m.Voices[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("voices" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *TtsEngineEntity) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TtsEngineEntity) UnmarshalBinary(b []byte) error {
	var res TtsEngineEntity
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
