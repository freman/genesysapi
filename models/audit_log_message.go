// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AuditLogMessage audit log message
//
// swagger:model AuditLogMessage
type AuditLogMessage struct {

	// Action that took place.
	// Enum: [Create View Update Move Copy Delete DeleteAll Fax VersionCreate Download Upload MemberAdd MemberUpdate MemberRemove ShareAdd ShareRemove TagAdd TagRemove TagUpdate Read ReadAll Execute ApplyProtection RevokeProtection UpdateRetention Abandon Archive RestoreRequest RestoreComplete Promote Publish Unpublish Activate Checkin Checkout Deactivate Debug Save Revert Transcode Enable Disable Authorize Deauthorize Authenticate ChangePassword Revoke Export Append Recycle Open Approved Rejected Rollback ImplementingChange ChangeImplemented ImplementingRollback RollbackImplemented Write Purge Processed Remove Replace UpdateInService UpdateOutOfService Cycle Scale IpAllowlistClear AddPairingRole Add Verify Assign Unassign Reassign Reschedule Cancel SoftDelete HardDelete Reset Rotate Restore Unarchive EnableCapture DownloadCapture]
	Action string `json:"action,omitempty"`

	// Name of the application used to perform the audit's action
	Application string `json:"application,omitempty"`

	// Client associated with this audit message.
	Client *AddressableEntityRef `json:"client,omitempty"`

	// Additional context for this message.
	Context map[string]string `json:"context,omitempty"`

	// Entity that was impacted.
	Entity *DomainEntityRef `json:"entity,omitempty"`

	// List of entities that were changed and changes made to those entities.
	EntityChanges []*EntityChange `json:"entityChanges"`

	// Type of the entity that was impacted.
	// Enum: [AccessToken Action ActionDraft ActionMap ActionTemplate ActivityCode AdherenceExplanation AgentRoutingInfo AnalyticsReportingSettings Annotation Appointment Assignment AttemptLimits AuthOrganization AuthUser Bulk BulkActions BusinessUnit Calibration CallableTimeSet CallAnalysisResponseSet Campaign CampaignRule CampaignSchedule ChangeRequest ClickstreamSettings Configuration ConfigurationVersion ContactList ContactListFilter ContactSchema ConversationAttributes ConversationAccount ConversationDefaultSupportedContent ConversationPhoneNumber ConversationRecipient ConversationThreadingWindow Credential DashboardSettings DefaultPanelSettings DependencyTrackingBuild Deployment DID DIDPool DigitalRuleSet DirectoryGroup DNCList Document DynamicGroup DynamicSchema Edge EdgeGroup EdgeLog EdgeLogZip EdgePcaps EdgePreferences EdgeTraceLevel EmailCampaignSchedule EmergencyGroup EnterpriseAgreement Evaluation EvaluationForm EventType Exports Extension ExtensionPool ExternalMetricsData ExternalMetricsDefinition ExternalOrganizationSchema Feedback Flow FlowMilestone FlowOutcome Forecast GdprRequest Group HistoricalData InboundDomain InboundRoute InsightSettings Integration IVR KnowledgeBase KnowledgeCategory KnowledgeDocument KnowledgeDocumentVariation KnowledgeLabel KnowledgeSearchFeedback KnowledgeTraining Line LineBase Location ManagementUnit MaxOrgRoutingUtilizationCapacity MediaDiagnosticsTraceFile MessagingCampaign MessagingCampaignSchedule Metric Module NumberOrder NumberPlan OAuthClient OAuthClientAuthorization Organization OrganizationAuthorizationTrust OrganizationAuthorizationUserTrust OrganizationFeature OrganizationIntegrationsAccess OrganizationLimits OrganizationSettings OrphanedRecording OutboundDomain OutboundRoute Outcome Pcaps Phone PhoneBase PlanningGroup Policy Predictor Product Profile ProfileMembers Program Prompt PromptResource Public Queue Recording RecordingAnnotation RecordingKey RecordingKeyConfig RecordingSettings Response ResponseAsset Role RoleSettings Row RoutingTranscriptionSettings RoutingUtilizationTag Rule RuleSet Schedule ScheduledExports ScheduleGroup Schema ScreenRecording Segment SentimentFeedback Sequence SequenceSchedule ServiceGoalTemplate SessionType ShiftTrade Site SkillsGroup SpeechTextAnalyticsSettings Status SupportedContent SupportFile Survey SurveyForm Tag Team TimeOffLimit TimeOffPlan TimeOffRequest Topic TranscriptionSettings Trigger Trunk TrunkBase User UserLanguage UserPresence UserSkill VoicemailPolicy VoicemailUserPolicy Webhook Workbin Workitem WorkPlan WorkPlanRotation Workspace Worktype WrapupCode WrapUpCodeMapping Participant]
	EntityType string `json:"entityType,omitempty"`

	// Date and time of when the audit message was logged. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
	// Format: date-time
	EventDate strfmt.DateTime `json:"eventDate,omitempty"`

	// Id of the audit message.
	ID string `json:"id,omitempty"`

	// Id and action of the audit initiating the transaction
	InitiatingAction *InitiatingAction `json:"initiatingAction,omitempty"`

	// Level of this audit message, USER or SYSTEM.
	// Enum: [USER SYSTEM]
	Level string `json:"level,omitempty"`

	// Message describing the event being audited.
	Message *MessageInfo `json:"message,omitempty"`

	// List of properties that were changed and changes made to those properties.
	PropertyChanges []*PropertyChange `json:"propertyChanges"`

	// List of IP addresses of systems that originated or handled the request.
	RemoteIP []string `json:"remoteIp"`

	// Name of the service that logged this audit message.
	// Enum: [AgentConfig AnalyticsReporting Architect Coaching ContactCenter ContentManagement Datatables Directory Emails DynamicSchema Gamification Groups Integrations Knowledge LanguageUnderstanding Learning Limits LogCapture Outbound PeoplePermissions EmployeePerformance PredictiveEngagement Presence Quality ResponseManagement Routing SpeechAndTextAnalytics Telephony Triggers ProcessAutomation Voicemail WebDeployments Webhooks WorkforceManagement Messaging Supportability Callback Workitems SCIM NumberPurchasing Marketplace]
	ServiceName string `json:"serviceName,omitempty"`

	// Status of the event being audited
	// Enum: [SUCCESS FAILURE WARNING]
	Status string `json:"status,omitempty"`

	// Whether the current audit is the initiator of the transaction
	TransactionInitiator bool `json:"transactionInitiator"`

	// User associated with this audit message.
	User *DomainEntityRef `json:"user,omitempty"`

	// Home Organization Id associated with this audit message.
	UserHomeOrgID string `json:"userHomeOrgId,omitempty"`
}

// Validate validates this audit log message
func (m *AuditLogMessage) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAction(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateClient(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEntity(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEntityChanges(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEntityType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEventDate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateInitiatingAction(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLevel(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePropertyChanges(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateServiceName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUser(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var auditLogMessageTypeActionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Create","View","Update","Move","Copy","Delete","DeleteAll","Fax","VersionCreate","Download","Upload","MemberAdd","MemberUpdate","MemberRemove","ShareAdd","ShareRemove","TagAdd","TagRemove","TagUpdate","Read","ReadAll","Execute","ApplyProtection","RevokeProtection","UpdateRetention","Abandon","Archive","RestoreRequest","RestoreComplete","Promote","Publish","Unpublish","Activate","Checkin","Checkout","Deactivate","Debug","Save","Revert","Transcode","Enable","Disable","Authorize","Deauthorize","Authenticate","ChangePassword","Revoke","Export","Append","Recycle","Open","Approved","Rejected","Rollback","ImplementingChange","ChangeImplemented","ImplementingRollback","RollbackImplemented","Write","Purge","Processed","Remove","Replace","UpdateInService","UpdateOutOfService","Cycle","Scale","IpAllowlistClear","AddPairingRole","Add","Verify","Assign","Unassign","Reassign","Reschedule","Cancel","SoftDelete","HardDelete","Reset","Rotate","Restore","Unarchive","EnableCapture","DownloadCapture"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		auditLogMessageTypeActionPropEnum = append(auditLogMessageTypeActionPropEnum, v)
	}
}

const (

	// AuditLogMessageActionCreate captures enum value "Create"
	AuditLogMessageActionCreate string = "Create"

	// AuditLogMessageActionView captures enum value "View"
	AuditLogMessageActionView string = "View"

	// AuditLogMessageActionUpdate captures enum value "Update"
	AuditLogMessageActionUpdate string = "Update"

	// AuditLogMessageActionMove captures enum value "Move"
	AuditLogMessageActionMove string = "Move"

	// AuditLogMessageActionCopy captures enum value "Copy"
	AuditLogMessageActionCopy string = "Copy"

	// AuditLogMessageActionDelete captures enum value "Delete"
	AuditLogMessageActionDelete string = "Delete"

	// AuditLogMessageActionDeleteAll captures enum value "DeleteAll"
	AuditLogMessageActionDeleteAll string = "DeleteAll"

	// AuditLogMessageActionFax captures enum value "Fax"
	AuditLogMessageActionFax string = "Fax"

	// AuditLogMessageActionVersionCreate captures enum value "VersionCreate"
	AuditLogMessageActionVersionCreate string = "VersionCreate"

	// AuditLogMessageActionDownload captures enum value "Download"
	AuditLogMessageActionDownload string = "Download"

	// AuditLogMessageActionUpload captures enum value "Upload"
	AuditLogMessageActionUpload string = "Upload"

	// AuditLogMessageActionMemberAdd captures enum value "MemberAdd"
	AuditLogMessageActionMemberAdd string = "MemberAdd"

	// AuditLogMessageActionMemberUpdate captures enum value "MemberUpdate"
	AuditLogMessageActionMemberUpdate string = "MemberUpdate"

	// AuditLogMessageActionMemberRemove captures enum value "MemberRemove"
	AuditLogMessageActionMemberRemove string = "MemberRemove"

	// AuditLogMessageActionShareAdd captures enum value "ShareAdd"
	AuditLogMessageActionShareAdd string = "ShareAdd"

	// AuditLogMessageActionShareRemove captures enum value "ShareRemove"
	AuditLogMessageActionShareRemove string = "ShareRemove"

	// AuditLogMessageActionTagAdd captures enum value "TagAdd"
	AuditLogMessageActionTagAdd string = "TagAdd"

	// AuditLogMessageActionTagRemove captures enum value "TagRemove"
	AuditLogMessageActionTagRemove string = "TagRemove"

	// AuditLogMessageActionTagUpdate captures enum value "TagUpdate"
	AuditLogMessageActionTagUpdate string = "TagUpdate"

	// AuditLogMessageActionRead captures enum value "Read"
	AuditLogMessageActionRead string = "Read"

	// AuditLogMessageActionReadAll captures enum value "ReadAll"
	AuditLogMessageActionReadAll string = "ReadAll"

	// AuditLogMessageActionExecute captures enum value "Execute"
	AuditLogMessageActionExecute string = "Execute"

	// AuditLogMessageActionApplyProtection captures enum value "ApplyProtection"
	AuditLogMessageActionApplyProtection string = "ApplyProtection"

	// AuditLogMessageActionRevokeProtection captures enum value "RevokeProtection"
	AuditLogMessageActionRevokeProtection string = "RevokeProtection"

	// AuditLogMessageActionUpdateRetention captures enum value "UpdateRetention"
	AuditLogMessageActionUpdateRetention string = "UpdateRetention"

	// AuditLogMessageActionAbandon captures enum value "Abandon"
	AuditLogMessageActionAbandon string = "Abandon"

	// AuditLogMessageActionArchive captures enum value "Archive"
	AuditLogMessageActionArchive string = "Archive"

	// AuditLogMessageActionRestoreRequest captures enum value "RestoreRequest"
	AuditLogMessageActionRestoreRequest string = "RestoreRequest"

	// AuditLogMessageActionRestoreComplete captures enum value "RestoreComplete"
	AuditLogMessageActionRestoreComplete string = "RestoreComplete"

	// AuditLogMessageActionPromote captures enum value "Promote"
	AuditLogMessageActionPromote string = "Promote"

	// AuditLogMessageActionPublish captures enum value "Publish"
	AuditLogMessageActionPublish string = "Publish"

	// AuditLogMessageActionUnpublish captures enum value "Unpublish"
	AuditLogMessageActionUnpublish string = "Unpublish"

	// AuditLogMessageActionActivate captures enum value "Activate"
	AuditLogMessageActionActivate string = "Activate"

	// AuditLogMessageActionCheckin captures enum value "Checkin"
	AuditLogMessageActionCheckin string = "Checkin"

	// AuditLogMessageActionCheckout captures enum value "Checkout"
	AuditLogMessageActionCheckout string = "Checkout"

	// AuditLogMessageActionDeactivate captures enum value "Deactivate"
	AuditLogMessageActionDeactivate string = "Deactivate"

	// AuditLogMessageActionDebug captures enum value "Debug"
	AuditLogMessageActionDebug string = "Debug"

	// AuditLogMessageActionSave captures enum value "Save"
	AuditLogMessageActionSave string = "Save"

	// AuditLogMessageActionRevert captures enum value "Revert"
	AuditLogMessageActionRevert string = "Revert"

	// AuditLogMessageActionTranscode captures enum value "Transcode"
	AuditLogMessageActionTranscode string = "Transcode"

	// AuditLogMessageActionEnable captures enum value "Enable"
	AuditLogMessageActionEnable string = "Enable"

	// AuditLogMessageActionDisable captures enum value "Disable"
	AuditLogMessageActionDisable string = "Disable"

	// AuditLogMessageActionAuthorize captures enum value "Authorize"
	AuditLogMessageActionAuthorize string = "Authorize"

	// AuditLogMessageActionDeauthorize captures enum value "Deauthorize"
	AuditLogMessageActionDeauthorize string = "Deauthorize"

	// AuditLogMessageActionAuthenticate captures enum value "Authenticate"
	AuditLogMessageActionAuthenticate string = "Authenticate"

	// AuditLogMessageActionChangePassword captures enum value "ChangePassword"
	AuditLogMessageActionChangePassword string = "ChangePassword"

	// AuditLogMessageActionRevoke captures enum value "Revoke"
	AuditLogMessageActionRevoke string = "Revoke"

	// AuditLogMessageActionExport captures enum value "Export"
	AuditLogMessageActionExport string = "Export"

	// AuditLogMessageActionAppend captures enum value "Append"
	AuditLogMessageActionAppend string = "Append"

	// AuditLogMessageActionRecycle captures enum value "Recycle"
	AuditLogMessageActionRecycle string = "Recycle"

	// AuditLogMessageActionOpen captures enum value "Open"
	AuditLogMessageActionOpen string = "Open"

	// AuditLogMessageActionApproved captures enum value "Approved"
	AuditLogMessageActionApproved string = "Approved"

	// AuditLogMessageActionRejected captures enum value "Rejected"
	AuditLogMessageActionRejected string = "Rejected"

	// AuditLogMessageActionRollback captures enum value "Rollback"
	AuditLogMessageActionRollback string = "Rollback"

	// AuditLogMessageActionImplementingChange captures enum value "ImplementingChange"
	AuditLogMessageActionImplementingChange string = "ImplementingChange"

	// AuditLogMessageActionChangeImplemented captures enum value "ChangeImplemented"
	AuditLogMessageActionChangeImplemented string = "ChangeImplemented"

	// AuditLogMessageActionImplementingRollback captures enum value "ImplementingRollback"
	AuditLogMessageActionImplementingRollback string = "ImplementingRollback"

	// AuditLogMessageActionRollbackImplemented captures enum value "RollbackImplemented"
	AuditLogMessageActionRollbackImplemented string = "RollbackImplemented"

	// AuditLogMessageActionWrite captures enum value "Write"
	AuditLogMessageActionWrite string = "Write"

	// AuditLogMessageActionPurge captures enum value "Purge"
	AuditLogMessageActionPurge string = "Purge"

	// AuditLogMessageActionProcessed captures enum value "Processed"
	AuditLogMessageActionProcessed string = "Processed"

	// AuditLogMessageActionRemove captures enum value "Remove"
	AuditLogMessageActionRemove string = "Remove"

	// AuditLogMessageActionReplace captures enum value "Replace"
	AuditLogMessageActionReplace string = "Replace"

	// AuditLogMessageActionUpdateInService captures enum value "UpdateInService"
	AuditLogMessageActionUpdateInService string = "UpdateInService"

	// AuditLogMessageActionUpdateOutOfService captures enum value "UpdateOutOfService"
	AuditLogMessageActionUpdateOutOfService string = "UpdateOutOfService"

	// AuditLogMessageActionCycle captures enum value "Cycle"
	AuditLogMessageActionCycle string = "Cycle"

	// AuditLogMessageActionScale captures enum value "Scale"
	AuditLogMessageActionScale string = "Scale"

	// AuditLogMessageActionIPAllowlistClear captures enum value "IpAllowlistClear"
	AuditLogMessageActionIPAllowlistClear string = "IpAllowlistClear"

	// AuditLogMessageActionAddPairingRole captures enum value "AddPairingRole"
	AuditLogMessageActionAddPairingRole string = "AddPairingRole"

	// AuditLogMessageActionAdd captures enum value "Add"
	AuditLogMessageActionAdd string = "Add"

	// AuditLogMessageActionVerify captures enum value "Verify"
	AuditLogMessageActionVerify string = "Verify"

	// AuditLogMessageActionAssign captures enum value "Assign"
	AuditLogMessageActionAssign string = "Assign"

	// AuditLogMessageActionUnassign captures enum value "Unassign"
	AuditLogMessageActionUnassign string = "Unassign"

	// AuditLogMessageActionReassign captures enum value "Reassign"
	AuditLogMessageActionReassign string = "Reassign"

	// AuditLogMessageActionReschedule captures enum value "Reschedule"
	AuditLogMessageActionReschedule string = "Reschedule"

	// AuditLogMessageActionCancel captures enum value "Cancel"
	AuditLogMessageActionCancel string = "Cancel"

	// AuditLogMessageActionSoftDelete captures enum value "SoftDelete"
	AuditLogMessageActionSoftDelete string = "SoftDelete"

	// AuditLogMessageActionHardDelete captures enum value "HardDelete"
	AuditLogMessageActionHardDelete string = "HardDelete"

	// AuditLogMessageActionReset captures enum value "Reset"
	AuditLogMessageActionReset string = "Reset"

	// AuditLogMessageActionRotate captures enum value "Rotate"
	AuditLogMessageActionRotate string = "Rotate"

	// AuditLogMessageActionRestore captures enum value "Restore"
	AuditLogMessageActionRestore string = "Restore"

	// AuditLogMessageActionUnarchive captures enum value "Unarchive"
	AuditLogMessageActionUnarchive string = "Unarchive"

	// AuditLogMessageActionEnableCapture captures enum value "EnableCapture"
	AuditLogMessageActionEnableCapture string = "EnableCapture"

	// AuditLogMessageActionDownloadCapture captures enum value "DownloadCapture"
	AuditLogMessageActionDownloadCapture string = "DownloadCapture"
)

// prop value enum
func (m *AuditLogMessage) validateActionEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, auditLogMessageTypeActionPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *AuditLogMessage) validateAction(formats strfmt.Registry) error {
	if swag.IsZero(m.Action) { // not required
		return nil
	}

	// value enum
	if err := m.validateActionEnum("action", "body", m.Action); err != nil {
		return err
	}

	return nil
}

func (m *AuditLogMessage) validateClient(formats strfmt.Registry) error {
	if swag.IsZero(m.Client) { // not required
		return nil
	}

	if m.Client != nil {
		if err := m.Client.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("client")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("client")
			}
			return err
		}
	}

	return nil
}

func (m *AuditLogMessage) validateEntity(formats strfmt.Registry) error {
	if swag.IsZero(m.Entity) { // not required
		return nil
	}

	if m.Entity != nil {
		if err := m.Entity.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("entity")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("entity")
			}
			return err
		}
	}

	return nil
}

func (m *AuditLogMessage) validateEntityChanges(formats strfmt.Registry) error {
	if swag.IsZero(m.EntityChanges) { // not required
		return nil
	}

	for i := 0; i < len(m.EntityChanges); i++ {
		if swag.IsZero(m.EntityChanges[i]) { // not required
			continue
		}

		if m.EntityChanges[i] != nil {
			if err := m.EntityChanges[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("entityChanges" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("entityChanges" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

var auditLogMessageTypeEntityTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["AccessToken","Action","ActionDraft","ActionMap","ActionTemplate","ActivityCode","AdherenceExplanation","AgentRoutingInfo","AnalyticsReportingSettings","Annotation","Appointment","Assignment","AttemptLimits","AuthOrganization","AuthUser","Bulk","BulkActions","BusinessUnit","Calibration","CallableTimeSet","CallAnalysisResponseSet","Campaign","CampaignRule","CampaignSchedule","ChangeRequest","ClickstreamSettings","Configuration","ConfigurationVersion","ContactList","ContactListFilter","ContactSchema","ConversationAttributes","ConversationAccount","ConversationDefaultSupportedContent","ConversationPhoneNumber","ConversationRecipient","ConversationThreadingWindow","Credential","DashboardSettings","DefaultPanelSettings","DependencyTrackingBuild","Deployment","DID","DIDPool","DigitalRuleSet","DirectoryGroup","DNCList","Document","DynamicGroup","DynamicSchema","Edge","EdgeGroup","EdgeLog","EdgeLogZip","EdgePcaps","EdgePreferences","EdgeTraceLevel","EmailCampaignSchedule","EmergencyGroup","EnterpriseAgreement","Evaluation","EvaluationForm","EventType","Exports","Extension","ExtensionPool","ExternalMetricsData","ExternalMetricsDefinition","ExternalOrganizationSchema","Feedback","Flow","FlowMilestone","FlowOutcome","Forecast","GdprRequest","Group","HistoricalData","InboundDomain","InboundRoute","InsightSettings","Integration","IVR","KnowledgeBase","KnowledgeCategory","KnowledgeDocument","KnowledgeDocumentVariation","KnowledgeLabel","KnowledgeSearchFeedback","KnowledgeTraining","Line","LineBase","Location","ManagementUnit","MaxOrgRoutingUtilizationCapacity","MediaDiagnosticsTraceFile","MessagingCampaign","MessagingCampaignSchedule","Metric","Module","NumberOrder","NumberPlan","OAuthClient","OAuthClientAuthorization","Organization","OrganizationAuthorizationTrust","OrganizationAuthorizationUserTrust","OrganizationFeature","OrganizationIntegrationsAccess","OrganizationLimits","OrganizationSettings","OrphanedRecording","OutboundDomain","OutboundRoute","Outcome","Pcaps","Phone","PhoneBase","PlanningGroup","Policy","Predictor","Product","Profile","ProfileMembers","Program","Prompt","PromptResource","Public","Queue","Recording","RecordingAnnotation","RecordingKey","RecordingKeyConfig","RecordingSettings","Response","ResponseAsset","Role","RoleSettings","Row","RoutingTranscriptionSettings","RoutingUtilizationTag","Rule","RuleSet","Schedule","ScheduledExports","ScheduleGroup","Schema","ScreenRecording","Segment","SentimentFeedback","Sequence","SequenceSchedule","ServiceGoalTemplate","SessionType","ShiftTrade","Site","SkillsGroup","SpeechTextAnalyticsSettings","Status","SupportedContent","SupportFile","Survey","SurveyForm","Tag","Team","TimeOffLimit","TimeOffPlan","TimeOffRequest","Topic","TranscriptionSettings","Trigger","Trunk","TrunkBase","User","UserLanguage","UserPresence","UserSkill","VoicemailPolicy","VoicemailUserPolicy","Webhook","Workbin","Workitem","WorkPlan","WorkPlanRotation","Workspace","Worktype","WrapupCode","WrapUpCodeMapping","Participant"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		auditLogMessageTypeEntityTypePropEnum = append(auditLogMessageTypeEntityTypePropEnum, v)
	}
}

const (

	// AuditLogMessageEntityTypeAccessToken captures enum value "AccessToken"
	AuditLogMessageEntityTypeAccessToken string = "AccessToken"

	// AuditLogMessageEntityTypeAction captures enum value "Action"
	AuditLogMessageEntityTypeAction string = "Action"

	// AuditLogMessageEntityTypeActionDraft captures enum value "ActionDraft"
	AuditLogMessageEntityTypeActionDraft string = "ActionDraft"

	// AuditLogMessageEntityTypeActionMap captures enum value "ActionMap"
	AuditLogMessageEntityTypeActionMap string = "ActionMap"

	// AuditLogMessageEntityTypeActionTemplate captures enum value "ActionTemplate"
	AuditLogMessageEntityTypeActionTemplate string = "ActionTemplate"

	// AuditLogMessageEntityTypeActivityCode captures enum value "ActivityCode"
	AuditLogMessageEntityTypeActivityCode string = "ActivityCode"

	// AuditLogMessageEntityTypeAdherenceExplanation captures enum value "AdherenceExplanation"
	AuditLogMessageEntityTypeAdherenceExplanation string = "AdherenceExplanation"

	// AuditLogMessageEntityTypeAgentRoutingInfo captures enum value "AgentRoutingInfo"
	AuditLogMessageEntityTypeAgentRoutingInfo string = "AgentRoutingInfo"

	// AuditLogMessageEntityTypeAnalyticsReportingSettings captures enum value "AnalyticsReportingSettings"
	AuditLogMessageEntityTypeAnalyticsReportingSettings string = "AnalyticsReportingSettings"

	// AuditLogMessageEntityTypeAnnotation captures enum value "Annotation"
	AuditLogMessageEntityTypeAnnotation string = "Annotation"

	// AuditLogMessageEntityTypeAppointment captures enum value "Appointment"
	AuditLogMessageEntityTypeAppointment string = "Appointment"

	// AuditLogMessageEntityTypeAssignment captures enum value "Assignment"
	AuditLogMessageEntityTypeAssignment string = "Assignment"

	// AuditLogMessageEntityTypeAttemptLimits captures enum value "AttemptLimits"
	AuditLogMessageEntityTypeAttemptLimits string = "AttemptLimits"

	// AuditLogMessageEntityTypeAuthOrganization captures enum value "AuthOrganization"
	AuditLogMessageEntityTypeAuthOrganization string = "AuthOrganization"

	// AuditLogMessageEntityTypeAuthUser captures enum value "AuthUser"
	AuditLogMessageEntityTypeAuthUser string = "AuthUser"

	// AuditLogMessageEntityTypeBulk captures enum value "Bulk"
	AuditLogMessageEntityTypeBulk string = "Bulk"

	// AuditLogMessageEntityTypeBulkActions captures enum value "BulkActions"
	AuditLogMessageEntityTypeBulkActions string = "BulkActions"

	// AuditLogMessageEntityTypeBusinessUnit captures enum value "BusinessUnit"
	AuditLogMessageEntityTypeBusinessUnit string = "BusinessUnit"

	// AuditLogMessageEntityTypeCalibration captures enum value "Calibration"
	AuditLogMessageEntityTypeCalibration string = "Calibration"

	// AuditLogMessageEntityTypeCallableTimeSet captures enum value "CallableTimeSet"
	AuditLogMessageEntityTypeCallableTimeSet string = "CallableTimeSet"

	// AuditLogMessageEntityTypeCallAnalysisResponseSet captures enum value "CallAnalysisResponseSet"
	AuditLogMessageEntityTypeCallAnalysisResponseSet string = "CallAnalysisResponseSet"

	// AuditLogMessageEntityTypeCampaign captures enum value "Campaign"
	AuditLogMessageEntityTypeCampaign string = "Campaign"

	// AuditLogMessageEntityTypeCampaignRule captures enum value "CampaignRule"
	AuditLogMessageEntityTypeCampaignRule string = "CampaignRule"

	// AuditLogMessageEntityTypeCampaignSchedule captures enum value "CampaignSchedule"
	AuditLogMessageEntityTypeCampaignSchedule string = "CampaignSchedule"

	// AuditLogMessageEntityTypeChangeRequest captures enum value "ChangeRequest"
	AuditLogMessageEntityTypeChangeRequest string = "ChangeRequest"

	// AuditLogMessageEntityTypeClickstreamSettings captures enum value "ClickstreamSettings"
	AuditLogMessageEntityTypeClickstreamSettings string = "ClickstreamSettings"

	// AuditLogMessageEntityTypeConfiguration captures enum value "Configuration"
	AuditLogMessageEntityTypeConfiguration string = "Configuration"

	// AuditLogMessageEntityTypeConfigurationVersion captures enum value "ConfigurationVersion"
	AuditLogMessageEntityTypeConfigurationVersion string = "ConfigurationVersion"

	// AuditLogMessageEntityTypeContactList captures enum value "ContactList"
	AuditLogMessageEntityTypeContactList string = "ContactList"

	// AuditLogMessageEntityTypeContactListFilter captures enum value "ContactListFilter"
	AuditLogMessageEntityTypeContactListFilter string = "ContactListFilter"

	// AuditLogMessageEntityTypeContactSchema captures enum value "ContactSchema"
	AuditLogMessageEntityTypeContactSchema string = "ContactSchema"

	// AuditLogMessageEntityTypeConversationAttributes captures enum value "ConversationAttributes"
	AuditLogMessageEntityTypeConversationAttributes string = "ConversationAttributes"

	// AuditLogMessageEntityTypeConversationAccount captures enum value "ConversationAccount"
	AuditLogMessageEntityTypeConversationAccount string = "ConversationAccount"

	// AuditLogMessageEntityTypeConversationDefaultSupportedContent captures enum value "ConversationDefaultSupportedContent"
	AuditLogMessageEntityTypeConversationDefaultSupportedContent string = "ConversationDefaultSupportedContent"

	// AuditLogMessageEntityTypeConversationPhoneNumber captures enum value "ConversationPhoneNumber"
	AuditLogMessageEntityTypeConversationPhoneNumber string = "ConversationPhoneNumber"

	// AuditLogMessageEntityTypeConversationRecipient captures enum value "ConversationRecipient"
	AuditLogMessageEntityTypeConversationRecipient string = "ConversationRecipient"

	// AuditLogMessageEntityTypeConversationThreadingWindow captures enum value "ConversationThreadingWindow"
	AuditLogMessageEntityTypeConversationThreadingWindow string = "ConversationThreadingWindow"

	// AuditLogMessageEntityTypeCredential captures enum value "Credential"
	AuditLogMessageEntityTypeCredential string = "Credential"

	// AuditLogMessageEntityTypeDashboardSettings captures enum value "DashboardSettings"
	AuditLogMessageEntityTypeDashboardSettings string = "DashboardSettings"

	// AuditLogMessageEntityTypeDefaultPanelSettings captures enum value "DefaultPanelSettings"
	AuditLogMessageEntityTypeDefaultPanelSettings string = "DefaultPanelSettings"

	// AuditLogMessageEntityTypeDependencyTrackingBuild captures enum value "DependencyTrackingBuild"
	AuditLogMessageEntityTypeDependencyTrackingBuild string = "DependencyTrackingBuild"

	// AuditLogMessageEntityTypeDeployment captures enum value "Deployment"
	AuditLogMessageEntityTypeDeployment string = "Deployment"

	// AuditLogMessageEntityTypeDID captures enum value "DID"
	AuditLogMessageEntityTypeDID string = "DID"

	// AuditLogMessageEntityTypeDIDPool captures enum value "DIDPool"
	AuditLogMessageEntityTypeDIDPool string = "DIDPool"

	// AuditLogMessageEntityTypeDigitalRuleSet captures enum value "DigitalRuleSet"
	AuditLogMessageEntityTypeDigitalRuleSet string = "DigitalRuleSet"

	// AuditLogMessageEntityTypeDirectoryGroup captures enum value "DirectoryGroup"
	AuditLogMessageEntityTypeDirectoryGroup string = "DirectoryGroup"

	// AuditLogMessageEntityTypeDNCList captures enum value "DNCList"
	AuditLogMessageEntityTypeDNCList string = "DNCList"

	// AuditLogMessageEntityTypeDocument captures enum value "Document"
	AuditLogMessageEntityTypeDocument string = "Document"

	// AuditLogMessageEntityTypeDynamicGroup captures enum value "DynamicGroup"
	AuditLogMessageEntityTypeDynamicGroup string = "DynamicGroup"

	// AuditLogMessageEntityTypeDynamicSchema captures enum value "DynamicSchema"
	AuditLogMessageEntityTypeDynamicSchema string = "DynamicSchema"

	// AuditLogMessageEntityTypeEdge captures enum value "Edge"
	AuditLogMessageEntityTypeEdge string = "Edge"

	// AuditLogMessageEntityTypeEdgeGroup captures enum value "EdgeGroup"
	AuditLogMessageEntityTypeEdgeGroup string = "EdgeGroup"

	// AuditLogMessageEntityTypeEdgeLog captures enum value "EdgeLog"
	AuditLogMessageEntityTypeEdgeLog string = "EdgeLog"

	// AuditLogMessageEntityTypeEdgeLogZip captures enum value "EdgeLogZip"
	AuditLogMessageEntityTypeEdgeLogZip string = "EdgeLogZip"

	// AuditLogMessageEntityTypeEdgePcaps captures enum value "EdgePcaps"
	AuditLogMessageEntityTypeEdgePcaps string = "EdgePcaps"

	// AuditLogMessageEntityTypeEdgePreferences captures enum value "EdgePreferences"
	AuditLogMessageEntityTypeEdgePreferences string = "EdgePreferences"

	// AuditLogMessageEntityTypeEdgeTraceLevel captures enum value "EdgeTraceLevel"
	AuditLogMessageEntityTypeEdgeTraceLevel string = "EdgeTraceLevel"

	// AuditLogMessageEntityTypeEmailCampaignSchedule captures enum value "EmailCampaignSchedule"
	AuditLogMessageEntityTypeEmailCampaignSchedule string = "EmailCampaignSchedule"

	// AuditLogMessageEntityTypeEmergencyGroup captures enum value "EmergencyGroup"
	AuditLogMessageEntityTypeEmergencyGroup string = "EmergencyGroup"

	// AuditLogMessageEntityTypeEnterpriseAgreement captures enum value "EnterpriseAgreement"
	AuditLogMessageEntityTypeEnterpriseAgreement string = "EnterpriseAgreement"

	// AuditLogMessageEntityTypeEvaluation captures enum value "Evaluation"
	AuditLogMessageEntityTypeEvaluation string = "Evaluation"

	// AuditLogMessageEntityTypeEvaluationForm captures enum value "EvaluationForm"
	AuditLogMessageEntityTypeEvaluationForm string = "EvaluationForm"

	// AuditLogMessageEntityTypeEventType captures enum value "EventType"
	AuditLogMessageEntityTypeEventType string = "EventType"

	// AuditLogMessageEntityTypeExports captures enum value "Exports"
	AuditLogMessageEntityTypeExports string = "Exports"

	// AuditLogMessageEntityTypeExtension captures enum value "Extension"
	AuditLogMessageEntityTypeExtension string = "Extension"

	// AuditLogMessageEntityTypeExtensionPool captures enum value "ExtensionPool"
	AuditLogMessageEntityTypeExtensionPool string = "ExtensionPool"

	// AuditLogMessageEntityTypeExternalMetricsData captures enum value "ExternalMetricsData"
	AuditLogMessageEntityTypeExternalMetricsData string = "ExternalMetricsData"

	// AuditLogMessageEntityTypeExternalMetricsDefinition captures enum value "ExternalMetricsDefinition"
	AuditLogMessageEntityTypeExternalMetricsDefinition string = "ExternalMetricsDefinition"

	// AuditLogMessageEntityTypeExternalOrganizationSchema captures enum value "ExternalOrganizationSchema"
	AuditLogMessageEntityTypeExternalOrganizationSchema string = "ExternalOrganizationSchema"

	// AuditLogMessageEntityTypeFeedback captures enum value "Feedback"
	AuditLogMessageEntityTypeFeedback string = "Feedback"

	// AuditLogMessageEntityTypeFlow captures enum value "Flow"
	AuditLogMessageEntityTypeFlow string = "Flow"

	// AuditLogMessageEntityTypeFlowMilestone captures enum value "FlowMilestone"
	AuditLogMessageEntityTypeFlowMilestone string = "FlowMilestone"

	// AuditLogMessageEntityTypeFlowOutcome captures enum value "FlowOutcome"
	AuditLogMessageEntityTypeFlowOutcome string = "FlowOutcome"

	// AuditLogMessageEntityTypeForecast captures enum value "Forecast"
	AuditLogMessageEntityTypeForecast string = "Forecast"

	// AuditLogMessageEntityTypeGdprRequest captures enum value "GdprRequest"
	AuditLogMessageEntityTypeGdprRequest string = "GdprRequest"

	// AuditLogMessageEntityTypeGroup captures enum value "Group"
	AuditLogMessageEntityTypeGroup string = "Group"

	// AuditLogMessageEntityTypeHistoricalData captures enum value "HistoricalData"
	AuditLogMessageEntityTypeHistoricalData string = "HistoricalData"

	// AuditLogMessageEntityTypeInboundDomain captures enum value "InboundDomain"
	AuditLogMessageEntityTypeInboundDomain string = "InboundDomain"

	// AuditLogMessageEntityTypeInboundRoute captures enum value "InboundRoute"
	AuditLogMessageEntityTypeInboundRoute string = "InboundRoute"

	// AuditLogMessageEntityTypeInsightSettings captures enum value "InsightSettings"
	AuditLogMessageEntityTypeInsightSettings string = "InsightSettings"

	// AuditLogMessageEntityTypeIntegration captures enum value "Integration"
	AuditLogMessageEntityTypeIntegration string = "Integration"

	// AuditLogMessageEntityTypeIVR captures enum value "IVR"
	AuditLogMessageEntityTypeIVR string = "IVR"

	// AuditLogMessageEntityTypeKnowledgeBase captures enum value "KnowledgeBase"
	AuditLogMessageEntityTypeKnowledgeBase string = "KnowledgeBase"

	// AuditLogMessageEntityTypeKnowledgeCategory captures enum value "KnowledgeCategory"
	AuditLogMessageEntityTypeKnowledgeCategory string = "KnowledgeCategory"

	// AuditLogMessageEntityTypeKnowledgeDocument captures enum value "KnowledgeDocument"
	AuditLogMessageEntityTypeKnowledgeDocument string = "KnowledgeDocument"

	// AuditLogMessageEntityTypeKnowledgeDocumentVariation captures enum value "KnowledgeDocumentVariation"
	AuditLogMessageEntityTypeKnowledgeDocumentVariation string = "KnowledgeDocumentVariation"

	// AuditLogMessageEntityTypeKnowledgeLabel captures enum value "KnowledgeLabel"
	AuditLogMessageEntityTypeKnowledgeLabel string = "KnowledgeLabel"

	// AuditLogMessageEntityTypeKnowledgeSearchFeedback captures enum value "KnowledgeSearchFeedback"
	AuditLogMessageEntityTypeKnowledgeSearchFeedback string = "KnowledgeSearchFeedback"

	// AuditLogMessageEntityTypeKnowledgeTraining captures enum value "KnowledgeTraining"
	AuditLogMessageEntityTypeKnowledgeTraining string = "KnowledgeTraining"

	// AuditLogMessageEntityTypeLine captures enum value "Line"
	AuditLogMessageEntityTypeLine string = "Line"

	// AuditLogMessageEntityTypeLineBase captures enum value "LineBase"
	AuditLogMessageEntityTypeLineBase string = "LineBase"

	// AuditLogMessageEntityTypeLocation captures enum value "Location"
	AuditLogMessageEntityTypeLocation string = "Location"

	// AuditLogMessageEntityTypeManagementUnit captures enum value "ManagementUnit"
	AuditLogMessageEntityTypeManagementUnit string = "ManagementUnit"

	// AuditLogMessageEntityTypeMaxOrgRoutingUtilizationCapacity captures enum value "MaxOrgRoutingUtilizationCapacity"
	AuditLogMessageEntityTypeMaxOrgRoutingUtilizationCapacity string = "MaxOrgRoutingUtilizationCapacity"

	// AuditLogMessageEntityTypeMediaDiagnosticsTraceFile captures enum value "MediaDiagnosticsTraceFile"
	AuditLogMessageEntityTypeMediaDiagnosticsTraceFile string = "MediaDiagnosticsTraceFile"

	// AuditLogMessageEntityTypeMessagingCampaign captures enum value "MessagingCampaign"
	AuditLogMessageEntityTypeMessagingCampaign string = "MessagingCampaign"

	// AuditLogMessageEntityTypeMessagingCampaignSchedule captures enum value "MessagingCampaignSchedule"
	AuditLogMessageEntityTypeMessagingCampaignSchedule string = "MessagingCampaignSchedule"

	// AuditLogMessageEntityTypeMetric captures enum value "Metric"
	AuditLogMessageEntityTypeMetric string = "Metric"

	// AuditLogMessageEntityTypeModule captures enum value "Module"
	AuditLogMessageEntityTypeModule string = "Module"

	// AuditLogMessageEntityTypeNumberOrder captures enum value "NumberOrder"
	AuditLogMessageEntityTypeNumberOrder string = "NumberOrder"

	// AuditLogMessageEntityTypeNumberPlan captures enum value "NumberPlan"
	AuditLogMessageEntityTypeNumberPlan string = "NumberPlan"

	// AuditLogMessageEntityTypeOAuthClient captures enum value "OAuthClient"
	AuditLogMessageEntityTypeOAuthClient string = "OAuthClient"

	// AuditLogMessageEntityTypeOAuthClientAuthorization captures enum value "OAuthClientAuthorization"
	AuditLogMessageEntityTypeOAuthClientAuthorization string = "OAuthClientAuthorization"

	// AuditLogMessageEntityTypeOrganization captures enum value "Organization"
	AuditLogMessageEntityTypeOrganization string = "Organization"

	// AuditLogMessageEntityTypeOrganizationAuthorizationTrust captures enum value "OrganizationAuthorizationTrust"
	AuditLogMessageEntityTypeOrganizationAuthorizationTrust string = "OrganizationAuthorizationTrust"

	// AuditLogMessageEntityTypeOrganizationAuthorizationUserTrust captures enum value "OrganizationAuthorizationUserTrust"
	AuditLogMessageEntityTypeOrganizationAuthorizationUserTrust string = "OrganizationAuthorizationUserTrust"

	// AuditLogMessageEntityTypeOrganizationFeature captures enum value "OrganizationFeature"
	AuditLogMessageEntityTypeOrganizationFeature string = "OrganizationFeature"

	// AuditLogMessageEntityTypeOrganizationIntegrationsAccess captures enum value "OrganizationIntegrationsAccess"
	AuditLogMessageEntityTypeOrganizationIntegrationsAccess string = "OrganizationIntegrationsAccess"

	// AuditLogMessageEntityTypeOrganizationLimits captures enum value "OrganizationLimits"
	AuditLogMessageEntityTypeOrganizationLimits string = "OrganizationLimits"

	// AuditLogMessageEntityTypeOrganizationSettings captures enum value "OrganizationSettings"
	AuditLogMessageEntityTypeOrganizationSettings string = "OrganizationSettings"

	// AuditLogMessageEntityTypeOrphanedRecording captures enum value "OrphanedRecording"
	AuditLogMessageEntityTypeOrphanedRecording string = "OrphanedRecording"

	// AuditLogMessageEntityTypeOutboundDomain captures enum value "OutboundDomain"
	AuditLogMessageEntityTypeOutboundDomain string = "OutboundDomain"

	// AuditLogMessageEntityTypeOutboundRoute captures enum value "OutboundRoute"
	AuditLogMessageEntityTypeOutboundRoute string = "OutboundRoute"

	// AuditLogMessageEntityTypeOutcome captures enum value "Outcome"
	AuditLogMessageEntityTypeOutcome string = "Outcome"

	// AuditLogMessageEntityTypePcaps captures enum value "Pcaps"
	AuditLogMessageEntityTypePcaps string = "Pcaps"

	// AuditLogMessageEntityTypePhone captures enum value "Phone"
	AuditLogMessageEntityTypePhone string = "Phone"

	// AuditLogMessageEntityTypePhoneBase captures enum value "PhoneBase"
	AuditLogMessageEntityTypePhoneBase string = "PhoneBase"

	// AuditLogMessageEntityTypePlanningGroup captures enum value "PlanningGroup"
	AuditLogMessageEntityTypePlanningGroup string = "PlanningGroup"

	// AuditLogMessageEntityTypePolicy captures enum value "Policy"
	AuditLogMessageEntityTypePolicy string = "Policy"

	// AuditLogMessageEntityTypePredictor captures enum value "Predictor"
	AuditLogMessageEntityTypePredictor string = "Predictor"

	// AuditLogMessageEntityTypeProduct captures enum value "Product"
	AuditLogMessageEntityTypeProduct string = "Product"

	// AuditLogMessageEntityTypeProfile captures enum value "Profile"
	AuditLogMessageEntityTypeProfile string = "Profile"

	// AuditLogMessageEntityTypeProfileMembers captures enum value "ProfileMembers"
	AuditLogMessageEntityTypeProfileMembers string = "ProfileMembers"

	// AuditLogMessageEntityTypeProgram captures enum value "Program"
	AuditLogMessageEntityTypeProgram string = "Program"

	// AuditLogMessageEntityTypePrompt captures enum value "Prompt"
	AuditLogMessageEntityTypePrompt string = "Prompt"

	// AuditLogMessageEntityTypePromptResource captures enum value "PromptResource"
	AuditLogMessageEntityTypePromptResource string = "PromptResource"

	// AuditLogMessageEntityTypePublic captures enum value "Public"
	AuditLogMessageEntityTypePublic string = "Public"

	// AuditLogMessageEntityTypeQueue captures enum value "Queue"
	AuditLogMessageEntityTypeQueue string = "Queue"

	// AuditLogMessageEntityTypeRecording captures enum value "Recording"
	AuditLogMessageEntityTypeRecording string = "Recording"

	// AuditLogMessageEntityTypeRecordingAnnotation captures enum value "RecordingAnnotation"
	AuditLogMessageEntityTypeRecordingAnnotation string = "RecordingAnnotation"

	// AuditLogMessageEntityTypeRecordingKey captures enum value "RecordingKey"
	AuditLogMessageEntityTypeRecordingKey string = "RecordingKey"

	// AuditLogMessageEntityTypeRecordingKeyConfig captures enum value "RecordingKeyConfig"
	AuditLogMessageEntityTypeRecordingKeyConfig string = "RecordingKeyConfig"

	// AuditLogMessageEntityTypeRecordingSettings captures enum value "RecordingSettings"
	AuditLogMessageEntityTypeRecordingSettings string = "RecordingSettings"

	// AuditLogMessageEntityTypeResponse captures enum value "Response"
	AuditLogMessageEntityTypeResponse string = "Response"

	// AuditLogMessageEntityTypeResponseAsset captures enum value "ResponseAsset"
	AuditLogMessageEntityTypeResponseAsset string = "ResponseAsset"

	// AuditLogMessageEntityTypeRole captures enum value "Role"
	AuditLogMessageEntityTypeRole string = "Role"

	// AuditLogMessageEntityTypeRoleSettings captures enum value "RoleSettings"
	AuditLogMessageEntityTypeRoleSettings string = "RoleSettings"

	// AuditLogMessageEntityTypeRow captures enum value "Row"
	AuditLogMessageEntityTypeRow string = "Row"

	// AuditLogMessageEntityTypeRoutingTranscriptionSettings captures enum value "RoutingTranscriptionSettings"
	AuditLogMessageEntityTypeRoutingTranscriptionSettings string = "RoutingTranscriptionSettings"

	// AuditLogMessageEntityTypeRoutingUtilizationTag captures enum value "RoutingUtilizationTag"
	AuditLogMessageEntityTypeRoutingUtilizationTag string = "RoutingUtilizationTag"

	// AuditLogMessageEntityTypeRule captures enum value "Rule"
	AuditLogMessageEntityTypeRule string = "Rule"

	// AuditLogMessageEntityTypeRuleSet captures enum value "RuleSet"
	AuditLogMessageEntityTypeRuleSet string = "RuleSet"

	// AuditLogMessageEntityTypeSchedule captures enum value "Schedule"
	AuditLogMessageEntityTypeSchedule string = "Schedule"

	// AuditLogMessageEntityTypeScheduledExports captures enum value "ScheduledExports"
	AuditLogMessageEntityTypeScheduledExports string = "ScheduledExports"

	// AuditLogMessageEntityTypeScheduleGroup captures enum value "ScheduleGroup"
	AuditLogMessageEntityTypeScheduleGroup string = "ScheduleGroup"

	// AuditLogMessageEntityTypeSchema captures enum value "Schema"
	AuditLogMessageEntityTypeSchema string = "Schema"

	// AuditLogMessageEntityTypeScreenRecording captures enum value "ScreenRecording"
	AuditLogMessageEntityTypeScreenRecording string = "ScreenRecording"

	// AuditLogMessageEntityTypeSegment captures enum value "Segment"
	AuditLogMessageEntityTypeSegment string = "Segment"

	// AuditLogMessageEntityTypeSentimentFeedback captures enum value "SentimentFeedback"
	AuditLogMessageEntityTypeSentimentFeedback string = "SentimentFeedback"

	// AuditLogMessageEntityTypeSequence captures enum value "Sequence"
	AuditLogMessageEntityTypeSequence string = "Sequence"

	// AuditLogMessageEntityTypeSequenceSchedule captures enum value "SequenceSchedule"
	AuditLogMessageEntityTypeSequenceSchedule string = "SequenceSchedule"

	// AuditLogMessageEntityTypeServiceGoalTemplate captures enum value "ServiceGoalTemplate"
	AuditLogMessageEntityTypeServiceGoalTemplate string = "ServiceGoalTemplate"

	// AuditLogMessageEntityTypeSessionType captures enum value "SessionType"
	AuditLogMessageEntityTypeSessionType string = "SessionType"

	// AuditLogMessageEntityTypeShiftTrade captures enum value "ShiftTrade"
	AuditLogMessageEntityTypeShiftTrade string = "ShiftTrade"

	// AuditLogMessageEntityTypeSite captures enum value "Site"
	AuditLogMessageEntityTypeSite string = "Site"

	// AuditLogMessageEntityTypeSkillsGroup captures enum value "SkillsGroup"
	AuditLogMessageEntityTypeSkillsGroup string = "SkillsGroup"

	// AuditLogMessageEntityTypeSpeechTextAnalyticsSettings captures enum value "SpeechTextAnalyticsSettings"
	AuditLogMessageEntityTypeSpeechTextAnalyticsSettings string = "SpeechTextAnalyticsSettings"

	// AuditLogMessageEntityTypeStatus captures enum value "Status"
	AuditLogMessageEntityTypeStatus string = "Status"

	// AuditLogMessageEntityTypeSupportedContent captures enum value "SupportedContent"
	AuditLogMessageEntityTypeSupportedContent string = "SupportedContent"

	// AuditLogMessageEntityTypeSupportFile captures enum value "SupportFile"
	AuditLogMessageEntityTypeSupportFile string = "SupportFile"

	// AuditLogMessageEntityTypeSurvey captures enum value "Survey"
	AuditLogMessageEntityTypeSurvey string = "Survey"

	// AuditLogMessageEntityTypeSurveyForm captures enum value "SurveyForm"
	AuditLogMessageEntityTypeSurveyForm string = "SurveyForm"

	// AuditLogMessageEntityTypeTag captures enum value "Tag"
	AuditLogMessageEntityTypeTag string = "Tag"

	// AuditLogMessageEntityTypeTeam captures enum value "Team"
	AuditLogMessageEntityTypeTeam string = "Team"

	// AuditLogMessageEntityTypeTimeOffLimit captures enum value "TimeOffLimit"
	AuditLogMessageEntityTypeTimeOffLimit string = "TimeOffLimit"

	// AuditLogMessageEntityTypeTimeOffPlan captures enum value "TimeOffPlan"
	AuditLogMessageEntityTypeTimeOffPlan string = "TimeOffPlan"

	// AuditLogMessageEntityTypeTimeOffRequest captures enum value "TimeOffRequest"
	AuditLogMessageEntityTypeTimeOffRequest string = "TimeOffRequest"

	// AuditLogMessageEntityTypeTopic captures enum value "Topic"
	AuditLogMessageEntityTypeTopic string = "Topic"

	// AuditLogMessageEntityTypeTranscriptionSettings captures enum value "TranscriptionSettings"
	AuditLogMessageEntityTypeTranscriptionSettings string = "TranscriptionSettings"

	// AuditLogMessageEntityTypeTrigger captures enum value "Trigger"
	AuditLogMessageEntityTypeTrigger string = "Trigger"

	// AuditLogMessageEntityTypeTrunk captures enum value "Trunk"
	AuditLogMessageEntityTypeTrunk string = "Trunk"

	// AuditLogMessageEntityTypeTrunkBase captures enum value "TrunkBase"
	AuditLogMessageEntityTypeTrunkBase string = "TrunkBase"

	// AuditLogMessageEntityTypeUser captures enum value "User"
	AuditLogMessageEntityTypeUser string = "User"

	// AuditLogMessageEntityTypeUserLanguage captures enum value "UserLanguage"
	AuditLogMessageEntityTypeUserLanguage string = "UserLanguage"

	// AuditLogMessageEntityTypeUserPresence captures enum value "UserPresence"
	AuditLogMessageEntityTypeUserPresence string = "UserPresence"

	// AuditLogMessageEntityTypeUserSkill captures enum value "UserSkill"
	AuditLogMessageEntityTypeUserSkill string = "UserSkill"

	// AuditLogMessageEntityTypeVoicemailPolicy captures enum value "VoicemailPolicy"
	AuditLogMessageEntityTypeVoicemailPolicy string = "VoicemailPolicy"

	// AuditLogMessageEntityTypeVoicemailUserPolicy captures enum value "VoicemailUserPolicy"
	AuditLogMessageEntityTypeVoicemailUserPolicy string = "VoicemailUserPolicy"

	// AuditLogMessageEntityTypeWebhook captures enum value "Webhook"
	AuditLogMessageEntityTypeWebhook string = "Webhook"

	// AuditLogMessageEntityTypeWorkbin captures enum value "Workbin"
	AuditLogMessageEntityTypeWorkbin string = "Workbin"

	// AuditLogMessageEntityTypeWorkitem captures enum value "Workitem"
	AuditLogMessageEntityTypeWorkitem string = "Workitem"

	// AuditLogMessageEntityTypeWorkPlan captures enum value "WorkPlan"
	AuditLogMessageEntityTypeWorkPlan string = "WorkPlan"

	// AuditLogMessageEntityTypeWorkPlanRotation captures enum value "WorkPlanRotation"
	AuditLogMessageEntityTypeWorkPlanRotation string = "WorkPlanRotation"

	// AuditLogMessageEntityTypeWorkspace captures enum value "Workspace"
	AuditLogMessageEntityTypeWorkspace string = "Workspace"

	// AuditLogMessageEntityTypeWorktype captures enum value "Worktype"
	AuditLogMessageEntityTypeWorktype string = "Worktype"

	// AuditLogMessageEntityTypeWrapupCode captures enum value "WrapupCode"
	AuditLogMessageEntityTypeWrapupCode string = "WrapupCode"

	// AuditLogMessageEntityTypeWrapUpCodeMapping captures enum value "WrapUpCodeMapping"
	AuditLogMessageEntityTypeWrapUpCodeMapping string = "WrapUpCodeMapping"

	// AuditLogMessageEntityTypeParticipant captures enum value "Participant"
	AuditLogMessageEntityTypeParticipant string = "Participant"
)

// prop value enum
func (m *AuditLogMessage) validateEntityTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, auditLogMessageTypeEntityTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *AuditLogMessage) validateEntityType(formats strfmt.Registry) error {
	if swag.IsZero(m.EntityType) { // not required
		return nil
	}

	// value enum
	if err := m.validateEntityTypeEnum("entityType", "body", m.EntityType); err != nil {
		return err
	}

	return nil
}

func (m *AuditLogMessage) validateEventDate(formats strfmt.Registry) error {
	if swag.IsZero(m.EventDate) { // not required
		return nil
	}

	if err := validate.FormatOf("eventDate", "body", "date-time", m.EventDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *AuditLogMessage) validateInitiatingAction(formats strfmt.Registry) error {
	if swag.IsZero(m.InitiatingAction) { // not required
		return nil
	}

	if m.InitiatingAction != nil {
		if err := m.InitiatingAction.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("initiatingAction")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("initiatingAction")
			}
			return err
		}
	}

	return nil
}

var auditLogMessageTypeLevelPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["USER","SYSTEM"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		auditLogMessageTypeLevelPropEnum = append(auditLogMessageTypeLevelPropEnum, v)
	}
}

const (

	// AuditLogMessageLevelUSER captures enum value "USER"
	AuditLogMessageLevelUSER string = "USER"

	// AuditLogMessageLevelSYSTEM captures enum value "SYSTEM"
	AuditLogMessageLevelSYSTEM string = "SYSTEM"
)

// prop value enum
func (m *AuditLogMessage) validateLevelEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, auditLogMessageTypeLevelPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *AuditLogMessage) validateLevel(formats strfmt.Registry) error {
	if swag.IsZero(m.Level) { // not required
		return nil
	}

	// value enum
	if err := m.validateLevelEnum("level", "body", m.Level); err != nil {
		return err
	}

	return nil
}

func (m *AuditLogMessage) validateMessage(formats strfmt.Registry) error {
	if swag.IsZero(m.Message) { // not required
		return nil
	}

	if m.Message != nil {
		if err := m.Message.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("message")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("message")
			}
			return err
		}
	}

	return nil
}

func (m *AuditLogMessage) validatePropertyChanges(formats strfmt.Registry) error {
	if swag.IsZero(m.PropertyChanges) { // not required
		return nil
	}

	for i := 0; i < len(m.PropertyChanges); i++ {
		if swag.IsZero(m.PropertyChanges[i]) { // not required
			continue
		}

		if m.PropertyChanges[i] != nil {
			if err := m.PropertyChanges[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("propertyChanges" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("propertyChanges" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

var auditLogMessageTypeServiceNamePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["AgentConfig","AnalyticsReporting","Architect","Coaching","ContactCenter","ContentManagement","Datatables","Directory","Emails","DynamicSchema","Gamification","Groups","Integrations","Knowledge","LanguageUnderstanding","Learning","Limits","LogCapture","Outbound","PeoplePermissions","EmployeePerformance","PredictiveEngagement","Presence","Quality","ResponseManagement","Routing","SpeechAndTextAnalytics","Telephony","Triggers","ProcessAutomation","Voicemail","WebDeployments","Webhooks","WorkforceManagement","Messaging","Supportability","Callback","Workitems","SCIM","NumberPurchasing","Marketplace"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		auditLogMessageTypeServiceNamePropEnum = append(auditLogMessageTypeServiceNamePropEnum, v)
	}
}

const (

	// AuditLogMessageServiceNameAgentConfig captures enum value "AgentConfig"
	AuditLogMessageServiceNameAgentConfig string = "AgentConfig"

	// AuditLogMessageServiceNameAnalyticsReporting captures enum value "AnalyticsReporting"
	AuditLogMessageServiceNameAnalyticsReporting string = "AnalyticsReporting"

	// AuditLogMessageServiceNameArchitect captures enum value "Architect"
	AuditLogMessageServiceNameArchitect string = "Architect"

	// AuditLogMessageServiceNameCoaching captures enum value "Coaching"
	AuditLogMessageServiceNameCoaching string = "Coaching"

	// AuditLogMessageServiceNameContactCenter captures enum value "ContactCenter"
	AuditLogMessageServiceNameContactCenter string = "ContactCenter"

	// AuditLogMessageServiceNameContentManagement captures enum value "ContentManagement"
	AuditLogMessageServiceNameContentManagement string = "ContentManagement"

	// AuditLogMessageServiceNameDatatables captures enum value "Datatables"
	AuditLogMessageServiceNameDatatables string = "Datatables"

	// AuditLogMessageServiceNameDirectory captures enum value "Directory"
	AuditLogMessageServiceNameDirectory string = "Directory"

	// AuditLogMessageServiceNameEmails captures enum value "Emails"
	AuditLogMessageServiceNameEmails string = "Emails"

	// AuditLogMessageServiceNameDynamicSchema captures enum value "DynamicSchema"
	AuditLogMessageServiceNameDynamicSchema string = "DynamicSchema"

	// AuditLogMessageServiceNameGamification captures enum value "Gamification"
	AuditLogMessageServiceNameGamification string = "Gamification"

	// AuditLogMessageServiceNameGroups captures enum value "Groups"
	AuditLogMessageServiceNameGroups string = "Groups"

	// AuditLogMessageServiceNameIntegrations captures enum value "Integrations"
	AuditLogMessageServiceNameIntegrations string = "Integrations"

	// AuditLogMessageServiceNameKnowledge captures enum value "Knowledge"
	AuditLogMessageServiceNameKnowledge string = "Knowledge"

	// AuditLogMessageServiceNameLanguageUnderstanding captures enum value "LanguageUnderstanding"
	AuditLogMessageServiceNameLanguageUnderstanding string = "LanguageUnderstanding"

	// AuditLogMessageServiceNameLearning captures enum value "Learning"
	AuditLogMessageServiceNameLearning string = "Learning"

	// AuditLogMessageServiceNameLimits captures enum value "Limits"
	AuditLogMessageServiceNameLimits string = "Limits"

	// AuditLogMessageServiceNameLogCapture captures enum value "LogCapture"
	AuditLogMessageServiceNameLogCapture string = "LogCapture"

	// AuditLogMessageServiceNameOutbound captures enum value "Outbound"
	AuditLogMessageServiceNameOutbound string = "Outbound"

	// AuditLogMessageServiceNamePeoplePermissions captures enum value "PeoplePermissions"
	AuditLogMessageServiceNamePeoplePermissions string = "PeoplePermissions"

	// AuditLogMessageServiceNameEmployeePerformance captures enum value "EmployeePerformance"
	AuditLogMessageServiceNameEmployeePerformance string = "EmployeePerformance"

	// AuditLogMessageServiceNamePredictiveEngagement captures enum value "PredictiveEngagement"
	AuditLogMessageServiceNamePredictiveEngagement string = "PredictiveEngagement"

	// AuditLogMessageServiceNamePresence captures enum value "Presence"
	AuditLogMessageServiceNamePresence string = "Presence"

	// AuditLogMessageServiceNameQuality captures enum value "Quality"
	AuditLogMessageServiceNameQuality string = "Quality"

	// AuditLogMessageServiceNameResponseManagement captures enum value "ResponseManagement"
	AuditLogMessageServiceNameResponseManagement string = "ResponseManagement"

	// AuditLogMessageServiceNameRouting captures enum value "Routing"
	AuditLogMessageServiceNameRouting string = "Routing"

	// AuditLogMessageServiceNameSpeechAndTextAnalytics captures enum value "SpeechAndTextAnalytics"
	AuditLogMessageServiceNameSpeechAndTextAnalytics string = "SpeechAndTextAnalytics"

	// AuditLogMessageServiceNameTelephony captures enum value "Telephony"
	AuditLogMessageServiceNameTelephony string = "Telephony"

	// AuditLogMessageServiceNameTriggers captures enum value "Triggers"
	AuditLogMessageServiceNameTriggers string = "Triggers"

	// AuditLogMessageServiceNameProcessAutomation captures enum value "ProcessAutomation"
	AuditLogMessageServiceNameProcessAutomation string = "ProcessAutomation"

	// AuditLogMessageServiceNameVoicemail captures enum value "Voicemail"
	AuditLogMessageServiceNameVoicemail string = "Voicemail"

	// AuditLogMessageServiceNameWebDeployments captures enum value "WebDeployments"
	AuditLogMessageServiceNameWebDeployments string = "WebDeployments"

	// AuditLogMessageServiceNameWebhooks captures enum value "Webhooks"
	AuditLogMessageServiceNameWebhooks string = "Webhooks"

	// AuditLogMessageServiceNameWorkforceManagement captures enum value "WorkforceManagement"
	AuditLogMessageServiceNameWorkforceManagement string = "WorkforceManagement"

	// AuditLogMessageServiceNameMessaging captures enum value "Messaging"
	AuditLogMessageServiceNameMessaging string = "Messaging"

	// AuditLogMessageServiceNameSupportability captures enum value "Supportability"
	AuditLogMessageServiceNameSupportability string = "Supportability"

	// AuditLogMessageServiceNameCallback captures enum value "Callback"
	AuditLogMessageServiceNameCallback string = "Callback"

	// AuditLogMessageServiceNameWorkitems captures enum value "Workitems"
	AuditLogMessageServiceNameWorkitems string = "Workitems"

	// AuditLogMessageServiceNameSCIM captures enum value "SCIM"
	AuditLogMessageServiceNameSCIM string = "SCIM"

	// AuditLogMessageServiceNameNumberPurchasing captures enum value "NumberPurchasing"
	AuditLogMessageServiceNameNumberPurchasing string = "NumberPurchasing"

	// AuditLogMessageServiceNameMarketplace captures enum value "Marketplace"
	AuditLogMessageServiceNameMarketplace string = "Marketplace"
)

// prop value enum
func (m *AuditLogMessage) validateServiceNameEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, auditLogMessageTypeServiceNamePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *AuditLogMessage) validateServiceName(formats strfmt.Registry) error {
	if swag.IsZero(m.ServiceName) { // not required
		return nil
	}

	// value enum
	if err := m.validateServiceNameEnum("serviceName", "body", m.ServiceName); err != nil {
		return err
	}

	return nil
}

var auditLogMessageTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["SUCCESS","FAILURE","WARNING"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		auditLogMessageTypeStatusPropEnum = append(auditLogMessageTypeStatusPropEnum, v)
	}
}

const (

	// AuditLogMessageStatusSUCCESS captures enum value "SUCCESS"
	AuditLogMessageStatusSUCCESS string = "SUCCESS"

	// AuditLogMessageStatusFAILURE captures enum value "FAILURE"
	AuditLogMessageStatusFAILURE string = "FAILURE"

	// AuditLogMessageStatusWARNING captures enum value "WARNING"
	AuditLogMessageStatusWARNING string = "WARNING"
)

// prop value enum
func (m *AuditLogMessage) validateStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, auditLogMessageTypeStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *AuditLogMessage) validateStatus(formats strfmt.Registry) error {
	if swag.IsZero(m.Status) { // not required
		return nil
	}

	// value enum
	if err := m.validateStatusEnum("status", "body", m.Status); err != nil {
		return err
	}

	return nil
}

func (m *AuditLogMessage) validateUser(formats strfmt.Registry) error {
	if swag.IsZero(m.User) { // not required
		return nil
	}

	if m.User != nil {
		if err := m.User.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("user")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("user")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this audit log message based on the context it is used
func (m *AuditLogMessage) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateClient(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateEntity(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateEntityChanges(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateInitiatingAction(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateMessage(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidatePropertyChanges(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateUser(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AuditLogMessage) contextValidateClient(ctx context.Context, formats strfmt.Registry) error {

	if m.Client != nil {
		if err := m.Client.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("client")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("client")
			}
			return err
		}
	}

	return nil
}

func (m *AuditLogMessage) contextValidateEntity(ctx context.Context, formats strfmt.Registry) error {

	if m.Entity != nil {
		if err := m.Entity.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("entity")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("entity")
			}
			return err
		}
	}

	return nil
}

func (m *AuditLogMessage) contextValidateEntityChanges(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.EntityChanges); i++ {

		if m.EntityChanges[i] != nil {
			if err := m.EntityChanges[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("entityChanges" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("entityChanges" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *AuditLogMessage) contextValidateInitiatingAction(ctx context.Context, formats strfmt.Registry) error {

	if m.InitiatingAction != nil {
		if err := m.InitiatingAction.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("initiatingAction")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("initiatingAction")
			}
			return err
		}
	}

	return nil
}

func (m *AuditLogMessage) contextValidateMessage(ctx context.Context, formats strfmt.Registry) error {

	if m.Message != nil {
		if err := m.Message.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("message")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("message")
			}
			return err
		}
	}

	return nil
}

func (m *AuditLogMessage) contextValidatePropertyChanges(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.PropertyChanges); i++ {

		if m.PropertyChanges[i] != nil {
			if err := m.PropertyChanges[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("propertyChanges" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("propertyChanges" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *AuditLogMessage) contextValidateUser(ctx context.Context, formats strfmt.Registry) error {

	if m.User != nil {
		if err := m.User.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("user")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("user")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AuditLogMessage) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AuditLogMessage) UnmarshalBinary(b []byte) error {
	var res AuditLogMessage
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
