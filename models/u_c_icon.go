// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UCIcon u c icon
//
// swagger:model UCIcon
type UCIcon struct {

	// vector
	// Required: true
	// Read Only: true
	Vector string `json:"vector"`
}

// Validate validates this u c icon
func (m *UCIcon) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateVector(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UCIcon) validateVector(formats strfmt.Registry) error {

	if err := validate.RequiredString("vector", "body", m.Vector); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this u c icon based on the context it is used
func (m *UCIcon) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateVector(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UCIcon) contextValidateVector(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "vector", "body", string(m.Vector)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *UCIcon) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UCIcon) UnmarshalBinary(b []byte) error {
	var res UCIcon
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
