// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PatchBuReschedulingOptionsManagementUnitRequest patch bu rescheduling options management unit request
//
// swagger:model PatchBuReschedulingOptionsManagementUnitRequest
type PatchBuReschedulingOptionsManagementUnitRequest struct {

	// Whether to mark the run as applied.  Only applies to reschedule runs.  Once applied, a run cannot be un-marked as applied
	Applied bool `json:"applied"`

	// The management unit portion of the rescheduling run to update
	// Required: true
	ManagementUnitID *string `json:"managementUnitId"`
}

// Validate validates this patch bu rescheduling options management unit request
func (m *PatchBuReschedulingOptionsManagementUnitRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateManagementUnitID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PatchBuReschedulingOptionsManagementUnitRequest) validateManagementUnitID(formats strfmt.Registry) error {

	if err := validate.Required("managementUnitId", "body", m.ManagementUnitID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PatchBuReschedulingOptionsManagementUnitRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PatchBuReschedulingOptionsManagementUnitRequest) UnmarshalBinary(b []byte) error {
	var res PatchBuReschedulingOptionsManagementUnitRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
