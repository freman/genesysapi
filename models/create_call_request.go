// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CreateCallRequest create call request
//
// swagger:model CreateCallRequest
type CreateCallRequest struct {

	// The queue ID to call on behalf of.
	CallFromQueueID string `json:"callFromQueueId,omitempty"`

	// The queue ID to call.
	CallQueueID string `json:"callQueueId,omitempty"`

	// The user ID to call.
	CallUserID string `json:"callUserId,omitempty"`

	// The caller id phone number for this outbound call.
	CallerID string `json:"callerId,omitempty"`

	// The caller id name for this outbound call.
	CallerIDName string `json:"callerIdName,omitempty"`

	// The list of existing call conversations to merge into a new ad-hoc conference.
	ConversationIds []string `json:"conversationIds"`

	// The external contact with which to associate the call.
	ExternalContactID string `json:"externalContactId,omitempty"`

	// The language skill ID to use for routing this call (if calling a queue).
	LanguageID string `json:"languageId,omitempty"`

	// The list of participants to call to create a new ad-hoc conference.
	Participants []*Destination `json:"participants"`

	// The phone number to dial.
	PhoneNumber string `json:"phoneNumber,omitempty"`

	// The priority to assign to this call (if calling a queue).
	Priority int32 `json:"priority,omitempty"`

	// The skill ID's to use for routing this call (if calling a queue).
	RoutingSkillsIds []string `json:"routingSkillsIds"`

	// User to User Information (UUI) data managed by SIP session application.
	UuiData string `json:"uuiData,omitempty"`
}

// Validate validates this create call request
func (m *CreateCallRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateParticipants(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateCallRequest) validateParticipants(formats strfmt.Registry) error {
	if swag.IsZero(m.Participants) { // not required
		return nil
	}

	for i := 0; i < len(m.Participants); i++ {
		if swag.IsZero(m.Participants[i]) { // not required
			continue
		}

		if m.Participants[i] != nil {
			if err := m.Participants[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("participants" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("participants" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this create call request based on the context it is used
func (m *CreateCallRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateParticipants(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateCallRequest) contextValidateParticipants(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.Participants); i++ {

		if m.Participants[i] != nil {
			if err := m.Participants[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("participants" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("participants" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *CreateCallRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateCallRequest) UnmarshalBinary(b []byte) error {
	var res CreateCallRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
