// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SelectorEventTrigger Details about a selector event trigger
//
// swagger:model SelectorEventTrigger
type SelectorEventTrigger struct {

	// Name of event triggered when element matching selector is interacted with.
	// Required: true
	EventName *string `json:"eventName"`

	// Element that triggers event.
	// Required: true
	Selector *string `json:"selector"`
}

// Validate validates this selector event trigger
func (m *SelectorEventTrigger) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEventName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSelector(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SelectorEventTrigger) validateEventName(formats strfmt.Registry) error {

	if err := validate.Required("eventName", "body", m.EventName); err != nil {
		return err
	}

	return nil
}

func (m *SelectorEventTrigger) validateSelector(formats strfmt.Registry) error {

	if err := validate.Required("selector", "body", m.Selector); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SelectorEventTrigger) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SelectorEventTrigger) UnmarshalBinary(b []byte) error {
	var res SelectorEventTrigger
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
