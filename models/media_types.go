// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// MediaTypes Media types
//
// swagger:model MediaTypes
type MediaTypes struct {

	// Specify allowed media types for inbound and outbound messages. If this field is empty, all inbound and outbound media will be blocked.
	Allow *MediaTypeAccess `json:"allow,omitempty"`
}

// Validate validates this media types
func (m *MediaTypes) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAllow(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MediaTypes) validateAllow(formats strfmt.Registry) error {

	if swag.IsZero(m.Allow) { // not required
		return nil
	}

	if m.Allow != nil {
		if err := m.Allow.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("allow")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *MediaTypes) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MediaTypes) UnmarshalBinary(b []byte) error {
	var res MediaTypes
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
