// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AgentPossibleWorkShiftsRequest agent possible work shifts request
//
// swagger:model AgentPossibleWorkShiftsRequest
type AgentPossibleWorkShiftsRequest struct {

	// Number of weeks for which to return possible work shifts
	// Required: true
	WeekCount *int32 `json:"weekCount"`

	// Start date of requested effective work plan, day of week will be in line with business unit start day of week. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	// Required: true
	// Format: date
	WeekStartDate *strfmt.Date `json:"weekStartDate"`
}

// Validate validates this agent possible work shifts request
func (m *AgentPossibleWorkShiftsRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateWeekCount(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateWeekStartDate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AgentPossibleWorkShiftsRequest) validateWeekCount(formats strfmt.Registry) error {

	if err := validate.Required("weekCount", "body", m.WeekCount); err != nil {
		return err
	}

	return nil
}

func (m *AgentPossibleWorkShiftsRequest) validateWeekStartDate(formats strfmt.Registry) error {

	if err := validate.Required("weekStartDate", "body", m.WeekStartDate); err != nil {
		return err
	}

	if err := validate.FormatOf("weekStartDate", "body", "date", m.WeekStartDate.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this agent possible work shifts request based on context it is used
func (m *AgentPossibleWorkShiftsRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AgentPossibleWorkShiftsRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AgentPossibleWorkShiftsRequest) UnmarshalBinary(b []byte) error {
	var res AgentPossibleWorkShiftsRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
