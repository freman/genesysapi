// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// BulkUpdateShiftTradeStateResultItem bulk update shift trade state result item
//
// swagger:model BulkUpdateShiftTradeStateResultItem
type BulkUpdateShiftTradeStateResultItem struct {

	// The reason the update failed, if applicable
	// Enum: [InitiatingAgentScheduleNotFound InitiatingAgentShiftHasExternalActivities InitiatingAgentShiftNotFound ReceivingAgentNotFound ReceivingAgentScheduleNotFound ReceivingAgentShiftHasExternalActivities ReceivingAgentShiftNotFound ScheduleNotPublished TransitionNotAllowed]
	FailureReason string `json:"failureReason,omitempty"`

	// The globally unique identifier for the object.
	// Read Only: true
	ID string `json:"id,omitempty"`

	// Version metadata for the shift trade
	Metadata *WfmVersionedEntityMetadata `json:"metadata,omitempty"`

	// The user who reviewed the request, if applicable
	ReviewedBy *UserReference `json:"reviewedBy,omitempty"`

	// The date the request was reviewed, if applicable. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
	// Format: date-time
	ReviewedDate strfmt.DateTime `json:"reviewedDate,omitempty"`

	// The state of the shift trade after the update request is processed
	// Enum: [Unmatched Matched Approved Denied Expired Canceled]
	State string `json:"state,omitempty"`
}

// Validate validates this bulk update shift trade state result item
func (m *BulkUpdateShiftTradeStateResultItem) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFailureReason(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMetadata(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateReviewedBy(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateReviewedDate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateState(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var bulkUpdateShiftTradeStateResultItemTypeFailureReasonPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["InitiatingAgentScheduleNotFound","InitiatingAgentShiftHasExternalActivities","InitiatingAgentShiftNotFound","ReceivingAgentNotFound","ReceivingAgentScheduleNotFound","ReceivingAgentShiftHasExternalActivities","ReceivingAgentShiftNotFound","ScheduleNotPublished","TransitionNotAllowed"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		bulkUpdateShiftTradeStateResultItemTypeFailureReasonPropEnum = append(bulkUpdateShiftTradeStateResultItemTypeFailureReasonPropEnum, v)
	}
}

const (

	// BulkUpdateShiftTradeStateResultItemFailureReasonInitiatingAgentScheduleNotFound captures enum value "InitiatingAgentScheduleNotFound"
	BulkUpdateShiftTradeStateResultItemFailureReasonInitiatingAgentScheduleNotFound string = "InitiatingAgentScheduleNotFound"

	// BulkUpdateShiftTradeStateResultItemFailureReasonInitiatingAgentShiftHasExternalActivities captures enum value "InitiatingAgentShiftHasExternalActivities"
	BulkUpdateShiftTradeStateResultItemFailureReasonInitiatingAgentShiftHasExternalActivities string = "InitiatingAgentShiftHasExternalActivities"

	// BulkUpdateShiftTradeStateResultItemFailureReasonInitiatingAgentShiftNotFound captures enum value "InitiatingAgentShiftNotFound"
	BulkUpdateShiftTradeStateResultItemFailureReasonInitiatingAgentShiftNotFound string = "InitiatingAgentShiftNotFound"

	// BulkUpdateShiftTradeStateResultItemFailureReasonReceivingAgentNotFound captures enum value "ReceivingAgentNotFound"
	BulkUpdateShiftTradeStateResultItemFailureReasonReceivingAgentNotFound string = "ReceivingAgentNotFound"

	// BulkUpdateShiftTradeStateResultItemFailureReasonReceivingAgentScheduleNotFound captures enum value "ReceivingAgentScheduleNotFound"
	BulkUpdateShiftTradeStateResultItemFailureReasonReceivingAgentScheduleNotFound string = "ReceivingAgentScheduleNotFound"

	// BulkUpdateShiftTradeStateResultItemFailureReasonReceivingAgentShiftHasExternalActivities captures enum value "ReceivingAgentShiftHasExternalActivities"
	BulkUpdateShiftTradeStateResultItemFailureReasonReceivingAgentShiftHasExternalActivities string = "ReceivingAgentShiftHasExternalActivities"

	// BulkUpdateShiftTradeStateResultItemFailureReasonReceivingAgentShiftNotFound captures enum value "ReceivingAgentShiftNotFound"
	BulkUpdateShiftTradeStateResultItemFailureReasonReceivingAgentShiftNotFound string = "ReceivingAgentShiftNotFound"

	// BulkUpdateShiftTradeStateResultItemFailureReasonScheduleNotPublished captures enum value "ScheduleNotPublished"
	BulkUpdateShiftTradeStateResultItemFailureReasonScheduleNotPublished string = "ScheduleNotPublished"

	// BulkUpdateShiftTradeStateResultItemFailureReasonTransitionNotAllowed captures enum value "TransitionNotAllowed"
	BulkUpdateShiftTradeStateResultItemFailureReasonTransitionNotAllowed string = "TransitionNotAllowed"
)

// prop value enum
func (m *BulkUpdateShiftTradeStateResultItem) validateFailureReasonEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, bulkUpdateShiftTradeStateResultItemTypeFailureReasonPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *BulkUpdateShiftTradeStateResultItem) validateFailureReason(formats strfmt.Registry) error {

	if swag.IsZero(m.FailureReason) { // not required
		return nil
	}

	// value enum
	if err := m.validateFailureReasonEnum("failureReason", "body", m.FailureReason); err != nil {
		return err
	}

	return nil
}

func (m *BulkUpdateShiftTradeStateResultItem) validateMetadata(formats strfmt.Registry) error {

	if swag.IsZero(m.Metadata) { // not required
		return nil
	}

	if m.Metadata != nil {
		if err := m.Metadata.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("metadata")
			}
			return err
		}
	}

	return nil
}

func (m *BulkUpdateShiftTradeStateResultItem) validateReviewedBy(formats strfmt.Registry) error {

	if swag.IsZero(m.ReviewedBy) { // not required
		return nil
	}

	if m.ReviewedBy != nil {
		if err := m.ReviewedBy.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("reviewedBy")
			}
			return err
		}
	}

	return nil
}

func (m *BulkUpdateShiftTradeStateResultItem) validateReviewedDate(formats strfmt.Registry) error {

	if swag.IsZero(m.ReviewedDate) { // not required
		return nil
	}

	if err := validate.FormatOf("reviewedDate", "body", "date-time", m.ReviewedDate.String(), formats); err != nil {
		return err
	}

	return nil
}

var bulkUpdateShiftTradeStateResultItemTypeStatePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Unmatched","Matched","Approved","Denied","Expired","Canceled"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		bulkUpdateShiftTradeStateResultItemTypeStatePropEnum = append(bulkUpdateShiftTradeStateResultItemTypeStatePropEnum, v)
	}
}

const (

	// BulkUpdateShiftTradeStateResultItemStateUnmatched captures enum value "Unmatched"
	BulkUpdateShiftTradeStateResultItemStateUnmatched string = "Unmatched"

	// BulkUpdateShiftTradeStateResultItemStateMatched captures enum value "Matched"
	BulkUpdateShiftTradeStateResultItemStateMatched string = "Matched"

	// BulkUpdateShiftTradeStateResultItemStateApproved captures enum value "Approved"
	BulkUpdateShiftTradeStateResultItemStateApproved string = "Approved"

	// BulkUpdateShiftTradeStateResultItemStateDenied captures enum value "Denied"
	BulkUpdateShiftTradeStateResultItemStateDenied string = "Denied"

	// BulkUpdateShiftTradeStateResultItemStateExpired captures enum value "Expired"
	BulkUpdateShiftTradeStateResultItemStateExpired string = "Expired"

	// BulkUpdateShiftTradeStateResultItemStateCanceled captures enum value "Canceled"
	BulkUpdateShiftTradeStateResultItemStateCanceled string = "Canceled"
)

// prop value enum
func (m *BulkUpdateShiftTradeStateResultItem) validateStateEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, bulkUpdateShiftTradeStateResultItemTypeStatePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *BulkUpdateShiftTradeStateResultItem) validateState(formats strfmt.Registry) error {

	if swag.IsZero(m.State) { // not required
		return nil
	}

	// value enum
	if err := m.validateStateEnum("state", "body", m.State); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *BulkUpdateShiftTradeStateResultItem) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BulkUpdateShiftTradeStateResultItem) UnmarshalBinary(b []byte) error {
	var res BulkUpdateShiftTradeStateResultItem
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
