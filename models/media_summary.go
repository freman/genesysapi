// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// MediaSummary media summary
//
// swagger:model MediaSummary
type MediaSummary struct {

	// contact center
	ContactCenter *MediaSummaryDetail `json:"contactCenter,omitempty"`

	// enterprise
	Enterprise *MediaSummaryDetail `json:"enterprise,omitempty"`
}

// Validate validates this media summary
func (m *MediaSummary) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateContactCenter(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEnterprise(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MediaSummary) validateContactCenter(formats strfmt.Registry) error {

	if swag.IsZero(m.ContactCenter) { // not required
		return nil
	}

	if m.ContactCenter != nil {
		if err := m.ContactCenter.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("contactCenter")
			}
			return err
		}
	}

	return nil
}

func (m *MediaSummary) validateEnterprise(formats strfmt.Registry) error {

	if swag.IsZero(m.Enterprise) { // not required
		return nil
	}

	if m.Enterprise != nil {
		if err := m.Enterprise.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("enterprise")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *MediaSummary) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MediaSummary) UnmarshalBinary(b []byte) error {
	var res MediaSummary
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
