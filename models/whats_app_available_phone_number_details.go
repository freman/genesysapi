// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// WhatsAppAvailablePhoneNumberDetails whats app available phone number details
//
// swagger:model WhatsAppAvailablePhoneNumberDetails
type WhatsAppAvailablePhoneNumberDetails struct {

	// The verified name associated with this phone number.
	// Required: true
	// Read Only: true
	Name string `json:"name"`

	// The display name associated with this phone number. It's typically the E.164 representation of the number.
	// Read Only: true
	PhoneNumber string `json:"phoneNumber,omitempty"`

	// The status of this phone number.
	// Required: true
	// Read Only: true
	Status string `json:"status"`
}

// Validate validates this whats app available phone number details
func (m *WhatsAppAvailablePhoneNumberDetails) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *WhatsAppAvailablePhoneNumberDetails) validateName(formats strfmt.Registry) error {

	if err := validate.RequiredString("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

func (m *WhatsAppAvailablePhoneNumberDetails) validateStatus(formats strfmt.Registry) error {

	if err := validate.RequiredString("status", "body", m.Status); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this whats app available phone number details based on the context it is used
func (m *WhatsAppAvailablePhoneNumberDetails) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateName(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidatePhoneNumber(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateStatus(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *WhatsAppAvailablePhoneNumberDetails) contextValidateName(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "name", "body", string(m.Name)); err != nil {
		return err
	}

	return nil
}

func (m *WhatsAppAvailablePhoneNumberDetails) contextValidatePhoneNumber(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "phoneNumber", "body", string(m.PhoneNumber)); err != nil {
		return err
	}

	return nil
}

func (m *WhatsAppAvailablePhoneNumberDetails) contextValidateStatus(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "status", "body", string(m.Status)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *WhatsAppAvailablePhoneNumberDetails) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *WhatsAppAvailablePhoneNumberDetails) UnmarshalBinary(b []byte) error {
	var res WhatsAppAvailablePhoneNumberDetails
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
