// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// KnowledgeExportJobFilter knowledge export job filter
//
// swagger:model KnowledgeExportJobFilter
type KnowledgeExportJobFilter struct {

	// Filters for narrowing down which documents to export.
	DocumentsFilter *KnowledgeExportJobDocumentsFilter `json:"documentsFilter,omitempty"`

	// Specifies what version should be exported.
	// Required: true
	// Enum: [All Latest]
	VersionFilter *string `json:"versionFilter"`
}

// Validate validates this knowledge export job filter
func (m *KnowledgeExportJobFilter) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDocumentsFilter(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateVersionFilter(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *KnowledgeExportJobFilter) validateDocumentsFilter(formats strfmt.Registry) error {

	if swag.IsZero(m.DocumentsFilter) { // not required
		return nil
	}

	if m.DocumentsFilter != nil {
		if err := m.DocumentsFilter.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("documentsFilter")
			}
			return err
		}
	}

	return nil
}

var knowledgeExportJobFilterTypeVersionFilterPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["All","Latest"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		knowledgeExportJobFilterTypeVersionFilterPropEnum = append(knowledgeExportJobFilterTypeVersionFilterPropEnum, v)
	}
}

const (

	// KnowledgeExportJobFilterVersionFilterAll captures enum value "All"
	KnowledgeExportJobFilterVersionFilterAll string = "All"

	// KnowledgeExportJobFilterVersionFilterLatest captures enum value "Latest"
	KnowledgeExportJobFilterVersionFilterLatest string = "Latest"
)

// prop value enum
func (m *KnowledgeExportJobFilter) validateVersionFilterEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, knowledgeExportJobFilterTypeVersionFilterPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *KnowledgeExportJobFilter) validateVersionFilter(formats strfmt.Registry) error {

	if err := validate.Required("versionFilter", "body", m.VersionFilter); err != nil {
		return err
	}

	// value enum
	if err := m.validateVersionFilterEnum("versionFilter", "body", *m.VersionFilter); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *KnowledgeExportJobFilter) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *KnowledgeExportJobFilter) UnmarshalBinary(b []byte) error {
	var res KnowledgeExportJobFilter
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
