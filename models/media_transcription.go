// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MediaTranscription media transcription
//
// swagger:model MediaTranscription
type MediaTranscription struct {

	// display name
	DisplayName string `json:"displayName,omitempty"`

	// integration Id
	IntegrationID string `json:"integrationId,omitempty"`

	// transcription provider
	// Enum: [VOCI CALLJOURNEY]
	TranscriptionProvider string `json:"transcriptionProvider,omitempty"`
}

// Validate validates this media transcription
func (m *MediaTranscription) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTranscriptionProvider(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var mediaTranscriptionTypeTranscriptionProviderPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["VOCI","CALLJOURNEY"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		mediaTranscriptionTypeTranscriptionProviderPropEnum = append(mediaTranscriptionTypeTranscriptionProviderPropEnum, v)
	}
}

const (

	// MediaTranscriptionTranscriptionProviderVOCI captures enum value "VOCI"
	MediaTranscriptionTranscriptionProviderVOCI string = "VOCI"

	// MediaTranscriptionTranscriptionProviderCALLJOURNEY captures enum value "CALLJOURNEY"
	MediaTranscriptionTranscriptionProviderCALLJOURNEY string = "CALLJOURNEY"
)

// prop value enum
func (m *MediaTranscription) validateTranscriptionProviderEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, mediaTranscriptionTypeTranscriptionProviderPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *MediaTranscription) validateTranscriptionProvider(formats strfmt.Registry) error {

	if swag.IsZero(m.TranscriptionProvider) { // not required
		return nil
	}

	// value enum
	if err := m.validateTranscriptionProviderEnum("transcriptionProvider", "body", m.TranscriptionProvider); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *MediaTranscription) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MediaTranscription) UnmarshalBinary(b []byte) error {
	var res MediaTranscription
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
