// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// LearningAssignmentAggregateQueryResponseMetric learning assignment aggregate query response metric
//
// swagger:model LearningAssignmentAggregateQueryResponseMetric
type LearningAssignmentAggregateQueryResponseMetric struct {

	// The metric this applies to
	// Enum: [nActivities nPlannedActivities nInProgressActivities nCompleteActivities nOverdueActivities nPassedActivities nFailedActivities oActivityScore nNotCompletedActivities]
	Metric string `json:"metric,omitempty"`

	// The aggregated values for this metric
	Stats *LearningAssignmentAggregateQueryResponseStats `json:"stats,omitempty"`
}

// Validate validates this learning assignment aggregate query response metric
func (m *LearningAssignmentAggregateQueryResponseMetric) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMetric(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStats(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var learningAssignmentAggregateQueryResponseMetricTypeMetricPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["nActivities","nPlannedActivities","nInProgressActivities","nCompleteActivities","nOverdueActivities","nPassedActivities","nFailedActivities","oActivityScore","nNotCompletedActivities"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		learningAssignmentAggregateQueryResponseMetricTypeMetricPropEnum = append(learningAssignmentAggregateQueryResponseMetricTypeMetricPropEnum, v)
	}
}

const (

	// LearningAssignmentAggregateQueryResponseMetricMetricNActivities captures enum value "nActivities"
	LearningAssignmentAggregateQueryResponseMetricMetricNActivities string = "nActivities"

	// LearningAssignmentAggregateQueryResponseMetricMetricNPlannedActivities captures enum value "nPlannedActivities"
	LearningAssignmentAggregateQueryResponseMetricMetricNPlannedActivities string = "nPlannedActivities"

	// LearningAssignmentAggregateQueryResponseMetricMetricNInProgressActivities captures enum value "nInProgressActivities"
	LearningAssignmentAggregateQueryResponseMetricMetricNInProgressActivities string = "nInProgressActivities"

	// LearningAssignmentAggregateQueryResponseMetricMetricNCompleteActivities captures enum value "nCompleteActivities"
	LearningAssignmentAggregateQueryResponseMetricMetricNCompleteActivities string = "nCompleteActivities"

	// LearningAssignmentAggregateQueryResponseMetricMetricNOverdueActivities captures enum value "nOverdueActivities"
	LearningAssignmentAggregateQueryResponseMetricMetricNOverdueActivities string = "nOverdueActivities"

	// LearningAssignmentAggregateQueryResponseMetricMetricNPassedActivities captures enum value "nPassedActivities"
	LearningAssignmentAggregateQueryResponseMetricMetricNPassedActivities string = "nPassedActivities"

	// LearningAssignmentAggregateQueryResponseMetricMetricNFailedActivities captures enum value "nFailedActivities"
	LearningAssignmentAggregateQueryResponseMetricMetricNFailedActivities string = "nFailedActivities"

	// LearningAssignmentAggregateQueryResponseMetricMetricOActivityScore captures enum value "oActivityScore"
	LearningAssignmentAggregateQueryResponseMetricMetricOActivityScore string = "oActivityScore"

	// LearningAssignmentAggregateQueryResponseMetricMetricNNotCompletedActivities captures enum value "nNotCompletedActivities"
	LearningAssignmentAggregateQueryResponseMetricMetricNNotCompletedActivities string = "nNotCompletedActivities"
)

// prop value enum
func (m *LearningAssignmentAggregateQueryResponseMetric) validateMetricEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, learningAssignmentAggregateQueryResponseMetricTypeMetricPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *LearningAssignmentAggregateQueryResponseMetric) validateMetric(formats strfmt.Registry) error {

	if swag.IsZero(m.Metric) { // not required
		return nil
	}

	// value enum
	if err := m.validateMetricEnum("metric", "body", m.Metric); err != nil {
		return err
	}

	return nil
}

func (m *LearningAssignmentAggregateQueryResponseMetric) validateStats(formats strfmt.Registry) error {

	if swag.IsZero(m.Stats) { // not required
		return nil
	}

	if m.Stats != nil {
		if err := m.Stats.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("stats")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *LearningAssignmentAggregateQueryResponseMetric) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LearningAssignmentAggregateQueryResponseMetric) UnmarshalBinary(b []byte) error {
	var res LearningAssignmentAggregateQueryResponseMetric
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
