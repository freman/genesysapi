// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ConversationAggregateQueryPredicate conversation aggregate query predicate
//
// swagger:model ConversationAggregateQueryPredicate
type ConversationAggregateQueryPredicate struct {

	// Left hand side for dimension predicates
	// Enum: [addressFrom addressTo agentAssistantId agentRank agentScore ani conversationId convertedFrom convertedTo direction disconnectType divisionId dnis edgeId externalContactId externalMediaCount externalOrganizationId flaggedReason flowOutType groupId interactionType journeyActionId journeyActionMapId journeyActionMapVersion journeyCustomerId journeyCustomerIdType journeyCustomerSessionId journeyCustomerSessionIdType mediaCount mediaType messageType originatingDirection outboundCampaignId outboundContactId outboundContactListId participantName peerId proposedAgentId provider purpose queueId remote requestedLanguageId requestedRouting requestedRoutingSkillId roomId routingPriority scoredAgentId selectedAgentId selectedAgentRank sessionDnis sessionId stationId teamId usedRouting userId wrapUpCode]
	Dimension string `json:"dimension,omitempty"`

	// Optional operator, default is matches
	// Enum: [matches exists notExists]
	Operator string `json:"operator,omitempty"`

	// Right hand side for dimension predicates
	Range *NumericRange `json:"range,omitempty"`

	// Optional type, can usually be inferred
	// Enum: [dimension property metric]
	Type string `json:"type,omitempty"`

	// Right hand side for dimension predicates
	Value string `json:"value,omitempty"`
}

// Validate validates this conversation aggregate query predicate
func (m *ConversationAggregateQueryPredicate) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDimension(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOperator(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRange(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var conversationAggregateQueryPredicateTypeDimensionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["addressFrom","addressTo","agentAssistantId","agentRank","agentScore","ani","conversationId","convertedFrom","convertedTo","direction","disconnectType","divisionId","dnis","edgeId","externalContactId","externalMediaCount","externalOrganizationId","flaggedReason","flowOutType","groupId","interactionType","journeyActionId","journeyActionMapId","journeyActionMapVersion","journeyCustomerId","journeyCustomerIdType","journeyCustomerSessionId","journeyCustomerSessionIdType","mediaCount","mediaType","messageType","originatingDirection","outboundCampaignId","outboundContactId","outboundContactListId","participantName","peerId","proposedAgentId","provider","purpose","queueId","remote","requestedLanguageId","requestedRouting","requestedRoutingSkillId","roomId","routingPriority","scoredAgentId","selectedAgentId","selectedAgentRank","sessionDnis","sessionId","stationId","teamId","usedRouting","userId","wrapUpCode"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		conversationAggregateQueryPredicateTypeDimensionPropEnum = append(conversationAggregateQueryPredicateTypeDimensionPropEnum, v)
	}
}

const (

	// ConversationAggregateQueryPredicateDimensionAddressFrom captures enum value "addressFrom"
	ConversationAggregateQueryPredicateDimensionAddressFrom string = "addressFrom"

	// ConversationAggregateQueryPredicateDimensionAddressTo captures enum value "addressTo"
	ConversationAggregateQueryPredicateDimensionAddressTo string = "addressTo"

	// ConversationAggregateQueryPredicateDimensionAgentAssistantID captures enum value "agentAssistantId"
	ConversationAggregateQueryPredicateDimensionAgentAssistantID string = "agentAssistantId"

	// ConversationAggregateQueryPredicateDimensionAgentRank captures enum value "agentRank"
	ConversationAggregateQueryPredicateDimensionAgentRank string = "agentRank"

	// ConversationAggregateQueryPredicateDimensionAgentScore captures enum value "agentScore"
	ConversationAggregateQueryPredicateDimensionAgentScore string = "agentScore"

	// ConversationAggregateQueryPredicateDimensionAni captures enum value "ani"
	ConversationAggregateQueryPredicateDimensionAni string = "ani"

	// ConversationAggregateQueryPredicateDimensionConversationID captures enum value "conversationId"
	ConversationAggregateQueryPredicateDimensionConversationID string = "conversationId"

	// ConversationAggregateQueryPredicateDimensionConvertedFrom captures enum value "convertedFrom"
	ConversationAggregateQueryPredicateDimensionConvertedFrom string = "convertedFrom"

	// ConversationAggregateQueryPredicateDimensionConvertedTo captures enum value "convertedTo"
	ConversationAggregateQueryPredicateDimensionConvertedTo string = "convertedTo"

	// ConversationAggregateQueryPredicateDimensionDirection captures enum value "direction"
	ConversationAggregateQueryPredicateDimensionDirection string = "direction"

	// ConversationAggregateQueryPredicateDimensionDisconnectType captures enum value "disconnectType"
	ConversationAggregateQueryPredicateDimensionDisconnectType string = "disconnectType"

	// ConversationAggregateQueryPredicateDimensionDivisionID captures enum value "divisionId"
	ConversationAggregateQueryPredicateDimensionDivisionID string = "divisionId"

	// ConversationAggregateQueryPredicateDimensionDnis captures enum value "dnis"
	ConversationAggregateQueryPredicateDimensionDnis string = "dnis"

	// ConversationAggregateQueryPredicateDimensionEdgeID captures enum value "edgeId"
	ConversationAggregateQueryPredicateDimensionEdgeID string = "edgeId"

	// ConversationAggregateQueryPredicateDimensionExternalContactID captures enum value "externalContactId"
	ConversationAggregateQueryPredicateDimensionExternalContactID string = "externalContactId"

	// ConversationAggregateQueryPredicateDimensionExternalMediaCount captures enum value "externalMediaCount"
	ConversationAggregateQueryPredicateDimensionExternalMediaCount string = "externalMediaCount"

	// ConversationAggregateQueryPredicateDimensionExternalOrganizationID captures enum value "externalOrganizationId"
	ConversationAggregateQueryPredicateDimensionExternalOrganizationID string = "externalOrganizationId"

	// ConversationAggregateQueryPredicateDimensionFlaggedReason captures enum value "flaggedReason"
	ConversationAggregateQueryPredicateDimensionFlaggedReason string = "flaggedReason"

	// ConversationAggregateQueryPredicateDimensionFlowOutType captures enum value "flowOutType"
	ConversationAggregateQueryPredicateDimensionFlowOutType string = "flowOutType"

	// ConversationAggregateQueryPredicateDimensionGroupID captures enum value "groupId"
	ConversationAggregateQueryPredicateDimensionGroupID string = "groupId"

	// ConversationAggregateQueryPredicateDimensionInteractionType captures enum value "interactionType"
	ConversationAggregateQueryPredicateDimensionInteractionType string = "interactionType"

	// ConversationAggregateQueryPredicateDimensionJourneyActionID captures enum value "journeyActionId"
	ConversationAggregateQueryPredicateDimensionJourneyActionID string = "journeyActionId"

	// ConversationAggregateQueryPredicateDimensionJourneyActionMapID captures enum value "journeyActionMapId"
	ConversationAggregateQueryPredicateDimensionJourneyActionMapID string = "journeyActionMapId"

	// ConversationAggregateQueryPredicateDimensionJourneyActionMapVersion captures enum value "journeyActionMapVersion"
	ConversationAggregateQueryPredicateDimensionJourneyActionMapVersion string = "journeyActionMapVersion"

	// ConversationAggregateQueryPredicateDimensionJourneyCustomerID captures enum value "journeyCustomerId"
	ConversationAggregateQueryPredicateDimensionJourneyCustomerID string = "journeyCustomerId"

	// ConversationAggregateQueryPredicateDimensionJourneyCustomerIDType captures enum value "journeyCustomerIdType"
	ConversationAggregateQueryPredicateDimensionJourneyCustomerIDType string = "journeyCustomerIdType"

	// ConversationAggregateQueryPredicateDimensionJourneyCustomerSessionID captures enum value "journeyCustomerSessionId"
	ConversationAggregateQueryPredicateDimensionJourneyCustomerSessionID string = "journeyCustomerSessionId"

	// ConversationAggregateQueryPredicateDimensionJourneyCustomerSessionIDType captures enum value "journeyCustomerSessionIdType"
	ConversationAggregateQueryPredicateDimensionJourneyCustomerSessionIDType string = "journeyCustomerSessionIdType"

	// ConversationAggregateQueryPredicateDimensionMediaCount captures enum value "mediaCount"
	ConversationAggregateQueryPredicateDimensionMediaCount string = "mediaCount"

	// ConversationAggregateQueryPredicateDimensionMediaType captures enum value "mediaType"
	ConversationAggregateQueryPredicateDimensionMediaType string = "mediaType"

	// ConversationAggregateQueryPredicateDimensionMessageType captures enum value "messageType"
	ConversationAggregateQueryPredicateDimensionMessageType string = "messageType"

	// ConversationAggregateQueryPredicateDimensionOriginatingDirection captures enum value "originatingDirection"
	ConversationAggregateQueryPredicateDimensionOriginatingDirection string = "originatingDirection"

	// ConversationAggregateQueryPredicateDimensionOutboundCampaignID captures enum value "outboundCampaignId"
	ConversationAggregateQueryPredicateDimensionOutboundCampaignID string = "outboundCampaignId"

	// ConversationAggregateQueryPredicateDimensionOutboundContactID captures enum value "outboundContactId"
	ConversationAggregateQueryPredicateDimensionOutboundContactID string = "outboundContactId"

	// ConversationAggregateQueryPredicateDimensionOutboundContactListID captures enum value "outboundContactListId"
	ConversationAggregateQueryPredicateDimensionOutboundContactListID string = "outboundContactListId"

	// ConversationAggregateQueryPredicateDimensionParticipantName captures enum value "participantName"
	ConversationAggregateQueryPredicateDimensionParticipantName string = "participantName"

	// ConversationAggregateQueryPredicateDimensionPeerID captures enum value "peerId"
	ConversationAggregateQueryPredicateDimensionPeerID string = "peerId"

	// ConversationAggregateQueryPredicateDimensionProposedAgentID captures enum value "proposedAgentId"
	ConversationAggregateQueryPredicateDimensionProposedAgentID string = "proposedAgentId"

	// ConversationAggregateQueryPredicateDimensionProvider captures enum value "provider"
	ConversationAggregateQueryPredicateDimensionProvider string = "provider"

	// ConversationAggregateQueryPredicateDimensionPurpose captures enum value "purpose"
	ConversationAggregateQueryPredicateDimensionPurpose string = "purpose"

	// ConversationAggregateQueryPredicateDimensionQueueID captures enum value "queueId"
	ConversationAggregateQueryPredicateDimensionQueueID string = "queueId"

	// ConversationAggregateQueryPredicateDimensionRemote captures enum value "remote"
	ConversationAggregateQueryPredicateDimensionRemote string = "remote"

	// ConversationAggregateQueryPredicateDimensionRequestedLanguageID captures enum value "requestedLanguageId"
	ConversationAggregateQueryPredicateDimensionRequestedLanguageID string = "requestedLanguageId"

	// ConversationAggregateQueryPredicateDimensionRequestedRouting captures enum value "requestedRouting"
	ConversationAggregateQueryPredicateDimensionRequestedRouting string = "requestedRouting"

	// ConversationAggregateQueryPredicateDimensionRequestedRoutingSkillID captures enum value "requestedRoutingSkillId"
	ConversationAggregateQueryPredicateDimensionRequestedRoutingSkillID string = "requestedRoutingSkillId"

	// ConversationAggregateQueryPredicateDimensionRoomID captures enum value "roomId"
	ConversationAggregateQueryPredicateDimensionRoomID string = "roomId"

	// ConversationAggregateQueryPredicateDimensionRoutingPriority captures enum value "routingPriority"
	ConversationAggregateQueryPredicateDimensionRoutingPriority string = "routingPriority"

	// ConversationAggregateQueryPredicateDimensionScoredAgentID captures enum value "scoredAgentId"
	ConversationAggregateQueryPredicateDimensionScoredAgentID string = "scoredAgentId"

	// ConversationAggregateQueryPredicateDimensionSelectedAgentID captures enum value "selectedAgentId"
	ConversationAggregateQueryPredicateDimensionSelectedAgentID string = "selectedAgentId"

	// ConversationAggregateQueryPredicateDimensionSelectedAgentRank captures enum value "selectedAgentRank"
	ConversationAggregateQueryPredicateDimensionSelectedAgentRank string = "selectedAgentRank"

	// ConversationAggregateQueryPredicateDimensionSessionDnis captures enum value "sessionDnis"
	ConversationAggregateQueryPredicateDimensionSessionDnis string = "sessionDnis"

	// ConversationAggregateQueryPredicateDimensionSessionID captures enum value "sessionId"
	ConversationAggregateQueryPredicateDimensionSessionID string = "sessionId"

	// ConversationAggregateQueryPredicateDimensionStationID captures enum value "stationId"
	ConversationAggregateQueryPredicateDimensionStationID string = "stationId"

	// ConversationAggregateQueryPredicateDimensionTeamID captures enum value "teamId"
	ConversationAggregateQueryPredicateDimensionTeamID string = "teamId"

	// ConversationAggregateQueryPredicateDimensionUsedRouting captures enum value "usedRouting"
	ConversationAggregateQueryPredicateDimensionUsedRouting string = "usedRouting"

	// ConversationAggregateQueryPredicateDimensionUserID captures enum value "userId"
	ConversationAggregateQueryPredicateDimensionUserID string = "userId"

	// ConversationAggregateQueryPredicateDimensionWrapUpCode captures enum value "wrapUpCode"
	ConversationAggregateQueryPredicateDimensionWrapUpCode string = "wrapUpCode"
)

// prop value enum
func (m *ConversationAggregateQueryPredicate) validateDimensionEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, conversationAggregateQueryPredicateTypeDimensionPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *ConversationAggregateQueryPredicate) validateDimension(formats strfmt.Registry) error {

	if swag.IsZero(m.Dimension) { // not required
		return nil
	}

	// value enum
	if err := m.validateDimensionEnum("dimension", "body", m.Dimension); err != nil {
		return err
	}

	return nil
}

var conversationAggregateQueryPredicateTypeOperatorPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["matches","exists","notExists"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		conversationAggregateQueryPredicateTypeOperatorPropEnum = append(conversationAggregateQueryPredicateTypeOperatorPropEnum, v)
	}
}

const (

	// ConversationAggregateQueryPredicateOperatorMatches captures enum value "matches"
	ConversationAggregateQueryPredicateOperatorMatches string = "matches"

	// ConversationAggregateQueryPredicateOperatorExists captures enum value "exists"
	ConversationAggregateQueryPredicateOperatorExists string = "exists"

	// ConversationAggregateQueryPredicateOperatorNotExists captures enum value "notExists"
	ConversationAggregateQueryPredicateOperatorNotExists string = "notExists"
)

// prop value enum
func (m *ConversationAggregateQueryPredicate) validateOperatorEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, conversationAggregateQueryPredicateTypeOperatorPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *ConversationAggregateQueryPredicate) validateOperator(formats strfmt.Registry) error {

	if swag.IsZero(m.Operator) { // not required
		return nil
	}

	// value enum
	if err := m.validateOperatorEnum("operator", "body", m.Operator); err != nil {
		return err
	}

	return nil
}

func (m *ConversationAggregateQueryPredicate) validateRange(formats strfmt.Registry) error {

	if swag.IsZero(m.Range) { // not required
		return nil
	}

	if m.Range != nil {
		if err := m.Range.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("range")
			}
			return err
		}
	}

	return nil
}

var conversationAggregateQueryPredicateTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["dimension","property","metric"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		conversationAggregateQueryPredicateTypeTypePropEnum = append(conversationAggregateQueryPredicateTypeTypePropEnum, v)
	}
}

const (

	// ConversationAggregateQueryPredicateTypeDimension captures enum value "dimension"
	ConversationAggregateQueryPredicateTypeDimension string = "dimension"

	// ConversationAggregateQueryPredicateTypeProperty captures enum value "property"
	ConversationAggregateQueryPredicateTypeProperty string = "property"

	// ConversationAggregateQueryPredicateTypeMetric captures enum value "metric"
	ConversationAggregateQueryPredicateTypeMetric string = "metric"
)

// prop value enum
func (m *ConversationAggregateQueryPredicate) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, conversationAggregateQueryPredicateTypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *ConversationAggregateQueryPredicate) validateType(formats strfmt.Registry) error {

	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ConversationAggregateQueryPredicate) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ConversationAggregateQueryPredicate) UnmarshalBinary(b []byte) error {
	var res ConversationAggregateQueryPredicate
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
