// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AuthzGrantPolicy authz grant policy
//
// swagger:model AuthzGrantPolicy
type AuthzGrantPolicy struct {

	// actions
	// Unique: true
	Actions []string `json:"actions"`

	// condition
	Condition string `json:"condition,omitempty"`

	// domain
	Domain string `json:"domain,omitempty"`

	// entity name
	EntityName string `json:"entityName,omitempty"`
}

// Validate validates this authz grant policy
func (m *AuthzGrantPolicy) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateActions(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AuthzGrantPolicy) validateActions(formats strfmt.Registry) error {

	if swag.IsZero(m.Actions) { // not required
		return nil
	}

	if err := validate.UniqueItems("actions", "body", m.Actions); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AuthzGrantPolicy) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AuthzGrantPolicy) UnmarshalBinary(b []byte) error {
	var res AuthzGrantPolicy
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
