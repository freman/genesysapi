// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// IPAddressRange Ip address range
//
// swagger:model IpAddressRange
type IPAddressRange struct {

	// cidr
	Cidr string `json:"cidr,omitempty"`

	// region
	Region string `json:"region,omitempty"`

	// service
	// Enum: [data-actions smtp audiohook]
	Service string `json:"service,omitempty"`
}

// Validate validates this Ip address range
func (m *IPAddressRange) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateService(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var ipAddressRangeTypeServicePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["data-actions","smtp","audiohook"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		ipAddressRangeTypeServicePropEnum = append(ipAddressRangeTypeServicePropEnum, v)
	}
}

const (

	// IPAddressRangeServiceDataActions captures enum value "data-actions"
	IPAddressRangeServiceDataActions string = "data-actions"

	// IPAddressRangeServiceSMTP captures enum value "smtp"
	IPAddressRangeServiceSMTP string = "smtp"

	// IPAddressRangeServiceAudiohook captures enum value "audiohook"
	IPAddressRangeServiceAudiohook string = "audiohook"
)

// prop value enum
func (m *IPAddressRange) validateServiceEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, ipAddressRangeTypeServicePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *IPAddressRange) validateService(formats strfmt.Registry) error {

	if swag.IsZero(m.Service) { // not required
		return nil
	}

	// value enum
	if err := m.validateServiceEnum("service", "body", m.Service); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *IPAddressRange) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IPAddressRange) UnmarshalBinary(b []byte) error {
	var res IPAddressRange
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
