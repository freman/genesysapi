// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// WeekScheduleListItemResponse week schedule list item response
//
// swagger:model WeekScheduleListItemResponse
type WeekScheduleListItemResponse struct {

	// Description of the week schedule
	Description string `json:"description,omitempty"`

	// Summary of the results from the schedule run
	GenerationResults *WeekScheduleGenerationResult `json:"generationResults,omitempty"`

	// The globally unique identifier for the object.
	// Read Only: true
	ID string `json:"id,omitempty"`

	// Version metadata for this work plan
	Metadata *WfmVersionedEntityMetadata `json:"metadata,omitempty"`

	// Whether the week schedule is published
	Published bool `json:"published,omitempty"`

	// The URI for this object
	// Read Only: true
	// Format: uri
	SelfURI strfmt.URI `json:"selfUri,omitempty"`

	// Short term forecast associated with this schedule
	ShortTermForecast *ShortTermForecastReference `json:"shortTermForecast,omitempty"`

	// First day of this week schedule in yyyy-MM-dd format
	WeekDate string `json:"weekDate,omitempty"`
}

// Validate validates this week schedule list item response
func (m *WeekScheduleListItemResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateGenerationResults(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMetadata(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSelfURI(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateShortTermForecast(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *WeekScheduleListItemResponse) validateGenerationResults(formats strfmt.Registry) error {

	if swag.IsZero(m.GenerationResults) { // not required
		return nil
	}

	if m.GenerationResults != nil {
		if err := m.GenerationResults.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("generationResults")
			}
			return err
		}
	}

	return nil
}

func (m *WeekScheduleListItemResponse) validateMetadata(formats strfmt.Registry) error {

	if swag.IsZero(m.Metadata) { // not required
		return nil
	}

	if m.Metadata != nil {
		if err := m.Metadata.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("metadata")
			}
			return err
		}
	}

	return nil
}

func (m *WeekScheduleListItemResponse) validateSelfURI(formats strfmt.Registry) error {

	if swag.IsZero(m.SelfURI) { // not required
		return nil
	}

	if err := validate.FormatOf("selfUri", "body", "uri", m.SelfURI.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *WeekScheduleListItemResponse) validateShortTermForecast(formats strfmt.Registry) error {

	if swag.IsZero(m.ShortTermForecast) { // not required
		return nil
	}

	if m.ShortTermForecast != nil {
		if err := m.ShortTermForecast.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("shortTermForecast")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *WeekScheduleListItemResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *WeekScheduleListItemResponse) UnmarshalBinary(b []byte) error {
	var res WeekScheduleListItemResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
