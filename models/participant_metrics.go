// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ParticipantMetrics participant metrics
//
// swagger:model ParticipantMetrics
type ParticipantMetrics struct {

	// Percentage of ACD duration in the conversation
	AcdDurationPercentage float64 `json:"acdDurationPercentage,omitempty"`

	// Percentage of Agent duration in the conversation
	AgentDurationPercentage float64 `json:"agentDurationPercentage,omitempty"`

	// Percentage of Customer duration in the conversation
	CustomerDurationPercentage float64 `json:"customerDurationPercentage,omitempty"`

	// Percentage of IVR duration in the conversation
	IvrDurationPercentage float64 `json:"ivrDurationPercentage,omitempty"`

	// Percentage of Other events duration in the conversation
	OtherDurationPercentage float64 `json:"otherDurationPercentage,omitempty"`

	// Number of Overtalks in the conversation
	OvertalkCount int32 `json:"overtalkCount,omitempty"`

	// Percentage of Overtalk duration in the conversation
	OvertalkDurationPercentage float64 `json:"overtalkDurationPercentage,omitempty"`

	// Percentage of Silence duration in the conversation
	SilenceDurationPercentage float64 `json:"silenceDurationPercentage,omitempty"`
}

// Validate validates this participant metrics
func (m *ParticipantMetrics) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this participant metrics based on context it is used
func (m *ParticipantMetrics) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ParticipantMetrics) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ParticipantMetrics) UnmarshalBinary(b []byte) error {
	var res ParticipantMetrics
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
