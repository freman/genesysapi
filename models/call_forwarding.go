// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CallForwarding call forwarding
//
// swagger:model CallForwarding
type CallForwarding struct {

	// An ordered list of CallRoutes to be executed when CallForwarding is enabled
	Calls []*CallRoute `json:"calls"`

	// Whether or not CallForwarding is enabled
	Enabled bool `json:"enabled"`

	// The globally unique identifier for the object.
	// Read Only: true
	ID string `json:"id,omitempty"`

	// Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ
	// Format: date-time
	ModifiedDate strfmt.DateTime `json:"modifiedDate,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// This property is deprecated. Please use the calls property
	PhoneNumber string `json:"phoneNumber,omitempty"`

	// The URI for this object
	// Read Only: true
	// Format: uri
	SelfURI strfmt.URI `json:"selfUri,omitempty"`

	// user
	User *User `json:"user,omitempty"`

	// The type of voicemail to use with the callForwarding configuration
	// Enum: [PURECLOUD LASTCALL NONE]
	Voicemail string `json:"voicemail,omitempty"`
}

// Validate validates this call forwarding
func (m *CallForwarding) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCalls(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateModifiedDate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSelfURI(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUser(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateVoicemail(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CallForwarding) validateCalls(formats strfmt.Registry) error {

	if swag.IsZero(m.Calls) { // not required
		return nil
	}

	for i := 0; i < len(m.Calls); i++ {
		if swag.IsZero(m.Calls[i]) { // not required
			continue
		}

		if m.Calls[i] != nil {
			if err := m.Calls[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("calls" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *CallForwarding) validateModifiedDate(formats strfmt.Registry) error {

	if swag.IsZero(m.ModifiedDate) { // not required
		return nil
	}

	if err := validate.FormatOf("modifiedDate", "body", "date-time", m.ModifiedDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *CallForwarding) validateSelfURI(formats strfmt.Registry) error {

	if swag.IsZero(m.SelfURI) { // not required
		return nil
	}

	if err := validate.FormatOf("selfUri", "body", "uri", m.SelfURI.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *CallForwarding) validateUser(formats strfmt.Registry) error {

	if swag.IsZero(m.User) { // not required
		return nil
	}

	if m.User != nil {
		if err := m.User.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("user")
			}
			return err
		}
	}

	return nil
}

var callForwardingTypeVoicemailPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["PURECLOUD","LASTCALL","NONE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		callForwardingTypeVoicemailPropEnum = append(callForwardingTypeVoicemailPropEnum, v)
	}
}

const (

	// CallForwardingVoicemailPURECLOUD captures enum value "PURECLOUD"
	CallForwardingVoicemailPURECLOUD string = "PURECLOUD"

	// CallForwardingVoicemailLASTCALL captures enum value "LASTCALL"
	CallForwardingVoicemailLASTCALL string = "LASTCALL"

	// CallForwardingVoicemailNONE captures enum value "NONE"
	CallForwardingVoicemailNONE string = "NONE"
)

// prop value enum
func (m *CallForwarding) validateVoicemailEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, callForwardingTypeVoicemailPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *CallForwarding) validateVoicemail(formats strfmt.Registry) error {

	if swag.IsZero(m.Voicemail) { // not required
		return nil
	}

	// value enum
	if err := m.validateVoicemailEnum("voicemail", "body", m.Voicemail); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CallForwarding) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CallForwarding) UnmarshalBinary(b []byte) error {
	var res CallForwarding
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
