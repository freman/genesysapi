// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// JourneyGeolocation journey geolocation
//
// swagger:model JourneyGeolocation
type JourneyGeolocation struct {

	// Geolocation's ISO 3166-1 alpha-2 country code.
	Country string `json:"country,omitempty"`

	// Geolocation's country name.
	CountryName string `json:"countryName,omitempty"`

	// Geolocation's latitude.
	Latitude float64 `json:"latitude,omitempty"`

	// Geolocation's locality or city.
	Locality string `json:"locality,omitempty"`

	// Geolocation's longitude.
	Longitude float64 `json:"longitude,omitempty"`

	// Geolocation's postal code or ZIP code.
	PostalCode string `json:"postalCode,omitempty"`

	// Geolocation's ISO-3166-2 region code.
	Region string `json:"region,omitempty"`

	// Geolocation's region name.
	RegionName string `json:"regionName,omitempty"`

	// The source that was used to determine the geolocation information.
	Source string `json:"source,omitempty"`

	// Geolocation's timezone.
	Timezone string `json:"timezone,omitempty"`
}

// Validate validates this journey geolocation
func (m *JourneyGeolocation) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *JourneyGeolocation) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *JourneyGeolocation) UnmarshalBinary(b []byte) error {
	var res JourneyGeolocation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
