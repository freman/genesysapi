// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AnalyticsResolution analytics resolution
//
// swagger:model AnalyticsResolution
type AnalyticsResolution struct {

	// Specifies when an event occurred. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
	// Format: date-time
	EventTime strfmt.DateTime `json:"eventTime,omitempty"`

	// n next contact avoided
	NNextContactAvoided int64 `json:"nNextContactAvoided,omitempty"`

	// The ID of the last queue on which the conversation was handled.
	QueueID string `json:"queueId,omitempty"`

	// The ID of the last user who handled the conversation.
	UserID string `json:"userId,omitempty"`
}

// Validate validates this analytics resolution
func (m *AnalyticsResolution) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEventTime(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AnalyticsResolution) validateEventTime(formats strfmt.Registry) error {

	if swag.IsZero(m.EventTime) { // not required
		return nil
	}

	if err := validate.FormatOf("eventTime", "body", "date-time", m.EventTime.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AnalyticsResolution) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AnalyticsResolution) UnmarshalBinary(b []byte) error {
	var res AnalyticsResolution
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
