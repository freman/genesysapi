// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// NluDetectionInput nlu detection input
//
// swagger:model NluDetectionInput
type NluDetectionInput struct {

	// Language of the version for multilingual detection, e.g. `en-us`, `de-de`
	Language string `json:"language,omitempty"`

	// The text to perform NLU detection on.
	// Required: true
	Text *string `json:"text"`
}

// Validate validates this nlu detection input
func (m *NluDetectionInput) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateText(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *NluDetectionInput) validateText(formats strfmt.Registry) error {

	if err := validate.Required("text", "body", m.Text); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this nlu detection input based on context it is used
func (m *NluDetectionInput) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *NluDetectionInput) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NluDetectionInput) UnmarshalBinary(b []byte) error {
	var res NluDetectionInput
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
