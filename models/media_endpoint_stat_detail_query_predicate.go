// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MediaEndpointStatDetailQueryPredicate media endpoint stat detail query predicate
//
// swagger:model MediaEndpointStatDetailQueryPredicate
type MediaEndpointStatDetailQueryPredicate struct {

	// Left hand side for dimension predicates
	// Enum: [codec discardedPackets duplicatePackets eventTime invalidPackets maxLatencyMs overrunPackets receivedPackets underrunPackets]
	Dimension string `json:"dimension,omitempty"`

	// Optional operator, default is matches
	// Enum: [matches exists notExists]
	Operator string `json:"operator,omitempty"`

	// Right hand side for dimension predicates
	Range *NumericRange `json:"range,omitempty"`

	// Optional type, can usually be inferred
	// Enum: [dimension property metric]
	Type string `json:"type,omitempty"`

	// Right hand side for dimension predicates
	Value string `json:"value,omitempty"`
}

// Validate validates this media endpoint stat detail query predicate
func (m *MediaEndpointStatDetailQueryPredicate) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDimension(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOperator(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRange(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var mediaEndpointStatDetailQueryPredicateTypeDimensionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["codec","discardedPackets","duplicatePackets","eventTime","invalidPackets","maxLatencyMs","overrunPackets","receivedPackets","underrunPackets"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		mediaEndpointStatDetailQueryPredicateTypeDimensionPropEnum = append(mediaEndpointStatDetailQueryPredicateTypeDimensionPropEnum, v)
	}
}

const (

	// MediaEndpointStatDetailQueryPredicateDimensionCodec captures enum value "codec"
	MediaEndpointStatDetailQueryPredicateDimensionCodec string = "codec"

	// MediaEndpointStatDetailQueryPredicateDimensionDiscardedPackets captures enum value "discardedPackets"
	MediaEndpointStatDetailQueryPredicateDimensionDiscardedPackets string = "discardedPackets"

	// MediaEndpointStatDetailQueryPredicateDimensionDuplicatePackets captures enum value "duplicatePackets"
	MediaEndpointStatDetailQueryPredicateDimensionDuplicatePackets string = "duplicatePackets"

	// MediaEndpointStatDetailQueryPredicateDimensionEventTime captures enum value "eventTime"
	MediaEndpointStatDetailQueryPredicateDimensionEventTime string = "eventTime"

	// MediaEndpointStatDetailQueryPredicateDimensionInvalidPackets captures enum value "invalidPackets"
	MediaEndpointStatDetailQueryPredicateDimensionInvalidPackets string = "invalidPackets"

	// MediaEndpointStatDetailQueryPredicateDimensionMaxLatencyMs captures enum value "maxLatencyMs"
	MediaEndpointStatDetailQueryPredicateDimensionMaxLatencyMs string = "maxLatencyMs"

	// MediaEndpointStatDetailQueryPredicateDimensionOverrunPackets captures enum value "overrunPackets"
	MediaEndpointStatDetailQueryPredicateDimensionOverrunPackets string = "overrunPackets"

	// MediaEndpointStatDetailQueryPredicateDimensionReceivedPackets captures enum value "receivedPackets"
	MediaEndpointStatDetailQueryPredicateDimensionReceivedPackets string = "receivedPackets"

	// MediaEndpointStatDetailQueryPredicateDimensionUnderrunPackets captures enum value "underrunPackets"
	MediaEndpointStatDetailQueryPredicateDimensionUnderrunPackets string = "underrunPackets"
)

// prop value enum
func (m *MediaEndpointStatDetailQueryPredicate) validateDimensionEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, mediaEndpointStatDetailQueryPredicateTypeDimensionPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *MediaEndpointStatDetailQueryPredicate) validateDimension(formats strfmt.Registry) error {

	if swag.IsZero(m.Dimension) { // not required
		return nil
	}

	// value enum
	if err := m.validateDimensionEnum("dimension", "body", m.Dimension); err != nil {
		return err
	}

	return nil
}

var mediaEndpointStatDetailQueryPredicateTypeOperatorPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["matches","exists","notExists"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		mediaEndpointStatDetailQueryPredicateTypeOperatorPropEnum = append(mediaEndpointStatDetailQueryPredicateTypeOperatorPropEnum, v)
	}
}

const (

	// MediaEndpointStatDetailQueryPredicateOperatorMatches captures enum value "matches"
	MediaEndpointStatDetailQueryPredicateOperatorMatches string = "matches"

	// MediaEndpointStatDetailQueryPredicateOperatorExists captures enum value "exists"
	MediaEndpointStatDetailQueryPredicateOperatorExists string = "exists"

	// MediaEndpointStatDetailQueryPredicateOperatorNotExists captures enum value "notExists"
	MediaEndpointStatDetailQueryPredicateOperatorNotExists string = "notExists"
)

// prop value enum
func (m *MediaEndpointStatDetailQueryPredicate) validateOperatorEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, mediaEndpointStatDetailQueryPredicateTypeOperatorPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *MediaEndpointStatDetailQueryPredicate) validateOperator(formats strfmt.Registry) error {

	if swag.IsZero(m.Operator) { // not required
		return nil
	}

	// value enum
	if err := m.validateOperatorEnum("operator", "body", m.Operator); err != nil {
		return err
	}

	return nil
}

func (m *MediaEndpointStatDetailQueryPredicate) validateRange(formats strfmt.Registry) error {

	if swag.IsZero(m.Range) { // not required
		return nil
	}

	if m.Range != nil {
		if err := m.Range.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("range")
			}
			return err
		}
	}

	return nil
}

var mediaEndpointStatDetailQueryPredicateTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["dimension","property","metric"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		mediaEndpointStatDetailQueryPredicateTypeTypePropEnum = append(mediaEndpointStatDetailQueryPredicateTypeTypePropEnum, v)
	}
}

const (

	// MediaEndpointStatDetailQueryPredicateTypeDimension captures enum value "dimension"
	MediaEndpointStatDetailQueryPredicateTypeDimension string = "dimension"

	// MediaEndpointStatDetailQueryPredicateTypeProperty captures enum value "property"
	MediaEndpointStatDetailQueryPredicateTypeProperty string = "property"

	// MediaEndpointStatDetailQueryPredicateTypeMetric captures enum value "metric"
	MediaEndpointStatDetailQueryPredicateTypeMetric string = "metric"
)

// prop value enum
func (m *MediaEndpointStatDetailQueryPredicate) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, mediaEndpointStatDetailQueryPredicateTypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *MediaEndpointStatDetailQueryPredicate) validateType(formats strfmt.Registry) error {

	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *MediaEndpointStatDetailQueryPredicate) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MediaEndpointStatDetailQueryPredicate) UnmarshalBinary(b []byte) error {
	var res MediaEndpointStatDetailQueryPredicate
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
