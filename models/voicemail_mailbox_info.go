// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// VoicemailMailboxInfo voicemail mailbox info
//
// swagger:model VoicemailMailboxInfo
type VoicemailMailboxInfo struct {

	// The date of the oldest voicemail message. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
	// Read Only: true
	// Format: date-time
	CreatedDate strfmt.DateTime `json:"createdDate,omitempty"`

	// The total number of voicemail messages marked as deleted
	// Read Only: true
	DeletedCount int32 `json:"deletedCount,omitempty"`

	// The date of the most recent voicemail message. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
	// Read Only: true
	// Format: date-time
	ModifiedDate strfmt.DateTime `json:"modifiedDate,omitempty"`

	// The total number of voicemail messages
	// Read Only: true
	TotalCount int32 `json:"totalCount,omitempty"`

	// The total number of voicemail messages marked as unread
	// Read Only: true
	UnreadCount int32 `json:"unreadCount,omitempty"`

	// The total number of bytes for all voicemail message audio recordings
	// Read Only: true
	UsageSizeBytes int64 `json:"usageSizeBytes,omitempty"`
}

// Validate validates this voicemail mailbox info
func (m *VoicemailMailboxInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreatedDate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateModifiedDate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *VoicemailMailboxInfo) validateCreatedDate(formats strfmt.Registry) error {
	if swag.IsZero(m.CreatedDate) { // not required
		return nil
	}

	if err := validate.FormatOf("createdDate", "body", "date-time", m.CreatedDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *VoicemailMailboxInfo) validateModifiedDate(formats strfmt.Registry) error {
	if swag.IsZero(m.ModifiedDate) { // not required
		return nil
	}

	if err := validate.FormatOf("modifiedDate", "body", "date-time", m.ModifiedDate.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this voicemail mailbox info based on the context it is used
func (m *VoicemailMailboxInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateCreatedDate(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateDeletedCount(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateModifiedDate(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateTotalCount(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateUnreadCount(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateUsageSizeBytes(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *VoicemailMailboxInfo) contextValidateCreatedDate(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "createdDate", "body", strfmt.DateTime(m.CreatedDate)); err != nil {
		return err
	}

	return nil
}

func (m *VoicemailMailboxInfo) contextValidateDeletedCount(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "deletedCount", "body", int32(m.DeletedCount)); err != nil {
		return err
	}

	return nil
}

func (m *VoicemailMailboxInfo) contextValidateModifiedDate(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "modifiedDate", "body", strfmt.DateTime(m.ModifiedDate)); err != nil {
		return err
	}

	return nil
}

func (m *VoicemailMailboxInfo) contextValidateTotalCount(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "totalCount", "body", int32(m.TotalCount)); err != nil {
		return err
	}

	return nil
}

func (m *VoicemailMailboxInfo) contextValidateUnreadCount(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "unreadCount", "body", int32(m.UnreadCount)); err != nil {
		return err
	}

	return nil
}

func (m *VoicemailMailboxInfo) contextValidateUsageSizeBytes(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "usageSizeBytes", "body", int64(m.UsageSizeBytes)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *VoicemailMailboxInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VoicemailMailboxInfo) UnmarshalBinary(b []byte) error {
	var res VoicemailMailboxInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
