// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// RoutingConversationAttributesRequest routing conversation attributes request
//
// swagger:model RoutingConversationAttributesRequest
type RoutingConversationAttributesRequest struct {

	// Language required on the in-queue conversation.
	LanguageID string `json:"languageId,omitempty"`

	// Priority to be updated on in-queue conversation. Range:[-25000000, 25000000]
	// Maximum: 2.5e+07
	// Minimum: -2.5e+07
	Priority *int32 `json:"priority,omitempty"`

	// Skills to be updated on in-queue conversation.
	SkillIds []string `json:"skillIds"`
}

// Validate validates this routing conversation attributes request
func (m *RoutingConversationAttributesRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePriority(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RoutingConversationAttributesRequest) validatePriority(formats strfmt.Registry) error {

	if swag.IsZero(m.Priority) { // not required
		return nil
	}

	if err := validate.MinimumInt("priority", "body", int64(*m.Priority), -2.5e+07, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("priority", "body", int64(*m.Priority), 2.5e+07, false); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *RoutingConversationAttributesRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RoutingConversationAttributesRequest) UnmarshalBinary(b []byte) error {
	var res RoutingConversationAttributesRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
