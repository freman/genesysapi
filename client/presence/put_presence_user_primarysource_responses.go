// Code generated by go-swagger; DO NOT EDIT.

package presence

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutPresenceUserPrimarysourceReader is a Reader for the PutPresenceUserPrimarysource structure.
type PutPresenceUserPrimarysourceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutPresenceUserPrimarysourceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutPresenceUserPrimarysourceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutPresenceUserPrimarysourceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutPresenceUserPrimarysourceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutPresenceUserPrimarysourceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutPresenceUserPrimarysourceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutPresenceUserPrimarysourceRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutPresenceUserPrimarysourceRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutPresenceUserPrimarysourceUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutPresenceUserPrimarysourceTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutPresenceUserPrimarysourceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutPresenceUserPrimarysourceServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutPresenceUserPrimarysourceGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutPresenceUserPrimarysourceOK creates a PutPresenceUserPrimarysourceOK with default headers values
func NewPutPresenceUserPrimarysourceOK() *PutPresenceUserPrimarysourceOK {
	return &PutPresenceUserPrimarysourceOK{}
}

/*
PutPresenceUserPrimarysourceOK describes a response with status code 200, with default header values.

successful operation
*/
type PutPresenceUserPrimarysourceOK struct {
	Payload *models.UserPrimarySource
}

// IsSuccess returns true when this put presence user primarysource o k response has a 2xx status code
func (o *PutPresenceUserPrimarysourceOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put presence user primarysource o k response has a 3xx status code
func (o *PutPresenceUserPrimarysourceOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put presence user primarysource o k response has a 4xx status code
func (o *PutPresenceUserPrimarysourceOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put presence user primarysource o k response has a 5xx status code
func (o *PutPresenceUserPrimarysourceOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put presence user primarysource o k response a status code equal to that given
func (o *PutPresenceUserPrimarysourceOK) IsCode(code int) bool {
	return code == 200
}

func (o *PutPresenceUserPrimarysourceOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/presence/users/{userId}/primarysource][%d] putPresenceUserPrimarysourceOK  %+v", 200, o.Payload)
}

func (o *PutPresenceUserPrimarysourceOK) String() string {
	return fmt.Sprintf("[PUT /api/v2/presence/users/{userId}/primarysource][%d] putPresenceUserPrimarysourceOK  %+v", 200, o.Payload)
}

func (o *PutPresenceUserPrimarysourceOK) GetPayload() *models.UserPrimarySource {
	return o.Payload
}

func (o *PutPresenceUserPrimarysourceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserPrimarySource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutPresenceUserPrimarysourceBadRequest creates a PutPresenceUserPrimarysourceBadRequest with default headers values
func NewPutPresenceUserPrimarysourceBadRequest() *PutPresenceUserPrimarysourceBadRequest {
	return &PutPresenceUserPrimarysourceBadRequest{}
}

/*
PutPresenceUserPrimarysourceBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutPresenceUserPrimarysourceBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put presence user primarysource bad request response has a 2xx status code
func (o *PutPresenceUserPrimarysourceBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put presence user primarysource bad request response has a 3xx status code
func (o *PutPresenceUserPrimarysourceBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put presence user primarysource bad request response has a 4xx status code
func (o *PutPresenceUserPrimarysourceBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put presence user primarysource bad request response has a 5xx status code
func (o *PutPresenceUserPrimarysourceBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put presence user primarysource bad request response a status code equal to that given
func (o *PutPresenceUserPrimarysourceBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PutPresenceUserPrimarysourceBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/presence/users/{userId}/primarysource][%d] putPresenceUserPrimarysourceBadRequest  %+v", 400, o.Payload)
}

func (o *PutPresenceUserPrimarysourceBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/v2/presence/users/{userId}/primarysource][%d] putPresenceUserPrimarysourceBadRequest  %+v", 400, o.Payload)
}

func (o *PutPresenceUserPrimarysourceBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutPresenceUserPrimarysourceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutPresenceUserPrimarysourceUnauthorized creates a PutPresenceUserPrimarysourceUnauthorized with default headers values
func NewPutPresenceUserPrimarysourceUnauthorized() *PutPresenceUserPrimarysourceUnauthorized {
	return &PutPresenceUserPrimarysourceUnauthorized{}
}

/*
PutPresenceUserPrimarysourceUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PutPresenceUserPrimarysourceUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put presence user primarysource unauthorized response has a 2xx status code
func (o *PutPresenceUserPrimarysourceUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put presence user primarysource unauthorized response has a 3xx status code
func (o *PutPresenceUserPrimarysourceUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put presence user primarysource unauthorized response has a 4xx status code
func (o *PutPresenceUserPrimarysourceUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put presence user primarysource unauthorized response has a 5xx status code
func (o *PutPresenceUserPrimarysourceUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put presence user primarysource unauthorized response a status code equal to that given
func (o *PutPresenceUserPrimarysourceUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PutPresenceUserPrimarysourceUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/presence/users/{userId}/primarysource][%d] putPresenceUserPrimarysourceUnauthorized  %+v", 401, o.Payload)
}

func (o *PutPresenceUserPrimarysourceUnauthorized) String() string {
	return fmt.Sprintf("[PUT /api/v2/presence/users/{userId}/primarysource][%d] putPresenceUserPrimarysourceUnauthorized  %+v", 401, o.Payload)
}

func (o *PutPresenceUserPrimarysourceUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutPresenceUserPrimarysourceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutPresenceUserPrimarysourceForbidden creates a PutPresenceUserPrimarysourceForbidden with default headers values
func NewPutPresenceUserPrimarysourceForbidden() *PutPresenceUserPrimarysourceForbidden {
	return &PutPresenceUserPrimarysourceForbidden{}
}

/*
PutPresenceUserPrimarysourceForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PutPresenceUserPrimarysourceForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put presence user primarysource forbidden response has a 2xx status code
func (o *PutPresenceUserPrimarysourceForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put presence user primarysource forbidden response has a 3xx status code
func (o *PutPresenceUserPrimarysourceForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put presence user primarysource forbidden response has a 4xx status code
func (o *PutPresenceUserPrimarysourceForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put presence user primarysource forbidden response has a 5xx status code
func (o *PutPresenceUserPrimarysourceForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put presence user primarysource forbidden response a status code equal to that given
func (o *PutPresenceUserPrimarysourceForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PutPresenceUserPrimarysourceForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/presence/users/{userId}/primarysource][%d] putPresenceUserPrimarysourceForbidden  %+v", 403, o.Payload)
}

func (o *PutPresenceUserPrimarysourceForbidden) String() string {
	return fmt.Sprintf("[PUT /api/v2/presence/users/{userId}/primarysource][%d] putPresenceUserPrimarysourceForbidden  %+v", 403, o.Payload)
}

func (o *PutPresenceUserPrimarysourceForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutPresenceUserPrimarysourceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutPresenceUserPrimarysourceNotFound creates a PutPresenceUserPrimarysourceNotFound with default headers values
func NewPutPresenceUserPrimarysourceNotFound() *PutPresenceUserPrimarysourceNotFound {
	return &PutPresenceUserPrimarysourceNotFound{}
}

/*
PutPresenceUserPrimarysourceNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PutPresenceUserPrimarysourceNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put presence user primarysource not found response has a 2xx status code
func (o *PutPresenceUserPrimarysourceNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put presence user primarysource not found response has a 3xx status code
func (o *PutPresenceUserPrimarysourceNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put presence user primarysource not found response has a 4xx status code
func (o *PutPresenceUserPrimarysourceNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put presence user primarysource not found response has a 5xx status code
func (o *PutPresenceUserPrimarysourceNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put presence user primarysource not found response a status code equal to that given
func (o *PutPresenceUserPrimarysourceNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PutPresenceUserPrimarysourceNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/presence/users/{userId}/primarysource][%d] putPresenceUserPrimarysourceNotFound  %+v", 404, o.Payload)
}

func (o *PutPresenceUserPrimarysourceNotFound) String() string {
	return fmt.Sprintf("[PUT /api/v2/presence/users/{userId}/primarysource][%d] putPresenceUserPrimarysourceNotFound  %+v", 404, o.Payload)
}

func (o *PutPresenceUserPrimarysourceNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutPresenceUserPrimarysourceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutPresenceUserPrimarysourceRequestTimeout creates a PutPresenceUserPrimarysourceRequestTimeout with default headers values
func NewPutPresenceUserPrimarysourceRequestTimeout() *PutPresenceUserPrimarysourceRequestTimeout {
	return &PutPresenceUserPrimarysourceRequestTimeout{}
}

/*
PutPresenceUserPrimarysourceRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutPresenceUserPrimarysourceRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put presence user primarysource request timeout response has a 2xx status code
func (o *PutPresenceUserPrimarysourceRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put presence user primarysource request timeout response has a 3xx status code
func (o *PutPresenceUserPrimarysourceRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put presence user primarysource request timeout response has a 4xx status code
func (o *PutPresenceUserPrimarysourceRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this put presence user primarysource request timeout response has a 5xx status code
func (o *PutPresenceUserPrimarysourceRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this put presence user primarysource request timeout response a status code equal to that given
func (o *PutPresenceUserPrimarysourceRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PutPresenceUserPrimarysourceRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/presence/users/{userId}/primarysource][%d] putPresenceUserPrimarysourceRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutPresenceUserPrimarysourceRequestTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/presence/users/{userId}/primarysource][%d] putPresenceUserPrimarysourceRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutPresenceUserPrimarysourceRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutPresenceUserPrimarysourceRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutPresenceUserPrimarysourceRequestEntityTooLarge creates a PutPresenceUserPrimarysourceRequestEntityTooLarge with default headers values
func NewPutPresenceUserPrimarysourceRequestEntityTooLarge() *PutPresenceUserPrimarysourceRequestEntityTooLarge {
	return &PutPresenceUserPrimarysourceRequestEntityTooLarge{}
}

/*
PutPresenceUserPrimarysourceRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PutPresenceUserPrimarysourceRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put presence user primarysource request entity too large response has a 2xx status code
func (o *PutPresenceUserPrimarysourceRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put presence user primarysource request entity too large response has a 3xx status code
func (o *PutPresenceUserPrimarysourceRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put presence user primarysource request entity too large response has a 4xx status code
func (o *PutPresenceUserPrimarysourceRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this put presence user primarysource request entity too large response has a 5xx status code
func (o *PutPresenceUserPrimarysourceRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this put presence user primarysource request entity too large response a status code equal to that given
func (o *PutPresenceUserPrimarysourceRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PutPresenceUserPrimarysourceRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/presence/users/{userId}/primarysource][%d] putPresenceUserPrimarysourceRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutPresenceUserPrimarysourceRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PUT /api/v2/presence/users/{userId}/primarysource][%d] putPresenceUserPrimarysourceRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutPresenceUserPrimarysourceRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutPresenceUserPrimarysourceRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutPresenceUserPrimarysourceUnsupportedMediaType creates a PutPresenceUserPrimarysourceUnsupportedMediaType with default headers values
func NewPutPresenceUserPrimarysourceUnsupportedMediaType() *PutPresenceUserPrimarysourceUnsupportedMediaType {
	return &PutPresenceUserPrimarysourceUnsupportedMediaType{}
}

/*
PutPresenceUserPrimarysourceUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutPresenceUserPrimarysourceUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put presence user primarysource unsupported media type response has a 2xx status code
func (o *PutPresenceUserPrimarysourceUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put presence user primarysource unsupported media type response has a 3xx status code
func (o *PutPresenceUserPrimarysourceUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put presence user primarysource unsupported media type response has a 4xx status code
func (o *PutPresenceUserPrimarysourceUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this put presence user primarysource unsupported media type response has a 5xx status code
func (o *PutPresenceUserPrimarysourceUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this put presence user primarysource unsupported media type response a status code equal to that given
func (o *PutPresenceUserPrimarysourceUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PutPresenceUserPrimarysourceUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/presence/users/{userId}/primarysource][%d] putPresenceUserPrimarysourceUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutPresenceUserPrimarysourceUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PUT /api/v2/presence/users/{userId}/primarysource][%d] putPresenceUserPrimarysourceUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutPresenceUserPrimarysourceUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutPresenceUserPrimarysourceUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutPresenceUserPrimarysourceTooManyRequests creates a PutPresenceUserPrimarysourceTooManyRequests with default headers values
func NewPutPresenceUserPrimarysourceTooManyRequests() *PutPresenceUserPrimarysourceTooManyRequests {
	return &PutPresenceUserPrimarysourceTooManyRequests{}
}

/*
PutPresenceUserPrimarysourceTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutPresenceUserPrimarysourceTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put presence user primarysource too many requests response has a 2xx status code
func (o *PutPresenceUserPrimarysourceTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put presence user primarysource too many requests response has a 3xx status code
func (o *PutPresenceUserPrimarysourceTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put presence user primarysource too many requests response has a 4xx status code
func (o *PutPresenceUserPrimarysourceTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this put presence user primarysource too many requests response has a 5xx status code
func (o *PutPresenceUserPrimarysourceTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this put presence user primarysource too many requests response a status code equal to that given
func (o *PutPresenceUserPrimarysourceTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PutPresenceUserPrimarysourceTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/presence/users/{userId}/primarysource][%d] putPresenceUserPrimarysourceTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutPresenceUserPrimarysourceTooManyRequests) String() string {
	return fmt.Sprintf("[PUT /api/v2/presence/users/{userId}/primarysource][%d] putPresenceUserPrimarysourceTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutPresenceUserPrimarysourceTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutPresenceUserPrimarysourceTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutPresenceUserPrimarysourceInternalServerError creates a PutPresenceUserPrimarysourceInternalServerError with default headers values
func NewPutPresenceUserPrimarysourceInternalServerError() *PutPresenceUserPrimarysourceInternalServerError {
	return &PutPresenceUserPrimarysourceInternalServerError{}
}

/*
PutPresenceUserPrimarysourceInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutPresenceUserPrimarysourceInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put presence user primarysource internal server error response has a 2xx status code
func (o *PutPresenceUserPrimarysourceInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put presence user primarysource internal server error response has a 3xx status code
func (o *PutPresenceUserPrimarysourceInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put presence user primarysource internal server error response has a 4xx status code
func (o *PutPresenceUserPrimarysourceInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this put presence user primarysource internal server error response has a 5xx status code
func (o *PutPresenceUserPrimarysourceInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this put presence user primarysource internal server error response a status code equal to that given
func (o *PutPresenceUserPrimarysourceInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PutPresenceUserPrimarysourceInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/presence/users/{userId}/primarysource][%d] putPresenceUserPrimarysourceInternalServerError  %+v", 500, o.Payload)
}

func (o *PutPresenceUserPrimarysourceInternalServerError) String() string {
	return fmt.Sprintf("[PUT /api/v2/presence/users/{userId}/primarysource][%d] putPresenceUserPrimarysourceInternalServerError  %+v", 500, o.Payload)
}

func (o *PutPresenceUserPrimarysourceInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutPresenceUserPrimarysourceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutPresenceUserPrimarysourceServiceUnavailable creates a PutPresenceUserPrimarysourceServiceUnavailable with default headers values
func NewPutPresenceUserPrimarysourceServiceUnavailable() *PutPresenceUserPrimarysourceServiceUnavailable {
	return &PutPresenceUserPrimarysourceServiceUnavailable{}
}

/*
PutPresenceUserPrimarysourceServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutPresenceUserPrimarysourceServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put presence user primarysource service unavailable response has a 2xx status code
func (o *PutPresenceUserPrimarysourceServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put presence user primarysource service unavailable response has a 3xx status code
func (o *PutPresenceUserPrimarysourceServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put presence user primarysource service unavailable response has a 4xx status code
func (o *PutPresenceUserPrimarysourceServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this put presence user primarysource service unavailable response has a 5xx status code
func (o *PutPresenceUserPrimarysourceServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this put presence user primarysource service unavailable response a status code equal to that given
func (o *PutPresenceUserPrimarysourceServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PutPresenceUserPrimarysourceServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/presence/users/{userId}/primarysource][%d] putPresenceUserPrimarysourceServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutPresenceUserPrimarysourceServiceUnavailable) String() string {
	return fmt.Sprintf("[PUT /api/v2/presence/users/{userId}/primarysource][%d] putPresenceUserPrimarysourceServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutPresenceUserPrimarysourceServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutPresenceUserPrimarysourceServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutPresenceUserPrimarysourceGatewayTimeout creates a PutPresenceUserPrimarysourceGatewayTimeout with default headers values
func NewPutPresenceUserPrimarysourceGatewayTimeout() *PutPresenceUserPrimarysourceGatewayTimeout {
	return &PutPresenceUserPrimarysourceGatewayTimeout{}
}

/*
PutPresenceUserPrimarysourceGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PutPresenceUserPrimarysourceGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put presence user primarysource gateway timeout response has a 2xx status code
func (o *PutPresenceUserPrimarysourceGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put presence user primarysource gateway timeout response has a 3xx status code
func (o *PutPresenceUserPrimarysourceGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put presence user primarysource gateway timeout response has a 4xx status code
func (o *PutPresenceUserPrimarysourceGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this put presence user primarysource gateway timeout response has a 5xx status code
func (o *PutPresenceUserPrimarysourceGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this put presence user primarysource gateway timeout response a status code equal to that given
func (o *PutPresenceUserPrimarysourceGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PutPresenceUserPrimarysourceGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/presence/users/{userId}/primarysource][%d] putPresenceUserPrimarysourceGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutPresenceUserPrimarysourceGatewayTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/presence/users/{userId}/primarysource][%d] putPresenceUserPrimarysourceGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutPresenceUserPrimarysourceGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutPresenceUserPrimarysourceGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
