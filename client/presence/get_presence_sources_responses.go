// Code generated by go-swagger; DO NOT EDIT.

package presence

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetPresenceSourcesReader is a Reader for the GetPresenceSources structure.
type GetPresenceSourcesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPresenceSourcesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPresenceSourcesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetPresenceSourcesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetPresenceSourcesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetPresenceSourcesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetPresenceSourcesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetPresenceSourcesRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetPresenceSourcesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetPresenceSourcesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetPresenceSourcesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetPresenceSourcesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetPresenceSourcesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetPresenceSourcesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetPresenceSourcesOK creates a GetPresenceSourcesOK with default headers values
func NewGetPresenceSourcesOK() *GetPresenceSourcesOK {
	return &GetPresenceSourcesOK{}
}

/*GetPresenceSourcesOK handles this case with default header values.

successful operation
*/
type GetPresenceSourcesOK struct {
	Payload *models.SourceEntityListing
}

func (o *GetPresenceSourcesOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/presence/sources][%d] getPresenceSourcesOK  %+v", 200, o.Payload)
}

func (o *GetPresenceSourcesOK) GetPayload() *models.SourceEntityListing {
	return o.Payload
}

func (o *GetPresenceSourcesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SourceEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPresenceSourcesBadRequest creates a GetPresenceSourcesBadRequest with default headers values
func NewGetPresenceSourcesBadRequest() *GetPresenceSourcesBadRequest {
	return &GetPresenceSourcesBadRequest{}
}

/*GetPresenceSourcesBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetPresenceSourcesBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetPresenceSourcesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/presence/sources][%d] getPresenceSourcesBadRequest  %+v", 400, o.Payload)
}

func (o *GetPresenceSourcesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetPresenceSourcesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPresenceSourcesUnauthorized creates a GetPresenceSourcesUnauthorized with default headers values
func NewGetPresenceSourcesUnauthorized() *GetPresenceSourcesUnauthorized {
	return &GetPresenceSourcesUnauthorized{}
}

/*GetPresenceSourcesUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetPresenceSourcesUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetPresenceSourcesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/presence/sources][%d] getPresenceSourcesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetPresenceSourcesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetPresenceSourcesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPresenceSourcesForbidden creates a GetPresenceSourcesForbidden with default headers values
func NewGetPresenceSourcesForbidden() *GetPresenceSourcesForbidden {
	return &GetPresenceSourcesForbidden{}
}

/*GetPresenceSourcesForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetPresenceSourcesForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetPresenceSourcesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/presence/sources][%d] getPresenceSourcesForbidden  %+v", 403, o.Payload)
}

func (o *GetPresenceSourcesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetPresenceSourcesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPresenceSourcesNotFound creates a GetPresenceSourcesNotFound with default headers values
func NewGetPresenceSourcesNotFound() *GetPresenceSourcesNotFound {
	return &GetPresenceSourcesNotFound{}
}

/*GetPresenceSourcesNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetPresenceSourcesNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetPresenceSourcesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/presence/sources][%d] getPresenceSourcesNotFound  %+v", 404, o.Payload)
}

func (o *GetPresenceSourcesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetPresenceSourcesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPresenceSourcesRequestTimeout creates a GetPresenceSourcesRequestTimeout with default headers values
func NewGetPresenceSourcesRequestTimeout() *GetPresenceSourcesRequestTimeout {
	return &GetPresenceSourcesRequestTimeout{}
}

/*GetPresenceSourcesRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetPresenceSourcesRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetPresenceSourcesRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/presence/sources][%d] getPresenceSourcesRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetPresenceSourcesRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetPresenceSourcesRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPresenceSourcesRequestEntityTooLarge creates a GetPresenceSourcesRequestEntityTooLarge with default headers values
func NewGetPresenceSourcesRequestEntityTooLarge() *GetPresenceSourcesRequestEntityTooLarge {
	return &GetPresenceSourcesRequestEntityTooLarge{}
}

/*GetPresenceSourcesRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetPresenceSourcesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetPresenceSourcesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/presence/sources][%d] getPresenceSourcesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetPresenceSourcesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetPresenceSourcesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPresenceSourcesUnsupportedMediaType creates a GetPresenceSourcesUnsupportedMediaType with default headers values
func NewGetPresenceSourcesUnsupportedMediaType() *GetPresenceSourcesUnsupportedMediaType {
	return &GetPresenceSourcesUnsupportedMediaType{}
}

/*GetPresenceSourcesUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetPresenceSourcesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetPresenceSourcesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/presence/sources][%d] getPresenceSourcesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetPresenceSourcesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetPresenceSourcesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPresenceSourcesTooManyRequests creates a GetPresenceSourcesTooManyRequests with default headers values
func NewGetPresenceSourcesTooManyRequests() *GetPresenceSourcesTooManyRequests {
	return &GetPresenceSourcesTooManyRequests{}
}

/*GetPresenceSourcesTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetPresenceSourcesTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetPresenceSourcesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/presence/sources][%d] getPresenceSourcesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetPresenceSourcesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetPresenceSourcesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPresenceSourcesInternalServerError creates a GetPresenceSourcesInternalServerError with default headers values
func NewGetPresenceSourcesInternalServerError() *GetPresenceSourcesInternalServerError {
	return &GetPresenceSourcesInternalServerError{}
}

/*GetPresenceSourcesInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetPresenceSourcesInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetPresenceSourcesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/presence/sources][%d] getPresenceSourcesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetPresenceSourcesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetPresenceSourcesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPresenceSourcesServiceUnavailable creates a GetPresenceSourcesServiceUnavailable with default headers values
func NewGetPresenceSourcesServiceUnavailable() *GetPresenceSourcesServiceUnavailable {
	return &GetPresenceSourcesServiceUnavailable{}
}

/*GetPresenceSourcesServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetPresenceSourcesServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetPresenceSourcesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/presence/sources][%d] getPresenceSourcesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetPresenceSourcesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetPresenceSourcesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPresenceSourcesGatewayTimeout creates a GetPresenceSourcesGatewayTimeout with default headers values
func NewGetPresenceSourcesGatewayTimeout() *GetPresenceSourcesGatewayTimeout {
	return &GetPresenceSourcesGatewayTimeout{}
}

/*GetPresenceSourcesGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetPresenceSourcesGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetPresenceSourcesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/presence/sources][%d] getPresenceSourcesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetPresenceSourcesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetPresenceSourcesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
