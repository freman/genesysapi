// Code generated by go-swagger; DO NOT EDIT.

package presence

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetUserPresenceReader is a Reader for the GetUserPresence structure.
type GetUserPresenceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserPresenceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUserPresenceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetUserPresenceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetUserPresenceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetUserPresenceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUserPresenceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetUserPresenceRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetUserPresenceRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetUserPresenceUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetUserPresenceTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetUserPresenceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetUserPresenceServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetUserPresenceGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetUserPresenceOK creates a GetUserPresenceOK with default headers values
func NewGetUserPresenceOK() *GetUserPresenceOK {
	return &GetUserPresenceOK{}
}

/*
GetUserPresenceOK describes a response with status code 200, with default header values.

successful operation
*/
type GetUserPresenceOK struct {
	Payload *models.UserPresence
}

// IsSuccess returns true when this get user presence o k response has a 2xx status code
func (o *GetUserPresenceOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get user presence o k response has a 3xx status code
func (o *GetUserPresenceOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user presence o k response has a 4xx status code
func (o *GetUserPresenceOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get user presence o k response has a 5xx status code
func (o *GetUserPresenceOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get user presence o k response a status code equal to that given
func (o *GetUserPresenceOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetUserPresenceOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/presences/{sourceId}][%d] getUserPresenceOK  %+v", 200, o.Payload)
}

func (o *GetUserPresenceOK) String() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/presences/{sourceId}][%d] getUserPresenceOK  %+v", 200, o.Payload)
}

func (o *GetUserPresenceOK) GetPayload() *models.UserPresence {
	return o.Payload
}

func (o *GetUserPresenceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserPresence)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserPresenceBadRequest creates a GetUserPresenceBadRequest with default headers values
func NewGetUserPresenceBadRequest() *GetUserPresenceBadRequest {
	return &GetUserPresenceBadRequest{}
}

/*
GetUserPresenceBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetUserPresenceBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get user presence bad request response has a 2xx status code
func (o *GetUserPresenceBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user presence bad request response has a 3xx status code
func (o *GetUserPresenceBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user presence bad request response has a 4xx status code
func (o *GetUserPresenceBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user presence bad request response has a 5xx status code
func (o *GetUserPresenceBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get user presence bad request response a status code equal to that given
func (o *GetUserPresenceBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetUserPresenceBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/presences/{sourceId}][%d] getUserPresenceBadRequest  %+v", 400, o.Payload)
}

func (o *GetUserPresenceBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/presences/{sourceId}][%d] getUserPresenceBadRequest  %+v", 400, o.Payload)
}

func (o *GetUserPresenceBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserPresenceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserPresenceUnauthorized creates a GetUserPresenceUnauthorized with default headers values
func NewGetUserPresenceUnauthorized() *GetUserPresenceUnauthorized {
	return &GetUserPresenceUnauthorized{}
}

/*
GetUserPresenceUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetUserPresenceUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get user presence unauthorized response has a 2xx status code
func (o *GetUserPresenceUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user presence unauthorized response has a 3xx status code
func (o *GetUserPresenceUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user presence unauthorized response has a 4xx status code
func (o *GetUserPresenceUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user presence unauthorized response has a 5xx status code
func (o *GetUserPresenceUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get user presence unauthorized response a status code equal to that given
func (o *GetUserPresenceUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetUserPresenceUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/presences/{sourceId}][%d] getUserPresenceUnauthorized  %+v", 401, o.Payload)
}

func (o *GetUserPresenceUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/presences/{sourceId}][%d] getUserPresenceUnauthorized  %+v", 401, o.Payload)
}

func (o *GetUserPresenceUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserPresenceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserPresenceForbidden creates a GetUserPresenceForbidden with default headers values
func NewGetUserPresenceForbidden() *GetUserPresenceForbidden {
	return &GetUserPresenceForbidden{}
}

/*
GetUserPresenceForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetUserPresenceForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get user presence forbidden response has a 2xx status code
func (o *GetUserPresenceForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user presence forbidden response has a 3xx status code
func (o *GetUserPresenceForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user presence forbidden response has a 4xx status code
func (o *GetUserPresenceForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user presence forbidden response has a 5xx status code
func (o *GetUserPresenceForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get user presence forbidden response a status code equal to that given
func (o *GetUserPresenceForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetUserPresenceForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/presences/{sourceId}][%d] getUserPresenceForbidden  %+v", 403, o.Payload)
}

func (o *GetUserPresenceForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/presences/{sourceId}][%d] getUserPresenceForbidden  %+v", 403, o.Payload)
}

func (o *GetUserPresenceForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserPresenceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserPresenceNotFound creates a GetUserPresenceNotFound with default headers values
func NewGetUserPresenceNotFound() *GetUserPresenceNotFound {
	return &GetUserPresenceNotFound{}
}

/*
GetUserPresenceNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetUserPresenceNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get user presence not found response has a 2xx status code
func (o *GetUserPresenceNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user presence not found response has a 3xx status code
func (o *GetUserPresenceNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user presence not found response has a 4xx status code
func (o *GetUserPresenceNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user presence not found response has a 5xx status code
func (o *GetUserPresenceNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get user presence not found response a status code equal to that given
func (o *GetUserPresenceNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetUserPresenceNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/presences/{sourceId}][%d] getUserPresenceNotFound  %+v", 404, o.Payload)
}

func (o *GetUserPresenceNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/presences/{sourceId}][%d] getUserPresenceNotFound  %+v", 404, o.Payload)
}

func (o *GetUserPresenceNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserPresenceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserPresenceRequestTimeout creates a GetUserPresenceRequestTimeout with default headers values
func NewGetUserPresenceRequestTimeout() *GetUserPresenceRequestTimeout {
	return &GetUserPresenceRequestTimeout{}
}

/*
GetUserPresenceRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetUserPresenceRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get user presence request timeout response has a 2xx status code
func (o *GetUserPresenceRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user presence request timeout response has a 3xx status code
func (o *GetUserPresenceRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user presence request timeout response has a 4xx status code
func (o *GetUserPresenceRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user presence request timeout response has a 5xx status code
func (o *GetUserPresenceRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get user presence request timeout response a status code equal to that given
func (o *GetUserPresenceRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetUserPresenceRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/presences/{sourceId}][%d] getUserPresenceRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetUserPresenceRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/presences/{sourceId}][%d] getUserPresenceRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetUserPresenceRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserPresenceRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserPresenceRequestEntityTooLarge creates a GetUserPresenceRequestEntityTooLarge with default headers values
func NewGetUserPresenceRequestEntityTooLarge() *GetUserPresenceRequestEntityTooLarge {
	return &GetUserPresenceRequestEntityTooLarge{}
}

/*
GetUserPresenceRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetUserPresenceRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get user presence request entity too large response has a 2xx status code
func (o *GetUserPresenceRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user presence request entity too large response has a 3xx status code
func (o *GetUserPresenceRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user presence request entity too large response has a 4xx status code
func (o *GetUserPresenceRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user presence request entity too large response has a 5xx status code
func (o *GetUserPresenceRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get user presence request entity too large response a status code equal to that given
func (o *GetUserPresenceRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetUserPresenceRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/presences/{sourceId}][%d] getUserPresenceRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetUserPresenceRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/presences/{sourceId}][%d] getUserPresenceRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetUserPresenceRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserPresenceRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserPresenceUnsupportedMediaType creates a GetUserPresenceUnsupportedMediaType with default headers values
func NewGetUserPresenceUnsupportedMediaType() *GetUserPresenceUnsupportedMediaType {
	return &GetUserPresenceUnsupportedMediaType{}
}

/*
GetUserPresenceUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetUserPresenceUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get user presence unsupported media type response has a 2xx status code
func (o *GetUserPresenceUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user presence unsupported media type response has a 3xx status code
func (o *GetUserPresenceUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user presence unsupported media type response has a 4xx status code
func (o *GetUserPresenceUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user presence unsupported media type response has a 5xx status code
func (o *GetUserPresenceUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get user presence unsupported media type response a status code equal to that given
func (o *GetUserPresenceUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetUserPresenceUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/presences/{sourceId}][%d] getUserPresenceUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetUserPresenceUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/presences/{sourceId}][%d] getUserPresenceUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetUserPresenceUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserPresenceUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserPresenceTooManyRequests creates a GetUserPresenceTooManyRequests with default headers values
func NewGetUserPresenceTooManyRequests() *GetUserPresenceTooManyRequests {
	return &GetUserPresenceTooManyRequests{}
}

/*
GetUserPresenceTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetUserPresenceTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get user presence too many requests response has a 2xx status code
func (o *GetUserPresenceTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user presence too many requests response has a 3xx status code
func (o *GetUserPresenceTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user presence too many requests response has a 4xx status code
func (o *GetUserPresenceTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user presence too many requests response has a 5xx status code
func (o *GetUserPresenceTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get user presence too many requests response a status code equal to that given
func (o *GetUserPresenceTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetUserPresenceTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/presences/{sourceId}][%d] getUserPresenceTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetUserPresenceTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/presences/{sourceId}][%d] getUserPresenceTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetUserPresenceTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserPresenceTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserPresenceInternalServerError creates a GetUserPresenceInternalServerError with default headers values
func NewGetUserPresenceInternalServerError() *GetUserPresenceInternalServerError {
	return &GetUserPresenceInternalServerError{}
}

/*
GetUserPresenceInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetUserPresenceInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get user presence internal server error response has a 2xx status code
func (o *GetUserPresenceInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user presence internal server error response has a 3xx status code
func (o *GetUserPresenceInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user presence internal server error response has a 4xx status code
func (o *GetUserPresenceInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get user presence internal server error response has a 5xx status code
func (o *GetUserPresenceInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get user presence internal server error response a status code equal to that given
func (o *GetUserPresenceInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetUserPresenceInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/presences/{sourceId}][%d] getUserPresenceInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUserPresenceInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/presences/{sourceId}][%d] getUserPresenceInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUserPresenceInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserPresenceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserPresenceServiceUnavailable creates a GetUserPresenceServiceUnavailable with default headers values
func NewGetUserPresenceServiceUnavailable() *GetUserPresenceServiceUnavailable {
	return &GetUserPresenceServiceUnavailable{}
}

/*
GetUserPresenceServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetUserPresenceServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get user presence service unavailable response has a 2xx status code
func (o *GetUserPresenceServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user presence service unavailable response has a 3xx status code
func (o *GetUserPresenceServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user presence service unavailable response has a 4xx status code
func (o *GetUserPresenceServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get user presence service unavailable response has a 5xx status code
func (o *GetUserPresenceServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get user presence service unavailable response a status code equal to that given
func (o *GetUserPresenceServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetUserPresenceServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/presences/{sourceId}][%d] getUserPresenceServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetUserPresenceServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/presences/{sourceId}][%d] getUserPresenceServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetUserPresenceServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserPresenceServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserPresenceGatewayTimeout creates a GetUserPresenceGatewayTimeout with default headers values
func NewGetUserPresenceGatewayTimeout() *GetUserPresenceGatewayTimeout {
	return &GetUserPresenceGatewayTimeout{}
}

/*
GetUserPresenceGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetUserPresenceGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get user presence gateway timeout response has a 2xx status code
func (o *GetUserPresenceGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user presence gateway timeout response has a 3xx status code
func (o *GetUserPresenceGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user presence gateway timeout response has a 4xx status code
func (o *GetUserPresenceGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get user presence gateway timeout response has a 5xx status code
func (o *GetUserPresenceGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get user presence gateway timeout response a status code equal to that given
func (o *GetUserPresenceGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetUserPresenceGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/presences/{sourceId}][%d] getUserPresenceGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetUserPresenceGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/presences/{sourceId}][%d] getUserPresenceGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetUserPresenceGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserPresenceGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
