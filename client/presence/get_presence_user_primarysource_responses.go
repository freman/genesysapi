// Code generated by go-swagger; DO NOT EDIT.

package presence

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetPresenceUserPrimarysourceReader is a Reader for the GetPresenceUserPrimarysource structure.
type GetPresenceUserPrimarysourceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPresenceUserPrimarysourceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPresenceUserPrimarysourceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetPresenceUserPrimarysourceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetPresenceUserPrimarysourceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetPresenceUserPrimarysourceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetPresenceUserPrimarysourceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetPresenceUserPrimarysourceRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetPresenceUserPrimarysourceRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetPresenceUserPrimarysourceUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetPresenceUserPrimarysourceTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetPresenceUserPrimarysourceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetPresenceUserPrimarysourceServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetPresenceUserPrimarysourceGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetPresenceUserPrimarysourceOK creates a GetPresenceUserPrimarysourceOK with default headers values
func NewGetPresenceUserPrimarysourceOK() *GetPresenceUserPrimarysourceOK {
	return &GetPresenceUserPrimarysourceOK{}
}

/*GetPresenceUserPrimarysourceOK handles this case with default header values.

successful operation
*/
type GetPresenceUserPrimarysourceOK struct {
	Payload *models.UserPrimarySource
}

func (o *GetPresenceUserPrimarysourceOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/presence/users/{userId}/primarysource][%d] getPresenceUserPrimarysourceOK  %+v", 200, o.Payload)
}

func (o *GetPresenceUserPrimarysourceOK) GetPayload() *models.UserPrimarySource {
	return o.Payload
}

func (o *GetPresenceUserPrimarysourceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserPrimarySource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPresenceUserPrimarysourceBadRequest creates a GetPresenceUserPrimarysourceBadRequest with default headers values
func NewGetPresenceUserPrimarysourceBadRequest() *GetPresenceUserPrimarysourceBadRequest {
	return &GetPresenceUserPrimarysourceBadRequest{}
}

/*GetPresenceUserPrimarysourceBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetPresenceUserPrimarysourceBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetPresenceUserPrimarysourceBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/presence/users/{userId}/primarysource][%d] getPresenceUserPrimarysourceBadRequest  %+v", 400, o.Payload)
}

func (o *GetPresenceUserPrimarysourceBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetPresenceUserPrimarysourceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPresenceUserPrimarysourceUnauthorized creates a GetPresenceUserPrimarysourceUnauthorized with default headers values
func NewGetPresenceUserPrimarysourceUnauthorized() *GetPresenceUserPrimarysourceUnauthorized {
	return &GetPresenceUserPrimarysourceUnauthorized{}
}

/*GetPresenceUserPrimarysourceUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetPresenceUserPrimarysourceUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetPresenceUserPrimarysourceUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/presence/users/{userId}/primarysource][%d] getPresenceUserPrimarysourceUnauthorized  %+v", 401, o.Payload)
}

func (o *GetPresenceUserPrimarysourceUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetPresenceUserPrimarysourceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPresenceUserPrimarysourceForbidden creates a GetPresenceUserPrimarysourceForbidden with default headers values
func NewGetPresenceUserPrimarysourceForbidden() *GetPresenceUserPrimarysourceForbidden {
	return &GetPresenceUserPrimarysourceForbidden{}
}

/*GetPresenceUserPrimarysourceForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetPresenceUserPrimarysourceForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetPresenceUserPrimarysourceForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/presence/users/{userId}/primarysource][%d] getPresenceUserPrimarysourceForbidden  %+v", 403, o.Payload)
}

func (o *GetPresenceUserPrimarysourceForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetPresenceUserPrimarysourceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPresenceUserPrimarysourceNotFound creates a GetPresenceUserPrimarysourceNotFound with default headers values
func NewGetPresenceUserPrimarysourceNotFound() *GetPresenceUserPrimarysourceNotFound {
	return &GetPresenceUserPrimarysourceNotFound{}
}

/*GetPresenceUserPrimarysourceNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetPresenceUserPrimarysourceNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetPresenceUserPrimarysourceNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/presence/users/{userId}/primarysource][%d] getPresenceUserPrimarysourceNotFound  %+v", 404, o.Payload)
}

func (o *GetPresenceUserPrimarysourceNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetPresenceUserPrimarysourceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPresenceUserPrimarysourceRequestTimeout creates a GetPresenceUserPrimarysourceRequestTimeout with default headers values
func NewGetPresenceUserPrimarysourceRequestTimeout() *GetPresenceUserPrimarysourceRequestTimeout {
	return &GetPresenceUserPrimarysourceRequestTimeout{}
}

/*GetPresenceUserPrimarysourceRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetPresenceUserPrimarysourceRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetPresenceUserPrimarysourceRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/presence/users/{userId}/primarysource][%d] getPresenceUserPrimarysourceRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetPresenceUserPrimarysourceRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetPresenceUserPrimarysourceRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPresenceUserPrimarysourceRequestEntityTooLarge creates a GetPresenceUserPrimarysourceRequestEntityTooLarge with default headers values
func NewGetPresenceUserPrimarysourceRequestEntityTooLarge() *GetPresenceUserPrimarysourceRequestEntityTooLarge {
	return &GetPresenceUserPrimarysourceRequestEntityTooLarge{}
}

/*GetPresenceUserPrimarysourceRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetPresenceUserPrimarysourceRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetPresenceUserPrimarysourceRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/presence/users/{userId}/primarysource][%d] getPresenceUserPrimarysourceRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetPresenceUserPrimarysourceRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetPresenceUserPrimarysourceRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPresenceUserPrimarysourceUnsupportedMediaType creates a GetPresenceUserPrimarysourceUnsupportedMediaType with default headers values
func NewGetPresenceUserPrimarysourceUnsupportedMediaType() *GetPresenceUserPrimarysourceUnsupportedMediaType {
	return &GetPresenceUserPrimarysourceUnsupportedMediaType{}
}

/*GetPresenceUserPrimarysourceUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetPresenceUserPrimarysourceUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetPresenceUserPrimarysourceUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/presence/users/{userId}/primarysource][%d] getPresenceUserPrimarysourceUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetPresenceUserPrimarysourceUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetPresenceUserPrimarysourceUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPresenceUserPrimarysourceTooManyRequests creates a GetPresenceUserPrimarysourceTooManyRequests with default headers values
func NewGetPresenceUserPrimarysourceTooManyRequests() *GetPresenceUserPrimarysourceTooManyRequests {
	return &GetPresenceUserPrimarysourceTooManyRequests{}
}

/*GetPresenceUserPrimarysourceTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetPresenceUserPrimarysourceTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetPresenceUserPrimarysourceTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/presence/users/{userId}/primarysource][%d] getPresenceUserPrimarysourceTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetPresenceUserPrimarysourceTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetPresenceUserPrimarysourceTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPresenceUserPrimarysourceInternalServerError creates a GetPresenceUserPrimarysourceInternalServerError with default headers values
func NewGetPresenceUserPrimarysourceInternalServerError() *GetPresenceUserPrimarysourceInternalServerError {
	return &GetPresenceUserPrimarysourceInternalServerError{}
}

/*GetPresenceUserPrimarysourceInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetPresenceUserPrimarysourceInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetPresenceUserPrimarysourceInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/presence/users/{userId}/primarysource][%d] getPresenceUserPrimarysourceInternalServerError  %+v", 500, o.Payload)
}

func (o *GetPresenceUserPrimarysourceInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetPresenceUserPrimarysourceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPresenceUserPrimarysourceServiceUnavailable creates a GetPresenceUserPrimarysourceServiceUnavailable with default headers values
func NewGetPresenceUserPrimarysourceServiceUnavailable() *GetPresenceUserPrimarysourceServiceUnavailable {
	return &GetPresenceUserPrimarysourceServiceUnavailable{}
}

/*GetPresenceUserPrimarysourceServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetPresenceUserPrimarysourceServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetPresenceUserPrimarysourceServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/presence/users/{userId}/primarysource][%d] getPresenceUserPrimarysourceServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetPresenceUserPrimarysourceServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetPresenceUserPrimarysourceServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPresenceUserPrimarysourceGatewayTimeout creates a GetPresenceUserPrimarysourceGatewayTimeout with default headers values
func NewGetPresenceUserPrimarysourceGatewayTimeout() *GetPresenceUserPrimarysourceGatewayTimeout {
	return &GetPresenceUserPrimarysourceGatewayTimeout{}
}

/*GetPresenceUserPrimarysourceGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetPresenceUserPrimarysourceGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetPresenceUserPrimarysourceGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/presence/users/{userId}/primarysource][%d] getPresenceUserPrimarysourceGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetPresenceUserPrimarysourceGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetPresenceUserPrimarysourceGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
