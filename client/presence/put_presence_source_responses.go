// Code generated by go-swagger; DO NOT EDIT.

package presence

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutPresenceSourceReader is a Reader for the PutPresenceSource structure.
type PutPresenceSourceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutPresenceSourceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutPresenceSourceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutPresenceSourceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutPresenceSourceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutPresenceSourceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutPresenceSourceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutPresenceSourceRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPutPresenceSourceConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutPresenceSourceRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutPresenceSourceUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutPresenceSourceTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutPresenceSourceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutPresenceSourceServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutPresenceSourceGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutPresenceSourceOK creates a PutPresenceSourceOK with default headers values
func NewPutPresenceSourceOK() *PutPresenceSourceOK {
	return &PutPresenceSourceOK{}
}

/*PutPresenceSourceOK handles this case with default header values.

successful operation
*/
type PutPresenceSourceOK struct {
	Payload *models.Source
}

func (o *PutPresenceSourceOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/presence/sources/{sourceId}][%d] putPresenceSourceOK  %+v", 200, o.Payload)
}

func (o *PutPresenceSourceOK) GetPayload() *models.Source {
	return o.Payload
}

func (o *PutPresenceSourceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Source)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutPresenceSourceBadRequest creates a PutPresenceSourceBadRequest with default headers values
func NewPutPresenceSourceBadRequest() *PutPresenceSourceBadRequest {
	return &PutPresenceSourceBadRequest{}
}

/*PutPresenceSourceBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutPresenceSourceBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PutPresenceSourceBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/presence/sources/{sourceId}][%d] putPresenceSourceBadRequest  %+v", 400, o.Payload)
}

func (o *PutPresenceSourceBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutPresenceSourceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutPresenceSourceUnauthorized creates a PutPresenceSourceUnauthorized with default headers values
func NewPutPresenceSourceUnauthorized() *PutPresenceSourceUnauthorized {
	return &PutPresenceSourceUnauthorized{}
}

/*PutPresenceSourceUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PutPresenceSourceUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PutPresenceSourceUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/presence/sources/{sourceId}][%d] putPresenceSourceUnauthorized  %+v", 401, o.Payload)
}

func (o *PutPresenceSourceUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutPresenceSourceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutPresenceSourceForbidden creates a PutPresenceSourceForbidden with default headers values
func NewPutPresenceSourceForbidden() *PutPresenceSourceForbidden {
	return &PutPresenceSourceForbidden{}
}

/*PutPresenceSourceForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PutPresenceSourceForbidden struct {
	Payload *models.ErrorBody
}

func (o *PutPresenceSourceForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/presence/sources/{sourceId}][%d] putPresenceSourceForbidden  %+v", 403, o.Payload)
}

func (o *PutPresenceSourceForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutPresenceSourceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutPresenceSourceNotFound creates a PutPresenceSourceNotFound with default headers values
func NewPutPresenceSourceNotFound() *PutPresenceSourceNotFound {
	return &PutPresenceSourceNotFound{}
}

/*PutPresenceSourceNotFound handles this case with default header values.

The requested resource was not found.
*/
type PutPresenceSourceNotFound struct {
	Payload *models.ErrorBody
}

func (o *PutPresenceSourceNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/presence/sources/{sourceId}][%d] putPresenceSourceNotFound  %+v", 404, o.Payload)
}

func (o *PutPresenceSourceNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutPresenceSourceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutPresenceSourceRequestTimeout creates a PutPresenceSourceRequestTimeout with default headers values
func NewPutPresenceSourceRequestTimeout() *PutPresenceSourceRequestTimeout {
	return &PutPresenceSourceRequestTimeout{}
}

/*PutPresenceSourceRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutPresenceSourceRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PutPresenceSourceRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/presence/sources/{sourceId}][%d] putPresenceSourceRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutPresenceSourceRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutPresenceSourceRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutPresenceSourceConflict creates a PutPresenceSourceConflict with default headers values
func NewPutPresenceSourceConflict() *PutPresenceSourceConflict {
	return &PutPresenceSourceConflict{}
}

/*PutPresenceSourceConflict handles this case with default header values.

Conflict
*/
type PutPresenceSourceConflict struct {
	Payload *models.ErrorBody
}

func (o *PutPresenceSourceConflict) Error() string {
	return fmt.Sprintf("[PUT /api/v2/presence/sources/{sourceId}][%d] putPresenceSourceConflict  %+v", 409, o.Payload)
}

func (o *PutPresenceSourceConflict) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutPresenceSourceConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutPresenceSourceRequestEntityTooLarge creates a PutPresenceSourceRequestEntityTooLarge with default headers values
func NewPutPresenceSourceRequestEntityTooLarge() *PutPresenceSourceRequestEntityTooLarge {
	return &PutPresenceSourceRequestEntityTooLarge{}
}

/*PutPresenceSourceRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PutPresenceSourceRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PutPresenceSourceRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/presence/sources/{sourceId}][%d] putPresenceSourceRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutPresenceSourceRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutPresenceSourceRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutPresenceSourceUnsupportedMediaType creates a PutPresenceSourceUnsupportedMediaType with default headers values
func NewPutPresenceSourceUnsupportedMediaType() *PutPresenceSourceUnsupportedMediaType {
	return &PutPresenceSourceUnsupportedMediaType{}
}

/*PutPresenceSourceUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutPresenceSourceUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PutPresenceSourceUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/presence/sources/{sourceId}][%d] putPresenceSourceUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutPresenceSourceUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutPresenceSourceUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutPresenceSourceTooManyRequests creates a PutPresenceSourceTooManyRequests with default headers values
func NewPutPresenceSourceTooManyRequests() *PutPresenceSourceTooManyRequests {
	return &PutPresenceSourceTooManyRequests{}
}

/*PutPresenceSourceTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutPresenceSourceTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PutPresenceSourceTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/presence/sources/{sourceId}][%d] putPresenceSourceTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutPresenceSourceTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutPresenceSourceTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutPresenceSourceInternalServerError creates a PutPresenceSourceInternalServerError with default headers values
func NewPutPresenceSourceInternalServerError() *PutPresenceSourceInternalServerError {
	return &PutPresenceSourceInternalServerError{}
}

/*PutPresenceSourceInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutPresenceSourceInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PutPresenceSourceInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/presence/sources/{sourceId}][%d] putPresenceSourceInternalServerError  %+v", 500, o.Payload)
}

func (o *PutPresenceSourceInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutPresenceSourceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutPresenceSourceServiceUnavailable creates a PutPresenceSourceServiceUnavailable with default headers values
func NewPutPresenceSourceServiceUnavailable() *PutPresenceSourceServiceUnavailable {
	return &PutPresenceSourceServiceUnavailable{}
}

/*PutPresenceSourceServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutPresenceSourceServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PutPresenceSourceServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/presence/sources/{sourceId}][%d] putPresenceSourceServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutPresenceSourceServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutPresenceSourceServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutPresenceSourceGatewayTimeout creates a PutPresenceSourceGatewayTimeout with default headers values
func NewPutPresenceSourceGatewayTimeout() *PutPresenceSourceGatewayTimeout {
	return &PutPresenceSourceGatewayTimeout{}
}

/*PutPresenceSourceGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PutPresenceSourceGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PutPresenceSourceGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/presence/sources/{sourceId}][%d] putPresenceSourceGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutPresenceSourceGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutPresenceSourceGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
