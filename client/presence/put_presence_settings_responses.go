// Code generated by go-swagger; DO NOT EDIT.

package presence

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutPresenceSettingsReader is a Reader for the PutPresenceSettings structure.
type PutPresenceSettingsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutPresenceSettingsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutPresenceSettingsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutPresenceSettingsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutPresenceSettingsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutPresenceSettingsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutPresenceSettingsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutPresenceSettingsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPutPresenceSettingsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutPresenceSettingsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutPresenceSettingsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutPresenceSettingsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutPresenceSettingsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutPresenceSettingsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutPresenceSettingsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutPresenceSettingsOK creates a PutPresenceSettingsOK with default headers values
func NewPutPresenceSettingsOK() *PutPresenceSettingsOK {
	return &PutPresenceSettingsOK{}
}

/*
PutPresenceSettingsOK describes a response with status code 200, with default header values.

successful operation
*/
type PutPresenceSettingsOK struct {
	Payload *models.PresenceSettings
}

// IsSuccess returns true when this put presence settings o k response has a 2xx status code
func (o *PutPresenceSettingsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put presence settings o k response has a 3xx status code
func (o *PutPresenceSettingsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put presence settings o k response has a 4xx status code
func (o *PutPresenceSettingsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put presence settings o k response has a 5xx status code
func (o *PutPresenceSettingsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put presence settings o k response a status code equal to that given
func (o *PutPresenceSettingsOK) IsCode(code int) bool {
	return code == 200
}

func (o *PutPresenceSettingsOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/presence/settings][%d] putPresenceSettingsOK  %+v", 200, o.Payload)
}

func (o *PutPresenceSettingsOK) String() string {
	return fmt.Sprintf("[PUT /api/v2/presence/settings][%d] putPresenceSettingsOK  %+v", 200, o.Payload)
}

func (o *PutPresenceSettingsOK) GetPayload() *models.PresenceSettings {
	return o.Payload
}

func (o *PutPresenceSettingsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PresenceSettings)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutPresenceSettingsBadRequest creates a PutPresenceSettingsBadRequest with default headers values
func NewPutPresenceSettingsBadRequest() *PutPresenceSettingsBadRequest {
	return &PutPresenceSettingsBadRequest{}
}

/*
PutPresenceSettingsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutPresenceSettingsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put presence settings bad request response has a 2xx status code
func (o *PutPresenceSettingsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put presence settings bad request response has a 3xx status code
func (o *PutPresenceSettingsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put presence settings bad request response has a 4xx status code
func (o *PutPresenceSettingsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put presence settings bad request response has a 5xx status code
func (o *PutPresenceSettingsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put presence settings bad request response a status code equal to that given
func (o *PutPresenceSettingsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PutPresenceSettingsBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/presence/settings][%d] putPresenceSettingsBadRequest  %+v", 400, o.Payload)
}

func (o *PutPresenceSettingsBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/v2/presence/settings][%d] putPresenceSettingsBadRequest  %+v", 400, o.Payload)
}

func (o *PutPresenceSettingsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutPresenceSettingsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutPresenceSettingsUnauthorized creates a PutPresenceSettingsUnauthorized with default headers values
func NewPutPresenceSettingsUnauthorized() *PutPresenceSettingsUnauthorized {
	return &PutPresenceSettingsUnauthorized{}
}

/*
PutPresenceSettingsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PutPresenceSettingsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put presence settings unauthorized response has a 2xx status code
func (o *PutPresenceSettingsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put presence settings unauthorized response has a 3xx status code
func (o *PutPresenceSettingsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put presence settings unauthorized response has a 4xx status code
func (o *PutPresenceSettingsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put presence settings unauthorized response has a 5xx status code
func (o *PutPresenceSettingsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put presence settings unauthorized response a status code equal to that given
func (o *PutPresenceSettingsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PutPresenceSettingsUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/presence/settings][%d] putPresenceSettingsUnauthorized  %+v", 401, o.Payload)
}

func (o *PutPresenceSettingsUnauthorized) String() string {
	return fmt.Sprintf("[PUT /api/v2/presence/settings][%d] putPresenceSettingsUnauthorized  %+v", 401, o.Payload)
}

func (o *PutPresenceSettingsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutPresenceSettingsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutPresenceSettingsForbidden creates a PutPresenceSettingsForbidden with default headers values
func NewPutPresenceSettingsForbidden() *PutPresenceSettingsForbidden {
	return &PutPresenceSettingsForbidden{}
}

/*
PutPresenceSettingsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PutPresenceSettingsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put presence settings forbidden response has a 2xx status code
func (o *PutPresenceSettingsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put presence settings forbidden response has a 3xx status code
func (o *PutPresenceSettingsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put presence settings forbidden response has a 4xx status code
func (o *PutPresenceSettingsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put presence settings forbidden response has a 5xx status code
func (o *PutPresenceSettingsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put presence settings forbidden response a status code equal to that given
func (o *PutPresenceSettingsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PutPresenceSettingsForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/presence/settings][%d] putPresenceSettingsForbidden  %+v", 403, o.Payload)
}

func (o *PutPresenceSettingsForbidden) String() string {
	return fmt.Sprintf("[PUT /api/v2/presence/settings][%d] putPresenceSettingsForbidden  %+v", 403, o.Payload)
}

func (o *PutPresenceSettingsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutPresenceSettingsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutPresenceSettingsNotFound creates a PutPresenceSettingsNotFound with default headers values
func NewPutPresenceSettingsNotFound() *PutPresenceSettingsNotFound {
	return &PutPresenceSettingsNotFound{}
}

/*
PutPresenceSettingsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PutPresenceSettingsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put presence settings not found response has a 2xx status code
func (o *PutPresenceSettingsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put presence settings not found response has a 3xx status code
func (o *PutPresenceSettingsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put presence settings not found response has a 4xx status code
func (o *PutPresenceSettingsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put presence settings not found response has a 5xx status code
func (o *PutPresenceSettingsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put presence settings not found response a status code equal to that given
func (o *PutPresenceSettingsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PutPresenceSettingsNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/presence/settings][%d] putPresenceSettingsNotFound  %+v", 404, o.Payload)
}

func (o *PutPresenceSettingsNotFound) String() string {
	return fmt.Sprintf("[PUT /api/v2/presence/settings][%d] putPresenceSettingsNotFound  %+v", 404, o.Payload)
}

func (o *PutPresenceSettingsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutPresenceSettingsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutPresenceSettingsRequestTimeout creates a PutPresenceSettingsRequestTimeout with default headers values
func NewPutPresenceSettingsRequestTimeout() *PutPresenceSettingsRequestTimeout {
	return &PutPresenceSettingsRequestTimeout{}
}

/*
PutPresenceSettingsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutPresenceSettingsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put presence settings request timeout response has a 2xx status code
func (o *PutPresenceSettingsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put presence settings request timeout response has a 3xx status code
func (o *PutPresenceSettingsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put presence settings request timeout response has a 4xx status code
func (o *PutPresenceSettingsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this put presence settings request timeout response has a 5xx status code
func (o *PutPresenceSettingsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this put presence settings request timeout response a status code equal to that given
func (o *PutPresenceSettingsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PutPresenceSettingsRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/presence/settings][%d] putPresenceSettingsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutPresenceSettingsRequestTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/presence/settings][%d] putPresenceSettingsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutPresenceSettingsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutPresenceSettingsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutPresenceSettingsConflict creates a PutPresenceSettingsConflict with default headers values
func NewPutPresenceSettingsConflict() *PutPresenceSettingsConflict {
	return &PutPresenceSettingsConflict{}
}

/*
PutPresenceSettingsConflict describes a response with status code 409, with default header values.

Conflict
*/
type PutPresenceSettingsConflict struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put presence settings conflict response has a 2xx status code
func (o *PutPresenceSettingsConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put presence settings conflict response has a 3xx status code
func (o *PutPresenceSettingsConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put presence settings conflict response has a 4xx status code
func (o *PutPresenceSettingsConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this put presence settings conflict response has a 5xx status code
func (o *PutPresenceSettingsConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this put presence settings conflict response a status code equal to that given
func (o *PutPresenceSettingsConflict) IsCode(code int) bool {
	return code == 409
}

func (o *PutPresenceSettingsConflict) Error() string {
	return fmt.Sprintf("[PUT /api/v2/presence/settings][%d] putPresenceSettingsConflict  %+v", 409, o.Payload)
}

func (o *PutPresenceSettingsConflict) String() string {
	return fmt.Sprintf("[PUT /api/v2/presence/settings][%d] putPresenceSettingsConflict  %+v", 409, o.Payload)
}

func (o *PutPresenceSettingsConflict) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutPresenceSettingsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutPresenceSettingsRequestEntityTooLarge creates a PutPresenceSettingsRequestEntityTooLarge with default headers values
func NewPutPresenceSettingsRequestEntityTooLarge() *PutPresenceSettingsRequestEntityTooLarge {
	return &PutPresenceSettingsRequestEntityTooLarge{}
}

/*
PutPresenceSettingsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PutPresenceSettingsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put presence settings request entity too large response has a 2xx status code
func (o *PutPresenceSettingsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put presence settings request entity too large response has a 3xx status code
func (o *PutPresenceSettingsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put presence settings request entity too large response has a 4xx status code
func (o *PutPresenceSettingsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this put presence settings request entity too large response has a 5xx status code
func (o *PutPresenceSettingsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this put presence settings request entity too large response a status code equal to that given
func (o *PutPresenceSettingsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PutPresenceSettingsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/presence/settings][%d] putPresenceSettingsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutPresenceSettingsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PUT /api/v2/presence/settings][%d] putPresenceSettingsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutPresenceSettingsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutPresenceSettingsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutPresenceSettingsUnsupportedMediaType creates a PutPresenceSettingsUnsupportedMediaType with default headers values
func NewPutPresenceSettingsUnsupportedMediaType() *PutPresenceSettingsUnsupportedMediaType {
	return &PutPresenceSettingsUnsupportedMediaType{}
}

/*
PutPresenceSettingsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutPresenceSettingsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put presence settings unsupported media type response has a 2xx status code
func (o *PutPresenceSettingsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put presence settings unsupported media type response has a 3xx status code
func (o *PutPresenceSettingsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put presence settings unsupported media type response has a 4xx status code
func (o *PutPresenceSettingsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this put presence settings unsupported media type response has a 5xx status code
func (o *PutPresenceSettingsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this put presence settings unsupported media type response a status code equal to that given
func (o *PutPresenceSettingsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PutPresenceSettingsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/presence/settings][%d] putPresenceSettingsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutPresenceSettingsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PUT /api/v2/presence/settings][%d] putPresenceSettingsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutPresenceSettingsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutPresenceSettingsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutPresenceSettingsTooManyRequests creates a PutPresenceSettingsTooManyRequests with default headers values
func NewPutPresenceSettingsTooManyRequests() *PutPresenceSettingsTooManyRequests {
	return &PutPresenceSettingsTooManyRequests{}
}

/*
PutPresenceSettingsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutPresenceSettingsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put presence settings too many requests response has a 2xx status code
func (o *PutPresenceSettingsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put presence settings too many requests response has a 3xx status code
func (o *PutPresenceSettingsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put presence settings too many requests response has a 4xx status code
func (o *PutPresenceSettingsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this put presence settings too many requests response has a 5xx status code
func (o *PutPresenceSettingsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this put presence settings too many requests response a status code equal to that given
func (o *PutPresenceSettingsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PutPresenceSettingsTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/presence/settings][%d] putPresenceSettingsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutPresenceSettingsTooManyRequests) String() string {
	return fmt.Sprintf("[PUT /api/v2/presence/settings][%d] putPresenceSettingsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutPresenceSettingsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutPresenceSettingsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutPresenceSettingsInternalServerError creates a PutPresenceSettingsInternalServerError with default headers values
func NewPutPresenceSettingsInternalServerError() *PutPresenceSettingsInternalServerError {
	return &PutPresenceSettingsInternalServerError{}
}

/*
PutPresenceSettingsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutPresenceSettingsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put presence settings internal server error response has a 2xx status code
func (o *PutPresenceSettingsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put presence settings internal server error response has a 3xx status code
func (o *PutPresenceSettingsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put presence settings internal server error response has a 4xx status code
func (o *PutPresenceSettingsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this put presence settings internal server error response has a 5xx status code
func (o *PutPresenceSettingsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this put presence settings internal server error response a status code equal to that given
func (o *PutPresenceSettingsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PutPresenceSettingsInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/presence/settings][%d] putPresenceSettingsInternalServerError  %+v", 500, o.Payload)
}

func (o *PutPresenceSettingsInternalServerError) String() string {
	return fmt.Sprintf("[PUT /api/v2/presence/settings][%d] putPresenceSettingsInternalServerError  %+v", 500, o.Payload)
}

func (o *PutPresenceSettingsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutPresenceSettingsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutPresenceSettingsServiceUnavailable creates a PutPresenceSettingsServiceUnavailable with default headers values
func NewPutPresenceSettingsServiceUnavailable() *PutPresenceSettingsServiceUnavailable {
	return &PutPresenceSettingsServiceUnavailable{}
}

/*
PutPresenceSettingsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutPresenceSettingsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put presence settings service unavailable response has a 2xx status code
func (o *PutPresenceSettingsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put presence settings service unavailable response has a 3xx status code
func (o *PutPresenceSettingsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put presence settings service unavailable response has a 4xx status code
func (o *PutPresenceSettingsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this put presence settings service unavailable response has a 5xx status code
func (o *PutPresenceSettingsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this put presence settings service unavailable response a status code equal to that given
func (o *PutPresenceSettingsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PutPresenceSettingsServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/presence/settings][%d] putPresenceSettingsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutPresenceSettingsServiceUnavailable) String() string {
	return fmt.Sprintf("[PUT /api/v2/presence/settings][%d] putPresenceSettingsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutPresenceSettingsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutPresenceSettingsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutPresenceSettingsGatewayTimeout creates a PutPresenceSettingsGatewayTimeout with default headers values
func NewPutPresenceSettingsGatewayTimeout() *PutPresenceSettingsGatewayTimeout {
	return &PutPresenceSettingsGatewayTimeout{}
}

/*
PutPresenceSettingsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PutPresenceSettingsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put presence settings gateway timeout response has a 2xx status code
func (o *PutPresenceSettingsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put presence settings gateway timeout response has a 3xx status code
func (o *PutPresenceSettingsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put presence settings gateway timeout response has a 4xx status code
func (o *PutPresenceSettingsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this put presence settings gateway timeout response has a 5xx status code
func (o *PutPresenceSettingsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this put presence settings gateway timeout response a status code equal to that given
func (o *PutPresenceSettingsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PutPresenceSettingsGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/presence/settings][%d] putPresenceSettingsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutPresenceSettingsGatewayTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/presence/settings][%d] putPresenceSettingsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutPresenceSettingsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutPresenceSettingsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
