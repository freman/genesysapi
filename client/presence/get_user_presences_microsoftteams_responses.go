// Code generated by go-swagger; DO NOT EDIT.

package presence

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetUserPresencesMicrosoftteamsReader is a Reader for the GetUserPresencesMicrosoftteams structure.
type GetUserPresencesMicrosoftteamsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserPresencesMicrosoftteamsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUserPresencesMicrosoftteamsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetUserPresencesMicrosoftteamsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetUserPresencesMicrosoftteamsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetUserPresencesMicrosoftteamsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUserPresencesMicrosoftteamsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetUserPresencesMicrosoftteamsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetUserPresencesMicrosoftteamsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetUserPresencesMicrosoftteamsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetUserPresencesMicrosoftteamsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetUserPresencesMicrosoftteamsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetUserPresencesMicrosoftteamsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetUserPresencesMicrosoftteamsOK creates a GetUserPresencesMicrosoftteamsOK with default headers values
func NewGetUserPresencesMicrosoftteamsOK() *GetUserPresencesMicrosoftteamsOK {
	return &GetUserPresencesMicrosoftteamsOK{}
}

/*GetUserPresencesMicrosoftteamsOK handles this case with default header values.

successful operation
*/
type GetUserPresencesMicrosoftteamsOK struct {
	Payload *models.PresenceExpand
}

func (o *GetUserPresencesMicrosoftteamsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/presences/microsoftteams][%d] getUserPresencesMicrosoftteamsOK  %+v", 200, o.Payload)
}

func (o *GetUserPresencesMicrosoftteamsOK) GetPayload() *models.PresenceExpand {
	return o.Payload
}

func (o *GetUserPresencesMicrosoftteamsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PresenceExpand)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserPresencesMicrosoftteamsBadRequest creates a GetUserPresencesMicrosoftteamsBadRequest with default headers values
func NewGetUserPresencesMicrosoftteamsBadRequest() *GetUserPresencesMicrosoftteamsBadRequest {
	return &GetUserPresencesMicrosoftteamsBadRequest{}
}

/*GetUserPresencesMicrosoftteamsBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetUserPresencesMicrosoftteamsBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetUserPresencesMicrosoftteamsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/presences/microsoftteams][%d] getUserPresencesMicrosoftteamsBadRequest  %+v", 400, o.Payload)
}

func (o *GetUserPresencesMicrosoftteamsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserPresencesMicrosoftteamsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserPresencesMicrosoftteamsUnauthorized creates a GetUserPresencesMicrosoftteamsUnauthorized with default headers values
func NewGetUserPresencesMicrosoftteamsUnauthorized() *GetUserPresencesMicrosoftteamsUnauthorized {
	return &GetUserPresencesMicrosoftteamsUnauthorized{}
}

/*GetUserPresencesMicrosoftteamsUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetUserPresencesMicrosoftteamsUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetUserPresencesMicrosoftteamsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/presences/microsoftteams][%d] getUserPresencesMicrosoftteamsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetUserPresencesMicrosoftteamsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserPresencesMicrosoftteamsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserPresencesMicrosoftteamsForbidden creates a GetUserPresencesMicrosoftteamsForbidden with default headers values
func NewGetUserPresencesMicrosoftteamsForbidden() *GetUserPresencesMicrosoftteamsForbidden {
	return &GetUserPresencesMicrosoftteamsForbidden{}
}

/*GetUserPresencesMicrosoftteamsForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetUserPresencesMicrosoftteamsForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetUserPresencesMicrosoftteamsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/presences/microsoftteams][%d] getUserPresencesMicrosoftteamsForbidden  %+v", 403, o.Payload)
}

func (o *GetUserPresencesMicrosoftteamsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserPresencesMicrosoftteamsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserPresencesMicrosoftteamsNotFound creates a GetUserPresencesMicrosoftteamsNotFound with default headers values
func NewGetUserPresencesMicrosoftteamsNotFound() *GetUserPresencesMicrosoftteamsNotFound {
	return &GetUserPresencesMicrosoftteamsNotFound{}
}

/*GetUserPresencesMicrosoftteamsNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetUserPresencesMicrosoftteamsNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetUserPresencesMicrosoftteamsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/presences/microsoftteams][%d] getUserPresencesMicrosoftteamsNotFound  %+v", 404, o.Payload)
}

func (o *GetUserPresencesMicrosoftteamsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserPresencesMicrosoftteamsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserPresencesMicrosoftteamsRequestEntityTooLarge creates a GetUserPresencesMicrosoftteamsRequestEntityTooLarge with default headers values
func NewGetUserPresencesMicrosoftteamsRequestEntityTooLarge() *GetUserPresencesMicrosoftteamsRequestEntityTooLarge {
	return &GetUserPresencesMicrosoftteamsRequestEntityTooLarge{}
}

/*GetUserPresencesMicrosoftteamsRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetUserPresencesMicrosoftteamsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetUserPresencesMicrosoftteamsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/presences/microsoftteams][%d] getUserPresencesMicrosoftteamsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetUserPresencesMicrosoftteamsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserPresencesMicrosoftteamsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserPresencesMicrosoftteamsUnsupportedMediaType creates a GetUserPresencesMicrosoftteamsUnsupportedMediaType with default headers values
func NewGetUserPresencesMicrosoftteamsUnsupportedMediaType() *GetUserPresencesMicrosoftteamsUnsupportedMediaType {
	return &GetUserPresencesMicrosoftteamsUnsupportedMediaType{}
}

/*GetUserPresencesMicrosoftteamsUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetUserPresencesMicrosoftteamsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetUserPresencesMicrosoftteamsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/presences/microsoftteams][%d] getUserPresencesMicrosoftteamsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetUserPresencesMicrosoftteamsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserPresencesMicrosoftteamsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserPresencesMicrosoftteamsTooManyRequests creates a GetUserPresencesMicrosoftteamsTooManyRequests with default headers values
func NewGetUserPresencesMicrosoftteamsTooManyRequests() *GetUserPresencesMicrosoftteamsTooManyRequests {
	return &GetUserPresencesMicrosoftteamsTooManyRequests{}
}

/*GetUserPresencesMicrosoftteamsTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type GetUserPresencesMicrosoftteamsTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetUserPresencesMicrosoftteamsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/presences/microsoftteams][%d] getUserPresencesMicrosoftteamsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetUserPresencesMicrosoftteamsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserPresencesMicrosoftteamsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserPresencesMicrosoftteamsInternalServerError creates a GetUserPresencesMicrosoftteamsInternalServerError with default headers values
func NewGetUserPresencesMicrosoftteamsInternalServerError() *GetUserPresencesMicrosoftteamsInternalServerError {
	return &GetUserPresencesMicrosoftteamsInternalServerError{}
}

/*GetUserPresencesMicrosoftteamsInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetUserPresencesMicrosoftteamsInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetUserPresencesMicrosoftteamsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/presences/microsoftteams][%d] getUserPresencesMicrosoftteamsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUserPresencesMicrosoftteamsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserPresencesMicrosoftteamsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserPresencesMicrosoftteamsServiceUnavailable creates a GetUserPresencesMicrosoftteamsServiceUnavailable with default headers values
func NewGetUserPresencesMicrosoftteamsServiceUnavailable() *GetUserPresencesMicrosoftteamsServiceUnavailable {
	return &GetUserPresencesMicrosoftteamsServiceUnavailable{}
}

/*GetUserPresencesMicrosoftteamsServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetUserPresencesMicrosoftteamsServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetUserPresencesMicrosoftteamsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/presences/microsoftteams][%d] getUserPresencesMicrosoftteamsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetUserPresencesMicrosoftteamsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserPresencesMicrosoftteamsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserPresencesMicrosoftteamsGatewayTimeout creates a GetUserPresencesMicrosoftteamsGatewayTimeout with default headers values
func NewGetUserPresencesMicrosoftteamsGatewayTimeout() *GetUserPresencesMicrosoftteamsGatewayTimeout {
	return &GetUserPresencesMicrosoftteamsGatewayTimeout{}
}

/*GetUserPresencesMicrosoftteamsGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetUserPresencesMicrosoftteamsGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetUserPresencesMicrosoftteamsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/presences/microsoftteams][%d] getUserPresencesMicrosoftteamsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetUserPresencesMicrosoftteamsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserPresencesMicrosoftteamsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
