// Code generated by go-swagger; DO NOT EDIT.

package presence

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetPresencedefinitionParams creates a new GetPresencedefinitionParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetPresencedefinitionParams() *GetPresencedefinitionParams {
	return &GetPresencedefinitionParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetPresencedefinitionParamsWithTimeout creates a new GetPresencedefinitionParams object
// with the ability to set a timeout on a request.
func NewGetPresencedefinitionParamsWithTimeout(timeout time.Duration) *GetPresencedefinitionParams {
	return &GetPresencedefinitionParams{
		timeout: timeout,
	}
}

// NewGetPresencedefinitionParamsWithContext creates a new GetPresencedefinitionParams object
// with the ability to set a context for a request.
func NewGetPresencedefinitionParamsWithContext(ctx context.Context) *GetPresencedefinitionParams {
	return &GetPresencedefinitionParams{
		Context: ctx,
	}
}

// NewGetPresencedefinitionParamsWithHTTPClient creates a new GetPresencedefinitionParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetPresencedefinitionParamsWithHTTPClient(client *http.Client) *GetPresencedefinitionParams {
	return &GetPresencedefinitionParams{
		HTTPClient: client,
	}
}

/*
GetPresencedefinitionParams contains all the parameters to send to the API endpoint

	for the get presencedefinition operation.

	Typically these are written to a http.Request.
*/
type GetPresencedefinitionParams struct {

	/* LocaleCode.

	   The locale code to fetch for the presence definition. Use ALL to fetch everything.
	*/
	LocaleCode *string

	/* PresenceID.

	   Organization Presence ID
	*/
	PresenceID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get presencedefinition params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetPresencedefinitionParams) WithDefaults() *GetPresencedefinitionParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get presencedefinition params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetPresencedefinitionParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get presencedefinition params
func (o *GetPresencedefinitionParams) WithTimeout(timeout time.Duration) *GetPresencedefinitionParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get presencedefinition params
func (o *GetPresencedefinitionParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get presencedefinition params
func (o *GetPresencedefinitionParams) WithContext(ctx context.Context) *GetPresencedefinitionParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get presencedefinition params
func (o *GetPresencedefinitionParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get presencedefinition params
func (o *GetPresencedefinitionParams) WithHTTPClient(client *http.Client) *GetPresencedefinitionParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get presencedefinition params
func (o *GetPresencedefinitionParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithLocaleCode adds the localeCode to the get presencedefinition params
func (o *GetPresencedefinitionParams) WithLocaleCode(localeCode *string) *GetPresencedefinitionParams {
	o.SetLocaleCode(localeCode)
	return o
}

// SetLocaleCode adds the localeCode to the get presencedefinition params
func (o *GetPresencedefinitionParams) SetLocaleCode(localeCode *string) {
	o.LocaleCode = localeCode
}

// WithPresenceID adds the presenceID to the get presencedefinition params
func (o *GetPresencedefinitionParams) WithPresenceID(presenceID string) *GetPresencedefinitionParams {
	o.SetPresenceID(presenceID)
	return o
}

// SetPresenceID adds the presenceId to the get presencedefinition params
func (o *GetPresencedefinitionParams) SetPresenceID(presenceID string) {
	o.PresenceID = presenceID
}

// WriteToRequest writes these params to a swagger request
func (o *GetPresencedefinitionParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.LocaleCode != nil {

		// query param localeCode
		var qrLocaleCode string

		if o.LocaleCode != nil {
			qrLocaleCode = *o.LocaleCode
		}
		qLocaleCode := qrLocaleCode
		if qLocaleCode != "" {

			if err := r.SetQueryParam("localeCode", qLocaleCode); err != nil {
				return err
			}
		}
	}

	// path param presenceId
	if err := r.SetPathParam("presenceId", o.PresenceID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
