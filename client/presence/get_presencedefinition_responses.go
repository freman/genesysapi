// Code generated by go-swagger; DO NOT EDIT.

package presence

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetPresencedefinitionReader is a Reader for the GetPresencedefinition structure.
type GetPresencedefinitionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPresencedefinitionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPresencedefinitionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetPresencedefinitionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetPresencedefinitionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetPresencedefinitionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetPresencedefinitionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetPresencedefinitionRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetPresencedefinitionRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetPresencedefinitionUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetPresencedefinitionTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetPresencedefinitionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetPresencedefinitionServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetPresencedefinitionGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetPresencedefinitionOK creates a GetPresencedefinitionOK with default headers values
func NewGetPresencedefinitionOK() *GetPresencedefinitionOK {
	return &GetPresencedefinitionOK{}
}

/*
GetPresencedefinitionOK describes a response with status code 200, with default header values.

successful operation
*/
type GetPresencedefinitionOK struct {
	Payload *models.OrganizationPresence
}

// IsSuccess returns true when this get presencedefinition o k response has a 2xx status code
func (o *GetPresencedefinitionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get presencedefinition o k response has a 3xx status code
func (o *GetPresencedefinitionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get presencedefinition o k response has a 4xx status code
func (o *GetPresencedefinitionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get presencedefinition o k response has a 5xx status code
func (o *GetPresencedefinitionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get presencedefinition o k response a status code equal to that given
func (o *GetPresencedefinitionOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetPresencedefinitionOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/presencedefinitions/{presenceId}][%d] getPresencedefinitionOK  %+v", 200, o.Payload)
}

func (o *GetPresencedefinitionOK) String() string {
	return fmt.Sprintf("[GET /api/v2/presencedefinitions/{presenceId}][%d] getPresencedefinitionOK  %+v", 200, o.Payload)
}

func (o *GetPresencedefinitionOK) GetPayload() *models.OrganizationPresence {
	return o.Payload
}

func (o *GetPresencedefinitionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OrganizationPresence)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPresencedefinitionBadRequest creates a GetPresencedefinitionBadRequest with default headers values
func NewGetPresencedefinitionBadRequest() *GetPresencedefinitionBadRequest {
	return &GetPresencedefinitionBadRequest{}
}

/*
GetPresencedefinitionBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetPresencedefinitionBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get presencedefinition bad request response has a 2xx status code
func (o *GetPresencedefinitionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get presencedefinition bad request response has a 3xx status code
func (o *GetPresencedefinitionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get presencedefinition bad request response has a 4xx status code
func (o *GetPresencedefinitionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get presencedefinition bad request response has a 5xx status code
func (o *GetPresencedefinitionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get presencedefinition bad request response a status code equal to that given
func (o *GetPresencedefinitionBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetPresencedefinitionBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/presencedefinitions/{presenceId}][%d] getPresencedefinitionBadRequest  %+v", 400, o.Payload)
}

func (o *GetPresencedefinitionBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/presencedefinitions/{presenceId}][%d] getPresencedefinitionBadRequest  %+v", 400, o.Payload)
}

func (o *GetPresencedefinitionBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetPresencedefinitionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPresencedefinitionUnauthorized creates a GetPresencedefinitionUnauthorized with default headers values
func NewGetPresencedefinitionUnauthorized() *GetPresencedefinitionUnauthorized {
	return &GetPresencedefinitionUnauthorized{}
}

/*
GetPresencedefinitionUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetPresencedefinitionUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get presencedefinition unauthorized response has a 2xx status code
func (o *GetPresencedefinitionUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get presencedefinition unauthorized response has a 3xx status code
func (o *GetPresencedefinitionUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get presencedefinition unauthorized response has a 4xx status code
func (o *GetPresencedefinitionUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get presencedefinition unauthorized response has a 5xx status code
func (o *GetPresencedefinitionUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get presencedefinition unauthorized response a status code equal to that given
func (o *GetPresencedefinitionUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetPresencedefinitionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/presencedefinitions/{presenceId}][%d] getPresencedefinitionUnauthorized  %+v", 401, o.Payload)
}

func (o *GetPresencedefinitionUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/presencedefinitions/{presenceId}][%d] getPresencedefinitionUnauthorized  %+v", 401, o.Payload)
}

func (o *GetPresencedefinitionUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetPresencedefinitionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPresencedefinitionForbidden creates a GetPresencedefinitionForbidden with default headers values
func NewGetPresencedefinitionForbidden() *GetPresencedefinitionForbidden {
	return &GetPresencedefinitionForbidden{}
}

/*
GetPresencedefinitionForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetPresencedefinitionForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get presencedefinition forbidden response has a 2xx status code
func (o *GetPresencedefinitionForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get presencedefinition forbidden response has a 3xx status code
func (o *GetPresencedefinitionForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get presencedefinition forbidden response has a 4xx status code
func (o *GetPresencedefinitionForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get presencedefinition forbidden response has a 5xx status code
func (o *GetPresencedefinitionForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get presencedefinition forbidden response a status code equal to that given
func (o *GetPresencedefinitionForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetPresencedefinitionForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/presencedefinitions/{presenceId}][%d] getPresencedefinitionForbidden  %+v", 403, o.Payload)
}

func (o *GetPresencedefinitionForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/presencedefinitions/{presenceId}][%d] getPresencedefinitionForbidden  %+v", 403, o.Payload)
}

func (o *GetPresencedefinitionForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetPresencedefinitionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPresencedefinitionNotFound creates a GetPresencedefinitionNotFound with default headers values
func NewGetPresencedefinitionNotFound() *GetPresencedefinitionNotFound {
	return &GetPresencedefinitionNotFound{}
}

/*
GetPresencedefinitionNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetPresencedefinitionNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get presencedefinition not found response has a 2xx status code
func (o *GetPresencedefinitionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get presencedefinition not found response has a 3xx status code
func (o *GetPresencedefinitionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get presencedefinition not found response has a 4xx status code
func (o *GetPresencedefinitionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get presencedefinition not found response has a 5xx status code
func (o *GetPresencedefinitionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get presencedefinition not found response a status code equal to that given
func (o *GetPresencedefinitionNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetPresencedefinitionNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/presencedefinitions/{presenceId}][%d] getPresencedefinitionNotFound  %+v", 404, o.Payload)
}

func (o *GetPresencedefinitionNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/presencedefinitions/{presenceId}][%d] getPresencedefinitionNotFound  %+v", 404, o.Payload)
}

func (o *GetPresencedefinitionNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetPresencedefinitionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPresencedefinitionRequestTimeout creates a GetPresencedefinitionRequestTimeout with default headers values
func NewGetPresencedefinitionRequestTimeout() *GetPresencedefinitionRequestTimeout {
	return &GetPresencedefinitionRequestTimeout{}
}

/*
GetPresencedefinitionRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetPresencedefinitionRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get presencedefinition request timeout response has a 2xx status code
func (o *GetPresencedefinitionRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get presencedefinition request timeout response has a 3xx status code
func (o *GetPresencedefinitionRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get presencedefinition request timeout response has a 4xx status code
func (o *GetPresencedefinitionRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get presencedefinition request timeout response has a 5xx status code
func (o *GetPresencedefinitionRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get presencedefinition request timeout response a status code equal to that given
func (o *GetPresencedefinitionRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetPresencedefinitionRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/presencedefinitions/{presenceId}][%d] getPresencedefinitionRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetPresencedefinitionRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/presencedefinitions/{presenceId}][%d] getPresencedefinitionRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetPresencedefinitionRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetPresencedefinitionRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPresencedefinitionRequestEntityTooLarge creates a GetPresencedefinitionRequestEntityTooLarge with default headers values
func NewGetPresencedefinitionRequestEntityTooLarge() *GetPresencedefinitionRequestEntityTooLarge {
	return &GetPresencedefinitionRequestEntityTooLarge{}
}

/*
GetPresencedefinitionRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetPresencedefinitionRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get presencedefinition request entity too large response has a 2xx status code
func (o *GetPresencedefinitionRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get presencedefinition request entity too large response has a 3xx status code
func (o *GetPresencedefinitionRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get presencedefinition request entity too large response has a 4xx status code
func (o *GetPresencedefinitionRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get presencedefinition request entity too large response has a 5xx status code
func (o *GetPresencedefinitionRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get presencedefinition request entity too large response a status code equal to that given
func (o *GetPresencedefinitionRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetPresencedefinitionRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/presencedefinitions/{presenceId}][%d] getPresencedefinitionRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetPresencedefinitionRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/presencedefinitions/{presenceId}][%d] getPresencedefinitionRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetPresencedefinitionRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetPresencedefinitionRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPresencedefinitionUnsupportedMediaType creates a GetPresencedefinitionUnsupportedMediaType with default headers values
func NewGetPresencedefinitionUnsupportedMediaType() *GetPresencedefinitionUnsupportedMediaType {
	return &GetPresencedefinitionUnsupportedMediaType{}
}

/*
GetPresencedefinitionUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetPresencedefinitionUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get presencedefinition unsupported media type response has a 2xx status code
func (o *GetPresencedefinitionUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get presencedefinition unsupported media type response has a 3xx status code
func (o *GetPresencedefinitionUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get presencedefinition unsupported media type response has a 4xx status code
func (o *GetPresencedefinitionUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get presencedefinition unsupported media type response has a 5xx status code
func (o *GetPresencedefinitionUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get presencedefinition unsupported media type response a status code equal to that given
func (o *GetPresencedefinitionUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetPresencedefinitionUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/presencedefinitions/{presenceId}][%d] getPresencedefinitionUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetPresencedefinitionUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/presencedefinitions/{presenceId}][%d] getPresencedefinitionUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetPresencedefinitionUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetPresencedefinitionUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPresencedefinitionTooManyRequests creates a GetPresencedefinitionTooManyRequests with default headers values
func NewGetPresencedefinitionTooManyRequests() *GetPresencedefinitionTooManyRequests {
	return &GetPresencedefinitionTooManyRequests{}
}

/*
GetPresencedefinitionTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetPresencedefinitionTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get presencedefinition too many requests response has a 2xx status code
func (o *GetPresencedefinitionTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get presencedefinition too many requests response has a 3xx status code
func (o *GetPresencedefinitionTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get presencedefinition too many requests response has a 4xx status code
func (o *GetPresencedefinitionTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get presencedefinition too many requests response has a 5xx status code
func (o *GetPresencedefinitionTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get presencedefinition too many requests response a status code equal to that given
func (o *GetPresencedefinitionTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetPresencedefinitionTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/presencedefinitions/{presenceId}][%d] getPresencedefinitionTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetPresencedefinitionTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/presencedefinitions/{presenceId}][%d] getPresencedefinitionTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetPresencedefinitionTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetPresencedefinitionTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPresencedefinitionInternalServerError creates a GetPresencedefinitionInternalServerError with default headers values
func NewGetPresencedefinitionInternalServerError() *GetPresencedefinitionInternalServerError {
	return &GetPresencedefinitionInternalServerError{}
}

/*
GetPresencedefinitionInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetPresencedefinitionInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get presencedefinition internal server error response has a 2xx status code
func (o *GetPresencedefinitionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get presencedefinition internal server error response has a 3xx status code
func (o *GetPresencedefinitionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get presencedefinition internal server error response has a 4xx status code
func (o *GetPresencedefinitionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get presencedefinition internal server error response has a 5xx status code
func (o *GetPresencedefinitionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get presencedefinition internal server error response a status code equal to that given
func (o *GetPresencedefinitionInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetPresencedefinitionInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/presencedefinitions/{presenceId}][%d] getPresencedefinitionInternalServerError  %+v", 500, o.Payload)
}

func (o *GetPresencedefinitionInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/presencedefinitions/{presenceId}][%d] getPresencedefinitionInternalServerError  %+v", 500, o.Payload)
}

func (o *GetPresencedefinitionInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetPresencedefinitionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPresencedefinitionServiceUnavailable creates a GetPresencedefinitionServiceUnavailable with default headers values
func NewGetPresencedefinitionServiceUnavailable() *GetPresencedefinitionServiceUnavailable {
	return &GetPresencedefinitionServiceUnavailable{}
}

/*
GetPresencedefinitionServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetPresencedefinitionServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get presencedefinition service unavailable response has a 2xx status code
func (o *GetPresencedefinitionServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get presencedefinition service unavailable response has a 3xx status code
func (o *GetPresencedefinitionServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get presencedefinition service unavailable response has a 4xx status code
func (o *GetPresencedefinitionServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get presencedefinition service unavailable response has a 5xx status code
func (o *GetPresencedefinitionServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get presencedefinition service unavailable response a status code equal to that given
func (o *GetPresencedefinitionServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetPresencedefinitionServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/presencedefinitions/{presenceId}][%d] getPresencedefinitionServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetPresencedefinitionServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/presencedefinitions/{presenceId}][%d] getPresencedefinitionServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetPresencedefinitionServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetPresencedefinitionServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPresencedefinitionGatewayTimeout creates a GetPresencedefinitionGatewayTimeout with default headers values
func NewGetPresencedefinitionGatewayTimeout() *GetPresencedefinitionGatewayTimeout {
	return &GetPresencedefinitionGatewayTimeout{}
}

/*
GetPresencedefinitionGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetPresencedefinitionGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get presencedefinition gateway timeout response has a 2xx status code
func (o *GetPresencedefinitionGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get presencedefinition gateway timeout response has a 3xx status code
func (o *GetPresencedefinitionGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get presencedefinition gateway timeout response has a 4xx status code
func (o *GetPresencedefinitionGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get presencedefinition gateway timeout response has a 5xx status code
func (o *GetPresencedefinitionGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get presencedefinition gateway timeout response a status code equal to that given
func (o *GetPresencedefinitionGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetPresencedefinitionGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/presencedefinitions/{presenceId}][%d] getPresencedefinitionGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetPresencedefinitionGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/presencedefinitions/{presenceId}][%d] getPresencedefinitionGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetPresencedefinitionGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetPresencedefinitionGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
