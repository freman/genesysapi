// Code generated by go-swagger; DO NOT EDIT.

package speech_and_text_analytics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetSpeechandtextanalyticsTopicsPublishjobReader is a Reader for the GetSpeechandtextanalyticsTopicsPublishjob structure.
type GetSpeechandtextanalyticsTopicsPublishjobReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSpeechandtextanalyticsTopicsPublishjobReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSpeechandtextanalyticsTopicsPublishjobOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetSpeechandtextanalyticsTopicsPublishjobBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetSpeechandtextanalyticsTopicsPublishjobUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetSpeechandtextanalyticsTopicsPublishjobForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSpeechandtextanalyticsTopicsPublishjobNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetSpeechandtextanalyticsTopicsPublishjobRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetSpeechandtextanalyticsTopicsPublishjobRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetSpeechandtextanalyticsTopicsPublishjobUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetSpeechandtextanalyticsTopicsPublishjobTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSpeechandtextanalyticsTopicsPublishjobInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetSpeechandtextanalyticsTopicsPublishjobServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetSpeechandtextanalyticsTopicsPublishjobGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetSpeechandtextanalyticsTopicsPublishjobOK creates a GetSpeechandtextanalyticsTopicsPublishjobOK with default headers values
func NewGetSpeechandtextanalyticsTopicsPublishjobOK() *GetSpeechandtextanalyticsTopicsPublishjobOK {
	return &GetSpeechandtextanalyticsTopicsPublishjobOK{}
}

/*
GetSpeechandtextanalyticsTopicsPublishjobOK describes a response with status code 200, with default header values.

successful operation
*/
type GetSpeechandtextanalyticsTopicsPublishjobOK struct {
	Payload *models.TopicJob
}

// IsSuccess returns true when this get speechandtextanalytics topics publishjob o k response has a 2xx status code
func (o *GetSpeechandtextanalyticsTopicsPublishjobOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get speechandtextanalytics topics publishjob o k response has a 3xx status code
func (o *GetSpeechandtextanalyticsTopicsPublishjobOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics topics publishjob o k response has a 4xx status code
func (o *GetSpeechandtextanalyticsTopicsPublishjobOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get speechandtextanalytics topics publishjob o k response has a 5xx status code
func (o *GetSpeechandtextanalyticsTopicsPublishjobOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get speechandtextanalytics topics publishjob o k response a status code equal to that given
func (o *GetSpeechandtextanalyticsTopicsPublishjobOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetSpeechandtextanalyticsTopicsPublishjobOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/topics/publishjobs/{jobId}][%d] getSpeechandtextanalyticsTopicsPublishjobOK  %+v", 200, o.Payload)
}

func (o *GetSpeechandtextanalyticsTopicsPublishjobOK) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/topics/publishjobs/{jobId}][%d] getSpeechandtextanalyticsTopicsPublishjobOK  %+v", 200, o.Payload)
}

func (o *GetSpeechandtextanalyticsTopicsPublishjobOK) GetPayload() *models.TopicJob {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsTopicsPublishjobOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TopicJob)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsTopicsPublishjobBadRequest creates a GetSpeechandtextanalyticsTopicsPublishjobBadRequest with default headers values
func NewGetSpeechandtextanalyticsTopicsPublishjobBadRequest() *GetSpeechandtextanalyticsTopicsPublishjobBadRequest {
	return &GetSpeechandtextanalyticsTopicsPublishjobBadRequest{}
}

/*
GetSpeechandtextanalyticsTopicsPublishjobBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetSpeechandtextanalyticsTopicsPublishjobBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics topics publishjob bad request response has a 2xx status code
func (o *GetSpeechandtextanalyticsTopicsPublishjobBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics topics publishjob bad request response has a 3xx status code
func (o *GetSpeechandtextanalyticsTopicsPublishjobBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics topics publishjob bad request response has a 4xx status code
func (o *GetSpeechandtextanalyticsTopicsPublishjobBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get speechandtextanalytics topics publishjob bad request response has a 5xx status code
func (o *GetSpeechandtextanalyticsTopicsPublishjobBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get speechandtextanalytics topics publishjob bad request response a status code equal to that given
func (o *GetSpeechandtextanalyticsTopicsPublishjobBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetSpeechandtextanalyticsTopicsPublishjobBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/topics/publishjobs/{jobId}][%d] getSpeechandtextanalyticsTopicsPublishjobBadRequest  %+v", 400, o.Payload)
}

func (o *GetSpeechandtextanalyticsTopicsPublishjobBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/topics/publishjobs/{jobId}][%d] getSpeechandtextanalyticsTopicsPublishjobBadRequest  %+v", 400, o.Payload)
}

func (o *GetSpeechandtextanalyticsTopicsPublishjobBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsTopicsPublishjobBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsTopicsPublishjobUnauthorized creates a GetSpeechandtextanalyticsTopicsPublishjobUnauthorized with default headers values
func NewGetSpeechandtextanalyticsTopicsPublishjobUnauthorized() *GetSpeechandtextanalyticsTopicsPublishjobUnauthorized {
	return &GetSpeechandtextanalyticsTopicsPublishjobUnauthorized{}
}

/*
GetSpeechandtextanalyticsTopicsPublishjobUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetSpeechandtextanalyticsTopicsPublishjobUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics topics publishjob unauthorized response has a 2xx status code
func (o *GetSpeechandtextanalyticsTopicsPublishjobUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics topics publishjob unauthorized response has a 3xx status code
func (o *GetSpeechandtextanalyticsTopicsPublishjobUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics topics publishjob unauthorized response has a 4xx status code
func (o *GetSpeechandtextanalyticsTopicsPublishjobUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get speechandtextanalytics topics publishjob unauthorized response has a 5xx status code
func (o *GetSpeechandtextanalyticsTopicsPublishjobUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get speechandtextanalytics topics publishjob unauthorized response a status code equal to that given
func (o *GetSpeechandtextanalyticsTopicsPublishjobUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetSpeechandtextanalyticsTopicsPublishjobUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/topics/publishjobs/{jobId}][%d] getSpeechandtextanalyticsTopicsPublishjobUnauthorized  %+v", 401, o.Payload)
}

func (o *GetSpeechandtextanalyticsTopicsPublishjobUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/topics/publishjobs/{jobId}][%d] getSpeechandtextanalyticsTopicsPublishjobUnauthorized  %+v", 401, o.Payload)
}

func (o *GetSpeechandtextanalyticsTopicsPublishjobUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsTopicsPublishjobUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsTopicsPublishjobForbidden creates a GetSpeechandtextanalyticsTopicsPublishjobForbidden with default headers values
func NewGetSpeechandtextanalyticsTopicsPublishjobForbidden() *GetSpeechandtextanalyticsTopicsPublishjobForbidden {
	return &GetSpeechandtextanalyticsTopicsPublishjobForbidden{}
}

/*
GetSpeechandtextanalyticsTopicsPublishjobForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetSpeechandtextanalyticsTopicsPublishjobForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics topics publishjob forbidden response has a 2xx status code
func (o *GetSpeechandtextanalyticsTopicsPublishjobForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics topics publishjob forbidden response has a 3xx status code
func (o *GetSpeechandtextanalyticsTopicsPublishjobForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics topics publishjob forbidden response has a 4xx status code
func (o *GetSpeechandtextanalyticsTopicsPublishjobForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get speechandtextanalytics topics publishjob forbidden response has a 5xx status code
func (o *GetSpeechandtextanalyticsTopicsPublishjobForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get speechandtextanalytics topics publishjob forbidden response a status code equal to that given
func (o *GetSpeechandtextanalyticsTopicsPublishjobForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetSpeechandtextanalyticsTopicsPublishjobForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/topics/publishjobs/{jobId}][%d] getSpeechandtextanalyticsTopicsPublishjobForbidden  %+v", 403, o.Payload)
}

func (o *GetSpeechandtextanalyticsTopicsPublishjobForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/topics/publishjobs/{jobId}][%d] getSpeechandtextanalyticsTopicsPublishjobForbidden  %+v", 403, o.Payload)
}

func (o *GetSpeechandtextanalyticsTopicsPublishjobForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsTopicsPublishjobForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsTopicsPublishjobNotFound creates a GetSpeechandtextanalyticsTopicsPublishjobNotFound with default headers values
func NewGetSpeechandtextanalyticsTopicsPublishjobNotFound() *GetSpeechandtextanalyticsTopicsPublishjobNotFound {
	return &GetSpeechandtextanalyticsTopicsPublishjobNotFound{}
}

/*
GetSpeechandtextanalyticsTopicsPublishjobNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetSpeechandtextanalyticsTopicsPublishjobNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics topics publishjob not found response has a 2xx status code
func (o *GetSpeechandtextanalyticsTopicsPublishjobNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics topics publishjob not found response has a 3xx status code
func (o *GetSpeechandtextanalyticsTopicsPublishjobNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics topics publishjob not found response has a 4xx status code
func (o *GetSpeechandtextanalyticsTopicsPublishjobNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get speechandtextanalytics topics publishjob not found response has a 5xx status code
func (o *GetSpeechandtextanalyticsTopicsPublishjobNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get speechandtextanalytics topics publishjob not found response a status code equal to that given
func (o *GetSpeechandtextanalyticsTopicsPublishjobNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetSpeechandtextanalyticsTopicsPublishjobNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/topics/publishjobs/{jobId}][%d] getSpeechandtextanalyticsTopicsPublishjobNotFound  %+v", 404, o.Payload)
}

func (o *GetSpeechandtextanalyticsTopicsPublishjobNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/topics/publishjobs/{jobId}][%d] getSpeechandtextanalyticsTopicsPublishjobNotFound  %+v", 404, o.Payload)
}

func (o *GetSpeechandtextanalyticsTopicsPublishjobNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsTopicsPublishjobNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsTopicsPublishjobRequestTimeout creates a GetSpeechandtextanalyticsTopicsPublishjobRequestTimeout with default headers values
func NewGetSpeechandtextanalyticsTopicsPublishjobRequestTimeout() *GetSpeechandtextanalyticsTopicsPublishjobRequestTimeout {
	return &GetSpeechandtextanalyticsTopicsPublishjobRequestTimeout{}
}

/*
GetSpeechandtextanalyticsTopicsPublishjobRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetSpeechandtextanalyticsTopicsPublishjobRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics topics publishjob request timeout response has a 2xx status code
func (o *GetSpeechandtextanalyticsTopicsPublishjobRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics topics publishjob request timeout response has a 3xx status code
func (o *GetSpeechandtextanalyticsTopicsPublishjobRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics topics publishjob request timeout response has a 4xx status code
func (o *GetSpeechandtextanalyticsTopicsPublishjobRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get speechandtextanalytics topics publishjob request timeout response has a 5xx status code
func (o *GetSpeechandtextanalyticsTopicsPublishjobRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get speechandtextanalytics topics publishjob request timeout response a status code equal to that given
func (o *GetSpeechandtextanalyticsTopicsPublishjobRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetSpeechandtextanalyticsTopicsPublishjobRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/topics/publishjobs/{jobId}][%d] getSpeechandtextanalyticsTopicsPublishjobRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetSpeechandtextanalyticsTopicsPublishjobRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/topics/publishjobs/{jobId}][%d] getSpeechandtextanalyticsTopicsPublishjobRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetSpeechandtextanalyticsTopicsPublishjobRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsTopicsPublishjobRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsTopicsPublishjobRequestEntityTooLarge creates a GetSpeechandtextanalyticsTopicsPublishjobRequestEntityTooLarge with default headers values
func NewGetSpeechandtextanalyticsTopicsPublishjobRequestEntityTooLarge() *GetSpeechandtextanalyticsTopicsPublishjobRequestEntityTooLarge {
	return &GetSpeechandtextanalyticsTopicsPublishjobRequestEntityTooLarge{}
}

/*
GetSpeechandtextanalyticsTopicsPublishjobRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetSpeechandtextanalyticsTopicsPublishjobRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics topics publishjob request entity too large response has a 2xx status code
func (o *GetSpeechandtextanalyticsTopicsPublishjobRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics topics publishjob request entity too large response has a 3xx status code
func (o *GetSpeechandtextanalyticsTopicsPublishjobRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics topics publishjob request entity too large response has a 4xx status code
func (o *GetSpeechandtextanalyticsTopicsPublishjobRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get speechandtextanalytics topics publishjob request entity too large response has a 5xx status code
func (o *GetSpeechandtextanalyticsTopicsPublishjobRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get speechandtextanalytics topics publishjob request entity too large response a status code equal to that given
func (o *GetSpeechandtextanalyticsTopicsPublishjobRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetSpeechandtextanalyticsTopicsPublishjobRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/topics/publishjobs/{jobId}][%d] getSpeechandtextanalyticsTopicsPublishjobRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetSpeechandtextanalyticsTopicsPublishjobRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/topics/publishjobs/{jobId}][%d] getSpeechandtextanalyticsTopicsPublishjobRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetSpeechandtextanalyticsTopicsPublishjobRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsTopicsPublishjobRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsTopicsPublishjobUnsupportedMediaType creates a GetSpeechandtextanalyticsTopicsPublishjobUnsupportedMediaType with default headers values
func NewGetSpeechandtextanalyticsTopicsPublishjobUnsupportedMediaType() *GetSpeechandtextanalyticsTopicsPublishjobUnsupportedMediaType {
	return &GetSpeechandtextanalyticsTopicsPublishjobUnsupportedMediaType{}
}

/*
GetSpeechandtextanalyticsTopicsPublishjobUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetSpeechandtextanalyticsTopicsPublishjobUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics topics publishjob unsupported media type response has a 2xx status code
func (o *GetSpeechandtextanalyticsTopicsPublishjobUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics topics publishjob unsupported media type response has a 3xx status code
func (o *GetSpeechandtextanalyticsTopicsPublishjobUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics topics publishjob unsupported media type response has a 4xx status code
func (o *GetSpeechandtextanalyticsTopicsPublishjobUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get speechandtextanalytics topics publishjob unsupported media type response has a 5xx status code
func (o *GetSpeechandtextanalyticsTopicsPublishjobUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get speechandtextanalytics topics publishjob unsupported media type response a status code equal to that given
func (o *GetSpeechandtextanalyticsTopicsPublishjobUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetSpeechandtextanalyticsTopicsPublishjobUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/topics/publishjobs/{jobId}][%d] getSpeechandtextanalyticsTopicsPublishjobUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetSpeechandtextanalyticsTopicsPublishjobUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/topics/publishjobs/{jobId}][%d] getSpeechandtextanalyticsTopicsPublishjobUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetSpeechandtextanalyticsTopicsPublishjobUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsTopicsPublishjobUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsTopicsPublishjobTooManyRequests creates a GetSpeechandtextanalyticsTopicsPublishjobTooManyRequests with default headers values
func NewGetSpeechandtextanalyticsTopicsPublishjobTooManyRequests() *GetSpeechandtextanalyticsTopicsPublishjobTooManyRequests {
	return &GetSpeechandtextanalyticsTopicsPublishjobTooManyRequests{}
}

/*
GetSpeechandtextanalyticsTopicsPublishjobTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetSpeechandtextanalyticsTopicsPublishjobTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics topics publishjob too many requests response has a 2xx status code
func (o *GetSpeechandtextanalyticsTopicsPublishjobTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics topics publishjob too many requests response has a 3xx status code
func (o *GetSpeechandtextanalyticsTopicsPublishjobTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics topics publishjob too many requests response has a 4xx status code
func (o *GetSpeechandtextanalyticsTopicsPublishjobTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get speechandtextanalytics topics publishjob too many requests response has a 5xx status code
func (o *GetSpeechandtextanalyticsTopicsPublishjobTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get speechandtextanalytics topics publishjob too many requests response a status code equal to that given
func (o *GetSpeechandtextanalyticsTopicsPublishjobTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetSpeechandtextanalyticsTopicsPublishjobTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/topics/publishjobs/{jobId}][%d] getSpeechandtextanalyticsTopicsPublishjobTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetSpeechandtextanalyticsTopicsPublishjobTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/topics/publishjobs/{jobId}][%d] getSpeechandtextanalyticsTopicsPublishjobTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetSpeechandtextanalyticsTopicsPublishjobTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsTopicsPublishjobTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsTopicsPublishjobInternalServerError creates a GetSpeechandtextanalyticsTopicsPublishjobInternalServerError with default headers values
func NewGetSpeechandtextanalyticsTopicsPublishjobInternalServerError() *GetSpeechandtextanalyticsTopicsPublishjobInternalServerError {
	return &GetSpeechandtextanalyticsTopicsPublishjobInternalServerError{}
}

/*
GetSpeechandtextanalyticsTopicsPublishjobInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetSpeechandtextanalyticsTopicsPublishjobInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics topics publishjob internal server error response has a 2xx status code
func (o *GetSpeechandtextanalyticsTopicsPublishjobInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics topics publishjob internal server error response has a 3xx status code
func (o *GetSpeechandtextanalyticsTopicsPublishjobInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics topics publishjob internal server error response has a 4xx status code
func (o *GetSpeechandtextanalyticsTopicsPublishjobInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get speechandtextanalytics topics publishjob internal server error response has a 5xx status code
func (o *GetSpeechandtextanalyticsTopicsPublishjobInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get speechandtextanalytics topics publishjob internal server error response a status code equal to that given
func (o *GetSpeechandtextanalyticsTopicsPublishjobInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetSpeechandtextanalyticsTopicsPublishjobInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/topics/publishjobs/{jobId}][%d] getSpeechandtextanalyticsTopicsPublishjobInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSpeechandtextanalyticsTopicsPublishjobInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/topics/publishjobs/{jobId}][%d] getSpeechandtextanalyticsTopicsPublishjobInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSpeechandtextanalyticsTopicsPublishjobInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsTopicsPublishjobInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsTopicsPublishjobServiceUnavailable creates a GetSpeechandtextanalyticsTopicsPublishjobServiceUnavailable with default headers values
func NewGetSpeechandtextanalyticsTopicsPublishjobServiceUnavailable() *GetSpeechandtextanalyticsTopicsPublishjobServiceUnavailable {
	return &GetSpeechandtextanalyticsTopicsPublishjobServiceUnavailable{}
}

/*
GetSpeechandtextanalyticsTopicsPublishjobServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetSpeechandtextanalyticsTopicsPublishjobServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics topics publishjob service unavailable response has a 2xx status code
func (o *GetSpeechandtextanalyticsTopicsPublishjobServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics topics publishjob service unavailable response has a 3xx status code
func (o *GetSpeechandtextanalyticsTopicsPublishjobServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics topics publishjob service unavailable response has a 4xx status code
func (o *GetSpeechandtextanalyticsTopicsPublishjobServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get speechandtextanalytics topics publishjob service unavailable response has a 5xx status code
func (o *GetSpeechandtextanalyticsTopicsPublishjobServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get speechandtextanalytics topics publishjob service unavailable response a status code equal to that given
func (o *GetSpeechandtextanalyticsTopicsPublishjobServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetSpeechandtextanalyticsTopicsPublishjobServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/topics/publishjobs/{jobId}][%d] getSpeechandtextanalyticsTopicsPublishjobServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetSpeechandtextanalyticsTopicsPublishjobServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/topics/publishjobs/{jobId}][%d] getSpeechandtextanalyticsTopicsPublishjobServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetSpeechandtextanalyticsTopicsPublishjobServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsTopicsPublishjobServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsTopicsPublishjobGatewayTimeout creates a GetSpeechandtextanalyticsTopicsPublishjobGatewayTimeout with default headers values
func NewGetSpeechandtextanalyticsTopicsPublishjobGatewayTimeout() *GetSpeechandtextanalyticsTopicsPublishjobGatewayTimeout {
	return &GetSpeechandtextanalyticsTopicsPublishjobGatewayTimeout{}
}

/*
GetSpeechandtextanalyticsTopicsPublishjobGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetSpeechandtextanalyticsTopicsPublishjobGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics topics publishjob gateway timeout response has a 2xx status code
func (o *GetSpeechandtextanalyticsTopicsPublishjobGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics topics publishjob gateway timeout response has a 3xx status code
func (o *GetSpeechandtextanalyticsTopicsPublishjobGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics topics publishjob gateway timeout response has a 4xx status code
func (o *GetSpeechandtextanalyticsTopicsPublishjobGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get speechandtextanalytics topics publishjob gateway timeout response has a 5xx status code
func (o *GetSpeechandtextanalyticsTopicsPublishjobGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get speechandtextanalytics topics publishjob gateway timeout response a status code equal to that given
func (o *GetSpeechandtextanalyticsTopicsPublishjobGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetSpeechandtextanalyticsTopicsPublishjobGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/topics/publishjobs/{jobId}][%d] getSpeechandtextanalyticsTopicsPublishjobGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetSpeechandtextanalyticsTopicsPublishjobGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/topics/publishjobs/{jobId}][%d] getSpeechandtextanalyticsTopicsPublishjobGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetSpeechandtextanalyticsTopicsPublishjobGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsTopicsPublishjobGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
