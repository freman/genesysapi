// Code generated by go-swagger; DO NOT EDIT.

package speech_and_text_analytics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// DeleteSpeechandtextanalyticsSentimentfeedbackReader is a Reader for the DeleteSpeechandtextanalyticsSentimentfeedback structure.
type DeleteSpeechandtextanalyticsSentimentfeedbackReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteSpeechandtextanalyticsSentimentfeedbackReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteSpeechandtextanalyticsSentimentfeedbackNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteSpeechandtextanalyticsSentimentfeedbackBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteSpeechandtextanalyticsSentimentfeedbackUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteSpeechandtextanalyticsSentimentfeedbackForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteSpeechandtextanalyticsSentimentfeedbackNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewDeleteSpeechandtextanalyticsSentimentfeedbackRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewDeleteSpeechandtextanalyticsSentimentfeedbackRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDeleteSpeechandtextanalyticsSentimentfeedbackUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteSpeechandtextanalyticsSentimentfeedbackTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteSpeechandtextanalyticsSentimentfeedbackInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteSpeechandtextanalyticsSentimentfeedbackServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteSpeechandtextanalyticsSentimentfeedbackGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteSpeechandtextanalyticsSentimentfeedbackNoContent creates a DeleteSpeechandtextanalyticsSentimentfeedbackNoContent with default headers values
func NewDeleteSpeechandtextanalyticsSentimentfeedbackNoContent() *DeleteSpeechandtextanalyticsSentimentfeedbackNoContent {
	return &DeleteSpeechandtextanalyticsSentimentfeedbackNoContent{}
}

/*DeleteSpeechandtextanalyticsSentimentfeedbackNoContent handles this case with default header values.

No Content
*/
type DeleteSpeechandtextanalyticsSentimentfeedbackNoContent struct {
}

func (o *DeleteSpeechandtextanalyticsSentimentfeedbackNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/speechandtextanalytics/sentimentfeedback][%d] deleteSpeechandtextanalyticsSentimentfeedbackNoContent ", 204)
}

func (o *DeleteSpeechandtextanalyticsSentimentfeedbackNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSpeechandtextanalyticsSentimentfeedbackBadRequest creates a DeleteSpeechandtextanalyticsSentimentfeedbackBadRequest with default headers values
func NewDeleteSpeechandtextanalyticsSentimentfeedbackBadRequest() *DeleteSpeechandtextanalyticsSentimentfeedbackBadRequest {
	return &DeleteSpeechandtextanalyticsSentimentfeedbackBadRequest{}
}

/*DeleteSpeechandtextanalyticsSentimentfeedbackBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type DeleteSpeechandtextanalyticsSentimentfeedbackBadRequest struct {
	Payload *models.ErrorBody
}

func (o *DeleteSpeechandtextanalyticsSentimentfeedbackBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/speechandtextanalytics/sentimentfeedback][%d] deleteSpeechandtextanalyticsSentimentfeedbackBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteSpeechandtextanalyticsSentimentfeedbackBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteSpeechandtextanalyticsSentimentfeedbackBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSpeechandtextanalyticsSentimentfeedbackUnauthorized creates a DeleteSpeechandtextanalyticsSentimentfeedbackUnauthorized with default headers values
func NewDeleteSpeechandtextanalyticsSentimentfeedbackUnauthorized() *DeleteSpeechandtextanalyticsSentimentfeedbackUnauthorized {
	return &DeleteSpeechandtextanalyticsSentimentfeedbackUnauthorized{}
}

/*DeleteSpeechandtextanalyticsSentimentfeedbackUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type DeleteSpeechandtextanalyticsSentimentfeedbackUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *DeleteSpeechandtextanalyticsSentimentfeedbackUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/speechandtextanalytics/sentimentfeedback][%d] deleteSpeechandtextanalyticsSentimentfeedbackUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteSpeechandtextanalyticsSentimentfeedbackUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteSpeechandtextanalyticsSentimentfeedbackUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSpeechandtextanalyticsSentimentfeedbackForbidden creates a DeleteSpeechandtextanalyticsSentimentfeedbackForbidden with default headers values
func NewDeleteSpeechandtextanalyticsSentimentfeedbackForbidden() *DeleteSpeechandtextanalyticsSentimentfeedbackForbidden {
	return &DeleteSpeechandtextanalyticsSentimentfeedbackForbidden{}
}

/*DeleteSpeechandtextanalyticsSentimentfeedbackForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type DeleteSpeechandtextanalyticsSentimentfeedbackForbidden struct {
	Payload *models.ErrorBody
}

func (o *DeleteSpeechandtextanalyticsSentimentfeedbackForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/speechandtextanalytics/sentimentfeedback][%d] deleteSpeechandtextanalyticsSentimentfeedbackForbidden  %+v", 403, o.Payload)
}

func (o *DeleteSpeechandtextanalyticsSentimentfeedbackForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteSpeechandtextanalyticsSentimentfeedbackForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSpeechandtextanalyticsSentimentfeedbackNotFound creates a DeleteSpeechandtextanalyticsSentimentfeedbackNotFound with default headers values
func NewDeleteSpeechandtextanalyticsSentimentfeedbackNotFound() *DeleteSpeechandtextanalyticsSentimentfeedbackNotFound {
	return &DeleteSpeechandtextanalyticsSentimentfeedbackNotFound{}
}

/*DeleteSpeechandtextanalyticsSentimentfeedbackNotFound handles this case with default header values.

The requested resource was not found.
*/
type DeleteSpeechandtextanalyticsSentimentfeedbackNotFound struct {
	Payload *models.ErrorBody
}

func (o *DeleteSpeechandtextanalyticsSentimentfeedbackNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/speechandtextanalytics/sentimentfeedback][%d] deleteSpeechandtextanalyticsSentimentfeedbackNotFound  %+v", 404, o.Payload)
}

func (o *DeleteSpeechandtextanalyticsSentimentfeedbackNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteSpeechandtextanalyticsSentimentfeedbackNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSpeechandtextanalyticsSentimentfeedbackRequestTimeout creates a DeleteSpeechandtextanalyticsSentimentfeedbackRequestTimeout with default headers values
func NewDeleteSpeechandtextanalyticsSentimentfeedbackRequestTimeout() *DeleteSpeechandtextanalyticsSentimentfeedbackRequestTimeout {
	return &DeleteSpeechandtextanalyticsSentimentfeedbackRequestTimeout{}
}

/*DeleteSpeechandtextanalyticsSentimentfeedbackRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type DeleteSpeechandtextanalyticsSentimentfeedbackRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *DeleteSpeechandtextanalyticsSentimentfeedbackRequestTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/speechandtextanalytics/sentimentfeedback][%d] deleteSpeechandtextanalyticsSentimentfeedbackRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteSpeechandtextanalyticsSentimentfeedbackRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteSpeechandtextanalyticsSentimentfeedbackRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSpeechandtextanalyticsSentimentfeedbackRequestEntityTooLarge creates a DeleteSpeechandtextanalyticsSentimentfeedbackRequestEntityTooLarge with default headers values
func NewDeleteSpeechandtextanalyticsSentimentfeedbackRequestEntityTooLarge() *DeleteSpeechandtextanalyticsSentimentfeedbackRequestEntityTooLarge {
	return &DeleteSpeechandtextanalyticsSentimentfeedbackRequestEntityTooLarge{}
}

/*DeleteSpeechandtextanalyticsSentimentfeedbackRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type DeleteSpeechandtextanalyticsSentimentfeedbackRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *DeleteSpeechandtextanalyticsSentimentfeedbackRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/speechandtextanalytics/sentimentfeedback][%d] deleteSpeechandtextanalyticsSentimentfeedbackRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteSpeechandtextanalyticsSentimentfeedbackRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteSpeechandtextanalyticsSentimentfeedbackRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSpeechandtextanalyticsSentimentfeedbackUnsupportedMediaType creates a DeleteSpeechandtextanalyticsSentimentfeedbackUnsupportedMediaType with default headers values
func NewDeleteSpeechandtextanalyticsSentimentfeedbackUnsupportedMediaType() *DeleteSpeechandtextanalyticsSentimentfeedbackUnsupportedMediaType {
	return &DeleteSpeechandtextanalyticsSentimentfeedbackUnsupportedMediaType{}
}

/*DeleteSpeechandtextanalyticsSentimentfeedbackUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type DeleteSpeechandtextanalyticsSentimentfeedbackUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *DeleteSpeechandtextanalyticsSentimentfeedbackUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/speechandtextanalytics/sentimentfeedback][%d] deleteSpeechandtextanalyticsSentimentfeedbackUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteSpeechandtextanalyticsSentimentfeedbackUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteSpeechandtextanalyticsSentimentfeedbackUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSpeechandtextanalyticsSentimentfeedbackTooManyRequests creates a DeleteSpeechandtextanalyticsSentimentfeedbackTooManyRequests with default headers values
func NewDeleteSpeechandtextanalyticsSentimentfeedbackTooManyRequests() *DeleteSpeechandtextanalyticsSentimentfeedbackTooManyRequests {
	return &DeleteSpeechandtextanalyticsSentimentfeedbackTooManyRequests{}
}

/*DeleteSpeechandtextanalyticsSentimentfeedbackTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type DeleteSpeechandtextanalyticsSentimentfeedbackTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *DeleteSpeechandtextanalyticsSentimentfeedbackTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/speechandtextanalytics/sentimentfeedback][%d] deleteSpeechandtextanalyticsSentimentfeedbackTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteSpeechandtextanalyticsSentimentfeedbackTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteSpeechandtextanalyticsSentimentfeedbackTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSpeechandtextanalyticsSentimentfeedbackInternalServerError creates a DeleteSpeechandtextanalyticsSentimentfeedbackInternalServerError with default headers values
func NewDeleteSpeechandtextanalyticsSentimentfeedbackInternalServerError() *DeleteSpeechandtextanalyticsSentimentfeedbackInternalServerError {
	return &DeleteSpeechandtextanalyticsSentimentfeedbackInternalServerError{}
}

/*DeleteSpeechandtextanalyticsSentimentfeedbackInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type DeleteSpeechandtextanalyticsSentimentfeedbackInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *DeleteSpeechandtextanalyticsSentimentfeedbackInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/speechandtextanalytics/sentimentfeedback][%d] deleteSpeechandtextanalyticsSentimentfeedbackInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteSpeechandtextanalyticsSentimentfeedbackInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteSpeechandtextanalyticsSentimentfeedbackInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSpeechandtextanalyticsSentimentfeedbackServiceUnavailable creates a DeleteSpeechandtextanalyticsSentimentfeedbackServiceUnavailable with default headers values
func NewDeleteSpeechandtextanalyticsSentimentfeedbackServiceUnavailable() *DeleteSpeechandtextanalyticsSentimentfeedbackServiceUnavailable {
	return &DeleteSpeechandtextanalyticsSentimentfeedbackServiceUnavailable{}
}

/*DeleteSpeechandtextanalyticsSentimentfeedbackServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type DeleteSpeechandtextanalyticsSentimentfeedbackServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *DeleteSpeechandtextanalyticsSentimentfeedbackServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/speechandtextanalytics/sentimentfeedback][%d] deleteSpeechandtextanalyticsSentimentfeedbackServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteSpeechandtextanalyticsSentimentfeedbackServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteSpeechandtextanalyticsSentimentfeedbackServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSpeechandtextanalyticsSentimentfeedbackGatewayTimeout creates a DeleteSpeechandtextanalyticsSentimentfeedbackGatewayTimeout with default headers values
func NewDeleteSpeechandtextanalyticsSentimentfeedbackGatewayTimeout() *DeleteSpeechandtextanalyticsSentimentfeedbackGatewayTimeout {
	return &DeleteSpeechandtextanalyticsSentimentfeedbackGatewayTimeout{}
}

/*DeleteSpeechandtextanalyticsSentimentfeedbackGatewayTimeout handles this case with default header values.

The request timed out.
*/
type DeleteSpeechandtextanalyticsSentimentfeedbackGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *DeleteSpeechandtextanalyticsSentimentfeedbackGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/speechandtextanalytics/sentimentfeedback][%d] deleteSpeechandtextanalyticsSentimentfeedbackGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteSpeechandtextanalyticsSentimentfeedbackGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteSpeechandtextanalyticsSentimentfeedbackGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
