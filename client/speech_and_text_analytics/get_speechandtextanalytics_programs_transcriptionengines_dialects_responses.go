// Code generated by go-swagger; DO NOT EDIT.

package speech_and_text_analytics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsReader is a Reader for the GetSpeechandtextanalyticsProgramsTranscriptionenginesDialects structure.
type GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsOK creates a GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsOK with default headers values
func NewGetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsOK() *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsOK {
	return &GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsOK{}
}

/*
GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsOK struct {
	Payload *models.SupportedDialectsEntityListing
}

// IsSuccess returns true when this get speechandtextanalytics programs transcriptionengines dialects o k response has a 2xx status code
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get speechandtextanalytics programs transcriptionengines dialects o k response has a 3xx status code
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics programs transcriptionengines dialects o k response has a 4xx status code
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get speechandtextanalytics programs transcriptionengines dialects o k response has a 5xx status code
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get speechandtextanalytics programs transcriptionengines dialects o k response a status code equal to that given
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/transcriptionengines/dialects][%d] getSpeechandtextanalyticsProgramsTranscriptionenginesDialectsOK  %+v", 200, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsOK) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/transcriptionengines/dialects][%d] getSpeechandtextanalyticsProgramsTranscriptionenginesDialectsOK  %+v", 200, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsOK) GetPayload() *models.SupportedDialectsEntityListing {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SupportedDialectsEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsBadRequest creates a GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsBadRequest with default headers values
func NewGetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsBadRequest() *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsBadRequest {
	return &GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsBadRequest{}
}

/*
GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics programs transcriptionengines dialects bad request response has a 2xx status code
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics programs transcriptionengines dialects bad request response has a 3xx status code
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics programs transcriptionengines dialects bad request response has a 4xx status code
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get speechandtextanalytics programs transcriptionengines dialects bad request response has a 5xx status code
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get speechandtextanalytics programs transcriptionengines dialects bad request response a status code equal to that given
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/transcriptionengines/dialects][%d] getSpeechandtextanalyticsProgramsTranscriptionenginesDialectsBadRequest  %+v", 400, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/transcriptionengines/dialects][%d] getSpeechandtextanalyticsProgramsTranscriptionenginesDialectsBadRequest  %+v", 400, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsUnauthorized creates a GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsUnauthorized with default headers values
func NewGetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsUnauthorized() *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsUnauthorized {
	return &GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsUnauthorized{}
}

/*
GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics programs transcriptionengines dialects unauthorized response has a 2xx status code
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics programs transcriptionengines dialects unauthorized response has a 3xx status code
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics programs transcriptionengines dialects unauthorized response has a 4xx status code
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get speechandtextanalytics programs transcriptionengines dialects unauthorized response has a 5xx status code
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get speechandtextanalytics programs transcriptionengines dialects unauthorized response a status code equal to that given
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/transcriptionengines/dialects][%d] getSpeechandtextanalyticsProgramsTranscriptionenginesDialectsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/transcriptionengines/dialects][%d] getSpeechandtextanalyticsProgramsTranscriptionenginesDialectsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsForbidden creates a GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsForbidden with default headers values
func NewGetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsForbidden() *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsForbidden {
	return &GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsForbidden{}
}

/*
GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics programs transcriptionengines dialects forbidden response has a 2xx status code
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics programs transcriptionengines dialects forbidden response has a 3xx status code
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics programs transcriptionengines dialects forbidden response has a 4xx status code
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get speechandtextanalytics programs transcriptionengines dialects forbidden response has a 5xx status code
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get speechandtextanalytics programs transcriptionengines dialects forbidden response a status code equal to that given
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/transcriptionengines/dialects][%d] getSpeechandtextanalyticsProgramsTranscriptionenginesDialectsForbidden  %+v", 403, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/transcriptionengines/dialects][%d] getSpeechandtextanalyticsProgramsTranscriptionenginesDialectsForbidden  %+v", 403, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsNotFound creates a GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsNotFound with default headers values
func NewGetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsNotFound() *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsNotFound {
	return &GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsNotFound{}
}

/*
GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics programs transcriptionengines dialects not found response has a 2xx status code
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics programs transcriptionengines dialects not found response has a 3xx status code
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics programs transcriptionengines dialects not found response has a 4xx status code
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get speechandtextanalytics programs transcriptionengines dialects not found response has a 5xx status code
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get speechandtextanalytics programs transcriptionengines dialects not found response a status code equal to that given
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/transcriptionengines/dialects][%d] getSpeechandtextanalyticsProgramsTranscriptionenginesDialectsNotFound  %+v", 404, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/transcriptionengines/dialects][%d] getSpeechandtextanalyticsProgramsTranscriptionenginesDialectsNotFound  %+v", 404, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsRequestTimeout creates a GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsRequestTimeout with default headers values
func NewGetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsRequestTimeout() *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsRequestTimeout {
	return &GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsRequestTimeout{}
}

/*
GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics programs transcriptionengines dialects request timeout response has a 2xx status code
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics programs transcriptionengines dialects request timeout response has a 3xx status code
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics programs transcriptionengines dialects request timeout response has a 4xx status code
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get speechandtextanalytics programs transcriptionengines dialects request timeout response has a 5xx status code
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get speechandtextanalytics programs transcriptionengines dialects request timeout response a status code equal to that given
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/transcriptionengines/dialects][%d] getSpeechandtextanalyticsProgramsTranscriptionenginesDialectsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/transcriptionengines/dialects][%d] getSpeechandtextanalyticsProgramsTranscriptionenginesDialectsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsRequestEntityTooLarge creates a GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsRequestEntityTooLarge with default headers values
func NewGetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsRequestEntityTooLarge() *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsRequestEntityTooLarge {
	return &GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsRequestEntityTooLarge{}
}

/*
GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics programs transcriptionengines dialects request entity too large response has a 2xx status code
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics programs transcriptionengines dialects request entity too large response has a 3xx status code
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics programs transcriptionengines dialects request entity too large response has a 4xx status code
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get speechandtextanalytics programs transcriptionengines dialects request entity too large response has a 5xx status code
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get speechandtextanalytics programs transcriptionengines dialects request entity too large response a status code equal to that given
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/transcriptionengines/dialects][%d] getSpeechandtextanalyticsProgramsTranscriptionenginesDialectsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/transcriptionengines/dialects][%d] getSpeechandtextanalyticsProgramsTranscriptionenginesDialectsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsUnsupportedMediaType creates a GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsUnsupportedMediaType with default headers values
func NewGetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsUnsupportedMediaType() *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsUnsupportedMediaType {
	return &GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsUnsupportedMediaType{}
}

/*
GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics programs transcriptionengines dialects unsupported media type response has a 2xx status code
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics programs transcriptionengines dialects unsupported media type response has a 3xx status code
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics programs transcriptionengines dialects unsupported media type response has a 4xx status code
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get speechandtextanalytics programs transcriptionengines dialects unsupported media type response has a 5xx status code
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get speechandtextanalytics programs transcriptionengines dialects unsupported media type response a status code equal to that given
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/transcriptionengines/dialects][%d] getSpeechandtextanalyticsProgramsTranscriptionenginesDialectsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/transcriptionengines/dialects][%d] getSpeechandtextanalyticsProgramsTranscriptionenginesDialectsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsTooManyRequests creates a GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsTooManyRequests with default headers values
func NewGetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsTooManyRequests() *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsTooManyRequests {
	return &GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsTooManyRequests{}
}

/*
GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics programs transcriptionengines dialects too many requests response has a 2xx status code
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics programs transcriptionengines dialects too many requests response has a 3xx status code
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics programs transcriptionengines dialects too many requests response has a 4xx status code
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get speechandtextanalytics programs transcriptionengines dialects too many requests response has a 5xx status code
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get speechandtextanalytics programs transcriptionengines dialects too many requests response a status code equal to that given
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/transcriptionengines/dialects][%d] getSpeechandtextanalyticsProgramsTranscriptionenginesDialectsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/transcriptionengines/dialects][%d] getSpeechandtextanalyticsProgramsTranscriptionenginesDialectsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsInternalServerError creates a GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsInternalServerError with default headers values
func NewGetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsInternalServerError() *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsInternalServerError {
	return &GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsInternalServerError{}
}

/*
GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics programs transcriptionengines dialects internal server error response has a 2xx status code
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics programs transcriptionengines dialects internal server error response has a 3xx status code
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics programs transcriptionengines dialects internal server error response has a 4xx status code
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get speechandtextanalytics programs transcriptionengines dialects internal server error response has a 5xx status code
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get speechandtextanalytics programs transcriptionengines dialects internal server error response a status code equal to that given
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/transcriptionengines/dialects][%d] getSpeechandtextanalyticsProgramsTranscriptionenginesDialectsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/transcriptionengines/dialects][%d] getSpeechandtextanalyticsProgramsTranscriptionenginesDialectsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsServiceUnavailable creates a GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsServiceUnavailable with default headers values
func NewGetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsServiceUnavailable() *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsServiceUnavailable {
	return &GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsServiceUnavailable{}
}

/*
GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics programs transcriptionengines dialects service unavailable response has a 2xx status code
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics programs transcriptionengines dialects service unavailable response has a 3xx status code
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics programs transcriptionengines dialects service unavailable response has a 4xx status code
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get speechandtextanalytics programs transcriptionengines dialects service unavailable response has a 5xx status code
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get speechandtextanalytics programs transcriptionengines dialects service unavailable response a status code equal to that given
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/transcriptionengines/dialects][%d] getSpeechandtextanalyticsProgramsTranscriptionenginesDialectsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/transcriptionengines/dialects][%d] getSpeechandtextanalyticsProgramsTranscriptionenginesDialectsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsGatewayTimeout creates a GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsGatewayTimeout with default headers values
func NewGetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsGatewayTimeout() *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsGatewayTimeout {
	return &GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsGatewayTimeout{}
}

/*
GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics programs transcriptionengines dialects gateway timeout response has a 2xx status code
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics programs transcriptionengines dialects gateway timeout response has a 3xx status code
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics programs transcriptionengines dialects gateway timeout response has a 4xx status code
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get speechandtextanalytics programs transcriptionengines dialects gateway timeout response has a 5xx status code
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get speechandtextanalytics programs transcriptionengines dialects gateway timeout response a status code equal to that given
func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/transcriptionengines/dialects][%d] getSpeechandtextanalyticsProgramsTranscriptionenginesDialectsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/transcriptionengines/dialects][%d] getSpeechandtextanalyticsProgramsTranscriptionenginesDialectsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramsTranscriptionenginesDialectsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
