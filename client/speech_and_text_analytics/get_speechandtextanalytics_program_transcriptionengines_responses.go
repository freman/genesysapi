// Code generated by go-swagger; DO NOT EDIT.

package speech_and_text_analytics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetSpeechandtextanalyticsProgramTranscriptionenginesReader is a Reader for the GetSpeechandtextanalyticsProgramTranscriptionengines structure.
type GetSpeechandtextanalyticsProgramTranscriptionenginesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSpeechandtextanalyticsProgramTranscriptionenginesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetSpeechandtextanalyticsProgramTranscriptionenginesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetSpeechandtextanalyticsProgramTranscriptionenginesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetSpeechandtextanalyticsProgramTranscriptionenginesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSpeechandtextanalyticsProgramTranscriptionenginesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetSpeechandtextanalyticsProgramTranscriptionenginesRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetSpeechandtextanalyticsProgramTranscriptionenginesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetSpeechandtextanalyticsProgramTranscriptionenginesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetSpeechandtextanalyticsProgramTranscriptionenginesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSpeechandtextanalyticsProgramTranscriptionenginesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetSpeechandtextanalyticsProgramTranscriptionenginesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetSpeechandtextanalyticsProgramTranscriptionenginesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetSpeechandtextanalyticsProgramTranscriptionenginesOK creates a GetSpeechandtextanalyticsProgramTranscriptionenginesOK with default headers values
func NewGetSpeechandtextanalyticsProgramTranscriptionenginesOK() *GetSpeechandtextanalyticsProgramTranscriptionenginesOK {
	return &GetSpeechandtextanalyticsProgramTranscriptionenginesOK{}
}

/*
GetSpeechandtextanalyticsProgramTranscriptionenginesOK describes a response with status code 200, with default header values.

successful operation
*/
type GetSpeechandtextanalyticsProgramTranscriptionenginesOK struct {
	Payload *models.ProgramTranscriptionEngines
}

// IsSuccess returns true when this get speechandtextanalytics program transcriptionengines o k response has a 2xx status code
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get speechandtextanalytics program transcriptionengines o k response has a 3xx status code
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics program transcriptionengines o k response has a 4xx status code
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get speechandtextanalytics program transcriptionengines o k response has a 5xx status code
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get speechandtextanalytics program transcriptionengines o k response a status code equal to that given
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines][%d] getSpeechandtextanalyticsProgramTranscriptionenginesOK  %+v", 200, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesOK) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines][%d] getSpeechandtextanalyticsProgramTranscriptionenginesOK  %+v", 200, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesOK) GetPayload() *models.ProgramTranscriptionEngines {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProgramTranscriptionEngines)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramTranscriptionenginesBadRequest creates a GetSpeechandtextanalyticsProgramTranscriptionenginesBadRequest with default headers values
func NewGetSpeechandtextanalyticsProgramTranscriptionenginesBadRequest() *GetSpeechandtextanalyticsProgramTranscriptionenginesBadRequest {
	return &GetSpeechandtextanalyticsProgramTranscriptionenginesBadRequest{}
}

/*
GetSpeechandtextanalyticsProgramTranscriptionenginesBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetSpeechandtextanalyticsProgramTranscriptionenginesBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics program transcriptionengines bad request response has a 2xx status code
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics program transcriptionengines bad request response has a 3xx status code
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics program transcriptionengines bad request response has a 4xx status code
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get speechandtextanalytics program transcriptionengines bad request response has a 5xx status code
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get speechandtextanalytics program transcriptionengines bad request response a status code equal to that given
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines][%d] getSpeechandtextanalyticsProgramTranscriptionenginesBadRequest  %+v", 400, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines][%d] getSpeechandtextanalyticsProgramTranscriptionenginesBadRequest  %+v", 400, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramTranscriptionenginesUnauthorized creates a GetSpeechandtextanalyticsProgramTranscriptionenginesUnauthorized with default headers values
func NewGetSpeechandtextanalyticsProgramTranscriptionenginesUnauthorized() *GetSpeechandtextanalyticsProgramTranscriptionenginesUnauthorized {
	return &GetSpeechandtextanalyticsProgramTranscriptionenginesUnauthorized{}
}

/*
GetSpeechandtextanalyticsProgramTranscriptionenginesUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetSpeechandtextanalyticsProgramTranscriptionenginesUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics program transcriptionengines unauthorized response has a 2xx status code
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics program transcriptionengines unauthorized response has a 3xx status code
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics program transcriptionengines unauthorized response has a 4xx status code
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get speechandtextanalytics program transcriptionengines unauthorized response has a 5xx status code
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get speechandtextanalytics program transcriptionengines unauthorized response a status code equal to that given
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines][%d] getSpeechandtextanalyticsProgramTranscriptionenginesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines][%d] getSpeechandtextanalyticsProgramTranscriptionenginesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramTranscriptionenginesForbidden creates a GetSpeechandtextanalyticsProgramTranscriptionenginesForbidden with default headers values
func NewGetSpeechandtextanalyticsProgramTranscriptionenginesForbidden() *GetSpeechandtextanalyticsProgramTranscriptionenginesForbidden {
	return &GetSpeechandtextanalyticsProgramTranscriptionenginesForbidden{}
}

/*
GetSpeechandtextanalyticsProgramTranscriptionenginesForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetSpeechandtextanalyticsProgramTranscriptionenginesForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics program transcriptionengines forbidden response has a 2xx status code
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics program transcriptionengines forbidden response has a 3xx status code
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics program transcriptionengines forbidden response has a 4xx status code
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get speechandtextanalytics program transcriptionengines forbidden response has a 5xx status code
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get speechandtextanalytics program transcriptionengines forbidden response a status code equal to that given
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines][%d] getSpeechandtextanalyticsProgramTranscriptionenginesForbidden  %+v", 403, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines][%d] getSpeechandtextanalyticsProgramTranscriptionenginesForbidden  %+v", 403, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramTranscriptionenginesNotFound creates a GetSpeechandtextanalyticsProgramTranscriptionenginesNotFound with default headers values
func NewGetSpeechandtextanalyticsProgramTranscriptionenginesNotFound() *GetSpeechandtextanalyticsProgramTranscriptionenginesNotFound {
	return &GetSpeechandtextanalyticsProgramTranscriptionenginesNotFound{}
}

/*
GetSpeechandtextanalyticsProgramTranscriptionenginesNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetSpeechandtextanalyticsProgramTranscriptionenginesNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics program transcriptionengines not found response has a 2xx status code
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics program transcriptionengines not found response has a 3xx status code
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics program transcriptionengines not found response has a 4xx status code
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get speechandtextanalytics program transcriptionengines not found response has a 5xx status code
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get speechandtextanalytics program transcriptionengines not found response a status code equal to that given
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines][%d] getSpeechandtextanalyticsProgramTranscriptionenginesNotFound  %+v", 404, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines][%d] getSpeechandtextanalyticsProgramTranscriptionenginesNotFound  %+v", 404, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramTranscriptionenginesRequestTimeout creates a GetSpeechandtextanalyticsProgramTranscriptionenginesRequestTimeout with default headers values
func NewGetSpeechandtextanalyticsProgramTranscriptionenginesRequestTimeout() *GetSpeechandtextanalyticsProgramTranscriptionenginesRequestTimeout {
	return &GetSpeechandtextanalyticsProgramTranscriptionenginesRequestTimeout{}
}

/*
GetSpeechandtextanalyticsProgramTranscriptionenginesRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetSpeechandtextanalyticsProgramTranscriptionenginesRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics program transcriptionengines request timeout response has a 2xx status code
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics program transcriptionengines request timeout response has a 3xx status code
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics program transcriptionengines request timeout response has a 4xx status code
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get speechandtextanalytics program transcriptionengines request timeout response has a 5xx status code
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get speechandtextanalytics program transcriptionengines request timeout response a status code equal to that given
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines][%d] getSpeechandtextanalyticsProgramTranscriptionenginesRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines][%d] getSpeechandtextanalyticsProgramTranscriptionenginesRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramTranscriptionenginesRequestEntityTooLarge creates a GetSpeechandtextanalyticsProgramTranscriptionenginesRequestEntityTooLarge with default headers values
func NewGetSpeechandtextanalyticsProgramTranscriptionenginesRequestEntityTooLarge() *GetSpeechandtextanalyticsProgramTranscriptionenginesRequestEntityTooLarge {
	return &GetSpeechandtextanalyticsProgramTranscriptionenginesRequestEntityTooLarge{}
}

/*
GetSpeechandtextanalyticsProgramTranscriptionenginesRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetSpeechandtextanalyticsProgramTranscriptionenginesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics program transcriptionengines request entity too large response has a 2xx status code
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics program transcriptionengines request entity too large response has a 3xx status code
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics program transcriptionengines request entity too large response has a 4xx status code
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get speechandtextanalytics program transcriptionengines request entity too large response has a 5xx status code
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get speechandtextanalytics program transcriptionengines request entity too large response a status code equal to that given
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines][%d] getSpeechandtextanalyticsProgramTranscriptionenginesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines][%d] getSpeechandtextanalyticsProgramTranscriptionenginesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramTranscriptionenginesUnsupportedMediaType creates a GetSpeechandtextanalyticsProgramTranscriptionenginesUnsupportedMediaType with default headers values
func NewGetSpeechandtextanalyticsProgramTranscriptionenginesUnsupportedMediaType() *GetSpeechandtextanalyticsProgramTranscriptionenginesUnsupportedMediaType {
	return &GetSpeechandtextanalyticsProgramTranscriptionenginesUnsupportedMediaType{}
}

/*
GetSpeechandtextanalyticsProgramTranscriptionenginesUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetSpeechandtextanalyticsProgramTranscriptionenginesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics program transcriptionengines unsupported media type response has a 2xx status code
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics program transcriptionengines unsupported media type response has a 3xx status code
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics program transcriptionengines unsupported media type response has a 4xx status code
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get speechandtextanalytics program transcriptionengines unsupported media type response has a 5xx status code
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get speechandtextanalytics program transcriptionengines unsupported media type response a status code equal to that given
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines][%d] getSpeechandtextanalyticsProgramTranscriptionenginesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines][%d] getSpeechandtextanalyticsProgramTranscriptionenginesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramTranscriptionenginesTooManyRequests creates a GetSpeechandtextanalyticsProgramTranscriptionenginesTooManyRequests with default headers values
func NewGetSpeechandtextanalyticsProgramTranscriptionenginesTooManyRequests() *GetSpeechandtextanalyticsProgramTranscriptionenginesTooManyRequests {
	return &GetSpeechandtextanalyticsProgramTranscriptionenginesTooManyRequests{}
}

/*
GetSpeechandtextanalyticsProgramTranscriptionenginesTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetSpeechandtextanalyticsProgramTranscriptionenginesTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics program transcriptionengines too many requests response has a 2xx status code
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics program transcriptionengines too many requests response has a 3xx status code
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics program transcriptionengines too many requests response has a 4xx status code
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get speechandtextanalytics program transcriptionengines too many requests response has a 5xx status code
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get speechandtextanalytics program transcriptionengines too many requests response a status code equal to that given
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines][%d] getSpeechandtextanalyticsProgramTranscriptionenginesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines][%d] getSpeechandtextanalyticsProgramTranscriptionenginesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramTranscriptionenginesInternalServerError creates a GetSpeechandtextanalyticsProgramTranscriptionenginesInternalServerError with default headers values
func NewGetSpeechandtextanalyticsProgramTranscriptionenginesInternalServerError() *GetSpeechandtextanalyticsProgramTranscriptionenginesInternalServerError {
	return &GetSpeechandtextanalyticsProgramTranscriptionenginesInternalServerError{}
}

/*
GetSpeechandtextanalyticsProgramTranscriptionenginesInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetSpeechandtextanalyticsProgramTranscriptionenginesInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics program transcriptionengines internal server error response has a 2xx status code
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics program transcriptionengines internal server error response has a 3xx status code
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics program transcriptionengines internal server error response has a 4xx status code
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get speechandtextanalytics program transcriptionengines internal server error response has a 5xx status code
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get speechandtextanalytics program transcriptionengines internal server error response a status code equal to that given
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines][%d] getSpeechandtextanalyticsProgramTranscriptionenginesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines][%d] getSpeechandtextanalyticsProgramTranscriptionenginesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramTranscriptionenginesServiceUnavailable creates a GetSpeechandtextanalyticsProgramTranscriptionenginesServiceUnavailable with default headers values
func NewGetSpeechandtextanalyticsProgramTranscriptionenginesServiceUnavailable() *GetSpeechandtextanalyticsProgramTranscriptionenginesServiceUnavailable {
	return &GetSpeechandtextanalyticsProgramTranscriptionenginesServiceUnavailable{}
}

/*
GetSpeechandtextanalyticsProgramTranscriptionenginesServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetSpeechandtextanalyticsProgramTranscriptionenginesServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics program transcriptionengines service unavailable response has a 2xx status code
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics program transcriptionengines service unavailable response has a 3xx status code
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics program transcriptionengines service unavailable response has a 4xx status code
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get speechandtextanalytics program transcriptionengines service unavailable response has a 5xx status code
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get speechandtextanalytics program transcriptionengines service unavailable response a status code equal to that given
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines][%d] getSpeechandtextanalyticsProgramTranscriptionenginesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines][%d] getSpeechandtextanalyticsProgramTranscriptionenginesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramTranscriptionenginesGatewayTimeout creates a GetSpeechandtextanalyticsProgramTranscriptionenginesGatewayTimeout with default headers values
func NewGetSpeechandtextanalyticsProgramTranscriptionenginesGatewayTimeout() *GetSpeechandtextanalyticsProgramTranscriptionenginesGatewayTimeout {
	return &GetSpeechandtextanalyticsProgramTranscriptionenginesGatewayTimeout{}
}

/*
GetSpeechandtextanalyticsProgramTranscriptionenginesGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetSpeechandtextanalyticsProgramTranscriptionenginesGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics program transcriptionengines gateway timeout response has a 2xx status code
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics program transcriptionengines gateway timeout response has a 3xx status code
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics program transcriptionengines gateway timeout response has a 4xx status code
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get speechandtextanalytics program transcriptionengines gateway timeout response has a 5xx status code
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get speechandtextanalytics program transcriptionengines gateway timeout response a status code equal to that given
func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines][%d] getSpeechandtextanalyticsProgramTranscriptionenginesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines][%d] getSpeechandtextanalyticsProgramTranscriptionenginesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramTranscriptionenginesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
