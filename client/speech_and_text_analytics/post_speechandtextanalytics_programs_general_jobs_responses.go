// Code generated by go-swagger; DO NOT EDIT.

package speech_and_text_analytics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostSpeechandtextanalyticsProgramsGeneralJobsReader is a Reader for the PostSpeechandtextanalyticsProgramsGeneralJobs structure.
type PostSpeechandtextanalyticsProgramsGeneralJobsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostSpeechandtextanalyticsProgramsGeneralJobsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostSpeechandtextanalyticsProgramsGeneralJobsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostSpeechandtextanalyticsProgramsGeneralJobsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostSpeechandtextanalyticsProgramsGeneralJobsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostSpeechandtextanalyticsProgramsGeneralJobsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostSpeechandtextanalyticsProgramsGeneralJobsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostSpeechandtextanalyticsProgramsGeneralJobsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostSpeechandtextanalyticsProgramsGeneralJobsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostSpeechandtextanalyticsProgramsGeneralJobsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostSpeechandtextanalyticsProgramsGeneralJobsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostSpeechandtextanalyticsProgramsGeneralJobsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostSpeechandtextanalyticsProgramsGeneralJobsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostSpeechandtextanalyticsProgramsGeneralJobsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostSpeechandtextanalyticsProgramsGeneralJobsOK creates a PostSpeechandtextanalyticsProgramsGeneralJobsOK with default headers values
func NewPostSpeechandtextanalyticsProgramsGeneralJobsOK() *PostSpeechandtextanalyticsProgramsGeneralJobsOK {
	return &PostSpeechandtextanalyticsProgramsGeneralJobsOK{}
}

/*PostSpeechandtextanalyticsProgramsGeneralJobsOK handles this case with default header values.

successful operation
*/
type PostSpeechandtextanalyticsProgramsGeneralJobsOK struct {
	Payload *models.GeneralProgramJob
}

func (o *PostSpeechandtextanalyticsProgramsGeneralJobsOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/speechandtextanalytics/programs/general/jobs][%d] postSpeechandtextanalyticsProgramsGeneralJobsOK  %+v", 200, o.Payload)
}

func (o *PostSpeechandtextanalyticsProgramsGeneralJobsOK) GetPayload() *models.GeneralProgramJob {
	return o.Payload
}

func (o *PostSpeechandtextanalyticsProgramsGeneralJobsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralProgramJob)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSpeechandtextanalyticsProgramsGeneralJobsBadRequest creates a PostSpeechandtextanalyticsProgramsGeneralJobsBadRequest with default headers values
func NewPostSpeechandtextanalyticsProgramsGeneralJobsBadRequest() *PostSpeechandtextanalyticsProgramsGeneralJobsBadRequest {
	return &PostSpeechandtextanalyticsProgramsGeneralJobsBadRequest{}
}

/*PostSpeechandtextanalyticsProgramsGeneralJobsBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostSpeechandtextanalyticsProgramsGeneralJobsBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PostSpeechandtextanalyticsProgramsGeneralJobsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/speechandtextanalytics/programs/general/jobs][%d] postSpeechandtextanalyticsProgramsGeneralJobsBadRequest  %+v", 400, o.Payload)
}

func (o *PostSpeechandtextanalyticsProgramsGeneralJobsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostSpeechandtextanalyticsProgramsGeneralJobsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSpeechandtextanalyticsProgramsGeneralJobsUnauthorized creates a PostSpeechandtextanalyticsProgramsGeneralJobsUnauthorized with default headers values
func NewPostSpeechandtextanalyticsProgramsGeneralJobsUnauthorized() *PostSpeechandtextanalyticsProgramsGeneralJobsUnauthorized {
	return &PostSpeechandtextanalyticsProgramsGeneralJobsUnauthorized{}
}

/*PostSpeechandtextanalyticsProgramsGeneralJobsUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PostSpeechandtextanalyticsProgramsGeneralJobsUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PostSpeechandtextanalyticsProgramsGeneralJobsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/speechandtextanalytics/programs/general/jobs][%d] postSpeechandtextanalyticsProgramsGeneralJobsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostSpeechandtextanalyticsProgramsGeneralJobsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostSpeechandtextanalyticsProgramsGeneralJobsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSpeechandtextanalyticsProgramsGeneralJobsForbidden creates a PostSpeechandtextanalyticsProgramsGeneralJobsForbidden with default headers values
func NewPostSpeechandtextanalyticsProgramsGeneralJobsForbidden() *PostSpeechandtextanalyticsProgramsGeneralJobsForbidden {
	return &PostSpeechandtextanalyticsProgramsGeneralJobsForbidden{}
}

/*PostSpeechandtextanalyticsProgramsGeneralJobsForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PostSpeechandtextanalyticsProgramsGeneralJobsForbidden struct {
	Payload *models.ErrorBody
}

func (o *PostSpeechandtextanalyticsProgramsGeneralJobsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/speechandtextanalytics/programs/general/jobs][%d] postSpeechandtextanalyticsProgramsGeneralJobsForbidden  %+v", 403, o.Payload)
}

func (o *PostSpeechandtextanalyticsProgramsGeneralJobsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostSpeechandtextanalyticsProgramsGeneralJobsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSpeechandtextanalyticsProgramsGeneralJobsNotFound creates a PostSpeechandtextanalyticsProgramsGeneralJobsNotFound with default headers values
func NewPostSpeechandtextanalyticsProgramsGeneralJobsNotFound() *PostSpeechandtextanalyticsProgramsGeneralJobsNotFound {
	return &PostSpeechandtextanalyticsProgramsGeneralJobsNotFound{}
}

/*PostSpeechandtextanalyticsProgramsGeneralJobsNotFound handles this case with default header values.

The requested resource was not found.
*/
type PostSpeechandtextanalyticsProgramsGeneralJobsNotFound struct {
	Payload *models.ErrorBody
}

func (o *PostSpeechandtextanalyticsProgramsGeneralJobsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/speechandtextanalytics/programs/general/jobs][%d] postSpeechandtextanalyticsProgramsGeneralJobsNotFound  %+v", 404, o.Payload)
}

func (o *PostSpeechandtextanalyticsProgramsGeneralJobsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostSpeechandtextanalyticsProgramsGeneralJobsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSpeechandtextanalyticsProgramsGeneralJobsRequestTimeout creates a PostSpeechandtextanalyticsProgramsGeneralJobsRequestTimeout with default headers values
func NewPostSpeechandtextanalyticsProgramsGeneralJobsRequestTimeout() *PostSpeechandtextanalyticsProgramsGeneralJobsRequestTimeout {
	return &PostSpeechandtextanalyticsProgramsGeneralJobsRequestTimeout{}
}

/*PostSpeechandtextanalyticsProgramsGeneralJobsRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostSpeechandtextanalyticsProgramsGeneralJobsRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostSpeechandtextanalyticsProgramsGeneralJobsRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/speechandtextanalytics/programs/general/jobs][%d] postSpeechandtextanalyticsProgramsGeneralJobsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostSpeechandtextanalyticsProgramsGeneralJobsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostSpeechandtextanalyticsProgramsGeneralJobsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSpeechandtextanalyticsProgramsGeneralJobsRequestEntityTooLarge creates a PostSpeechandtextanalyticsProgramsGeneralJobsRequestEntityTooLarge with default headers values
func NewPostSpeechandtextanalyticsProgramsGeneralJobsRequestEntityTooLarge() *PostSpeechandtextanalyticsProgramsGeneralJobsRequestEntityTooLarge {
	return &PostSpeechandtextanalyticsProgramsGeneralJobsRequestEntityTooLarge{}
}

/*PostSpeechandtextanalyticsProgramsGeneralJobsRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type PostSpeechandtextanalyticsProgramsGeneralJobsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PostSpeechandtextanalyticsProgramsGeneralJobsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/speechandtextanalytics/programs/general/jobs][%d] postSpeechandtextanalyticsProgramsGeneralJobsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostSpeechandtextanalyticsProgramsGeneralJobsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostSpeechandtextanalyticsProgramsGeneralJobsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSpeechandtextanalyticsProgramsGeneralJobsUnsupportedMediaType creates a PostSpeechandtextanalyticsProgramsGeneralJobsUnsupportedMediaType with default headers values
func NewPostSpeechandtextanalyticsProgramsGeneralJobsUnsupportedMediaType() *PostSpeechandtextanalyticsProgramsGeneralJobsUnsupportedMediaType {
	return &PostSpeechandtextanalyticsProgramsGeneralJobsUnsupportedMediaType{}
}

/*PostSpeechandtextanalyticsProgramsGeneralJobsUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostSpeechandtextanalyticsProgramsGeneralJobsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PostSpeechandtextanalyticsProgramsGeneralJobsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/speechandtextanalytics/programs/general/jobs][%d] postSpeechandtextanalyticsProgramsGeneralJobsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostSpeechandtextanalyticsProgramsGeneralJobsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostSpeechandtextanalyticsProgramsGeneralJobsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSpeechandtextanalyticsProgramsGeneralJobsTooManyRequests creates a PostSpeechandtextanalyticsProgramsGeneralJobsTooManyRequests with default headers values
func NewPostSpeechandtextanalyticsProgramsGeneralJobsTooManyRequests() *PostSpeechandtextanalyticsProgramsGeneralJobsTooManyRequests {
	return &PostSpeechandtextanalyticsProgramsGeneralJobsTooManyRequests{}
}

/*PostSpeechandtextanalyticsProgramsGeneralJobsTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostSpeechandtextanalyticsProgramsGeneralJobsTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PostSpeechandtextanalyticsProgramsGeneralJobsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/speechandtextanalytics/programs/general/jobs][%d] postSpeechandtextanalyticsProgramsGeneralJobsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostSpeechandtextanalyticsProgramsGeneralJobsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostSpeechandtextanalyticsProgramsGeneralJobsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSpeechandtextanalyticsProgramsGeneralJobsInternalServerError creates a PostSpeechandtextanalyticsProgramsGeneralJobsInternalServerError with default headers values
func NewPostSpeechandtextanalyticsProgramsGeneralJobsInternalServerError() *PostSpeechandtextanalyticsProgramsGeneralJobsInternalServerError {
	return &PostSpeechandtextanalyticsProgramsGeneralJobsInternalServerError{}
}

/*PostSpeechandtextanalyticsProgramsGeneralJobsInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostSpeechandtextanalyticsProgramsGeneralJobsInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PostSpeechandtextanalyticsProgramsGeneralJobsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/speechandtextanalytics/programs/general/jobs][%d] postSpeechandtextanalyticsProgramsGeneralJobsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostSpeechandtextanalyticsProgramsGeneralJobsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostSpeechandtextanalyticsProgramsGeneralJobsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSpeechandtextanalyticsProgramsGeneralJobsServiceUnavailable creates a PostSpeechandtextanalyticsProgramsGeneralJobsServiceUnavailable with default headers values
func NewPostSpeechandtextanalyticsProgramsGeneralJobsServiceUnavailable() *PostSpeechandtextanalyticsProgramsGeneralJobsServiceUnavailable {
	return &PostSpeechandtextanalyticsProgramsGeneralJobsServiceUnavailable{}
}

/*PostSpeechandtextanalyticsProgramsGeneralJobsServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostSpeechandtextanalyticsProgramsGeneralJobsServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PostSpeechandtextanalyticsProgramsGeneralJobsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/speechandtextanalytics/programs/general/jobs][%d] postSpeechandtextanalyticsProgramsGeneralJobsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostSpeechandtextanalyticsProgramsGeneralJobsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostSpeechandtextanalyticsProgramsGeneralJobsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSpeechandtextanalyticsProgramsGeneralJobsGatewayTimeout creates a PostSpeechandtextanalyticsProgramsGeneralJobsGatewayTimeout with default headers values
func NewPostSpeechandtextanalyticsProgramsGeneralJobsGatewayTimeout() *PostSpeechandtextanalyticsProgramsGeneralJobsGatewayTimeout {
	return &PostSpeechandtextanalyticsProgramsGeneralJobsGatewayTimeout{}
}

/*PostSpeechandtextanalyticsProgramsGeneralJobsGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PostSpeechandtextanalyticsProgramsGeneralJobsGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostSpeechandtextanalyticsProgramsGeneralJobsGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/speechandtextanalytics/programs/general/jobs][%d] postSpeechandtextanalyticsProgramsGeneralJobsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostSpeechandtextanalyticsProgramsGeneralJobsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostSpeechandtextanalyticsProgramsGeneralJobsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
