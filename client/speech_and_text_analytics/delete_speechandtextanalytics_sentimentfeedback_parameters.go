// Code generated by go-swagger; DO NOT EDIT.

package speech_and_text_analytics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewDeleteSpeechandtextanalyticsSentimentfeedbackParams creates a new DeleteSpeechandtextanalyticsSentimentfeedbackParams object
// with the default values initialized.
func NewDeleteSpeechandtextanalyticsSentimentfeedbackParams() *DeleteSpeechandtextanalyticsSentimentfeedbackParams {

	return &DeleteSpeechandtextanalyticsSentimentfeedbackParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteSpeechandtextanalyticsSentimentfeedbackParamsWithTimeout creates a new DeleteSpeechandtextanalyticsSentimentfeedbackParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteSpeechandtextanalyticsSentimentfeedbackParamsWithTimeout(timeout time.Duration) *DeleteSpeechandtextanalyticsSentimentfeedbackParams {

	return &DeleteSpeechandtextanalyticsSentimentfeedbackParams{

		timeout: timeout,
	}
}

// NewDeleteSpeechandtextanalyticsSentimentfeedbackParamsWithContext creates a new DeleteSpeechandtextanalyticsSentimentfeedbackParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteSpeechandtextanalyticsSentimentfeedbackParamsWithContext(ctx context.Context) *DeleteSpeechandtextanalyticsSentimentfeedbackParams {

	return &DeleteSpeechandtextanalyticsSentimentfeedbackParams{

		Context: ctx,
	}
}

// NewDeleteSpeechandtextanalyticsSentimentfeedbackParamsWithHTTPClient creates a new DeleteSpeechandtextanalyticsSentimentfeedbackParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteSpeechandtextanalyticsSentimentfeedbackParamsWithHTTPClient(client *http.Client) *DeleteSpeechandtextanalyticsSentimentfeedbackParams {

	return &DeleteSpeechandtextanalyticsSentimentfeedbackParams{
		HTTPClient: client,
	}
}

/*DeleteSpeechandtextanalyticsSentimentfeedbackParams contains all the parameters to send to the API endpoint
for the delete speechandtextanalytics sentimentfeedback operation typically these are written to a http.Request
*/
type DeleteSpeechandtextanalyticsSentimentfeedbackParams struct {
	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete speechandtextanalytics sentimentfeedback params
func (o *DeleteSpeechandtextanalyticsSentimentfeedbackParams) WithTimeout(timeout time.Duration) *DeleteSpeechandtextanalyticsSentimentfeedbackParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete speechandtextanalytics sentimentfeedback params
func (o *DeleteSpeechandtextanalyticsSentimentfeedbackParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete speechandtextanalytics sentimentfeedback params
func (o *DeleteSpeechandtextanalyticsSentimentfeedbackParams) WithContext(ctx context.Context) *DeleteSpeechandtextanalyticsSentimentfeedbackParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete speechandtextanalytics sentimentfeedback params
func (o *DeleteSpeechandtextanalyticsSentimentfeedbackParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete speechandtextanalytics sentimentfeedback params
func (o *DeleteSpeechandtextanalyticsSentimentfeedbackParams) WithHTTPClient(client *http.Client) *DeleteSpeechandtextanalyticsSentimentfeedbackParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete speechandtextanalytics sentimentfeedback params
func (o *DeleteSpeechandtextanalyticsSentimentfeedbackParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteSpeechandtextanalyticsSentimentfeedbackParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
