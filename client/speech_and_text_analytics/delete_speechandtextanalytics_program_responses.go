// Code generated by go-swagger; DO NOT EDIT.

package speech_and_text_analytics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// DeleteSpeechandtextanalyticsProgramReader is a Reader for the DeleteSpeechandtextanalyticsProgram structure.
type DeleteSpeechandtextanalyticsProgramReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteSpeechandtextanalyticsProgramReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteSpeechandtextanalyticsProgramNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteSpeechandtextanalyticsProgramBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteSpeechandtextanalyticsProgramUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteSpeechandtextanalyticsProgramForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteSpeechandtextanalyticsProgramNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewDeleteSpeechandtextanalyticsProgramRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewDeleteSpeechandtextanalyticsProgramRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDeleteSpeechandtextanalyticsProgramUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteSpeechandtextanalyticsProgramTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteSpeechandtextanalyticsProgramInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteSpeechandtextanalyticsProgramServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteSpeechandtextanalyticsProgramGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteSpeechandtextanalyticsProgramNoContent creates a DeleteSpeechandtextanalyticsProgramNoContent with default headers values
func NewDeleteSpeechandtextanalyticsProgramNoContent() *DeleteSpeechandtextanalyticsProgramNoContent {
	return &DeleteSpeechandtextanalyticsProgramNoContent{}
}

/*
DeleteSpeechandtextanalyticsProgramNoContent describes a response with status code 204, with default header values.

The program was deleted successfully
*/
type DeleteSpeechandtextanalyticsProgramNoContent struct {
}

// IsSuccess returns true when this delete speechandtextanalytics program no content response has a 2xx status code
func (o *DeleteSpeechandtextanalyticsProgramNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete speechandtextanalytics program no content response has a 3xx status code
func (o *DeleteSpeechandtextanalyticsProgramNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete speechandtextanalytics program no content response has a 4xx status code
func (o *DeleteSpeechandtextanalyticsProgramNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete speechandtextanalytics program no content response has a 5xx status code
func (o *DeleteSpeechandtextanalyticsProgramNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete speechandtextanalytics program no content response a status code equal to that given
func (o *DeleteSpeechandtextanalyticsProgramNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *DeleteSpeechandtextanalyticsProgramNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/speechandtextanalytics/programs/{programId}][%d] deleteSpeechandtextanalyticsProgramNoContent ", 204)
}

func (o *DeleteSpeechandtextanalyticsProgramNoContent) String() string {
	return fmt.Sprintf("[DELETE /api/v2/speechandtextanalytics/programs/{programId}][%d] deleteSpeechandtextanalyticsProgramNoContent ", 204)
}

func (o *DeleteSpeechandtextanalyticsProgramNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSpeechandtextanalyticsProgramBadRequest creates a DeleteSpeechandtextanalyticsProgramBadRequest with default headers values
func NewDeleteSpeechandtextanalyticsProgramBadRequest() *DeleteSpeechandtextanalyticsProgramBadRequest {
	return &DeleteSpeechandtextanalyticsProgramBadRequest{}
}

/*
DeleteSpeechandtextanalyticsProgramBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type DeleteSpeechandtextanalyticsProgramBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete speechandtextanalytics program bad request response has a 2xx status code
func (o *DeleteSpeechandtextanalyticsProgramBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete speechandtextanalytics program bad request response has a 3xx status code
func (o *DeleteSpeechandtextanalyticsProgramBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete speechandtextanalytics program bad request response has a 4xx status code
func (o *DeleteSpeechandtextanalyticsProgramBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete speechandtextanalytics program bad request response has a 5xx status code
func (o *DeleteSpeechandtextanalyticsProgramBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete speechandtextanalytics program bad request response a status code equal to that given
func (o *DeleteSpeechandtextanalyticsProgramBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteSpeechandtextanalyticsProgramBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/speechandtextanalytics/programs/{programId}][%d] deleteSpeechandtextanalyticsProgramBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteSpeechandtextanalyticsProgramBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v2/speechandtextanalytics/programs/{programId}][%d] deleteSpeechandtextanalyticsProgramBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteSpeechandtextanalyticsProgramBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteSpeechandtextanalyticsProgramBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSpeechandtextanalyticsProgramUnauthorized creates a DeleteSpeechandtextanalyticsProgramUnauthorized with default headers values
func NewDeleteSpeechandtextanalyticsProgramUnauthorized() *DeleteSpeechandtextanalyticsProgramUnauthorized {
	return &DeleteSpeechandtextanalyticsProgramUnauthorized{}
}

/*
DeleteSpeechandtextanalyticsProgramUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type DeleteSpeechandtextanalyticsProgramUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete speechandtextanalytics program unauthorized response has a 2xx status code
func (o *DeleteSpeechandtextanalyticsProgramUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete speechandtextanalytics program unauthorized response has a 3xx status code
func (o *DeleteSpeechandtextanalyticsProgramUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete speechandtextanalytics program unauthorized response has a 4xx status code
func (o *DeleteSpeechandtextanalyticsProgramUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete speechandtextanalytics program unauthorized response has a 5xx status code
func (o *DeleteSpeechandtextanalyticsProgramUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete speechandtextanalytics program unauthorized response a status code equal to that given
func (o *DeleteSpeechandtextanalyticsProgramUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteSpeechandtextanalyticsProgramUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/speechandtextanalytics/programs/{programId}][%d] deleteSpeechandtextanalyticsProgramUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteSpeechandtextanalyticsProgramUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/v2/speechandtextanalytics/programs/{programId}][%d] deleteSpeechandtextanalyticsProgramUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteSpeechandtextanalyticsProgramUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteSpeechandtextanalyticsProgramUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSpeechandtextanalyticsProgramForbidden creates a DeleteSpeechandtextanalyticsProgramForbidden with default headers values
func NewDeleteSpeechandtextanalyticsProgramForbidden() *DeleteSpeechandtextanalyticsProgramForbidden {
	return &DeleteSpeechandtextanalyticsProgramForbidden{}
}

/*
DeleteSpeechandtextanalyticsProgramForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type DeleteSpeechandtextanalyticsProgramForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete speechandtextanalytics program forbidden response has a 2xx status code
func (o *DeleteSpeechandtextanalyticsProgramForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete speechandtextanalytics program forbidden response has a 3xx status code
func (o *DeleteSpeechandtextanalyticsProgramForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete speechandtextanalytics program forbidden response has a 4xx status code
func (o *DeleteSpeechandtextanalyticsProgramForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete speechandtextanalytics program forbidden response has a 5xx status code
func (o *DeleteSpeechandtextanalyticsProgramForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete speechandtextanalytics program forbidden response a status code equal to that given
func (o *DeleteSpeechandtextanalyticsProgramForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteSpeechandtextanalyticsProgramForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/speechandtextanalytics/programs/{programId}][%d] deleteSpeechandtextanalyticsProgramForbidden  %+v", 403, o.Payload)
}

func (o *DeleteSpeechandtextanalyticsProgramForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/v2/speechandtextanalytics/programs/{programId}][%d] deleteSpeechandtextanalyticsProgramForbidden  %+v", 403, o.Payload)
}

func (o *DeleteSpeechandtextanalyticsProgramForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteSpeechandtextanalyticsProgramForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSpeechandtextanalyticsProgramNotFound creates a DeleteSpeechandtextanalyticsProgramNotFound with default headers values
func NewDeleteSpeechandtextanalyticsProgramNotFound() *DeleteSpeechandtextanalyticsProgramNotFound {
	return &DeleteSpeechandtextanalyticsProgramNotFound{}
}

/*
DeleteSpeechandtextanalyticsProgramNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type DeleteSpeechandtextanalyticsProgramNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete speechandtextanalytics program not found response has a 2xx status code
func (o *DeleteSpeechandtextanalyticsProgramNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete speechandtextanalytics program not found response has a 3xx status code
func (o *DeleteSpeechandtextanalyticsProgramNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete speechandtextanalytics program not found response has a 4xx status code
func (o *DeleteSpeechandtextanalyticsProgramNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete speechandtextanalytics program not found response has a 5xx status code
func (o *DeleteSpeechandtextanalyticsProgramNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete speechandtextanalytics program not found response a status code equal to that given
func (o *DeleteSpeechandtextanalyticsProgramNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteSpeechandtextanalyticsProgramNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/speechandtextanalytics/programs/{programId}][%d] deleteSpeechandtextanalyticsProgramNotFound  %+v", 404, o.Payload)
}

func (o *DeleteSpeechandtextanalyticsProgramNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v2/speechandtextanalytics/programs/{programId}][%d] deleteSpeechandtextanalyticsProgramNotFound  %+v", 404, o.Payload)
}

func (o *DeleteSpeechandtextanalyticsProgramNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteSpeechandtextanalyticsProgramNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSpeechandtextanalyticsProgramRequestTimeout creates a DeleteSpeechandtextanalyticsProgramRequestTimeout with default headers values
func NewDeleteSpeechandtextanalyticsProgramRequestTimeout() *DeleteSpeechandtextanalyticsProgramRequestTimeout {
	return &DeleteSpeechandtextanalyticsProgramRequestTimeout{}
}

/*
DeleteSpeechandtextanalyticsProgramRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type DeleteSpeechandtextanalyticsProgramRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete speechandtextanalytics program request timeout response has a 2xx status code
func (o *DeleteSpeechandtextanalyticsProgramRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete speechandtextanalytics program request timeout response has a 3xx status code
func (o *DeleteSpeechandtextanalyticsProgramRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete speechandtextanalytics program request timeout response has a 4xx status code
func (o *DeleteSpeechandtextanalyticsProgramRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete speechandtextanalytics program request timeout response has a 5xx status code
func (o *DeleteSpeechandtextanalyticsProgramRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this delete speechandtextanalytics program request timeout response a status code equal to that given
func (o *DeleteSpeechandtextanalyticsProgramRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *DeleteSpeechandtextanalyticsProgramRequestTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/speechandtextanalytics/programs/{programId}][%d] deleteSpeechandtextanalyticsProgramRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteSpeechandtextanalyticsProgramRequestTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/speechandtextanalytics/programs/{programId}][%d] deleteSpeechandtextanalyticsProgramRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteSpeechandtextanalyticsProgramRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteSpeechandtextanalyticsProgramRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSpeechandtextanalyticsProgramRequestEntityTooLarge creates a DeleteSpeechandtextanalyticsProgramRequestEntityTooLarge with default headers values
func NewDeleteSpeechandtextanalyticsProgramRequestEntityTooLarge() *DeleteSpeechandtextanalyticsProgramRequestEntityTooLarge {
	return &DeleteSpeechandtextanalyticsProgramRequestEntityTooLarge{}
}

/*
DeleteSpeechandtextanalyticsProgramRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type DeleteSpeechandtextanalyticsProgramRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete speechandtextanalytics program request entity too large response has a 2xx status code
func (o *DeleteSpeechandtextanalyticsProgramRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete speechandtextanalytics program request entity too large response has a 3xx status code
func (o *DeleteSpeechandtextanalyticsProgramRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete speechandtextanalytics program request entity too large response has a 4xx status code
func (o *DeleteSpeechandtextanalyticsProgramRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete speechandtextanalytics program request entity too large response has a 5xx status code
func (o *DeleteSpeechandtextanalyticsProgramRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this delete speechandtextanalytics program request entity too large response a status code equal to that given
func (o *DeleteSpeechandtextanalyticsProgramRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *DeleteSpeechandtextanalyticsProgramRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/speechandtextanalytics/programs/{programId}][%d] deleteSpeechandtextanalyticsProgramRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteSpeechandtextanalyticsProgramRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[DELETE /api/v2/speechandtextanalytics/programs/{programId}][%d] deleteSpeechandtextanalyticsProgramRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteSpeechandtextanalyticsProgramRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteSpeechandtextanalyticsProgramRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSpeechandtextanalyticsProgramUnsupportedMediaType creates a DeleteSpeechandtextanalyticsProgramUnsupportedMediaType with default headers values
func NewDeleteSpeechandtextanalyticsProgramUnsupportedMediaType() *DeleteSpeechandtextanalyticsProgramUnsupportedMediaType {
	return &DeleteSpeechandtextanalyticsProgramUnsupportedMediaType{}
}

/*
DeleteSpeechandtextanalyticsProgramUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type DeleteSpeechandtextanalyticsProgramUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete speechandtextanalytics program unsupported media type response has a 2xx status code
func (o *DeleteSpeechandtextanalyticsProgramUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete speechandtextanalytics program unsupported media type response has a 3xx status code
func (o *DeleteSpeechandtextanalyticsProgramUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete speechandtextanalytics program unsupported media type response has a 4xx status code
func (o *DeleteSpeechandtextanalyticsProgramUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete speechandtextanalytics program unsupported media type response has a 5xx status code
func (o *DeleteSpeechandtextanalyticsProgramUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this delete speechandtextanalytics program unsupported media type response a status code equal to that given
func (o *DeleteSpeechandtextanalyticsProgramUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *DeleteSpeechandtextanalyticsProgramUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/speechandtextanalytics/programs/{programId}][%d] deleteSpeechandtextanalyticsProgramUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteSpeechandtextanalyticsProgramUnsupportedMediaType) String() string {
	return fmt.Sprintf("[DELETE /api/v2/speechandtextanalytics/programs/{programId}][%d] deleteSpeechandtextanalyticsProgramUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteSpeechandtextanalyticsProgramUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteSpeechandtextanalyticsProgramUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSpeechandtextanalyticsProgramTooManyRequests creates a DeleteSpeechandtextanalyticsProgramTooManyRequests with default headers values
func NewDeleteSpeechandtextanalyticsProgramTooManyRequests() *DeleteSpeechandtextanalyticsProgramTooManyRequests {
	return &DeleteSpeechandtextanalyticsProgramTooManyRequests{}
}

/*
DeleteSpeechandtextanalyticsProgramTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type DeleteSpeechandtextanalyticsProgramTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete speechandtextanalytics program too many requests response has a 2xx status code
func (o *DeleteSpeechandtextanalyticsProgramTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete speechandtextanalytics program too many requests response has a 3xx status code
func (o *DeleteSpeechandtextanalyticsProgramTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete speechandtextanalytics program too many requests response has a 4xx status code
func (o *DeleteSpeechandtextanalyticsProgramTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete speechandtextanalytics program too many requests response has a 5xx status code
func (o *DeleteSpeechandtextanalyticsProgramTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete speechandtextanalytics program too many requests response a status code equal to that given
func (o *DeleteSpeechandtextanalyticsProgramTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *DeleteSpeechandtextanalyticsProgramTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/speechandtextanalytics/programs/{programId}][%d] deleteSpeechandtextanalyticsProgramTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteSpeechandtextanalyticsProgramTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /api/v2/speechandtextanalytics/programs/{programId}][%d] deleteSpeechandtextanalyticsProgramTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteSpeechandtextanalyticsProgramTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteSpeechandtextanalyticsProgramTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSpeechandtextanalyticsProgramInternalServerError creates a DeleteSpeechandtextanalyticsProgramInternalServerError with default headers values
func NewDeleteSpeechandtextanalyticsProgramInternalServerError() *DeleteSpeechandtextanalyticsProgramInternalServerError {
	return &DeleteSpeechandtextanalyticsProgramInternalServerError{}
}

/*
DeleteSpeechandtextanalyticsProgramInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type DeleteSpeechandtextanalyticsProgramInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete speechandtextanalytics program internal server error response has a 2xx status code
func (o *DeleteSpeechandtextanalyticsProgramInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete speechandtextanalytics program internal server error response has a 3xx status code
func (o *DeleteSpeechandtextanalyticsProgramInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete speechandtextanalytics program internal server error response has a 4xx status code
func (o *DeleteSpeechandtextanalyticsProgramInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete speechandtextanalytics program internal server error response has a 5xx status code
func (o *DeleteSpeechandtextanalyticsProgramInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete speechandtextanalytics program internal server error response a status code equal to that given
func (o *DeleteSpeechandtextanalyticsProgramInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteSpeechandtextanalyticsProgramInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/speechandtextanalytics/programs/{programId}][%d] deleteSpeechandtextanalyticsProgramInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteSpeechandtextanalyticsProgramInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/v2/speechandtextanalytics/programs/{programId}][%d] deleteSpeechandtextanalyticsProgramInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteSpeechandtextanalyticsProgramInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteSpeechandtextanalyticsProgramInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSpeechandtextanalyticsProgramServiceUnavailable creates a DeleteSpeechandtextanalyticsProgramServiceUnavailable with default headers values
func NewDeleteSpeechandtextanalyticsProgramServiceUnavailable() *DeleteSpeechandtextanalyticsProgramServiceUnavailable {
	return &DeleteSpeechandtextanalyticsProgramServiceUnavailable{}
}

/*
DeleteSpeechandtextanalyticsProgramServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type DeleteSpeechandtextanalyticsProgramServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete speechandtextanalytics program service unavailable response has a 2xx status code
func (o *DeleteSpeechandtextanalyticsProgramServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete speechandtextanalytics program service unavailable response has a 3xx status code
func (o *DeleteSpeechandtextanalyticsProgramServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete speechandtextanalytics program service unavailable response has a 4xx status code
func (o *DeleteSpeechandtextanalyticsProgramServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete speechandtextanalytics program service unavailable response has a 5xx status code
func (o *DeleteSpeechandtextanalyticsProgramServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this delete speechandtextanalytics program service unavailable response a status code equal to that given
func (o *DeleteSpeechandtextanalyticsProgramServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *DeleteSpeechandtextanalyticsProgramServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/speechandtextanalytics/programs/{programId}][%d] deleteSpeechandtextanalyticsProgramServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteSpeechandtextanalyticsProgramServiceUnavailable) String() string {
	return fmt.Sprintf("[DELETE /api/v2/speechandtextanalytics/programs/{programId}][%d] deleteSpeechandtextanalyticsProgramServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteSpeechandtextanalyticsProgramServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteSpeechandtextanalyticsProgramServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSpeechandtextanalyticsProgramGatewayTimeout creates a DeleteSpeechandtextanalyticsProgramGatewayTimeout with default headers values
func NewDeleteSpeechandtextanalyticsProgramGatewayTimeout() *DeleteSpeechandtextanalyticsProgramGatewayTimeout {
	return &DeleteSpeechandtextanalyticsProgramGatewayTimeout{}
}

/*
DeleteSpeechandtextanalyticsProgramGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type DeleteSpeechandtextanalyticsProgramGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete speechandtextanalytics program gateway timeout response has a 2xx status code
func (o *DeleteSpeechandtextanalyticsProgramGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete speechandtextanalytics program gateway timeout response has a 3xx status code
func (o *DeleteSpeechandtextanalyticsProgramGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete speechandtextanalytics program gateway timeout response has a 4xx status code
func (o *DeleteSpeechandtextanalyticsProgramGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete speechandtextanalytics program gateway timeout response has a 5xx status code
func (o *DeleteSpeechandtextanalyticsProgramGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this delete speechandtextanalytics program gateway timeout response a status code equal to that given
func (o *DeleteSpeechandtextanalyticsProgramGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *DeleteSpeechandtextanalyticsProgramGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/speechandtextanalytics/programs/{programId}][%d] deleteSpeechandtextanalyticsProgramGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteSpeechandtextanalyticsProgramGatewayTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/speechandtextanalytics/programs/{programId}][%d] deleteSpeechandtextanalyticsProgramGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteSpeechandtextanalyticsProgramGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteSpeechandtextanalyticsProgramGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
