// Code generated by go-swagger; DO NOT EDIT.

package speech_and_text_analytics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetSpeechandtextanalyticsProgramMappingsReader is a Reader for the GetSpeechandtextanalyticsProgramMappings structure.
type GetSpeechandtextanalyticsProgramMappingsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSpeechandtextanalyticsProgramMappingsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSpeechandtextanalyticsProgramMappingsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetSpeechandtextanalyticsProgramMappingsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetSpeechandtextanalyticsProgramMappingsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetSpeechandtextanalyticsProgramMappingsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSpeechandtextanalyticsProgramMappingsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetSpeechandtextanalyticsProgramMappingsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetSpeechandtextanalyticsProgramMappingsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetSpeechandtextanalyticsProgramMappingsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetSpeechandtextanalyticsProgramMappingsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSpeechandtextanalyticsProgramMappingsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetSpeechandtextanalyticsProgramMappingsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetSpeechandtextanalyticsProgramMappingsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetSpeechandtextanalyticsProgramMappingsOK creates a GetSpeechandtextanalyticsProgramMappingsOK with default headers values
func NewGetSpeechandtextanalyticsProgramMappingsOK() *GetSpeechandtextanalyticsProgramMappingsOK {
	return &GetSpeechandtextanalyticsProgramMappingsOK{}
}

/*GetSpeechandtextanalyticsProgramMappingsOK handles this case with default header values.

successful operation
*/
type GetSpeechandtextanalyticsProgramMappingsOK struct {
	Payload *models.ProgramMappings
}

func (o *GetSpeechandtextanalyticsProgramMappingsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/{programId}/mappings][%d] getSpeechandtextanalyticsProgramMappingsOK  %+v", 200, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramMappingsOK) GetPayload() *models.ProgramMappings {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramMappingsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProgramMappings)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramMappingsBadRequest creates a GetSpeechandtextanalyticsProgramMappingsBadRequest with default headers values
func NewGetSpeechandtextanalyticsProgramMappingsBadRequest() *GetSpeechandtextanalyticsProgramMappingsBadRequest {
	return &GetSpeechandtextanalyticsProgramMappingsBadRequest{}
}

/*GetSpeechandtextanalyticsProgramMappingsBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetSpeechandtextanalyticsProgramMappingsBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetSpeechandtextanalyticsProgramMappingsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/{programId}/mappings][%d] getSpeechandtextanalyticsProgramMappingsBadRequest  %+v", 400, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramMappingsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramMappingsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramMappingsUnauthorized creates a GetSpeechandtextanalyticsProgramMappingsUnauthorized with default headers values
func NewGetSpeechandtextanalyticsProgramMappingsUnauthorized() *GetSpeechandtextanalyticsProgramMappingsUnauthorized {
	return &GetSpeechandtextanalyticsProgramMappingsUnauthorized{}
}

/*GetSpeechandtextanalyticsProgramMappingsUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetSpeechandtextanalyticsProgramMappingsUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetSpeechandtextanalyticsProgramMappingsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/{programId}/mappings][%d] getSpeechandtextanalyticsProgramMappingsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramMappingsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramMappingsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramMappingsForbidden creates a GetSpeechandtextanalyticsProgramMappingsForbidden with default headers values
func NewGetSpeechandtextanalyticsProgramMappingsForbidden() *GetSpeechandtextanalyticsProgramMappingsForbidden {
	return &GetSpeechandtextanalyticsProgramMappingsForbidden{}
}

/*GetSpeechandtextanalyticsProgramMappingsForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetSpeechandtextanalyticsProgramMappingsForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetSpeechandtextanalyticsProgramMappingsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/{programId}/mappings][%d] getSpeechandtextanalyticsProgramMappingsForbidden  %+v", 403, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramMappingsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramMappingsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramMappingsNotFound creates a GetSpeechandtextanalyticsProgramMappingsNotFound with default headers values
func NewGetSpeechandtextanalyticsProgramMappingsNotFound() *GetSpeechandtextanalyticsProgramMappingsNotFound {
	return &GetSpeechandtextanalyticsProgramMappingsNotFound{}
}

/*GetSpeechandtextanalyticsProgramMappingsNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetSpeechandtextanalyticsProgramMappingsNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetSpeechandtextanalyticsProgramMappingsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/{programId}/mappings][%d] getSpeechandtextanalyticsProgramMappingsNotFound  %+v", 404, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramMappingsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramMappingsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramMappingsRequestTimeout creates a GetSpeechandtextanalyticsProgramMappingsRequestTimeout with default headers values
func NewGetSpeechandtextanalyticsProgramMappingsRequestTimeout() *GetSpeechandtextanalyticsProgramMappingsRequestTimeout {
	return &GetSpeechandtextanalyticsProgramMappingsRequestTimeout{}
}

/*GetSpeechandtextanalyticsProgramMappingsRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetSpeechandtextanalyticsProgramMappingsRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetSpeechandtextanalyticsProgramMappingsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/{programId}/mappings][%d] getSpeechandtextanalyticsProgramMappingsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramMappingsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramMappingsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramMappingsRequestEntityTooLarge creates a GetSpeechandtextanalyticsProgramMappingsRequestEntityTooLarge with default headers values
func NewGetSpeechandtextanalyticsProgramMappingsRequestEntityTooLarge() *GetSpeechandtextanalyticsProgramMappingsRequestEntityTooLarge {
	return &GetSpeechandtextanalyticsProgramMappingsRequestEntityTooLarge{}
}

/*GetSpeechandtextanalyticsProgramMappingsRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetSpeechandtextanalyticsProgramMappingsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetSpeechandtextanalyticsProgramMappingsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/{programId}/mappings][%d] getSpeechandtextanalyticsProgramMappingsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramMappingsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramMappingsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramMappingsUnsupportedMediaType creates a GetSpeechandtextanalyticsProgramMappingsUnsupportedMediaType with default headers values
func NewGetSpeechandtextanalyticsProgramMappingsUnsupportedMediaType() *GetSpeechandtextanalyticsProgramMappingsUnsupportedMediaType {
	return &GetSpeechandtextanalyticsProgramMappingsUnsupportedMediaType{}
}

/*GetSpeechandtextanalyticsProgramMappingsUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetSpeechandtextanalyticsProgramMappingsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetSpeechandtextanalyticsProgramMappingsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/{programId}/mappings][%d] getSpeechandtextanalyticsProgramMappingsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramMappingsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramMappingsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramMappingsTooManyRequests creates a GetSpeechandtextanalyticsProgramMappingsTooManyRequests with default headers values
func NewGetSpeechandtextanalyticsProgramMappingsTooManyRequests() *GetSpeechandtextanalyticsProgramMappingsTooManyRequests {
	return &GetSpeechandtextanalyticsProgramMappingsTooManyRequests{}
}

/*GetSpeechandtextanalyticsProgramMappingsTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetSpeechandtextanalyticsProgramMappingsTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetSpeechandtextanalyticsProgramMappingsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/{programId}/mappings][%d] getSpeechandtextanalyticsProgramMappingsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramMappingsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramMappingsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramMappingsInternalServerError creates a GetSpeechandtextanalyticsProgramMappingsInternalServerError with default headers values
func NewGetSpeechandtextanalyticsProgramMappingsInternalServerError() *GetSpeechandtextanalyticsProgramMappingsInternalServerError {
	return &GetSpeechandtextanalyticsProgramMappingsInternalServerError{}
}

/*GetSpeechandtextanalyticsProgramMappingsInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetSpeechandtextanalyticsProgramMappingsInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetSpeechandtextanalyticsProgramMappingsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/{programId}/mappings][%d] getSpeechandtextanalyticsProgramMappingsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramMappingsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramMappingsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramMappingsServiceUnavailable creates a GetSpeechandtextanalyticsProgramMappingsServiceUnavailable with default headers values
func NewGetSpeechandtextanalyticsProgramMappingsServiceUnavailable() *GetSpeechandtextanalyticsProgramMappingsServiceUnavailable {
	return &GetSpeechandtextanalyticsProgramMappingsServiceUnavailable{}
}

/*GetSpeechandtextanalyticsProgramMappingsServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetSpeechandtextanalyticsProgramMappingsServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetSpeechandtextanalyticsProgramMappingsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/{programId}/mappings][%d] getSpeechandtextanalyticsProgramMappingsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramMappingsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramMappingsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramMappingsGatewayTimeout creates a GetSpeechandtextanalyticsProgramMappingsGatewayTimeout with default headers values
func NewGetSpeechandtextanalyticsProgramMappingsGatewayTimeout() *GetSpeechandtextanalyticsProgramMappingsGatewayTimeout {
	return &GetSpeechandtextanalyticsProgramMappingsGatewayTimeout{}
}

/*GetSpeechandtextanalyticsProgramMappingsGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetSpeechandtextanalyticsProgramMappingsGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetSpeechandtextanalyticsProgramMappingsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/{programId}/mappings][%d] getSpeechandtextanalyticsProgramMappingsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramMappingsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramMappingsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
