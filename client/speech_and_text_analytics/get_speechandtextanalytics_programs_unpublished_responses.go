// Code generated by go-swagger; DO NOT EDIT.

package speech_and_text_analytics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetSpeechandtextanalyticsProgramsUnpublishedReader is a Reader for the GetSpeechandtextanalyticsProgramsUnpublished structure.
type GetSpeechandtextanalyticsProgramsUnpublishedReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSpeechandtextanalyticsProgramsUnpublishedReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSpeechandtextanalyticsProgramsUnpublishedOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetSpeechandtextanalyticsProgramsUnpublishedBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetSpeechandtextanalyticsProgramsUnpublishedUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetSpeechandtextanalyticsProgramsUnpublishedForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSpeechandtextanalyticsProgramsUnpublishedNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetSpeechandtextanalyticsProgramsUnpublishedRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetSpeechandtextanalyticsProgramsUnpublishedRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetSpeechandtextanalyticsProgramsUnpublishedUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetSpeechandtextanalyticsProgramsUnpublishedTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSpeechandtextanalyticsProgramsUnpublishedInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetSpeechandtextanalyticsProgramsUnpublishedServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetSpeechandtextanalyticsProgramsUnpublishedGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetSpeechandtextanalyticsProgramsUnpublishedOK creates a GetSpeechandtextanalyticsProgramsUnpublishedOK with default headers values
func NewGetSpeechandtextanalyticsProgramsUnpublishedOK() *GetSpeechandtextanalyticsProgramsUnpublishedOK {
	return &GetSpeechandtextanalyticsProgramsUnpublishedOK{}
}

/*GetSpeechandtextanalyticsProgramsUnpublishedOK handles this case with default header values.

successful operation
*/
type GetSpeechandtextanalyticsProgramsUnpublishedOK struct {
	Payload *models.UnpublishedProgramsEntityListing
}

func (o *GetSpeechandtextanalyticsProgramsUnpublishedOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/unpublished][%d] getSpeechandtextanalyticsProgramsUnpublishedOK  %+v", 200, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsUnpublishedOK) GetPayload() *models.UnpublishedProgramsEntityListing {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramsUnpublishedOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UnpublishedProgramsEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramsUnpublishedBadRequest creates a GetSpeechandtextanalyticsProgramsUnpublishedBadRequest with default headers values
func NewGetSpeechandtextanalyticsProgramsUnpublishedBadRequest() *GetSpeechandtextanalyticsProgramsUnpublishedBadRequest {
	return &GetSpeechandtextanalyticsProgramsUnpublishedBadRequest{}
}

/*GetSpeechandtextanalyticsProgramsUnpublishedBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetSpeechandtextanalyticsProgramsUnpublishedBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetSpeechandtextanalyticsProgramsUnpublishedBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/unpublished][%d] getSpeechandtextanalyticsProgramsUnpublishedBadRequest  %+v", 400, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsUnpublishedBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramsUnpublishedBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramsUnpublishedUnauthorized creates a GetSpeechandtextanalyticsProgramsUnpublishedUnauthorized with default headers values
func NewGetSpeechandtextanalyticsProgramsUnpublishedUnauthorized() *GetSpeechandtextanalyticsProgramsUnpublishedUnauthorized {
	return &GetSpeechandtextanalyticsProgramsUnpublishedUnauthorized{}
}

/*GetSpeechandtextanalyticsProgramsUnpublishedUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetSpeechandtextanalyticsProgramsUnpublishedUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetSpeechandtextanalyticsProgramsUnpublishedUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/unpublished][%d] getSpeechandtextanalyticsProgramsUnpublishedUnauthorized  %+v", 401, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsUnpublishedUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramsUnpublishedUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramsUnpublishedForbidden creates a GetSpeechandtextanalyticsProgramsUnpublishedForbidden with default headers values
func NewGetSpeechandtextanalyticsProgramsUnpublishedForbidden() *GetSpeechandtextanalyticsProgramsUnpublishedForbidden {
	return &GetSpeechandtextanalyticsProgramsUnpublishedForbidden{}
}

/*GetSpeechandtextanalyticsProgramsUnpublishedForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetSpeechandtextanalyticsProgramsUnpublishedForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetSpeechandtextanalyticsProgramsUnpublishedForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/unpublished][%d] getSpeechandtextanalyticsProgramsUnpublishedForbidden  %+v", 403, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsUnpublishedForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramsUnpublishedForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramsUnpublishedNotFound creates a GetSpeechandtextanalyticsProgramsUnpublishedNotFound with default headers values
func NewGetSpeechandtextanalyticsProgramsUnpublishedNotFound() *GetSpeechandtextanalyticsProgramsUnpublishedNotFound {
	return &GetSpeechandtextanalyticsProgramsUnpublishedNotFound{}
}

/*GetSpeechandtextanalyticsProgramsUnpublishedNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetSpeechandtextanalyticsProgramsUnpublishedNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetSpeechandtextanalyticsProgramsUnpublishedNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/unpublished][%d] getSpeechandtextanalyticsProgramsUnpublishedNotFound  %+v", 404, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsUnpublishedNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramsUnpublishedNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramsUnpublishedRequestTimeout creates a GetSpeechandtextanalyticsProgramsUnpublishedRequestTimeout with default headers values
func NewGetSpeechandtextanalyticsProgramsUnpublishedRequestTimeout() *GetSpeechandtextanalyticsProgramsUnpublishedRequestTimeout {
	return &GetSpeechandtextanalyticsProgramsUnpublishedRequestTimeout{}
}

/*GetSpeechandtextanalyticsProgramsUnpublishedRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetSpeechandtextanalyticsProgramsUnpublishedRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetSpeechandtextanalyticsProgramsUnpublishedRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/unpublished][%d] getSpeechandtextanalyticsProgramsUnpublishedRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsUnpublishedRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramsUnpublishedRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramsUnpublishedRequestEntityTooLarge creates a GetSpeechandtextanalyticsProgramsUnpublishedRequestEntityTooLarge with default headers values
func NewGetSpeechandtextanalyticsProgramsUnpublishedRequestEntityTooLarge() *GetSpeechandtextanalyticsProgramsUnpublishedRequestEntityTooLarge {
	return &GetSpeechandtextanalyticsProgramsUnpublishedRequestEntityTooLarge{}
}

/*GetSpeechandtextanalyticsProgramsUnpublishedRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetSpeechandtextanalyticsProgramsUnpublishedRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetSpeechandtextanalyticsProgramsUnpublishedRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/unpublished][%d] getSpeechandtextanalyticsProgramsUnpublishedRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsUnpublishedRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramsUnpublishedRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramsUnpublishedUnsupportedMediaType creates a GetSpeechandtextanalyticsProgramsUnpublishedUnsupportedMediaType with default headers values
func NewGetSpeechandtextanalyticsProgramsUnpublishedUnsupportedMediaType() *GetSpeechandtextanalyticsProgramsUnpublishedUnsupportedMediaType {
	return &GetSpeechandtextanalyticsProgramsUnpublishedUnsupportedMediaType{}
}

/*GetSpeechandtextanalyticsProgramsUnpublishedUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetSpeechandtextanalyticsProgramsUnpublishedUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetSpeechandtextanalyticsProgramsUnpublishedUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/unpublished][%d] getSpeechandtextanalyticsProgramsUnpublishedUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsUnpublishedUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramsUnpublishedUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramsUnpublishedTooManyRequests creates a GetSpeechandtextanalyticsProgramsUnpublishedTooManyRequests with default headers values
func NewGetSpeechandtextanalyticsProgramsUnpublishedTooManyRequests() *GetSpeechandtextanalyticsProgramsUnpublishedTooManyRequests {
	return &GetSpeechandtextanalyticsProgramsUnpublishedTooManyRequests{}
}

/*GetSpeechandtextanalyticsProgramsUnpublishedTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetSpeechandtextanalyticsProgramsUnpublishedTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetSpeechandtextanalyticsProgramsUnpublishedTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/unpublished][%d] getSpeechandtextanalyticsProgramsUnpublishedTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsUnpublishedTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramsUnpublishedTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramsUnpublishedInternalServerError creates a GetSpeechandtextanalyticsProgramsUnpublishedInternalServerError with default headers values
func NewGetSpeechandtextanalyticsProgramsUnpublishedInternalServerError() *GetSpeechandtextanalyticsProgramsUnpublishedInternalServerError {
	return &GetSpeechandtextanalyticsProgramsUnpublishedInternalServerError{}
}

/*GetSpeechandtextanalyticsProgramsUnpublishedInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetSpeechandtextanalyticsProgramsUnpublishedInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetSpeechandtextanalyticsProgramsUnpublishedInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/unpublished][%d] getSpeechandtextanalyticsProgramsUnpublishedInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsUnpublishedInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramsUnpublishedInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramsUnpublishedServiceUnavailable creates a GetSpeechandtextanalyticsProgramsUnpublishedServiceUnavailable with default headers values
func NewGetSpeechandtextanalyticsProgramsUnpublishedServiceUnavailable() *GetSpeechandtextanalyticsProgramsUnpublishedServiceUnavailable {
	return &GetSpeechandtextanalyticsProgramsUnpublishedServiceUnavailable{}
}

/*GetSpeechandtextanalyticsProgramsUnpublishedServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetSpeechandtextanalyticsProgramsUnpublishedServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetSpeechandtextanalyticsProgramsUnpublishedServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/unpublished][%d] getSpeechandtextanalyticsProgramsUnpublishedServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsUnpublishedServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramsUnpublishedServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramsUnpublishedGatewayTimeout creates a GetSpeechandtextanalyticsProgramsUnpublishedGatewayTimeout with default headers values
func NewGetSpeechandtextanalyticsProgramsUnpublishedGatewayTimeout() *GetSpeechandtextanalyticsProgramsUnpublishedGatewayTimeout {
	return &GetSpeechandtextanalyticsProgramsUnpublishedGatewayTimeout{}
}

/*GetSpeechandtextanalyticsProgramsUnpublishedGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetSpeechandtextanalyticsProgramsUnpublishedGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetSpeechandtextanalyticsProgramsUnpublishedGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/unpublished][%d] getSpeechandtextanalyticsProgramsUnpublishedGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsUnpublishedGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramsUnpublishedGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
