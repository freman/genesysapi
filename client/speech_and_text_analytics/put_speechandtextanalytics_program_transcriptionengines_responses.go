// Code generated by go-swagger; DO NOT EDIT.

package speech_and_text_analytics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutSpeechandtextanalyticsProgramTranscriptionenginesReader is a Reader for the PutSpeechandtextanalyticsProgramTranscriptionengines structure.
type PutSpeechandtextanalyticsProgramTranscriptionenginesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutSpeechandtextanalyticsProgramTranscriptionenginesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutSpeechandtextanalyticsProgramTranscriptionenginesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutSpeechandtextanalyticsProgramTranscriptionenginesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutSpeechandtextanalyticsProgramTranscriptionenginesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutSpeechandtextanalyticsProgramTranscriptionenginesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutSpeechandtextanalyticsProgramTranscriptionenginesRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutSpeechandtextanalyticsProgramTranscriptionenginesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutSpeechandtextanalyticsProgramTranscriptionenginesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutSpeechandtextanalyticsProgramTranscriptionenginesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutSpeechandtextanalyticsProgramTranscriptionenginesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutSpeechandtextanalyticsProgramTranscriptionenginesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutSpeechandtextanalyticsProgramTranscriptionenginesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutSpeechandtextanalyticsProgramTranscriptionenginesOK creates a PutSpeechandtextanalyticsProgramTranscriptionenginesOK with default headers values
func NewPutSpeechandtextanalyticsProgramTranscriptionenginesOK() *PutSpeechandtextanalyticsProgramTranscriptionenginesOK {
	return &PutSpeechandtextanalyticsProgramTranscriptionenginesOK{}
}

/*
PutSpeechandtextanalyticsProgramTranscriptionenginesOK describes a response with status code 200, with default header values.

successful operation
*/
type PutSpeechandtextanalyticsProgramTranscriptionenginesOK struct {
	Payload *models.ProgramTranscriptionEngines
}

// IsSuccess returns true when this put speechandtextanalytics program transcriptionengines o k response has a 2xx status code
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put speechandtextanalytics program transcriptionengines o k response has a 3xx status code
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put speechandtextanalytics program transcriptionengines o k response has a 4xx status code
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put speechandtextanalytics program transcriptionengines o k response has a 5xx status code
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put speechandtextanalytics program transcriptionengines o k response a status code equal to that given
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesOK) IsCode(code int) bool {
	return code == 200
}

func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines][%d] putSpeechandtextanalyticsProgramTranscriptionenginesOK  %+v", 200, o.Payload)
}

func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesOK) String() string {
	return fmt.Sprintf("[PUT /api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines][%d] putSpeechandtextanalyticsProgramTranscriptionenginesOK  %+v", 200, o.Payload)
}

func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesOK) GetPayload() *models.ProgramTranscriptionEngines {
	return o.Payload
}

func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProgramTranscriptionEngines)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutSpeechandtextanalyticsProgramTranscriptionenginesBadRequest creates a PutSpeechandtextanalyticsProgramTranscriptionenginesBadRequest with default headers values
func NewPutSpeechandtextanalyticsProgramTranscriptionenginesBadRequest() *PutSpeechandtextanalyticsProgramTranscriptionenginesBadRequest {
	return &PutSpeechandtextanalyticsProgramTranscriptionenginesBadRequest{}
}

/*
PutSpeechandtextanalyticsProgramTranscriptionenginesBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutSpeechandtextanalyticsProgramTranscriptionenginesBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put speechandtextanalytics program transcriptionengines bad request response has a 2xx status code
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put speechandtextanalytics program transcriptionengines bad request response has a 3xx status code
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put speechandtextanalytics program transcriptionengines bad request response has a 4xx status code
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put speechandtextanalytics program transcriptionengines bad request response has a 5xx status code
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put speechandtextanalytics program transcriptionengines bad request response a status code equal to that given
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines][%d] putSpeechandtextanalyticsProgramTranscriptionenginesBadRequest  %+v", 400, o.Payload)
}

func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines][%d] putSpeechandtextanalyticsProgramTranscriptionenginesBadRequest  %+v", 400, o.Payload)
}

func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutSpeechandtextanalyticsProgramTranscriptionenginesUnauthorized creates a PutSpeechandtextanalyticsProgramTranscriptionenginesUnauthorized with default headers values
func NewPutSpeechandtextanalyticsProgramTranscriptionenginesUnauthorized() *PutSpeechandtextanalyticsProgramTranscriptionenginesUnauthorized {
	return &PutSpeechandtextanalyticsProgramTranscriptionenginesUnauthorized{}
}

/*
PutSpeechandtextanalyticsProgramTranscriptionenginesUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PutSpeechandtextanalyticsProgramTranscriptionenginesUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put speechandtextanalytics program transcriptionengines unauthorized response has a 2xx status code
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put speechandtextanalytics program transcriptionengines unauthorized response has a 3xx status code
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put speechandtextanalytics program transcriptionengines unauthorized response has a 4xx status code
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put speechandtextanalytics program transcriptionengines unauthorized response has a 5xx status code
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put speechandtextanalytics program transcriptionengines unauthorized response a status code equal to that given
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines][%d] putSpeechandtextanalyticsProgramTranscriptionenginesUnauthorized  %+v", 401, o.Payload)
}

func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesUnauthorized) String() string {
	return fmt.Sprintf("[PUT /api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines][%d] putSpeechandtextanalyticsProgramTranscriptionenginesUnauthorized  %+v", 401, o.Payload)
}

func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutSpeechandtextanalyticsProgramTranscriptionenginesForbidden creates a PutSpeechandtextanalyticsProgramTranscriptionenginesForbidden with default headers values
func NewPutSpeechandtextanalyticsProgramTranscriptionenginesForbidden() *PutSpeechandtextanalyticsProgramTranscriptionenginesForbidden {
	return &PutSpeechandtextanalyticsProgramTranscriptionenginesForbidden{}
}

/*
PutSpeechandtextanalyticsProgramTranscriptionenginesForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PutSpeechandtextanalyticsProgramTranscriptionenginesForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put speechandtextanalytics program transcriptionengines forbidden response has a 2xx status code
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put speechandtextanalytics program transcriptionengines forbidden response has a 3xx status code
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put speechandtextanalytics program transcriptionengines forbidden response has a 4xx status code
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put speechandtextanalytics program transcriptionengines forbidden response has a 5xx status code
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put speechandtextanalytics program transcriptionengines forbidden response a status code equal to that given
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines][%d] putSpeechandtextanalyticsProgramTranscriptionenginesForbidden  %+v", 403, o.Payload)
}

func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesForbidden) String() string {
	return fmt.Sprintf("[PUT /api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines][%d] putSpeechandtextanalyticsProgramTranscriptionenginesForbidden  %+v", 403, o.Payload)
}

func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutSpeechandtextanalyticsProgramTranscriptionenginesNotFound creates a PutSpeechandtextanalyticsProgramTranscriptionenginesNotFound with default headers values
func NewPutSpeechandtextanalyticsProgramTranscriptionenginesNotFound() *PutSpeechandtextanalyticsProgramTranscriptionenginesNotFound {
	return &PutSpeechandtextanalyticsProgramTranscriptionenginesNotFound{}
}

/*
PutSpeechandtextanalyticsProgramTranscriptionenginesNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PutSpeechandtextanalyticsProgramTranscriptionenginesNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put speechandtextanalytics program transcriptionengines not found response has a 2xx status code
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put speechandtextanalytics program transcriptionengines not found response has a 3xx status code
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put speechandtextanalytics program transcriptionengines not found response has a 4xx status code
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put speechandtextanalytics program transcriptionengines not found response has a 5xx status code
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put speechandtextanalytics program transcriptionengines not found response a status code equal to that given
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines][%d] putSpeechandtextanalyticsProgramTranscriptionenginesNotFound  %+v", 404, o.Payload)
}

func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesNotFound) String() string {
	return fmt.Sprintf("[PUT /api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines][%d] putSpeechandtextanalyticsProgramTranscriptionenginesNotFound  %+v", 404, o.Payload)
}

func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutSpeechandtextanalyticsProgramTranscriptionenginesRequestTimeout creates a PutSpeechandtextanalyticsProgramTranscriptionenginesRequestTimeout with default headers values
func NewPutSpeechandtextanalyticsProgramTranscriptionenginesRequestTimeout() *PutSpeechandtextanalyticsProgramTranscriptionenginesRequestTimeout {
	return &PutSpeechandtextanalyticsProgramTranscriptionenginesRequestTimeout{}
}

/*
PutSpeechandtextanalyticsProgramTranscriptionenginesRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutSpeechandtextanalyticsProgramTranscriptionenginesRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put speechandtextanalytics program transcriptionengines request timeout response has a 2xx status code
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put speechandtextanalytics program transcriptionengines request timeout response has a 3xx status code
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put speechandtextanalytics program transcriptionengines request timeout response has a 4xx status code
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this put speechandtextanalytics program transcriptionengines request timeout response has a 5xx status code
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this put speechandtextanalytics program transcriptionengines request timeout response a status code equal to that given
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines][%d] putSpeechandtextanalyticsProgramTranscriptionenginesRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesRequestTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines][%d] putSpeechandtextanalyticsProgramTranscriptionenginesRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutSpeechandtextanalyticsProgramTranscriptionenginesRequestEntityTooLarge creates a PutSpeechandtextanalyticsProgramTranscriptionenginesRequestEntityTooLarge with default headers values
func NewPutSpeechandtextanalyticsProgramTranscriptionenginesRequestEntityTooLarge() *PutSpeechandtextanalyticsProgramTranscriptionenginesRequestEntityTooLarge {
	return &PutSpeechandtextanalyticsProgramTranscriptionenginesRequestEntityTooLarge{}
}

/*
PutSpeechandtextanalyticsProgramTranscriptionenginesRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PutSpeechandtextanalyticsProgramTranscriptionenginesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put speechandtextanalytics program transcriptionengines request entity too large response has a 2xx status code
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put speechandtextanalytics program transcriptionengines request entity too large response has a 3xx status code
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put speechandtextanalytics program transcriptionengines request entity too large response has a 4xx status code
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this put speechandtextanalytics program transcriptionengines request entity too large response has a 5xx status code
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this put speechandtextanalytics program transcriptionengines request entity too large response a status code equal to that given
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines][%d] putSpeechandtextanalyticsProgramTranscriptionenginesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PUT /api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines][%d] putSpeechandtextanalyticsProgramTranscriptionenginesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutSpeechandtextanalyticsProgramTranscriptionenginesUnsupportedMediaType creates a PutSpeechandtextanalyticsProgramTranscriptionenginesUnsupportedMediaType with default headers values
func NewPutSpeechandtextanalyticsProgramTranscriptionenginesUnsupportedMediaType() *PutSpeechandtextanalyticsProgramTranscriptionenginesUnsupportedMediaType {
	return &PutSpeechandtextanalyticsProgramTranscriptionenginesUnsupportedMediaType{}
}

/*
PutSpeechandtextanalyticsProgramTranscriptionenginesUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutSpeechandtextanalyticsProgramTranscriptionenginesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put speechandtextanalytics program transcriptionengines unsupported media type response has a 2xx status code
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put speechandtextanalytics program transcriptionengines unsupported media type response has a 3xx status code
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put speechandtextanalytics program transcriptionengines unsupported media type response has a 4xx status code
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this put speechandtextanalytics program transcriptionengines unsupported media type response has a 5xx status code
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this put speechandtextanalytics program transcriptionengines unsupported media type response a status code equal to that given
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines][%d] putSpeechandtextanalyticsProgramTranscriptionenginesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PUT /api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines][%d] putSpeechandtextanalyticsProgramTranscriptionenginesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutSpeechandtextanalyticsProgramTranscriptionenginesTooManyRequests creates a PutSpeechandtextanalyticsProgramTranscriptionenginesTooManyRequests with default headers values
func NewPutSpeechandtextanalyticsProgramTranscriptionenginesTooManyRequests() *PutSpeechandtextanalyticsProgramTranscriptionenginesTooManyRequests {
	return &PutSpeechandtextanalyticsProgramTranscriptionenginesTooManyRequests{}
}

/*
PutSpeechandtextanalyticsProgramTranscriptionenginesTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutSpeechandtextanalyticsProgramTranscriptionenginesTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put speechandtextanalytics program transcriptionengines too many requests response has a 2xx status code
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put speechandtextanalytics program transcriptionengines too many requests response has a 3xx status code
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put speechandtextanalytics program transcriptionengines too many requests response has a 4xx status code
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this put speechandtextanalytics program transcriptionengines too many requests response has a 5xx status code
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this put speechandtextanalytics program transcriptionengines too many requests response a status code equal to that given
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines][%d] putSpeechandtextanalyticsProgramTranscriptionenginesTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesTooManyRequests) String() string {
	return fmt.Sprintf("[PUT /api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines][%d] putSpeechandtextanalyticsProgramTranscriptionenginesTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutSpeechandtextanalyticsProgramTranscriptionenginesInternalServerError creates a PutSpeechandtextanalyticsProgramTranscriptionenginesInternalServerError with default headers values
func NewPutSpeechandtextanalyticsProgramTranscriptionenginesInternalServerError() *PutSpeechandtextanalyticsProgramTranscriptionenginesInternalServerError {
	return &PutSpeechandtextanalyticsProgramTranscriptionenginesInternalServerError{}
}

/*
PutSpeechandtextanalyticsProgramTranscriptionenginesInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutSpeechandtextanalyticsProgramTranscriptionenginesInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put speechandtextanalytics program transcriptionengines internal server error response has a 2xx status code
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put speechandtextanalytics program transcriptionengines internal server error response has a 3xx status code
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put speechandtextanalytics program transcriptionengines internal server error response has a 4xx status code
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this put speechandtextanalytics program transcriptionengines internal server error response has a 5xx status code
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this put speechandtextanalytics program transcriptionengines internal server error response a status code equal to that given
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines][%d] putSpeechandtextanalyticsProgramTranscriptionenginesInternalServerError  %+v", 500, o.Payload)
}

func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesInternalServerError) String() string {
	return fmt.Sprintf("[PUT /api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines][%d] putSpeechandtextanalyticsProgramTranscriptionenginesInternalServerError  %+v", 500, o.Payload)
}

func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutSpeechandtextanalyticsProgramTranscriptionenginesServiceUnavailable creates a PutSpeechandtextanalyticsProgramTranscriptionenginesServiceUnavailable with default headers values
func NewPutSpeechandtextanalyticsProgramTranscriptionenginesServiceUnavailable() *PutSpeechandtextanalyticsProgramTranscriptionenginesServiceUnavailable {
	return &PutSpeechandtextanalyticsProgramTranscriptionenginesServiceUnavailable{}
}

/*
PutSpeechandtextanalyticsProgramTranscriptionenginesServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutSpeechandtextanalyticsProgramTranscriptionenginesServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put speechandtextanalytics program transcriptionengines service unavailable response has a 2xx status code
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put speechandtextanalytics program transcriptionengines service unavailable response has a 3xx status code
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put speechandtextanalytics program transcriptionengines service unavailable response has a 4xx status code
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this put speechandtextanalytics program transcriptionengines service unavailable response has a 5xx status code
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this put speechandtextanalytics program transcriptionengines service unavailable response a status code equal to that given
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines][%d] putSpeechandtextanalyticsProgramTranscriptionenginesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesServiceUnavailable) String() string {
	return fmt.Sprintf("[PUT /api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines][%d] putSpeechandtextanalyticsProgramTranscriptionenginesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutSpeechandtextanalyticsProgramTranscriptionenginesGatewayTimeout creates a PutSpeechandtextanalyticsProgramTranscriptionenginesGatewayTimeout with default headers values
func NewPutSpeechandtextanalyticsProgramTranscriptionenginesGatewayTimeout() *PutSpeechandtextanalyticsProgramTranscriptionenginesGatewayTimeout {
	return &PutSpeechandtextanalyticsProgramTranscriptionenginesGatewayTimeout{}
}

/*
PutSpeechandtextanalyticsProgramTranscriptionenginesGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PutSpeechandtextanalyticsProgramTranscriptionenginesGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put speechandtextanalytics program transcriptionengines gateway timeout response has a 2xx status code
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put speechandtextanalytics program transcriptionengines gateway timeout response has a 3xx status code
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put speechandtextanalytics program transcriptionengines gateway timeout response has a 4xx status code
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this put speechandtextanalytics program transcriptionengines gateway timeout response has a 5xx status code
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this put speechandtextanalytics program transcriptionengines gateway timeout response a status code equal to that given
func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines][%d] putSpeechandtextanalyticsProgramTranscriptionenginesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesGatewayTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines][%d] putSpeechandtextanalyticsProgramTranscriptionenginesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutSpeechandtextanalyticsProgramTranscriptionenginesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
