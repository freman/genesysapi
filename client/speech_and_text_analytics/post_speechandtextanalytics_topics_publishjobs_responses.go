// Code generated by go-swagger; DO NOT EDIT.

package speech_and_text_analytics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostSpeechandtextanalyticsTopicsPublishjobsReader is a Reader for the PostSpeechandtextanalyticsTopicsPublishjobs structure.
type PostSpeechandtextanalyticsTopicsPublishjobsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostSpeechandtextanalyticsTopicsPublishjobsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostSpeechandtextanalyticsTopicsPublishjobsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostSpeechandtextanalyticsTopicsPublishjobsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostSpeechandtextanalyticsTopicsPublishjobsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostSpeechandtextanalyticsTopicsPublishjobsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostSpeechandtextanalyticsTopicsPublishjobsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostSpeechandtextanalyticsTopicsPublishjobsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostSpeechandtextanalyticsTopicsPublishjobsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostSpeechandtextanalyticsTopicsPublishjobsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostSpeechandtextanalyticsTopicsPublishjobsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostSpeechandtextanalyticsTopicsPublishjobsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostSpeechandtextanalyticsTopicsPublishjobsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostSpeechandtextanalyticsTopicsPublishjobsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostSpeechandtextanalyticsTopicsPublishjobsOK creates a PostSpeechandtextanalyticsTopicsPublishjobsOK with default headers values
func NewPostSpeechandtextanalyticsTopicsPublishjobsOK() *PostSpeechandtextanalyticsTopicsPublishjobsOK {
	return &PostSpeechandtextanalyticsTopicsPublishjobsOK{}
}

/*
PostSpeechandtextanalyticsTopicsPublishjobsOK describes a response with status code 200, with default header values.

successful operation
*/
type PostSpeechandtextanalyticsTopicsPublishjobsOK struct {
	Payload *models.TopicJob
}

// IsSuccess returns true when this post speechandtextanalytics topics publishjobs o k response has a 2xx status code
func (o *PostSpeechandtextanalyticsTopicsPublishjobsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post speechandtextanalytics topics publishjobs o k response has a 3xx status code
func (o *PostSpeechandtextanalyticsTopicsPublishjobsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post speechandtextanalytics topics publishjobs o k response has a 4xx status code
func (o *PostSpeechandtextanalyticsTopicsPublishjobsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post speechandtextanalytics topics publishjobs o k response has a 5xx status code
func (o *PostSpeechandtextanalyticsTopicsPublishjobsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post speechandtextanalytics topics publishjobs o k response a status code equal to that given
func (o *PostSpeechandtextanalyticsTopicsPublishjobsOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostSpeechandtextanalyticsTopicsPublishjobsOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/speechandtextanalytics/topics/publishjobs][%d] postSpeechandtextanalyticsTopicsPublishjobsOK  %+v", 200, o.Payload)
}

func (o *PostSpeechandtextanalyticsTopicsPublishjobsOK) String() string {
	return fmt.Sprintf("[POST /api/v2/speechandtextanalytics/topics/publishjobs][%d] postSpeechandtextanalyticsTopicsPublishjobsOK  %+v", 200, o.Payload)
}

func (o *PostSpeechandtextanalyticsTopicsPublishjobsOK) GetPayload() *models.TopicJob {
	return o.Payload
}

func (o *PostSpeechandtextanalyticsTopicsPublishjobsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TopicJob)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSpeechandtextanalyticsTopicsPublishjobsBadRequest creates a PostSpeechandtextanalyticsTopicsPublishjobsBadRequest with default headers values
func NewPostSpeechandtextanalyticsTopicsPublishjobsBadRequest() *PostSpeechandtextanalyticsTopicsPublishjobsBadRequest {
	return &PostSpeechandtextanalyticsTopicsPublishjobsBadRequest{}
}

/*
PostSpeechandtextanalyticsTopicsPublishjobsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostSpeechandtextanalyticsTopicsPublishjobsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post speechandtextanalytics topics publishjobs bad request response has a 2xx status code
func (o *PostSpeechandtextanalyticsTopicsPublishjobsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post speechandtextanalytics topics publishjobs bad request response has a 3xx status code
func (o *PostSpeechandtextanalyticsTopicsPublishjobsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post speechandtextanalytics topics publishjobs bad request response has a 4xx status code
func (o *PostSpeechandtextanalyticsTopicsPublishjobsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post speechandtextanalytics topics publishjobs bad request response has a 5xx status code
func (o *PostSpeechandtextanalyticsTopicsPublishjobsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post speechandtextanalytics topics publishjobs bad request response a status code equal to that given
func (o *PostSpeechandtextanalyticsTopicsPublishjobsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostSpeechandtextanalyticsTopicsPublishjobsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/speechandtextanalytics/topics/publishjobs][%d] postSpeechandtextanalyticsTopicsPublishjobsBadRequest  %+v", 400, o.Payload)
}

func (o *PostSpeechandtextanalyticsTopicsPublishjobsBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/speechandtextanalytics/topics/publishjobs][%d] postSpeechandtextanalyticsTopicsPublishjobsBadRequest  %+v", 400, o.Payload)
}

func (o *PostSpeechandtextanalyticsTopicsPublishjobsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostSpeechandtextanalyticsTopicsPublishjobsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSpeechandtextanalyticsTopicsPublishjobsUnauthorized creates a PostSpeechandtextanalyticsTopicsPublishjobsUnauthorized with default headers values
func NewPostSpeechandtextanalyticsTopicsPublishjobsUnauthorized() *PostSpeechandtextanalyticsTopicsPublishjobsUnauthorized {
	return &PostSpeechandtextanalyticsTopicsPublishjobsUnauthorized{}
}

/*
PostSpeechandtextanalyticsTopicsPublishjobsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostSpeechandtextanalyticsTopicsPublishjobsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post speechandtextanalytics topics publishjobs unauthorized response has a 2xx status code
func (o *PostSpeechandtextanalyticsTopicsPublishjobsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post speechandtextanalytics topics publishjobs unauthorized response has a 3xx status code
func (o *PostSpeechandtextanalyticsTopicsPublishjobsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post speechandtextanalytics topics publishjobs unauthorized response has a 4xx status code
func (o *PostSpeechandtextanalyticsTopicsPublishjobsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post speechandtextanalytics topics publishjobs unauthorized response has a 5xx status code
func (o *PostSpeechandtextanalyticsTopicsPublishjobsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post speechandtextanalytics topics publishjobs unauthorized response a status code equal to that given
func (o *PostSpeechandtextanalyticsTopicsPublishjobsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostSpeechandtextanalyticsTopicsPublishjobsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/speechandtextanalytics/topics/publishjobs][%d] postSpeechandtextanalyticsTopicsPublishjobsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostSpeechandtextanalyticsTopicsPublishjobsUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/speechandtextanalytics/topics/publishjobs][%d] postSpeechandtextanalyticsTopicsPublishjobsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostSpeechandtextanalyticsTopicsPublishjobsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostSpeechandtextanalyticsTopicsPublishjobsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSpeechandtextanalyticsTopicsPublishjobsForbidden creates a PostSpeechandtextanalyticsTopicsPublishjobsForbidden with default headers values
func NewPostSpeechandtextanalyticsTopicsPublishjobsForbidden() *PostSpeechandtextanalyticsTopicsPublishjobsForbidden {
	return &PostSpeechandtextanalyticsTopicsPublishjobsForbidden{}
}

/*
PostSpeechandtextanalyticsTopicsPublishjobsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostSpeechandtextanalyticsTopicsPublishjobsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post speechandtextanalytics topics publishjobs forbidden response has a 2xx status code
func (o *PostSpeechandtextanalyticsTopicsPublishjobsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post speechandtextanalytics topics publishjobs forbidden response has a 3xx status code
func (o *PostSpeechandtextanalyticsTopicsPublishjobsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post speechandtextanalytics topics publishjobs forbidden response has a 4xx status code
func (o *PostSpeechandtextanalyticsTopicsPublishjobsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post speechandtextanalytics topics publishjobs forbidden response has a 5xx status code
func (o *PostSpeechandtextanalyticsTopicsPublishjobsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post speechandtextanalytics topics publishjobs forbidden response a status code equal to that given
func (o *PostSpeechandtextanalyticsTopicsPublishjobsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostSpeechandtextanalyticsTopicsPublishjobsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/speechandtextanalytics/topics/publishjobs][%d] postSpeechandtextanalyticsTopicsPublishjobsForbidden  %+v", 403, o.Payload)
}

func (o *PostSpeechandtextanalyticsTopicsPublishjobsForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/speechandtextanalytics/topics/publishjobs][%d] postSpeechandtextanalyticsTopicsPublishjobsForbidden  %+v", 403, o.Payload)
}

func (o *PostSpeechandtextanalyticsTopicsPublishjobsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostSpeechandtextanalyticsTopicsPublishjobsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSpeechandtextanalyticsTopicsPublishjobsNotFound creates a PostSpeechandtextanalyticsTopicsPublishjobsNotFound with default headers values
func NewPostSpeechandtextanalyticsTopicsPublishjobsNotFound() *PostSpeechandtextanalyticsTopicsPublishjobsNotFound {
	return &PostSpeechandtextanalyticsTopicsPublishjobsNotFound{}
}

/*
PostSpeechandtextanalyticsTopicsPublishjobsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostSpeechandtextanalyticsTopicsPublishjobsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post speechandtextanalytics topics publishjobs not found response has a 2xx status code
func (o *PostSpeechandtextanalyticsTopicsPublishjobsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post speechandtextanalytics topics publishjobs not found response has a 3xx status code
func (o *PostSpeechandtextanalyticsTopicsPublishjobsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post speechandtextanalytics topics publishjobs not found response has a 4xx status code
func (o *PostSpeechandtextanalyticsTopicsPublishjobsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post speechandtextanalytics topics publishjobs not found response has a 5xx status code
func (o *PostSpeechandtextanalyticsTopicsPublishjobsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post speechandtextanalytics topics publishjobs not found response a status code equal to that given
func (o *PostSpeechandtextanalyticsTopicsPublishjobsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostSpeechandtextanalyticsTopicsPublishjobsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/speechandtextanalytics/topics/publishjobs][%d] postSpeechandtextanalyticsTopicsPublishjobsNotFound  %+v", 404, o.Payload)
}

func (o *PostSpeechandtextanalyticsTopicsPublishjobsNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/speechandtextanalytics/topics/publishjobs][%d] postSpeechandtextanalyticsTopicsPublishjobsNotFound  %+v", 404, o.Payload)
}

func (o *PostSpeechandtextanalyticsTopicsPublishjobsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostSpeechandtextanalyticsTopicsPublishjobsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSpeechandtextanalyticsTopicsPublishjobsRequestTimeout creates a PostSpeechandtextanalyticsTopicsPublishjobsRequestTimeout with default headers values
func NewPostSpeechandtextanalyticsTopicsPublishjobsRequestTimeout() *PostSpeechandtextanalyticsTopicsPublishjobsRequestTimeout {
	return &PostSpeechandtextanalyticsTopicsPublishjobsRequestTimeout{}
}

/*
PostSpeechandtextanalyticsTopicsPublishjobsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostSpeechandtextanalyticsTopicsPublishjobsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post speechandtextanalytics topics publishjobs request timeout response has a 2xx status code
func (o *PostSpeechandtextanalyticsTopicsPublishjobsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post speechandtextanalytics topics publishjobs request timeout response has a 3xx status code
func (o *PostSpeechandtextanalyticsTopicsPublishjobsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post speechandtextanalytics topics publishjobs request timeout response has a 4xx status code
func (o *PostSpeechandtextanalyticsTopicsPublishjobsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post speechandtextanalytics topics publishjobs request timeout response has a 5xx status code
func (o *PostSpeechandtextanalyticsTopicsPublishjobsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post speechandtextanalytics topics publishjobs request timeout response a status code equal to that given
func (o *PostSpeechandtextanalyticsTopicsPublishjobsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostSpeechandtextanalyticsTopicsPublishjobsRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/speechandtextanalytics/topics/publishjobs][%d] postSpeechandtextanalyticsTopicsPublishjobsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostSpeechandtextanalyticsTopicsPublishjobsRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/speechandtextanalytics/topics/publishjobs][%d] postSpeechandtextanalyticsTopicsPublishjobsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostSpeechandtextanalyticsTopicsPublishjobsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostSpeechandtextanalyticsTopicsPublishjobsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSpeechandtextanalyticsTopicsPublishjobsRequestEntityTooLarge creates a PostSpeechandtextanalyticsTopicsPublishjobsRequestEntityTooLarge with default headers values
func NewPostSpeechandtextanalyticsTopicsPublishjobsRequestEntityTooLarge() *PostSpeechandtextanalyticsTopicsPublishjobsRequestEntityTooLarge {
	return &PostSpeechandtextanalyticsTopicsPublishjobsRequestEntityTooLarge{}
}

/*
PostSpeechandtextanalyticsTopicsPublishjobsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PostSpeechandtextanalyticsTopicsPublishjobsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post speechandtextanalytics topics publishjobs request entity too large response has a 2xx status code
func (o *PostSpeechandtextanalyticsTopicsPublishjobsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post speechandtextanalytics topics publishjobs request entity too large response has a 3xx status code
func (o *PostSpeechandtextanalyticsTopicsPublishjobsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post speechandtextanalytics topics publishjobs request entity too large response has a 4xx status code
func (o *PostSpeechandtextanalyticsTopicsPublishjobsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post speechandtextanalytics topics publishjobs request entity too large response has a 5xx status code
func (o *PostSpeechandtextanalyticsTopicsPublishjobsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post speechandtextanalytics topics publishjobs request entity too large response a status code equal to that given
func (o *PostSpeechandtextanalyticsTopicsPublishjobsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostSpeechandtextanalyticsTopicsPublishjobsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/speechandtextanalytics/topics/publishjobs][%d] postSpeechandtextanalyticsTopicsPublishjobsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostSpeechandtextanalyticsTopicsPublishjobsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/speechandtextanalytics/topics/publishjobs][%d] postSpeechandtextanalyticsTopicsPublishjobsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostSpeechandtextanalyticsTopicsPublishjobsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostSpeechandtextanalyticsTopicsPublishjobsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSpeechandtextanalyticsTopicsPublishjobsUnsupportedMediaType creates a PostSpeechandtextanalyticsTopicsPublishjobsUnsupportedMediaType with default headers values
func NewPostSpeechandtextanalyticsTopicsPublishjobsUnsupportedMediaType() *PostSpeechandtextanalyticsTopicsPublishjobsUnsupportedMediaType {
	return &PostSpeechandtextanalyticsTopicsPublishjobsUnsupportedMediaType{}
}

/*
PostSpeechandtextanalyticsTopicsPublishjobsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostSpeechandtextanalyticsTopicsPublishjobsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post speechandtextanalytics topics publishjobs unsupported media type response has a 2xx status code
func (o *PostSpeechandtextanalyticsTopicsPublishjobsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post speechandtextanalytics topics publishjobs unsupported media type response has a 3xx status code
func (o *PostSpeechandtextanalyticsTopicsPublishjobsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post speechandtextanalytics topics publishjobs unsupported media type response has a 4xx status code
func (o *PostSpeechandtextanalyticsTopicsPublishjobsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post speechandtextanalytics topics publishjobs unsupported media type response has a 5xx status code
func (o *PostSpeechandtextanalyticsTopicsPublishjobsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post speechandtextanalytics topics publishjobs unsupported media type response a status code equal to that given
func (o *PostSpeechandtextanalyticsTopicsPublishjobsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostSpeechandtextanalyticsTopicsPublishjobsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/speechandtextanalytics/topics/publishjobs][%d] postSpeechandtextanalyticsTopicsPublishjobsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostSpeechandtextanalyticsTopicsPublishjobsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/speechandtextanalytics/topics/publishjobs][%d] postSpeechandtextanalyticsTopicsPublishjobsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostSpeechandtextanalyticsTopicsPublishjobsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostSpeechandtextanalyticsTopicsPublishjobsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSpeechandtextanalyticsTopicsPublishjobsTooManyRequests creates a PostSpeechandtextanalyticsTopicsPublishjobsTooManyRequests with default headers values
func NewPostSpeechandtextanalyticsTopicsPublishjobsTooManyRequests() *PostSpeechandtextanalyticsTopicsPublishjobsTooManyRequests {
	return &PostSpeechandtextanalyticsTopicsPublishjobsTooManyRequests{}
}

/*
PostSpeechandtextanalyticsTopicsPublishjobsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostSpeechandtextanalyticsTopicsPublishjobsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post speechandtextanalytics topics publishjobs too many requests response has a 2xx status code
func (o *PostSpeechandtextanalyticsTopicsPublishjobsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post speechandtextanalytics topics publishjobs too many requests response has a 3xx status code
func (o *PostSpeechandtextanalyticsTopicsPublishjobsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post speechandtextanalytics topics publishjobs too many requests response has a 4xx status code
func (o *PostSpeechandtextanalyticsTopicsPublishjobsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post speechandtextanalytics topics publishjobs too many requests response has a 5xx status code
func (o *PostSpeechandtextanalyticsTopicsPublishjobsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post speechandtextanalytics topics publishjobs too many requests response a status code equal to that given
func (o *PostSpeechandtextanalyticsTopicsPublishjobsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostSpeechandtextanalyticsTopicsPublishjobsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/speechandtextanalytics/topics/publishjobs][%d] postSpeechandtextanalyticsTopicsPublishjobsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostSpeechandtextanalyticsTopicsPublishjobsTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/speechandtextanalytics/topics/publishjobs][%d] postSpeechandtextanalyticsTopicsPublishjobsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostSpeechandtextanalyticsTopicsPublishjobsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostSpeechandtextanalyticsTopicsPublishjobsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSpeechandtextanalyticsTopicsPublishjobsInternalServerError creates a PostSpeechandtextanalyticsTopicsPublishjobsInternalServerError with default headers values
func NewPostSpeechandtextanalyticsTopicsPublishjobsInternalServerError() *PostSpeechandtextanalyticsTopicsPublishjobsInternalServerError {
	return &PostSpeechandtextanalyticsTopicsPublishjobsInternalServerError{}
}

/*
PostSpeechandtextanalyticsTopicsPublishjobsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostSpeechandtextanalyticsTopicsPublishjobsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post speechandtextanalytics topics publishjobs internal server error response has a 2xx status code
func (o *PostSpeechandtextanalyticsTopicsPublishjobsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post speechandtextanalytics topics publishjobs internal server error response has a 3xx status code
func (o *PostSpeechandtextanalyticsTopicsPublishjobsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post speechandtextanalytics topics publishjobs internal server error response has a 4xx status code
func (o *PostSpeechandtextanalyticsTopicsPublishjobsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post speechandtextanalytics topics publishjobs internal server error response has a 5xx status code
func (o *PostSpeechandtextanalyticsTopicsPublishjobsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post speechandtextanalytics topics publishjobs internal server error response a status code equal to that given
func (o *PostSpeechandtextanalyticsTopicsPublishjobsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostSpeechandtextanalyticsTopicsPublishjobsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/speechandtextanalytics/topics/publishjobs][%d] postSpeechandtextanalyticsTopicsPublishjobsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostSpeechandtextanalyticsTopicsPublishjobsInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/speechandtextanalytics/topics/publishjobs][%d] postSpeechandtextanalyticsTopicsPublishjobsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostSpeechandtextanalyticsTopicsPublishjobsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostSpeechandtextanalyticsTopicsPublishjobsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSpeechandtextanalyticsTopicsPublishjobsServiceUnavailable creates a PostSpeechandtextanalyticsTopicsPublishjobsServiceUnavailable with default headers values
func NewPostSpeechandtextanalyticsTopicsPublishjobsServiceUnavailable() *PostSpeechandtextanalyticsTopicsPublishjobsServiceUnavailable {
	return &PostSpeechandtextanalyticsTopicsPublishjobsServiceUnavailable{}
}

/*
PostSpeechandtextanalyticsTopicsPublishjobsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostSpeechandtextanalyticsTopicsPublishjobsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post speechandtextanalytics topics publishjobs service unavailable response has a 2xx status code
func (o *PostSpeechandtextanalyticsTopicsPublishjobsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post speechandtextanalytics topics publishjobs service unavailable response has a 3xx status code
func (o *PostSpeechandtextanalyticsTopicsPublishjobsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post speechandtextanalytics topics publishjobs service unavailable response has a 4xx status code
func (o *PostSpeechandtextanalyticsTopicsPublishjobsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post speechandtextanalytics topics publishjobs service unavailable response has a 5xx status code
func (o *PostSpeechandtextanalyticsTopicsPublishjobsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post speechandtextanalytics topics publishjobs service unavailable response a status code equal to that given
func (o *PostSpeechandtextanalyticsTopicsPublishjobsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostSpeechandtextanalyticsTopicsPublishjobsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/speechandtextanalytics/topics/publishjobs][%d] postSpeechandtextanalyticsTopicsPublishjobsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostSpeechandtextanalyticsTopicsPublishjobsServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/speechandtextanalytics/topics/publishjobs][%d] postSpeechandtextanalyticsTopicsPublishjobsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostSpeechandtextanalyticsTopicsPublishjobsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostSpeechandtextanalyticsTopicsPublishjobsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSpeechandtextanalyticsTopicsPublishjobsGatewayTimeout creates a PostSpeechandtextanalyticsTopicsPublishjobsGatewayTimeout with default headers values
func NewPostSpeechandtextanalyticsTopicsPublishjobsGatewayTimeout() *PostSpeechandtextanalyticsTopicsPublishjobsGatewayTimeout {
	return &PostSpeechandtextanalyticsTopicsPublishjobsGatewayTimeout{}
}

/*
PostSpeechandtextanalyticsTopicsPublishjobsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostSpeechandtextanalyticsTopicsPublishjobsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post speechandtextanalytics topics publishjobs gateway timeout response has a 2xx status code
func (o *PostSpeechandtextanalyticsTopicsPublishjobsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post speechandtextanalytics topics publishjobs gateway timeout response has a 3xx status code
func (o *PostSpeechandtextanalyticsTopicsPublishjobsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post speechandtextanalytics topics publishjobs gateway timeout response has a 4xx status code
func (o *PostSpeechandtextanalyticsTopicsPublishjobsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post speechandtextanalytics topics publishjobs gateway timeout response has a 5xx status code
func (o *PostSpeechandtextanalyticsTopicsPublishjobsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post speechandtextanalytics topics publishjobs gateway timeout response a status code equal to that given
func (o *PostSpeechandtextanalyticsTopicsPublishjobsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostSpeechandtextanalyticsTopicsPublishjobsGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/speechandtextanalytics/topics/publishjobs][%d] postSpeechandtextanalyticsTopicsPublishjobsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostSpeechandtextanalyticsTopicsPublishjobsGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/speechandtextanalytics/topics/publishjobs][%d] postSpeechandtextanalyticsTopicsPublishjobsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostSpeechandtextanalyticsTopicsPublishjobsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostSpeechandtextanalyticsTopicsPublishjobsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
