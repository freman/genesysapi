// Code generated by go-swagger; DO NOT EDIT.

package speech_and_text_analytics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostSpeechandtextanalyticsProgramsPublishjobsReader is a Reader for the PostSpeechandtextanalyticsProgramsPublishjobs structure.
type PostSpeechandtextanalyticsProgramsPublishjobsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostSpeechandtextanalyticsProgramsPublishjobsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostSpeechandtextanalyticsProgramsPublishjobsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostSpeechandtextanalyticsProgramsPublishjobsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostSpeechandtextanalyticsProgramsPublishjobsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostSpeechandtextanalyticsProgramsPublishjobsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostSpeechandtextanalyticsProgramsPublishjobsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostSpeechandtextanalyticsProgramsPublishjobsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostSpeechandtextanalyticsProgramsPublishjobsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostSpeechandtextanalyticsProgramsPublishjobsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostSpeechandtextanalyticsProgramsPublishjobsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostSpeechandtextanalyticsProgramsPublishjobsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostSpeechandtextanalyticsProgramsPublishjobsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostSpeechandtextanalyticsProgramsPublishjobsOK creates a PostSpeechandtextanalyticsProgramsPublishjobsOK with default headers values
func NewPostSpeechandtextanalyticsProgramsPublishjobsOK() *PostSpeechandtextanalyticsProgramsPublishjobsOK {
	return &PostSpeechandtextanalyticsProgramsPublishjobsOK{}
}

/*PostSpeechandtextanalyticsProgramsPublishjobsOK handles this case with default header values.

successful operation
*/
type PostSpeechandtextanalyticsProgramsPublishjobsOK struct {
	Payload *models.ProgramJob
}

func (o *PostSpeechandtextanalyticsProgramsPublishjobsOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/speechandtextanalytics/programs/publishjobs][%d] postSpeechandtextanalyticsProgramsPublishjobsOK  %+v", 200, o.Payload)
}

func (o *PostSpeechandtextanalyticsProgramsPublishjobsOK) GetPayload() *models.ProgramJob {
	return o.Payload
}

func (o *PostSpeechandtextanalyticsProgramsPublishjobsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProgramJob)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSpeechandtextanalyticsProgramsPublishjobsBadRequest creates a PostSpeechandtextanalyticsProgramsPublishjobsBadRequest with default headers values
func NewPostSpeechandtextanalyticsProgramsPublishjobsBadRequest() *PostSpeechandtextanalyticsProgramsPublishjobsBadRequest {
	return &PostSpeechandtextanalyticsProgramsPublishjobsBadRequest{}
}

/*PostSpeechandtextanalyticsProgramsPublishjobsBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostSpeechandtextanalyticsProgramsPublishjobsBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PostSpeechandtextanalyticsProgramsPublishjobsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/speechandtextanalytics/programs/publishjobs][%d] postSpeechandtextanalyticsProgramsPublishjobsBadRequest  %+v", 400, o.Payload)
}

func (o *PostSpeechandtextanalyticsProgramsPublishjobsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostSpeechandtextanalyticsProgramsPublishjobsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSpeechandtextanalyticsProgramsPublishjobsUnauthorized creates a PostSpeechandtextanalyticsProgramsPublishjobsUnauthorized with default headers values
func NewPostSpeechandtextanalyticsProgramsPublishjobsUnauthorized() *PostSpeechandtextanalyticsProgramsPublishjobsUnauthorized {
	return &PostSpeechandtextanalyticsProgramsPublishjobsUnauthorized{}
}

/*PostSpeechandtextanalyticsProgramsPublishjobsUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PostSpeechandtextanalyticsProgramsPublishjobsUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PostSpeechandtextanalyticsProgramsPublishjobsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/speechandtextanalytics/programs/publishjobs][%d] postSpeechandtextanalyticsProgramsPublishjobsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostSpeechandtextanalyticsProgramsPublishjobsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostSpeechandtextanalyticsProgramsPublishjobsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSpeechandtextanalyticsProgramsPublishjobsForbidden creates a PostSpeechandtextanalyticsProgramsPublishjobsForbidden with default headers values
func NewPostSpeechandtextanalyticsProgramsPublishjobsForbidden() *PostSpeechandtextanalyticsProgramsPublishjobsForbidden {
	return &PostSpeechandtextanalyticsProgramsPublishjobsForbidden{}
}

/*PostSpeechandtextanalyticsProgramsPublishjobsForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PostSpeechandtextanalyticsProgramsPublishjobsForbidden struct {
	Payload *models.ErrorBody
}

func (o *PostSpeechandtextanalyticsProgramsPublishjobsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/speechandtextanalytics/programs/publishjobs][%d] postSpeechandtextanalyticsProgramsPublishjobsForbidden  %+v", 403, o.Payload)
}

func (o *PostSpeechandtextanalyticsProgramsPublishjobsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostSpeechandtextanalyticsProgramsPublishjobsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSpeechandtextanalyticsProgramsPublishjobsNotFound creates a PostSpeechandtextanalyticsProgramsPublishjobsNotFound with default headers values
func NewPostSpeechandtextanalyticsProgramsPublishjobsNotFound() *PostSpeechandtextanalyticsProgramsPublishjobsNotFound {
	return &PostSpeechandtextanalyticsProgramsPublishjobsNotFound{}
}

/*PostSpeechandtextanalyticsProgramsPublishjobsNotFound handles this case with default header values.

The requested resource was not found.
*/
type PostSpeechandtextanalyticsProgramsPublishjobsNotFound struct {
	Payload *models.ErrorBody
}

func (o *PostSpeechandtextanalyticsProgramsPublishjobsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/speechandtextanalytics/programs/publishjobs][%d] postSpeechandtextanalyticsProgramsPublishjobsNotFound  %+v", 404, o.Payload)
}

func (o *PostSpeechandtextanalyticsProgramsPublishjobsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostSpeechandtextanalyticsProgramsPublishjobsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSpeechandtextanalyticsProgramsPublishjobsRequestEntityTooLarge creates a PostSpeechandtextanalyticsProgramsPublishjobsRequestEntityTooLarge with default headers values
func NewPostSpeechandtextanalyticsProgramsPublishjobsRequestEntityTooLarge() *PostSpeechandtextanalyticsProgramsPublishjobsRequestEntityTooLarge {
	return &PostSpeechandtextanalyticsProgramsPublishjobsRequestEntityTooLarge{}
}

/*PostSpeechandtextanalyticsProgramsPublishjobsRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type PostSpeechandtextanalyticsProgramsPublishjobsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PostSpeechandtextanalyticsProgramsPublishjobsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/speechandtextanalytics/programs/publishjobs][%d] postSpeechandtextanalyticsProgramsPublishjobsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostSpeechandtextanalyticsProgramsPublishjobsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostSpeechandtextanalyticsProgramsPublishjobsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSpeechandtextanalyticsProgramsPublishjobsUnsupportedMediaType creates a PostSpeechandtextanalyticsProgramsPublishjobsUnsupportedMediaType with default headers values
func NewPostSpeechandtextanalyticsProgramsPublishjobsUnsupportedMediaType() *PostSpeechandtextanalyticsProgramsPublishjobsUnsupportedMediaType {
	return &PostSpeechandtextanalyticsProgramsPublishjobsUnsupportedMediaType{}
}

/*PostSpeechandtextanalyticsProgramsPublishjobsUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostSpeechandtextanalyticsProgramsPublishjobsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PostSpeechandtextanalyticsProgramsPublishjobsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/speechandtextanalytics/programs/publishjobs][%d] postSpeechandtextanalyticsProgramsPublishjobsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostSpeechandtextanalyticsProgramsPublishjobsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostSpeechandtextanalyticsProgramsPublishjobsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSpeechandtextanalyticsProgramsPublishjobsTooManyRequests creates a PostSpeechandtextanalyticsProgramsPublishjobsTooManyRequests with default headers values
func NewPostSpeechandtextanalyticsProgramsPublishjobsTooManyRequests() *PostSpeechandtextanalyticsProgramsPublishjobsTooManyRequests {
	return &PostSpeechandtextanalyticsProgramsPublishjobsTooManyRequests{}
}

/*PostSpeechandtextanalyticsProgramsPublishjobsTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type PostSpeechandtextanalyticsProgramsPublishjobsTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PostSpeechandtextanalyticsProgramsPublishjobsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/speechandtextanalytics/programs/publishjobs][%d] postSpeechandtextanalyticsProgramsPublishjobsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostSpeechandtextanalyticsProgramsPublishjobsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostSpeechandtextanalyticsProgramsPublishjobsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSpeechandtextanalyticsProgramsPublishjobsInternalServerError creates a PostSpeechandtextanalyticsProgramsPublishjobsInternalServerError with default headers values
func NewPostSpeechandtextanalyticsProgramsPublishjobsInternalServerError() *PostSpeechandtextanalyticsProgramsPublishjobsInternalServerError {
	return &PostSpeechandtextanalyticsProgramsPublishjobsInternalServerError{}
}

/*PostSpeechandtextanalyticsProgramsPublishjobsInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostSpeechandtextanalyticsProgramsPublishjobsInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PostSpeechandtextanalyticsProgramsPublishjobsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/speechandtextanalytics/programs/publishjobs][%d] postSpeechandtextanalyticsProgramsPublishjobsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostSpeechandtextanalyticsProgramsPublishjobsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostSpeechandtextanalyticsProgramsPublishjobsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSpeechandtextanalyticsProgramsPublishjobsServiceUnavailable creates a PostSpeechandtextanalyticsProgramsPublishjobsServiceUnavailable with default headers values
func NewPostSpeechandtextanalyticsProgramsPublishjobsServiceUnavailable() *PostSpeechandtextanalyticsProgramsPublishjobsServiceUnavailable {
	return &PostSpeechandtextanalyticsProgramsPublishjobsServiceUnavailable{}
}

/*PostSpeechandtextanalyticsProgramsPublishjobsServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostSpeechandtextanalyticsProgramsPublishjobsServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PostSpeechandtextanalyticsProgramsPublishjobsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/speechandtextanalytics/programs/publishjobs][%d] postSpeechandtextanalyticsProgramsPublishjobsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostSpeechandtextanalyticsProgramsPublishjobsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostSpeechandtextanalyticsProgramsPublishjobsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSpeechandtextanalyticsProgramsPublishjobsGatewayTimeout creates a PostSpeechandtextanalyticsProgramsPublishjobsGatewayTimeout with default headers values
func NewPostSpeechandtextanalyticsProgramsPublishjobsGatewayTimeout() *PostSpeechandtextanalyticsProgramsPublishjobsGatewayTimeout {
	return &PostSpeechandtextanalyticsProgramsPublishjobsGatewayTimeout{}
}

/*PostSpeechandtextanalyticsProgramsPublishjobsGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PostSpeechandtextanalyticsProgramsPublishjobsGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostSpeechandtextanalyticsProgramsPublishjobsGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/speechandtextanalytics/programs/publishjobs][%d] postSpeechandtextanalyticsProgramsPublishjobsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostSpeechandtextanalyticsProgramsPublishjobsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostSpeechandtextanalyticsProgramsPublishjobsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
