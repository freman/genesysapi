// Code generated by go-swagger; DO NOT EDIT.

package speech_and_text_analytics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetSpeechandtextanalyticsProgramsMappingsReader is a Reader for the GetSpeechandtextanalyticsProgramsMappings structure.
type GetSpeechandtextanalyticsProgramsMappingsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSpeechandtextanalyticsProgramsMappingsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSpeechandtextanalyticsProgramsMappingsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetSpeechandtextanalyticsProgramsMappingsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetSpeechandtextanalyticsProgramsMappingsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetSpeechandtextanalyticsProgramsMappingsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSpeechandtextanalyticsProgramsMappingsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetSpeechandtextanalyticsProgramsMappingsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetSpeechandtextanalyticsProgramsMappingsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetSpeechandtextanalyticsProgramsMappingsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetSpeechandtextanalyticsProgramsMappingsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSpeechandtextanalyticsProgramsMappingsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetSpeechandtextanalyticsProgramsMappingsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetSpeechandtextanalyticsProgramsMappingsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetSpeechandtextanalyticsProgramsMappingsOK creates a GetSpeechandtextanalyticsProgramsMappingsOK with default headers values
func NewGetSpeechandtextanalyticsProgramsMappingsOK() *GetSpeechandtextanalyticsProgramsMappingsOK {
	return &GetSpeechandtextanalyticsProgramsMappingsOK{}
}

/*
GetSpeechandtextanalyticsProgramsMappingsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetSpeechandtextanalyticsProgramsMappingsOK struct {
	Payload *models.ProgramsMappingsEntityListing
}

// IsSuccess returns true when this get speechandtextanalytics programs mappings o k response has a 2xx status code
func (o *GetSpeechandtextanalyticsProgramsMappingsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get speechandtextanalytics programs mappings o k response has a 3xx status code
func (o *GetSpeechandtextanalyticsProgramsMappingsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics programs mappings o k response has a 4xx status code
func (o *GetSpeechandtextanalyticsProgramsMappingsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get speechandtextanalytics programs mappings o k response has a 5xx status code
func (o *GetSpeechandtextanalyticsProgramsMappingsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get speechandtextanalytics programs mappings o k response a status code equal to that given
func (o *GetSpeechandtextanalyticsProgramsMappingsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetSpeechandtextanalyticsProgramsMappingsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/mappings][%d] getSpeechandtextanalyticsProgramsMappingsOK  %+v", 200, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsMappingsOK) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/mappings][%d] getSpeechandtextanalyticsProgramsMappingsOK  %+v", 200, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsMappingsOK) GetPayload() *models.ProgramsMappingsEntityListing {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramsMappingsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProgramsMappingsEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramsMappingsBadRequest creates a GetSpeechandtextanalyticsProgramsMappingsBadRequest with default headers values
func NewGetSpeechandtextanalyticsProgramsMappingsBadRequest() *GetSpeechandtextanalyticsProgramsMappingsBadRequest {
	return &GetSpeechandtextanalyticsProgramsMappingsBadRequest{}
}

/*
GetSpeechandtextanalyticsProgramsMappingsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetSpeechandtextanalyticsProgramsMappingsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics programs mappings bad request response has a 2xx status code
func (o *GetSpeechandtextanalyticsProgramsMappingsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics programs mappings bad request response has a 3xx status code
func (o *GetSpeechandtextanalyticsProgramsMappingsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics programs mappings bad request response has a 4xx status code
func (o *GetSpeechandtextanalyticsProgramsMappingsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get speechandtextanalytics programs mappings bad request response has a 5xx status code
func (o *GetSpeechandtextanalyticsProgramsMappingsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get speechandtextanalytics programs mappings bad request response a status code equal to that given
func (o *GetSpeechandtextanalyticsProgramsMappingsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetSpeechandtextanalyticsProgramsMappingsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/mappings][%d] getSpeechandtextanalyticsProgramsMappingsBadRequest  %+v", 400, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsMappingsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/mappings][%d] getSpeechandtextanalyticsProgramsMappingsBadRequest  %+v", 400, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsMappingsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramsMappingsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramsMappingsUnauthorized creates a GetSpeechandtextanalyticsProgramsMappingsUnauthorized with default headers values
func NewGetSpeechandtextanalyticsProgramsMappingsUnauthorized() *GetSpeechandtextanalyticsProgramsMappingsUnauthorized {
	return &GetSpeechandtextanalyticsProgramsMappingsUnauthorized{}
}

/*
GetSpeechandtextanalyticsProgramsMappingsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetSpeechandtextanalyticsProgramsMappingsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics programs mappings unauthorized response has a 2xx status code
func (o *GetSpeechandtextanalyticsProgramsMappingsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics programs mappings unauthorized response has a 3xx status code
func (o *GetSpeechandtextanalyticsProgramsMappingsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics programs mappings unauthorized response has a 4xx status code
func (o *GetSpeechandtextanalyticsProgramsMappingsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get speechandtextanalytics programs mappings unauthorized response has a 5xx status code
func (o *GetSpeechandtextanalyticsProgramsMappingsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get speechandtextanalytics programs mappings unauthorized response a status code equal to that given
func (o *GetSpeechandtextanalyticsProgramsMappingsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetSpeechandtextanalyticsProgramsMappingsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/mappings][%d] getSpeechandtextanalyticsProgramsMappingsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsMappingsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/mappings][%d] getSpeechandtextanalyticsProgramsMappingsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsMappingsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramsMappingsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramsMappingsForbidden creates a GetSpeechandtextanalyticsProgramsMappingsForbidden with default headers values
func NewGetSpeechandtextanalyticsProgramsMappingsForbidden() *GetSpeechandtextanalyticsProgramsMappingsForbidden {
	return &GetSpeechandtextanalyticsProgramsMappingsForbidden{}
}

/*
GetSpeechandtextanalyticsProgramsMappingsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetSpeechandtextanalyticsProgramsMappingsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics programs mappings forbidden response has a 2xx status code
func (o *GetSpeechandtextanalyticsProgramsMappingsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics programs mappings forbidden response has a 3xx status code
func (o *GetSpeechandtextanalyticsProgramsMappingsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics programs mappings forbidden response has a 4xx status code
func (o *GetSpeechandtextanalyticsProgramsMappingsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get speechandtextanalytics programs mappings forbidden response has a 5xx status code
func (o *GetSpeechandtextanalyticsProgramsMappingsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get speechandtextanalytics programs mappings forbidden response a status code equal to that given
func (o *GetSpeechandtextanalyticsProgramsMappingsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetSpeechandtextanalyticsProgramsMappingsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/mappings][%d] getSpeechandtextanalyticsProgramsMappingsForbidden  %+v", 403, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsMappingsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/mappings][%d] getSpeechandtextanalyticsProgramsMappingsForbidden  %+v", 403, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsMappingsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramsMappingsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramsMappingsNotFound creates a GetSpeechandtextanalyticsProgramsMappingsNotFound with default headers values
func NewGetSpeechandtextanalyticsProgramsMappingsNotFound() *GetSpeechandtextanalyticsProgramsMappingsNotFound {
	return &GetSpeechandtextanalyticsProgramsMappingsNotFound{}
}

/*
GetSpeechandtextanalyticsProgramsMappingsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetSpeechandtextanalyticsProgramsMappingsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics programs mappings not found response has a 2xx status code
func (o *GetSpeechandtextanalyticsProgramsMappingsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics programs mappings not found response has a 3xx status code
func (o *GetSpeechandtextanalyticsProgramsMappingsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics programs mappings not found response has a 4xx status code
func (o *GetSpeechandtextanalyticsProgramsMappingsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get speechandtextanalytics programs mappings not found response has a 5xx status code
func (o *GetSpeechandtextanalyticsProgramsMappingsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get speechandtextanalytics programs mappings not found response a status code equal to that given
func (o *GetSpeechandtextanalyticsProgramsMappingsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetSpeechandtextanalyticsProgramsMappingsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/mappings][%d] getSpeechandtextanalyticsProgramsMappingsNotFound  %+v", 404, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsMappingsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/mappings][%d] getSpeechandtextanalyticsProgramsMappingsNotFound  %+v", 404, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsMappingsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramsMappingsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramsMappingsRequestTimeout creates a GetSpeechandtextanalyticsProgramsMappingsRequestTimeout with default headers values
func NewGetSpeechandtextanalyticsProgramsMappingsRequestTimeout() *GetSpeechandtextanalyticsProgramsMappingsRequestTimeout {
	return &GetSpeechandtextanalyticsProgramsMappingsRequestTimeout{}
}

/*
GetSpeechandtextanalyticsProgramsMappingsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetSpeechandtextanalyticsProgramsMappingsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics programs mappings request timeout response has a 2xx status code
func (o *GetSpeechandtextanalyticsProgramsMappingsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics programs mappings request timeout response has a 3xx status code
func (o *GetSpeechandtextanalyticsProgramsMappingsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics programs mappings request timeout response has a 4xx status code
func (o *GetSpeechandtextanalyticsProgramsMappingsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get speechandtextanalytics programs mappings request timeout response has a 5xx status code
func (o *GetSpeechandtextanalyticsProgramsMappingsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get speechandtextanalytics programs mappings request timeout response a status code equal to that given
func (o *GetSpeechandtextanalyticsProgramsMappingsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetSpeechandtextanalyticsProgramsMappingsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/mappings][%d] getSpeechandtextanalyticsProgramsMappingsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsMappingsRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/mappings][%d] getSpeechandtextanalyticsProgramsMappingsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsMappingsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramsMappingsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramsMappingsRequestEntityTooLarge creates a GetSpeechandtextanalyticsProgramsMappingsRequestEntityTooLarge with default headers values
func NewGetSpeechandtextanalyticsProgramsMappingsRequestEntityTooLarge() *GetSpeechandtextanalyticsProgramsMappingsRequestEntityTooLarge {
	return &GetSpeechandtextanalyticsProgramsMappingsRequestEntityTooLarge{}
}

/*
GetSpeechandtextanalyticsProgramsMappingsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetSpeechandtextanalyticsProgramsMappingsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics programs mappings request entity too large response has a 2xx status code
func (o *GetSpeechandtextanalyticsProgramsMappingsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics programs mappings request entity too large response has a 3xx status code
func (o *GetSpeechandtextanalyticsProgramsMappingsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics programs mappings request entity too large response has a 4xx status code
func (o *GetSpeechandtextanalyticsProgramsMappingsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get speechandtextanalytics programs mappings request entity too large response has a 5xx status code
func (o *GetSpeechandtextanalyticsProgramsMappingsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get speechandtextanalytics programs mappings request entity too large response a status code equal to that given
func (o *GetSpeechandtextanalyticsProgramsMappingsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetSpeechandtextanalyticsProgramsMappingsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/mappings][%d] getSpeechandtextanalyticsProgramsMappingsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsMappingsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/mappings][%d] getSpeechandtextanalyticsProgramsMappingsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsMappingsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramsMappingsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramsMappingsUnsupportedMediaType creates a GetSpeechandtextanalyticsProgramsMappingsUnsupportedMediaType with default headers values
func NewGetSpeechandtextanalyticsProgramsMappingsUnsupportedMediaType() *GetSpeechandtextanalyticsProgramsMappingsUnsupportedMediaType {
	return &GetSpeechandtextanalyticsProgramsMappingsUnsupportedMediaType{}
}

/*
GetSpeechandtextanalyticsProgramsMappingsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetSpeechandtextanalyticsProgramsMappingsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics programs mappings unsupported media type response has a 2xx status code
func (o *GetSpeechandtextanalyticsProgramsMappingsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics programs mappings unsupported media type response has a 3xx status code
func (o *GetSpeechandtextanalyticsProgramsMappingsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics programs mappings unsupported media type response has a 4xx status code
func (o *GetSpeechandtextanalyticsProgramsMappingsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get speechandtextanalytics programs mappings unsupported media type response has a 5xx status code
func (o *GetSpeechandtextanalyticsProgramsMappingsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get speechandtextanalytics programs mappings unsupported media type response a status code equal to that given
func (o *GetSpeechandtextanalyticsProgramsMappingsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetSpeechandtextanalyticsProgramsMappingsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/mappings][%d] getSpeechandtextanalyticsProgramsMappingsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsMappingsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/mappings][%d] getSpeechandtextanalyticsProgramsMappingsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsMappingsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramsMappingsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramsMappingsTooManyRequests creates a GetSpeechandtextanalyticsProgramsMappingsTooManyRequests with default headers values
func NewGetSpeechandtextanalyticsProgramsMappingsTooManyRequests() *GetSpeechandtextanalyticsProgramsMappingsTooManyRequests {
	return &GetSpeechandtextanalyticsProgramsMappingsTooManyRequests{}
}

/*
GetSpeechandtextanalyticsProgramsMappingsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetSpeechandtextanalyticsProgramsMappingsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics programs mappings too many requests response has a 2xx status code
func (o *GetSpeechandtextanalyticsProgramsMappingsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics programs mappings too many requests response has a 3xx status code
func (o *GetSpeechandtextanalyticsProgramsMappingsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics programs mappings too many requests response has a 4xx status code
func (o *GetSpeechandtextanalyticsProgramsMappingsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get speechandtextanalytics programs mappings too many requests response has a 5xx status code
func (o *GetSpeechandtextanalyticsProgramsMappingsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get speechandtextanalytics programs mappings too many requests response a status code equal to that given
func (o *GetSpeechandtextanalyticsProgramsMappingsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetSpeechandtextanalyticsProgramsMappingsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/mappings][%d] getSpeechandtextanalyticsProgramsMappingsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsMappingsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/mappings][%d] getSpeechandtextanalyticsProgramsMappingsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsMappingsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramsMappingsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramsMappingsInternalServerError creates a GetSpeechandtextanalyticsProgramsMappingsInternalServerError with default headers values
func NewGetSpeechandtextanalyticsProgramsMappingsInternalServerError() *GetSpeechandtextanalyticsProgramsMappingsInternalServerError {
	return &GetSpeechandtextanalyticsProgramsMappingsInternalServerError{}
}

/*
GetSpeechandtextanalyticsProgramsMappingsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetSpeechandtextanalyticsProgramsMappingsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics programs mappings internal server error response has a 2xx status code
func (o *GetSpeechandtextanalyticsProgramsMappingsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics programs mappings internal server error response has a 3xx status code
func (o *GetSpeechandtextanalyticsProgramsMappingsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics programs mappings internal server error response has a 4xx status code
func (o *GetSpeechandtextanalyticsProgramsMappingsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get speechandtextanalytics programs mappings internal server error response has a 5xx status code
func (o *GetSpeechandtextanalyticsProgramsMappingsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get speechandtextanalytics programs mappings internal server error response a status code equal to that given
func (o *GetSpeechandtextanalyticsProgramsMappingsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetSpeechandtextanalyticsProgramsMappingsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/mappings][%d] getSpeechandtextanalyticsProgramsMappingsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsMappingsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/mappings][%d] getSpeechandtextanalyticsProgramsMappingsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsMappingsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramsMappingsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramsMappingsServiceUnavailable creates a GetSpeechandtextanalyticsProgramsMappingsServiceUnavailable with default headers values
func NewGetSpeechandtextanalyticsProgramsMappingsServiceUnavailable() *GetSpeechandtextanalyticsProgramsMappingsServiceUnavailable {
	return &GetSpeechandtextanalyticsProgramsMappingsServiceUnavailable{}
}

/*
GetSpeechandtextanalyticsProgramsMappingsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetSpeechandtextanalyticsProgramsMappingsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics programs mappings service unavailable response has a 2xx status code
func (o *GetSpeechandtextanalyticsProgramsMappingsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics programs mappings service unavailable response has a 3xx status code
func (o *GetSpeechandtextanalyticsProgramsMappingsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics programs mappings service unavailable response has a 4xx status code
func (o *GetSpeechandtextanalyticsProgramsMappingsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get speechandtextanalytics programs mappings service unavailable response has a 5xx status code
func (o *GetSpeechandtextanalyticsProgramsMappingsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get speechandtextanalytics programs mappings service unavailable response a status code equal to that given
func (o *GetSpeechandtextanalyticsProgramsMappingsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetSpeechandtextanalyticsProgramsMappingsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/mappings][%d] getSpeechandtextanalyticsProgramsMappingsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsMappingsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/mappings][%d] getSpeechandtextanalyticsProgramsMappingsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsMappingsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramsMappingsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsProgramsMappingsGatewayTimeout creates a GetSpeechandtextanalyticsProgramsMappingsGatewayTimeout with default headers values
func NewGetSpeechandtextanalyticsProgramsMappingsGatewayTimeout() *GetSpeechandtextanalyticsProgramsMappingsGatewayTimeout {
	return &GetSpeechandtextanalyticsProgramsMappingsGatewayTimeout{}
}

/*
GetSpeechandtextanalyticsProgramsMappingsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetSpeechandtextanalyticsProgramsMappingsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics programs mappings gateway timeout response has a 2xx status code
func (o *GetSpeechandtextanalyticsProgramsMappingsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics programs mappings gateway timeout response has a 3xx status code
func (o *GetSpeechandtextanalyticsProgramsMappingsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics programs mappings gateway timeout response has a 4xx status code
func (o *GetSpeechandtextanalyticsProgramsMappingsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get speechandtextanalytics programs mappings gateway timeout response has a 5xx status code
func (o *GetSpeechandtextanalyticsProgramsMappingsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get speechandtextanalytics programs mappings gateway timeout response a status code equal to that given
func (o *GetSpeechandtextanalyticsProgramsMappingsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetSpeechandtextanalyticsProgramsMappingsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/mappings][%d] getSpeechandtextanalyticsProgramsMappingsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsMappingsGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/programs/mappings][%d] getSpeechandtextanalyticsProgramsMappingsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetSpeechandtextanalyticsProgramsMappingsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsProgramsMappingsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
