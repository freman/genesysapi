// Code generated by go-swagger; DO NOT EDIT.

package speech_and_text_analytics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetSpeechandtextanalyticsConversationCommunicationTranscripturlReader is a Reader for the GetSpeechandtextanalyticsConversationCommunicationTranscripturl structure.
type GetSpeechandtextanalyticsConversationCommunicationTranscripturlReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSpeechandtextanalyticsConversationCommunicationTranscripturlOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetSpeechandtextanalyticsConversationCommunicationTranscripturlBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetSpeechandtextanalyticsConversationCommunicationTranscripturlUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetSpeechandtextanalyticsConversationCommunicationTranscripturlForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSpeechandtextanalyticsConversationCommunicationTranscripturlNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetSpeechandtextanalyticsConversationCommunicationTranscripturlRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetSpeechandtextanalyticsConversationCommunicationTranscripturlRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetSpeechandtextanalyticsConversationCommunicationTranscripturlUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetSpeechandtextanalyticsConversationCommunicationTranscripturlTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSpeechandtextanalyticsConversationCommunicationTranscripturlInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetSpeechandtextanalyticsConversationCommunicationTranscripturlServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetSpeechandtextanalyticsConversationCommunicationTranscripturlGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetSpeechandtextanalyticsConversationCommunicationTranscripturlOK creates a GetSpeechandtextanalyticsConversationCommunicationTranscripturlOK with default headers values
func NewGetSpeechandtextanalyticsConversationCommunicationTranscripturlOK() *GetSpeechandtextanalyticsConversationCommunicationTranscripturlOK {
	return &GetSpeechandtextanalyticsConversationCommunicationTranscripturlOK{}
}

/*
GetSpeechandtextanalyticsConversationCommunicationTranscripturlOK describes a response with status code 200, with default header values.

successful operation
*/
type GetSpeechandtextanalyticsConversationCommunicationTranscripturlOK struct {
	Payload *models.TranscriptURL
}

// IsSuccess returns true when this get speechandtextanalytics conversation communication transcripturl o k response has a 2xx status code
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get speechandtextanalytics conversation communication transcripturl o k response has a 3xx status code
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics conversation communication transcripturl o k response has a 4xx status code
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get speechandtextanalytics conversation communication transcripturl o k response has a 5xx status code
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get speechandtextanalytics conversation communication transcripturl o k response a status code equal to that given
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/conversations/{conversationId}/communications/{communicationId}/transcripturl][%d] getSpeechandtextanalyticsConversationCommunicationTranscripturlOK  %+v", 200, o.Payload)
}

func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlOK) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/conversations/{conversationId}/communications/{communicationId}/transcripturl][%d] getSpeechandtextanalyticsConversationCommunicationTranscripturlOK  %+v", 200, o.Payload)
}

func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlOK) GetPayload() *models.TranscriptURL {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TranscriptURL)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsConversationCommunicationTranscripturlBadRequest creates a GetSpeechandtextanalyticsConversationCommunicationTranscripturlBadRequest with default headers values
func NewGetSpeechandtextanalyticsConversationCommunicationTranscripturlBadRequest() *GetSpeechandtextanalyticsConversationCommunicationTranscripturlBadRequest {
	return &GetSpeechandtextanalyticsConversationCommunicationTranscripturlBadRequest{}
}

/*
GetSpeechandtextanalyticsConversationCommunicationTranscripturlBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetSpeechandtextanalyticsConversationCommunicationTranscripturlBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics conversation communication transcripturl bad request response has a 2xx status code
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics conversation communication transcripturl bad request response has a 3xx status code
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics conversation communication transcripturl bad request response has a 4xx status code
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get speechandtextanalytics conversation communication transcripturl bad request response has a 5xx status code
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get speechandtextanalytics conversation communication transcripturl bad request response a status code equal to that given
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/conversations/{conversationId}/communications/{communicationId}/transcripturl][%d] getSpeechandtextanalyticsConversationCommunicationTranscripturlBadRequest  %+v", 400, o.Payload)
}

func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/conversations/{conversationId}/communications/{communicationId}/transcripturl][%d] getSpeechandtextanalyticsConversationCommunicationTranscripturlBadRequest  %+v", 400, o.Payload)
}

func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsConversationCommunicationTranscripturlUnauthorized creates a GetSpeechandtextanalyticsConversationCommunicationTranscripturlUnauthorized with default headers values
func NewGetSpeechandtextanalyticsConversationCommunicationTranscripturlUnauthorized() *GetSpeechandtextanalyticsConversationCommunicationTranscripturlUnauthorized {
	return &GetSpeechandtextanalyticsConversationCommunicationTranscripturlUnauthorized{}
}

/*
GetSpeechandtextanalyticsConversationCommunicationTranscripturlUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetSpeechandtextanalyticsConversationCommunicationTranscripturlUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics conversation communication transcripturl unauthorized response has a 2xx status code
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics conversation communication transcripturl unauthorized response has a 3xx status code
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics conversation communication transcripturl unauthorized response has a 4xx status code
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get speechandtextanalytics conversation communication transcripturl unauthorized response has a 5xx status code
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get speechandtextanalytics conversation communication transcripturl unauthorized response a status code equal to that given
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/conversations/{conversationId}/communications/{communicationId}/transcripturl][%d] getSpeechandtextanalyticsConversationCommunicationTranscripturlUnauthorized  %+v", 401, o.Payload)
}

func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/conversations/{conversationId}/communications/{communicationId}/transcripturl][%d] getSpeechandtextanalyticsConversationCommunicationTranscripturlUnauthorized  %+v", 401, o.Payload)
}

func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsConversationCommunicationTranscripturlForbidden creates a GetSpeechandtextanalyticsConversationCommunicationTranscripturlForbidden with default headers values
func NewGetSpeechandtextanalyticsConversationCommunicationTranscripturlForbidden() *GetSpeechandtextanalyticsConversationCommunicationTranscripturlForbidden {
	return &GetSpeechandtextanalyticsConversationCommunicationTranscripturlForbidden{}
}

/*
GetSpeechandtextanalyticsConversationCommunicationTranscripturlForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetSpeechandtextanalyticsConversationCommunicationTranscripturlForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics conversation communication transcripturl forbidden response has a 2xx status code
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics conversation communication transcripturl forbidden response has a 3xx status code
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics conversation communication transcripturl forbidden response has a 4xx status code
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get speechandtextanalytics conversation communication transcripturl forbidden response has a 5xx status code
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get speechandtextanalytics conversation communication transcripturl forbidden response a status code equal to that given
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/conversations/{conversationId}/communications/{communicationId}/transcripturl][%d] getSpeechandtextanalyticsConversationCommunicationTranscripturlForbidden  %+v", 403, o.Payload)
}

func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/conversations/{conversationId}/communications/{communicationId}/transcripturl][%d] getSpeechandtextanalyticsConversationCommunicationTranscripturlForbidden  %+v", 403, o.Payload)
}

func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsConversationCommunicationTranscripturlNotFound creates a GetSpeechandtextanalyticsConversationCommunicationTranscripturlNotFound with default headers values
func NewGetSpeechandtextanalyticsConversationCommunicationTranscripturlNotFound() *GetSpeechandtextanalyticsConversationCommunicationTranscripturlNotFound {
	return &GetSpeechandtextanalyticsConversationCommunicationTranscripturlNotFound{}
}

/*
GetSpeechandtextanalyticsConversationCommunicationTranscripturlNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetSpeechandtextanalyticsConversationCommunicationTranscripturlNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics conversation communication transcripturl not found response has a 2xx status code
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics conversation communication transcripturl not found response has a 3xx status code
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics conversation communication transcripturl not found response has a 4xx status code
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get speechandtextanalytics conversation communication transcripturl not found response has a 5xx status code
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get speechandtextanalytics conversation communication transcripturl not found response a status code equal to that given
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/conversations/{conversationId}/communications/{communicationId}/transcripturl][%d] getSpeechandtextanalyticsConversationCommunicationTranscripturlNotFound  %+v", 404, o.Payload)
}

func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/conversations/{conversationId}/communications/{communicationId}/transcripturl][%d] getSpeechandtextanalyticsConversationCommunicationTranscripturlNotFound  %+v", 404, o.Payload)
}

func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsConversationCommunicationTranscripturlRequestTimeout creates a GetSpeechandtextanalyticsConversationCommunicationTranscripturlRequestTimeout with default headers values
func NewGetSpeechandtextanalyticsConversationCommunicationTranscripturlRequestTimeout() *GetSpeechandtextanalyticsConversationCommunicationTranscripturlRequestTimeout {
	return &GetSpeechandtextanalyticsConversationCommunicationTranscripturlRequestTimeout{}
}

/*
GetSpeechandtextanalyticsConversationCommunicationTranscripturlRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetSpeechandtextanalyticsConversationCommunicationTranscripturlRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics conversation communication transcripturl request timeout response has a 2xx status code
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics conversation communication transcripturl request timeout response has a 3xx status code
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics conversation communication transcripturl request timeout response has a 4xx status code
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get speechandtextanalytics conversation communication transcripturl request timeout response has a 5xx status code
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get speechandtextanalytics conversation communication transcripturl request timeout response a status code equal to that given
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/conversations/{conversationId}/communications/{communicationId}/transcripturl][%d] getSpeechandtextanalyticsConversationCommunicationTranscripturlRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/conversations/{conversationId}/communications/{communicationId}/transcripturl][%d] getSpeechandtextanalyticsConversationCommunicationTranscripturlRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsConversationCommunicationTranscripturlRequestEntityTooLarge creates a GetSpeechandtextanalyticsConversationCommunicationTranscripturlRequestEntityTooLarge with default headers values
func NewGetSpeechandtextanalyticsConversationCommunicationTranscripturlRequestEntityTooLarge() *GetSpeechandtextanalyticsConversationCommunicationTranscripturlRequestEntityTooLarge {
	return &GetSpeechandtextanalyticsConversationCommunicationTranscripturlRequestEntityTooLarge{}
}

/*
GetSpeechandtextanalyticsConversationCommunicationTranscripturlRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetSpeechandtextanalyticsConversationCommunicationTranscripturlRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics conversation communication transcripturl request entity too large response has a 2xx status code
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics conversation communication transcripturl request entity too large response has a 3xx status code
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics conversation communication transcripturl request entity too large response has a 4xx status code
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get speechandtextanalytics conversation communication transcripturl request entity too large response has a 5xx status code
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get speechandtextanalytics conversation communication transcripturl request entity too large response a status code equal to that given
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/conversations/{conversationId}/communications/{communicationId}/transcripturl][%d] getSpeechandtextanalyticsConversationCommunicationTranscripturlRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/conversations/{conversationId}/communications/{communicationId}/transcripturl][%d] getSpeechandtextanalyticsConversationCommunicationTranscripturlRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsConversationCommunicationTranscripturlUnsupportedMediaType creates a GetSpeechandtextanalyticsConversationCommunicationTranscripturlUnsupportedMediaType with default headers values
func NewGetSpeechandtextanalyticsConversationCommunicationTranscripturlUnsupportedMediaType() *GetSpeechandtextanalyticsConversationCommunicationTranscripturlUnsupportedMediaType {
	return &GetSpeechandtextanalyticsConversationCommunicationTranscripturlUnsupportedMediaType{}
}

/*
GetSpeechandtextanalyticsConversationCommunicationTranscripturlUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetSpeechandtextanalyticsConversationCommunicationTranscripturlUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics conversation communication transcripturl unsupported media type response has a 2xx status code
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics conversation communication transcripturl unsupported media type response has a 3xx status code
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics conversation communication transcripturl unsupported media type response has a 4xx status code
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get speechandtextanalytics conversation communication transcripturl unsupported media type response has a 5xx status code
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get speechandtextanalytics conversation communication transcripturl unsupported media type response a status code equal to that given
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/conversations/{conversationId}/communications/{communicationId}/transcripturl][%d] getSpeechandtextanalyticsConversationCommunicationTranscripturlUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/conversations/{conversationId}/communications/{communicationId}/transcripturl][%d] getSpeechandtextanalyticsConversationCommunicationTranscripturlUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsConversationCommunicationTranscripturlTooManyRequests creates a GetSpeechandtextanalyticsConversationCommunicationTranscripturlTooManyRequests with default headers values
func NewGetSpeechandtextanalyticsConversationCommunicationTranscripturlTooManyRequests() *GetSpeechandtextanalyticsConversationCommunicationTranscripturlTooManyRequests {
	return &GetSpeechandtextanalyticsConversationCommunicationTranscripturlTooManyRequests{}
}

/*
GetSpeechandtextanalyticsConversationCommunicationTranscripturlTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetSpeechandtextanalyticsConversationCommunicationTranscripturlTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics conversation communication transcripturl too many requests response has a 2xx status code
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics conversation communication transcripturl too many requests response has a 3xx status code
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics conversation communication transcripturl too many requests response has a 4xx status code
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get speechandtextanalytics conversation communication transcripturl too many requests response has a 5xx status code
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get speechandtextanalytics conversation communication transcripturl too many requests response a status code equal to that given
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/conversations/{conversationId}/communications/{communicationId}/transcripturl][%d] getSpeechandtextanalyticsConversationCommunicationTranscripturlTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/conversations/{conversationId}/communications/{communicationId}/transcripturl][%d] getSpeechandtextanalyticsConversationCommunicationTranscripturlTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsConversationCommunicationTranscripturlInternalServerError creates a GetSpeechandtextanalyticsConversationCommunicationTranscripturlInternalServerError with default headers values
func NewGetSpeechandtextanalyticsConversationCommunicationTranscripturlInternalServerError() *GetSpeechandtextanalyticsConversationCommunicationTranscripturlInternalServerError {
	return &GetSpeechandtextanalyticsConversationCommunicationTranscripturlInternalServerError{}
}

/*
GetSpeechandtextanalyticsConversationCommunicationTranscripturlInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetSpeechandtextanalyticsConversationCommunicationTranscripturlInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics conversation communication transcripturl internal server error response has a 2xx status code
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics conversation communication transcripturl internal server error response has a 3xx status code
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics conversation communication transcripturl internal server error response has a 4xx status code
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get speechandtextanalytics conversation communication transcripturl internal server error response has a 5xx status code
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get speechandtextanalytics conversation communication transcripturl internal server error response a status code equal to that given
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/conversations/{conversationId}/communications/{communicationId}/transcripturl][%d] getSpeechandtextanalyticsConversationCommunicationTranscripturlInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/conversations/{conversationId}/communications/{communicationId}/transcripturl][%d] getSpeechandtextanalyticsConversationCommunicationTranscripturlInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsConversationCommunicationTranscripturlServiceUnavailable creates a GetSpeechandtextanalyticsConversationCommunicationTranscripturlServiceUnavailable with default headers values
func NewGetSpeechandtextanalyticsConversationCommunicationTranscripturlServiceUnavailable() *GetSpeechandtextanalyticsConversationCommunicationTranscripturlServiceUnavailable {
	return &GetSpeechandtextanalyticsConversationCommunicationTranscripturlServiceUnavailable{}
}

/*
GetSpeechandtextanalyticsConversationCommunicationTranscripturlServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetSpeechandtextanalyticsConversationCommunicationTranscripturlServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics conversation communication transcripturl service unavailable response has a 2xx status code
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics conversation communication transcripturl service unavailable response has a 3xx status code
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics conversation communication transcripturl service unavailable response has a 4xx status code
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get speechandtextanalytics conversation communication transcripturl service unavailable response has a 5xx status code
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get speechandtextanalytics conversation communication transcripturl service unavailable response a status code equal to that given
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/conversations/{conversationId}/communications/{communicationId}/transcripturl][%d] getSpeechandtextanalyticsConversationCommunicationTranscripturlServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/conversations/{conversationId}/communications/{communicationId}/transcripturl][%d] getSpeechandtextanalyticsConversationCommunicationTranscripturlServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpeechandtextanalyticsConversationCommunicationTranscripturlGatewayTimeout creates a GetSpeechandtextanalyticsConversationCommunicationTranscripturlGatewayTimeout with default headers values
func NewGetSpeechandtextanalyticsConversationCommunicationTranscripturlGatewayTimeout() *GetSpeechandtextanalyticsConversationCommunicationTranscripturlGatewayTimeout {
	return &GetSpeechandtextanalyticsConversationCommunicationTranscripturlGatewayTimeout{}
}

/*
GetSpeechandtextanalyticsConversationCommunicationTranscripturlGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetSpeechandtextanalyticsConversationCommunicationTranscripturlGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get speechandtextanalytics conversation communication transcripturl gateway timeout response has a 2xx status code
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get speechandtextanalytics conversation communication transcripturl gateway timeout response has a 3xx status code
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get speechandtextanalytics conversation communication transcripturl gateway timeout response has a 4xx status code
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get speechandtextanalytics conversation communication transcripturl gateway timeout response has a 5xx status code
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get speechandtextanalytics conversation communication transcripturl gateway timeout response a status code equal to that given
func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/conversations/{conversationId}/communications/{communicationId}/transcripturl][%d] getSpeechandtextanalyticsConversationCommunicationTranscripturlGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/speechandtextanalytics/conversations/{conversationId}/communications/{communicationId}/transcripturl][%d] getSpeechandtextanalyticsConversationCommunicationTranscripturlGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSpeechandtextanalyticsConversationCommunicationTranscripturlGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
