// Code generated by go-swagger; DO NOT EDIT.

package integrations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetIntegrationConfigCurrentReader is a Reader for the GetIntegrationConfigCurrent structure.
type GetIntegrationConfigCurrentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetIntegrationConfigCurrentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetIntegrationConfigCurrentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetIntegrationConfigCurrentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetIntegrationConfigCurrentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetIntegrationConfigCurrentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetIntegrationConfigCurrentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetIntegrationConfigCurrentRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetIntegrationConfigCurrentRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetIntegrationConfigCurrentUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetIntegrationConfigCurrentTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetIntegrationConfigCurrentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetIntegrationConfigCurrentServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetIntegrationConfigCurrentGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetIntegrationConfigCurrentOK creates a GetIntegrationConfigCurrentOK with default headers values
func NewGetIntegrationConfigCurrentOK() *GetIntegrationConfigCurrentOK {
	return &GetIntegrationConfigCurrentOK{}
}

/*
GetIntegrationConfigCurrentOK describes a response with status code 200, with default header values.

successful operation
*/
type GetIntegrationConfigCurrentOK struct {
	Payload *models.IntegrationConfiguration
}

// IsSuccess returns true when this get integration config current o k response has a 2xx status code
func (o *GetIntegrationConfigCurrentOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get integration config current o k response has a 3xx status code
func (o *GetIntegrationConfigCurrentOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get integration config current o k response has a 4xx status code
func (o *GetIntegrationConfigCurrentOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get integration config current o k response has a 5xx status code
func (o *GetIntegrationConfigCurrentOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get integration config current o k response a status code equal to that given
func (o *GetIntegrationConfigCurrentOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetIntegrationConfigCurrentOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/integrations/{integrationId}/config/current][%d] getIntegrationConfigCurrentOK  %+v", 200, o.Payload)
}

func (o *GetIntegrationConfigCurrentOK) String() string {
	return fmt.Sprintf("[GET /api/v2/integrations/{integrationId}/config/current][%d] getIntegrationConfigCurrentOK  %+v", 200, o.Payload)
}

func (o *GetIntegrationConfigCurrentOK) GetPayload() *models.IntegrationConfiguration {
	return o.Payload
}

func (o *GetIntegrationConfigCurrentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IntegrationConfiguration)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIntegrationConfigCurrentBadRequest creates a GetIntegrationConfigCurrentBadRequest with default headers values
func NewGetIntegrationConfigCurrentBadRequest() *GetIntegrationConfigCurrentBadRequest {
	return &GetIntegrationConfigCurrentBadRequest{}
}

/*
GetIntegrationConfigCurrentBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetIntegrationConfigCurrentBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get integration config current bad request response has a 2xx status code
func (o *GetIntegrationConfigCurrentBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get integration config current bad request response has a 3xx status code
func (o *GetIntegrationConfigCurrentBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get integration config current bad request response has a 4xx status code
func (o *GetIntegrationConfigCurrentBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get integration config current bad request response has a 5xx status code
func (o *GetIntegrationConfigCurrentBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get integration config current bad request response a status code equal to that given
func (o *GetIntegrationConfigCurrentBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetIntegrationConfigCurrentBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/integrations/{integrationId}/config/current][%d] getIntegrationConfigCurrentBadRequest  %+v", 400, o.Payload)
}

func (o *GetIntegrationConfigCurrentBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/integrations/{integrationId}/config/current][%d] getIntegrationConfigCurrentBadRequest  %+v", 400, o.Payload)
}

func (o *GetIntegrationConfigCurrentBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIntegrationConfigCurrentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIntegrationConfigCurrentUnauthorized creates a GetIntegrationConfigCurrentUnauthorized with default headers values
func NewGetIntegrationConfigCurrentUnauthorized() *GetIntegrationConfigCurrentUnauthorized {
	return &GetIntegrationConfigCurrentUnauthorized{}
}

/*
GetIntegrationConfigCurrentUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetIntegrationConfigCurrentUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get integration config current unauthorized response has a 2xx status code
func (o *GetIntegrationConfigCurrentUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get integration config current unauthorized response has a 3xx status code
func (o *GetIntegrationConfigCurrentUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get integration config current unauthorized response has a 4xx status code
func (o *GetIntegrationConfigCurrentUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get integration config current unauthorized response has a 5xx status code
func (o *GetIntegrationConfigCurrentUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get integration config current unauthorized response a status code equal to that given
func (o *GetIntegrationConfigCurrentUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetIntegrationConfigCurrentUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/integrations/{integrationId}/config/current][%d] getIntegrationConfigCurrentUnauthorized  %+v", 401, o.Payload)
}

func (o *GetIntegrationConfigCurrentUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/integrations/{integrationId}/config/current][%d] getIntegrationConfigCurrentUnauthorized  %+v", 401, o.Payload)
}

func (o *GetIntegrationConfigCurrentUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIntegrationConfigCurrentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIntegrationConfigCurrentForbidden creates a GetIntegrationConfigCurrentForbidden with default headers values
func NewGetIntegrationConfigCurrentForbidden() *GetIntegrationConfigCurrentForbidden {
	return &GetIntegrationConfigCurrentForbidden{}
}

/*
GetIntegrationConfigCurrentForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetIntegrationConfigCurrentForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get integration config current forbidden response has a 2xx status code
func (o *GetIntegrationConfigCurrentForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get integration config current forbidden response has a 3xx status code
func (o *GetIntegrationConfigCurrentForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get integration config current forbidden response has a 4xx status code
func (o *GetIntegrationConfigCurrentForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get integration config current forbidden response has a 5xx status code
func (o *GetIntegrationConfigCurrentForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get integration config current forbidden response a status code equal to that given
func (o *GetIntegrationConfigCurrentForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetIntegrationConfigCurrentForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/integrations/{integrationId}/config/current][%d] getIntegrationConfigCurrentForbidden  %+v", 403, o.Payload)
}

func (o *GetIntegrationConfigCurrentForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/integrations/{integrationId}/config/current][%d] getIntegrationConfigCurrentForbidden  %+v", 403, o.Payload)
}

func (o *GetIntegrationConfigCurrentForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIntegrationConfigCurrentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIntegrationConfigCurrentNotFound creates a GetIntegrationConfigCurrentNotFound with default headers values
func NewGetIntegrationConfigCurrentNotFound() *GetIntegrationConfigCurrentNotFound {
	return &GetIntegrationConfigCurrentNotFound{}
}

/*
GetIntegrationConfigCurrentNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetIntegrationConfigCurrentNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get integration config current not found response has a 2xx status code
func (o *GetIntegrationConfigCurrentNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get integration config current not found response has a 3xx status code
func (o *GetIntegrationConfigCurrentNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get integration config current not found response has a 4xx status code
func (o *GetIntegrationConfigCurrentNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get integration config current not found response has a 5xx status code
func (o *GetIntegrationConfigCurrentNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get integration config current not found response a status code equal to that given
func (o *GetIntegrationConfigCurrentNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetIntegrationConfigCurrentNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/integrations/{integrationId}/config/current][%d] getIntegrationConfigCurrentNotFound  %+v", 404, o.Payload)
}

func (o *GetIntegrationConfigCurrentNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/integrations/{integrationId}/config/current][%d] getIntegrationConfigCurrentNotFound  %+v", 404, o.Payload)
}

func (o *GetIntegrationConfigCurrentNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIntegrationConfigCurrentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIntegrationConfigCurrentRequestTimeout creates a GetIntegrationConfigCurrentRequestTimeout with default headers values
func NewGetIntegrationConfigCurrentRequestTimeout() *GetIntegrationConfigCurrentRequestTimeout {
	return &GetIntegrationConfigCurrentRequestTimeout{}
}

/*
GetIntegrationConfigCurrentRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetIntegrationConfigCurrentRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get integration config current request timeout response has a 2xx status code
func (o *GetIntegrationConfigCurrentRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get integration config current request timeout response has a 3xx status code
func (o *GetIntegrationConfigCurrentRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get integration config current request timeout response has a 4xx status code
func (o *GetIntegrationConfigCurrentRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get integration config current request timeout response has a 5xx status code
func (o *GetIntegrationConfigCurrentRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get integration config current request timeout response a status code equal to that given
func (o *GetIntegrationConfigCurrentRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetIntegrationConfigCurrentRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/integrations/{integrationId}/config/current][%d] getIntegrationConfigCurrentRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetIntegrationConfigCurrentRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/integrations/{integrationId}/config/current][%d] getIntegrationConfigCurrentRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetIntegrationConfigCurrentRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIntegrationConfigCurrentRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIntegrationConfigCurrentRequestEntityTooLarge creates a GetIntegrationConfigCurrentRequestEntityTooLarge with default headers values
func NewGetIntegrationConfigCurrentRequestEntityTooLarge() *GetIntegrationConfigCurrentRequestEntityTooLarge {
	return &GetIntegrationConfigCurrentRequestEntityTooLarge{}
}

/*
GetIntegrationConfigCurrentRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetIntegrationConfigCurrentRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get integration config current request entity too large response has a 2xx status code
func (o *GetIntegrationConfigCurrentRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get integration config current request entity too large response has a 3xx status code
func (o *GetIntegrationConfigCurrentRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get integration config current request entity too large response has a 4xx status code
func (o *GetIntegrationConfigCurrentRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get integration config current request entity too large response has a 5xx status code
func (o *GetIntegrationConfigCurrentRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get integration config current request entity too large response a status code equal to that given
func (o *GetIntegrationConfigCurrentRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetIntegrationConfigCurrentRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/integrations/{integrationId}/config/current][%d] getIntegrationConfigCurrentRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetIntegrationConfigCurrentRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/integrations/{integrationId}/config/current][%d] getIntegrationConfigCurrentRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetIntegrationConfigCurrentRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIntegrationConfigCurrentRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIntegrationConfigCurrentUnsupportedMediaType creates a GetIntegrationConfigCurrentUnsupportedMediaType with default headers values
func NewGetIntegrationConfigCurrentUnsupportedMediaType() *GetIntegrationConfigCurrentUnsupportedMediaType {
	return &GetIntegrationConfigCurrentUnsupportedMediaType{}
}

/*
GetIntegrationConfigCurrentUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetIntegrationConfigCurrentUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get integration config current unsupported media type response has a 2xx status code
func (o *GetIntegrationConfigCurrentUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get integration config current unsupported media type response has a 3xx status code
func (o *GetIntegrationConfigCurrentUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get integration config current unsupported media type response has a 4xx status code
func (o *GetIntegrationConfigCurrentUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get integration config current unsupported media type response has a 5xx status code
func (o *GetIntegrationConfigCurrentUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get integration config current unsupported media type response a status code equal to that given
func (o *GetIntegrationConfigCurrentUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetIntegrationConfigCurrentUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/integrations/{integrationId}/config/current][%d] getIntegrationConfigCurrentUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetIntegrationConfigCurrentUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/integrations/{integrationId}/config/current][%d] getIntegrationConfigCurrentUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetIntegrationConfigCurrentUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIntegrationConfigCurrentUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIntegrationConfigCurrentTooManyRequests creates a GetIntegrationConfigCurrentTooManyRequests with default headers values
func NewGetIntegrationConfigCurrentTooManyRequests() *GetIntegrationConfigCurrentTooManyRequests {
	return &GetIntegrationConfigCurrentTooManyRequests{}
}

/*
GetIntegrationConfigCurrentTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetIntegrationConfigCurrentTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get integration config current too many requests response has a 2xx status code
func (o *GetIntegrationConfigCurrentTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get integration config current too many requests response has a 3xx status code
func (o *GetIntegrationConfigCurrentTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get integration config current too many requests response has a 4xx status code
func (o *GetIntegrationConfigCurrentTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get integration config current too many requests response has a 5xx status code
func (o *GetIntegrationConfigCurrentTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get integration config current too many requests response a status code equal to that given
func (o *GetIntegrationConfigCurrentTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetIntegrationConfigCurrentTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/integrations/{integrationId}/config/current][%d] getIntegrationConfigCurrentTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetIntegrationConfigCurrentTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/integrations/{integrationId}/config/current][%d] getIntegrationConfigCurrentTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetIntegrationConfigCurrentTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIntegrationConfigCurrentTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIntegrationConfigCurrentInternalServerError creates a GetIntegrationConfigCurrentInternalServerError with default headers values
func NewGetIntegrationConfigCurrentInternalServerError() *GetIntegrationConfigCurrentInternalServerError {
	return &GetIntegrationConfigCurrentInternalServerError{}
}

/*
GetIntegrationConfigCurrentInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetIntegrationConfigCurrentInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get integration config current internal server error response has a 2xx status code
func (o *GetIntegrationConfigCurrentInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get integration config current internal server error response has a 3xx status code
func (o *GetIntegrationConfigCurrentInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get integration config current internal server error response has a 4xx status code
func (o *GetIntegrationConfigCurrentInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get integration config current internal server error response has a 5xx status code
func (o *GetIntegrationConfigCurrentInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get integration config current internal server error response a status code equal to that given
func (o *GetIntegrationConfigCurrentInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetIntegrationConfigCurrentInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/integrations/{integrationId}/config/current][%d] getIntegrationConfigCurrentInternalServerError  %+v", 500, o.Payload)
}

func (o *GetIntegrationConfigCurrentInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/integrations/{integrationId}/config/current][%d] getIntegrationConfigCurrentInternalServerError  %+v", 500, o.Payload)
}

func (o *GetIntegrationConfigCurrentInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIntegrationConfigCurrentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIntegrationConfigCurrentServiceUnavailable creates a GetIntegrationConfigCurrentServiceUnavailable with default headers values
func NewGetIntegrationConfigCurrentServiceUnavailable() *GetIntegrationConfigCurrentServiceUnavailable {
	return &GetIntegrationConfigCurrentServiceUnavailable{}
}

/*
GetIntegrationConfigCurrentServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetIntegrationConfigCurrentServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get integration config current service unavailable response has a 2xx status code
func (o *GetIntegrationConfigCurrentServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get integration config current service unavailable response has a 3xx status code
func (o *GetIntegrationConfigCurrentServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get integration config current service unavailable response has a 4xx status code
func (o *GetIntegrationConfigCurrentServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get integration config current service unavailable response has a 5xx status code
func (o *GetIntegrationConfigCurrentServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get integration config current service unavailable response a status code equal to that given
func (o *GetIntegrationConfigCurrentServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetIntegrationConfigCurrentServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/integrations/{integrationId}/config/current][%d] getIntegrationConfigCurrentServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetIntegrationConfigCurrentServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/integrations/{integrationId}/config/current][%d] getIntegrationConfigCurrentServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetIntegrationConfigCurrentServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIntegrationConfigCurrentServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIntegrationConfigCurrentGatewayTimeout creates a GetIntegrationConfigCurrentGatewayTimeout with default headers values
func NewGetIntegrationConfigCurrentGatewayTimeout() *GetIntegrationConfigCurrentGatewayTimeout {
	return &GetIntegrationConfigCurrentGatewayTimeout{}
}

/*
GetIntegrationConfigCurrentGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetIntegrationConfigCurrentGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get integration config current gateway timeout response has a 2xx status code
func (o *GetIntegrationConfigCurrentGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get integration config current gateway timeout response has a 3xx status code
func (o *GetIntegrationConfigCurrentGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get integration config current gateway timeout response has a 4xx status code
func (o *GetIntegrationConfigCurrentGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get integration config current gateway timeout response has a 5xx status code
func (o *GetIntegrationConfigCurrentGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get integration config current gateway timeout response a status code equal to that given
func (o *GetIntegrationConfigCurrentGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetIntegrationConfigCurrentGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/integrations/{integrationId}/config/current][%d] getIntegrationConfigCurrentGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetIntegrationConfigCurrentGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/integrations/{integrationId}/config/current][%d] getIntegrationConfigCurrentGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetIntegrationConfigCurrentGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIntegrationConfigCurrentGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
