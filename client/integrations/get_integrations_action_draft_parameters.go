// Code generated by go-swagger; DO NOT EDIT.

package integrations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetIntegrationsActionDraftParams creates a new GetIntegrationsActionDraftParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetIntegrationsActionDraftParams() *GetIntegrationsActionDraftParams {
	return &GetIntegrationsActionDraftParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetIntegrationsActionDraftParamsWithTimeout creates a new GetIntegrationsActionDraftParams object
// with the ability to set a timeout on a request.
func NewGetIntegrationsActionDraftParamsWithTimeout(timeout time.Duration) *GetIntegrationsActionDraftParams {
	return &GetIntegrationsActionDraftParams{
		timeout: timeout,
	}
}

// NewGetIntegrationsActionDraftParamsWithContext creates a new GetIntegrationsActionDraftParams object
// with the ability to set a context for a request.
func NewGetIntegrationsActionDraftParamsWithContext(ctx context.Context) *GetIntegrationsActionDraftParams {
	return &GetIntegrationsActionDraftParams{
		Context: ctx,
	}
}

// NewGetIntegrationsActionDraftParamsWithHTTPClient creates a new GetIntegrationsActionDraftParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetIntegrationsActionDraftParamsWithHTTPClient(client *http.Client) *GetIntegrationsActionDraftParams {
	return &GetIntegrationsActionDraftParams{
		HTTPClient: client,
	}
}

/*
GetIntegrationsActionDraftParams contains all the parameters to send to the API endpoint

	for the get integrations action draft operation.

	Typically these are written to a http.Request.
*/
type GetIntegrationsActionDraftParams struct {

	/* ActionID.

	   actionId
	*/
	ActionID string

	/* Expand.

	   Indicates a field in the response which should be expanded.
	*/
	Expand *string

	/* IncludeConfig.

	   Return config in response.
	*/
	IncludeConfig *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get integrations action draft params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetIntegrationsActionDraftParams) WithDefaults() *GetIntegrationsActionDraftParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get integrations action draft params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetIntegrationsActionDraftParams) SetDefaults() {
	var (
		includeConfigDefault = bool(false)
	)

	val := GetIntegrationsActionDraftParams{
		IncludeConfig: &includeConfigDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the get integrations action draft params
func (o *GetIntegrationsActionDraftParams) WithTimeout(timeout time.Duration) *GetIntegrationsActionDraftParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get integrations action draft params
func (o *GetIntegrationsActionDraftParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get integrations action draft params
func (o *GetIntegrationsActionDraftParams) WithContext(ctx context.Context) *GetIntegrationsActionDraftParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get integrations action draft params
func (o *GetIntegrationsActionDraftParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get integrations action draft params
func (o *GetIntegrationsActionDraftParams) WithHTTPClient(client *http.Client) *GetIntegrationsActionDraftParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get integrations action draft params
func (o *GetIntegrationsActionDraftParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithActionID adds the actionID to the get integrations action draft params
func (o *GetIntegrationsActionDraftParams) WithActionID(actionID string) *GetIntegrationsActionDraftParams {
	o.SetActionID(actionID)
	return o
}

// SetActionID adds the actionId to the get integrations action draft params
func (o *GetIntegrationsActionDraftParams) SetActionID(actionID string) {
	o.ActionID = actionID
}

// WithExpand adds the expand to the get integrations action draft params
func (o *GetIntegrationsActionDraftParams) WithExpand(expand *string) *GetIntegrationsActionDraftParams {
	o.SetExpand(expand)
	return o
}

// SetExpand adds the expand to the get integrations action draft params
func (o *GetIntegrationsActionDraftParams) SetExpand(expand *string) {
	o.Expand = expand
}

// WithIncludeConfig adds the includeConfig to the get integrations action draft params
func (o *GetIntegrationsActionDraftParams) WithIncludeConfig(includeConfig *bool) *GetIntegrationsActionDraftParams {
	o.SetIncludeConfig(includeConfig)
	return o
}

// SetIncludeConfig adds the includeConfig to the get integrations action draft params
func (o *GetIntegrationsActionDraftParams) SetIncludeConfig(includeConfig *bool) {
	o.IncludeConfig = includeConfig
}

// WriteToRequest writes these params to a swagger request
func (o *GetIntegrationsActionDraftParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param actionId
	if err := r.SetPathParam("actionId", o.ActionID); err != nil {
		return err
	}

	if o.Expand != nil {

		// query param expand
		var qrExpand string

		if o.Expand != nil {
			qrExpand = *o.Expand
		}
		qExpand := qrExpand
		if qExpand != "" {

			if err := r.SetQueryParam("expand", qExpand); err != nil {
				return err
			}
		}
	}

	if o.IncludeConfig != nil {

		// query param includeConfig
		var qrIncludeConfig bool

		if o.IncludeConfig != nil {
			qrIncludeConfig = *o.IncludeConfig
		}
		qIncludeConfig := swag.FormatBool(qrIncludeConfig)
		if qIncludeConfig != "" {

			if err := r.SetQueryParam("includeConfig", qIncludeConfig); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
