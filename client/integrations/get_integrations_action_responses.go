// Code generated by go-swagger; DO NOT EDIT.

package integrations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetIntegrationsActionReader is a Reader for the GetIntegrationsAction structure.
type GetIntegrationsActionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetIntegrationsActionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetIntegrationsActionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetIntegrationsActionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetIntegrationsActionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetIntegrationsActionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetIntegrationsActionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetIntegrationsActionRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetIntegrationsActionRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetIntegrationsActionUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetIntegrationsActionTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetIntegrationsActionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetIntegrationsActionServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetIntegrationsActionGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetIntegrationsActionOK creates a GetIntegrationsActionOK with default headers values
func NewGetIntegrationsActionOK() *GetIntegrationsActionOK {
	return &GetIntegrationsActionOK{}
}

/*
GetIntegrationsActionOK describes a response with status code 200, with default header values.

successful operation
*/
type GetIntegrationsActionOK struct {
	Payload *models.Action
}

// IsSuccess returns true when this get integrations action o k response has a 2xx status code
func (o *GetIntegrationsActionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get integrations action o k response has a 3xx status code
func (o *GetIntegrationsActionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get integrations action o k response has a 4xx status code
func (o *GetIntegrationsActionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get integrations action o k response has a 5xx status code
func (o *GetIntegrationsActionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get integrations action o k response a status code equal to that given
func (o *GetIntegrationsActionOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetIntegrationsActionOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/integrations/actions/{actionId}][%d] getIntegrationsActionOK  %+v", 200, o.Payload)
}

func (o *GetIntegrationsActionOK) String() string {
	return fmt.Sprintf("[GET /api/v2/integrations/actions/{actionId}][%d] getIntegrationsActionOK  %+v", 200, o.Payload)
}

func (o *GetIntegrationsActionOK) GetPayload() *models.Action {
	return o.Payload
}

func (o *GetIntegrationsActionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Action)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIntegrationsActionBadRequest creates a GetIntegrationsActionBadRequest with default headers values
func NewGetIntegrationsActionBadRequest() *GetIntegrationsActionBadRequest {
	return &GetIntegrationsActionBadRequest{}
}

/*
GetIntegrationsActionBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetIntegrationsActionBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get integrations action bad request response has a 2xx status code
func (o *GetIntegrationsActionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get integrations action bad request response has a 3xx status code
func (o *GetIntegrationsActionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get integrations action bad request response has a 4xx status code
func (o *GetIntegrationsActionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get integrations action bad request response has a 5xx status code
func (o *GetIntegrationsActionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get integrations action bad request response a status code equal to that given
func (o *GetIntegrationsActionBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetIntegrationsActionBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/integrations/actions/{actionId}][%d] getIntegrationsActionBadRequest  %+v", 400, o.Payload)
}

func (o *GetIntegrationsActionBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/integrations/actions/{actionId}][%d] getIntegrationsActionBadRequest  %+v", 400, o.Payload)
}

func (o *GetIntegrationsActionBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIntegrationsActionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIntegrationsActionUnauthorized creates a GetIntegrationsActionUnauthorized with default headers values
func NewGetIntegrationsActionUnauthorized() *GetIntegrationsActionUnauthorized {
	return &GetIntegrationsActionUnauthorized{}
}

/*
GetIntegrationsActionUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetIntegrationsActionUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get integrations action unauthorized response has a 2xx status code
func (o *GetIntegrationsActionUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get integrations action unauthorized response has a 3xx status code
func (o *GetIntegrationsActionUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get integrations action unauthorized response has a 4xx status code
func (o *GetIntegrationsActionUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get integrations action unauthorized response has a 5xx status code
func (o *GetIntegrationsActionUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get integrations action unauthorized response a status code equal to that given
func (o *GetIntegrationsActionUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetIntegrationsActionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/integrations/actions/{actionId}][%d] getIntegrationsActionUnauthorized  %+v", 401, o.Payload)
}

func (o *GetIntegrationsActionUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/integrations/actions/{actionId}][%d] getIntegrationsActionUnauthorized  %+v", 401, o.Payload)
}

func (o *GetIntegrationsActionUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIntegrationsActionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIntegrationsActionForbidden creates a GetIntegrationsActionForbidden with default headers values
func NewGetIntegrationsActionForbidden() *GetIntegrationsActionForbidden {
	return &GetIntegrationsActionForbidden{}
}

/*
GetIntegrationsActionForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetIntegrationsActionForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get integrations action forbidden response has a 2xx status code
func (o *GetIntegrationsActionForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get integrations action forbidden response has a 3xx status code
func (o *GetIntegrationsActionForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get integrations action forbidden response has a 4xx status code
func (o *GetIntegrationsActionForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get integrations action forbidden response has a 5xx status code
func (o *GetIntegrationsActionForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get integrations action forbidden response a status code equal to that given
func (o *GetIntegrationsActionForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetIntegrationsActionForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/integrations/actions/{actionId}][%d] getIntegrationsActionForbidden  %+v", 403, o.Payload)
}

func (o *GetIntegrationsActionForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/integrations/actions/{actionId}][%d] getIntegrationsActionForbidden  %+v", 403, o.Payload)
}

func (o *GetIntegrationsActionForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIntegrationsActionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIntegrationsActionNotFound creates a GetIntegrationsActionNotFound with default headers values
func NewGetIntegrationsActionNotFound() *GetIntegrationsActionNotFound {
	return &GetIntegrationsActionNotFound{}
}

/*
GetIntegrationsActionNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetIntegrationsActionNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get integrations action not found response has a 2xx status code
func (o *GetIntegrationsActionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get integrations action not found response has a 3xx status code
func (o *GetIntegrationsActionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get integrations action not found response has a 4xx status code
func (o *GetIntegrationsActionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get integrations action not found response has a 5xx status code
func (o *GetIntegrationsActionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get integrations action not found response a status code equal to that given
func (o *GetIntegrationsActionNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetIntegrationsActionNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/integrations/actions/{actionId}][%d] getIntegrationsActionNotFound  %+v", 404, o.Payload)
}

func (o *GetIntegrationsActionNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/integrations/actions/{actionId}][%d] getIntegrationsActionNotFound  %+v", 404, o.Payload)
}

func (o *GetIntegrationsActionNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIntegrationsActionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIntegrationsActionRequestTimeout creates a GetIntegrationsActionRequestTimeout with default headers values
func NewGetIntegrationsActionRequestTimeout() *GetIntegrationsActionRequestTimeout {
	return &GetIntegrationsActionRequestTimeout{}
}

/*
GetIntegrationsActionRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetIntegrationsActionRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get integrations action request timeout response has a 2xx status code
func (o *GetIntegrationsActionRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get integrations action request timeout response has a 3xx status code
func (o *GetIntegrationsActionRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get integrations action request timeout response has a 4xx status code
func (o *GetIntegrationsActionRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get integrations action request timeout response has a 5xx status code
func (o *GetIntegrationsActionRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get integrations action request timeout response a status code equal to that given
func (o *GetIntegrationsActionRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetIntegrationsActionRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/integrations/actions/{actionId}][%d] getIntegrationsActionRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetIntegrationsActionRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/integrations/actions/{actionId}][%d] getIntegrationsActionRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetIntegrationsActionRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIntegrationsActionRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIntegrationsActionRequestEntityTooLarge creates a GetIntegrationsActionRequestEntityTooLarge with default headers values
func NewGetIntegrationsActionRequestEntityTooLarge() *GetIntegrationsActionRequestEntityTooLarge {
	return &GetIntegrationsActionRequestEntityTooLarge{}
}

/*
GetIntegrationsActionRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetIntegrationsActionRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get integrations action request entity too large response has a 2xx status code
func (o *GetIntegrationsActionRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get integrations action request entity too large response has a 3xx status code
func (o *GetIntegrationsActionRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get integrations action request entity too large response has a 4xx status code
func (o *GetIntegrationsActionRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get integrations action request entity too large response has a 5xx status code
func (o *GetIntegrationsActionRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get integrations action request entity too large response a status code equal to that given
func (o *GetIntegrationsActionRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetIntegrationsActionRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/integrations/actions/{actionId}][%d] getIntegrationsActionRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetIntegrationsActionRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/integrations/actions/{actionId}][%d] getIntegrationsActionRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetIntegrationsActionRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIntegrationsActionRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIntegrationsActionUnsupportedMediaType creates a GetIntegrationsActionUnsupportedMediaType with default headers values
func NewGetIntegrationsActionUnsupportedMediaType() *GetIntegrationsActionUnsupportedMediaType {
	return &GetIntegrationsActionUnsupportedMediaType{}
}

/*
GetIntegrationsActionUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetIntegrationsActionUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get integrations action unsupported media type response has a 2xx status code
func (o *GetIntegrationsActionUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get integrations action unsupported media type response has a 3xx status code
func (o *GetIntegrationsActionUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get integrations action unsupported media type response has a 4xx status code
func (o *GetIntegrationsActionUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get integrations action unsupported media type response has a 5xx status code
func (o *GetIntegrationsActionUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get integrations action unsupported media type response a status code equal to that given
func (o *GetIntegrationsActionUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetIntegrationsActionUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/integrations/actions/{actionId}][%d] getIntegrationsActionUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetIntegrationsActionUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/integrations/actions/{actionId}][%d] getIntegrationsActionUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetIntegrationsActionUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIntegrationsActionUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIntegrationsActionTooManyRequests creates a GetIntegrationsActionTooManyRequests with default headers values
func NewGetIntegrationsActionTooManyRequests() *GetIntegrationsActionTooManyRequests {
	return &GetIntegrationsActionTooManyRequests{}
}

/*
GetIntegrationsActionTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetIntegrationsActionTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get integrations action too many requests response has a 2xx status code
func (o *GetIntegrationsActionTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get integrations action too many requests response has a 3xx status code
func (o *GetIntegrationsActionTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get integrations action too many requests response has a 4xx status code
func (o *GetIntegrationsActionTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get integrations action too many requests response has a 5xx status code
func (o *GetIntegrationsActionTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get integrations action too many requests response a status code equal to that given
func (o *GetIntegrationsActionTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetIntegrationsActionTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/integrations/actions/{actionId}][%d] getIntegrationsActionTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetIntegrationsActionTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/integrations/actions/{actionId}][%d] getIntegrationsActionTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetIntegrationsActionTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIntegrationsActionTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIntegrationsActionInternalServerError creates a GetIntegrationsActionInternalServerError with default headers values
func NewGetIntegrationsActionInternalServerError() *GetIntegrationsActionInternalServerError {
	return &GetIntegrationsActionInternalServerError{}
}

/*
GetIntegrationsActionInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetIntegrationsActionInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get integrations action internal server error response has a 2xx status code
func (o *GetIntegrationsActionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get integrations action internal server error response has a 3xx status code
func (o *GetIntegrationsActionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get integrations action internal server error response has a 4xx status code
func (o *GetIntegrationsActionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get integrations action internal server error response has a 5xx status code
func (o *GetIntegrationsActionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get integrations action internal server error response a status code equal to that given
func (o *GetIntegrationsActionInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetIntegrationsActionInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/integrations/actions/{actionId}][%d] getIntegrationsActionInternalServerError  %+v", 500, o.Payload)
}

func (o *GetIntegrationsActionInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/integrations/actions/{actionId}][%d] getIntegrationsActionInternalServerError  %+v", 500, o.Payload)
}

func (o *GetIntegrationsActionInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIntegrationsActionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIntegrationsActionServiceUnavailable creates a GetIntegrationsActionServiceUnavailable with default headers values
func NewGetIntegrationsActionServiceUnavailable() *GetIntegrationsActionServiceUnavailable {
	return &GetIntegrationsActionServiceUnavailable{}
}

/*
GetIntegrationsActionServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetIntegrationsActionServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get integrations action service unavailable response has a 2xx status code
func (o *GetIntegrationsActionServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get integrations action service unavailable response has a 3xx status code
func (o *GetIntegrationsActionServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get integrations action service unavailable response has a 4xx status code
func (o *GetIntegrationsActionServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get integrations action service unavailable response has a 5xx status code
func (o *GetIntegrationsActionServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get integrations action service unavailable response a status code equal to that given
func (o *GetIntegrationsActionServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetIntegrationsActionServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/integrations/actions/{actionId}][%d] getIntegrationsActionServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetIntegrationsActionServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/integrations/actions/{actionId}][%d] getIntegrationsActionServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetIntegrationsActionServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIntegrationsActionServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIntegrationsActionGatewayTimeout creates a GetIntegrationsActionGatewayTimeout with default headers values
func NewGetIntegrationsActionGatewayTimeout() *GetIntegrationsActionGatewayTimeout {
	return &GetIntegrationsActionGatewayTimeout{}
}

/*
GetIntegrationsActionGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetIntegrationsActionGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get integrations action gateway timeout response has a 2xx status code
func (o *GetIntegrationsActionGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get integrations action gateway timeout response has a 3xx status code
func (o *GetIntegrationsActionGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get integrations action gateway timeout response has a 4xx status code
func (o *GetIntegrationsActionGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get integrations action gateway timeout response has a 5xx status code
func (o *GetIntegrationsActionGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get integrations action gateway timeout response a status code equal to that given
func (o *GetIntegrationsActionGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetIntegrationsActionGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/integrations/actions/{actionId}][%d] getIntegrationsActionGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetIntegrationsActionGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/integrations/actions/{actionId}][%d] getIntegrationsActionGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetIntegrationsActionGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIntegrationsActionGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
