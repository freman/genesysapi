// Code generated by go-swagger; DO NOT EDIT.

package integrations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostIntegrationsReader is a Reader for the PostIntegrations structure.
type PostIntegrationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostIntegrationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostIntegrationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostIntegrationsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostIntegrationsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostIntegrationsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostIntegrationsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostIntegrationsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostIntegrationsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostIntegrationsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostIntegrationsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostIntegrationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostIntegrationsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostIntegrationsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostIntegrationsOK creates a PostIntegrationsOK with default headers values
func NewPostIntegrationsOK() *PostIntegrationsOK {
	return &PostIntegrationsOK{}
}

/*
PostIntegrationsOK describes a response with status code 200, with default header values.

successful operation
*/
type PostIntegrationsOK struct {
	Payload *models.Integration
}

// IsSuccess returns true when this post integrations o k response has a 2xx status code
func (o *PostIntegrationsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post integrations o k response has a 3xx status code
func (o *PostIntegrationsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post integrations o k response has a 4xx status code
func (o *PostIntegrationsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post integrations o k response has a 5xx status code
func (o *PostIntegrationsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post integrations o k response a status code equal to that given
func (o *PostIntegrationsOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostIntegrationsOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/integrations][%d] postIntegrationsOK  %+v", 200, o.Payload)
}

func (o *PostIntegrationsOK) String() string {
	return fmt.Sprintf("[POST /api/v2/integrations][%d] postIntegrationsOK  %+v", 200, o.Payload)
}

func (o *PostIntegrationsOK) GetPayload() *models.Integration {
	return o.Payload
}

func (o *PostIntegrationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Integration)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostIntegrationsBadRequest creates a PostIntegrationsBadRequest with default headers values
func NewPostIntegrationsBadRequest() *PostIntegrationsBadRequest {
	return &PostIntegrationsBadRequest{}
}

/*
PostIntegrationsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostIntegrationsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post integrations bad request response has a 2xx status code
func (o *PostIntegrationsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post integrations bad request response has a 3xx status code
func (o *PostIntegrationsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post integrations bad request response has a 4xx status code
func (o *PostIntegrationsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post integrations bad request response has a 5xx status code
func (o *PostIntegrationsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post integrations bad request response a status code equal to that given
func (o *PostIntegrationsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostIntegrationsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/integrations][%d] postIntegrationsBadRequest  %+v", 400, o.Payload)
}

func (o *PostIntegrationsBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/integrations][%d] postIntegrationsBadRequest  %+v", 400, o.Payload)
}

func (o *PostIntegrationsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostIntegrationsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostIntegrationsUnauthorized creates a PostIntegrationsUnauthorized with default headers values
func NewPostIntegrationsUnauthorized() *PostIntegrationsUnauthorized {
	return &PostIntegrationsUnauthorized{}
}

/*
PostIntegrationsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostIntegrationsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post integrations unauthorized response has a 2xx status code
func (o *PostIntegrationsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post integrations unauthorized response has a 3xx status code
func (o *PostIntegrationsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post integrations unauthorized response has a 4xx status code
func (o *PostIntegrationsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post integrations unauthorized response has a 5xx status code
func (o *PostIntegrationsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post integrations unauthorized response a status code equal to that given
func (o *PostIntegrationsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostIntegrationsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/integrations][%d] postIntegrationsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostIntegrationsUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/integrations][%d] postIntegrationsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostIntegrationsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostIntegrationsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostIntegrationsForbidden creates a PostIntegrationsForbidden with default headers values
func NewPostIntegrationsForbidden() *PostIntegrationsForbidden {
	return &PostIntegrationsForbidden{}
}

/*
PostIntegrationsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostIntegrationsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post integrations forbidden response has a 2xx status code
func (o *PostIntegrationsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post integrations forbidden response has a 3xx status code
func (o *PostIntegrationsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post integrations forbidden response has a 4xx status code
func (o *PostIntegrationsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post integrations forbidden response has a 5xx status code
func (o *PostIntegrationsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post integrations forbidden response a status code equal to that given
func (o *PostIntegrationsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostIntegrationsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/integrations][%d] postIntegrationsForbidden  %+v", 403, o.Payload)
}

func (o *PostIntegrationsForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/integrations][%d] postIntegrationsForbidden  %+v", 403, o.Payload)
}

func (o *PostIntegrationsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostIntegrationsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostIntegrationsNotFound creates a PostIntegrationsNotFound with default headers values
func NewPostIntegrationsNotFound() *PostIntegrationsNotFound {
	return &PostIntegrationsNotFound{}
}

/*
PostIntegrationsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostIntegrationsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post integrations not found response has a 2xx status code
func (o *PostIntegrationsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post integrations not found response has a 3xx status code
func (o *PostIntegrationsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post integrations not found response has a 4xx status code
func (o *PostIntegrationsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post integrations not found response has a 5xx status code
func (o *PostIntegrationsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post integrations not found response a status code equal to that given
func (o *PostIntegrationsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostIntegrationsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/integrations][%d] postIntegrationsNotFound  %+v", 404, o.Payload)
}

func (o *PostIntegrationsNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/integrations][%d] postIntegrationsNotFound  %+v", 404, o.Payload)
}

func (o *PostIntegrationsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostIntegrationsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostIntegrationsRequestTimeout creates a PostIntegrationsRequestTimeout with default headers values
func NewPostIntegrationsRequestTimeout() *PostIntegrationsRequestTimeout {
	return &PostIntegrationsRequestTimeout{}
}

/*
PostIntegrationsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostIntegrationsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post integrations request timeout response has a 2xx status code
func (o *PostIntegrationsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post integrations request timeout response has a 3xx status code
func (o *PostIntegrationsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post integrations request timeout response has a 4xx status code
func (o *PostIntegrationsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post integrations request timeout response has a 5xx status code
func (o *PostIntegrationsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post integrations request timeout response a status code equal to that given
func (o *PostIntegrationsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostIntegrationsRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/integrations][%d] postIntegrationsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostIntegrationsRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/integrations][%d] postIntegrationsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostIntegrationsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostIntegrationsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostIntegrationsRequestEntityTooLarge creates a PostIntegrationsRequestEntityTooLarge with default headers values
func NewPostIntegrationsRequestEntityTooLarge() *PostIntegrationsRequestEntityTooLarge {
	return &PostIntegrationsRequestEntityTooLarge{}
}

/*
PostIntegrationsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PostIntegrationsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post integrations request entity too large response has a 2xx status code
func (o *PostIntegrationsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post integrations request entity too large response has a 3xx status code
func (o *PostIntegrationsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post integrations request entity too large response has a 4xx status code
func (o *PostIntegrationsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post integrations request entity too large response has a 5xx status code
func (o *PostIntegrationsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post integrations request entity too large response a status code equal to that given
func (o *PostIntegrationsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostIntegrationsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/integrations][%d] postIntegrationsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostIntegrationsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/integrations][%d] postIntegrationsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostIntegrationsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostIntegrationsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostIntegrationsUnsupportedMediaType creates a PostIntegrationsUnsupportedMediaType with default headers values
func NewPostIntegrationsUnsupportedMediaType() *PostIntegrationsUnsupportedMediaType {
	return &PostIntegrationsUnsupportedMediaType{}
}

/*
PostIntegrationsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostIntegrationsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post integrations unsupported media type response has a 2xx status code
func (o *PostIntegrationsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post integrations unsupported media type response has a 3xx status code
func (o *PostIntegrationsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post integrations unsupported media type response has a 4xx status code
func (o *PostIntegrationsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post integrations unsupported media type response has a 5xx status code
func (o *PostIntegrationsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post integrations unsupported media type response a status code equal to that given
func (o *PostIntegrationsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostIntegrationsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/integrations][%d] postIntegrationsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostIntegrationsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/integrations][%d] postIntegrationsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostIntegrationsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostIntegrationsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostIntegrationsTooManyRequests creates a PostIntegrationsTooManyRequests with default headers values
func NewPostIntegrationsTooManyRequests() *PostIntegrationsTooManyRequests {
	return &PostIntegrationsTooManyRequests{}
}

/*
PostIntegrationsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostIntegrationsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post integrations too many requests response has a 2xx status code
func (o *PostIntegrationsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post integrations too many requests response has a 3xx status code
func (o *PostIntegrationsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post integrations too many requests response has a 4xx status code
func (o *PostIntegrationsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post integrations too many requests response has a 5xx status code
func (o *PostIntegrationsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post integrations too many requests response a status code equal to that given
func (o *PostIntegrationsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostIntegrationsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/integrations][%d] postIntegrationsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostIntegrationsTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/integrations][%d] postIntegrationsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostIntegrationsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostIntegrationsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostIntegrationsInternalServerError creates a PostIntegrationsInternalServerError with default headers values
func NewPostIntegrationsInternalServerError() *PostIntegrationsInternalServerError {
	return &PostIntegrationsInternalServerError{}
}

/*
PostIntegrationsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostIntegrationsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post integrations internal server error response has a 2xx status code
func (o *PostIntegrationsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post integrations internal server error response has a 3xx status code
func (o *PostIntegrationsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post integrations internal server error response has a 4xx status code
func (o *PostIntegrationsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post integrations internal server error response has a 5xx status code
func (o *PostIntegrationsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post integrations internal server error response a status code equal to that given
func (o *PostIntegrationsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostIntegrationsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/integrations][%d] postIntegrationsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostIntegrationsInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/integrations][%d] postIntegrationsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostIntegrationsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostIntegrationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostIntegrationsServiceUnavailable creates a PostIntegrationsServiceUnavailable with default headers values
func NewPostIntegrationsServiceUnavailable() *PostIntegrationsServiceUnavailable {
	return &PostIntegrationsServiceUnavailable{}
}

/*
PostIntegrationsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostIntegrationsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post integrations service unavailable response has a 2xx status code
func (o *PostIntegrationsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post integrations service unavailable response has a 3xx status code
func (o *PostIntegrationsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post integrations service unavailable response has a 4xx status code
func (o *PostIntegrationsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post integrations service unavailable response has a 5xx status code
func (o *PostIntegrationsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post integrations service unavailable response a status code equal to that given
func (o *PostIntegrationsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostIntegrationsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/integrations][%d] postIntegrationsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostIntegrationsServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/integrations][%d] postIntegrationsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostIntegrationsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostIntegrationsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostIntegrationsGatewayTimeout creates a PostIntegrationsGatewayTimeout with default headers values
func NewPostIntegrationsGatewayTimeout() *PostIntegrationsGatewayTimeout {
	return &PostIntegrationsGatewayTimeout{}
}

/*
PostIntegrationsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostIntegrationsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post integrations gateway timeout response has a 2xx status code
func (o *PostIntegrationsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post integrations gateway timeout response has a 3xx status code
func (o *PostIntegrationsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post integrations gateway timeout response has a 4xx status code
func (o *PostIntegrationsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post integrations gateway timeout response has a 5xx status code
func (o *PostIntegrationsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post integrations gateway timeout response a status code equal to that given
func (o *PostIntegrationsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostIntegrationsGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/integrations][%d] postIntegrationsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostIntegrationsGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/integrations][%d] postIntegrationsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostIntegrationsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostIntegrationsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
