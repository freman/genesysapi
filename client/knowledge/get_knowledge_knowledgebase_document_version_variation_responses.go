// Code generated by go-swagger; DO NOT EDIT.

package knowledge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetKnowledgeKnowledgebaseDocumentVersionVariationReader is a Reader for the GetKnowledgeKnowledgebaseDocumentVersionVariation structure.
type GetKnowledgeKnowledgebaseDocumentVersionVariationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetKnowledgeKnowledgebaseDocumentVersionVariationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetKnowledgeKnowledgebaseDocumentVersionVariationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetKnowledgeKnowledgebaseDocumentVersionVariationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetKnowledgeKnowledgebaseDocumentVersionVariationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetKnowledgeKnowledgebaseDocumentVersionVariationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetKnowledgeKnowledgebaseDocumentVersionVariationRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetKnowledgeKnowledgebaseDocumentVersionVariationRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetKnowledgeKnowledgebaseDocumentVersionVariationUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetKnowledgeKnowledgebaseDocumentVersionVariationTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetKnowledgeKnowledgebaseDocumentVersionVariationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetKnowledgeKnowledgebaseDocumentVersionVariationServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetKnowledgeKnowledgebaseDocumentVersionVariationGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetKnowledgeKnowledgebaseDocumentVersionVariationOK creates a GetKnowledgeKnowledgebaseDocumentVersionVariationOK with default headers values
func NewGetKnowledgeKnowledgebaseDocumentVersionVariationOK() *GetKnowledgeKnowledgebaseDocumentVersionVariationOK {
	return &GetKnowledgeKnowledgebaseDocumentVersionVariationOK{}
}

/*
GetKnowledgeKnowledgebaseDocumentVersionVariationOK describes a response with status code 200, with default header values.

successful operation
*/
type GetKnowledgeKnowledgebaseDocumentVersionVariationOK struct {
	Payload *models.KnowledgeDocumentVersionVariation
}

// IsSuccess returns true when this get knowledge knowledgebase document version variation o k response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get knowledge knowledgebase document version variation o k response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase document version variation o k response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get knowledge knowledgebase document version variation o k response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase document version variation o k response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations/{variationId}][%d] getKnowledgeKnowledgebaseDocumentVersionVariationOK  %+v", 200, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationOK) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations/{variationId}][%d] getKnowledgeKnowledgebaseDocumentVersionVariationOK  %+v", 200, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationOK) GetPayload() *models.KnowledgeDocumentVersionVariation {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KnowledgeDocumentVersionVariation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseDocumentVersionVariationBadRequest creates a GetKnowledgeKnowledgebaseDocumentVersionVariationBadRequest with default headers values
func NewGetKnowledgeKnowledgebaseDocumentVersionVariationBadRequest() *GetKnowledgeKnowledgebaseDocumentVersionVariationBadRequest {
	return &GetKnowledgeKnowledgebaseDocumentVersionVariationBadRequest{}
}

/*
GetKnowledgeKnowledgebaseDocumentVersionVariationBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetKnowledgeKnowledgebaseDocumentVersionVariationBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase document version variation bad request response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase document version variation bad request response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase document version variation bad request response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase document version variation bad request response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase document version variation bad request response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations/{variationId}][%d] getKnowledgeKnowledgebaseDocumentVersionVariationBadRequest  %+v", 400, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations/{variationId}][%d] getKnowledgeKnowledgebaseDocumentVersionVariationBadRequest  %+v", 400, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseDocumentVersionVariationUnauthorized creates a GetKnowledgeKnowledgebaseDocumentVersionVariationUnauthorized with default headers values
func NewGetKnowledgeKnowledgebaseDocumentVersionVariationUnauthorized() *GetKnowledgeKnowledgebaseDocumentVersionVariationUnauthorized {
	return &GetKnowledgeKnowledgebaseDocumentVersionVariationUnauthorized{}
}

/*
GetKnowledgeKnowledgebaseDocumentVersionVariationUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetKnowledgeKnowledgebaseDocumentVersionVariationUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase document version variation unauthorized response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase document version variation unauthorized response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase document version variation unauthorized response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase document version variation unauthorized response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase document version variation unauthorized response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations/{variationId}][%d] getKnowledgeKnowledgebaseDocumentVersionVariationUnauthorized  %+v", 401, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations/{variationId}][%d] getKnowledgeKnowledgebaseDocumentVersionVariationUnauthorized  %+v", 401, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseDocumentVersionVariationForbidden creates a GetKnowledgeKnowledgebaseDocumentVersionVariationForbidden with default headers values
func NewGetKnowledgeKnowledgebaseDocumentVersionVariationForbidden() *GetKnowledgeKnowledgebaseDocumentVersionVariationForbidden {
	return &GetKnowledgeKnowledgebaseDocumentVersionVariationForbidden{}
}

/*
GetKnowledgeKnowledgebaseDocumentVersionVariationForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetKnowledgeKnowledgebaseDocumentVersionVariationForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase document version variation forbidden response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase document version variation forbidden response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase document version variation forbidden response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase document version variation forbidden response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase document version variation forbidden response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations/{variationId}][%d] getKnowledgeKnowledgebaseDocumentVersionVariationForbidden  %+v", 403, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations/{variationId}][%d] getKnowledgeKnowledgebaseDocumentVersionVariationForbidden  %+v", 403, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseDocumentVersionVariationNotFound creates a GetKnowledgeKnowledgebaseDocumentVersionVariationNotFound with default headers values
func NewGetKnowledgeKnowledgebaseDocumentVersionVariationNotFound() *GetKnowledgeKnowledgebaseDocumentVersionVariationNotFound {
	return &GetKnowledgeKnowledgebaseDocumentVersionVariationNotFound{}
}

/*
GetKnowledgeKnowledgebaseDocumentVersionVariationNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetKnowledgeKnowledgebaseDocumentVersionVariationNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase document version variation not found response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase document version variation not found response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase document version variation not found response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase document version variation not found response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase document version variation not found response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations/{variationId}][%d] getKnowledgeKnowledgebaseDocumentVersionVariationNotFound  %+v", 404, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations/{variationId}][%d] getKnowledgeKnowledgebaseDocumentVersionVariationNotFound  %+v", 404, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseDocumentVersionVariationRequestTimeout creates a GetKnowledgeKnowledgebaseDocumentVersionVariationRequestTimeout with default headers values
func NewGetKnowledgeKnowledgebaseDocumentVersionVariationRequestTimeout() *GetKnowledgeKnowledgebaseDocumentVersionVariationRequestTimeout {
	return &GetKnowledgeKnowledgebaseDocumentVersionVariationRequestTimeout{}
}

/*
GetKnowledgeKnowledgebaseDocumentVersionVariationRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetKnowledgeKnowledgebaseDocumentVersionVariationRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase document version variation request timeout response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase document version variation request timeout response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase document version variation request timeout response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase document version variation request timeout response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase document version variation request timeout response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations/{variationId}][%d] getKnowledgeKnowledgebaseDocumentVersionVariationRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations/{variationId}][%d] getKnowledgeKnowledgebaseDocumentVersionVariationRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseDocumentVersionVariationRequestEntityTooLarge creates a GetKnowledgeKnowledgebaseDocumentVersionVariationRequestEntityTooLarge with default headers values
func NewGetKnowledgeKnowledgebaseDocumentVersionVariationRequestEntityTooLarge() *GetKnowledgeKnowledgebaseDocumentVersionVariationRequestEntityTooLarge {
	return &GetKnowledgeKnowledgebaseDocumentVersionVariationRequestEntityTooLarge{}
}

/*
GetKnowledgeKnowledgebaseDocumentVersionVariationRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetKnowledgeKnowledgebaseDocumentVersionVariationRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase document version variation request entity too large response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase document version variation request entity too large response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase document version variation request entity too large response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase document version variation request entity too large response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase document version variation request entity too large response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations/{variationId}][%d] getKnowledgeKnowledgebaseDocumentVersionVariationRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations/{variationId}][%d] getKnowledgeKnowledgebaseDocumentVersionVariationRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseDocumentVersionVariationUnsupportedMediaType creates a GetKnowledgeKnowledgebaseDocumentVersionVariationUnsupportedMediaType with default headers values
func NewGetKnowledgeKnowledgebaseDocumentVersionVariationUnsupportedMediaType() *GetKnowledgeKnowledgebaseDocumentVersionVariationUnsupportedMediaType {
	return &GetKnowledgeKnowledgebaseDocumentVersionVariationUnsupportedMediaType{}
}

/*
GetKnowledgeKnowledgebaseDocumentVersionVariationUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetKnowledgeKnowledgebaseDocumentVersionVariationUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase document version variation unsupported media type response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase document version variation unsupported media type response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase document version variation unsupported media type response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase document version variation unsupported media type response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase document version variation unsupported media type response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations/{variationId}][%d] getKnowledgeKnowledgebaseDocumentVersionVariationUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations/{variationId}][%d] getKnowledgeKnowledgebaseDocumentVersionVariationUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseDocumentVersionVariationTooManyRequests creates a GetKnowledgeKnowledgebaseDocumentVersionVariationTooManyRequests with default headers values
func NewGetKnowledgeKnowledgebaseDocumentVersionVariationTooManyRequests() *GetKnowledgeKnowledgebaseDocumentVersionVariationTooManyRequests {
	return &GetKnowledgeKnowledgebaseDocumentVersionVariationTooManyRequests{}
}

/*
GetKnowledgeKnowledgebaseDocumentVersionVariationTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetKnowledgeKnowledgebaseDocumentVersionVariationTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase document version variation too many requests response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase document version variation too many requests response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase document version variation too many requests response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase document version variation too many requests response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase document version variation too many requests response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations/{variationId}][%d] getKnowledgeKnowledgebaseDocumentVersionVariationTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations/{variationId}][%d] getKnowledgeKnowledgebaseDocumentVersionVariationTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseDocumentVersionVariationInternalServerError creates a GetKnowledgeKnowledgebaseDocumentVersionVariationInternalServerError with default headers values
func NewGetKnowledgeKnowledgebaseDocumentVersionVariationInternalServerError() *GetKnowledgeKnowledgebaseDocumentVersionVariationInternalServerError {
	return &GetKnowledgeKnowledgebaseDocumentVersionVariationInternalServerError{}
}

/*
GetKnowledgeKnowledgebaseDocumentVersionVariationInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetKnowledgeKnowledgebaseDocumentVersionVariationInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase document version variation internal server error response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase document version variation internal server error response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase document version variation internal server error response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get knowledge knowledgebase document version variation internal server error response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get knowledge knowledgebase document version variation internal server error response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations/{variationId}][%d] getKnowledgeKnowledgebaseDocumentVersionVariationInternalServerError  %+v", 500, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations/{variationId}][%d] getKnowledgeKnowledgebaseDocumentVersionVariationInternalServerError  %+v", 500, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseDocumentVersionVariationServiceUnavailable creates a GetKnowledgeKnowledgebaseDocumentVersionVariationServiceUnavailable with default headers values
func NewGetKnowledgeKnowledgebaseDocumentVersionVariationServiceUnavailable() *GetKnowledgeKnowledgebaseDocumentVersionVariationServiceUnavailable {
	return &GetKnowledgeKnowledgebaseDocumentVersionVariationServiceUnavailable{}
}

/*
GetKnowledgeKnowledgebaseDocumentVersionVariationServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetKnowledgeKnowledgebaseDocumentVersionVariationServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase document version variation service unavailable response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase document version variation service unavailable response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase document version variation service unavailable response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get knowledge knowledgebase document version variation service unavailable response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get knowledge knowledgebase document version variation service unavailable response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations/{variationId}][%d] getKnowledgeKnowledgebaseDocumentVersionVariationServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations/{variationId}][%d] getKnowledgeKnowledgebaseDocumentVersionVariationServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseDocumentVersionVariationGatewayTimeout creates a GetKnowledgeKnowledgebaseDocumentVersionVariationGatewayTimeout with default headers values
func NewGetKnowledgeKnowledgebaseDocumentVersionVariationGatewayTimeout() *GetKnowledgeKnowledgebaseDocumentVersionVariationGatewayTimeout {
	return &GetKnowledgeKnowledgebaseDocumentVersionVariationGatewayTimeout{}
}

/*
GetKnowledgeKnowledgebaseDocumentVersionVariationGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetKnowledgeKnowledgebaseDocumentVersionVariationGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase document version variation gateway timeout response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase document version variation gateway timeout response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase document version variation gateway timeout response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get knowledge knowledgebase document version variation gateway timeout response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get knowledge knowledgebase document version variation gateway timeout response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations/{variationId}][%d] getKnowledgeKnowledgebaseDocumentVersionVariationGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations/{variationId}][%d] getKnowledgeKnowledgebaseDocumentVersionVariationGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
