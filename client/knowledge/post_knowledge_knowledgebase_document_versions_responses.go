// Code generated by go-swagger; DO NOT EDIT.

package knowledge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostKnowledgeKnowledgebaseDocumentVersionsReader is a Reader for the PostKnowledgeKnowledgebaseDocumentVersions structure.
type PostKnowledgeKnowledgebaseDocumentVersionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostKnowledgeKnowledgebaseDocumentVersionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostKnowledgeKnowledgebaseDocumentVersionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostKnowledgeKnowledgebaseDocumentVersionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostKnowledgeKnowledgebaseDocumentVersionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostKnowledgeKnowledgebaseDocumentVersionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostKnowledgeKnowledgebaseDocumentVersionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostKnowledgeKnowledgebaseDocumentVersionsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostKnowledgeKnowledgebaseDocumentVersionsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostKnowledgeKnowledgebaseDocumentVersionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostKnowledgeKnowledgebaseDocumentVersionsOK creates a PostKnowledgeKnowledgebaseDocumentVersionsOK with default headers values
func NewPostKnowledgeKnowledgebaseDocumentVersionsOK() *PostKnowledgeKnowledgebaseDocumentVersionsOK {
	return &PostKnowledgeKnowledgebaseDocumentVersionsOK{}
}

/*
PostKnowledgeKnowledgebaseDocumentVersionsOK describes a response with status code 200, with default header values.

successful operation
*/
type PostKnowledgeKnowledgebaseDocumentVersionsOK struct {
	Payload *models.KnowledgeDocumentVersion
}

// IsSuccess returns true when this post knowledge knowledgebase document versions o k response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseDocumentVersionsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post knowledge knowledgebase document versions o k response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseDocumentVersionsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase document versions o k response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseDocumentVersionsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post knowledge knowledgebase document versions o k response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseDocumentVersionsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post knowledge knowledgebase document versions o k response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseDocumentVersionsOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostKnowledgeKnowledgebaseDocumentVersionsOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] postKnowledgeKnowledgebaseDocumentVersionsOK  %+v", 200, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentVersionsOK) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] postKnowledgeKnowledgebaseDocumentVersionsOK  %+v", 200, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentVersionsOK) GetPayload() *models.KnowledgeDocumentVersion {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseDocumentVersionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KnowledgeDocumentVersion)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseDocumentVersionsBadRequest creates a PostKnowledgeKnowledgebaseDocumentVersionsBadRequest with default headers values
func NewPostKnowledgeKnowledgebaseDocumentVersionsBadRequest() *PostKnowledgeKnowledgebaseDocumentVersionsBadRequest {
	return &PostKnowledgeKnowledgebaseDocumentVersionsBadRequest{}
}

/*
PostKnowledgeKnowledgebaseDocumentVersionsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostKnowledgeKnowledgebaseDocumentVersionsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post knowledge knowledgebase document versions bad request response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseDocumentVersionsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post knowledge knowledgebase document versions bad request response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseDocumentVersionsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase document versions bad request response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseDocumentVersionsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post knowledge knowledgebase document versions bad request response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseDocumentVersionsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post knowledge knowledgebase document versions bad request response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseDocumentVersionsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostKnowledgeKnowledgebaseDocumentVersionsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] postKnowledgeKnowledgebaseDocumentVersionsBadRequest  %+v", 400, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentVersionsBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] postKnowledgeKnowledgebaseDocumentVersionsBadRequest  %+v", 400, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentVersionsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseDocumentVersionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseDocumentVersionsUnauthorized creates a PostKnowledgeKnowledgebaseDocumentVersionsUnauthorized with default headers values
func NewPostKnowledgeKnowledgebaseDocumentVersionsUnauthorized() *PostKnowledgeKnowledgebaseDocumentVersionsUnauthorized {
	return &PostKnowledgeKnowledgebaseDocumentVersionsUnauthorized{}
}

/*
PostKnowledgeKnowledgebaseDocumentVersionsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostKnowledgeKnowledgebaseDocumentVersionsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post knowledge knowledgebase document versions unauthorized response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseDocumentVersionsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post knowledge knowledgebase document versions unauthorized response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseDocumentVersionsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase document versions unauthorized response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseDocumentVersionsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post knowledge knowledgebase document versions unauthorized response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseDocumentVersionsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post knowledge knowledgebase document versions unauthorized response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseDocumentVersionsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostKnowledgeKnowledgebaseDocumentVersionsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] postKnowledgeKnowledgebaseDocumentVersionsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentVersionsUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] postKnowledgeKnowledgebaseDocumentVersionsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentVersionsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseDocumentVersionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseDocumentVersionsForbidden creates a PostKnowledgeKnowledgebaseDocumentVersionsForbidden with default headers values
func NewPostKnowledgeKnowledgebaseDocumentVersionsForbidden() *PostKnowledgeKnowledgebaseDocumentVersionsForbidden {
	return &PostKnowledgeKnowledgebaseDocumentVersionsForbidden{}
}

/*
PostKnowledgeKnowledgebaseDocumentVersionsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostKnowledgeKnowledgebaseDocumentVersionsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post knowledge knowledgebase document versions forbidden response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseDocumentVersionsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post knowledge knowledgebase document versions forbidden response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseDocumentVersionsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase document versions forbidden response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseDocumentVersionsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post knowledge knowledgebase document versions forbidden response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseDocumentVersionsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post knowledge knowledgebase document versions forbidden response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseDocumentVersionsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostKnowledgeKnowledgebaseDocumentVersionsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] postKnowledgeKnowledgebaseDocumentVersionsForbidden  %+v", 403, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentVersionsForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] postKnowledgeKnowledgebaseDocumentVersionsForbidden  %+v", 403, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentVersionsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseDocumentVersionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseDocumentVersionsNotFound creates a PostKnowledgeKnowledgebaseDocumentVersionsNotFound with default headers values
func NewPostKnowledgeKnowledgebaseDocumentVersionsNotFound() *PostKnowledgeKnowledgebaseDocumentVersionsNotFound {
	return &PostKnowledgeKnowledgebaseDocumentVersionsNotFound{}
}

/*
PostKnowledgeKnowledgebaseDocumentVersionsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostKnowledgeKnowledgebaseDocumentVersionsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post knowledge knowledgebase document versions not found response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseDocumentVersionsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post knowledge knowledgebase document versions not found response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseDocumentVersionsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase document versions not found response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseDocumentVersionsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post knowledge knowledgebase document versions not found response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseDocumentVersionsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post knowledge knowledgebase document versions not found response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseDocumentVersionsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostKnowledgeKnowledgebaseDocumentVersionsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] postKnowledgeKnowledgebaseDocumentVersionsNotFound  %+v", 404, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentVersionsNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] postKnowledgeKnowledgebaseDocumentVersionsNotFound  %+v", 404, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentVersionsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseDocumentVersionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseDocumentVersionsRequestTimeout creates a PostKnowledgeKnowledgebaseDocumentVersionsRequestTimeout with default headers values
func NewPostKnowledgeKnowledgebaseDocumentVersionsRequestTimeout() *PostKnowledgeKnowledgebaseDocumentVersionsRequestTimeout {
	return &PostKnowledgeKnowledgebaseDocumentVersionsRequestTimeout{}
}

/*
PostKnowledgeKnowledgebaseDocumentVersionsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostKnowledgeKnowledgebaseDocumentVersionsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post knowledge knowledgebase document versions request timeout response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseDocumentVersionsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post knowledge knowledgebase document versions request timeout response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseDocumentVersionsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase document versions request timeout response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseDocumentVersionsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post knowledge knowledgebase document versions request timeout response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseDocumentVersionsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post knowledge knowledgebase document versions request timeout response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseDocumentVersionsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostKnowledgeKnowledgebaseDocumentVersionsRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] postKnowledgeKnowledgebaseDocumentVersionsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentVersionsRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] postKnowledgeKnowledgebaseDocumentVersionsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentVersionsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseDocumentVersionsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge creates a PostKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge with default headers values
func NewPostKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge() *PostKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge {
	return &PostKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge{}
}

/*
PostKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PostKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post knowledge knowledgebase document versions request entity too large response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post knowledge knowledgebase document versions request entity too large response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase document versions request entity too large response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post knowledge knowledgebase document versions request entity too large response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post knowledge knowledgebase document versions request entity too large response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] postKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] postKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType creates a PostKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType with default headers values
func NewPostKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType() *PostKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType {
	return &PostKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType{}
}

/*
PostKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post knowledge knowledgebase document versions unsupported media type response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post knowledge knowledgebase document versions unsupported media type response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase document versions unsupported media type response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post knowledge knowledgebase document versions unsupported media type response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post knowledge knowledgebase document versions unsupported media type response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] postKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] postKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseDocumentVersionsTooManyRequests creates a PostKnowledgeKnowledgebaseDocumentVersionsTooManyRequests with default headers values
func NewPostKnowledgeKnowledgebaseDocumentVersionsTooManyRequests() *PostKnowledgeKnowledgebaseDocumentVersionsTooManyRequests {
	return &PostKnowledgeKnowledgebaseDocumentVersionsTooManyRequests{}
}

/*
PostKnowledgeKnowledgebaseDocumentVersionsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostKnowledgeKnowledgebaseDocumentVersionsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post knowledge knowledgebase document versions too many requests response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseDocumentVersionsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post knowledge knowledgebase document versions too many requests response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseDocumentVersionsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase document versions too many requests response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseDocumentVersionsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post knowledge knowledgebase document versions too many requests response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseDocumentVersionsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post knowledge knowledgebase document versions too many requests response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseDocumentVersionsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostKnowledgeKnowledgebaseDocumentVersionsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] postKnowledgeKnowledgebaseDocumentVersionsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentVersionsTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] postKnowledgeKnowledgebaseDocumentVersionsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentVersionsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseDocumentVersionsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseDocumentVersionsInternalServerError creates a PostKnowledgeKnowledgebaseDocumentVersionsInternalServerError with default headers values
func NewPostKnowledgeKnowledgebaseDocumentVersionsInternalServerError() *PostKnowledgeKnowledgebaseDocumentVersionsInternalServerError {
	return &PostKnowledgeKnowledgebaseDocumentVersionsInternalServerError{}
}

/*
PostKnowledgeKnowledgebaseDocumentVersionsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostKnowledgeKnowledgebaseDocumentVersionsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post knowledge knowledgebase document versions internal server error response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseDocumentVersionsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post knowledge knowledgebase document versions internal server error response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseDocumentVersionsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase document versions internal server error response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseDocumentVersionsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post knowledge knowledgebase document versions internal server error response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseDocumentVersionsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post knowledge knowledgebase document versions internal server error response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseDocumentVersionsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostKnowledgeKnowledgebaseDocumentVersionsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] postKnowledgeKnowledgebaseDocumentVersionsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentVersionsInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] postKnowledgeKnowledgebaseDocumentVersionsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentVersionsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseDocumentVersionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable creates a PostKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable with default headers values
func NewPostKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable() *PostKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable {
	return &PostKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable{}
}

/*
PostKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post knowledge knowledgebase document versions service unavailable response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post knowledge knowledgebase document versions service unavailable response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase document versions service unavailable response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post knowledge knowledgebase document versions service unavailable response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post knowledge knowledgebase document versions service unavailable response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] postKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] postKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout creates a PostKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout with default headers values
func NewPostKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout() *PostKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout {
	return &PostKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout{}
}

/*
PostKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post knowledge knowledgebase document versions gateway timeout response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post knowledge knowledgebase document versions gateway timeout response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase document versions gateway timeout response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post knowledge knowledgebase document versions gateway timeout response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post knowledge knowledgebase document versions gateway timeout response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] postKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] postKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
