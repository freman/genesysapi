// Code generated by go-swagger; DO NOT EDIT.

package knowledge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// DeleteKnowledgeKnowledgebaseDocumentReader is a Reader for the DeleteKnowledgeKnowledgebaseDocument structure.
type DeleteKnowledgeKnowledgebaseDocumentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteKnowledgeKnowledgebaseDocumentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteKnowledgeKnowledgebaseDocumentNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteKnowledgeKnowledgebaseDocumentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteKnowledgeKnowledgebaseDocumentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteKnowledgeKnowledgebaseDocumentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteKnowledgeKnowledgebaseDocumentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewDeleteKnowledgeKnowledgebaseDocumentRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewDeleteKnowledgeKnowledgebaseDocumentRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDeleteKnowledgeKnowledgebaseDocumentUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteKnowledgeKnowledgebaseDocumentTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteKnowledgeKnowledgebaseDocumentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteKnowledgeKnowledgebaseDocumentServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteKnowledgeKnowledgebaseDocumentGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteKnowledgeKnowledgebaseDocumentNoContent creates a DeleteKnowledgeKnowledgebaseDocumentNoContent with default headers values
func NewDeleteKnowledgeKnowledgebaseDocumentNoContent() *DeleteKnowledgeKnowledgebaseDocumentNoContent {
	return &DeleteKnowledgeKnowledgebaseDocumentNoContent{}
}

/*DeleteKnowledgeKnowledgebaseDocumentNoContent handles this case with default header values.

Document deleted.
*/
type DeleteKnowledgeKnowledgebaseDocumentNoContent struct {
}

func (o *DeleteKnowledgeKnowledgebaseDocumentNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}][%d] deleteKnowledgeKnowledgebaseDocumentNoContent ", 204)
}

func (o *DeleteKnowledgeKnowledgebaseDocumentNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteKnowledgeKnowledgebaseDocumentBadRequest creates a DeleteKnowledgeKnowledgebaseDocumentBadRequest with default headers values
func NewDeleteKnowledgeKnowledgebaseDocumentBadRequest() *DeleteKnowledgeKnowledgebaseDocumentBadRequest {
	return &DeleteKnowledgeKnowledgebaseDocumentBadRequest{}
}

/*DeleteKnowledgeKnowledgebaseDocumentBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type DeleteKnowledgeKnowledgebaseDocumentBadRequest struct {
	Payload *models.ErrorBody
}

func (o *DeleteKnowledgeKnowledgebaseDocumentBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}][%d] deleteKnowledgeKnowledgebaseDocumentBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteKnowledgeKnowledgebaseDocumentBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteKnowledgeKnowledgebaseDocumentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteKnowledgeKnowledgebaseDocumentUnauthorized creates a DeleteKnowledgeKnowledgebaseDocumentUnauthorized with default headers values
func NewDeleteKnowledgeKnowledgebaseDocumentUnauthorized() *DeleteKnowledgeKnowledgebaseDocumentUnauthorized {
	return &DeleteKnowledgeKnowledgebaseDocumentUnauthorized{}
}

/*DeleteKnowledgeKnowledgebaseDocumentUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type DeleteKnowledgeKnowledgebaseDocumentUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *DeleteKnowledgeKnowledgebaseDocumentUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}][%d] deleteKnowledgeKnowledgebaseDocumentUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteKnowledgeKnowledgebaseDocumentUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteKnowledgeKnowledgebaseDocumentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteKnowledgeKnowledgebaseDocumentForbidden creates a DeleteKnowledgeKnowledgebaseDocumentForbidden with default headers values
func NewDeleteKnowledgeKnowledgebaseDocumentForbidden() *DeleteKnowledgeKnowledgebaseDocumentForbidden {
	return &DeleteKnowledgeKnowledgebaseDocumentForbidden{}
}

/*DeleteKnowledgeKnowledgebaseDocumentForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type DeleteKnowledgeKnowledgebaseDocumentForbidden struct {
	Payload *models.ErrorBody
}

func (o *DeleteKnowledgeKnowledgebaseDocumentForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}][%d] deleteKnowledgeKnowledgebaseDocumentForbidden  %+v", 403, o.Payload)
}

func (o *DeleteKnowledgeKnowledgebaseDocumentForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteKnowledgeKnowledgebaseDocumentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteKnowledgeKnowledgebaseDocumentNotFound creates a DeleteKnowledgeKnowledgebaseDocumentNotFound with default headers values
func NewDeleteKnowledgeKnowledgebaseDocumentNotFound() *DeleteKnowledgeKnowledgebaseDocumentNotFound {
	return &DeleteKnowledgeKnowledgebaseDocumentNotFound{}
}

/*DeleteKnowledgeKnowledgebaseDocumentNotFound handles this case with default header values.

The requested resource was not found.
*/
type DeleteKnowledgeKnowledgebaseDocumentNotFound struct {
	Payload *models.ErrorBody
}

func (o *DeleteKnowledgeKnowledgebaseDocumentNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}][%d] deleteKnowledgeKnowledgebaseDocumentNotFound  %+v", 404, o.Payload)
}

func (o *DeleteKnowledgeKnowledgebaseDocumentNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteKnowledgeKnowledgebaseDocumentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteKnowledgeKnowledgebaseDocumentRequestTimeout creates a DeleteKnowledgeKnowledgebaseDocumentRequestTimeout with default headers values
func NewDeleteKnowledgeKnowledgebaseDocumentRequestTimeout() *DeleteKnowledgeKnowledgebaseDocumentRequestTimeout {
	return &DeleteKnowledgeKnowledgebaseDocumentRequestTimeout{}
}

/*DeleteKnowledgeKnowledgebaseDocumentRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type DeleteKnowledgeKnowledgebaseDocumentRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *DeleteKnowledgeKnowledgebaseDocumentRequestTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}][%d] deleteKnowledgeKnowledgebaseDocumentRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteKnowledgeKnowledgebaseDocumentRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteKnowledgeKnowledgebaseDocumentRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteKnowledgeKnowledgebaseDocumentRequestEntityTooLarge creates a DeleteKnowledgeKnowledgebaseDocumentRequestEntityTooLarge with default headers values
func NewDeleteKnowledgeKnowledgebaseDocumentRequestEntityTooLarge() *DeleteKnowledgeKnowledgebaseDocumentRequestEntityTooLarge {
	return &DeleteKnowledgeKnowledgebaseDocumentRequestEntityTooLarge{}
}

/*DeleteKnowledgeKnowledgebaseDocumentRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type DeleteKnowledgeKnowledgebaseDocumentRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *DeleteKnowledgeKnowledgebaseDocumentRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}][%d] deleteKnowledgeKnowledgebaseDocumentRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteKnowledgeKnowledgebaseDocumentRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteKnowledgeKnowledgebaseDocumentRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteKnowledgeKnowledgebaseDocumentUnsupportedMediaType creates a DeleteKnowledgeKnowledgebaseDocumentUnsupportedMediaType with default headers values
func NewDeleteKnowledgeKnowledgebaseDocumentUnsupportedMediaType() *DeleteKnowledgeKnowledgebaseDocumentUnsupportedMediaType {
	return &DeleteKnowledgeKnowledgebaseDocumentUnsupportedMediaType{}
}

/*DeleteKnowledgeKnowledgebaseDocumentUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type DeleteKnowledgeKnowledgebaseDocumentUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *DeleteKnowledgeKnowledgebaseDocumentUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}][%d] deleteKnowledgeKnowledgebaseDocumentUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteKnowledgeKnowledgebaseDocumentUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteKnowledgeKnowledgebaseDocumentUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteKnowledgeKnowledgebaseDocumentTooManyRequests creates a DeleteKnowledgeKnowledgebaseDocumentTooManyRequests with default headers values
func NewDeleteKnowledgeKnowledgebaseDocumentTooManyRequests() *DeleteKnowledgeKnowledgebaseDocumentTooManyRequests {
	return &DeleteKnowledgeKnowledgebaseDocumentTooManyRequests{}
}

/*DeleteKnowledgeKnowledgebaseDocumentTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type DeleteKnowledgeKnowledgebaseDocumentTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *DeleteKnowledgeKnowledgebaseDocumentTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}][%d] deleteKnowledgeKnowledgebaseDocumentTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteKnowledgeKnowledgebaseDocumentTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteKnowledgeKnowledgebaseDocumentTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteKnowledgeKnowledgebaseDocumentInternalServerError creates a DeleteKnowledgeKnowledgebaseDocumentInternalServerError with default headers values
func NewDeleteKnowledgeKnowledgebaseDocumentInternalServerError() *DeleteKnowledgeKnowledgebaseDocumentInternalServerError {
	return &DeleteKnowledgeKnowledgebaseDocumentInternalServerError{}
}

/*DeleteKnowledgeKnowledgebaseDocumentInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type DeleteKnowledgeKnowledgebaseDocumentInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *DeleteKnowledgeKnowledgebaseDocumentInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}][%d] deleteKnowledgeKnowledgebaseDocumentInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteKnowledgeKnowledgebaseDocumentInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteKnowledgeKnowledgebaseDocumentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteKnowledgeKnowledgebaseDocumentServiceUnavailable creates a DeleteKnowledgeKnowledgebaseDocumentServiceUnavailable with default headers values
func NewDeleteKnowledgeKnowledgebaseDocumentServiceUnavailable() *DeleteKnowledgeKnowledgebaseDocumentServiceUnavailable {
	return &DeleteKnowledgeKnowledgebaseDocumentServiceUnavailable{}
}

/*DeleteKnowledgeKnowledgebaseDocumentServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type DeleteKnowledgeKnowledgebaseDocumentServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *DeleteKnowledgeKnowledgebaseDocumentServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}][%d] deleteKnowledgeKnowledgebaseDocumentServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteKnowledgeKnowledgebaseDocumentServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteKnowledgeKnowledgebaseDocumentServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteKnowledgeKnowledgebaseDocumentGatewayTimeout creates a DeleteKnowledgeKnowledgebaseDocumentGatewayTimeout with default headers values
func NewDeleteKnowledgeKnowledgebaseDocumentGatewayTimeout() *DeleteKnowledgeKnowledgebaseDocumentGatewayTimeout {
	return &DeleteKnowledgeKnowledgebaseDocumentGatewayTimeout{}
}

/*DeleteKnowledgeKnowledgebaseDocumentGatewayTimeout handles this case with default header values.

The request timed out.
*/
type DeleteKnowledgeKnowledgebaseDocumentGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *DeleteKnowledgeKnowledgebaseDocumentGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}][%d] deleteKnowledgeKnowledgebaseDocumentGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteKnowledgeKnowledgebaseDocumentGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteKnowledgeKnowledgebaseDocumentGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
