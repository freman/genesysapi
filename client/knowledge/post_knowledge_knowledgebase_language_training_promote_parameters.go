// Code generated by go-swagger; DO NOT EDIT.

package knowledge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPostKnowledgeKnowledgebaseLanguageTrainingPromoteParams creates a new PostKnowledgeKnowledgebaseLanguageTrainingPromoteParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPostKnowledgeKnowledgebaseLanguageTrainingPromoteParams() *PostKnowledgeKnowledgebaseLanguageTrainingPromoteParams {
	return &PostKnowledgeKnowledgebaseLanguageTrainingPromoteParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPostKnowledgeKnowledgebaseLanguageTrainingPromoteParamsWithTimeout creates a new PostKnowledgeKnowledgebaseLanguageTrainingPromoteParams object
// with the ability to set a timeout on a request.
func NewPostKnowledgeKnowledgebaseLanguageTrainingPromoteParamsWithTimeout(timeout time.Duration) *PostKnowledgeKnowledgebaseLanguageTrainingPromoteParams {
	return &PostKnowledgeKnowledgebaseLanguageTrainingPromoteParams{
		timeout: timeout,
	}
}

// NewPostKnowledgeKnowledgebaseLanguageTrainingPromoteParamsWithContext creates a new PostKnowledgeKnowledgebaseLanguageTrainingPromoteParams object
// with the ability to set a context for a request.
func NewPostKnowledgeKnowledgebaseLanguageTrainingPromoteParamsWithContext(ctx context.Context) *PostKnowledgeKnowledgebaseLanguageTrainingPromoteParams {
	return &PostKnowledgeKnowledgebaseLanguageTrainingPromoteParams{
		Context: ctx,
	}
}

// NewPostKnowledgeKnowledgebaseLanguageTrainingPromoteParamsWithHTTPClient creates a new PostKnowledgeKnowledgebaseLanguageTrainingPromoteParams object
// with the ability to set a custom HTTPClient for a request.
func NewPostKnowledgeKnowledgebaseLanguageTrainingPromoteParamsWithHTTPClient(client *http.Client) *PostKnowledgeKnowledgebaseLanguageTrainingPromoteParams {
	return &PostKnowledgeKnowledgebaseLanguageTrainingPromoteParams{
		HTTPClient: client,
	}
}

/*
PostKnowledgeKnowledgebaseLanguageTrainingPromoteParams contains all the parameters to send to the API endpoint

	for the post knowledge knowledgebase language training promote operation.

	Typically these are written to a http.Request.
*/
type PostKnowledgeKnowledgebaseLanguageTrainingPromoteParams struct {

	/* KnowledgeBaseID.

	   Knowledge base ID
	*/
	KnowledgeBaseID string

	/* LanguageCode.

	   Language code, format: iso2-LOCALE
	*/
	LanguageCode string

	/* TrainingID.

	   Training ID
	*/
	TrainingID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the post knowledge knowledgebase language training promote params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteParams) WithDefaults() *PostKnowledgeKnowledgebaseLanguageTrainingPromoteParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the post knowledge knowledgebase language training promote params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the post knowledge knowledgebase language training promote params
func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteParams) WithTimeout(timeout time.Duration) *PostKnowledgeKnowledgebaseLanguageTrainingPromoteParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post knowledge knowledgebase language training promote params
func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post knowledge knowledgebase language training promote params
func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteParams) WithContext(ctx context.Context) *PostKnowledgeKnowledgebaseLanguageTrainingPromoteParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post knowledge knowledgebase language training promote params
func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post knowledge knowledgebase language training promote params
func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteParams) WithHTTPClient(client *http.Client) *PostKnowledgeKnowledgebaseLanguageTrainingPromoteParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post knowledge knowledgebase language training promote params
func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithKnowledgeBaseID adds the knowledgeBaseID to the post knowledge knowledgebase language training promote params
func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteParams) WithKnowledgeBaseID(knowledgeBaseID string) *PostKnowledgeKnowledgebaseLanguageTrainingPromoteParams {
	o.SetKnowledgeBaseID(knowledgeBaseID)
	return o
}

// SetKnowledgeBaseID adds the knowledgeBaseId to the post knowledge knowledgebase language training promote params
func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteParams) SetKnowledgeBaseID(knowledgeBaseID string) {
	o.KnowledgeBaseID = knowledgeBaseID
}

// WithLanguageCode adds the languageCode to the post knowledge knowledgebase language training promote params
func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteParams) WithLanguageCode(languageCode string) *PostKnowledgeKnowledgebaseLanguageTrainingPromoteParams {
	o.SetLanguageCode(languageCode)
	return o
}

// SetLanguageCode adds the languageCode to the post knowledge knowledgebase language training promote params
func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteParams) SetLanguageCode(languageCode string) {
	o.LanguageCode = languageCode
}

// WithTrainingID adds the trainingID to the post knowledge knowledgebase language training promote params
func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteParams) WithTrainingID(trainingID string) *PostKnowledgeKnowledgebaseLanguageTrainingPromoteParams {
	o.SetTrainingID(trainingID)
	return o
}

// SetTrainingID adds the trainingId to the post knowledge knowledgebase language training promote params
func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteParams) SetTrainingID(trainingID string) {
	o.TrainingID = trainingID
}

// WriteToRequest writes these params to a swagger request
func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param knowledgeBaseId
	if err := r.SetPathParam("knowledgeBaseId", o.KnowledgeBaseID); err != nil {
		return err
	}

	// path param languageCode
	if err := r.SetPathParam("languageCode", o.LanguageCode); err != nil {
		return err
	}

	// path param trainingId
	if err := r.SetPathParam("trainingId", o.TrainingID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
