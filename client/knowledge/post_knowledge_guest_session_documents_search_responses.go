// Code generated by go-swagger; DO NOT EDIT.

package knowledge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostKnowledgeGuestSessionDocumentsSearchReader is a Reader for the PostKnowledgeGuestSessionDocumentsSearch structure.
type PostKnowledgeGuestSessionDocumentsSearchReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostKnowledgeGuestSessionDocumentsSearchReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostKnowledgeGuestSessionDocumentsSearchOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostKnowledgeGuestSessionDocumentsSearchBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostKnowledgeGuestSessionDocumentsSearchUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostKnowledgeGuestSessionDocumentsSearchForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostKnowledgeGuestSessionDocumentsSearchNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostKnowledgeGuestSessionDocumentsSearchRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostKnowledgeGuestSessionDocumentsSearchRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostKnowledgeGuestSessionDocumentsSearchUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostKnowledgeGuestSessionDocumentsSearchTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostKnowledgeGuestSessionDocumentsSearchInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostKnowledgeGuestSessionDocumentsSearchServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostKnowledgeGuestSessionDocumentsSearchGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostKnowledgeGuestSessionDocumentsSearchOK creates a PostKnowledgeGuestSessionDocumentsSearchOK with default headers values
func NewPostKnowledgeGuestSessionDocumentsSearchOK() *PostKnowledgeGuestSessionDocumentsSearchOK {
	return &PostKnowledgeGuestSessionDocumentsSearchOK{}
}

/*PostKnowledgeGuestSessionDocumentsSearchOK handles this case with default header values.

successful operation
*/
type PostKnowledgeGuestSessionDocumentsSearchOK struct {
	Payload *models.KnowledgeDocumentGuestSearch
}

func (o *PostKnowledgeGuestSessionDocumentsSearchOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/guest/sessions/{sessionId}/documents/search][%d] postKnowledgeGuestSessionDocumentsSearchOK  %+v", 200, o.Payload)
}

func (o *PostKnowledgeGuestSessionDocumentsSearchOK) GetPayload() *models.KnowledgeDocumentGuestSearch {
	return o.Payload
}

func (o *PostKnowledgeGuestSessionDocumentsSearchOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KnowledgeDocumentGuestSearch)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeGuestSessionDocumentsSearchBadRequest creates a PostKnowledgeGuestSessionDocumentsSearchBadRequest with default headers values
func NewPostKnowledgeGuestSessionDocumentsSearchBadRequest() *PostKnowledgeGuestSessionDocumentsSearchBadRequest {
	return &PostKnowledgeGuestSessionDocumentsSearchBadRequest{}
}

/*PostKnowledgeGuestSessionDocumentsSearchBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostKnowledgeGuestSessionDocumentsSearchBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PostKnowledgeGuestSessionDocumentsSearchBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/guest/sessions/{sessionId}/documents/search][%d] postKnowledgeGuestSessionDocumentsSearchBadRequest  %+v", 400, o.Payload)
}

func (o *PostKnowledgeGuestSessionDocumentsSearchBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeGuestSessionDocumentsSearchBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeGuestSessionDocumentsSearchUnauthorized creates a PostKnowledgeGuestSessionDocumentsSearchUnauthorized with default headers values
func NewPostKnowledgeGuestSessionDocumentsSearchUnauthorized() *PostKnowledgeGuestSessionDocumentsSearchUnauthorized {
	return &PostKnowledgeGuestSessionDocumentsSearchUnauthorized{}
}

/*PostKnowledgeGuestSessionDocumentsSearchUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PostKnowledgeGuestSessionDocumentsSearchUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PostKnowledgeGuestSessionDocumentsSearchUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/guest/sessions/{sessionId}/documents/search][%d] postKnowledgeGuestSessionDocumentsSearchUnauthorized  %+v", 401, o.Payload)
}

func (o *PostKnowledgeGuestSessionDocumentsSearchUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeGuestSessionDocumentsSearchUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeGuestSessionDocumentsSearchForbidden creates a PostKnowledgeGuestSessionDocumentsSearchForbidden with default headers values
func NewPostKnowledgeGuestSessionDocumentsSearchForbidden() *PostKnowledgeGuestSessionDocumentsSearchForbidden {
	return &PostKnowledgeGuestSessionDocumentsSearchForbidden{}
}

/*PostKnowledgeGuestSessionDocumentsSearchForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PostKnowledgeGuestSessionDocumentsSearchForbidden struct {
	Payload *models.ErrorBody
}

func (o *PostKnowledgeGuestSessionDocumentsSearchForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/guest/sessions/{sessionId}/documents/search][%d] postKnowledgeGuestSessionDocumentsSearchForbidden  %+v", 403, o.Payload)
}

func (o *PostKnowledgeGuestSessionDocumentsSearchForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeGuestSessionDocumentsSearchForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeGuestSessionDocumentsSearchNotFound creates a PostKnowledgeGuestSessionDocumentsSearchNotFound with default headers values
func NewPostKnowledgeGuestSessionDocumentsSearchNotFound() *PostKnowledgeGuestSessionDocumentsSearchNotFound {
	return &PostKnowledgeGuestSessionDocumentsSearchNotFound{}
}

/*PostKnowledgeGuestSessionDocumentsSearchNotFound handles this case with default header values.

The requested resource was not found.
*/
type PostKnowledgeGuestSessionDocumentsSearchNotFound struct {
	Payload *models.ErrorBody
}

func (o *PostKnowledgeGuestSessionDocumentsSearchNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/guest/sessions/{sessionId}/documents/search][%d] postKnowledgeGuestSessionDocumentsSearchNotFound  %+v", 404, o.Payload)
}

func (o *PostKnowledgeGuestSessionDocumentsSearchNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeGuestSessionDocumentsSearchNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeGuestSessionDocumentsSearchRequestTimeout creates a PostKnowledgeGuestSessionDocumentsSearchRequestTimeout with default headers values
func NewPostKnowledgeGuestSessionDocumentsSearchRequestTimeout() *PostKnowledgeGuestSessionDocumentsSearchRequestTimeout {
	return &PostKnowledgeGuestSessionDocumentsSearchRequestTimeout{}
}

/*PostKnowledgeGuestSessionDocumentsSearchRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostKnowledgeGuestSessionDocumentsSearchRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostKnowledgeGuestSessionDocumentsSearchRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/guest/sessions/{sessionId}/documents/search][%d] postKnowledgeGuestSessionDocumentsSearchRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostKnowledgeGuestSessionDocumentsSearchRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeGuestSessionDocumentsSearchRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeGuestSessionDocumentsSearchRequestEntityTooLarge creates a PostKnowledgeGuestSessionDocumentsSearchRequestEntityTooLarge with default headers values
func NewPostKnowledgeGuestSessionDocumentsSearchRequestEntityTooLarge() *PostKnowledgeGuestSessionDocumentsSearchRequestEntityTooLarge {
	return &PostKnowledgeGuestSessionDocumentsSearchRequestEntityTooLarge{}
}

/*PostKnowledgeGuestSessionDocumentsSearchRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PostKnowledgeGuestSessionDocumentsSearchRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PostKnowledgeGuestSessionDocumentsSearchRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/guest/sessions/{sessionId}/documents/search][%d] postKnowledgeGuestSessionDocumentsSearchRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostKnowledgeGuestSessionDocumentsSearchRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeGuestSessionDocumentsSearchRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeGuestSessionDocumentsSearchUnsupportedMediaType creates a PostKnowledgeGuestSessionDocumentsSearchUnsupportedMediaType with default headers values
func NewPostKnowledgeGuestSessionDocumentsSearchUnsupportedMediaType() *PostKnowledgeGuestSessionDocumentsSearchUnsupportedMediaType {
	return &PostKnowledgeGuestSessionDocumentsSearchUnsupportedMediaType{}
}

/*PostKnowledgeGuestSessionDocumentsSearchUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostKnowledgeGuestSessionDocumentsSearchUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PostKnowledgeGuestSessionDocumentsSearchUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/guest/sessions/{sessionId}/documents/search][%d] postKnowledgeGuestSessionDocumentsSearchUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostKnowledgeGuestSessionDocumentsSearchUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeGuestSessionDocumentsSearchUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeGuestSessionDocumentsSearchTooManyRequests creates a PostKnowledgeGuestSessionDocumentsSearchTooManyRequests with default headers values
func NewPostKnowledgeGuestSessionDocumentsSearchTooManyRequests() *PostKnowledgeGuestSessionDocumentsSearchTooManyRequests {
	return &PostKnowledgeGuestSessionDocumentsSearchTooManyRequests{}
}

/*PostKnowledgeGuestSessionDocumentsSearchTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostKnowledgeGuestSessionDocumentsSearchTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PostKnowledgeGuestSessionDocumentsSearchTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/guest/sessions/{sessionId}/documents/search][%d] postKnowledgeGuestSessionDocumentsSearchTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostKnowledgeGuestSessionDocumentsSearchTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeGuestSessionDocumentsSearchTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeGuestSessionDocumentsSearchInternalServerError creates a PostKnowledgeGuestSessionDocumentsSearchInternalServerError with default headers values
func NewPostKnowledgeGuestSessionDocumentsSearchInternalServerError() *PostKnowledgeGuestSessionDocumentsSearchInternalServerError {
	return &PostKnowledgeGuestSessionDocumentsSearchInternalServerError{}
}

/*PostKnowledgeGuestSessionDocumentsSearchInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostKnowledgeGuestSessionDocumentsSearchInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PostKnowledgeGuestSessionDocumentsSearchInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/guest/sessions/{sessionId}/documents/search][%d] postKnowledgeGuestSessionDocumentsSearchInternalServerError  %+v", 500, o.Payload)
}

func (o *PostKnowledgeGuestSessionDocumentsSearchInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeGuestSessionDocumentsSearchInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeGuestSessionDocumentsSearchServiceUnavailable creates a PostKnowledgeGuestSessionDocumentsSearchServiceUnavailable with default headers values
func NewPostKnowledgeGuestSessionDocumentsSearchServiceUnavailable() *PostKnowledgeGuestSessionDocumentsSearchServiceUnavailable {
	return &PostKnowledgeGuestSessionDocumentsSearchServiceUnavailable{}
}

/*PostKnowledgeGuestSessionDocumentsSearchServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostKnowledgeGuestSessionDocumentsSearchServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PostKnowledgeGuestSessionDocumentsSearchServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/guest/sessions/{sessionId}/documents/search][%d] postKnowledgeGuestSessionDocumentsSearchServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostKnowledgeGuestSessionDocumentsSearchServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeGuestSessionDocumentsSearchServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeGuestSessionDocumentsSearchGatewayTimeout creates a PostKnowledgeGuestSessionDocumentsSearchGatewayTimeout with default headers values
func NewPostKnowledgeGuestSessionDocumentsSearchGatewayTimeout() *PostKnowledgeGuestSessionDocumentsSearchGatewayTimeout {
	return &PostKnowledgeGuestSessionDocumentsSearchGatewayTimeout{}
}

/*PostKnowledgeGuestSessionDocumentsSearchGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PostKnowledgeGuestSessionDocumentsSearchGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostKnowledgeGuestSessionDocumentsSearchGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/guest/sessions/{sessionId}/documents/search][%d] postKnowledgeGuestSessionDocumentsSearchGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostKnowledgeGuestSessionDocumentsSearchGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeGuestSessionDocumentsSearchGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
