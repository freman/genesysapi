// Code generated by go-swagger; DO NOT EDIT.

package knowledge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetKnowledgeKnowledgebaseCategoriesReader is a Reader for the GetKnowledgeKnowledgebaseCategories structure.
type GetKnowledgeKnowledgebaseCategoriesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetKnowledgeKnowledgebaseCategoriesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetKnowledgeKnowledgebaseCategoriesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetKnowledgeKnowledgebaseCategoriesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetKnowledgeKnowledgebaseCategoriesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetKnowledgeKnowledgebaseCategoriesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetKnowledgeKnowledgebaseCategoriesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetKnowledgeKnowledgebaseCategoriesRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetKnowledgeKnowledgebaseCategoriesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetKnowledgeKnowledgebaseCategoriesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetKnowledgeKnowledgebaseCategoriesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetKnowledgeKnowledgebaseCategoriesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetKnowledgeKnowledgebaseCategoriesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetKnowledgeKnowledgebaseCategoriesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetKnowledgeKnowledgebaseCategoriesOK creates a GetKnowledgeKnowledgebaseCategoriesOK with default headers values
func NewGetKnowledgeKnowledgebaseCategoriesOK() *GetKnowledgeKnowledgebaseCategoriesOK {
	return &GetKnowledgeKnowledgebaseCategoriesOK{}
}

/*
GetKnowledgeKnowledgebaseCategoriesOK describes a response with status code 200, with default header values.

successful operation
*/
type GetKnowledgeKnowledgebaseCategoriesOK struct {
	Payload *models.CategoryResponseListing
}

// IsSuccess returns true when this get knowledge knowledgebase categories o k response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseCategoriesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get knowledge knowledgebase categories o k response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseCategoriesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase categories o k response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseCategoriesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get knowledge knowledgebase categories o k response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseCategoriesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase categories o k response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseCategoriesOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetKnowledgeKnowledgebaseCategoriesOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories][%d] getKnowledgeKnowledgebaseCategoriesOK  %+v", 200, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseCategoriesOK) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories][%d] getKnowledgeKnowledgebaseCategoriesOK  %+v", 200, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseCategoriesOK) GetPayload() *models.CategoryResponseListing {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseCategoriesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CategoryResponseListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseCategoriesBadRequest creates a GetKnowledgeKnowledgebaseCategoriesBadRequest with default headers values
func NewGetKnowledgeKnowledgebaseCategoriesBadRequest() *GetKnowledgeKnowledgebaseCategoriesBadRequest {
	return &GetKnowledgeKnowledgebaseCategoriesBadRequest{}
}

/*
GetKnowledgeKnowledgebaseCategoriesBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetKnowledgeKnowledgebaseCategoriesBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase categories bad request response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseCategoriesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase categories bad request response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseCategoriesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase categories bad request response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseCategoriesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase categories bad request response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseCategoriesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase categories bad request response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseCategoriesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetKnowledgeKnowledgebaseCategoriesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories][%d] getKnowledgeKnowledgebaseCategoriesBadRequest  %+v", 400, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseCategoriesBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories][%d] getKnowledgeKnowledgebaseCategoriesBadRequest  %+v", 400, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseCategoriesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseCategoriesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseCategoriesUnauthorized creates a GetKnowledgeKnowledgebaseCategoriesUnauthorized with default headers values
func NewGetKnowledgeKnowledgebaseCategoriesUnauthorized() *GetKnowledgeKnowledgebaseCategoriesUnauthorized {
	return &GetKnowledgeKnowledgebaseCategoriesUnauthorized{}
}

/*
GetKnowledgeKnowledgebaseCategoriesUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetKnowledgeKnowledgebaseCategoriesUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase categories unauthorized response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseCategoriesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase categories unauthorized response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseCategoriesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase categories unauthorized response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseCategoriesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase categories unauthorized response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseCategoriesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase categories unauthorized response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseCategoriesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetKnowledgeKnowledgebaseCategoriesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories][%d] getKnowledgeKnowledgebaseCategoriesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseCategoriesUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories][%d] getKnowledgeKnowledgebaseCategoriesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseCategoriesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseCategoriesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseCategoriesForbidden creates a GetKnowledgeKnowledgebaseCategoriesForbidden with default headers values
func NewGetKnowledgeKnowledgebaseCategoriesForbidden() *GetKnowledgeKnowledgebaseCategoriesForbidden {
	return &GetKnowledgeKnowledgebaseCategoriesForbidden{}
}

/*
GetKnowledgeKnowledgebaseCategoriesForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetKnowledgeKnowledgebaseCategoriesForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase categories forbidden response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseCategoriesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase categories forbidden response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseCategoriesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase categories forbidden response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseCategoriesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase categories forbidden response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseCategoriesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase categories forbidden response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseCategoriesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetKnowledgeKnowledgebaseCategoriesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories][%d] getKnowledgeKnowledgebaseCategoriesForbidden  %+v", 403, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseCategoriesForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories][%d] getKnowledgeKnowledgebaseCategoriesForbidden  %+v", 403, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseCategoriesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseCategoriesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseCategoriesNotFound creates a GetKnowledgeKnowledgebaseCategoriesNotFound with default headers values
func NewGetKnowledgeKnowledgebaseCategoriesNotFound() *GetKnowledgeKnowledgebaseCategoriesNotFound {
	return &GetKnowledgeKnowledgebaseCategoriesNotFound{}
}

/*
GetKnowledgeKnowledgebaseCategoriesNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetKnowledgeKnowledgebaseCategoriesNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase categories not found response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseCategoriesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase categories not found response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseCategoriesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase categories not found response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseCategoriesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase categories not found response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseCategoriesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase categories not found response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseCategoriesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetKnowledgeKnowledgebaseCategoriesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories][%d] getKnowledgeKnowledgebaseCategoriesNotFound  %+v", 404, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseCategoriesNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories][%d] getKnowledgeKnowledgebaseCategoriesNotFound  %+v", 404, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseCategoriesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseCategoriesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseCategoriesRequestTimeout creates a GetKnowledgeKnowledgebaseCategoriesRequestTimeout with default headers values
func NewGetKnowledgeKnowledgebaseCategoriesRequestTimeout() *GetKnowledgeKnowledgebaseCategoriesRequestTimeout {
	return &GetKnowledgeKnowledgebaseCategoriesRequestTimeout{}
}

/*
GetKnowledgeKnowledgebaseCategoriesRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetKnowledgeKnowledgebaseCategoriesRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase categories request timeout response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseCategoriesRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase categories request timeout response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseCategoriesRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase categories request timeout response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseCategoriesRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase categories request timeout response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseCategoriesRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase categories request timeout response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseCategoriesRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetKnowledgeKnowledgebaseCategoriesRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories][%d] getKnowledgeKnowledgebaseCategoriesRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseCategoriesRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories][%d] getKnowledgeKnowledgebaseCategoriesRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseCategoriesRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseCategoriesRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseCategoriesRequestEntityTooLarge creates a GetKnowledgeKnowledgebaseCategoriesRequestEntityTooLarge with default headers values
func NewGetKnowledgeKnowledgebaseCategoriesRequestEntityTooLarge() *GetKnowledgeKnowledgebaseCategoriesRequestEntityTooLarge {
	return &GetKnowledgeKnowledgebaseCategoriesRequestEntityTooLarge{}
}

/*
GetKnowledgeKnowledgebaseCategoriesRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetKnowledgeKnowledgebaseCategoriesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase categories request entity too large response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseCategoriesRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase categories request entity too large response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseCategoriesRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase categories request entity too large response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseCategoriesRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase categories request entity too large response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseCategoriesRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase categories request entity too large response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseCategoriesRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetKnowledgeKnowledgebaseCategoriesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories][%d] getKnowledgeKnowledgebaseCategoriesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseCategoriesRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories][%d] getKnowledgeKnowledgebaseCategoriesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseCategoriesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseCategoriesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseCategoriesUnsupportedMediaType creates a GetKnowledgeKnowledgebaseCategoriesUnsupportedMediaType with default headers values
func NewGetKnowledgeKnowledgebaseCategoriesUnsupportedMediaType() *GetKnowledgeKnowledgebaseCategoriesUnsupportedMediaType {
	return &GetKnowledgeKnowledgebaseCategoriesUnsupportedMediaType{}
}

/*
GetKnowledgeKnowledgebaseCategoriesUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetKnowledgeKnowledgebaseCategoriesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase categories unsupported media type response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseCategoriesUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase categories unsupported media type response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseCategoriesUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase categories unsupported media type response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseCategoriesUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase categories unsupported media type response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseCategoriesUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase categories unsupported media type response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseCategoriesUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetKnowledgeKnowledgebaseCategoriesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories][%d] getKnowledgeKnowledgebaseCategoriesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseCategoriesUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories][%d] getKnowledgeKnowledgebaseCategoriesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseCategoriesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseCategoriesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseCategoriesTooManyRequests creates a GetKnowledgeKnowledgebaseCategoriesTooManyRequests with default headers values
func NewGetKnowledgeKnowledgebaseCategoriesTooManyRequests() *GetKnowledgeKnowledgebaseCategoriesTooManyRequests {
	return &GetKnowledgeKnowledgebaseCategoriesTooManyRequests{}
}

/*
GetKnowledgeKnowledgebaseCategoriesTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetKnowledgeKnowledgebaseCategoriesTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase categories too many requests response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseCategoriesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase categories too many requests response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseCategoriesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase categories too many requests response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseCategoriesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase categories too many requests response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseCategoriesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase categories too many requests response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseCategoriesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetKnowledgeKnowledgebaseCategoriesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories][%d] getKnowledgeKnowledgebaseCategoriesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseCategoriesTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories][%d] getKnowledgeKnowledgebaseCategoriesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseCategoriesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseCategoriesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseCategoriesInternalServerError creates a GetKnowledgeKnowledgebaseCategoriesInternalServerError with default headers values
func NewGetKnowledgeKnowledgebaseCategoriesInternalServerError() *GetKnowledgeKnowledgebaseCategoriesInternalServerError {
	return &GetKnowledgeKnowledgebaseCategoriesInternalServerError{}
}

/*
GetKnowledgeKnowledgebaseCategoriesInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetKnowledgeKnowledgebaseCategoriesInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase categories internal server error response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseCategoriesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase categories internal server error response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseCategoriesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase categories internal server error response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseCategoriesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get knowledge knowledgebase categories internal server error response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseCategoriesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get knowledge knowledgebase categories internal server error response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseCategoriesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetKnowledgeKnowledgebaseCategoriesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories][%d] getKnowledgeKnowledgebaseCategoriesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseCategoriesInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories][%d] getKnowledgeKnowledgebaseCategoriesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseCategoriesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseCategoriesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseCategoriesServiceUnavailable creates a GetKnowledgeKnowledgebaseCategoriesServiceUnavailable with default headers values
func NewGetKnowledgeKnowledgebaseCategoriesServiceUnavailable() *GetKnowledgeKnowledgebaseCategoriesServiceUnavailable {
	return &GetKnowledgeKnowledgebaseCategoriesServiceUnavailable{}
}

/*
GetKnowledgeKnowledgebaseCategoriesServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetKnowledgeKnowledgebaseCategoriesServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase categories service unavailable response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseCategoriesServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase categories service unavailable response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseCategoriesServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase categories service unavailable response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseCategoriesServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get knowledge knowledgebase categories service unavailable response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseCategoriesServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get knowledge knowledgebase categories service unavailable response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseCategoriesServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetKnowledgeKnowledgebaseCategoriesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories][%d] getKnowledgeKnowledgebaseCategoriesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseCategoriesServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories][%d] getKnowledgeKnowledgebaseCategoriesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseCategoriesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseCategoriesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseCategoriesGatewayTimeout creates a GetKnowledgeKnowledgebaseCategoriesGatewayTimeout with default headers values
func NewGetKnowledgeKnowledgebaseCategoriesGatewayTimeout() *GetKnowledgeKnowledgebaseCategoriesGatewayTimeout {
	return &GetKnowledgeKnowledgebaseCategoriesGatewayTimeout{}
}

/*
GetKnowledgeKnowledgebaseCategoriesGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetKnowledgeKnowledgebaseCategoriesGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase categories gateway timeout response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseCategoriesGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase categories gateway timeout response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseCategoriesGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase categories gateway timeout response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseCategoriesGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get knowledge knowledgebase categories gateway timeout response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseCategoriesGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get knowledge knowledgebase categories gateway timeout response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseCategoriesGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetKnowledgeKnowledgebaseCategoriesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories][%d] getKnowledgeKnowledgebaseCategoriesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseCategoriesGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories][%d] getKnowledgeKnowledgebaseCategoriesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseCategoriesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseCategoriesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
