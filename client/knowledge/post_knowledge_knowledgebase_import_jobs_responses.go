// Code generated by go-swagger; DO NOT EDIT.

package knowledge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostKnowledgeKnowledgebaseImportJobsReader is a Reader for the PostKnowledgeKnowledgebaseImportJobs structure.
type PostKnowledgeKnowledgebaseImportJobsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostKnowledgeKnowledgebaseImportJobsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostKnowledgeKnowledgebaseImportJobsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewPostKnowledgeKnowledgebaseImportJobsAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostKnowledgeKnowledgebaseImportJobsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostKnowledgeKnowledgebaseImportJobsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostKnowledgeKnowledgebaseImportJobsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostKnowledgeKnowledgebaseImportJobsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostKnowledgeKnowledgebaseImportJobsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostKnowledgeKnowledgebaseImportJobsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostKnowledgeKnowledgebaseImportJobsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostKnowledgeKnowledgebaseImportJobsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostKnowledgeKnowledgebaseImportJobsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostKnowledgeKnowledgebaseImportJobsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostKnowledgeKnowledgebaseImportJobsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostKnowledgeKnowledgebaseImportJobsOK creates a PostKnowledgeKnowledgebaseImportJobsOK with default headers values
func NewPostKnowledgeKnowledgebaseImportJobsOK() *PostKnowledgeKnowledgebaseImportJobsOK {
	return &PostKnowledgeKnowledgebaseImportJobsOK{}
}

/*PostKnowledgeKnowledgebaseImportJobsOK handles this case with default header values.

successful operation
*/
type PostKnowledgeKnowledgebaseImportJobsOK struct {
	Payload *models.KnowledgeImportJobResponse
}

func (o *PostKnowledgeKnowledgebaseImportJobsOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/import/jobs][%d] postKnowledgeKnowledgebaseImportJobsOK  %+v", 200, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseImportJobsOK) GetPayload() *models.KnowledgeImportJobResponse {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseImportJobsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KnowledgeImportJobResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseImportJobsAccepted creates a PostKnowledgeKnowledgebaseImportJobsAccepted with default headers values
func NewPostKnowledgeKnowledgebaseImportJobsAccepted() *PostKnowledgeKnowledgebaseImportJobsAccepted {
	return &PostKnowledgeKnowledgebaseImportJobsAccepted{}
}

/*PostKnowledgeKnowledgebaseImportJobsAccepted handles this case with default header values.

Import job in progress
*/
type PostKnowledgeKnowledgebaseImportJobsAccepted struct {
	Payload *models.KnowledgeImportJobResponse
}

func (o *PostKnowledgeKnowledgebaseImportJobsAccepted) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/import/jobs][%d] postKnowledgeKnowledgebaseImportJobsAccepted  %+v", 202, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseImportJobsAccepted) GetPayload() *models.KnowledgeImportJobResponse {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseImportJobsAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KnowledgeImportJobResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseImportJobsBadRequest creates a PostKnowledgeKnowledgebaseImportJobsBadRequest with default headers values
func NewPostKnowledgeKnowledgebaseImportJobsBadRequest() *PostKnowledgeKnowledgebaseImportJobsBadRequest {
	return &PostKnowledgeKnowledgebaseImportJobsBadRequest{}
}

/*PostKnowledgeKnowledgebaseImportJobsBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostKnowledgeKnowledgebaseImportJobsBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PostKnowledgeKnowledgebaseImportJobsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/import/jobs][%d] postKnowledgeKnowledgebaseImportJobsBadRequest  %+v", 400, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseImportJobsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseImportJobsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseImportJobsUnauthorized creates a PostKnowledgeKnowledgebaseImportJobsUnauthorized with default headers values
func NewPostKnowledgeKnowledgebaseImportJobsUnauthorized() *PostKnowledgeKnowledgebaseImportJobsUnauthorized {
	return &PostKnowledgeKnowledgebaseImportJobsUnauthorized{}
}

/*PostKnowledgeKnowledgebaseImportJobsUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PostKnowledgeKnowledgebaseImportJobsUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PostKnowledgeKnowledgebaseImportJobsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/import/jobs][%d] postKnowledgeKnowledgebaseImportJobsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseImportJobsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseImportJobsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseImportJobsForbidden creates a PostKnowledgeKnowledgebaseImportJobsForbidden with default headers values
func NewPostKnowledgeKnowledgebaseImportJobsForbidden() *PostKnowledgeKnowledgebaseImportJobsForbidden {
	return &PostKnowledgeKnowledgebaseImportJobsForbidden{}
}

/*PostKnowledgeKnowledgebaseImportJobsForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PostKnowledgeKnowledgebaseImportJobsForbidden struct {
	Payload *models.ErrorBody
}

func (o *PostKnowledgeKnowledgebaseImportJobsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/import/jobs][%d] postKnowledgeKnowledgebaseImportJobsForbidden  %+v", 403, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseImportJobsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseImportJobsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseImportJobsNotFound creates a PostKnowledgeKnowledgebaseImportJobsNotFound with default headers values
func NewPostKnowledgeKnowledgebaseImportJobsNotFound() *PostKnowledgeKnowledgebaseImportJobsNotFound {
	return &PostKnowledgeKnowledgebaseImportJobsNotFound{}
}

/*PostKnowledgeKnowledgebaseImportJobsNotFound handles this case with default header values.

The requested resource was not found.
*/
type PostKnowledgeKnowledgebaseImportJobsNotFound struct {
	Payload *models.ErrorBody
}

func (o *PostKnowledgeKnowledgebaseImportJobsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/import/jobs][%d] postKnowledgeKnowledgebaseImportJobsNotFound  %+v", 404, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseImportJobsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseImportJobsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseImportJobsRequestTimeout creates a PostKnowledgeKnowledgebaseImportJobsRequestTimeout with default headers values
func NewPostKnowledgeKnowledgebaseImportJobsRequestTimeout() *PostKnowledgeKnowledgebaseImportJobsRequestTimeout {
	return &PostKnowledgeKnowledgebaseImportJobsRequestTimeout{}
}

/*PostKnowledgeKnowledgebaseImportJobsRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostKnowledgeKnowledgebaseImportJobsRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostKnowledgeKnowledgebaseImportJobsRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/import/jobs][%d] postKnowledgeKnowledgebaseImportJobsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseImportJobsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseImportJobsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseImportJobsRequestEntityTooLarge creates a PostKnowledgeKnowledgebaseImportJobsRequestEntityTooLarge with default headers values
func NewPostKnowledgeKnowledgebaseImportJobsRequestEntityTooLarge() *PostKnowledgeKnowledgebaseImportJobsRequestEntityTooLarge {
	return &PostKnowledgeKnowledgebaseImportJobsRequestEntityTooLarge{}
}

/*PostKnowledgeKnowledgebaseImportJobsRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PostKnowledgeKnowledgebaseImportJobsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PostKnowledgeKnowledgebaseImportJobsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/import/jobs][%d] postKnowledgeKnowledgebaseImportJobsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseImportJobsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseImportJobsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseImportJobsUnsupportedMediaType creates a PostKnowledgeKnowledgebaseImportJobsUnsupportedMediaType with default headers values
func NewPostKnowledgeKnowledgebaseImportJobsUnsupportedMediaType() *PostKnowledgeKnowledgebaseImportJobsUnsupportedMediaType {
	return &PostKnowledgeKnowledgebaseImportJobsUnsupportedMediaType{}
}

/*PostKnowledgeKnowledgebaseImportJobsUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostKnowledgeKnowledgebaseImportJobsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PostKnowledgeKnowledgebaseImportJobsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/import/jobs][%d] postKnowledgeKnowledgebaseImportJobsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseImportJobsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseImportJobsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseImportJobsTooManyRequests creates a PostKnowledgeKnowledgebaseImportJobsTooManyRequests with default headers values
func NewPostKnowledgeKnowledgebaseImportJobsTooManyRequests() *PostKnowledgeKnowledgebaseImportJobsTooManyRequests {
	return &PostKnowledgeKnowledgebaseImportJobsTooManyRequests{}
}

/*PostKnowledgeKnowledgebaseImportJobsTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostKnowledgeKnowledgebaseImportJobsTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PostKnowledgeKnowledgebaseImportJobsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/import/jobs][%d] postKnowledgeKnowledgebaseImportJobsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseImportJobsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseImportJobsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseImportJobsInternalServerError creates a PostKnowledgeKnowledgebaseImportJobsInternalServerError with default headers values
func NewPostKnowledgeKnowledgebaseImportJobsInternalServerError() *PostKnowledgeKnowledgebaseImportJobsInternalServerError {
	return &PostKnowledgeKnowledgebaseImportJobsInternalServerError{}
}

/*PostKnowledgeKnowledgebaseImportJobsInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostKnowledgeKnowledgebaseImportJobsInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PostKnowledgeKnowledgebaseImportJobsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/import/jobs][%d] postKnowledgeKnowledgebaseImportJobsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseImportJobsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseImportJobsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseImportJobsServiceUnavailable creates a PostKnowledgeKnowledgebaseImportJobsServiceUnavailable with default headers values
func NewPostKnowledgeKnowledgebaseImportJobsServiceUnavailable() *PostKnowledgeKnowledgebaseImportJobsServiceUnavailable {
	return &PostKnowledgeKnowledgebaseImportJobsServiceUnavailable{}
}

/*PostKnowledgeKnowledgebaseImportJobsServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostKnowledgeKnowledgebaseImportJobsServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PostKnowledgeKnowledgebaseImportJobsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/import/jobs][%d] postKnowledgeKnowledgebaseImportJobsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseImportJobsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseImportJobsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseImportJobsGatewayTimeout creates a PostKnowledgeKnowledgebaseImportJobsGatewayTimeout with default headers values
func NewPostKnowledgeKnowledgebaseImportJobsGatewayTimeout() *PostKnowledgeKnowledgebaseImportJobsGatewayTimeout {
	return &PostKnowledgeKnowledgebaseImportJobsGatewayTimeout{}
}

/*PostKnowledgeKnowledgebaseImportJobsGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PostKnowledgeKnowledgebaseImportJobsGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostKnowledgeKnowledgebaseImportJobsGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/import/jobs][%d] postKnowledgeKnowledgebaseImportJobsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseImportJobsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseImportJobsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
