// Code generated by go-swagger; DO NOT EDIT.

package knowledge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PatchKnowledgeKnowledgebaseLanguageDocumentsImportReader is a Reader for the PatchKnowledgeKnowledgebaseLanguageDocumentsImport structure.
type PatchKnowledgeKnowledgebaseLanguageDocumentsImportReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchKnowledgeKnowledgebaseLanguageDocumentsImportOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewPatchKnowledgeKnowledgebaseLanguageDocumentsImportAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchKnowledgeKnowledgebaseLanguageDocumentsImportBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPatchKnowledgeKnowledgebaseLanguageDocumentsImportUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchKnowledgeKnowledgebaseLanguageDocumentsImportForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchKnowledgeKnowledgebaseLanguageDocumentsImportNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPatchKnowledgeKnowledgebaseLanguageDocumentsImportRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPatchKnowledgeKnowledgebaseLanguageDocumentsImportRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPatchKnowledgeKnowledgebaseLanguageDocumentsImportUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPatchKnowledgeKnowledgebaseLanguageDocumentsImportTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchKnowledgeKnowledgebaseLanguageDocumentsImportInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPatchKnowledgeKnowledgebaseLanguageDocumentsImportServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPatchKnowledgeKnowledgebaseLanguageDocumentsImportGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchKnowledgeKnowledgebaseLanguageDocumentsImportOK creates a PatchKnowledgeKnowledgebaseLanguageDocumentsImportOK with default headers values
func NewPatchKnowledgeKnowledgebaseLanguageDocumentsImportOK() *PatchKnowledgeKnowledgebaseLanguageDocumentsImportOK {
	return &PatchKnowledgeKnowledgebaseLanguageDocumentsImportOK{}
}

/*
PatchKnowledgeKnowledgebaseLanguageDocumentsImportOK describes a response with status code 200, with default header values.

Import operation finished
*/
type PatchKnowledgeKnowledgebaseLanguageDocumentsImportOK struct {
	Payload *models.KnowledgeImport
}

// IsSuccess returns true when this patch knowledge knowledgebase language documents import o k response has a 2xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this patch knowledge knowledgebase language documents import o k response has a 3xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch knowledge knowledgebase language documents import o k response has a 4xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch knowledge knowledgebase language documents import o k response has a 5xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportOK) IsServerError() bool {
	return false
}

// IsCode returns true when this patch knowledge knowledgebase language documents import o k response a status code equal to that given
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportOK) IsCode(code int) bool {
	return code == 200
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportOK) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/imports/{importId}][%d] patchKnowledgeKnowledgebaseLanguageDocumentsImportOK  %+v", 200, o.Payload)
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportOK) String() string {
	return fmt.Sprintf("[PATCH /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/imports/{importId}][%d] patchKnowledgeKnowledgebaseLanguageDocumentsImportOK  %+v", 200, o.Payload)
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportOK) GetPayload() *models.KnowledgeImport {
	return o.Payload
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KnowledgeImport)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchKnowledgeKnowledgebaseLanguageDocumentsImportAccepted creates a PatchKnowledgeKnowledgebaseLanguageDocumentsImportAccepted with default headers values
func NewPatchKnowledgeKnowledgebaseLanguageDocumentsImportAccepted() *PatchKnowledgeKnowledgebaseLanguageDocumentsImportAccepted {
	return &PatchKnowledgeKnowledgebaseLanguageDocumentsImportAccepted{}
}

/*
PatchKnowledgeKnowledgebaseLanguageDocumentsImportAccepted describes a response with status code 202, with default header values.

Import operation started
*/
type PatchKnowledgeKnowledgebaseLanguageDocumentsImportAccepted struct {
	Payload *models.KnowledgeImport
}

// IsSuccess returns true when this patch knowledge knowledgebase language documents import accepted response has a 2xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this patch knowledge knowledgebase language documents import accepted response has a 3xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch knowledge knowledgebase language documents import accepted response has a 4xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch knowledge knowledgebase language documents import accepted response has a 5xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this patch knowledge knowledgebase language documents import accepted response a status code equal to that given
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportAccepted) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/imports/{importId}][%d] patchKnowledgeKnowledgebaseLanguageDocumentsImportAccepted  %+v", 202, o.Payload)
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportAccepted) String() string {
	return fmt.Sprintf("[PATCH /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/imports/{importId}][%d] patchKnowledgeKnowledgebaseLanguageDocumentsImportAccepted  %+v", 202, o.Payload)
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportAccepted) GetPayload() *models.KnowledgeImport {
	return o.Payload
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KnowledgeImport)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchKnowledgeKnowledgebaseLanguageDocumentsImportBadRequest creates a PatchKnowledgeKnowledgebaseLanguageDocumentsImportBadRequest with default headers values
func NewPatchKnowledgeKnowledgebaseLanguageDocumentsImportBadRequest() *PatchKnowledgeKnowledgebaseLanguageDocumentsImportBadRequest {
	return &PatchKnowledgeKnowledgebaseLanguageDocumentsImportBadRequest{}
}

/*
PatchKnowledgeKnowledgebaseLanguageDocumentsImportBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PatchKnowledgeKnowledgebaseLanguageDocumentsImportBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch knowledge knowledgebase language documents import bad request response has a 2xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch knowledge knowledgebase language documents import bad request response has a 3xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch knowledge knowledgebase language documents import bad request response has a 4xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch knowledge knowledgebase language documents import bad request response has a 5xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this patch knowledge knowledgebase language documents import bad request response a status code equal to that given
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/imports/{importId}][%d] patchKnowledgeKnowledgebaseLanguageDocumentsImportBadRequest  %+v", 400, o.Payload)
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportBadRequest) String() string {
	return fmt.Sprintf("[PATCH /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/imports/{importId}][%d] patchKnowledgeKnowledgebaseLanguageDocumentsImportBadRequest  %+v", 400, o.Payload)
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchKnowledgeKnowledgebaseLanguageDocumentsImportUnauthorized creates a PatchKnowledgeKnowledgebaseLanguageDocumentsImportUnauthorized with default headers values
func NewPatchKnowledgeKnowledgebaseLanguageDocumentsImportUnauthorized() *PatchKnowledgeKnowledgebaseLanguageDocumentsImportUnauthorized {
	return &PatchKnowledgeKnowledgebaseLanguageDocumentsImportUnauthorized{}
}

/*
PatchKnowledgeKnowledgebaseLanguageDocumentsImportUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PatchKnowledgeKnowledgebaseLanguageDocumentsImportUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch knowledge knowledgebase language documents import unauthorized response has a 2xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch knowledge knowledgebase language documents import unauthorized response has a 3xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch knowledge knowledgebase language documents import unauthorized response has a 4xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch knowledge knowledgebase language documents import unauthorized response has a 5xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this patch knowledge knowledgebase language documents import unauthorized response a status code equal to that given
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/imports/{importId}][%d] patchKnowledgeKnowledgebaseLanguageDocumentsImportUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportUnauthorized) String() string {
	return fmt.Sprintf("[PATCH /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/imports/{importId}][%d] patchKnowledgeKnowledgebaseLanguageDocumentsImportUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchKnowledgeKnowledgebaseLanguageDocumentsImportForbidden creates a PatchKnowledgeKnowledgebaseLanguageDocumentsImportForbidden with default headers values
func NewPatchKnowledgeKnowledgebaseLanguageDocumentsImportForbidden() *PatchKnowledgeKnowledgebaseLanguageDocumentsImportForbidden {
	return &PatchKnowledgeKnowledgebaseLanguageDocumentsImportForbidden{}
}

/*
PatchKnowledgeKnowledgebaseLanguageDocumentsImportForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PatchKnowledgeKnowledgebaseLanguageDocumentsImportForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch knowledge knowledgebase language documents import forbidden response has a 2xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch knowledge knowledgebase language documents import forbidden response has a 3xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch knowledge knowledgebase language documents import forbidden response has a 4xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch knowledge knowledgebase language documents import forbidden response has a 5xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this patch knowledge knowledgebase language documents import forbidden response a status code equal to that given
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/imports/{importId}][%d] patchKnowledgeKnowledgebaseLanguageDocumentsImportForbidden  %+v", 403, o.Payload)
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportForbidden) String() string {
	return fmt.Sprintf("[PATCH /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/imports/{importId}][%d] patchKnowledgeKnowledgebaseLanguageDocumentsImportForbidden  %+v", 403, o.Payload)
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchKnowledgeKnowledgebaseLanguageDocumentsImportNotFound creates a PatchKnowledgeKnowledgebaseLanguageDocumentsImportNotFound with default headers values
func NewPatchKnowledgeKnowledgebaseLanguageDocumentsImportNotFound() *PatchKnowledgeKnowledgebaseLanguageDocumentsImportNotFound {
	return &PatchKnowledgeKnowledgebaseLanguageDocumentsImportNotFound{}
}

/*
PatchKnowledgeKnowledgebaseLanguageDocumentsImportNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PatchKnowledgeKnowledgebaseLanguageDocumentsImportNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch knowledge knowledgebase language documents import not found response has a 2xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch knowledge knowledgebase language documents import not found response has a 3xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch knowledge knowledgebase language documents import not found response has a 4xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch knowledge knowledgebase language documents import not found response has a 5xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this patch knowledge knowledgebase language documents import not found response a status code equal to that given
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/imports/{importId}][%d] patchKnowledgeKnowledgebaseLanguageDocumentsImportNotFound  %+v", 404, o.Payload)
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportNotFound) String() string {
	return fmt.Sprintf("[PATCH /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/imports/{importId}][%d] patchKnowledgeKnowledgebaseLanguageDocumentsImportNotFound  %+v", 404, o.Payload)
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchKnowledgeKnowledgebaseLanguageDocumentsImportRequestTimeout creates a PatchKnowledgeKnowledgebaseLanguageDocumentsImportRequestTimeout with default headers values
func NewPatchKnowledgeKnowledgebaseLanguageDocumentsImportRequestTimeout() *PatchKnowledgeKnowledgebaseLanguageDocumentsImportRequestTimeout {
	return &PatchKnowledgeKnowledgebaseLanguageDocumentsImportRequestTimeout{}
}

/*
PatchKnowledgeKnowledgebaseLanguageDocumentsImportRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PatchKnowledgeKnowledgebaseLanguageDocumentsImportRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch knowledge knowledgebase language documents import request timeout response has a 2xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch knowledge knowledgebase language documents import request timeout response has a 3xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch knowledge knowledgebase language documents import request timeout response has a 4xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch knowledge knowledgebase language documents import request timeout response has a 5xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this patch knowledge knowledgebase language documents import request timeout response a status code equal to that given
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportRequestTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/imports/{importId}][%d] patchKnowledgeKnowledgebaseLanguageDocumentsImportRequestTimeout  %+v", 408, o.Payload)
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportRequestTimeout) String() string {
	return fmt.Sprintf("[PATCH /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/imports/{importId}][%d] patchKnowledgeKnowledgebaseLanguageDocumentsImportRequestTimeout  %+v", 408, o.Payload)
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchKnowledgeKnowledgebaseLanguageDocumentsImportRequestEntityTooLarge creates a PatchKnowledgeKnowledgebaseLanguageDocumentsImportRequestEntityTooLarge with default headers values
func NewPatchKnowledgeKnowledgebaseLanguageDocumentsImportRequestEntityTooLarge() *PatchKnowledgeKnowledgebaseLanguageDocumentsImportRequestEntityTooLarge {
	return &PatchKnowledgeKnowledgebaseLanguageDocumentsImportRequestEntityTooLarge{}
}

/*
PatchKnowledgeKnowledgebaseLanguageDocumentsImportRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PatchKnowledgeKnowledgebaseLanguageDocumentsImportRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch knowledge knowledgebase language documents import request entity too large response has a 2xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch knowledge knowledgebase language documents import request entity too large response has a 3xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch knowledge knowledgebase language documents import request entity too large response has a 4xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch knowledge knowledgebase language documents import request entity too large response has a 5xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this patch knowledge knowledgebase language documents import request entity too large response a status code equal to that given
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/imports/{importId}][%d] patchKnowledgeKnowledgebaseLanguageDocumentsImportRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PATCH /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/imports/{importId}][%d] patchKnowledgeKnowledgebaseLanguageDocumentsImportRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchKnowledgeKnowledgebaseLanguageDocumentsImportUnsupportedMediaType creates a PatchKnowledgeKnowledgebaseLanguageDocumentsImportUnsupportedMediaType with default headers values
func NewPatchKnowledgeKnowledgebaseLanguageDocumentsImportUnsupportedMediaType() *PatchKnowledgeKnowledgebaseLanguageDocumentsImportUnsupportedMediaType {
	return &PatchKnowledgeKnowledgebaseLanguageDocumentsImportUnsupportedMediaType{}
}

/*
PatchKnowledgeKnowledgebaseLanguageDocumentsImportUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PatchKnowledgeKnowledgebaseLanguageDocumentsImportUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch knowledge knowledgebase language documents import unsupported media type response has a 2xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch knowledge knowledgebase language documents import unsupported media type response has a 3xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch knowledge knowledgebase language documents import unsupported media type response has a 4xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch knowledge knowledgebase language documents import unsupported media type response has a 5xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this patch knowledge knowledgebase language documents import unsupported media type response a status code equal to that given
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/imports/{importId}][%d] patchKnowledgeKnowledgebaseLanguageDocumentsImportUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PATCH /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/imports/{importId}][%d] patchKnowledgeKnowledgebaseLanguageDocumentsImportUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchKnowledgeKnowledgebaseLanguageDocumentsImportTooManyRequests creates a PatchKnowledgeKnowledgebaseLanguageDocumentsImportTooManyRequests with default headers values
func NewPatchKnowledgeKnowledgebaseLanguageDocumentsImportTooManyRequests() *PatchKnowledgeKnowledgebaseLanguageDocumentsImportTooManyRequests {
	return &PatchKnowledgeKnowledgebaseLanguageDocumentsImportTooManyRequests{}
}

/*
PatchKnowledgeKnowledgebaseLanguageDocumentsImportTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PatchKnowledgeKnowledgebaseLanguageDocumentsImportTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch knowledge knowledgebase language documents import too many requests response has a 2xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch knowledge knowledgebase language documents import too many requests response has a 3xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch knowledge knowledgebase language documents import too many requests response has a 4xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch knowledge knowledgebase language documents import too many requests response has a 5xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this patch knowledge knowledgebase language documents import too many requests response a status code equal to that given
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportTooManyRequests) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/imports/{importId}][%d] patchKnowledgeKnowledgebaseLanguageDocumentsImportTooManyRequests  %+v", 429, o.Payload)
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportTooManyRequests) String() string {
	return fmt.Sprintf("[PATCH /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/imports/{importId}][%d] patchKnowledgeKnowledgebaseLanguageDocumentsImportTooManyRequests  %+v", 429, o.Payload)
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchKnowledgeKnowledgebaseLanguageDocumentsImportInternalServerError creates a PatchKnowledgeKnowledgebaseLanguageDocumentsImportInternalServerError with default headers values
func NewPatchKnowledgeKnowledgebaseLanguageDocumentsImportInternalServerError() *PatchKnowledgeKnowledgebaseLanguageDocumentsImportInternalServerError {
	return &PatchKnowledgeKnowledgebaseLanguageDocumentsImportInternalServerError{}
}

/*
PatchKnowledgeKnowledgebaseLanguageDocumentsImportInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PatchKnowledgeKnowledgebaseLanguageDocumentsImportInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch knowledge knowledgebase language documents import internal server error response has a 2xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch knowledge knowledgebase language documents import internal server error response has a 3xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch knowledge knowledgebase language documents import internal server error response has a 4xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch knowledge knowledgebase language documents import internal server error response has a 5xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this patch knowledge knowledgebase language documents import internal server error response a status code equal to that given
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/imports/{importId}][%d] patchKnowledgeKnowledgebaseLanguageDocumentsImportInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportInternalServerError) String() string {
	return fmt.Sprintf("[PATCH /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/imports/{importId}][%d] patchKnowledgeKnowledgebaseLanguageDocumentsImportInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchKnowledgeKnowledgebaseLanguageDocumentsImportServiceUnavailable creates a PatchKnowledgeKnowledgebaseLanguageDocumentsImportServiceUnavailable with default headers values
func NewPatchKnowledgeKnowledgebaseLanguageDocumentsImportServiceUnavailable() *PatchKnowledgeKnowledgebaseLanguageDocumentsImportServiceUnavailable {
	return &PatchKnowledgeKnowledgebaseLanguageDocumentsImportServiceUnavailable{}
}

/*
PatchKnowledgeKnowledgebaseLanguageDocumentsImportServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PatchKnowledgeKnowledgebaseLanguageDocumentsImportServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch knowledge knowledgebase language documents import service unavailable response has a 2xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch knowledge knowledgebase language documents import service unavailable response has a 3xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch knowledge knowledgebase language documents import service unavailable response has a 4xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch knowledge knowledgebase language documents import service unavailable response has a 5xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this patch knowledge knowledgebase language documents import service unavailable response a status code equal to that given
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportServiceUnavailable) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/imports/{importId}][%d] patchKnowledgeKnowledgebaseLanguageDocumentsImportServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportServiceUnavailable) String() string {
	return fmt.Sprintf("[PATCH /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/imports/{importId}][%d] patchKnowledgeKnowledgebaseLanguageDocumentsImportServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchKnowledgeKnowledgebaseLanguageDocumentsImportGatewayTimeout creates a PatchKnowledgeKnowledgebaseLanguageDocumentsImportGatewayTimeout with default headers values
func NewPatchKnowledgeKnowledgebaseLanguageDocumentsImportGatewayTimeout() *PatchKnowledgeKnowledgebaseLanguageDocumentsImportGatewayTimeout {
	return &PatchKnowledgeKnowledgebaseLanguageDocumentsImportGatewayTimeout{}
}

/*
PatchKnowledgeKnowledgebaseLanguageDocumentsImportGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PatchKnowledgeKnowledgebaseLanguageDocumentsImportGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch knowledge knowledgebase language documents import gateway timeout response has a 2xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch knowledge knowledgebase language documents import gateway timeout response has a 3xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch knowledge knowledgebase language documents import gateway timeout response has a 4xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch knowledge knowledgebase language documents import gateway timeout response has a 5xx status code
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this patch knowledge knowledgebase language documents import gateway timeout response a status code equal to that given
func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportGatewayTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/imports/{importId}][%d] patchKnowledgeKnowledgebaseLanguageDocumentsImportGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportGatewayTimeout) String() string {
	return fmt.Sprintf("[PATCH /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/imports/{importId}][%d] patchKnowledgeKnowledgebaseLanguageDocumentsImportGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchKnowledgeKnowledgebaseLanguageDocumentsImportGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
