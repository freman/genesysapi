// Code generated by go-swagger; DO NOT EDIT.

package knowledge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetKnowledgeKnowledgebaseDocumentVersionVariationsParams creates a new GetKnowledgeKnowledgebaseDocumentVersionVariationsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetKnowledgeKnowledgebaseDocumentVersionVariationsParams() *GetKnowledgeKnowledgebaseDocumentVersionVariationsParams {
	return &GetKnowledgeKnowledgebaseDocumentVersionVariationsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetKnowledgeKnowledgebaseDocumentVersionVariationsParamsWithTimeout creates a new GetKnowledgeKnowledgebaseDocumentVersionVariationsParams object
// with the ability to set a timeout on a request.
func NewGetKnowledgeKnowledgebaseDocumentVersionVariationsParamsWithTimeout(timeout time.Duration) *GetKnowledgeKnowledgebaseDocumentVersionVariationsParams {
	return &GetKnowledgeKnowledgebaseDocumentVersionVariationsParams{
		timeout: timeout,
	}
}

// NewGetKnowledgeKnowledgebaseDocumentVersionVariationsParamsWithContext creates a new GetKnowledgeKnowledgebaseDocumentVersionVariationsParams object
// with the ability to set a context for a request.
func NewGetKnowledgeKnowledgebaseDocumentVersionVariationsParamsWithContext(ctx context.Context) *GetKnowledgeKnowledgebaseDocumentVersionVariationsParams {
	return &GetKnowledgeKnowledgebaseDocumentVersionVariationsParams{
		Context: ctx,
	}
}

// NewGetKnowledgeKnowledgebaseDocumentVersionVariationsParamsWithHTTPClient creates a new GetKnowledgeKnowledgebaseDocumentVersionVariationsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetKnowledgeKnowledgebaseDocumentVersionVariationsParamsWithHTTPClient(client *http.Client) *GetKnowledgeKnowledgebaseDocumentVersionVariationsParams {
	return &GetKnowledgeKnowledgebaseDocumentVersionVariationsParams{
		HTTPClient: client,
	}
}

/*
GetKnowledgeKnowledgebaseDocumentVersionVariationsParams contains all the parameters to send to the API endpoint

	for the get knowledge knowledgebase document version variations operation.

	Typically these are written to a http.Request.
*/
type GetKnowledgeKnowledgebaseDocumentVersionVariationsParams struct {

	/* After.

	   The cursor that points to the end of the set of entities that has been returned.
	*/
	After *string

	/* Before.

	   The cursor that points to the start of the set of entities that has been returned.
	*/
	Before *string

	/* DocumentID.

	   Globally unique identifier for the document.
	*/
	DocumentID string

	/* KnowledgeBaseID.

	   Globally unique identifier for the knowledge base.
	*/
	KnowledgeBaseID string

	/* PageSize.

	   Number of entities to return. Maximum of 200.
	*/
	PageSize *string

	/* VersionID.

	   Globally unique identifier for the document version.
	*/
	VersionID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get knowledge knowledgebase document version variations params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsParams) WithDefaults() *GetKnowledgeKnowledgebaseDocumentVersionVariationsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get knowledge knowledgebase document version variations params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get knowledge knowledgebase document version variations params
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsParams) WithTimeout(timeout time.Duration) *GetKnowledgeKnowledgebaseDocumentVersionVariationsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get knowledge knowledgebase document version variations params
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get knowledge knowledgebase document version variations params
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsParams) WithContext(ctx context.Context) *GetKnowledgeKnowledgebaseDocumentVersionVariationsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get knowledge knowledgebase document version variations params
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get knowledge knowledgebase document version variations params
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsParams) WithHTTPClient(client *http.Client) *GetKnowledgeKnowledgebaseDocumentVersionVariationsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get knowledge knowledgebase document version variations params
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAfter adds the after to the get knowledge knowledgebase document version variations params
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsParams) WithAfter(after *string) *GetKnowledgeKnowledgebaseDocumentVersionVariationsParams {
	o.SetAfter(after)
	return o
}

// SetAfter adds the after to the get knowledge knowledgebase document version variations params
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsParams) SetAfter(after *string) {
	o.After = after
}

// WithBefore adds the before to the get knowledge knowledgebase document version variations params
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsParams) WithBefore(before *string) *GetKnowledgeKnowledgebaseDocumentVersionVariationsParams {
	o.SetBefore(before)
	return o
}

// SetBefore adds the before to the get knowledge knowledgebase document version variations params
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsParams) SetBefore(before *string) {
	o.Before = before
}

// WithDocumentID adds the documentID to the get knowledge knowledgebase document version variations params
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsParams) WithDocumentID(documentID string) *GetKnowledgeKnowledgebaseDocumentVersionVariationsParams {
	o.SetDocumentID(documentID)
	return o
}

// SetDocumentID adds the documentId to the get knowledge knowledgebase document version variations params
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsParams) SetDocumentID(documentID string) {
	o.DocumentID = documentID
}

// WithKnowledgeBaseID adds the knowledgeBaseID to the get knowledge knowledgebase document version variations params
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsParams) WithKnowledgeBaseID(knowledgeBaseID string) *GetKnowledgeKnowledgebaseDocumentVersionVariationsParams {
	o.SetKnowledgeBaseID(knowledgeBaseID)
	return o
}

// SetKnowledgeBaseID adds the knowledgeBaseId to the get knowledge knowledgebase document version variations params
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsParams) SetKnowledgeBaseID(knowledgeBaseID string) {
	o.KnowledgeBaseID = knowledgeBaseID
}

// WithPageSize adds the pageSize to the get knowledge knowledgebase document version variations params
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsParams) WithPageSize(pageSize *string) *GetKnowledgeKnowledgebaseDocumentVersionVariationsParams {
	o.SetPageSize(pageSize)
	return o
}

// SetPageSize adds the pageSize to the get knowledge knowledgebase document version variations params
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsParams) SetPageSize(pageSize *string) {
	o.PageSize = pageSize
}

// WithVersionID adds the versionID to the get knowledge knowledgebase document version variations params
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsParams) WithVersionID(versionID string) *GetKnowledgeKnowledgebaseDocumentVersionVariationsParams {
	o.SetVersionID(versionID)
	return o
}

// SetVersionID adds the versionId to the get knowledge knowledgebase document version variations params
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsParams) SetVersionID(versionID string) {
	o.VersionID = versionID
}

// WriteToRequest writes these params to a swagger request
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.After != nil {

		// query param after
		var qrAfter string

		if o.After != nil {
			qrAfter = *o.After
		}
		qAfter := qrAfter
		if qAfter != "" {

			if err := r.SetQueryParam("after", qAfter); err != nil {
				return err
			}
		}
	}

	if o.Before != nil {

		// query param before
		var qrBefore string

		if o.Before != nil {
			qrBefore = *o.Before
		}
		qBefore := qrBefore
		if qBefore != "" {

			if err := r.SetQueryParam("before", qBefore); err != nil {
				return err
			}
		}
	}

	// path param documentId
	if err := r.SetPathParam("documentId", o.DocumentID); err != nil {
		return err
	}

	// path param knowledgeBaseId
	if err := r.SetPathParam("knowledgeBaseId", o.KnowledgeBaseID); err != nil {
		return err
	}

	if o.PageSize != nil {

		// query param pageSize
		var qrPageSize string

		if o.PageSize != nil {
			qrPageSize = *o.PageSize
		}
		qPageSize := qrPageSize
		if qPageSize != "" {

			if err := r.SetQueryParam("pageSize", qPageSize); err != nil {
				return err
			}
		}
	}

	// path param versionId
	if err := r.SetPathParam("versionId", o.VersionID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
