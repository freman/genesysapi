// Code generated by go-swagger; DO NOT EDIT.

package knowledge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewDeleteKnowledgeKnowledgebaseLanguageDocumentsImportParams creates a new DeleteKnowledgeKnowledgebaseLanguageDocumentsImportParams object
// with the default values initialized.
func NewDeleteKnowledgeKnowledgebaseLanguageDocumentsImportParams() *DeleteKnowledgeKnowledgebaseLanguageDocumentsImportParams {
	var ()
	return &DeleteKnowledgeKnowledgebaseLanguageDocumentsImportParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteKnowledgeKnowledgebaseLanguageDocumentsImportParamsWithTimeout creates a new DeleteKnowledgeKnowledgebaseLanguageDocumentsImportParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteKnowledgeKnowledgebaseLanguageDocumentsImportParamsWithTimeout(timeout time.Duration) *DeleteKnowledgeKnowledgebaseLanguageDocumentsImportParams {
	var ()
	return &DeleteKnowledgeKnowledgebaseLanguageDocumentsImportParams{

		timeout: timeout,
	}
}

// NewDeleteKnowledgeKnowledgebaseLanguageDocumentsImportParamsWithContext creates a new DeleteKnowledgeKnowledgebaseLanguageDocumentsImportParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteKnowledgeKnowledgebaseLanguageDocumentsImportParamsWithContext(ctx context.Context) *DeleteKnowledgeKnowledgebaseLanguageDocumentsImportParams {
	var ()
	return &DeleteKnowledgeKnowledgebaseLanguageDocumentsImportParams{

		Context: ctx,
	}
}

// NewDeleteKnowledgeKnowledgebaseLanguageDocumentsImportParamsWithHTTPClient creates a new DeleteKnowledgeKnowledgebaseLanguageDocumentsImportParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteKnowledgeKnowledgebaseLanguageDocumentsImportParamsWithHTTPClient(client *http.Client) *DeleteKnowledgeKnowledgebaseLanguageDocumentsImportParams {
	var ()
	return &DeleteKnowledgeKnowledgebaseLanguageDocumentsImportParams{
		HTTPClient: client,
	}
}

/*DeleteKnowledgeKnowledgebaseLanguageDocumentsImportParams contains all the parameters to send to the API endpoint
for the delete knowledge knowledgebase language documents import operation typically these are written to a http.Request
*/
type DeleteKnowledgeKnowledgebaseLanguageDocumentsImportParams struct {

	/*ImportID
	  Import ID

	*/
	ImportID string
	/*KnowledgeBaseID
	  Knowledge base ID

	*/
	KnowledgeBaseID string
	/*LanguageCode
	  Language code, format: iso2-LOCALE

	*/
	LanguageCode string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete knowledge knowledgebase language documents import params
func (o *DeleteKnowledgeKnowledgebaseLanguageDocumentsImportParams) WithTimeout(timeout time.Duration) *DeleteKnowledgeKnowledgebaseLanguageDocumentsImportParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete knowledge knowledgebase language documents import params
func (o *DeleteKnowledgeKnowledgebaseLanguageDocumentsImportParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete knowledge knowledgebase language documents import params
func (o *DeleteKnowledgeKnowledgebaseLanguageDocumentsImportParams) WithContext(ctx context.Context) *DeleteKnowledgeKnowledgebaseLanguageDocumentsImportParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete knowledge knowledgebase language documents import params
func (o *DeleteKnowledgeKnowledgebaseLanguageDocumentsImportParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete knowledge knowledgebase language documents import params
func (o *DeleteKnowledgeKnowledgebaseLanguageDocumentsImportParams) WithHTTPClient(client *http.Client) *DeleteKnowledgeKnowledgebaseLanguageDocumentsImportParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete knowledge knowledgebase language documents import params
func (o *DeleteKnowledgeKnowledgebaseLanguageDocumentsImportParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithImportID adds the importID to the delete knowledge knowledgebase language documents import params
func (o *DeleteKnowledgeKnowledgebaseLanguageDocumentsImportParams) WithImportID(importID string) *DeleteKnowledgeKnowledgebaseLanguageDocumentsImportParams {
	o.SetImportID(importID)
	return o
}

// SetImportID adds the importId to the delete knowledge knowledgebase language documents import params
func (o *DeleteKnowledgeKnowledgebaseLanguageDocumentsImportParams) SetImportID(importID string) {
	o.ImportID = importID
}

// WithKnowledgeBaseID adds the knowledgeBaseID to the delete knowledge knowledgebase language documents import params
func (o *DeleteKnowledgeKnowledgebaseLanguageDocumentsImportParams) WithKnowledgeBaseID(knowledgeBaseID string) *DeleteKnowledgeKnowledgebaseLanguageDocumentsImportParams {
	o.SetKnowledgeBaseID(knowledgeBaseID)
	return o
}

// SetKnowledgeBaseID adds the knowledgeBaseId to the delete knowledge knowledgebase language documents import params
func (o *DeleteKnowledgeKnowledgebaseLanguageDocumentsImportParams) SetKnowledgeBaseID(knowledgeBaseID string) {
	o.KnowledgeBaseID = knowledgeBaseID
}

// WithLanguageCode adds the languageCode to the delete knowledge knowledgebase language documents import params
func (o *DeleteKnowledgeKnowledgebaseLanguageDocumentsImportParams) WithLanguageCode(languageCode string) *DeleteKnowledgeKnowledgebaseLanguageDocumentsImportParams {
	o.SetLanguageCode(languageCode)
	return o
}

// SetLanguageCode adds the languageCode to the delete knowledge knowledgebase language documents import params
func (o *DeleteKnowledgeKnowledgebaseLanguageDocumentsImportParams) SetLanguageCode(languageCode string) {
	o.LanguageCode = languageCode
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteKnowledgeKnowledgebaseLanguageDocumentsImportParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param importId
	if err := r.SetPathParam("importId", o.ImportID); err != nil {
		return err
	}

	// path param knowledgeBaseId
	if err := r.SetPathParam("knowledgeBaseId", o.KnowledgeBaseID); err != nil {
		return err
	}

	// path param languageCode
	if err := r.SetPathParam("languageCode", o.LanguageCode); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
