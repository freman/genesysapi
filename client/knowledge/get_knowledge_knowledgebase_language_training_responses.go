// Code generated by go-swagger; DO NOT EDIT.

package knowledge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetKnowledgeKnowledgebaseLanguageTrainingReader is a Reader for the GetKnowledgeKnowledgebaseLanguageTraining structure.
type GetKnowledgeKnowledgebaseLanguageTrainingReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetKnowledgeKnowledgebaseLanguageTrainingReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetKnowledgeKnowledgebaseLanguageTrainingOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetKnowledgeKnowledgebaseLanguageTrainingBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetKnowledgeKnowledgebaseLanguageTrainingUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetKnowledgeKnowledgebaseLanguageTrainingForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetKnowledgeKnowledgebaseLanguageTrainingNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetKnowledgeKnowledgebaseLanguageTrainingRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetKnowledgeKnowledgebaseLanguageTrainingRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetKnowledgeKnowledgebaseLanguageTrainingUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetKnowledgeKnowledgebaseLanguageTrainingTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetKnowledgeKnowledgebaseLanguageTrainingInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetKnowledgeKnowledgebaseLanguageTrainingServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetKnowledgeKnowledgebaseLanguageTrainingGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetKnowledgeKnowledgebaseLanguageTrainingOK creates a GetKnowledgeKnowledgebaseLanguageTrainingOK with default headers values
func NewGetKnowledgeKnowledgebaseLanguageTrainingOK() *GetKnowledgeKnowledgebaseLanguageTrainingOK {
	return &GetKnowledgeKnowledgebaseLanguageTrainingOK{}
}

/*GetKnowledgeKnowledgebaseLanguageTrainingOK handles this case with default header values.

successful operation
*/
type GetKnowledgeKnowledgebaseLanguageTrainingOK struct {
	Payload *models.KnowledgeTraining
}

func (o *GetKnowledgeKnowledgebaseLanguageTrainingOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings/{trainingId}][%d] getKnowledgeKnowledgebaseLanguageTrainingOK  %+v", 200, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageTrainingOK) GetPayload() *models.KnowledgeTraining {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseLanguageTrainingOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KnowledgeTraining)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseLanguageTrainingBadRequest creates a GetKnowledgeKnowledgebaseLanguageTrainingBadRequest with default headers values
func NewGetKnowledgeKnowledgebaseLanguageTrainingBadRequest() *GetKnowledgeKnowledgebaseLanguageTrainingBadRequest {
	return &GetKnowledgeKnowledgebaseLanguageTrainingBadRequest{}
}

/*GetKnowledgeKnowledgebaseLanguageTrainingBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetKnowledgeKnowledgebaseLanguageTrainingBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetKnowledgeKnowledgebaseLanguageTrainingBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings/{trainingId}][%d] getKnowledgeKnowledgebaseLanguageTrainingBadRequest  %+v", 400, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageTrainingBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseLanguageTrainingBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseLanguageTrainingUnauthorized creates a GetKnowledgeKnowledgebaseLanguageTrainingUnauthorized with default headers values
func NewGetKnowledgeKnowledgebaseLanguageTrainingUnauthorized() *GetKnowledgeKnowledgebaseLanguageTrainingUnauthorized {
	return &GetKnowledgeKnowledgebaseLanguageTrainingUnauthorized{}
}

/*GetKnowledgeKnowledgebaseLanguageTrainingUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetKnowledgeKnowledgebaseLanguageTrainingUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetKnowledgeKnowledgebaseLanguageTrainingUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings/{trainingId}][%d] getKnowledgeKnowledgebaseLanguageTrainingUnauthorized  %+v", 401, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageTrainingUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseLanguageTrainingUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseLanguageTrainingForbidden creates a GetKnowledgeKnowledgebaseLanguageTrainingForbidden with default headers values
func NewGetKnowledgeKnowledgebaseLanguageTrainingForbidden() *GetKnowledgeKnowledgebaseLanguageTrainingForbidden {
	return &GetKnowledgeKnowledgebaseLanguageTrainingForbidden{}
}

/*GetKnowledgeKnowledgebaseLanguageTrainingForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetKnowledgeKnowledgebaseLanguageTrainingForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetKnowledgeKnowledgebaseLanguageTrainingForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings/{trainingId}][%d] getKnowledgeKnowledgebaseLanguageTrainingForbidden  %+v", 403, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageTrainingForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseLanguageTrainingForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseLanguageTrainingNotFound creates a GetKnowledgeKnowledgebaseLanguageTrainingNotFound with default headers values
func NewGetKnowledgeKnowledgebaseLanguageTrainingNotFound() *GetKnowledgeKnowledgebaseLanguageTrainingNotFound {
	return &GetKnowledgeKnowledgebaseLanguageTrainingNotFound{}
}

/*GetKnowledgeKnowledgebaseLanguageTrainingNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetKnowledgeKnowledgebaseLanguageTrainingNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetKnowledgeKnowledgebaseLanguageTrainingNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings/{trainingId}][%d] getKnowledgeKnowledgebaseLanguageTrainingNotFound  %+v", 404, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageTrainingNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseLanguageTrainingNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseLanguageTrainingRequestTimeout creates a GetKnowledgeKnowledgebaseLanguageTrainingRequestTimeout with default headers values
func NewGetKnowledgeKnowledgebaseLanguageTrainingRequestTimeout() *GetKnowledgeKnowledgebaseLanguageTrainingRequestTimeout {
	return &GetKnowledgeKnowledgebaseLanguageTrainingRequestTimeout{}
}

/*GetKnowledgeKnowledgebaseLanguageTrainingRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetKnowledgeKnowledgebaseLanguageTrainingRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetKnowledgeKnowledgebaseLanguageTrainingRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings/{trainingId}][%d] getKnowledgeKnowledgebaseLanguageTrainingRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageTrainingRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseLanguageTrainingRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseLanguageTrainingRequestEntityTooLarge creates a GetKnowledgeKnowledgebaseLanguageTrainingRequestEntityTooLarge with default headers values
func NewGetKnowledgeKnowledgebaseLanguageTrainingRequestEntityTooLarge() *GetKnowledgeKnowledgebaseLanguageTrainingRequestEntityTooLarge {
	return &GetKnowledgeKnowledgebaseLanguageTrainingRequestEntityTooLarge{}
}

/*GetKnowledgeKnowledgebaseLanguageTrainingRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetKnowledgeKnowledgebaseLanguageTrainingRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetKnowledgeKnowledgebaseLanguageTrainingRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings/{trainingId}][%d] getKnowledgeKnowledgebaseLanguageTrainingRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageTrainingRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseLanguageTrainingRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseLanguageTrainingUnsupportedMediaType creates a GetKnowledgeKnowledgebaseLanguageTrainingUnsupportedMediaType with default headers values
func NewGetKnowledgeKnowledgebaseLanguageTrainingUnsupportedMediaType() *GetKnowledgeKnowledgebaseLanguageTrainingUnsupportedMediaType {
	return &GetKnowledgeKnowledgebaseLanguageTrainingUnsupportedMediaType{}
}

/*GetKnowledgeKnowledgebaseLanguageTrainingUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetKnowledgeKnowledgebaseLanguageTrainingUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetKnowledgeKnowledgebaseLanguageTrainingUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings/{trainingId}][%d] getKnowledgeKnowledgebaseLanguageTrainingUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageTrainingUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseLanguageTrainingUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseLanguageTrainingTooManyRequests creates a GetKnowledgeKnowledgebaseLanguageTrainingTooManyRequests with default headers values
func NewGetKnowledgeKnowledgebaseLanguageTrainingTooManyRequests() *GetKnowledgeKnowledgebaseLanguageTrainingTooManyRequests {
	return &GetKnowledgeKnowledgebaseLanguageTrainingTooManyRequests{}
}

/*GetKnowledgeKnowledgebaseLanguageTrainingTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetKnowledgeKnowledgebaseLanguageTrainingTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetKnowledgeKnowledgebaseLanguageTrainingTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings/{trainingId}][%d] getKnowledgeKnowledgebaseLanguageTrainingTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageTrainingTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseLanguageTrainingTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseLanguageTrainingInternalServerError creates a GetKnowledgeKnowledgebaseLanguageTrainingInternalServerError with default headers values
func NewGetKnowledgeKnowledgebaseLanguageTrainingInternalServerError() *GetKnowledgeKnowledgebaseLanguageTrainingInternalServerError {
	return &GetKnowledgeKnowledgebaseLanguageTrainingInternalServerError{}
}

/*GetKnowledgeKnowledgebaseLanguageTrainingInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetKnowledgeKnowledgebaseLanguageTrainingInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetKnowledgeKnowledgebaseLanguageTrainingInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings/{trainingId}][%d] getKnowledgeKnowledgebaseLanguageTrainingInternalServerError  %+v", 500, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageTrainingInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseLanguageTrainingInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseLanguageTrainingServiceUnavailable creates a GetKnowledgeKnowledgebaseLanguageTrainingServiceUnavailable with default headers values
func NewGetKnowledgeKnowledgebaseLanguageTrainingServiceUnavailable() *GetKnowledgeKnowledgebaseLanguageTrainingServiceUnavailable {
	return &GetKnowledgeKnowledgebaseLanguageTrainingServiceUnavailable{}
}

/*GetKnowledgeKnowledgebaseLanguageTrainingServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetKnowledgeKnowledgebaseLanguageTrainingServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetKnowledgeKnowledgebaseLanguageTrainingServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings/{trainingId}][%d] getKnowledgeKnowledgebaseLanguageTrainingServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageTrainingServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseLanguageTrainingServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseLanguageTrainingGatewayTimeout creates a GetKnowledgeKnowledgebaseLanguageTrainingGatewayTimeout with default headers values
func NewGetKnowledgeKnowledgebaseLanguageTrainingGatewayTimeout() *GetKnowledgeKnowledgebaseLanguageTrainingGatewayTimeout {
	return &GetKnowledgeKnowledgebaseLanguageTrainingGatewayTimeout{}
}

/*GetKnowledgeKnowledgebaseLanguageTrainingGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetKnowledgeKnowledgebaseLanguageTrainingGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetKnowledgeKnowledgebaseLanguageTrainingGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings/{trainingId}][%d] getKnowledgeKnowledgebaseLanguageTrainingGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageTrainingGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseLanguageTrainingGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
