// Code generated by go-swagger; DO NOT EDIT.

package knowledge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// DeleteKnowledgeKnowledgebaseLabelReader is a Reader for the DeleteKnowledgeKnowledgebaseLabel structure.
type DeleteKnowledgeKnowledgebaseLabelReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteKnowledgeKnowledgebaseLabelReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteKnowledgeKnowledgebaseLabelOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewDeleteKnowledgeKnowledgebaseLabelNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteKnowledgeKnowledgebaseLabelBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteKnowledgeKnowledgebaseLabelUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteKnowledgeKnowledgebaseLabelForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteKnowledgeKnowledgebaseLabelNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewDeleteKnowledgeKnowledgebaseLabelRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewDeleteKnowledgeKnowledgebaseLabelRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDeleteKnowledgeKnowledgebaseLabelUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteKnowledgeKnowledgebaseLabelTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteKnowledgeKnowledgebaseLabelInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteKnowledgeKnowledgebaseLabelServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteKnowledgeKnowledgebaseLabelGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteKnowledgeKnowledgebaseLabelOK creates a DeleteKnowledgeKnowledgebaseLabelOK with default headers values
func NewDeleteKnowledgeKnowledgebaseLabelOK() *DeleteKnowledgeKnowledgebaseLabelOK {
	return &DeleteKnowledgeKnowledgebaseLabelOK{}
}

/*DeleteKnowledgeKnowledgebaseLabelOK handles this case with default header values.

successful operation
*/
type DeleteKnowledgeKnowledgebaseLabelOK struct {
	Payload *models.LabelResponse
}

func (o *DeleteKnowledgeKnowledgebaseLabelOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/labels/{labelId}][%d] deleteKnowledgeKnowledgebaseLabelOK  %+v", 200, o.Payload)
}

func (o *DeleteKnowledgeKnowledgebaseLabelOK) GetPayload() *models.LabelResponse {
	return o.Payload
}

func (o *DeleteKnowledgeKnowledgebaseLabelOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LabelResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteKnowledgeKnowledgebaseLabelNoContent creates a DeleteKnowledgeKnowledgebaseLabelNoContent with default headers values
func NewDeleteKnowledgeKnowledgebaseLabelNoContent() *DeleteKnowledgeKnowledgebaseLabelNoContent {
	return &DeleteKnowledgeKnowledgebaseLabelNoContent{}
}

/*DeleteKnowledgeKnowledgebaseLabelNoContent handles this case with default header values.

Label deleted
*/
type DeleteKnowledgeKnowledgebaseLabelNoContent struct {
}

func (o *DeleteKnowledgeKnowledgebaseLabelNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/labels/{labelId}][%d] deleteKnowledgeKnowledgebaseLabelNoContent ", 204)
}

func (o *DeleteKnowledgeKnowledgebaseLabelNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteKnowledgeKnowledgebaseLabelBadRequest creates a DeleteKnowledgeKnowledgebaseLabelBadRequest with default headers values
func NewDeleteKnowledgeKnowledgebaseLabelBadRequest() *DeleteKnowledgeKnowledgebaseLabelBadRequest {
	return &DeleteKnowledgeKnowledgebaseLabelBadRequest{}
}

/*DeleteKnowledgeKnowledgebaseLabelBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type DeleteKnowledgeKnowledgebaseLabelBadRequest struct {
	Payload *models.ErrorBody
}

func (o *DeleteKnowledgeKnowledgebaseLabelBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/labels/{labelId}][%d] deleteKnowledgeKnowledgebaseLabelBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteKnowledgeKnowledgebaseLabelBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteKnowledgeKnowledgebaseLabelBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteKnowledgeKnowledgebaseLabelUnauthorized creates a DeleteKnowledgeKnowledgebaseLabelUnauthorized with default headers values
func NewDeleteKnowledgeKnowledgebaseLabelUnauthorized() *DeleteKnowledgeKnowledgebaseLabelUnauthorized {
	return &DeleteKnowledgeKnowledgebaseLabelUnauthorized{}
}

/*DeleteKnowledgeKnowledgebaseLabelUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type DeleteKnowledgeKnowledgebaseLabelUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *DeleteKnowledgeKnowledgebaseLabelUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/labels/{labelId}][%d] deleteKnowledgeKnowledgebaseLabelUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteKnowledgeKnowledgebaseLabelUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteKnowledgeKnowledgebaseLabelUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteKnowledgeKnowledgebaseLabelForbidden creates a DeleteKnowledgeKnowledgebaseLabelForbidden with default headers values
func NewDeleteKnowledgeKnowledgebaseLabelForbidden() *DeleteKnowledgeKnowledgebaseLabelForbidden {
	return &DeleteKnowledgeKnowledgebaseLabelForbidden{}
}

/*DeleteKnowledgeKnowledgebaseLabelForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type DeleteKnowledgeKnowledgebaseLabelForbidden struct {
	Payload *models.ErrorBody
}

func (o *DeleteKnowledgeKnowledgebaseLabelForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/labels/{labelId}][%d] deleteKnowledgeKnowledgebaseLabelForbidden  %+v", 403, o.Payload)
}

func (o *DeleteKnowledgeKnowledgebaseLabelForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteKnowledgeKnowledgebaseLabelForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteKnowledgeKnowledgebaseLabelNotFound creates a DeleteKnowledgeKnowledgebaseLabelNotFound with default headers values
func NewDeleteKnowledgeKnowledgebaseLabelNotFound() *DeleteKnowledgeKnowledgebaseLabelNotFound {
	return &DeleteKnowledgeKnowledgebaseLabelNotFound{}
}

/*DeleteKnowledgeKnowledgebaseLabelNotFound handles this case with default header values.

The requested resource was not found.
*/
type DeleteKnowledgeKnowledgebaseLabelNotFound struct {
	Payload *models.ErrorBody
}

func (o *DeleteKnowledgeKnowledgebaseLabelNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/labels/{labelId}][%d] deleteKnowledgeKnowledgebaseLabelNotFound  %+v", 404, o.Payload)
}

func (o *DeleteKnowledgeKnowledgebaseLabelNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteKnowledgeKnowledgebaseLabelNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteKnowledgeKnowledgebaseLabelRequestTimeout creates a DeleteKnowledgeKnowledgebaseLabelRequestTimeout with default headers values
func NewDeleteKnowledgeKnowledgebaseLabelRequestTimeout() *DeleteKnowledgeKnowledgebaseLabelRequestTimeout {
	return &DeleteKnowledgeKnowledgebaseLabelRequestTimeout{}
}

/*DeleteKnowledgeKnowledgebaseLabelRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type DeleteKnowledgeKnowledgebaseLabelRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *DeleteKnowledgeKnowledgebaseLabelRequestTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/labels/{labelId}][%d] deleteKnowledgeKnowledgebaseLabelRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteKnowledgeKnowledgebaseLabelRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteKnowledgeKnowledgebaseLabelRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteKnowledgeKnowledgebaseLabelRequestEntityTooLarge creates a DeleteKnowledgeKnowledgebaseLabelRequestEntityTooLarge with default headers values
func NewDeleteKnowledgeKnowledgebaseLabelRequestEntityTooLarge() *DeleteKnowledgeKnowledgebaseLabelRequestEntityTooLarge {
	return &DeleteKnowledgeKnowledgebaseLabelRequestEntityTooLarge{}
}

/*DeleteKnowledgeKnowledgebaseLabelRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type DeleteKnowledgeKnowledgebaseLabelRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *DeleteKnowledgeKnowledgebaseLabelRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/labels/{labelId}][%d] deleteKnowledgeKnowledgebaseLabelRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteKnowledgeKnowledgebaseLabelRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteKnowledgeKnowledgebaseLabelRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteKnowledgeKnowledgebaseLabelUnsupportedMediaType creates a DeleteKnowledgeKnowledgebaseLabelUnsupportedMediaType with default headers values
func NewDeleteKnowledgeKnowledgebaseLabelUnsupportedMediaType() *DeleteKnowledgeKnowledgebaseLabelUnsupportedMediaType {
	return &DeleteKnowledgeKnowledgebaseLabelUnsupportedMediaType{}
}

/*DeleteKnowledgeKnowledgebaseLabelUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type DeleteKnowledgeKnowledgebaseLabelUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *DeleteKnowledgeKnowledgebaseLabelUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/labels/{labelId}][%d] deleteKnowledgeKnowledgebaseLabelUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteKnowledgeKnowledgebaseLabelUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteKnowledgeKnowledgebaseLabelUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteKnowledgeKnowledgebaseLabelTooManyRequests creates a DeleteKnowledgeKnowledgebaseLabelTooManyRequests with default headers values
func NewDeleteKnowledgeKnowledgebaseLabelTooManyRequests() *DeleteKnowledgeKnowledgebaseLabelTooManyRequests {
	return &DeleteKnowledgeKnowledgebaseLabelTooManyRequests{}
}

/*DeleteKnowledgeKnowledgebaseLabelTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type DeleteKnowledgeKnowledgebaseLabelTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *DeleteKnowledgeKnowledgebaseLabelTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/labels/{labelId}][%d] deleteKnowledgeKnowledgebaseLabelTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteKnowledgeKnowledgebaseLabelTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteKnowledgeKnowledgebaseLabelTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteKnowledgeKnowledgebaseLabelInternalServerError creates a DeleteKnowledgeKnowledgebaseLabelInternalServerError with default headers values
func NewDeleteKnowledgeKnowledgebaseLabelInternalServerError() *DeleteKnowledgeKnowledgebaseLabelInternalServerError {
	return &DeleteKnowledgeKnowledgebaseLabelInternalServerError{}
}

/*DeleteKnowledgeKnowledgebaseLabelInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type DeleteKnowledgeKnowledgebaseLabelInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *DeleteKnowledgeKnowledgebaseLabelInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/labels/{labelId}][%d] deleteKnowledgeKnowledgebaseLabelInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteKnowledgeKnowledgebaseLabelInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteKnowledgeKnowledgebaseLabelInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteKnowledgeKnowledgebaseLabelServiceUnavailable creates a DeleteKnowledgeKnowledgebaseLabelServiceUnavailable with default headers values
func NewDeleteKnowledgeKnowledgebaseLabelServiceUnavailable() *DeleteKnowledgeKnowledgebaseLabelServiceUnavailable {
	return &DeleteKnowledgeKnowledgebaseLabelServiceUnavailable{}
}

/*DeleteKnowledgeKnowledgebaseLabelServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type DeleteKnowledgeKnowledgebaseLabelServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *DeleteKnowledgeKnowledgebaseLabelServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/labels/{labelId}][%d] deleteKnowledgeKnowledgebaseLabelServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteKnowledgeKnowledgebaseLabelServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteKnowledgeKnowledgebaseLabelServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteKnowledgeKnowledgebaseLabelGatewayTimeout creates a DeleteKnowledgeKnowledgebaseLabelGatewayTimeout with default headers values
func NewDeleteKnowledgeKnowledgebaseLabelGatewayTimeout() *DeleteKnowledgeKnowledgebaseLabelGatewayTimeout {
	return &DeleteKnowledgeKnowledgebaseLabelGatewayTimeout{}
}

/*DeleteKnowledgeKnowledgebaseLabelGatewayTimeout handles this case with default header values.

The request timed out.
*/
type DeleteKnowledgeKnowledgebaseLabelGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *DeleteKnowledgeKnowledgebaseLabelGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/labels/{labelId}][%d] deleteKnowledgeKnowledgebaseLabelGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteKnowledgeKnowledgebaseLabelGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteKnowledgeKnowledgebaseLabelGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
