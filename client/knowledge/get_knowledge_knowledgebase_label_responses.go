// Code generated by go-swagger; DO NOT EDIT.

package knowledge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetKnowledgeKnowledgebaseLabelReader is a Reader for the GetKnowledgeKnowledgebaseLabel structure.
type GetKnowledgeKnowledgebaseLabelReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetKnowledgeKnowledgebaseLabelReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetKnowledgeKnowledgebaseLabelOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetKnowledgeKnowledgebaseLabelBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetKnowledgeKnowledgebaseLabelUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetKnowledgeKnowledgebaseLabelForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetKnowledgeKnowledgebaseLabelNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetKnowledgeKnowledgebaseLabelRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetKnowledgeKnowledgebaseLabelRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetKnowledgeKnowledgebaseLabelUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetKnowledgeKnowledgebaseLabelTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetKnowledgeKnowledgebaseLabelInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetKnowledgeKnowledgebaseLabelServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetKnowledgeKnowledgebaseLabelGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetKnowledgeKnowledgebaseLabelOK creates a GetKnowledgeKnowledgebaseLabelOK with default headers values
func NewGetKnowledgeKnowledgebaseLabelOK() *GetKnowledgeKnowledgebaseLabelOK {
	return &GetKnowledgeKnowledgebaseLabelOK{}
}

/*
GetKnowledgeKnowledgebaseLabelOK describes a response with status code 200, with default header values.

successful operation
*/
type GetKnowledgeKnowledgebaseLabelOK struct {
	Payload *models.LabelResponse
}

// IsSuccess returns true when this get knowledge knowledgebase label o k response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseLabelOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get knowledge knowledgebase label o k response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseLabelOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase label o k response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseLabelOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get knowledge knowledgebase label o k response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseLabelOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase label o k response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseLabelOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetKnowledgeKnowledgebaseLabelOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/labels/{labelId}][%d] getKnowledgeKnowledgebaseLabelOK  %+v", 200, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLabelOK) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/labels/{labelId}][%d] getKnowledgeKnowledgebaseLabelOK  %+v", 200, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLabelOK) GetPayload() *models.LabelResponse {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseLabelOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LabelResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseLabelBadRequest creates a GetKnowledgeKnowledgebaseLabelBadRequest with default headers values
func NewGetKnowledgeKnowledgebaseLabelBadRequest() *GetKnowledgeKnowledgebaseLabelBadRequest {
	return &GetKnowledgeKnowledgebaseLabelBadRequest{}
}

/*
GetKnowledgeKnowledgebaseLabelBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetKnowledgeKnowledgebaseLabelBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase label bad request response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseLabelBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase label bad request response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseLabelBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase label bad request response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseLabelBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase label bad request response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseLabelBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase label bad request response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseLabelBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetKnowledgeKnowledgebaseLabelBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/labels/{labelId}][%d] getKnowledgeKnowledgebaseLabelBadRequest  %+v", 400, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLabelBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/labels/{labelId}][%d] getKnowledgeKnowledgebaseLabelBadRequest  %+v", 400, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLabelBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseLabelBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseLabelUnauthorized creates a GetKnowledgeKnowledgebaseLabelUnauthorized with default headers values
func NewGetKnowledgeKnowledgebaseLabelUnauthorized() *GetKnowledgeKnowledgebaseLabelUnauthorized {
	return &GetKnowledgeKnowledgebaseLabelUnauthorized{}
}

/*
GetKnowledgeKnowledgebaseLabelUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetKnowledgeKnowledgebaseLabelUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase label unauthorized response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseLabelUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase label unauthorized response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseLabelUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase label unauthorized response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseLabelUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase label unauthorized response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseLabelUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase label unauthorized response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseLabelUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetKnowledgeKnowledgebaseLabelUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/labels/{labelId}][%d] getKnowledgeKnowledgebaseLabelUnauthorized  %+v", 401, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLabelUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/labels/{labelId}][%d] getKnowledgeKnowledgebaseLabelUnauthorized  %+v", 401, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLabelUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseLabelUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseLabelForbidden creates a GetKnowledgeKnowledgebaseLabelForbidden with default headers values
func NewGetKnowledgeKnowledgebaseLabelForbidden() *GetKnowledgeKnowledgebaseLabelForbidden {
	return &GetKnowledgeKnowledgebaseLabelForbidden{}
}

/*
GetKnowledgeKnowledgebaseLabelForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetKnowledgeKnowledgebaseLabelForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase label forbidden response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseLabelForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase label forbidden response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseLabelForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase label forbidden response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseLabelForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase label forbidden response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseLabelForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase label forbidden response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseLabelForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetKnowledgeKnowledgebaseLabelForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/labels/{labelId}][%d] getKnowledgeKnowledgebaseLabelForbidden  %+v", 403, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLabelForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/labels/{labelId}][%d] getKnowledgeKnowledgebaseLabelForbidden  %+v", 403, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLabelForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseLabelForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseLabelNotFound creates a GetKnowledgeKnowledgebaseLabelNotFound with default headers values
func NewGetKnowledgeKnowledgebaseLabelNotFound() *GetKnowledgeKnowledgebaseLabelNotFound {
	return &GetKnowledgeKnowledgebaseLabelNotFound{}
}

/*
GetKnowledgeKnowledgebaseLabelNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetKnowledgeKnowledgebaseLabelNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase label not found response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseLabelNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase label not found response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseLabelNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase label not found response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseLabelNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase label not found response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseLabelNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase label not found response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseLabelNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetKnowledgeKnowledgebaseLabelNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/labels/{labelId}][%d] getKnowledgeKnowledgebaseLabelNotFound  %+v", 404, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLabelNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/labels/{labelId}][%d] getKnowledgeKnowledgebaseLabelNotFound  %+v", 404, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLabelNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseLabelNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseLabelRequestTimeout creates a GetKnowledgeKnowledgebaseLabelRequestTimeout with default headers values
func NewGetKnowledgeKnowledgebaseLabelRequestTimeout() *GetKnowledgeKnowledgebaseLabelRequestTimeout {
	return &GetKnowledgeKnowledgebaseLabelRequestTimeout{}
}

/*
GetKnowledgeKnowledgebaseLabelRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetKnowledgeKnowledgebaseLabelRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase label request timeout response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseLabelRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase label request timeout response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseLabelRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase label request timeout response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseLabelRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase label request timeout response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseLabelRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase label request timeout response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseLabelRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetKnowledgeKnowledgebaseLabelRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/labels/{labelId}][%d] getKnowledgeKnowledgebaseLabelRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLabelRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/labels/{labelId}][%d] getKnowledgeKnowledgebaseLabelRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLabelRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseLabelRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseLabelRequestEntityTooLarge creates a GetKnowledgeKnowledgebaseLabelRequestEntityTooLarge with default headers values
func NewGetKnowledgeKnowledgebaseLabelRequestEntityTooLarge() *GetKnowledgeKnowledgebaseLabelRequestEntityTooLarge {
	return &GetKnowledgeKnowledgebaseLabelRequestEntityTooLarge{}
}

/*
GetKnowledgeKnowledgebaseLabelRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetKnowledgeKnowledgebaseLabelRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase label request entity too large response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseLabelRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase label request entity too large response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseLabelRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase label request entity too large response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseLabelRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase label request entity too large response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseLabelRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase label request entity too large response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseLabelRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetKnowledgeKnowledgebaseLabelRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/labels/{labelId}][%d] getKnowledgeKnowledgebaseLabelRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLabelRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/labels/{labelId}][%d] getKnowledgeKnowledgebaseLabelRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLabelRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseLabelRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseLabelUnsupportedMediaType creates a GetKnowledgeKnowledgebaseLabelUnsupportedMediaType with default headers values
func NewGetKnowledgeKnowledgebaseLabelUnsupportedMediaType() *GetKnowledgeKnowledgebaseLabelUnsupportedMediaType {
	return &GetKnowledgeKnowledgebaseLabelUnsupportedMediaType{}
}

/*
GetKnowledgeKnowledgebaseLabelUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetKnowledgeKnowledgebaseLabelUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase label unsupported media type response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseLabelUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase label unsupported media type response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseLabelUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase label unsupported media type response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseLabelUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase label unsupported media type response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseLabelUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase label unsupported media type response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseLabelUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetKnowledgeKnowledgebaseLabelUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/labels/{labelId}][%d] getKnowledgeKnowledgebaseLabelUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLabelUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/labels/{labelId}][%d] getKnowledgeKnowledgebaseLabelUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLabelUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseLabelUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseLabelTooManyRequests creates a GetKnowledgeKnowledgebaseLabelTooManyRequests with default headers values
func NewGetKnowledgeKnowledgebaseLabelTooManyRequests() *GetKnowledgeKnowledgebaseLabelTooManyRequests {
	return &GetKnowledgeKnowledgebaseLabelTooManyRequests{}
}

/*
GetKnowledgeKnowledgebaseLabelTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetKnowledgeKnowledgebaseLabelTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase label too many requests response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseLabelTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase label too many requests response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseLabelTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase label too many requests response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseLabelTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase label too many requests response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseLabelTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase label too many requests response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseLabelTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetKnowledgeKnowledgebaseLabelTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/labels/{labelId}][%d] getKnowledgeKnowledgebaseLabelTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLabelTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/labels/{labelId}][%d] getKnowledgeKnowledgebaseLabelTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLabelTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseLabelTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseLabelInternalServerError creates a GetKnowledgeKnowledgebaseLabelInternalServerError with default headers values
func NewGetKnowledgeKnowledgebaseLabelInternalServerError() *GetKnowledgeKnowledgebaseLabelInternalServerError {
	return &GetKnowledgeKnowledgebaseLabelInternalServerError{}
}

/*
GetKnowledgeKnowledgebaseLabelInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetKnowledgeKnowledgebaseLabelInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase label internal server error response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseLabelInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase label internal server error response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseLabelInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase label internal server error response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseLabelInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get knowledge knowledgebase label internal server error response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseLabelInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get knowledge knowledgebase label internal server error response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseLabelInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetKnowledgeKnowledgebaseLabelInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/labels/{labelId}][%d] getKnowledgeKnowledgebaseLabelInternalServerError  %+v", 500, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLabelInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/labels/{labelId}][%d] getKnowledgeKnowledgebaseLabelInternalServerError  %+v", 500, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLabelInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseLabelInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseLabelServiceUnavailable creates a GetKnowledgeKnowledgebaseLabelServiceUnavailable with default headers values
func NewGetKnowledgeKnowledgebaseLabelServiceUnavailable() *GetKnowledgeKnowledgebaseLabelServiceUnavailable {
	return &GetKnowledgeKnowledgebaseLabelServiceUnavailable{}
}

/*
GetKnowledgeKnowledgebaseLabelServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetKnowledgeKnowledgebaseLabelServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase label service unavailable response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseLabelServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase label service unavailable response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseLabelServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase label service unavailable response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseLabelServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get knowledge knowledgebase label service unavailable response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseLabelServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get knowledge knowledgebase label service unavailable response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseLabelServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetKnowledgeKnowledgebaseLabelServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/labels/{labelId}][%d] getKnowledgeKnowledgebaseLabelServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLabelServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/labels/{labelId}][%d] getKnowledgeKnowledgebaseLabelServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLabelServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseLabelServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseLabelGatewayTimeout creates a GetKnowledgeKnowledgebaseLabelGatewayTimeout with default headers values
func NewGetKnowledgeKnowledgebaseLabelGatewayTimeout() *GetKnowledgeKnowledgebaseLabelGatewayTimeout {
	return &GetKnowledgeKnowledgebaseLabelGatewayTimeout{}
}

/*
GetKnowledgeKnowledgebaseLabelGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetKnowledgeKnowledgebaseLabelGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase label gateway timeout response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseLabelGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase label gateway timeout response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseLabelGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase label gateway timeout response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseLabelGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get knowledge knowledgebase label gateway timeout response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseLabelGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get knowledge knowledgebase label gateway timeout response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseLabelGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetKnowledgeKnowledgebaseLabelGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/labels/{labelId}][%d] getKnowledgeKnowledgebaseLabelGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLabelGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/labels/{labelId}][%d] getKnowledgeKnowledgebaseLabelGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLabelGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseLabelGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
