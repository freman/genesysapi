// Code generated by go-swagger; DO NOT EDIT.

package knowledge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostKnowledgeGuestSessionsReader is a Reader for the PostKnowledgeGuestSessions structure.
type PostKnowledgeGuestSessionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostKnowledgeGuestSessionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostKnowledgeGuestSessionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewPostKnowledgeGuestSessionsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostKnowledgeGuestSessionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostKnowledgeGuestSessionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostKnowledgeGuestSessionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostKnowledgeGuestSessionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostKnowledgeGuestSessionsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostKnowledgeGuestSessionsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostKnowledgeGuestSessionsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostKnowledgeGuestSessionsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostKnowledgeGuestSessionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostKnowledgeGuestSessionsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostKnowledgeGuestSessionsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostKnowledgeGuestSessionsOK creates a PostKnowledgeGuestSessionsOK with default headers values
func NewPostKnowledgeGuestSessionsOK() *PostKnowledgeGuestSessionsOK {
	return &PostKnowledgeGuestSessionsOK{}
}

/*PostKnowledgeGuestSessionsOK handles this case with default header values.

successful operation
*/
type PostKnowledgeGuestSessionsOK struct {
	Payload *models.KnowledgeGuestSession
}

func (o *PostKnowledgeGuestSessionsOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/guest/sessions][%d] postKnowledgeGuestSessionsOK  %+v", 200, o.Payload)
}

func (o *PostKnowledgeGuestSessionsOK) GetPayload() *models.KnowledgeGuestSession {
	return o.Payload
}

func (o *PostKnowledgeGuestSessionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KnowledgeGuestSession)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeGuestSessionsCreated creates a PostKnowledgeGuestSessionsCreated with default headers values
func NewPostKnowledgeGuestSessionsCreated() *PostKnowledgeGuestSessionsCreated {
	return &PostKnowledgeGuestSessionsCreated{}
}

/*PostKnowledgeGuestSessionsCreated handles this case with default header values.

Created
*/
type PostKnowledgeGuestSessionsCreated struct {
	Payload *models.KnowledgeGuestSession
}

func (o *PostKnowledgeGuestSessionsCreated) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/guest/sessions][%d] postKnowledgeGuestSessionsCreated  %+v", 201, o.Payload)
}

func (o *PostKnowledgeGuestSessionsCreated) GetPayload() *models.KnowledgeGuestSession {
	return o.Payload
}

func (o *PostKnowledgeGuestSessionsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KnowledgeGuestSession)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeGuestSessionsBadRequest creates a PostKnowledgeGuestSessionsBadRequest with default headers values
func NewPostKnowledgeGuestSessionsBadRequest() *PostKnowledgeGuestSessionsBadRequest {
	return &PostKnowledgeGuestSessionsBadRequest{}
}

/*PostKnowledgeGuestSessionsBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostKnowledgeGuestSessionsBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PostKnowledgeGuestSessionsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/guest/sessions][%d] postKnowledgeGuestSessionsBadRequest  %+v", 400, o.Payload)
}

func (o *PostKnowledgeGuestSessionsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeGuestSessionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeGuestSessionsUnauthorized creates a PostKnowledgeGuestSessionsUnauthorized with default headers values
func NewPostKnowledgeGuestSessionsUnauthorized() *PostKnowledgeGuestSessionsUnauthorized {
	return &PostKnowledgeGuestSessionsUnauthorized{}
}

/*PostKnowledgeGuestSessionsUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PostKnowledgeGuestSessionsUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PostKnowledgeGuestSessionsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/guest/sessions][%d] postKnowledgeGuestSessionsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostKnowledgeGuestSessionsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeGuestSessionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeGuestSessionsForbidden creates a PostKnowledgeGuestSessionsForbidden with default headers values
func NewPostKnowledgeGuestSessionsForbidden() *PostKnowledgeGuestSessionsForbidden {
	return &PostKnowledgeGuestSessionsForbidden{}
}

/*PostKnowledgeGuestSessionsForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PostKnowledgeGuestSessionsForbidden struct {
	Payload *models.ErrorBody
}

func (o *PostKnowledgeGuestSessionsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/guest/sessions][%d] postKnowledgeGuestSessionsForbidden  %+v", 403, o.Payload)
}

func (o *PostKnowledgeGuestSessionsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeGuestSessionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeGuestSessionsNotFound creates a PostKnowledgeGuestSessionsNotFound with default headers values
func NewPostKnowledgeGuestSessionsNotFound() *PostKnowledgeGuestSessionsNotFound {
	return &PostKnowledgeGuestSessionsNotFound{}
}

/*PostKnowledgeGuestSessionsNotFound handles this case with default header values.

The requested resource was not found.
*/
type PostKnowledgeGuestSessionsNotFound struct {
	Payload *models.ErrorBody
}

func (o *PostKnowledgeGuestSessionsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/guest/sessions][%d] postKnowledgeGuestSessionsNotFound  %+v", 404, o.Payload)
}

func (o *PostKnowledgeGuestSessionsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeGuestSessionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeGuestSessionsRequestTimeout creates a PostKnowledgeGuestSessionsRequestTimeout with default headers values
func NewPostKnowledgeGuestSessionsRequestTimeout() *PostKnowledgeGuestSessionsRequestTimeout {
	return &PostKnowledgeGuestSessionsRequestTimeout{}
}

/*PostKnowledgeGuestSessionsRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostKnowledgeGuestSessionsRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostKnowledgeGuestSessionsRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/guest/sessions][%d] postKnowledgeGuestSessionsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostKnowledgeGuestSessionsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeGuestSessionsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeGuestSessionsRequestEntityTooLarge creates a PostKnowledgeGuestSessionsRequestEntityTooLarge with default headers values
func NewPostKnowledgeGuestSessionsRequestEntityTooLarge() *PostKnowledgeGuestSessionsRequestEntityTooLarge {
	return &PostKnowledgeGuestSessionsRequestEntityTooLarge{}
}

/*PostKnowledgeGuestSessionsRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PostKnowledgeGuestSessionsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PostKnowledgeGuestSessionsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/guest/sessions][%d] postKnowledgeGuestSessionsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostKnowledgeGuestSessionsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeGuestSessionsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeGuestSessionsUnsupportedMediaType creates a PostKnowledgeGuestSessionsUnsupportedMediaType with default headers values
func NewPostKnowledgeGuestSessionsUnsupportedMediaType() *PostKnowledgeGuestSessionsUnsupportedMediaType {
	return &PostKnowledgeGuestSessionsUnsupportedMediaType{}
}

/*PostKnowledgeGuestSessionsUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostKnowledgeGuestSessionsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PostKnowledgeGuestSessionsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/guest/sessions][%d] postKnowledgeGuestSessionsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostKnowledgeGuestSessionsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeGuestSessionsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeGuestSessionsTooManyRequests creates a PostKnowledgeGuestSessionsTooManyRequests with default headers values
func NewPostKnowledgeGuestSessionsTooManyRequests() *PostKnowledgeGuestSessionsTooManyRequests {
	return &PostKnowledgeGuestSessionsTooManyRequests{}
}

/*PostKnowledgeGuestSessionsTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostKnowledgeGuestSessionsTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PostKnowledgeGuestSessionsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/guest/sessions][%d] postKnowledgeGuestSessionsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostKnowledgeGuestSessionsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeGuestSessionsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeGuestSessionsInternalServerError creates a PostKnowledgeGuestSessionsInternalServerError with default headers values
func NewPostKnowledgeGuestSessionsInternalServerError() *PostKnowledgeGuestSessionsInternalServerError {
	return &PostKnowledgeGuestSessionsInternalServerError{}
}

/*PostKnowledgeGuestSessionsInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostKnowledgeGuestSessionsInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PostKnowledgeGuestSessionsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/guest/sessions][%d] postKnowledgeGuestSessionsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostKnowledgeGuestSessionsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeGuestSessionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeGuestSessionsServiceUnavailable creates a PostKnowledgeGuestSessionsServiceUnavailable with default headers values
func NewPostKnowledgeGuestSessionsServiceUnavailable() *PostKnowledgeGuestSessionsServiceUnavailable {
	return &PostKnowledgeGuestSessionsServiceUnavailable{}
}

/*PostKnowledgeGuestSessionsServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostKnowledgeGuestSessionsServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PostKnowledgeGuestSessionsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/guest/sessions][%d] postKnowledgeGuestSessionsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostKnowledgeGuestSessionsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeGuestSessionsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeGuestSessionsGatewayTimeout creates a PostKnowledgeGuestSessionsGatewayTimeout with default headers values
func NewPostKnowledgeGuestSessionsGatewayTimeout() *PostKnowledgeGuestSessionsGatewayTimeout {
	return &PostKnowledgeGuestSessionsGatewayTimeout{}
}

/*PostKnowledgeGuestSessionsGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PostKnowledgeGuestSessionsGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostKnowledgeGuestSessionsGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/guest/sessions][%d] postKnowledgeGuestSessionsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostKnowledgeGuestSessionsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeGuestSessionsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
