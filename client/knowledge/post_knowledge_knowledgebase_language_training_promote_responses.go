// Code generated by go-swagger; DO NOT EDIT.

package knowledge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostKnowledgeKnowledgebaseLanguageTrainingPromoteReader is a Reader for the PostKnowledgeKnowledgebaseLanguageTrainingPromote structure.
type PostKnowledgeKnowledgebaseLanguageTrainingPromoteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostKnowledgeKnowledgebaseLanguageTrainingPromoteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostKnowledgeKnowledgebaseLanguageTrainingPromoteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostKnowledgeKnowledgebaseLanguageTrainingPromoteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostKnowledgeKnowledgebaseLanguageTrainingPromoteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostKnowledgeKnowledgebaseLanguageTrainingPromoteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostKnowledgeKnowledgebaseLanguageTrainingPromoteRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostKnowledgeKnowledgebaseLanguageTrainingPromoteRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostKnowledgeKnowledgebaseLanguageTrainingPromoteUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostKnowledgeKnowledgebaseLanguageTrainingPromoteTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostKnowledgeKnowledgebaseLanguageTrainingPromoteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostKnowledgeKnowledgebaseLanguageTrainingPromoteServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostKnowledgeKnowledgebaseLanguageTrainingPromoteGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostKnowledgeKnowledgebaseLanguageTrainingPromoteOK creates a PostKnowledgeKnowledgebaseLanguageTrainingPromoteOK with default headers values
func NewPostKnowledgeKnowledgebaseLanguageTrainingPromoteOK() *PostKnowledgeKnowledgebaseLanguageTrainingPromoteOK {
	return &PostKnowledgeKnowledgebaseLanguageTrainingPromoteOK{}
}

/*PostKnowledgeKnowledgebaseLanguageTrainingPromoteOK handles this case with default header values.

successful operation
*/
type PostKnowledgeKnowledgebaseLanguageTrainingPromoteOK struct {
	Payload *models.KnowledgeTraining
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings/{trainingId}/promote][%d] postKnowledgeKnowledgebaseLanguageTrainingPromoteOK  %+v", 200, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteOK) GetPayload() *models.KnowledgeTraining {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KnowledgeTraining)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseLanguageTrainingPromoteBadRequest creates a PostKnowledgeKnowledgebaseLanguageTrainingPromoteBadRequest with default headers values
func NewPostKnowledgeKnowledgebaseLanguageTrainingPromoteBadRequest() *PostKnowledgeKnowledgebaseLanguageTrainingPromoteBadRequest {
	return &PostKnowledgeKnowledgebaseLanguageTrainingPromoteBadRequest{}
}

/*PostKnowledgeKnowledgebaseLanguageTrainingPromoteBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostKnowledgeKnowledgebaseLanguageTrainingPromoteBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings/{trainingId}/promote][%d] postKnowledgeKnowledgebaseLanguageTrainingPromoteBadRequest  %+v", 400, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseLanguageTrainingPromoteUnauthorized creates a PostKnowledgeKnowledgebaseLanguageTrainingPromoteUnauthorized with default headers values
func NewPostKnowledgeKnowledgebaseLanguageTrainingPromoteUnauthorized() *PostKnowledgeKnowledgebaseLanguageTrainingPromoteUnauthorized {
	return &PostKnowledgeKnowledgebaseLanguageTrainingPromoteUnauthorized{}
}

/*PostKnowledgeKnowledgebaseLanguageTrainingPromoteUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PostKnowledgeKnowledgebaseLanguageTrainingPromoteUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings/{trainingId}/promote][%d] postKnowledgeKnowledgebaseLanguageTrainingPromoteUnauthorized  %+v", 401, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseLanguageTrainingPromoteForbidden creates a PostKnowledgeKnowledgebaseLanguageTrainingPromoteForbidden with default headers values
func NewPostKnowledgeKnowledgebaseLanguageTrainingPromoteForbidden() *PostKnowledgeKnowledgebaseLanguageTrainingPromoteForbidden {
	return &PostKnowledgeKnowledgebaseLanguageTrainingPromoteForbidden{}
}

/*PostKnowledgeKnowledgebaseLanguageTrainingPromoteForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PostKnowledgeKnowledgebaseLanguageTrainingPromoteForbidden struct {
	Payload *models.ErrorBody
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings/{trainingId}/promote][%d] postKnowledgeKnowledgebaseLanguageTrainingPromoteForbidden  %+v", 403, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseLanguageTrainingPromoteNotFound creates a PostKnowledgeKnowledgebaseLanguageTrainingPromoteNotFound with default headers values
func NewPostKnowledgeKnowledgebaseLanguageTrainingPromoteNotFound() *PostKnowledgeKnowledgebaseLanguageTrainingPromoteNotFound {
	return &PostKnowledgeKnowledgebaseLanguageTrainingPromoteNotFound{}
}

/*PostKnowledgeKnowledgebaseLanguageTrainingPromoteNotFound handles this case with default header values.

The requested resource was not found.
*/
type PostKnowledgeKnowledgebaseLanguageTrainingPromoteNotFound struct {
	Payload *models.ErrorBody
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings/{trainingId}/promote][%d] postKnowledgeKnowledgebaseLanguageTrainingPromoteNotFound  %+v", 404, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseLanguageTrainingPromoteRequestTimeout creates a PostKnowledgeKnowledgebaseLanguageTrainingPromoteRequestTimeout with default headers values
func NewPostKnowledgeKnowledgebaseLanguageTrainingPromoteRequestTimeout() *PostKnowledgeKnowledgebaseLanguageTrainingPromoteRequestTimeout {
	return &PostKnowledgeKnowledgebaseLanguageTrainingPromoteRequestTimeout{}
}

/*PostKnowledgeKnowledgebaseLanguageTrainingPromoteRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostKnowledgeKnowledgebaseLanguageTrainingPromoteRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings/{trainingId}/promote][%d] postKnowledgeKnowledgebaseLanguageTrainingPromoteRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseLanguageTrainingPromoteRequestEntityTooLarge creates a PostKnowledgeKnowledgebaseLanguageTrainingPromoteRequestEntityTooLarge with default headers values
func NewPostKnowledgeKnowledgebaseLanguageTrainingPromoteRequestEntityTooLarge() *PostKnowledgeKnowledgebaseLanguageTrainingPromoteRequestEntityTooLarge {
	return &PostKnowledgeKnowledgebaseLanguageTrainingPromoteRequestEntityTooLarge{}
}

/*PostKnowledgeKnowledgebaseLanguageTrainingPromoteRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type PostKnowledgeKnowledgebaseLanguageTrainingPromoteRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings/{trainingId}/promote][%d] postKnowledgeKnowledgebaseLanguageTrainingPromoteRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseLanguageTrainingPromoteUnsupportedMediaType creates a PostKnowledgeKnowledgebaseLanguageTrainingPromoteUnsupportedMediaType with default headers values
func NewPostKnowledgeKnowledgebaseLanguageTrainingPromoteUnsupportedMediaType() *PostKnowledgeKnowledgebaseLanguageTrainingPromoteUnsupportedMediaType {
	return &PostKnowledgeKnowledgebaseLanguageTrainingPromoteUnsupportedMediaType{}
}

/*PostKnowledgeKnowledgebaseLanguageTrainingPromoteUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostKnowledgeKnowledgebaseLanguageTrainingPromoteUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings/{trainingId}/promote][%d] postKnowledgeKnowledgebaseLanguageTrainingPromoteUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseLanguageTrainingPromoteTooManyRequests creates a PostKnowledgeKnowledgebaseLanguageTrainingPromoteTooManyRequests with default headers values
func NewPostKnowledgeKnowledgebaseLanguageTrainingPromoteTooManyRequests() *PostKnowledgeKnowledgebaseLanguageTrainingPromoteTooManyRequests {
	return &PostKnowledgeKnowledgebaseLanguageTrainingPromoteTooManyRequests{}
}

/*PostKnowledgeKnowledgebaseLanguageTrainingPromoteTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostKnowledgeKnowledgebaseLanguageTrainingPromoteTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings/{trainingId}/promote][%d] postKnowledgeKnowledgebaseLanguageTrainingPromoteTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseLanguageTrainingPromoteInternalServerError creates a PostKnowledgeKnowledgebaseLanguageTrainingPromoteInternalServerError with default headers values
func NewPostKnowledgeKnowledgebaseLanguageTrainingPromoteInternalServerError() *PostKnowledgeKnowledgebaseLanguageTrainingPromoteInternalServerError {
	return &PostKnowledgeKnowledgebaseLanguageTrainingPromoteInternalServerError{}
}

/*PostKnowledgeKnowledgebaseLanguageTrainingPromoteInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostKnowledgeKnowledgebaseLanguageTrainingPromoteInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings/{trainingId}/promote][%d] postKnowledgeKnowledgebaseLanguageTrainingPromoteInternalServerError  %+v", 500, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseLanguageTrainingPromoteServiceUnavailable creates a PostKnowledgeKnowledgebaseLanguageTrainingPromoteServiceUnavailable with default headers values
func NewPostKnowledgeKnowledgebaseLanguageTrainingPromoteServiceUnavailable() *PostKnowledgeKnowledgebaseLanguageTrainingPromoteServiceUnavailable {
	return &PostKnowledgeKnowledgebaseLanguageTrainingPromoteServiceUnavailable{}
}

/*PostKnowledgeKnowledgebaseLanguageTrainingPromoteServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostKnowledgeKnowledgebaseLanguageTrainingPromoteServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings/{trainingId}/promote][%d] postKnowledgeKnowledgebaseLanguageTrainingPromoteServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseLanguageTrainingPromoteGatewayTimeout creates a PostKnowledgeKnowledgebaseLanguageTrainingPromoteGatewayTimeout with default headers values
func NewPostKnowledgeKnowledgebaseLanguageTrainingPromoteGatewayTimeout() *PostKnowledgeKnowledgebaseLanguageTrainingPromoteGatewayTimeout {
	return &PostKnowledgeKnowledgebaseLanguageTrainingPromoteGatewayTimeout{}
}

/*PostKnowledgeKnowledgebaseLanguageTrainingPromoteGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PostKnowledgeKnowledgebaseLanguageTrainingPromoteGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings/{trainingId}/promote][%d] postKnowledgeKnowledgebaseLanguageTrainingPromoteGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingPromoteGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
