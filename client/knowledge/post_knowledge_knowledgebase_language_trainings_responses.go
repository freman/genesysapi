// Code generated by go-swagger; DO NOT EDIT.

package knowledge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostKnowledgeKnowledgebaseLanguageTrainingsReader is a Reader for the PostKnowledgeKnowledgebaseLanguageTrainings structure.
type PostKnowledgeKnowledgebaseLanguageTrainingsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostKnowledgeKnowledgebaseLanguageTrainingsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostKnowledgeKnowledgebaseLanguageTrainingsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostKnowledgeKnowledgebaseLanguageTrainingsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostKnowledgeKnowledgebaseLanguageTrainingsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostKnowledgeKnowledgebaseLanguageTrainingsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostKnowledgeKnowledgebaseLanguageTrainingsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostKnowledgeKnowledgebaseLanguageTrainingsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostKnowledgeKnowledgebaseLanguageTrainingsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostKnowledgeKnowledgebaseLanguageTrainingsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostKnowledgeKnowledgebaseLanguageTrainingsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostKnowledgeKnowledgebaseLanguageTrainingsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostKnowledgeKnowledgebaseLanguageTrainingsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostKnowledgeKnowledgebaseLanguageTrainingsOK creates a PostKnowledgeKnowledgebaseLanguageTrainingsOK with default headers values
func NewPostKnowledgeKnowledgebaseLanguageTrainingsOK() *PostKnowledgeKnowledgebaseLanguageTrainingsOK {
	return &PostKnowledgeKnowledgebaseLanguageTrainingsOK{}
}

/*
PostKnowledgeKnowledgebaseLanguageTrainingsOK describes a response with status code 200, with default header values.

successful operation
*/
type PostKnowledgeKnowledgebaseLanguageTrainingsOK struct {
	Payload *models.KnowledgeTraining
}

// IsSuccess returns true when this post knowledge knowledgebase language trainings o k response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post knowledge knowledgebase language trainings o k response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase language trainings o k response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post knowledge knowledgebase language trainings o k response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post knowledge knowledgebase language trainings o k response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingsOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings][%d] postKnowledgeKnowledgebaseLanguageTrainingsOK  %+v", 200, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingsOK) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings][%d] postKnowledgeKnowledgebaseLanguageTrainingsOK  %+v", 200, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingsOK) GetPayload() *models.KnowledgeTraining {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KnowledgeTraining)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseLanguageTrainingsBadRequest creates a PostKnowledgeKnowledgebaseLanguageTrainingsBadRequest with default headers values
func NewPostKnowledgeKnowledgebaseLanguageTrainingsBadRequest() *PostKnowledgeKnowledgebaseLanguageTrainingsBadRequest {
	return &PostKnowledgeKnowledgebaseLanguageTrainingsBadRequest{}
}

/*
PostKnowledgeKnowledgebaseLanguageTrainingsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostKnowledgeKnowledgebaseLanguageTrainingsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post knowledge knowledgebase language trainings bad request response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post knowledge knowledgebase language trainings bad request response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase language trainings bad request response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post knowledge knowledgebase language trainings bad request response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post knowledge knowledgebase language trainings bad request response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings][%d] postKnowledgeKnowledgebaseLanguageTrainingsBadRequest  %+v", 400, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingsBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings][%d] postKnowledgeKnowledgebaseLanguageTrainingsBadRequest  %+v", 400, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseLanguageTrainingsUnauthorized creates a PostKnowledgeKnowledgebaseLanguageTrainingsUnauthorized with default headers values
func NewPostKnowledgeKnowledgebaseLanguageTrainingsUnauthorized() *PostKnowledgeKnowledgebaseLanguageTrainingsUnauthorized {
	return &PostKnowledgeKnowledgebaseLanguageTrainingsUnauthorized{}
}

/*
PostKnowledgeKnowledgebaseLanguageTrainingsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostKnowledgeKnowledgebaseLanguageTrainingsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post knowledge knowledgebase language trainings unauthorized response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post knowledge knowledgebase language trainings unauthorized response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase language trainings unauthorized response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post knowledge knowledgebase language trainings unauthorized response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post knowledge knowledgebase language trainings unauthorized response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings][%d] postKnowledgeKnowledgebaseLanguageTrainingsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingsUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings][%d] postKnowledgeKnowledgebaseLanguageTrainingsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseLanguageTrainingsForbidden creates a PostKnowledgeKnowledgebaseLanguageTrainingsForbidden with default headers values
func NewPostKnowledgeKnowledgebaseLanguageTrainingsForbidden() *PostKnowledgeKnowledgebaseLanguageTrainingsForbidden {
	return &PostKnowledgeKnowledgebaseLanguageTrainingsForbidden{}
}

/*
PostKnowledgeKnowledgebaseLanguageTrainingsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostKnowledgeKnowledgebaseLanguageTrainingsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post knowledge knowledgebase language trainings forbidden response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post knowledge knowledgebase language trainings forbidden response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase language trainings forbidden response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post knowledge knowledgebase language trainings forbidden response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post knowledge knowledgebase language trainings forbidden response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings][%d] postKnowledgeKnowledgebaseLanguageTrainingsForbidden  %+v", 403, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingsForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings][%d] postKnowledgeKnowledgebaseLanguageTrainingsForbidden  %+v", 403, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseLanguageTrainingsNotFound creates a PostKnowledgeKnowledgebaseLanguageTrainingsNotFound with default headers values
func NewPostKnowledgeKnowledgebaseLanguageTrainingsNotFound() *PostKnowledgeKnowledgebaseLanguageTrainingsNotFound {
	return &PostKnowledgeKnowledgebaseLanguageTrainingsNotFound{}
}

/*
PostKnowledgeKnowledgebaseLanguageTrainingsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostKnowledgeKnowledgebaseLanguageTrainingsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post knowledge knowledgebase language trainings not found response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post knowledge knowledgebase language trainings not found response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase language trainings not found response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post knowledge knowledgebase language trainings not found response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post knowledge knowledgebase language trainings not found response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings][%d] postKnowledgeKnowledgebaseLanguageTrainingsNotFound  %+v", 404, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingsNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings][%d] postKnowledgeKnowledgebaseLanguageTrainingsNotFound  %+v", 404, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseLanguageTrainingsRequestTimeout creates a PostKnowledgeKnowledgebaseLanguageTrainingsRequestTimeout with default headers values
func NewPostKnowledgeKnowledgebaseLanguageTrainingsRequestTimeout() *PostKnowledgeKnowledgebaseLanguageTrainingsRequestTimeout {
	return &PostKnowledgeKnowledgebaseLanguageTrainingsRequestTimeout{}
}

/*
PostKnowledgeKnowledgebaseLanguageTrainingsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostKnowledgeKnowledgebaseLanguageTrainingsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post knowledge knowledgebase language trainings request timeout response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post knowledge knowledgebase language trainings request timeout response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase language trainings request timeout response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post knowledge knowledgebase language trainings request timeout response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post knowledge knowledgebase language trainings request timeout response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingsRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings][%d] postKnowledgeKnowledgebaseLanguageTrainingsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingsRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings][%d] postKnowledgeKnowledgebaseLanguageTrainingsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseLanguageTrainingsRequestEntityTooLarge creates a PostKnowledgeKnowledgebaseLanguageTrainingsRequestEntityTooLarge with default headers values
func NewPostKnowledgeKnowledgebaseLanguageTrainingsRequestEntityTooLarge() *PostKnowledgeKnowledgebaseLanguageTrainingsRequestEntityTooLarge {
	return &PostKnowledgeKnowledgebaseLanguageTrainingsRequestEntityTooLarge{}
}

/*
PostKnowledgeKnowledgebaseLanguageTrainingsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PostKnowledgeKnowledgebaseLanguageTrainingsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post knowledge knowledgebase language trainings request entity too large response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post knowledge knowledgebase language trainings request entity too large response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase language trainings request entity too large response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post knowledge knowledgebase language trainings request entity too large response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post knowledge knowledgebase language trainings request entity too large response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings][%d] postKnowledgeKnowledgebaseLanguageTrainingsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings][%d] postKnowledgeKnowledgebaseLanguageTrainingsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseLanguageTrainingsUnsupportedMediaType creates a PostKnowledgeKnowledgebaseLanguageTrainingsUnsupportedMediaType with default headers values
func NewPostKnowledgeKnowledgebaseLanguageTrainingsUnsupportedMediaType() *PostKnowledgeKnowledgebaseLanguageTrainingsUnsupportedMediaType {
	return &PostKnowledgeKnowledgebaseLanguageTrainingsUnsupportedMediaType{}
}

/*
PostKnowledgeKnowledgebaseLanguageTrainingsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostKnowledgeKnowledgebaseLanguageTrainingsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post knowledge knowledgebase language trainings unsupported media type response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post knowledge knowledgebase language trainings unsupported media type response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase language trainings unsupported media type response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post knowledge knowledgebase language trainings unsupported media type response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post knowledge knowledgebase language trainings unsupported media type response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings][%d] postKnowledgeKnowledgebaseLanguageTrainingsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings][%d] postKnowledgeKnowledgebaseLanguageTrainingsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseLanguageTrainingsTooManyRequests creates a PostKnowledgeKnowledgebaseLanguageTrainingsTooManyRequests with default headers values
func NewPostKnowledgeKnowledgebaseLanguageTrainingsTooManyRequests() *PostKnowledgeKnowledgebaseLanguageTrainingsTooManyRequests {
	return &PostKnowledgeKnowledgebaseLanguageTrainingsTooManyRequests{}
}

/*
PostKnowledgeKnowledgebaseLanguageTrainingsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostKnowledgeKnowledgebaseLanguageTrainingsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post knowledge knowledgebase language trainings too many requests response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post knowledge knowledgebase language trainings too many requests response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase language trainings too many requests response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post knowledge knowledgebase language trainings too many requests response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post knowledge knowledgebase language trainings too many requests response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings][%d] postKnowledgeKnowledgebaseLanguageTrainingsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingsTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings][%d] postKnowledgeKnowledgebaseLanguageTrainingsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseLanguageTrainingsInternalServerError creates a PostKnowledgeKnowledgebaseLanguageTrainingsInternalServerError with default headers values
func NewPostKnowledgeKnowledgebaseLanguageTrainingsInternalServerError() *PostKnowledgeKnowledgebaseLanguageTrainingsInternalServerError {
	return &PostKnowledgeKnowledgebaseLanguageTrainingsInternalServerError{}
}

/*
PostKnowledgeKnowledgebaseLanguageTrainingsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostKnowledgeKnowledgebaseLanguageTrainingsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post knowledge knowledgebase language trainings internal server error response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post knowledge knowledgebase language trainings internal server error response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase language trainings internal server error response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post knowledge knowledgebase language trainings internal server error response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post knowledge knowledgebase language trainings internal server error response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings][%d] postKnowledgeKnowledgebaseLanguageTrainingsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingsInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings][%d] postKnowledgeKnowledgebaseLanguageTrainingsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseLanguageTrainingsServiceUnavailable creates a PostKnowledgeKnowledgebaseLanguageTrainingsServiceUnavailable with default headers values
func NewPostKnowledgeKnowledgebaseLanguageTrainingsServiceUnavailable() *PostKnowledgeKnowledgebaseLanguageTrainingsServiceUnavailable {
	return &PostKnowledgeKnowledgebaseLanguageTrainingsServiceUnavailable{}
}

/*
PostKnowledgeKnowledgebaseLanguageTrainingsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostKnowledgeKnowledgebaseLanguageTrainingsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post knowledge knowledgebase language trainings service unavailable response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post knowledge knowledgebase language trainings service unavailable response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase language trainings service unavailable response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post knowledge knowledgebase language trainings service unavailable response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post knowledge knowledgebase language trainings service unavailable response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings][%d] postKnowledgeKnowledgebaseLanguageTrainingsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingsServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings][%d] postKnowledgeKnowledgebaseLanguageTrainingsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseLanguageTrainingsGatewayTimeout creates a PostKnowledgeKnowledgebaseLanguageTrainingsGatewayTimeout with default headers values
func NewPostKnowledgeKnowledgebaseLanguageTrainingsGatewayTimeout() *PostKnowledgeKnowledgebaseLanguageTrainingsGatewayTimeout {
	return &PostKnowledgeKnowledgebaseLanguageTrainingsGatewayTimeout{}
}

/*
PostKnowledgeKnowledgebaseLanguageTrainingsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostKnowledgeKnowledgebaseLanguageTrainingsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post knowledge knowledgebase language trainings gateway timeout response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post knowledge knowledgebase language trainings gateway timeout response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase language trainings gateway timeout response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post knowledge knowledgebase language trainings gateway timeout response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post knowledge knowledgebase language trainings gateway timeout response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseLanguageTrainingsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingsGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings][%d] postKnowledgeKnowledgebaseLanguageTrainingsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingsGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings][%d] postKnowledgeKnowledgebaseLanguageTrainingsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseLanguageTrainingsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
