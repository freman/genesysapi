// Code generated by go-swagger; DO NOT EDIT.

package knowledge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// NewPostKnowledgeKnowledgebaseLabelsParams creates a new PostKnowledgeKnowledgebaseLabelsParams object
// with the default values initialized.
func NewPostKnowledgeKnowledgebaseLabelsParams() *PostKnowledgeKnowledgebaseLabelsParams {
	var ()
	return &PostKnowledgeKnowledgebaseLabelsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostKnowledgeKnowledgebaseLabelsParamsWithTimeout creates a new PostKnowledgeKnowledgebaseLabelsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostKnowledgeKnowledgebaseLabelsParamsWithTimeout(timeout time.Duration) *PostKnowledgeKnowledgebaseLabelsParams {
	var ()
	return &PostKnowledgeKnowledgebaseLabelsParams{

		timeout: timeout,
	}
}

// NewPostKnowledgeKnowledgebaseLabelsParamsWithContext creates a new PostKnowledgeKnowledgebaseLabelsParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostKnowledgeKnowledgebaseLabelsParamsWithContext(ctx context.Context) *PostKnowledgeKnowledgebaseLabelsParams {
	var ()
	return &PostKnowledgeKnowledgebaseLabelsParams{

		Context: ctx,
	}
}

// NewPostKnowledgeKnowledgebaseLabelsParamsWithHTTPClient creates a new PostKnowledgeKnowledgebaseLabelsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostKnowledgeKnowledgebaseLabelsParamsWithHTTPClient(client *http.Client) *PostKnowledgeKnowledgebaseLabelsParams {
	var ()
	return &PostKnowledgeKnowledgebaseLabelsParams{
		HTTPClient: client,
	}
}

/*PostKnowledgeKnowledgebaseLabelsParams contains all the parameters to send to the API endpoint
for the post knowledge knowledgebase labels operation typically these are written to a http.Request
*/
type PostKnowledgeKnowledgebaseLabelsParams struct {

	/*Body*/
	Body *models.LabelCreateRequest
	/*KnowledgeBaseID
	  Knowledge base ID

	*/
	KnowledgeBaseID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post knowledge knowledgebase labels params
func (o *PostKnowledgeKnowledgebaseLabelsParams) WithTimeout(timeout time.Duration) *PostKnowledgeKnowledgebaseLabelsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post knowledge knowledgebase labels params
func (o *PostKnowledgeKnowledgebaseLabelsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post knowledge knowledgebase labels params
func (o *PostKnowledgeKnowledgebaseLabelsParams) WithContext(ctx context.Context) *PostKnowledgeKnowledgebaseLabelsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post knowledge knowledgebase labels params
func (o *PostKnowledgeKnowledgebaseLabelsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post knowledge knowledgebase labels params
func (o *PostKnowledgeKnowledgebaseLabelsParams) WithHTTPClient(client *http.Client) *PostKnowledgeKnowledgebaseLabelsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post knowledge knowledgebase labels params
func (o *PostKnowledgeKnowledgebaseLabelsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the post knowledge knowledgebase labels params
func (o *PostKnowledgeKnowledgebaseLabelsParams) WithBody(body *models.LabelCreateRequest) *PostKnowledgeKnowledgebaseLabelsParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the post knowledge knowledgebase labels params
func (o *PostKnowledgeKnowledgebaseLabelsParams) SetBody(body *models.LabelCreateRequest) {
	o.Body = body
}

// WithKnowledgeBaseID adds the knowledgeBaseID to the post knowledge knowledgebase labels params
func (o *PostKnowledgeKnowledgebaseLabelsParams) WithKnowledgeBaseID(knowledgeBaseID string) *PostKnowledgeKnowledgebaseLabelsParams {
	o.SetKnowledgeBaseID(knowledgeBaseID)
	return o
}

// SetKnowledgeBaseID adds the knowledgeBaseId to the post knowledge knowledgebase labels params
func (o *PostKnowledgeKnowledgebaseLabelsParams) SetKnowledgeBaseID(knowledgeBaseID string) {
	o.KnowledgeBaseID = knowledgeBaseID
}

// WriteToRequest writes these params to a swagger request
func (o *PostKnowledgeKnowledgebaseLabelsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param knowledgeBaseId
	if err := r.SetPathParam("knowledgeBaseId", o.KnowledgeBaseID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
