// Code generated by go-swagger; DO NOT EDIT.

package knowledge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetKnowledgeKnowledgebaseReader is a Reader for the GetKnowledgeKnowledgebase structure.
type GetKnowledgeKnowledgebaseReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetKnowledgeKnowledgebaseReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetKnowledgeKnowledgebaseOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetKnowledgeKnowledgebaseBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetKnowledgeKnowledgebaseUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetKnowledgeKnowledgebaseForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetKnowledgeKnowledgebaseNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetKnowledgeKnowledgebaseRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetKnowledgeKnowledgebaseRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetKnowledgeKnowledgebaseUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetKnowledgeKnowledgebaseTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetKnowledgeKnowledgebaseInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetKnowledgeKnowledgebaseServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetKnowledgeKnowledgebaseGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetKnowledgeKnowledgebaseOK creates a GetKnowledgeKnowledgebaseOK with default headers values
func NewGetKnowledgeKnowledgebaseOK() *GetKnowledgeKnowledgebaseOK {
	return &GetKnowledgeKnowledgebaseOK{}
}

/*
GetKnowledgeKnowledgebaseOK describes a response with status code 200, with default header values.

successful operation
*/
type GetKnowledgeKnowledgebaseOK struct {
	Payload *models.KnowledgeBase
}

// IsSuccess returns true when this get knowledge knowledgebase o k response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get knowledge knowledgebase o k response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase o k response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get knowledge knowledgebase o k response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase o k response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetKnowledgeKnowledgebaseOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}][%d] getKnowledgeKnowledgebaseOK  %+v", 200, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseOK) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}][%d] getKnowledgeKnowledgebaseOK  %+v", 200, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseOK) GetPayload() *models.KnowledgeBase {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KnowledgeBase)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseBadRequest creates a GetKnowledgeKnowledgebaseBadRequest with default headers values
func NewGetKnowledgeKnowledgebaseBadRequest() *GetKnowledgeKnowledgebaseBadRequest {
	return &GetKnowledgeKnowledgebaseBadRequest{}
}

/*
GetKnowledgeKnowledgebaseBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetKnowledgeKnowledgebaseBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase bad request response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase bad request response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase bad request response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase bad request response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase bad request response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetKnowledgeKnowledgebaseBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}][%d] getKnowledgeKnowledgebaseBadRequest  %+v", 400, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}][%d] getKnowledgeKnowledgebaseBadRequest  %+v", 400, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseUnauthorized creates a GetKnowledgeKnowledgebaseUnauthorized with default headers values
func NewGetKnowledgeKnowledgebaseUnauthorized() *GetKnowledgeKnowledgebaseUnauthorized {
	return &GetKnowledgeKnowledgebaseUnauthorized{}
}

/*
GetKnowledgeKnowledgebaseUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetKnowledgeKnowledgebaseUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase unauthorized response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase unauthorized response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase unauthorized response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase unauthorized response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase unauthorized response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetKnowledgeKnowledgebaseUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}][%d] getKnowledgeKnowledgebaseUnauthorized  %+v", 401, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}][%d] getKnowledgeKnowledgebaseUnauthorized  %+v", 401, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseForbidden creates a GetKnowledgeKnowledgebaseForbidden with default headers values
func NewGetKnowledgeKnowledgebaseForbidden() *GetKnowledgeKnowledgebaseForbidden {
	return &GetKnowledgeKnowledgebaseForbidden{}
}

/*
GetKnowledgeKnowledgebaseForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetKnowledgeKnowledgebaseForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase forbidden response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase forbidden response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase forbidden response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase forbidden response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase forbidden response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetKnowledgeKnowledgebaseForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}][%d] getKnowledgeKnowledgebaseForbidden  %+v", 403, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}][%d] getKnowledgeKnowledgebaseForbidden  %+v", 403, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseNotFound creates a GetKnowledgeKnowledgebaseNotFound with default headers values
func NewGetKnowledgeKnowledgebaseNotFound() *GetKnowledgeKnowledgebaseNotFound {
	return &GetKnowledgeKnowledgebaseNotFound{}
}

/*
GetKnowledgeKnowledgebaseNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetKnowledgeKnowledgebaseNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase not found response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase not found response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase not found response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase not found response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase not found response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetKnowledgeKnowledgebaseNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}][%d] getKnowledgeKnowledgebaseNotFound  %+v", 404, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}][%d] getKnowledgeKnowledgebaseNotFound  %+v", 404, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseRequestTimeout creates a GetKnowledgeKnowledgebaseRequestTimeout with default headers values
func NewGetKnowledgeKnowledgebaseRequestTimeout() *GetKnowledgeKnowledgebaseRequestTimeout {
	return &GetKnowledgeKnowledgebaseRequestTimeout{}
}

/*
GetKnowledgeKnowledgebaseRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetKnowledgeKnowledgebaseRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase request timeout response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase request timeout response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase request timeout response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase request timeout response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase request timeout response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetKnowledgeKnowledgebaseRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}][%d] getKnowledgeKnowledgebaseRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}][%d] getKnowledgeKnowledgebaseRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseRequestEntityTooLarge creates a GetKnowledgeKnowledgebaseRequestEntityTooLarge with default headers values
func NewGetKnowledgeKnowledgebaseRequestEntityTooLarge() *GetKnowledgeKnowledgebaseRequestEntityTooLarge {
	return &GetKnowledgeKnowledgebaseRequestEntityTooLarge{}
}

/*
GetKnowledgeKnowledgebaseRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetKnowledgeKnowledgebaseRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase request entity too large response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase request entity too large response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase request entity too large response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase request entity too large response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase request entity too large response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetKnowledgeKnowledgebaseRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}][%d] getKnowledgeKnowledgebaseRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}][%d] getKnowledgeKnowledgebaseRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseUnsupportedMediaType creates a GetKnowledgeKnowledgebaseUnsupportedMediaType with default headers values
func NewGetKnowledgeKnowledgebaseUnsupportedMediaType() *GetKnowledgeKnowledgebaseUnsupportedMediaType {
	return &GetKnowledgeKnowledgebaseUnsupportedMediaType{}
}

/*
GetKnowledgeKnowledgebaseUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetKnowledgeKnowledgebaseUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase unsupported media type response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase unsupported media type response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase unsupported media type response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase unsupported media type response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase unsupported media type response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetKnowledgeKnowledgebaseUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}][%d] getKnowledgeKnowledgebaseUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}][%d] getKnowledgeKnowledgebaseUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseTooManyRequests creates a GetKnowledgeKnowledgebaseTooManyRequests with default headers values
func NewGetKnowledgeKnowledgebaseTooManyRequests() *GetKnowledgeKnowledgebaseTooManyRequests {
	return &GetKnowledgeKnowledgebaseTooManyRequests{}
}

/*
GetKnowledgeKnowledgebaseTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetKnowledgeKnowledgebaseTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase too many requests response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase too many requests response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase too many requests response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase too many requests response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase too many requests response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetKnowledgeKnowledgebaseTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}][%d] getKnowledgeKnowledgebaseTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}][%d] getKnowledgeKnowledgebaseTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseInternalServerError creates a GetKnowledgeKnowledgebaseInternalServerError with default headers values
func NewGetKnowledgeKnowledgebaseInternalServerError() *GetKnowledgeKnowledgebaseInternalServerError {
	return &GetKnowledgeKnowledgebaseInternalServerError{}
}

/*
GetKnowledgeKnowledgebaseInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetKnowledgeKnowledgebaseInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase internal server error response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase internal server error response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase internal server error response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get knowledge knowledgebase internal server error response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get knowledge knowledgebase internal server error response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetKnowledgeKnowledgebaseInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}][%d] getKnowledgeKnowledgebaseInternalServerError  %+v", 500, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}][%d] getKnowledgeKnowledgebaseInternalServerError  %+v", 500, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseServiceUnavailable creates a GetKnowledgeKnowledgebaseServiceUnavailable with default headers values
func NewGetKnowledgeKnowledgebaseServiceUnavailable() *GetKnowledgeKnowledgebaseServiceUnavailable {
	return &GetKnowledgeKnowledgebaseServiceUnavailable{}
}

/*
GetKnowledgeKnowledgebaseServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetKnowledgeKnowledgebaseServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase service unavailable response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase service unavailable response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase service unavailable response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get knowledge knowledgebase service unavailable response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get knowledge knowledgebase service unavailable response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetKnowledgeKnowledgebaseServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}][%d] getKnowledgeKnowledgebaseServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}][%d] getKnowledgeKnowledgebaseServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseGatewayTimeout creates a GetKnowledgeKnowledgebaseGatewayTimeout with default headers values
func NewGetKnowledgeKnowledgebaseGatewayTimeout() *GetKnowledgeKnowledgebaseGatewayTimeout {
	return &GetKnowledgeKnowledgebaseGatewayTimeout{}
}

/*
GetKnowledgeKnowledgebaseGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetKnowledgeKnowledgebaseGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase gateway timeout response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase gateway timeout response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase gateway timeout response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get knowledge knowledgebase gateway timeout response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get knowledge knowledgebase gateway timeout response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetKnowledgeKnowledgebaseGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}][%d] getKnowledgeKnowledgebaseGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}][%d] getKnowledgeKnowledgebaseGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
