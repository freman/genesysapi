// Code generated by go-swagger; DO NOT EDIT.

package knowledge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetKnowledgeKnowledgebaseDocumentVersionsReader is a Reader for the GetKnowledgeKnowledgebaseDocumentVersions structure.
type GetKnowledgeKnowledgebaseDocumentVersionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetKnowledgeKnowledgebaseDocumentVersionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetKnowledgeKnowledgebaseDocumentVersionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetKnowledgeKnowledgebaseDocumentVersionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetKnowledgeKnowledgebaseDocumentVersionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetKnowledgeKnowledgebaseDocumentVersionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetKnowledgeKnowledgebaseDocumentVersionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetKnowledgeKnowledgebaseDocumentVersionsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetKnowledgeKnowledgebaseDocumentVersionsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetKnowledgeKnowledgebaseDocumentVersionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetKnowledgeKnowledgebaseDocumentVersionsOK creates a GetKnowledgeKnowledgebaseDocumentVersionsOK with default headers values
func NewGetKnowledgeKnowledgebaseDocumentVersionsOK() *GetKnowledgeKnowledgebaseDocumentVersionsOK {
	return &GetKnowledgeKnowledgebaseDocumentVersionsOK{}
}

/*
GetKnowledgeKnowledgebaseDocumentVersionsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetKnowledgeKnowledgebaseDocumentVersionsOK struct {
	Payload *models.KnowledgeDocumentVersionListing
}

// IsSuccess returns true when this get knowledge knowledgebase document versions o k response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get knowledge knowledgebase document versions o k response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase document versions o k response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get knowledge knowledgebase document versions o k response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase document versions o k response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseDocumentVersionsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] getKnowledgeKnowledgebaseDocumentVersionsOK  %+v", 200, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsOK) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] getKnowledgeKnowledgebaseDocumentVersionsOK  %+v", 200, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsOK) GetPayload() *models.KnowledgeDocumentVersionListing {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KnowledgeDocumentVersionListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseDocumentVersionsBadRequest creates a GetKnowledgeKnowledgebaseDocumentVersionsBadRequest with default headers values
func NewGetKnowledgeKnowledgebaseDocumentVersionsBadRequest() *GetKnowledgeKnowledgebaseDocumentVersionsBadRequest {
	return &GetKnowledgeKnowledgebaseDocumentVersionsBadRequest{}
}

/*
GetKnowledgeKnowledgebaseDocumentVersionsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetKnowledgeKnowledgebaseDocumentVersionsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase document versions bad request response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase document versions bad request response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase document versions bad request response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase document versions bad request response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase document versions bad request response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseDocumentVersionsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] getKnowledgeKnowledgebaseDocumentVersionsBadRequest  %+v", 400, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] getKnowledgeKnowledgebaseDocumentVersionsBadRequest  %+v", 400, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseDocumentVersionsUnauthorized creates a GetKnowledgeKnowledgebaseDocumentVersionsUnauthorized with default headers values
func NewGetKnowledgeKnowledgebaseDocumentVersionsUnauthorized() *GetKnowledgeKnowledgebaseDocumentVersionsUnauthorized {
	return &GetKnowledgeKnowledgebaseDocumentVersionsUnauthorized{}
}

/*
GetKnowledgeKnowledgebaseDocumentVersionsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetKnowledgeKnowledgebaseDocumentVersionsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase document versions unauthorized response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase document versions unauthorized response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase document versions unauthorized response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase document versions unauthorized response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase document versions unauthorized response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseDocumentVersionsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] getKnowledgeKnowledgebaseDocumentVersionsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] getKnowledgeKnowledgebaseDocumentVersionsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseDocumentVersionsForbidden creates a GetKnowledgeKnowledgebaseDocumentVersionsForbidden with default headers values
func NewGetKnowledgeKnowledgebaseDocumentVersionsForbidden() *GetKnowledgeKnowledgebaseDocumentVersionsForbidden {
	return &GetKnowledgeKnowledgebaseDocumentVersionsForbidden{}
}

/*
GetKnowledgeKnowledgebaseDocumentVersionsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetKnowledgeKnowledgebaseDocumentVersionsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase document versions forbidden response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase document versions forbidden response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase document versions forbidden response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase document versions forbidden response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase document versions forbidden response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseDocumentVersionsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] getKnowledgeKnowledgebaseDocumentVersionsForbidden  %+v", 403, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] getKnowledgeKnowledgebaseDocumentVersionsForbidden  %+v", 403, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseDocumentVersionsNotFound creates a GetKnowledgeKnowledgebaseDocumentVersionsNotFound with default headers values
func NewGetKnowledgeKnowledgebaseDocumentVersionsNotFound() *GetKnowledgeKnowledgebaseDocumentVersionsNotFound {
	return &GetKnowledgeKnowledgebaseDocumentVersionsNotFound{}
}

/*
GetKnowledgeKnowledgebaseDocumentVersionsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetKnowledgeKnowledgebaseDocumentVersionsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase document versions not found response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase document versions not found response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase document versions not found response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase document versions not found response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase document versions not found response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseDocumentVersionsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] getKnowledgeKnowledgebaseDocumentVersionsNotFound  %+v", 404, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] getKnowledgeKnowledgebaseDocumentVersionsNotFound  %+v", 404, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseDocumentVersionsRequestTimeout creates a GetKnowledgeKnowledgebaseDocumentVersionsRequestTimeout with default headers values
func NewGetKnowledgeKnowledgebaseDocumentVersionsRequestTimeout() *GetKnowledgeKnowledgebaseDocumentVersionsRequestTimeout {
	return &GetKnowledgeKnowledgebaseDocumentVersionsRequestTimeout{}
}

/*
GetKnowledgeKnowledgebaseDocumentVersionsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetKnowledgeKnowledgebaseDocumentVersionsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase document versions request timeout response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase document versions request timeout response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase document versions request timeout response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase document versions request timeout response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase document versions request timeout response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseDocumentVersionsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] getKnowledgeKnowledgebaseDocumentVersionsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] getKnowledgeKnowledgebaseDocumentVersionsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge creates a GetKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge with default headers values
func NewGetKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge() *GetKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge {
	return &GetKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge{}
}

/*
GetKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase document versions request entity too large response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase document versions request entity too large response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase document versions request entity too large response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase document versions request entity too large response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase document versions request entity too large response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] getKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] getKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType creates a GetKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType with default headers values
func NewGetKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType() *GetKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType {
	return &GetKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType{}
}

/*
GetKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase document versions unsupported media type response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase document versions unsupported media type response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase document versions unsupported media type response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase document versions unsupported media type response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase document versions unsupported media type response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] getKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] getKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseDocumentVersionsTooManyRequests creates a GetKnowledgeKnowledgebaseDocumentVersionsTooManyRequests with default headers values
func NewGetKnowledgeKnowledgebaseDocumentVersionsTooManyRequests() *GetKnowledgeKnowledgebaseDocumentVersionsTooManyRequests {
	return &GetKnowledgeKnowledgebaseDocumentVersionsTooManyRequests{}
}

/*
GetKnowledgeKnowledgebaseDocumentVersionsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetKnowledgeKnowledgebaseDocumentVersionsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase document versions too many requests response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase document versions too many requests response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase document versions too many requests response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase document versions too many requests response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase document versions too many requests response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseDocumentVersionsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] getKnowledgeKnowledgebaseDocumentVersionsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] getKnowledgeKnowledgebaseDocumentVersionsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseDocumentVersionsInternalServerError creates a GetKnowledgeKnowledgebaseDocumentVersionsInternalServerError with default headers values
func NewGetKnowledgeKnowledgebaseDocumentVersionsInternalServerError() *GetKnowledgeKnowledgebaseDocumentVersionsInternalServerError {
	return &GetKnowledgeKnowledgebaseDocumentVersionsInternalServerError{}
}

/*
GetKnowledgeKnowledgebaseDocumentVersionsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetKnowledgeKnowledgebaseDocumentVersionsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase document versions internal server error response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase document versions internal server error response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase document versions internal server error response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get knowledge knowledgebase document versions internal server error response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get knowledge knowledgebase document versions internal server error response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseDocumentVersionsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] getKnowledgeKnowledgebaseDocumentVersionsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] getKnowledgeKnowledgebaseDocumentVersionsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable creates a GetKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable with default headers values
func NewGetKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable() *GetKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable {
	return &GetKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable{}
}

/*
GetKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase document versions service unavailable response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase document versions service unavailable response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase document versions service unavailable response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get knowledge knowledgebase document versions service unavailable response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get knowledge knowledgebase document versions service unavailable response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] getKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] getKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout creates a GetKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout with default headers values
func NewGetKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout() *GetKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout {
	return &GetKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout{}
}

/*
GetKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase document versions gateway timeout response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase document versions gateway timeout response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase document versions gateway timeout response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get knowledge knowledgebase document versions gateway timeout response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get knowledge knowledgebase document versions gateway timeout response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] getKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] getKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
