// Code generated by go-swagger; DO NOT EDIT.

package knowledge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetKnowledgeKnowledgebaseDocumentVersionsReader is a Reader for the GetKnowledgeKnowledgebaseDocumentVersions structure.
type GetKnowledgeKnowledgebaseDocumentVersionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetKnowledgeKnowledgebaseDocumentVersionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetKnowledgeKnowledgebaseDocumentVersionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetKnowledgeKnowledgebaseDocumentVersionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetKnowledgeKnowledgebaseDocumentVersionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetKnowledgeKnowledgebaseDocumentVersionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetKnowledgeKnowledgebaseDocumentVersionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetKnowledgeKnowledgebaseDocumentVersionsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetKnowledgeKnowledgebaseDocumentVersionsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetKnowledgeKnowledgebaseDocumentVersionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetKnowledgeKnowledgebaseDocumentVersionsOK creates a GetKnowledgeKnowledgebaseDocumentVersionsOK with default headers values
func NewGetKnowledgeKnowledgebaseDocumentVersionsOK() *GetKnowledgeKnowledgebaseDocumentVersionsOK {
	return &GetKnowledgeKnowledgebaseDocumentVersionsOK{}
}

/*GetKnowledgeKnowledgebaseDocumentVersionsOK handles this case with default header values.

successful operation
*/
type GetKnowledgeKnowledgebaseDocumentVersionsOK struct {
	Payload *models.KnowledgeDocumentVersionListing
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] getKnowledgeKnowledgebaseDocumentVersionsOK  %+v", 200, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsOK) GetPayload() *models.KnowledgeDocumentVersionListing {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KnowledgeDocumentVersionListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseDocumentVersionsBadRequest creates a GetKnowledgeKnowledgebaseDocumentVersionsBadRequest with default headers values
func NewGetKnowledgeKnowledgebaseDocumentVersionsBadRequest() *GetKnowledgeKnowledgebaseDocumentVersionsBadRequest {
	return &GetKnowledgeKnowledgebaseDocumentVersionsBadRequest{}
}

/*GetKnowledgeKnowledgebaseDocumentVersionsBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetKnowledgeKnowledgebaseDocumentVersionsBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] getKnowledgeKnowledgebaseDocumentVersionsBadRequest  %+v", 400, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseDocumentVersionsUnauthorized creates a GetKnowledgeKnowledgebaseDocumentVersionsUnauthorized with default headers values
func NewGetKnowledgeKnowledgebaseDocumentVersionsUnauthorized() *GetKnowledgeKnowledgebaseDocumentVersionsUnauthorized {
	return &GetKnowledgeKnowledgebaseDocumentVersionsUnauthorized{}
}

/*GetKnowledgeKnowledgebaseDocumentVersionsUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetKnowledgeKnowledgebaseDocumentVersionsUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] getKnowledgeKnowledgebaseDocumentVersionsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseDocumentVersionsForbidden creates a GetKnowledgeKnowledgebaseDocumentVersionsForbidden with default headers values
func NewGetKnowledgeKnowledgebaseDocumentVersionsForbidden() *GetKnowledgeKnowledgebaseDocumentVersionsForbidden {
	return &GetKnowledgeKnowledgebaseDocumentVersionsForbidden{}
}

/*GetKnowledgeKnowledgebaseDocumentVersionsForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetKnowledgeKnowledgebaseDocumentVersionsForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] getKnowledgeKnowledgebaseDocumentVersionsForbidden  %+v", 403, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseDocumentVersionsNotFound creates a GetKnowledgeKnowledgebaseDocumentVersionsNotFound with default headers values
func NewGetKnowledgeKnowledgebaseDocumentVersionsNotFound() *GetKnowledgeKnowledgebaseDocumentVersionsNotFound {
	return &GetKnowledgeKnowledgebaseDocumentVersionsNotFound{}
}

/*GetKnowledgeKnowledgebaseDocumentVersionsNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetKnowledgeKnowledgebaseDocumentVersionsNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] getKnowledgeKnowledgebaseDocumentVersionsNotFound  %+v", 404, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseDocumentVersionsRequestTimeout creates a GetKnowledgeKnowledgebaseDocumentVersionsRequestTimeout with default headers values
func NewGetKnowledgeKnowledgebaseDocumentVersionsRequestTimeout() *GetKnowledgeKnowledgebaseDocumentVersionsRequestTimeout {
	return &GetKnowledgeKnowledgebaseDocumentVersionsRequestTimeout{}
}

/*GetKnowledgeKnowledgebaseDocumentVersionsRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetKnowledgeKnowledgebaseDocumentVersionsRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] getKnowledgeKnowledgebaseDocumentVersionsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge creates a GetKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge with default headers values
func NewGetKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge() *GetKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge {
	return &GetKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge{}
}

/*GetKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] getKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType creates a GetKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType with default headers values
func NewGetKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType() *GetKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType {
	return &GetKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType{}
}

/*GetKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] getKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseDocumentVersionsTooManyRequests creates a GetKnowledgeKnowledgebaseDocumentVersionsTooManyRequests with default headers values
func NewGetKnowledgeKnowledgebaseDocumentVersionsTooManyRequests() *GetKnowledgeKnowledgebaseDocumentVersionsTooManyRequests {
	return &GetKnowledgeKnowledgebaseDocumentVersionsTooManyRequests{}
}

/*GetKnowledgeKnowledgebaseDocumentVersionsTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetKnowledgeKnowledgebaseDocumentVersionsTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] getKnowledgeKnowledgebaseDocumentVersionsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseDocumentVersionsInternalServerError creates a GetKnowledgeKnowledgebaseDocumentVersionsInternalServerError with default headers values
func NewGetKnowledgeKnowledgebaseDocumentVersionsInternalServerError() *GetKnowledgeKnowledgebaseDocumentVersionsInternalServerError {
	return &GetKnowledgeKnowledgebaseDocumentVersionsInternalServerError{}
}

/*GetKnowledgeKnowledgebaseDocumentVersionsInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetKnowledgeKnowledgebaseDocumentVersionsInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] getKnowledgeKnowledgebaseDocumentVersionsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable creates a GetKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable with default headers values
func NewGetKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable() *GetKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable {
	return &GetKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable{}
}

/*GetKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] getKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout creates a GetKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout with default headers values
func NewGetKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout() *GetKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout {
	return &GetKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout{}
}

/*GetKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions][%d] getKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
