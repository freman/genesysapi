// Code generated by go-swagger; DO NOT EDIT.

package knowledge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetKnowledgeKnowledgebaseLanguageDocumentReader is a Reader for the GetKnowledgeKnowledgebaseLanguageDocument structure.
type GetKnowledgeKnowledgebaseLanguageDocumentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetKnowledgeKnowledgebaseLanguageDocumentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetKnowledgeKnowledgebaseLanguageDocumentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetKnowledgeKnowledgebaseLanguageDocumentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetKnowledgeKnowledgebaseLanguageDocumentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetKnowledgeKnowledgebaseLanguageDocumentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetKnowledgeKnowledgebaseLanguageDocumentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetKnowledgeKnowledgebaseLanguageDocumentRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetKnowledgeKnowledgebaseLanguageDocumentRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetKnowledgeKnowledgebaseLanguageDocumentUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetKnowledgeKnowledgebaseLanguageDocumentTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetKnowledgeKnowledgebaseLanguageDocumentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetKnowledgeKnowledgebaseLanguageDocumentServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetKnowledgeKnowledgebaseLanguageDocumentGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetKnowledgeKnowledgebaseLanguageDocumentOK creates a GetKnowledgeKnowledgebaseLanguageDocumentOK with default headers values
func NewGetKnowledgeKnowledgebaseLanguageDocumentOK() *GetKnowledgeKnowledgebaseLanguageDocumentOK {
	return &GetKnowledgeKnowledgebaseLanguageDocumentOK{}
}

/*
GetKnowledgeKnowledgebaseLanguageDocumentOK describes a response with status code 200, with default header values.

successful operation
*/
type GetKnowledgeKnowledgebaseLanguageDocumentOK struct {
	Payload *models.KnowledgeDocument
}

// IsSuccess returns true when this get knowledge knowledgebase language document o k response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get knowledge knowledgebase language document o k response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase language document o k response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get knowledge knowledgebase language document o k response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase language document o k response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseLanguageDocumentOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/{documentId}][%d] getKnowledgeKnowledgebaseLanguageDocumentOK  %+v", 200, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentOK) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/{documentId}][%d] getKnowledgeKnowledgebaseLanguageDocumentOK  %+v", 200, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentOK) GetPayload() *models.KnowledgeDocument {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KnowledgeDocument)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseLanguageDocumentBadRequest creates a GetKnowledgeKnowledgebaseLanguageDocumentBadRequest with default headers values
func NewGetKnowledgeKnowledgebaseLanguageDocumentBadRequest() *GetKnowledgeKnowledgebaseLanguageDocumentBadRequest {
	return &GetKnowledgeKnowledgebaseLanguageDocumentBadRequest{}
}

/*
GetKnowledgeKnowledgebaseLanguageDocumentBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetKnowledgeKnowledgebaseLanguageDocumentBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase language document bad request response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase language document bad request response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase language document bad request response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase language document bad request response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase language document bad request response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseLanguageDocumentBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/{documentId}][%d] getKnowledgeKnowledgebaseLanguageDocumentBadRequest  %+v", 400, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/{documentId}][%d] getKnowledgeKnowledgebaseLanguageDocumentBadRequest  %+v", 400, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseLanguageDocumentUnauthorized creates a GetKnowledgeKnowledgebaseLanguageDocumentUnauthorized with default headers values
func NewGetKnowledgeKnowledgebaseLanguageDocumentUnauthorized() *GetKnowledgeKnowledgebaseLanguageDocumentUnauthorized {
	return &GetKnowledgeKnowledgebaseLanguageDocumentUnauthorized{}
}

/*
GetKnowledgeKnowledgebaseLanguageDocumentUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetKnowledgeKnowledgebaseLanguageDocumentUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase language document unauthorized response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase language document unauthorized response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase language document unauthorized response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase language document unauthorized response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase language document unauthorized response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseLanguageDocumentUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/{documentId}][%d] getKnowledgeKnowledgebaseLanguageDocumentUnauthorized  %+v", 401, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/{documentId}][%d] getKnowledgeKnowledgebaseLanguageDocumentUnauthorized  %+v", 401, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseLanguageDocumentForbidden creates a GetKnowledgeKnowledgebaseLanguageDocumentForbidden with default headers values
func NewGetKnowledgeKnowledgebaseLanguageDocumentForbidden() *GetKnowledgeKnowledgebaseLanguageDocumentForbidden {
	return &GetKnowledgeKnowledgebaseLanguageDocumentForbidden{}
}

/*
GetKnowledgeKnowledgebaseLanguageDocumentForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetKnowledgeKnowledgebaseLanguageDocumentForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase language document forbidden response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase language document forbidden response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase language document forbidden response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase language document forbidden response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase language document forbidden response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseLanguageDocumentForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/{documentId}][%d] getKnowledgeKnowledgebaseLanguageDocumentForbidden  %+v", 403, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/{documentId}][%d] getKnowledgeKnowledgebaseLanguageDocumentForbidden  %+v", 403, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseLanguageDocumentNotFound creates a GetKnowledgeKnowledgebaseLanguageDocumentNotFound with default headers values
func NewGetKnowledgeKnowledgebaseLanguageDocumentNotFound() *GetKnowledgeKnowledgebaseLanguageDocumentNotFound {
	return &GetKnowledgeKnowledgebaseLanguageDocumentNotFound{}
}

/*
GetKnowledgeKnowledgebaseLanguageDocumentNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetKnowledgeKnowledgebaseLanguageDocumentNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase language document not found response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase language document not found response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase language document not found response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase language document not found response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase language document not found response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseLanguageDocumentNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/{documentId}][%d] getKnowledgeKnowledgebaseLanguageDocumentNotFound  %+v", 404, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/{documentId}][%d] getKnowledgeKnowledgebaseLanguageDocumentNotFound  %+v", 404, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseLanguageDocumentRequestTimeout creates a GetKnowledgeKnowledgebaseLanguageDocumentRequestTimeout with default headers values
func NewGetKnowledgeKnowledgebaseLanguageDocumentRequestTimeout() *GetKnowledgeKnowledgebaseLanguageDocumentRequestTimeout {
	return &GetKnowledgeKnowledgebaseLanguageDocumentRequestTimeout{}
}

/*
GetKnowledgeKnowledgebaseLanguageDocumentRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetKnowledgeKnowledgebaseLanguageDocumentRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase language document request timeout response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase language document request timeout response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase language document request timeout response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase language document request timeout response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase language document request timeout response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseLanguageDocumentRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/{documentId}][%d] getKnowledgeKnowledgebaseLanguageDocumentRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/{documentId}][%d] getKnowledgeKnowledgebaseLanguageDocumentRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseLanguageDocumentRequestEntityTooLarge creates a GetKnowledgeKnowledgebaseLanguageDocumentRequestEntityTooLarge with default headers values
func NewGetKnowledgeKnowledgebaseLanguageDocumentRequestEntityTooLarge() *GetKnowledgeKnowledgebaseLanguageDocumentRequestEntityTooLarge {
	return &GetKnowledgeKnowledgebaseLanguageDocumentRequestEntityTooLarge{}
}

/*
GetKnowledgeKnowledgebaseLanguageDocumentRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetKnowledgeKnowledgebaseLanguageDocumentRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase language document request entity too large response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase language document request entity too large response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase language document request entity too large response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase language document request entity too large response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase language document request entity too large response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseLanguageDocumentRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/{documentId}][%d] getKnowledgeKnowledgebaseLanguageDocumentRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/{documentId}][%d] getKnowledgeKnowledgebaseLanguageDocumentRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseLanguageDocumentUnsupportedMediaType creates a GetKnowledgeKnowledgebaseLanguageDocumentUnsupportedMediaType with default headers values
func NewGetKnowledgeKnowledgebaseLanguageDocumentUnsupportedMediaType() *GetKnowledgeKnowledgebaseLanguageDocumentUnsupportedMediaType {
	return &GetKnowledgeKnowledgebaseLanguageDocumentUnsupportedMediaType{}
}

/*
GetKnowledgeKnowledgebaseLanguageDocumentUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetKnowledgeKnowledgebaseLanguageDocumentUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase language document unsupported media type response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase language document unsupported media type response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase language document unsupported media type response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase language document unsupported media type response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase language document unsupported media type response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseLanguageDocumentUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/{documentId}][%d] getKnowledgeKnowledgebaseLanguageDocumentUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/{documentId}][%d] getKnowledgeKnowledgebaseLanguageDocumentUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseLanguageDocumentTooManyRequests creates a GetKnowledgeKnowledgebaseLanguageDocumentTooManyRequests with default headers values
func NewGetKnowledgeKnowledgebaseLanguageDocumentTooManyRequests() *GetKnowledgeKnowledgebaseLanguageDocumentTooManyRequests {
	return &GetKnowledgeKnowledgebaseLanguageDocumentTooManyRequests{}
}

/*
GetKnowledgeKnowledgebaseLanguageDocumentTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetKnowledgeKnowledgebaseLanguageDocumentTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase language document too many requests response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase language document too many requests response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase language document too many requests response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase language document too many requests response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase language document too many requests response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseLanguageDocumentTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/{documentId}][%d] getKnowledgeKnowledgebaseLanguageDocumentTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/{documentId}][%d] getKnowledgeKnowledgebaseLanguageDocumentTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseLanguageDocumentInternalServerError creates a GetKnowledgeKnowledgebaseLanguageDocumentInternalServerError with default headers values
func NewGetKnowledgeKnowledgebaseLanguageDocumentInternalServerError() *GetKnowledgeKnowledgebaseLanguageDocumentInternalServerError {
	return &GetKnowledgeKnowledgebaseLanguageDocumentInternalServerError{}
}

/*
GetKnowledgeKnowledgebaseLanguageDocumentInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetKnowledgeKnowledgebaseLanguageDocumentInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase language document internal server error response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase language document internal server error response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase language document internal server error response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get knowledge knowledgebase language document internal server error response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get knowledge knowledgebase language document internal server error response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseLanguageDocumentInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/{documentId}][%d] getKnowledgeKnowledgebaseLanguageDocumentInternalServerError  %+v", 500, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/{documentId}][%d] getKnowledgeKnowledgebaseLanguageDocumentInternalServerError  %+v", 500, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseLanguageDocumentServiceUnavailable creates a GetKnowledgeKnowledgebaseLanguageDocumentServiceUnavailable with default headers values
func NewGetKnowledgeKnowledgebaseLanguageDocumentServiceUnavailable() *GetKnowledgeKnowledgebaseLanguageDocumentServiceUnavailable {
	return &GetKnowledgeKnowledgebaseLanguageDocumentServiceUnavailable{}
}

/*
GetKnowledgeKnowledgebaseLanguageDocumentServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetKnowledgeKnowledgebaseLanguageDocumentServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase language document service unavailable response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase language document service unavailable response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase language document service unavailable response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get knowledge knowledgebase language document service unavailable response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get knowledge knowledgebase language document service unavailable response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseLanguageDocumentServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/{documentId}][%d] getKnowledgeKnowledgebaseLanguageDocumentServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/{documentId}][%d] getKnowledgeKnowledgebaseLanguageDocumentServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseLanguageDocumentGatewayTimeout creates a GetKnowledgeKnowledgebaseLanguageDocumentGatewayTimeout with default headers values
func NewGetKnowledgeKnowledgebaseLanguageDocumentGatewayTimeout() *GetKnowledgeKnowledgebaseLanguageDocumentGatewayTimeout {
	return &GetKnowledgeKnowledgebaseLanguageDocumentGatewayTimeout{}
}

/*
GetKnowledgeKnowledgebaseLanguageDocumentGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetKnowledgeKnowledgebaseLanguageDocumentGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase language document gateway timeout response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase language document gateway timeout response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase language document gateway timeout response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get knowledge knowledgebase language document gateway timeout response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get knowledge knowledgebase language document gateway timeout response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseLanguageDocumentGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/{documentId}][%d] getKnowledgeKnowledgebaseLanguageDocumentGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/{documentId}][%d] getKnowledgeKnowledgebaseLanguageDocumentGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
