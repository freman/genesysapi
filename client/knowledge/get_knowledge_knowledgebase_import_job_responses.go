// Code generated by go-swagger; DO NOT EDIT.

package knowledge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetKnowledgeKnowledgebaseImportJobReader is a Reader for the GetKnowledgeKnowledgebaseImportJob structure.
type GetKnowledgeKnowledgebaseImportJobReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetKnowledgeKnowledgebaseImportJobReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetKnowledgeKnowledgebaseImportJobOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewGetKnowledgeKnowledgebaseImportJobAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetKnowledgeKnowledgebaseImportJobBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetKnowledgeKnowledgebaseImportJobUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetKnowledgeKnowledgebaseImportJobForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetKnowledgeKnowledgebaseImportJobNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetKnowledgeKnowledgebaseImportJobRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetKnowledgeKnowledgebaseImportJobRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetKnowledgeKnowledgebaseImportJobUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetKnowledgeKnowledgebaseImportJobTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetKnowledgeKnowledgebaseImportJobInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetKnowledgeKnowledgebaseImportJobServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetKnowledgeKnowledgebaseImportJobGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetKnowledgeKnowledgebaseImportJobOK creates a GetKnowledgeKnowledgebaseImportJobOK with default headers values
func NewGetKnowledgeKnowledgebaseImportJobOK() *GetKnowledgeKnowledgebaseImportJobOK {
	return &GetKnowledgeKnowledgebaseImportJobOK{}
}

/*GetKnowledgeKnowledgebaseImportJobOK handles this case with default header values.

successful operation
*/
type GetKnowledgeKnowledgebaseImportJobOK struct {
	Payload *models.KnowledgeImportJobResponse
}

func (o *GetKnowledgeKnowledgebaseImportJobOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/import/jobs/{importJobId}][%d] getKnowledgeKnowledgebaseImportJobOK  %+v", 200, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseImportJobOK) GetPayload() *models.KnowledgeImportJobResponse {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseImportJobOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KnowledgeImportJobResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseImportJobAccepted creates a GetKnowledgeKnowledgebaseImportJobAccepted with default headers values
func NewGetKnowledgeKnowledgebaseImportJobAccepted() *GetKnowledgeKnowledgebaseImportJobAccepted {
	return &GetKnowledgeKnowledgebaseImportJobAccepted{}
}

/*GetKnowledgeKnowledgebaseImportJobAccepted handles this case with default header values.

Import job in progress
*/
type GetKnowledgeKnowledgebaseImportJobAccepted struct {
	Payload *models.KnowledgeImportJobResponse
}

func (o *GetKnowledgeKnowledgebaseImportJobAccepted) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/import/jobs/{importJobId}][%d] getKnowledgeKnowledgebaseImportJobAccepted  %+v", 202, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseImportJobAccepted) GetPayload() *models.KnowledgeImportJobResponse {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseImportJobAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KnowledgeImportJobResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseImportJobBadRequest creates a GetKnowledgeKnowledgebaseImportJobBadRequest with default headers values
func NewGetKnowledgeKnowledgebaseImportJobBadRequest() *GetKnowledgeKnowledgebaseImportJobBadRequest {
	return &GetKnowledgeKnowledgebaseImportJobBadRequest{}
}

/*GetKnowledgeKnowledgebaseImportJobBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetKnowledgeKnowledgebaseImportJobBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetKnowledgeKnowledgebaseImportJobBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/import/jobs/{importJobId}][%d] getKnowledgeKnowledgebaseImportJobBadRequest  %+v", 400, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseImportJobBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseImportJobBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseImportJobUnauthorized creates a GetKnowledgeKnowledgebaseImportJobUnauthorized with default headers values
func NewGetKnowledgeKnowledgebaseImportJobUnauthorized() *GetKnowledgeKnowledgebaseImportJobUnauthorized {
	return &GetKnowledgeKnowledgebaseImportJobUnauthorized{}
}

/*GetKnowledgeKnowledgebaseImportJobUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetKnowledgeKnowledgebaseImportJobUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetKnowledgeKnowledgebaseImportJobUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/import/jobs/{importJobId}][%d] getKnowledgeKnowledgebaseImportJobUnauthorized  %+v", 401, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseImportJobUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseImportJobUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseImportJobForbidden creates a GetKnowledgeKnowledgebaseImportJobForbidden with default headers values
func NewGetKnowledgeKnowledgebaseImportJobForbidden() *GetKnowledgeKnowledgebaseImportJobForbidden {
	return &GetKnowledgeKnowledgebaseImportJobForbidden{}
}

/*GetKnowledgeKnowledgebaseImportJobForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetKnowledgeKnowledgebaseImportJobForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetKnowledgeKnowledgebaseImportJobForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/import/jobs/{importJobId}][%d] getKnowledgeKnowledgebaseImportJobForbidden  %+v", 403, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseImportJobForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseImportJobForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseImportJobNotFound creates a GetKnowledgeKnowledgebaseImportJobNotFound with default headers values
func NewGetKnowledgeKnowledgebaseImportJobNotFound() *GetKnowledgeKnowledgebaseImportJobNotFound {
	return &GetKnowledgeKnowledgebaseImportJobNotFound{}
}

/*GetKnowledgeKnowledgebaseImportJobNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetKnowledgeKnowledgebaseImportJobNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetKnowledgeKnowledgebaseImportJobNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/import/jobs/{importJobId}][%d] getKnowledgeKnowledgebaseImportJobNotFound  %+v", 404, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseImportJobNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseImportJobNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseImportJobRequestTimeout creates a GetKnowledgeKnowledgebaseImportJobRequestTimeout with default headers values
func NewGetKnowledgeKnowledgebaseImportJobRequestTimeout() *GetKnowledgeKnowledgebaseImportJobRequestTimeout {
	return &GetKnowledgeKnowledgebaseImportJobRequestTimeout{}
}

/*GetKnowledgeKnowledgebaseImportJobRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetKnowledgeKnowledgebaseImportJobRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetKnowledgeKnowledgebaseImportJobRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/import/jobs/{importJobId}][%d] getKnowledgeKnowledgebaseImportJobRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseImportJobRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseImportJobRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseImportJobRequestEntityTooLarge creates a GetKnowledgeKnowledgebaseImportJobRequestEntityTooLarge with default headers values
func NewGetKnowledgeKnowledgebaseImportJobRequestEntityTooLarge() *GetKnowledgeKnowledgebaseImportJobRequestEntityTooLarge {
	return &GetKnowledgeKnowledgebaseImportJobRequestEntityTooLarge{}
}

/*GetKnowledgeKnowledgebaseImportJobRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetKnowledgeKnowledgebaseImportJobRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetKnowledgeKnowledgebaseImportJobRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/import/jobs/{importJobId}][%d] getKnowledgeKnowledgebaseImportJobRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseImportJobRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseImportJobRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseImportJobUnsupportedMediaType creates a GetKnowledgeKnowledgebaseImportJobUnsupportedMediaType with default headers values
func NewGetKnowledgeKnowledgebaseImportJobUnsupportedMediaType() *GetKnowledgeKnowledgebaseImportJobUnsupportedMediaType {
	return &GetKnowledgeKnowledgebaseImportJobUnsupportedMediaType{}
}

/*GetKnowledgeKnowledgebaseImportJobUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetKnowledgeKnowledgebaseImportJobUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetKnowledgeKnowledgebaseImportJobUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/import/jobs/{importJobId}][%d] getKnowledgeKnowledgebaseImportJobUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseImportJobUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseImportJobUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseImportJobTooManyRequests creates a GetKnowledgeKnowledgebaseImportJobTooManyRequests with default headers values
func NewGetKnowledgeKnowledgebaseImportJobTooManyRequests() *GetKnowledgeKnowledgebaseImportJobTooManyRequests {
	return &GetKnowledgeKnowledgebaseImportJobTooManyRequests{}
}

/*GetKnowledgeKnowledgebaseImportJobTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetKnowledgeKnowledgebaseImportJobTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetKnowledgeKnowledgebaseImportJobTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/import/jobs/{importJobId}][%d] getKnowledgeKnowledgebaseImportJobTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseImportJobTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseImportJobTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseImportJobInternalServerError creates a GetKnowledgeKnowledgebaseImportJobInternalServerError with default headers values
func NewGetKnowledgeKnowledgebaseImportJobInternalServerError() *GetKnowledgeKnowledgebaseImportJobInternalServerError {
	return &GetKnowledgeKnowledgebaseImportJobInternalServerError{}
}

/*GetKnowledgeKnowledgebaseImportJobInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetKnowledgeKnowledgebaseImportJobInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetKnowledgeKnowledgebaseImportJobInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/import/jobs/{importJobId}][%d] getKnowledgeKnowledgebaseImportJobInternalServerError  %+v", 500, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseImportJobInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseImportJobInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseImportJobServiceUnavailable creates a GetKnowledgeKnowledgebaseImportJobServiceUnavailable with default headers values
func NewGetKnowledgeKnowledgebaseImportJobServiceUnavailable() *GetKnowledgeKnowledgebaseImportJobServiceUnavailable {
	return &GetKnowledgeKnowledgebaseImportJobServiceUnavailable{}
}

/*GetKnowledgeKnowledgebaseImportJobServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetKnowledgeKnowledgebaseImportJobServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetKnowledgeKnowledgebaseImportJobServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/import/jobs/{importJobId}][%d] getKnowledgeKnowledgebaseImportJobServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseImportJobServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseImportJobServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseImportJobGatewayTimeout creates a GetKnowledgeKnowledgebaseImportJobGatewayTimeout with default headers values
func NewGetKnowledgeKnowledgebaseImportJobGatewayTimeout() *GetKnowledgeKnowledgebaseImportJobGatewayTimeout {
	return &GetKnowledgeKnowledgebaseImportJobGatewayTimeout{}
}

/*GetKnowledgeKnowledgebaseImportJobGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetKnowledgeKnowledgebaseImportJobGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetKnowledgeKnowledgebaseImportJobGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/import/jobs/{importJobId}][%d] getKnowledgeKnowledgebaseImportJobGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseImportJobGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseImportJobGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
