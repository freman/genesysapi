// Code generated by go-swagger; DO NOT EDIT.

package knowledge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetKnowledgeGuestSessionDocumentReader is a Reader for the GetKnowledgeGuestSessionDocument structure.
type GetKnowledgeGuestSessionDocumentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetKnowledgeGuestSessionDocumentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetKnowledgeGuestSessionDocumentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetKnowledgeGuestSessionDocumentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetKnowledgeGuestSessionDocumentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetKnowledgeGuestSessionDocumentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetKnowledgeGuestSessionDocumentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetKnowledgeGuestSessionDocumentRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetKnowledgeGuestSessionDocumentRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetKnowledgeGuestSessionDocumentUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetKnowledgeGuestSessionDocumentTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetKnowledgeGuestSessionDocumentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetKnowledgeGuestSessionDocumentServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetKnowledgeGuestSessionDocumentGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetKnowledgeGuestSessionDocumentOK creates a GetKnowledgeGuestSessionDocumentOK with default headers values
func NewGetKnowledgeGuestSessionDocumentOK() *GetKnowledgeGuestSessionDocumentOK {
	return &GetKnowledgeGuestSessionDocumentOK{}
}

/*GetKnowledgeGuestSessionDocumentOK handles this case with default header values.

successful operation
*/
type GetKnowledgeGuestSessionDocumentOK struct {
	Payload *models.KnowledgeGuestDocument
}

func (o *GetKnowledgeGuestSessionDocumentOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/guest/sessions/{sessionId}/documents/{documentId}][%d] getKnowledgeGuestSessionDocumentOK  %+v", 200, o.Payload)
}

func (o *GetKnowledgeGuestSessionDocumentOK) GetPayload() *models.KnowledgeGuestDocument {
	return o.Payload
}

func (o *GetKnowledgeGuestSessionDocumentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KnowledgeGuestDocument)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeGuestSessionDocumentBadRequest creates a GetKnowledgeGuestSessionDocumentBadRequest with default headers values
func NewGetKnowledgeGuestSessionDocumentBadRequest() *GetKnowledgeGuestSessionDocumentBadRequest {
	return &GetKnowledgeGuestSessionDocumentBadRequest{}
}

/*GetKnowledgeGuestSessionDocumentBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetKnowledgeGuestSessionDocumentBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetKnowledgeGuestSessionDocumentBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/guest/sessions/{sessionId}/documents/{documentId}][%d] getKnowledgeGuestSessionDocumentBadRequest  %+v", 400, o.Payload)
}

func (o *GetKnowledgeGuestSessionDocumentBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeGuestSessionDocumentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeGuestSessionDocumentUnauthorized creates a GetKnowledgeGuestSessionDocumentUnauthorized with default headers values
func NewGetKnowledgeGuestSessionDocumentUnauthorized() *GetKnowledgeGuestSessionDocumentUnauthorized {
	return &GetKnowledgeGuestSessionDocumentUnauthorized{}
}

/*GetKnowledgeGuestSessionDocumentUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetKnowledgeGuestSessionDocumentUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetKnowledgeGuestSessionDocumentUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/guest/sessions/{sessionId}/documents/{documentId}][%d] getKnowledgeGuestSessionDocumentUnauthorized  %+v", 401, o.Payload)
}

func (o *GetKnowledgeGuestSessionDocumentUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeGuestSessionDocumentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeGuestSessionDocumentForbidden creates a GetKnowledgeGuestSessionDocumentForbidden with default headers values
func NewGetKnowledgeGuestSessionDocumentForbidden() *GetKnowledgeGuestSessionDocumentForbidden {
	return &GetKnowledgeGuestSessionDocumentForbidden{}
}

/*GetKnowledgeGuestSessionDocumentForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetKnowledgeGuestSessionDocumentForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetKnowledgeGuestSessionDocumentForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/guest/sessions/{sessionId}/documents/{documentId}][%d] getKnowledgeGuestSessionDocumentForbidden  %+v", 403, o.Payload)
}

func (o *GetKnowledgeGuestSessionDocumentForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeGuestSessionDocumentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeGuestSessionDocumentNotFound creates a GetKnowledgeGuestSessionDocumentNotFound with default headers values
func NewGetKnowledgeGuestSessionDocumentNotFound() *GetKnowledgeGuestSessionDocumentNotFound {
	return &GetKnowledgeGuestSessionDocumentNotFound{}
}

/*GetKnowledgeGuestSessionDocumentNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetKnowledgeGuestSessionDocumentNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetKnowledgeGuestSessionDocumentNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/guest/sessions/{sessionId}/documents/{documentId}][%d] getKnowledgeGuestSessionDocumentNotFound  %+v", 404, o.Payload)
}

func (o *GetKnowledgeGuestSessionDocumentNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeGuestSessionDocumentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeGuestSessionDocumentRequestTimeout creates a GetKnowledgeGuestSessionDocumentRequestTimeout with default headers values
func NewGetKnowledgeGuestSessionDocumentRequestTimeout() *GetKnowledgeGuestSessionDocumentRequestTimeout {
	return &GetKnowledgeGuestSessionDocumentRequestTimeout{}
}

/*GetKnowledgeGuestSessionDocumentRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetKnowledgeGuestSessionDocumentRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetKnowledgeGuestSessionDocumentRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/guest/sessions/{sessionId}/documents/{documentId}][%d] getKnowledgeGuestSessionDocumentRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetKnowledgeGuestSessionDocumentRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeGuestSessionDocumentRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeGuestSessionDocumentRequestEntityTooLarge creates a GetKnowledgeGuestSessionDocumentRequestEntityTooLarge with default headers values
func NewGetKnowledgeGuestSessionDocumentRequestEntityTooLarge() *GetKnowledgeGuestSessionDocumentRequestEntityTooLarge {
	return &GetKnowledgeGuestSessionDocumentRequestEntityTooLarge{}
}

/*GetKnowledgeGuestSessionDocumentRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetKnowledgeGuestSessionDocumentRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetKnowledgeGuestSessionDocumentRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/guest/sessions/{sessionId}/documents/{documentId}][%d] getKnowledgeGuestSessionDocumentRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetKnowledgeGuestSessionDocumentRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeGuestSessionDocumentRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeGuestSessionDocumentUnsupportedMediaType creates a GetKnowledgeGuestSessionDocumentUnsupportedMediaType with default headers values
func NewGetKnowledgeGuestSessionDocumentUnsupportedMediaType() *GetKnowledgeGuestSessionDocumentUnsupportedMediaType {
	return &GetKnowledgeGuestSessionDocumentUnsupportedMediaType{}
}

/*GetKnowledgeGuestSessionDocumentUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetKnowledgeGuestSessionDocumentUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetKnowledgeGuestSessionDocumentUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/guest/sessions/{sessionId}/documents/{documentId}][%d] getKnowledgeGuestSessionDocumentUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetKnowledgeGuestSessionDocumentUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeGuestSessionDocumentUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeGuestSessionDocumentTooManyRequests creates a GetKnowledgeGuestSessionDocumentTooManyRequests with default headers values
func NewGetKnowledgeGuestSessionDocumentTooManyRequests() *GetKnowledgeGuestSessionDocumentTooManyRequests {
	return &GetKnowledgeGuestSessionDocumentTooManyRequests{}
}

/*GetKnowledgeGuestSessionDocumentTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetKnowledgeGuestSessionDocumentTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetKnowledgeGuestSessionDocumentTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/guest/sessions/{sessionId}/documents/{documentId}][%d] getKnowledgeGuestSessionDocumentTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetKnowledgeGuestSessionDocumentTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeGuestSessionDocumentTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeGuestSessionDocumentInternalServerError creates a GetKnowledgeGuestSessionDocumentInternalServerError with default headers values
func NewGetKnowledgeGuestSessionDocumentInternalServerError() *GetKnowledgeGuestSessionDocumentInternalServerError {
	return &GetKnowledgeGuestSessionDocumentInternalServerError{}
}

/*GetKnowledgeGuestSessionDocumentInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetKnowledgeGuestSessionDocumentInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetKnowledgeGuestSessionDocumentInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/guest/sessions/{sessionId}/documents/{documentId}][%d] getKnowledgeGuestSessionDocumentInternalServerError  %+v", 500, o.Payload)
}

func (o *GetKnowledgeGuestSessionDocumentInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeGuestSessionDocumentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeGuestSessionDocumentServiceUnavailable creates a GetKnowledgeGuestSessionDocumentServiceUnavailable with default headers values
func NewGetKnowledgeGuestSessionDocumentServiceUnavailable() *GetKnowledgeGuestSessionDocumentServiceUnavailable {
	return &GetKnowledgeGuestSessionDocumentServiceUnavailable{}
}

/*GetKnowledgeGuestSessionDocumentServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetKnowledgeGuestSessionDocumentServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetKnowledgeGuestSessionDocumentServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/guest/sessions/{sessionId}/documents/{documentId}][%d] getKnowledgeGuestSessionDocumentServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetKnowledgeGuestSessionDocumentServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeGuestSessionDocumentServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeGuestSessionDocumentGatewayTimeout creates a GetKnowledgeGuestSessionDocumentGatewayTimeout with default headers values
func NewGetKnowledgeGuestSessionDocumentGatewayTimeout() *GetKnowledgeGuestSessionDocumentGatewayTimeout {
	return &GetKnowledgeGuestSessionDocumentGatewayTimeout{}
}

/*GetKnowledgeGuestSessionDocumentGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetKnowledgeGuestSessionDocumentGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetKnowledgeGuestSessionDocumentGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/guest/sessions/{sessionId}/documents/{documentId}][%d] getKnowledgeGuestSessionDocumentGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetKnowledgeGuestSessionDocumentGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeGuestSessionDocumentGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
