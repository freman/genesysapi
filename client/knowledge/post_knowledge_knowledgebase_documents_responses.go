// Code generated by go-swagger; DO NOT EDIT.

package knowledge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostKnowledgeKnowledgebaseDocumentsReader is a Reader for the PostKnowledgeKnowledgebaseDocuments structure.
type PostKnowledgeKnowledgebaseDocumentsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostKnowledgeKnowledgebaseDocumentsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostKnowledgeKnowledgebaseDocumentsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostKnowledgeKnowledgebaseDocumentsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostKnowledgeKnowledgebaseDocumentsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostKnowledgeKnowledgebaseDocumentsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostKnowledgeKnowledgebaseDocumentsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostKnowledgeKnowledgebaseDocumentsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPostKnowledgeKnowledgebaseDocumentsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostKnowledgeKnowledgebaseDocumentsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostKnowledgeKnowledgebaseDocumentsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostKnowledgeKnowledgebaseDocumentsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostKnowledgeKnowledgebaseDocumentsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostKnowledgeKnowledgebaseDocumentsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostKnowledgeKnowledgebaseDocumentsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostKnowledgeKnowledgebaseDocumentsOK creates a PostKnowledgeKnowledgebaseDocumentsOK with default headers values
func NewPostKnowledgeKnowledgebaseDocumentsOK() *PostKnowledgeKnowledgebaseDocumentsOK {
	return &PostKnowledgeKnowledgebaseDocumentsOK{}
}

/*
PostKnowledgeKnowledgebaseDocumentsOK describes a response with status code 200, with default header values.

successful operation
*/
type PostKnowledgeKnowledgebaseDocumentsOK struct {
	Payload *models.KnowledgeDocumentResponse
}

// IsSuccess returns true when this post knowledge knowledgebase documents o k response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post knowledge knowledgebase documents o k response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase documents o k response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post knowledge knowledgebase documents o k response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post knowledge knowledgebase documents o k response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseDocumentsOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostKnowledgeKnowledgebaseDocumentsOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents][%d] postKnowledgeKnowledgebaseDocumentsOK  %+v", 200, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentsOK) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents][%d] postKnowledgeKnowledgebaseDocumentsOK  %+v", 200, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentsOK) GetPayload() *models.KnowledgeDocumentResponse {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseDocumentsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KnowledgeDocumentResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseDocumentsBadRequest creates a PostKnowledgeKnowledgebaseDocumentsBadRequest with default headers values
func NewPostKnowledgeKnowledgebaseDocumentsBadRequest() *PostKnowledgeKnowledgebaseDocumentsBadRequest {
	return &PostKnowledgeKnowledgebaseDocumentsBadRequest{}
}

/*
PostKnowledgeKnowledgebaseDocumentsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostKnowledgeKnowledgebaseDocumentsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post knowledge knowledgebase documents bad request response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post knowledge knowledgebase documents bad request response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase documents bad request response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post knowledge knowledgebase documents bad request response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post knowledge knowledgebase documents bad request response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseDocumentsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostKnowledgeKnowledgebaseDocumentsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents][%d] postKnowledgeKnowledgebaseDocumentsBadRequest  %+v", 400, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentsBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents][%d] postKnowledgeKnowledgebaseDocumentsBadRequest  %+v", 400, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseDocumentsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseDocumentsUnauthorized creates a PostKnowledgeKnowledgebaseDocumentsUnauthorized with default headers values
func NewPostKnowledgeKnowledgebaseDocumentsUnauthorized() *PostKnowledgeKnowledgebaseDocumentsUnauthorized {
	return &PostKnowledgeKnowledgebaseDocumentsUnauthorized{}
}

/*
PostKnowledgeKnowledgebaseDocumentsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostKnowledgeKnowledgebaseDocumentsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post knowledge knowledgebase documents unauthorized response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post knowledge knowledgebase documents unauthorized response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase documents unauthorized response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post knowledge knowledgebase documents unauthorized response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post knowledge knowledgebase documents unauthorized response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseDocumentsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostKnowledgeKnowledgebaseDocumentsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents][%d] postKnowledgeKnowledgebaseDocumentsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentsUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents][%d] postKnowledgeKnowledgebaseDocumentsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseDocumentsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseDocumentsForbidden creates a PostKnowledgeKnowledgebaseDocumentsForbidden with default headers values
func NewPostKnowledgeKnowledgebaseDocumentsForbidden() *PostKnowledgeKnowledgebaseDocumentsForbidden {
	return &PostKnowledgeKnowledgebaseDocumentsForbidden{}
}

/*
PostKnowledgeKnowledgebaseDocumentsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostKnowledgeKnowledgebaseDocumentsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post knowledge knowledgebase documents forbidden response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post knowledge knowledgebase documents forbidden response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase documents forbidden response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post knowledge knowledgebase documents forbidden response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post knowledge knowledgebase documents forbidden response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseDocumentsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostKnowledgeKnowledgebaseDocumentsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents][%d] postKnowledgeKnowledgebaseDocumentsForbidden  %+v", 403, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentsForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents][%d] postKnowledgeKnowledgebaseDocumentsForbidden  %+v", 403, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseDocumentsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseDocumentsNotFound creates a PostKnowledgeKnowledgebaseDocumentsNotFound with default headers values
func NewPostKnowledgeKnowledgebaseDocumentsNotFound() *PostKnowledgeKnowledgebaseDocumentsNotFound {
	return &PostKnowledgeKnowledgebaseDocumentsNotFound{}
}

/*
PostKnowledgeKnowledgebaseDocumentsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostKnowledgeKnowledgebaseDocumentsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post knowledge knowledgebase documents not found response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post knowledge knowledgebase documents not found response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase documents not found response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post knowledge knowledgebase documents not found response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post knowledge knowledgebase documents not found response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseDocumentsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostKnowledgeKnowledgebaseDocumentsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents][%d] postKnowledgeKnowledgebaseDocumentsNotFound  %+v", 404, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentsNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents][%d] postKnowledgeKnowledgebaseDocumentsNotFound  %+v", 404, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseDocumentsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseDocumentsRequestTimeout creates a PostKnowledgeKnowledgebaseDocumentsRequestTimeout with default headers values
func NewPostKnowledgeKnowledgebaseDocumentsRequestTimeout() *PostKnowledgeKnowledgebaseDocumentsRequestTimeout {
	return &PostKnowledgeKnowledgebaseDocumentsRequestTimeout{}
}

/*
PostKnowledgeKnowledgebaseDocumentsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostKnowledgeKnowledgebaseDocumentsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post knowledge knowledgebase documents request timeout response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post knowledge knowledgebase documents request timeout response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase documents request timeout response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post knowledge knowledgebase documents request timeout response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post knowledge knowledgebase documents request timeout response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseDocumentsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostKnowledgeKnowledgebaseDocumentsRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents][%d] postKnowledgeKnowledgebaseDocumentsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentsRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents][%d] postKnowledgeKnowledgebaseDocumentsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseDocumentsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseDocumentsConflict creates a PostKnowledgeKnowledgebaseDocumentsConflict with default headers values
func NewPostKnowledgeKnowledgebaseDocumentsConflict() *PostKnowledgeKnowledgebaseDocumentsConflict {
	return &PostKnowledgeKnowledgebaseDocumentsConflict{}
}

/*
PostKnowledgeKnowledgebaseDocumentsConflict describes a response with status code 409, with default header values.

Conflict
*/
type PostKnowledgeKnowledgebaseDocumentsConflict struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post knowledge knowledgebase documents conflict response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post knowledge knowledgebase documents conflict response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase documents conflict response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this post knowledge knowledgebase documents conflict response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this post knowledge knowledgebase documents conflict response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseDocumentsConflict) IsCode(code int) bool {
	return code == 409
}

func (o *PostKnowledgeKnowledgebaseDocumentsConflict) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents][%d] postKnowledgeKnowledgebaseDocumentsConflict  %+v", 409, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentsConflict) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents][%d] postKnowledgeKnowledgebaseDocumentsConflict  %+v", 409, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentsConflict) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseDocumentsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseDocumentsRequestEntityTooLarge creates a PostKnowledgeKnowledgebaseDocumentsRequestEntityTooLarge with default headers values
func NewPostKnowledgeKnowledgebaseDocumentsRequestEntityTooLarge() *PostKnowledgeKnowledgebaseDocumentsRequestEntityTooLarge {
	return &PostKnowledgeKnowledgebaseDocumentsRequestEntityTooLarge{}
}

/*
PostKnowledgeKnowledgebaseDocumentsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PostKnowledgeKnowledgebaseDocumentsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post knowledge knowledgebase documents request entity too large response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post knowledge knowledgebase documents request entity too large response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase documents request entity too large response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post knowledge knowledgebase documents request entity too large response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post knowledge knowledgebase documents request entity too large response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseDocumentsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostKnowledgeKnowledgebaseDocumentsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents][%d] postKnowledgeKnowledgebaseDocumentsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents][%d] postKnowledgeKnowledgebaseDocumentsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseDocumentsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseDocumentsUnsupportedMediaType creates a PostKnowledgeKnowledgebaseDocumentsUnsupportedMediaType with default headers values
func NewPostKnowledgeKnowledgebaseDocumentsUnsupportedMediaType() *PostKnowledgeKnowledgebaseDocumentsUnsupportedMediaType {
	return &PostKnowledgeKnowledgebaseDocumentsUnsupportedMediaType{}
}

/*
PostKnowledgeKnowledgebaseDocumentsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostKnowledgeKnowledgebaseDocumentsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post knowledge knowledgebase documents unsupported media type response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post knowledge knowledgebase documents unsupported media type response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase documents unsupported media type response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post knowledge knowledgebase documents unsupported media type response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post knowledge knowledgebase documents unsupported media type response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseDocumentsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostKnowledgeKnowledgebaseDocumentsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents][%d] postKnowledgeKnowledgebaseDocumentsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents][%d] postKnowledgeKnowledgebaseDocumentsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseDocumentsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseDocumentsTooManyRequests creates a PostKnowledgeKnowledgebaseDocumentsTooManyRequests with default headers values
func NewPostKnowledgeKnowledgebaseDocumentsTooManyRequests() *PostKnowledgeKnowledgebaseDocumentsTooManyRequests {
	return &PostKnowledgeKnowledgebaseDocumentsTooManyRequests{}
}

/*
PostKnowledgeKnowledgebaseDocumentsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostKnowledgeKnowledgebaseDocumentsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post knowledge knowledgebase documents too many requests response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post knowledge knowledgebase documents too many requests response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase documents too many requests response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post knowledge knowledgebase documents too many requests response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post knowledge knowledgebase documents too many requests response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseDocumentsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostKnowledgeKnowledgebaseDocumentsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents][%d] postKnowledgeKnowledgebaseDocumentsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentsTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents][%d] postKnowledgeKnowledgebaseDocumentsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseDocumentsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseDocumentsInternalServerError creates a PostKnowledgeKnowledgebaseDocumentsInternalServerError with default headers values
func NewPostKnowledgeKnowledgebaseDocumentsInternalServerError() *PostKnowledgeKnowledgebaseDocumentsInternalServerError {
	return &PostKnowledgeKnowledgebaseDocumentsInternalServerError{}
}

/*
PostKnowledgeKnowledgebaseDocumentsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostKnowledgeKnowledgebaseDocumentsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post knowledge knowledgebase documents internal server error response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post knowledge knowledgebase documents internal server error response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase documents internal server error response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post knowledge knowledgebase documents internal server error response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post knowledge knowledgebase documents internal server error response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseDocumentsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostKnowledgeKnowledgebaseDocumentsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents][%d] postKnowledgeKnowledgebaseDocumentsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentsInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents][%d] postKnowledgeKnowledgebaseDocumentsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseDocumentsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseDocumentsServiceUnavailable creates a PostKnowledgeKnowledgebaseDocumentsServiceUnavailable with default headers values
func NewPostKnowledgeKnowledgebaseDocumentsServiceUnavailable() *PostKnowledgeKnowledgebaseDocumentsServiceUnavailable {
	return &PostKnowledgeKnowledgebaseDocumentsServiceUnavailable{}
}

/*
PostKnowledgeKnowledgebaseDocumentsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostKnowledgeKnowledgebaseDocumentsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post knowledge knowledgebase documents service unavailable response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post knowledge knowledgebase documents service unavailable response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase documents service unavailable response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post knowledge knowledgebase documents service unavailable response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post knowledge knowledgebase documents service unavailable response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseDocumentsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostKnowledgeKnowledgebaseDocumentsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents][%d] postKnowledgeKnowledgebaseDocumentsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentsServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents][%d] postKnowledgeKnowledgebaseDocumentsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseDocumentsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseDocumentsGatewayTimeout creates a PostKnowledgeKnowledgebaseDocumentsGatewayTimeout with default headers values
func NewPostKnowledgeKnowledgebaseDocumentsGatewayTimeout() *PostKnowledgeKnowledgebaseDocumentsGatewayTimeout {
	return &PostKnowledgeKnowledgebaseDocumentsGatewayTimeout{}
}

/*
PostKnowledgeKnowledgebaseDocumentsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostKnowledgeKnowledgebaseDocumentsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post knowledge knowledgebase documents gateway timeout response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post knowledge knowledgebase documents gateway timeout response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase documents gateway timeout response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post knowledge knowledgebase documents gateway timeout response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseDocumentsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post knowledge knowledgebase documents gateway timeout response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseDocumentsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostKnowledgeKnowledgebaseDocumentsGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents][%d] postKnowledgeKnowledgebaseDocumentsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentsGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents][%d] postKnowledgeKnowledgebaseDocumentsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseDocumentsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseDocumentsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
