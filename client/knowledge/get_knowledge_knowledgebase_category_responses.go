// Code generated by go-swagger; DO NOT EDIT.

package knowledge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetKnowledgeKnowledgebaseCategoryReader is a Reader for the GetKnowledgeKnowledgebaseCategory structure.
type GetKnowledgeKnowledgebaseCategoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetKnowledgeKnowledgebaseCategoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetKnowledgeKnowledgebaseCategoryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetKnowledgeKnowledgebaseCategoryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetKnowledgeKnowledgebaseCategoryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetKnowledgeKnowledgebaseCategoryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetKnowledgeKnowledgebaseCategoryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetKnowledgeKnowledgebaseCategoryRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetKnowledgeKnowledgebaseCategoryRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetKnowledgeKnowledgebaseCategoryUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetKnowledgeKnowledgebaseCategoryTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetKnowledgeKnowledgebaseCategoryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetKnowledgeKnowledgebaseCategoryServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetKnowledgeKnowledgebaseCategoryGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetKnowledgeKnowledgebaseCategoryOK creates a GetKnowledgeKnowledgebaseCategoryOK with default headers values
func NewGetKnowledgeKnowledgebaseCategoryOK() *GetKnowledgeKnowledgebaseCategoryOK {
	return &GetKnowledgeKnowledgebaseCategoryOK{}
}

/*
GetKnowledgeKnowledgebaseCategoryOK describes a response with status code 200, with default header values.

successful operation
*/
type GetKnowledgeKnowledgebaseCategoryOK struct {
	Payload *models.CategoryResponse
}

// IsSuccess returns true when this get knowledge knowledgebase category o k response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseCategoryOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get knowledge knowledgebase category o k response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseCategoryOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase category o k response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseCategoryOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get knowledge knowledgebase category o k response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseCategoryOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase category o k response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseCategoryOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetKnowledgeKnowledgebaseCategoryOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories/{categoryId}][%d] getKnowledgeKnowledgebaseCategoryOK  %+v", 200, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseCategoryOK) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories/{categoryId}][%d] getKnowledgeKnowledgebaseCategoryOK  %+v", 200, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseCategoryOK) GetPayload() *models.CategoryResponse {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseCategoryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CategoryResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseCategoryBadRequest creates a GetKnowledgeKnowledgebaseCategoryBadRequest with default headers values
func NewGetKnowledgeKnowledgebaseCategoryBadRequest() *GetKnowledgeKnowledgebaseCategoryBadRequest {
	return &GetKnowledgeKnowledgebaseCategoryBadRequest{}
}

/*
GetKnowledgeKnowledgebaseCategoryBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetKnowledgeKnowledgebaseCategoryBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase category bad request response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseCategoryBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase category bad request response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseCategoryBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase category bad request response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseCategoryBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase category bad request response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseCategoryBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase category bad request response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseCategoryBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetKnowledgeKnowledgebaseCategoryBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories/{categoryId}][%d] getKnowledgeKnowledgebaseCategoryBadRequest  %+v", 400, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseCategoryBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories/{categoryId}][%d] getKnowledgeKnowledgebaseCategoryBadRequest  %+v", 400, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseCategoryBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseCategoryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseCategoryUnauthorized creates a GetKnowledgeKnowledgebaseCategoryUnauthorized with default headers values
func NewGetKnowledgeKnowledgebaseCategoryUnauthorized() *GetKnowledgeKnowledgebaseCategoryUnauthorized {
	return &GetKnowledgeKnowledgebaseCategoryUnauthorized{}
}

/*
GetKnowledgeKnowledgebaseCategoryUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetKnowledgeKnowledgebaseCategoryUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase category unauthorized response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseCategoryUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase category unauthorized response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseCategoryUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase category unauthorized response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseCategoryUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase category unauthorized response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseCategoryUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase category unauthorized response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseCategoryUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetKnowledgeKnowledgebaseCategoryUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories/{categoryId}][%d] getKnowledgeKnowledgebaseCategoryUnauthorized  %+v", 401, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseCategoryUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories/{categoryId}][%d] getKnowledgeKnowledgebaseCategoryUnauthorized  %+v", 401, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseCategoryUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseCategoryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseCategoryForbidden creates a GetKnowledgeKnowledgebaseCategoryForbidden with default headers values
func NewGetKnowledgeKnowledgebaseCategoryForbidden() *GetKnowledgeKnowledgebaseCategoryForbidden {
	return &GetKnowledgeKnowledgebaseCategoryForbidden{}
}

/*
GetKnowledgeKnowledgebaseCategoryForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetKnowledgeKnowledgebaseCategoryForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase category forbidden response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseCategoryForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase category forbidden response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseCategoryForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase category forbidden response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseCategoryForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase category forbidden response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseCategoryForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase category forbidden response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseCategoryForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetKnowledgeKnowledgebaseCategoryForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories/{categoryId}][%d] getKnowledgeKnowledgebaseCategoryForbidden  %+v", 403, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseCategoryForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories/{categoryId}][%d] getKnowledgeKnowledgebaseCategoryForbidden  %+v", 403, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseCategoryForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseCategoryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseCategoryNotFound creates a GetKnowledgeKnowledgebaseCategoryNotFound with default headers values
func NewGetKnowledgeKnowledgebaseCategoryNotFound() *GetKnowledgeKnowledgebaseCategoryNotFound {
	return &GetKnowledgeKnowledgebaseCategoryNotFound{}
}

/*
GetKnowledgeKnowledgebaseCategoryNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetKnowledgeKnowledgebaseCategoryNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase category not found response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseCategoryNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase category not found response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseCategoryNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase category not found response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseCategoryNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase category not found response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseCategoryNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase category not found response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseCategoryNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetKnowledgeKnowledgebaseCategoryNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories/{categoryId}][%d] getKnowledgeKnowledgebaseCategoryNotFound  %+v", 404, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseCategoryNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories/{categoryId}][%d] getKnowledgeKnowledgebaseCategoryNotFound  %+v", 404, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseCategoryNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseCategoryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseCategoryRequestTimeout creates a GetKnowledgeKnowledgebaseCategoryRequestTimeout with default headers values
func NewGetKnowledgeKnowledgebaseCategoryRequestTimeout() *GetKnowledgeKnowledgebaseCategoryRequestTimeout {
	return &GetKnowledgeKnowledgebaseCategoryRequestTimeout{}
}

/*
GetKnowledgeKnowledgebaseCategoryRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetKnowledgeKnowledgebaseCategoryRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase category request timeout response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseCategoryRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase category request timeout response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseCategoryRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase category request timeout response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseCategoryRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase category request timeout response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseCategoryRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase category request timeout response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseCategoryRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetKnowledgeKnowledgebaseCategoryRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories/{categoryId}][%d] getKnowledgeKnowledgebaseCategoryRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseCategoryRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories/{categoryId}][%d] getKnowledgeKnowledgebaseCategoryRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseCategoryRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseCategoryRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseCategoryRequestEntityTooLarge creates a GetKnowledgeKnowledgebaseCategoryRequestEntityTooLarge with default headers values
func NewGetKnowledgeKnowledgebaseCategoryRequestEntityTooLarge() *GetKnowledgeKnowledgebaseCategoryRequestEntityTooLarge {
	return &GetKnowledgeKnowledgebaseCategoryRequestEntityTooLarge{}
}

/*
GetKnowledgeKnowledgebaseCategoryRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetKnowledgeKnowledgebaseCategoryRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase category request entity too large response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseCategoryRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase category request entity too large response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseCategoryRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase category request entity too large response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseCategoryRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase category request entity too large response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseCategoryRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase category request entity too large response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseCategoryRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetKnowledgeKnowledgebaseCategoryRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories/{categoryId}][%d] getKnowledgeKnowledgebaseCategoryRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseCategoryRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories/{categoryId}][%d] getKnowledgeKnowledgebaseCategoryRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseCategoryRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseCategoryRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseCategoryUnsupportedMediaType creates a GetKnowledgeKnowledgebaseCategoryUnsupportedMediaType with default headers values
func NewGetKnowledgeKnowledgebaseCategoryUnsupportedMediaType() *GetKnowledgeKnowledgebaseCategoryUnsupportedMediaType {
	return &GetKnowledgeKnowledgebaseCategoryUnsupportedMediaType{}
}

/*
GetKnowledgeKnowledgebaseCategoryUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetKnowledgeKnowledgebaseCategoryUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase category unsupported media type response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseCategoryUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase category unsupported media type response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseCategoryUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase category unsupported media type response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseCategoryUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase category unsupported media type response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseCategoryUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase category unsupported media type response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseCategoryUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetKnowledgeKnowledgebaseCategoryUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories/{categoryId}][%d] getKnowledgeKnowledgebaseCategoryUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseCategoryUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories/{categoryId}][%d] getKnowledgeKnowledgebaseCategoryUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseCategoryUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseCategoryUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseCategoryTooManyRequests creates a GetKnowledgeKnowledgebaseCategoryTooManyRequests with default headers values
func NewGetKnowledgeKnowledgebaseCategoryTooManyRequests() *GetKnowledgeKnowledgebaseCategoryTooManyRequests {
	return &GetKnowledgeKnowledgebaseCategoryTooManyRequests{}
}

/*
GetKnowledgeKnowledgebaseCategoryTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetKnowledgeKnowledgebaseCategoryTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase category too many requests response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseCategoryTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase category too many requests response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseCategoryTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase category too many requests response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseCategoryTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase category too many requests response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseCategoryTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase category too many requests response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseCategoryTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetKnowledgeKnowledgebaseCategoryTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories/{categoryId}][%d] getKnowledgeKnowledgebaseCategoryTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseCategoryTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories/{categoryId}][%d] getKnowledgeKnowledgebaseCategoryTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseCategoryTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseCategoryTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseCategoryInternalServerError creates a GetKnowledgeKnowledgebaseCategoryInternalServerError with default headers values
func NewGetKnowledgeKnowledgebaseCategoryInternalServerError() *GetKnowledgeKnowledgebaseCategoryInternalServerError {
	return &GetKnowledgeKnowledgebaseCategoryInternalServerError{}
}

/*
GetKnowledgeKnowledgebaseCategoryInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetKnowledgeKnowledgebaseCategoryInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase category internal server error response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseCategoryInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase category internal server error response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseCategoryInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase category internal server error response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseCategoryInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get knowledge knowledgebase category internal server error response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseCategoryInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get knowledge knowledgebase category internal server error response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseCategoryInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetKnowledgeKnowledgebaseCategoryInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories/{categoryId}][%d] getKnowledgeKnowledgebaseCategoryInternalServerError  %+v", 500, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseCategoryInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories/{categoryId}][%d] getKnowledgeKnowledgebaseCategoryInternalServerError  %+v", 500, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseCategoryInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseCategoryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseCategoryServiceUnavailable creates a GetKnowledgeKnowledgebaseCategoryServiceUnavailable with default headers values
func NewGetKnowledgeKnowledgebaseCategoryServiceUnavailable() *GetKnowledgeKnowledgebaseCategoryServiceUnavailable {
	return &GetKnowledgeKnowledgebaseCategoryServiceUnavailable{}
}

/*
GetKnowledgeKnowledgebaseCategoryServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetKnowledgeKnowledgebaseCategoryServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase category service unavailable response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseCategoryServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase category service unavailable response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseCategoryServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase category service unavailable response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseCategoryServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get knowledge knowledgebase category service unavailable response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseCategoryServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get knowledge knowledgebase category service unavailable response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseCategoryServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetKnowledgeKnowledgebaseCategoryServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories/{categoryId}][%d] getKnowledgeKnowledgebaseCategoryServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseCategoryServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories/{categoryId}][%d] getKnowledgeKnowledgebaseCategoryServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseCategoryServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseCategoryServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseCategoryGatewayTimeout creates a GetKnowledgeKnowledgebaseCategoryGatewayTimeout with default headers values
func NewGetKnowledgeKnowledgebaseCategoryGatewayTimeout() *GetKnowledgeKnowledgebaseCategoryGatewayTimeout {
	return &GetKnowledgeKnowledgebaseCategoryGatewayTimeout{}
}

/*
GetKnowledgeKnowledgebaseCategoryGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetKnowledgeKnowledgebaseCategoryGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase category gateway timeout response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseCategoryGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase category gateway timeout response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseCategoryGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase category gateway timeout response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseCategoryGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get knowledge knowledgebase category gateway timeout response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseCategoryGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get knowledge knowledgebase category gateway timeout response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseCategoryGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetKnowledgeKnowledgebaseCategoryGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories/{categoryId}][%d] getKnowledgeKnowledgebaseCategoryGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseCategoryGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories/{categoryId}][%d] getKnowledgeKnowledgebaseCategoryGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseCategoryGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseCategoryGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
