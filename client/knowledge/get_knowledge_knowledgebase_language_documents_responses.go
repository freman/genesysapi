// Code generated by go-swagger; DO NOT EDIT.

package knowledge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetKnowledgeKnowledgebaseLanguageDocumentsReader is a Reader for the GetKnowledgeKnowledgebaseLanguageDocuments structure.
type GetKnowledgeKnowledgebaseLanguageDocumentsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetKnowledgeKnowledgebaseLanguageDocumentsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetKnowledgeKnowledgebaseLanguageDocumentsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetKnowledgeKnowledgebaseLanguageDocumentsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetKnowledgeKnowledgebaseLanguageDocumentsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetKnowledgeKnowledgebaseLanguageDocumentsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetKnowledgeKnowledgebaseLanguageDocumentsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetKnowledgeKnowledgebaseLanguageDocumentsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetKnowledgeKnowledgebaseLanguageDocumentsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetKnowledgeKnowledgebaseLanguageDocumentsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetKnowledgeKnowledgebaseLanguageDocumentsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetKnowledgeKnowledgebaseLanguageDocumentsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetKnowledgeKnowledgebaseLanguageDocumentsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetKnowledgeKnowledgebaseLanguageDocumentsOK creates a GetKnowledgeKnowledgebaseLanguageDocumentsOK with default headers values
func NewGetKnowledgeKnowledgebaseLanguageDocumentsOK() *GetKnowledgeKnowledgebaseLanguageDocumentsOK {
	return &GetKnowledgeKnowledgebaseLanguageDocumentsOK{}
}

/*
GetKnowledgeKnowledgebaseLanguageDocumentsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetKnowledgeKnowledgebaseLanguageDocumentsOK struct {
	Payload *models.DocumentListing
}

// IsSuccess returns true when this get knowledge knowledgebase language documents o k response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get knowledge knowledgebase language documents o k response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase language documents o k response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get knowledge knowledgebase language documents o k response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase language documents o k response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents][%d] getKnowledgeKnowledgebaseLanguageDocumentsOK  %+v", 200, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentsOK) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents][%d] getKnowledgeKnowledgebaseLanguageDocumentsOK  %+v", 200, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentsOK) GetPayload() *models.DocumentListing {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DocumentListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseLanguageDocumentsBadRequest creates a GetKnowledgeKnowledgebaseLanguageDocumentsBadRequest with default headers values
func NewGetKnowledgeKnowledgebaseLanguageDocumentsBadRequest() *GetKnowledgeKnowledgebaseLanguageDocumentsBadRequest {
	return &GetKnowledgeKnowledgebaseLanguageDocumentsBadRequest{}
}

/*
GetKnowledgeKnowledgebaseLanguageDocumentsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetKnowledgeKnowledgebaseLanguageDocumentsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase language documents bad request response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase language documents bad request response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase language documents bad request response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase language documents bad request response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase language documents bad request response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents][%d] getKnowledgeKnowledgebaseLanguageDocumentsBadRequest  %+v", 400, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents][%d] getKnowledgeKnowledgebaseLanguageDocumentsBadRequest  %+v", 400, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseLanguageDocumentsUnauthorized creates a GetKnowledgeKnowledgebaseLanguageDocumentsUnauthorized with default headers values
func NewGetKnowledgeKnowledgebaseLanguageDocumentsUnauthorized() *GetKnowledgeKnowledgebaseLanguageDocumentsUnauthorized {
	return &GetKnowledgeKnowledgebaseLanguageDocumentsUnauthorized{}
}

/*
GetKnowledgeKnowledgebaseLanguageDocumentsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetKnowledgeKnowledgebaseLanguageDocumentsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase language documents unauthorized response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase language documents unauthorized response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase language documents unauthorized response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase language documents unauthorized response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase language documents unauthorized response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents][%d] getKnowledgeKnowledgebaseLanguageDocumentsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents][%d] getKnowledgeKnowledgebaseLanguageDocumentsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseLanguageDocumentsForbidden creates a GetKnowledgeKnowledgebaseLanguageDocumentsForbidden with default headers values
func NewGetKnowledgeKnowledgebaseLanguageDocumentsForbidden() *GetKnowledgeKnowledgebaseLanguageDocumentsForbidden {
	return &GetKnowledgeKnowledgebaseLanguageDocumentsForbidden{}
}

/*
GetKnowledgeKnowledgebaseLanguageDocumentsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetKnowledgeKnowledgebaseLanguageDocumentsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase language documents forbidden response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase language documents forbidden response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase language documents forbidden response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase language documents forbidden response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase language documents forbidden response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents][%d] getKnowledgeKnowledgebaseLanguageDocumentsForbidden  %+v", 403, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents][%d] getKnowledgeKnowledgebaseLanguageDocumentsForbidden  %+v", 403, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseLanguageDocumentsNotFound creates a GetKnowledgeKnowledgebaseLanguageDocumentsNotFound with default headers values
func NewGetKnowledgeKnowledgebaseLanguageDocumentsNotFound() *GetKnowledgeKnowledgebaseLanguageDocumentsNotFound {
	return &GetKnowledgeKnowledgebaseLanguageDocumentsNotFound{}
}

/*
GetKnowledgeKnowledgebaseLanguageDocumentsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetKnowledgeKnowledgebaseLanguageDocumentsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase language documents not found response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase language documents not found response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase language documents not found response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase language documents not found response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase language documents not found response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents][%d] getKnowledgeKnowledgebaseLanguageDocumentsNotFound  %+v", 404, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents][%d] getKnowledgeKnowledgebaseLanguageDocumentsNotFound  %+v", 404, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseLanguageDocumentsRequestTimeout creates a GetKnowledgeKnowledgebaseLanguageDocumentsRequestTimeout with default headers values
func NewGetKnowledgeKnowledgebaseLanguageDocumentsRequestTimeout() *GetKnowledgeKnowledgebaseLanguageDocumentsRequestTimeout {
	return &GetKnowledgeKnowledgebaseLanguageDocumentsRequestTimeout{}
}

/*
GetKnowledgeKnowledgebaseLanguageDocumentsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetKnowledgeKnowledgebaseLanguageDocumentsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase language documents request timeout response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase language documents request timeout response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase language documents request timeout response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase language documents request timeout response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase language documents request timeout response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents][%d] getKnowledgeKnowledgebaseLanguageDocumentsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentsRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents][%d] getKnowledgeKnowledgebaseLanguageDocumentsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseLanguageDocumentsRequestEntityTooLarge creates a GetKnowledgeKnowledgebaseLanguageDocumentsRequestEntityTooLarge with default headers values
func NewGetKnowledgeKnowledgebaseLanguageDocumentsRequestEntityTooLarge() *GetKnowledgeKnowledgebaseLanguageDocumentsRequestEntityTooLarge {
	return &GetKnowledgeKnowledgebaseLanguageDocumentsRequestEntityTooLarge{}
}

/*
GetKnowledgeKnowledgebaseLanguageDocumentsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetKnowledgeKnowledgebaseLanguageDocumentsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase language documents request entity too large response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase language documents request entity too large response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase language documents request entity too large response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase language documents request entity too large response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase language documents request entity too large response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents][%d] getKnowledgeKnowledgebaseLanguageDocumentsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents][%d] getKnowledgeKnowledgebaseLanguageDocumentsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseLanguageDocumentsUnsupportedMediaType creates a GetKnowledgeKnowledgebaseLanguageDocumentsUnsupportedMediaType with default headers values
func NewGetKnowledgeKnowledgebaseLanguageDocumentsUnsupportedMediaType() *GetKnowledgeKnowledgebaseLanguageDocumentsUnsupportedMediaType {
	return &GetKnowledgeKnowledgebaseLanguageDocumentsUnsupportedMediaType{}
}

/*
GetKnowledgeKnowledgebaseLanguageDocumentsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetKnowledgeKnowledgebaseLanguageDocumentsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase language documents unsupported media type response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase language documents unsupported media type response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase language documents unsupported media type response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase language documents unsupported media type response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase language documents unsupported media type response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents][%d] getKnowledgeKnowledgebaseLanguageDocumentsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents][%d] getKnowledgeKnowledgebaseLanguageDocumentsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseLanguageDocumentsTooManyRequests creates a GetKnowledgeKnowledgebaseLanguageDocumentsTooManyRequests with default headers values
func NewGetKnowledgeKnowledgebaseLanguageDocumentsTooManyRequests() *GetKnowledgeKnowledgebaseLanguageDocumentsTooManyRequests {
	return &GetKnowledgeKnowledgebaseLanguageDocumentsTooManyRequests{}
}

/*
GetKnowledgeKnowledgebaseLanguageDocumentsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetKnowledgeKnowledgebaseLanguageDocumentsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase language documents too many requests response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase language documents too many requests response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase language documents too many requests response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase language documents too many requests response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase language documents too many requests response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents][%d] getKnowledgeKnowledgebaseLanguageDocumentsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents][%d] getKnowledgeKnowledgebaseLanguageDocumentsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseLanguageDocumentsInternalServerError creates a GetKnowledgeKnowledgebaseLanguageDocumentsInternalServerError with default headers values
func NewGetKnowledgeKnowledgebaseLanguageDocumentsInternalServerError() *GetKnowledgeKnowledgebaseLanguageDocumentsInternalServerError {
	return &GetKnowledgeKnowledgebaseLanguageDocumentsInternalServerError{}
}

/*
GetKnowledgeKnowledgebaseLanguageDocumentsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetKnowledgeKnowledgebaseLanguageDocumentsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase language documents internal server error response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase language documents internal server error response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase language documents internal server error response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get knowledge knowledgebase language documents internal server error response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get knowledge knowledgebase language documents internal server error response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents][%d] getKnowledgeKnowledgebaseLanguageDocumentsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents][%d] getKnowledgeKnowledgebaseLanguageDocumentsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseLanguageDocumentsServiceUnavailable creates a GetKnowledgeKnowledgebaseLanguageDocumentsServiceUnavailable with default headers values
func NewGetKnowledgeKnowledgebaseLanguageDocumentsServiceUnavailable() *GetKnowledgeKnowledgebaseLanguageDocumentsServiceUnavailable {
	return &GetKnowledgeKnowledgebaseLanguageDocumentsServiceUnavailable{}
}

/*
GetKnowledgeKnowledgebaseLanguageDocumentsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetKnowledgeKnowledgebaseLanguageDocumentsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase language documents service unavailable response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase language documents service unavailable response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase language documents service unavailable response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get knowledge knowledgebase language documents service unavailable response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get knowledge knowledgebase language documents service unavailable response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents][%d] getKnowledgeKnowledgebaseLanguageDocumentsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents][%d] getKnowledgeKnowledgebaseLanguageDocumentsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseLanguageDocumentsGatewayTimeout creates a GetKnowledgeKnowledgebaseLanguageDocumentsGatewayTimeout with default headers values
func NewGetKnowledgeKnowledgebaseLanguageDocumentsGatewayTimeout() *GetKnowledgeKnowledgebaseLanguageDocumentsGatewayTimeout {
	return &GetKnowledgeKnowledgebaseLanguageDocumentsGatewayTimeout{}
}

/*
GetKnowledgeKnowledgebaseLanguageDocumentsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetKnowledgeKnowledgebaseLanguageDocumentsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase language documents gateway timeout response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase language documents gateway timeout response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase language documents gateway timeout response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get knowledge knowledgebase language documents gateway timeout response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get knowledge knowledgebase language documents gateway timeout response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseLanguageDocumentsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents][%d] getKnowledgeKnowledgebaseLanguageDocumentsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentsGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents][%d] getKnowledgeKnowledgebaseLanguageDocumentsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseLanguageDocumentsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
