// Code generated by go-swagger; DO NOT EDIT.

package knowledge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetKnowledgeKnowledgebaseDocumentVersionVariationsReader is a Reader for the GetKnowledgeKnowledgebaseDocumentVersionVariations structure.
type GetKnowledgeKnowledgebaseDocumentVersionVariationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetKnowledgeKnowledgebaseDocumentVersionVariationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetKnowledgeKnowledgebaseDocumentVersionVariationsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetKnowledgeKnowledgebaseDocumentVersionVariationsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetKnowledgeKnowledgebaseDocumentVersionVariationsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetKnowledgeKnowledgebaseDocumentVersionVariationsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetKnowledgeKnowledgebaseDocumentVersionVariationsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetKnowledgeKnowledgebaseDocumentVersionVariationsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetKnowledgeKnowledgebaseDocumentVersionVariationsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetKnowledgeKnowledgebaseDocumentVersionVariationsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetKnowledgeKnowledgebaseDocumentVersionVariationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetKnowledgeKnowledgebaseDocumentVersionVariationsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetKnowledgeKnowledgebaseDocumentVersionVariationsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetKnowledgeKnowledgebaseDocumentVersionVariationsOK creates a GetKnowledgeKnowledgebaseDocumentVersionVariationsOK with default headers values
func NewGetKnowledgeKnowledgebaseDocumentVersionVariationsOK() *GetKnowledgeKnowledgebaseDocumentVersionVariationsOK {
	return &GetKnowledgeKnowledgebaseDocumentVersionVariationsOK{}
}

/*
GetKnowledgeKnowledgebaseDocumentVersionVariationsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetKnowledgeKnowledgebaseDocumentVersionVariationsOK struct {
	Payload *models.KnowledgeDocumentVersionVariationListing
}

// IsSuccess returns true when this get knowledge knowledgebase document version variations o k response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get knowledge knowledgebase document version variations o k response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase document version variations o k response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get knowledge knowledgebase document version variations o k response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase document version variations o k response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations][%d] getKnowledgeKnowledgebaseDocumentVersionVariationsOK  %+v", 200, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsOK) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations][%d] getKnowledgeKnowledgebaseDocumentVersionVariationsOK  %+v", 200, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsOK) GetPayload() *models.KnowledgeDocumentVersionVariationListing {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KnowledgeDocumentVersionVariationListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseDocumentVersionVariationsBadRequest creates a GetKnowledgeKnowledgebaseDocumentVersionVariationsBadRequest with default headers values
func NewGetKnowledgeKnowledgebaseDocumentVersionVariationsBadRequest() *GetKnowledgeKnowledgebaseDocumentVersionVariationsBadRequest {
	return &GetKnowledgeKnowledgebaseDocumentVersionVariationsBadRequest{}
}

/*
GetKnowledgeKnowledgebaseDocumentVersionVariationsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetKnowledgeKnowledgebaseDocumentVersionVariationsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase document version variations bad request response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase document version variations bad request response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase document version variations bad request response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase document version variations bad request response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase document version variations bad request response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations][%d] getKnowledgeKnowledgebaseDocumentVersionVariationsBadRequest  %+v", 400, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations][%d] getKnowledgeKnowledgebaseDocumentVersionVariationsBadRequest  %+v", 400, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseDocumentVersionVariationsUnauthorized creates a GetKnowledgeKnowledgebaseDocumentVersionVariationsUnauthorized with default headers values
func NewGetKnowledgeKnowledgebaseDocumentVersionVariationsUnauthorized() *GetKnowledgeKnowledgebaseDocumentVersionVariationsUnauthorized {
	return &GetKnowledgeKnowledgebaseDocumentVersionVariationsUnauthorized{}
}

/*
GetKnowledgeKnowledgebaseDocumentVersionVariationsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetKnowledgeKnowledgebaseDocumentVersionVariationsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase document version variations unauthorized response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase document version variations unauthorized response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase document version variations unauthorized response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase document version variations unauthorized response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase document version variations unauthorized response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations][%d] getKnowledgeKnowledgebaseDocumentVersionVariationsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations][%d] getKnowledgeKnowledgebaseDocumentVersionVariationsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseDocumentVersionVariationsForbidden creates a GetKnowledgeKnowledgebaseDocumentVersionVariationsForbidden with default headers values
func NewGetKnowledgeKnowledgebaseDocumentVersionVariationsForbidden() *GetKnowledgeKnowledgebaseDocumentVersionVariationsForbidden {
	return &GetKnowledgeKnowledgebaseDocumentVersionVariationsForbidden{}
}

/*
GetKnowledgeKnowledgebaseDocumentVersionVariationsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetKnowledgeKnowledgebaseDocumentVersionVariationsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase document version variations forbidden response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase document version variations forbidden response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase document version variations forbidden response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase document version variations forbidden response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase document version variations forbidden response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations][%d] getKnowledgeKnowledgebaseDocumentVersionVariationsForbidden  %+v", 403, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations][%d] getKnowledgeKnowledgebaseDocumentVersionVariationsForbidden  %+v", 403, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseDocumentVersionVariationsNotFound creates a GetKnowledgeKnowledgebaseDocumentVersionVariationsNotFound with default headers values
func NewGetKnowledgeKnowledgebaseDocumentVersionVariationsNotFound() *GetKnowledgeKnowledgebaseDocumentVersionVariationsNotFound {
	return &GetKnowledgeKnowledgebaseDocumentVersionVariationsNotFound{}
}

/*
GetKnowledgeKnowledgebaseDocumentVersionVariationsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetKnowledgeKnowledgebaseDocumentVersionVariationsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase document version variations not found response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase document version variations not found response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase document version variations not found response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase document version variations not found response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase document version variations not found response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations][%d] getKnowledgeKnowledgebaseDocumentVersionVariationsNotFound  %+v", 404, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations][%d] getKnowledgeKnowledgebaseDocumentVersionVariationsNotFound  %+v", 404, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseDocumentVersionVariationsRequestTimeout creates a GetKnowledgeKnowledgebaseDocumentVersionVariationsRequestTimeout with default headers values
func NewGetKnowledgeKnowledgebaseDocumentVersionVariationsRequestTimeout() *GetKnowledgeKnowledgebaseDocumentVersionVariationsRequestTimeout {
	return &GetKnowledgeKnowledgebaseDocumentVersionVariationsRequestTimeout{}
}

/*
GetKnowledgeKnowledgebaseDocumentVersionVariationsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetKnowledgeKnowledgebaseDocumentVersionVariationsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase document version variations request timeout response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase document version variations request timeout response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase document version variations request timeout response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase document version variations request timeout response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase document version variations request timeout response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations][%d] getKnowledgeKnowledgebaseDocumentVersionVariationsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations][%d] getKnowledgeKnowledgebaseDocumentVersionVariationsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseDocumentVersionVariationsRequestEntityTooLarge creates a GetKnowledgeKnowledgebaseDocumentVersionVariationsRequestEntityTooLarge with default headers values
func NewGetKnowledgeKnowledgebaseDocumentVersionVariationsRequestEntityTooLarge() *GetKnowledgeKnowledgebaseDocumentVersionVariationsRequestEntityTooLarge {
	return &GetKnowledgeKnowledgebaseDocumentVersionVariationsRequestEntityTooLarge{}
}

/*
GetKnowledgeKnowledgebaseDocumentVersionVariationsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetKnowledgeKnowledgebaseDocumentVersionVariationsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase document version variations request entity too large response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase document version variations request entity too large response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase document version variations request entity too large response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase document version variations request entity too large response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase document version variations request entity too large response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations][%d] getKnowledgeKnowledgebaseDocumentVersionVariationsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations][%d] getKnowledgeKnowledgebaseDocumentVersionVariationsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseDocumentVersionVariationsUnsupportedMediaType creates a GetKnowledgeKnowledgebaseDocumentVersionVariationsUnsupportedMediaType with default headers values
func NewGetKnowledgeKnowledgebaseDocumentVersionVariationsUnsupportedMediaType() *GetKnowledgeKnowledgebaseDocumentVersionVariationsUnsupportedMediaType {
	return &GetKnowledgeKnowledgebaseDocumentVersionVariationsUnsupportedMediaType{}
}

/*
GetKnowledgeKnowledgebaseDocumentVersionVariationsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetKnowledgeKnowledgebaseDocumentVersionVariationsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase document version variations unsupported media type response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase document version variations unsupported media type response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase document version variations unsupported media type response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase document version variations unsupported media type response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase document version variations unsupported media type response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations][%d] getKnowledgeKnowledgebaseDocumentVersionVariationsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations][%d] getKnowledgeKnowledgebaseDocumentVersionVariationsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseDocumentVersionVariationsTooManyRequests creates a GetKnowledgeKnowledgebaseDocumentVersionVariationsTooManyRequests with default headers values
func NewGetKnowledgeKnowledgebaseDocumentVersionVariationsTooManyRequests() *GetKnowledgeKnowledgebaseDocumentVersionVariationsTooManyRequests {
	return &GetKnowledgeKnowledgebaseDocumentVersionVariationsTooManyRequests{}
}

/*
GetKnowledgeKnowledgebaseDocumentVersionVariationsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetKnowledgeKnowledgebaseDocumentVersionVariationsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase document version variations too many requests response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase document version variations too many requests response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase document version variations too many requests response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knowledge knowledgebase document version variations too many requests response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get knowledge knowledgebase document version variations too many requests response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations][%d] getKnowledgeKnowledgebaseDocumentVersionVariationsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations][%d] getKnowledgeKnowledgebaseDocumentVersionVariationsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseDocumentVersionVariationsInternalServerError creates a GetKnowledgeKnowledgebaseDocumentVersionVariationsInternalServerError with default headers values
func NewGetKnowledgeKnowledgebaseDocumentVersionVariationsInternalServerError() *GetKnowledgeKnowledgebaseDocumentVersionVariationsInternalServerError {
	return &GetKnowledgeKnowledgebaseDocumentVersionVariationsInternalServerError{}
}

/*
GetKnowledgeKnowledgebaseDocumentVersionVariationsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetKnowledgeKnowledgebaseDocumentVersionVariationsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase document version variations internal server error response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase document version variations internal server error response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase document version variations internal server error response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get knowledge knowledgebase document version variations internal server error response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get knowledge knowledgebase document version variations internal server error response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations][%d] getKnowledgeKnowledgebaseDocumentVersionVariationsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations][%d] getKnowledgeKnowledgebaseDocumentVersionVariationsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseDocumentVersionVariationsServiceUnavailable creates a GetKnowledgeKnowledgebaseDocumentVersionVariationsServiceUnavailable with default headers values
func NewGetKnowledgeKnowledgebaseDocumentVersionVariationsServiceUnavailable() *GetKnowledgeKnowledgebaseDocumentVersionVariationsServiceUnavailable {
	return &GetKnowledgeKnowledgebaseDocumentVersionVariationsServiceUnavailable{}
}

/*
GetKnowledgeKnowledgebaseDocumentVersionVariationsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetKnowledgeKnowledgebaseDocumentVersionVariationsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase document version variations service unavailable response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase document version variations service unavailable response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase document version variations service unavailable response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get knowledge knowledgebase document version variations service unavailable response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get knowledge knowledgebase document version variations service unavailable response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations][%d] getKnowledgeKnowledgebaseDocumentVersionVariationsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations][%d] getKnowledgeKnowledgebaseDocumentVersionVariationsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnowledgeKnowledgebaseDocumentVersionVariationsGatewayTimeout creates a GetKnowledgeKnowledgebaseDocumentVersionVariationsGatewayTimeout with default headers values
func NewGetKnowledgeKnowledgebaseDocumentVersionVariationsGatewayTimeout() *GetKnowledgeKnowledgebaseDocumentVersionVariationsGatewayTimeout {
	return &GetKnowledgeKnowledgebaseDocumentVersionVariationsGatewayTimeout{}
}

/*
GetKnowledgeKnowledgebaseDocumentVersionVariationsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetKnowledgeKnowledgebaseDocumentVersionVariationsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get knowledge knowledgebase document version variations gateway timeout response has a 2xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knowledge knowledgebase document version variations gateway timeout response has a 3xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knowledge knowledgebase document version variations gateway timeout response has a 4xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get knowledge knowledgebase document version variations gateway timeout response has a 5xx status code
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get knowledge knowledgebase document version variations gateway timeout response a status code equal to that given
func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations][%d] getKnowledgeKnowledgebaseDocumentVersionVariationsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations][%d] getKnowledgeKnowledgebaseDocumentVersionVariationsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetKnowledgeKnowledgebaseDocumentVersionVariationsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
