// Code generated by go-swagger; DO NOT EDIT.

package knowledge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostKnowledgeKnowledgebaseLanguageCategoriesReader is a Reader for the PostKnowledgeKnowledgebaseLanguageCategories structure.
type PostKnowledgeKnowledgebaseLanguageCategoriesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostKnowledgeKnowledgebaseLanguageCategoriesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostKnowledgeKnowledgebaseLanguageCategoriesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostKnowledgeKnowledgebaseLanguageCategoriesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostKnowledgeKnowledgebaseLanguageCategoriesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostKnowledgeKnowledgebaseLanguageCategoriesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostKnowledgeKnowledgebaseLanguageCategoriesRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostKnowledgeKnowledgebaseLanguageCategoriesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostKnowledgeKnowledgebaseLanguageCategoriesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostKnowledgeKnowledgebaseLanguageCategoriesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostKnowledgeKnowledgebaseLanguageCategoriesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostKnowledgeKnowledgebaseLanguageCategoriesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostKnowledgeKnowledgebaseLanguageCategoriesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostKnowledgeKnowledgebaseLanguageCategoriesOK creates a PostKnowledgeKnowledgebaseLanguageCategoriesOK with default headers values
func NewPostKnowledgeKnowledgebaseLanguageCategoriesOK() *PostKnowledgeKnowledgebaseLanguageCategoriesOK {
	return &PostKnowledgeKnowledgebaseLanguageCategoriesOK{}
}

/*
PostKnowledgeKnowledgebaseLanguageCategoriesOK describes a response with status code 200, with default header values.

successful operation
*/
type PostKnowledgeKnowledgebaseLanguageCategoriesOK struct {
	Payload *models.KnowledgeExtendedCategory
}

// IsSuccess returns true when this post knowledge knowledgebase language categories o k response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post knowledge knowledgebase language categories o k response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase language categories o k response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post knowledge knowledgebase language categories o k response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post knowledge knowledgebase language categories o k response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostKnowledgeKnowledgebaseLanguageCategoriesOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories][%d] postKnowledgeKnowledgebaseLanguageCategoriesOK  %+v", 200, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageCategoriesOK) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories][%d] postKnowledgeKnowledgebaseLanguageCategoriesOK  %+v", 200, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageCategoriesOK) GetPayload() *models.KnowledgeExtendedCategory {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseLanguageCategoriesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KnowledgeExtendedCategory)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseLanguageCategoriesBadRequest creates a PostKnowledgeKnowledgebaseLanguageCategoriesBadRequest with default headers values
func NewPostKnowledgeKnowledgebaseLanguageCategoriesBadRequest() *PostKnowledgeKnowledgebaseLanguageCategoriesBadRequest {
	return &PostKnowledgeKnowledgebaseLanguageCategoriesBadRequest{}
}

/*
PostKnowledgeKnowledgebaseLanguageCategoriesBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostKnowledgeKnowledgebaseLanguageCategoriesBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post knowledge knowledgebase language categories bad request response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post knowledge knowledgebase language categories bad request response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase language categories bad request response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post knowledge knowledgebase language categories bad request response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post knowledge knowledgebase language categories bad request response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostKnowledgeKnowledgebaseLanguageCategoriesBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories][%d] postKnowledgeKnowledgebaseLanguageCategoriesBadRequest  %+v", 400, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageCategoriesBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories][%d] postKnowledgeKnowledgebaseLanguageCategoriesBadRequest  %+v", 400, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageCategoriesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseLanguageCategoriesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseLanguageCategoriesUnauthorized creates a PostKnowledgeKnowledgebaseLanguageCategoriesUnauthorized with default headers values
func NewPostKnowledgeKnowledgebaseLanguageCategoriesUnauthorized() *PostKnowledgeKnowledgebaseLanguageCategoriesUnauthorized {
	return &PostKnowledgeKnowledgebaseLanguageCategoriesUnauthorized{}
}

/*
PostKnowledgeKnowledgebaseLanguageCategoriesUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostKnowledgeKnowledgebaseLanguageCategoriesUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post knowledge knowledgebase language categories unauthorized response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post knowledge knowledgebase language categories unauthorized response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase language categories unauthorized response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post knowledge knowledgebase language categories unauthorized response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post knowledge knowledgebase language categories unauthorized response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostKnowledgeKnowledgebaseLanguageCategoriesUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories][%d] postKnowledgeKnowledgebaseLanguageCategoriesUnauthorized  %+v", 401, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageCategoriesUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories][%d] postKnowledgeKnowledgebaseLanguageCategoriesUnauthorized  %+v", 401, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageCategoriesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseLanguageCategoriesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseLanguageCategoriesForbidden creates a PostKnowledgeKnowledgebaseLanguageCategoriesForbidden with default headers values
func NewPostKnowledgeKnowledgebaseLanguageCategoriesForbidden() *PostKnowledgeKnowledgebaseLanguageCategoriesForbidden {
	return &PostKnowledgeKnowledgebaseLanguageCategoriesForbidden{}
}

/*
PostKnowledgeKnowledgebaseLanguageCategoriesForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostKnowledgeKnowledgebaseLanguageCategoriesForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post knowledge knowledgebase language categories forbidden response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post knowledge knowledgebase language categories forbidden response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase language categories forbidden response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post knowledge knowledgebase language categories forbidden response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post knowledge knowledgebase language categories forbidden response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostKnowledgeKnowledgebaseLanguageCategoriesForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories][%d] postKnowledgeKnowledgebaseLanguageCategoriesForbidden  %+v", 403, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageCategoriesForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories][%d] postKnowledgeKnowledgebaseLanguageCategoriesForbidden  %+v", 403, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageCategoriesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseLanguageCategoriesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseLanguageCategoriesNotFound creates a PostKnowledgeKnowledgebaseLanguageCategoriesNotFound with default headers values
func NewPostKnowledgeKnowledgebaseLanguageCategoriesNotFound() *PostKnowledgeKnowledgebaseLanguageCategoriesNotFound {
	return &PostKnowledgeKnowledgebaseLanguageCategoriesNotFound{}
}

/*
PostKnowledgeKnowledgebaseLanguageCategoriesNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostKnowledgeKnowledgebaseLanguageCategoriesNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post knowledge knowledgebase language categories not found response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post knowledge knowledgebase language categories not found response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase language categories not found response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post knowledge knowledgebase language categories not found response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post knowledge knowledgebase language categories not found response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostKnowledgeKnowledgebaseLanguageCategoriesNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories][%d] postKnowledgeKnowledgebaseLanguageCategoriesNotFound  %+v", 404, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageCategoriesNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories][%d] postKnowledgeKnowledgebaseLanguageCategoriesNotFound  %+v", 404, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageCategoriesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseLanguageCategoriesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseLanguageCategoriesRequestTimeout creates a PostKnowledgeKnowledgebaseLanguageCategoriesRequestTimeout with default headers values
func NewPostKnowledgeKnowledgebaseLanguageCategoriesRequestTimeout() *PostKnowledgeKnowledgebaseLanguageCategoriesRequestTimeout {
	return &PostKnowledgeKnowledgebaseLanguageCategoriesRequestTimeout{}
}

/*
PostKnowledgeKnowledgebaseLanguageCategoriesRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostKnowledgeKnowledgebaseLanguageCategoriesRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post knowledge knowledgebase language categories request timeout response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post knowledge knowledgebase language categories request timeout response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase language categories request timeout response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post knowledge knowledgebase language categories request timeout response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post knowledge knowledgebase language categories request timeout response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostKnowledgeKnowledgebaseLanguageCategoriesRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories][%d] postKnowledgeKnowledgebaseLanguageCategoriesRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageCategoriesRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories][%d] postKnowledgeKnowledgebaseLanguageCategoriesRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageCategoriesRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseLanguageCategoriesRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseLanguageCategoriesRequestEntityTooLarge creates a PostKnowledgeKnowledgebaseLanguageCategoriesRequestEntityTooLarge with default headers values
func NewPostKnowledgeKnowledgebaseLanguageCategoriesRequestEntityTooLarge() *PostKnowledgeKnowledgebaseLanguageCategoriesRequestEntityTooLarge {
	return &PostKnowledgeKnowledgebaseLanguageCategoriesRequestEntityTooLarge{}
}

/*
PostKnowledgeKnowledgebaseLanguageCategoriesRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PostKnowledgeKnowledgebaseLanguageCategoriesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post knowledge knowledgebase language categories request entity too large response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post knowledge knowledgebase language categories request entity too large response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase language categories request entity too large response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post knowledge knowledgebase language categories request entity too large response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post knowledge knowledgebase language categories request entity too large response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostKnowledgeKnowledgebaseLanguageCategoriesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories][%d] postKnowledgeKnowledgebaseLanguageCategoriesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageCategoriesRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories][%d] postKnowledgeKnowledgebaseLanguageCategoriesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageCategoriesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseLanguageCategoriesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseLanguageCategoriesUnsupportedMediaType creates a PostKnowledgeKnowledgebaseLanguageCategoriesUnsupportedMediaType with default headers values
func NewPostKnowledgeKnowledgebaseLanguageCategoriesUnsupportedMediaType() *PostKnowledgeKnowledgebaseLanguageCategoriesUnsupportedMediaType {
	return &PostKnowledgeKnowledgebaseLanguageCategoriesUnsupportedMediaType{}
}

/*
PostKnowledgeKnowledgebaseLanguageCategoriesUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostKnowledgeKnowledgebaseLanguageCategoriesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post knowledge knowledgebase language categories unsupported media type response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post knowledge knowledgebase language categories unsupported media type response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase language categories unsupported media type response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post knowledge knowledgebase language categories unsupported media type response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post knowledge knowledgebase language categories unsupported media type response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostKnowledgeKnowledgebaseLanguageCategoriesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories][%d] postKnowledgeKnowledgebaseLanguageCategoriesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageCategoriesUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories][%d] postKnowledgeKnowledgebaseLanguageCategoriesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageCategoriesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseLanguageCategoriesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseLanguageCategoriesTooManyRequests creates a PostKnowledgeKnowledgebaseLanguageCategoriesTooManyRequests with default headers values
func NewPostKnowledgeKnowledgebaseLanguageCategoriesTooManyRequests() *PostKnowledgeKnowledgebaseLanguageCategoriesTooManyRequests {
	return &PostKnowledgeKnowledgebaseLanguageCategoriesTooManyRequests{}
}

/*
PostKnowledgeKnowledgebaseLanguageCategoriesTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostKnowledgeKnowledgebaseLanguageCategoriesTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post knowledge knowledgebase language categories too many requests response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post knowledge knowledgebase language categories too many requests response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase language categories too many requests response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post knowledge knowledgebase language categories too many requests response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post knowledge knowledgebase language categories too many requests response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostKnowledgeKnowledgebaseLanguageCategoriesTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories][%d] postKnowledgeKnowledgebaseLanguageCategoriesTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageCategoriesTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories][%d] postKnowledgeKnowledgebaseLanguageCategoriesTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageCategoriesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseLanguageCategoriesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseLanguageCategoriesInternalServerError creates a PostKnowledgeKnowledgebaseLanguageCategoriesInternalServerError with default headers values
func NewPostKnowledgeKnowledgebaseLanguageCategoriesInternalServerError() *PostKnowledgeKnowledgebaseLanguageCategoriesInternalServerError {
	return &PostKnowledgeKnowledgebaseLanguageCategoriesInternalServerError{}
}

/*
PostKnowledgeKnowledgebaseLanguageCategoriesInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostKnowledgeKnowledgebaseLanguageCategoriesInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post knowledge knowledgebase language categories internal server error response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post knowledge knowledgebase language categories internal server error response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase language categories internal server error response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post knowledge knowledgebase language categories internal server error response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post knowledge knowledgebase language categories internal server error response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostKnowledgeKnowledgebaseLanguageCategoriesInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories][%d] postKnowledgeKnowledgebaseLanguageCategoriesInternalServerError  %+v", 500, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageCategoriesInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories][%d] postKnowledgeKnowledgebaseLanguageCategoriesInternalServerError  %+v", 500, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageCategoriesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseLanguageCategoriesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseLanguageCategoriesServiceUnavailable creates a PostKnowledgeKnowledgebaseLanguageCategoriesServiceUnavailable with default headers values
func NewPostKnowledgeKnowledgebaseLanguageCategoriesServiceUnavailable() *PostKnowledgeKnowledgebaseLanguageCategoriesServiceUnavailable {
	return &PostKnowledgeKnowledgebaseLanguageCategoriesServiceUnavailable{}
}

/*
PostKnowledgeKnowledgebaseLanguageCategoriesServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostKnowledgeKnowledgebaseLanguageCategoriesServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post knowledge knowledgebase language categories service unavailable response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post knowledge knowledgebase language categories service unavailable response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase language categories service unavailable response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post knowledge knowledgebase language categories service unavailable response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post knowledge knowledgebase language categories service unavailable response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostKnowledgeKnowledgebaseLanguageCategoriesServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories][%d] postKnowledgeKnowledgebaseLanguageCategoriesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageCategoriesServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories][%d] postKnowledgeKnowledgebaseLanguageCategoriesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageCategoriesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseLanguageCategoriesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKnowledgeKnowledgebaseLanguageCategoriesGatewayTimeout creates a PostKnowledgeKnowledgebaseLanguageCategoriesGatewayTimeout with default headers values
func NewPostKnowledgeKnowledgebaseLanguageCategoriesGatewayTimeout() *PostKnowledgeKnowledgebaseLanguageCategoriesGatewayTimeout {
	return &PostKnowledgeKnowledgebaseLanguageCategoriesGatewayTimeout{}
}

/*
PostKnowledgeKnowledgebaseLanguageCategoriesGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostKnowledgeKnowledgebaseLanguageCategoriesGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post knowledge knowledgebase language categories gateway timeout response has a 2xx status code
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post knowledge knowledgebase language categories gateway timeout response has a 3xx status code
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post knowledge knowledgebase language categories gateway timeout response has a 4xx status code
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post knowledge knowledgebase language categories gateway timeout response has a 5xx status code
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post knowledge knowledgebase language categories gateway timeout response a status code equal to that given
func (o *PostKnowledgeKnowledgebaseLanguageCategoriesGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostKnowledgeKnowledgebaseLanguageCategoriesGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories][%d] postKnowledgeKnowledgebaseLanguageCategoriesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageCategoriesGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories][%d] postKnowledgeKnowledgebaseLanguageCategoriesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostKnowledgeKnowledgebaseLanguageCategoriesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostKnowledgeKnowledgebaseLanguageCategoriesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
