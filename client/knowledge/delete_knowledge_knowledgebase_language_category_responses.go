// Code generated by go-swagger; DO NOT EDIT.

package knowledge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// DeleteKnowledgeKnowledgebaseLanguageCategoryReader is a Reader for the DeleteKnowledgeKnowledgebaseLanguageCategory structure.
type DeleteKnowledgeKnowledgebaseLanguageCategoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteKnowledgeKnowledgebaseLanguageCategoryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewDeleteKnowledgeKnowledgebaseLanguageCategoryNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteKnowledgeKnowledgebaseLanguageCategoryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteKnowledgeKnowledgebaseLanguageCategoryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteKnowledgeKnowledgebaseLanguageCategoryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteKnowledgeKnowledgebaseLanguageCategoryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewDeleteKnowledgeKnowledgebaseLanguageCategoryRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewDeleteKnowledgeKnowledgebaseLanguageCategoryRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDeleteKnowledgeKnowledgebaseLanguageCategoryUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteKnowledgeKnowledgebaseLanguageCategoryTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteKnowledgeKnowledgebaseLanguageCategoryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteKnowledgeKnowledgebaseLanguageCategoryServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteKnowledgeKnowledgebaseLanguageCategoryGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteKnowledgeKnowledgebaseLanguageCategoryOK creates a DeleteKnowledgeKnowledgebaseLanguageCategoryOK with default headers values
func NewDeleteKnowledgeKnowledgebaseLanguageCategoryOK() *DeleteKnowledgeKnowledgebaseLanguageCategoryOK {
	return &DeleteKnowledgeKnowledgebaseLanguageCategoryOK{}
}

/*
DeleteKnowledgeKnowledgebaseLanguageCategoryOK describes a response with status code 200, with default header values.

successful operation
*/
type DeleteKnowledgeKnowledgebaseLanguageCategoryOK struct {
	Payload *models.KnowledgeCategory
}

// IsSuccess returns true when this delete knowledge knowledgebase language category o k response has a 2xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete knowledge knowledgebase language category o k response has a 3xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete knowledge knowledgebase language category o k response has a 4xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete knowledge knowledgebase language category o k response has a 5xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete knowledge knowledgebase language category o k response a status code equal to that given
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryOK) IsCode(code int) bool {
	return code == 200
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories/{categoryId}][%d] deleteKnowledgeKnowledgebaseLanguageCategoryOK  %+v", 200, o.Payload)
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryOK) String() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories/{categoryId}][%d] deleteKnowledgeKnowledgebaseLanguageCategoryOK  %+v", 200, o.Payload)
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryOK) GetPayload() *models.KnowledgeCategory {
	return o.Payload
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KnowledgeCategory)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteKnowledgeKnowledgebaseLanguageCategoryNoContent creates a DeleteKnowledgeKnowledgebaseLanguageCategoryNoContent with default headers values
func NewDeleteKnowledgeKnowledgebaseLanguageCategoryNoContent() *DeleteKnowledgeKnowledgebaseLanguageCategoryNoContent {
	return &DeleteKnowledgeKnowledgebaseLanguageCategoryNoContent{}
}

/*
DeleteKnowledgeKnowledgebaseLanguageCategoryNoContent describes a response with status code 204, with default header values.

Category deleted
*/
type DeleteKnowledgeKnowledgebaseLanguageCategoryNoContent struct {
}

// IsSuccess returns true when this delete knowledge knowledgebase language category no content response has a 2xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete knowledge knowledgebase language category no content response has a 3xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete knowledge knowledgebase language category no content response has a 4xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete knowledge knowledgebase language category no content response has a 5xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete knowledge knowledgebase language category no content response a status code equal to that given
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories/{categoryId}][%d] deleteKnowledgeKnowledgebaseLanguageCategoryNoContent ", 204)
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryNoContent) String() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories/{categoryId}][%d] deleteKnowledgeKnowledgebaseLanguageCategoryNoContent ", 204)
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteKnowledgeKnowledgebaseLanguageCategoryBadRequest creates a DeleteKnowledgeKnowledgebaseLanguageCategoryBadRequest with default headers values
func NewDeleteKnowledgeKnowledgebaseLanguageCategoryBadRequest() *DeleteKnowledgeKnowledgebaseLanguageCategoryBadRequest {
	return &DeleteKnowledgeKnowledgebaseLanguageCategoryBadRequest{}
}

/*
DeleteKnowledgeKnowledgebaseLanguageCategoryBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type DeleteKnowledgeKnowledgebaseLanguageCategoryBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete knowledge knowledgebase language category bad request response has a 2xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete knowledge knowledgebase language category bad request response has a 3xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete knowledge knowledgebase language category bad request response has a 4xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete knowledge knowledgebase language category bad request response has a 5xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete knowledge knowledgebase language category bad request response a status code equal to that given
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories/{categoryId}][%d] deleteKnowledgeKnowledgebaseLanguageCategoryBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories/{categoryId}][%d] deleteKnowledgeKnowledgebaseLanguageCategoryBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteKnowledgeKnowledgebaseLanguageCategoryUnauthorized creates a DeleteKnowledgeKnowledgebaseLanguageCategoryUnauthorized with default headers values
func NewDeleteKnowledgeKnowledgebaseLanguageCategoryUnauthorized() *DeleteKnowledgeKnowledgebaseLanguageCategoryUnauthorized {
	return &DeleteKnowledgeKnowledgebaseLanguageCategoryUnauthorized{}
}

/*
DeleteKnowledgeKnowledgebaseLanguageCategoryUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type DeleteKnowledgeKnowledgebaseLanguageCategoryUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete knowledge knowledgebase language category unauthorized response has a 2xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete knowledge knowledgebase language category unauthorized response has a 3xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete knowledge knowledgebase language category unauthorized response has a 4xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete knowledge knowledgebase language category unauthorized response has a 5xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete knowledge knowledgebase language category unauthorized response a status code equal to that given
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories/{categoryId}][%d] deleteKnowledgeKnowledgebaseLanguageCategoryUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories/{categoryId}][%d] deleteKnowledgeKnowledgebaseLanguageCategoryUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteKnowledgeKnowledgebaseLanguageCategoryForbidden creates a DeleteKnowledgeKnowledgebaseLanguageCategoryForbidden with default headers values
func NewDeleteKnowledgeKnowledgebaseLanguageCategoryForbidden() *DeleteKnowledgeKnowledgebaseLanguageCategoryForbidden {
	return &DeleteKnowledgeKnowledgebaseLanguageCategoryForbidden{}
}

/*
DeleteKnowledgeKnowledgebaseLanguageCategoryForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type DeleteKnowledgeKnowledgebaseLanguageCategoryForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete knowledge knowledgebase language category forbidden response has a 2xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete knowledge knowledgebase language category forbidden response has a 3xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete knowledge knowledgebase language category forbidden response has a 4xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete knowledge knowledgebase language category forbidden response has a 5xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete knowledge knowledgebase language category forbidden response a status code equal to that given
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories/{categoryId}][%d] deleteKnowledgeKnowledgebaseLanguageCategoryForbidden  %+v", 403, o.Payload)
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories/{categoryId}][%d] deleteKnowledgeKnowledgebaseLanguageCategoryForbidden  %+v", 403, o.Payload)
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteKnowledgeKnowledgebaseLanguageCategoryNotFound creates a DeleteKnowledgeKnowledgebaseLanguageCategoryNotFound with default headers values
func NewDeleteKnowledgeKnowledgebaseLanguageCategoryNotFound() *DeleteKnowledgeKnowledgebaseLanguageCategoryNotFound {
	return &DeleteKnowledgeKnowledgebaseLanguageCategoryNotFound{}
}

/*
DeleteKnowledgeKnowledgebaseLanguageCategoryNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type DeleteKnowledgeKnowledgebaseLanguageCategoryNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete knowledge knowledgebase language category not found response has a 2xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete knowledge knowledgebase language category not found response has a 3xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete knowledge knowledgebase language category not found response has a 4xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete knowledge knowledgebase language category not found response has a 5xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete knowledge knowledgebase language category not found response a status code equal to that given
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories/{categoryId}][%d] deleteKnowledgeKnowledgebaseLanguageCategoryNotFound  %+v", 404, o.Payload)
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories/{categoryId}][%d] deleteKnowledgeKnowledgebaseLanguageCategoryNotFound  %+v", 404, o.Payload)
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteKnowledgeKnowledgebaseLanguageCategoryRequestTimeout creates a DeleteKnowledgeKnowledgebaseLanguageCategoryRequestTimeout with default headers values
func NewDeleteKnowledgeKnowledgebaseLanguageCategoryRequestTimeout() *DeleteKnowledgeKnowledgebaseLanguageCategoryRequestTimeout {
	return &DeleteKnowledgeKnowledgebaseLanguageCategoryRequestTimeout{}
}

/*
DeleteKnowledgeKnowledgebaseLanguageCategoryRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type DeleteKnowledgeKnowledgebaseLanguageCategoryRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete knowledge knowledgebase language category request timeout response has a 2xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete knowledge knowledgebase language category request timeout response has a 3xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete knowledge knowledgebase language category request timeout response has a 4xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete knowledge knowledgebase language category request timeout response has a 5xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this delete knowledge knowledgebase language category request timeout response a status code equal to that given
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryRequestTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories/{categoryId}][%d] deleteKnowledgeKnowledgebaseLanguageCategoryRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryRequestTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories/{categoryId}][%d] deleteKnowledgeKnowledgebaseLanguageCategoryRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteKnowledgeKnowledgebaseLanguageCategoryRequestEntityTooLarge creates a DeleteKnowledgeKnowledgebaseLanguageCategoryRequestEntityTooLarge with default headers values
func NewDeleteKnowledgeKnowledgebaseLanguageCategoryRequestEntityTooLarge() *DeleteKnowledgeKnowledgebaseLanguageCategoryRequestEntityTooLarge {
	return &DeleteKnowledgeKnowledgebaseLanguageCategoryRequestEntityTooLarge{}
}

/*
DeleteKnowledgeKnowledgebaseLanguageCategoryRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type DeleteKnowledgeKnowledgebaseLanguageCategoryRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete knowledge knowledgebase language category request entity too large response has a 2xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete knowledge knowledgebase language category request entity too large response has a 3xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete knowledge knowledgebase language category request entity too large response has a 4xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete knowledge knowledgebase language category request entity too large response has a 5xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this delete knowledge knowledgebase language category request entity too large response a status code equal to that given
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories/{categoryId}][%d] deleteKnowledgeKnowledgebaseLanguageCategoryRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories/{categoryId}][%d] deleteKnowledgeKnowledgebaseLanguageCategoryRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteKnowledgeKnowledgebaseLanguageCategoryUnsupportedMediaType creates a DeleteKnowledgeKnowledgebaseLanguageCategoryUnsupportedMediaType with default headers values
func NewDeleteKnowledgeKnowledgebaseLanguageCategoryUnsupportedMediaType() *DeleteKnowledgeKnowledgebaseLanguageCategoryUnsupportedMediaType {
	return &DeleteKnowledgeKnowledgebaseLanguageCategoryUnsupportedMediaType{}
}

/*
DeleteKnowledgeKnowledgebaseLanguageCategoryUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type DeleteKnowledgeKnowledgebaseLanguageCategoryUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete knowledge knowledgebase language category unsupported media type response has a 2xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete knowledge knowledgebase language category unsupported media type response has a 3xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete knowledge knowledgebase language category unsupported media type response has a 4xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete knowledge knowledgebase language category unsupported media type response has a 5xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this delete knowledge knowledgebase language category unsupported media type response a status code equal to that given
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories/{categoryId}][%d] deleteKnowledgeKnowledgebaseLanguageCategoryUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryUnsupportedMediaType) String() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories/{categoryId}][%d] deleteKnowledgeKnowledgebaseLanguageCategoryUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteKnowledgeKnowledgebaseLanguageCategoryTooManyRequests creates a DeleteKnowledgeKnowledgebaseLanguageCategoryTooManyRequests with default headers values
func NewDeleteKnowledgeKnowledgebaseLanguageCategoryTooManyRequests() *DeleteKnowledgeKnowledgebaseLanguageCategoryTooManyRequests {
	return &DeleteKnowledgeKnowledgebaseLanguageCategoryTooManyRequests{}
}

/*
DeleteKnowledgeKnowledgebaseLanguageCategoryTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type DeleteKnowledgeKnowledgebaseLanguageCategoryTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete knowledge knowledgebase language category too many requests response has a 2xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete knowledge knowledgebase language category too many requests response has a 3xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete knowledge knowledgebase language category too many requests response has a 4xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete knowledge knowledgebase language category too many requests response has a 5xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete knowledge knowledgebase language category too many requests response a status code equal to that given
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories/{categoryId}][%d] deleteKnowledgeKnowledgebaseLanguageCategoryTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories/{categoryId}][%d] deleteKnowledgeKnowledgebaseLanguageCategoryTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteKnowledgeKnowledgebaseLanguageCategoryInternalServerError creates a DeleteKnowledgeKnowledgebaseLanguageCategoryInternalServerError with default headers values
func NewDeleteKnowledgeKnowledgebaseLanguageCategoryInternalServerError() *DeleteKnowledgeKnowledgebaseLanguageCategoryInternalServerError {
	return &DeleteKnowledgeKnowledgebaseLanguageCategoryInternalServerError{}
}

/*
DeleteKnowledgeKnowledgebaseLanguageCategoryInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type DeleteKnowledgeKnowledgebaseLanguageCategoryInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete knowledge knowledgebase language category internal server error response has a 2xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete knowledge knowledgebase language category internal server error response has a 3xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete knowledge knowledgebase language category internal server error response has a 4xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete knowledge knowledgebase language category internal server error response has a 5xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete knowledge knowledgebase language category internal server error response a status code equal to that given
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories/{categoryId}][%d] deleteKnowledgeKnowledgebaseLanguageCategoryInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories/{categoryId}][%d] deleteKnowledgeKnowledgebaseLanguageCategoryInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteKnowledgeKnowledgebaseLanguageCategoryServiceUnavailable creates a DeleteKnowledgeKnowledgebaseLanguageCategoryServiceUnavailable with default headers values
func NewDeleteKnowledgeKnowledgebaseLanguageCategoryServiceUnavailable() *DeleteKnowledgeKnowledgebaseLanguageCategoryServiceUnavailable {
	return &DeleteKnowledgeKnowledgebaseLanguageCategoryServiceUnavailable{}
}

/*
DeleteKnowledgeKnowledgebaseLanguageCategoryServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type DeleteKnowledgeKnowledgebaseLanguageCategoryServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete knowledge knowledgebase language category service unavailable response has a 2xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete knowledge knowledgebase language category service unavailable response has a 3xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete knowledge knowledgebase language category service unavailable response has a 4xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete knowledge knowledgebase language category service unavailable response has a 5xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this delete knowledge knowledgebase language category service unavailable response a status code equal to that given
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories/{categoryId}][%d] deleteKnowledgeKnowledgebaseLanguageCategoryServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryServiceUnavailable) String() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories/{categoryId}][%d] deleteKnowledgeKnowledgebaseLanguageCategoryServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteKnowledgeKnowledgebaseLanguageCategoryGatewayTimeout creates a DeleteKnowledgeKnowledgebaseLanguageCategoryGatewayTimeout with default headers values
func NewDeleteKnowledgeKnowledgebaseLanguageCategoryGatewayTimeout() *DeleteKnowledgeKnowledgebaseLanguageCategoryGatewayTimeout {
	return &DeleteKnowledgeKnowledgebaseLanguageCategoryGatewayTimeout{}
}

/*
DeleteKnowledgeKnowledgebaseLanguageCategoryGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type DeleteKnowledgeKnowledgebaseLanguageCategoryGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete knowledge knowledgebase language category gateway timeout response has a 2xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete knowledge knowledgebase language category gateway timeout response has a 3xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete knowledge knowledgebase language category gateway timeout response has a 4xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete knowledge knowledgebase language category gateway timeout response has a 5xx status code
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this delete knowledge knowledgebase language category gateway timeout response a status code equal to that given
func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories/{categoryId}][%d] deleteKnowledgeKnowledgebaseLanguageCategoryGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryGatewayTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories/{categoryId}][%d] deleteKnowledgeKnowledgebaseLanguageCategoryGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteKnowledgeKnowledgebaseLanguageCategoryGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
