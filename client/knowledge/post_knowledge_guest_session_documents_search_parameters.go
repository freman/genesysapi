// Code generated by go-swagger; DO NOT EDIT.

package knowledge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/freman/genesysapi/models"
)

// NewPostKnowledgeGuestSessionDocumentsSearchParams creates a new PostKnowledgeGuestSessionDocumentsSearchParams object
// with the default values initialized.
func NewPostKnowledgeGuestSessionDocumentsSearchParams() *PostKnowledgeGuestSessionDocumentsSearchParams {
	var ()
	return &PostKnowledgeGuestSessionDocumentsSearchParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostKnowledgeGuestSessionDocumentsSearchParamsWithTimeout creates a new PostKnowledgeGuestSessionDocumentsSearchParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostKnowledgeGuestSessionDocumentsSearchParamsWithTimeout(timeout time.Duration) *PostKnowledgeGuestSessionDocumentsSearchParams {
	var ()
	return &PostKnowledgeGuestSessionDocumentsSearchParams{

		timeout: timeout,
	}
}

// NewPostKnowledgeGuestSessionDocumentsSearchParamsWithContext creates a new PostKnowledgeGuestSessionDocumentsSearchParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostKnowledgeGuestSessionDocumentsSearchParamsWithContext(ctx context.Context) *PostKnowledgeGuestSessionDocumentsSearchParams {
	var ()
	return &PostKnowledgeGuestSessionDocumentsSearchParams{

		Context: ctx,
	}
}

// NewPostKnowledgeGuestSessionDocumentsSearchParamsWithHTTPClient creates a new PostKnowledgeGuestSessionDocumentsSearchParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostKnowledgeGuestSessionDocumentsSearchParamsWithHTTPClient(client *http.Client) *PostKnowledgeGuestSessionDocumentsSearchParams {
	var ()
	return &PostKnowledgeGuestSessionDocumentsSearchParams{
		HTTPClient: client,
	}
}

/*PostKnowledgeGuestSessionDocumentsSearchParams contains all the parameters to send to the API endpoint
for the post knowledge guest session documents search operation typically these are written to a http.Request
*/
type PostKnowledgeGuestSessionDocumentsSearchParams struct {

	/*Body*/
	Body *models.KnowledgeDocumentGuestSearchRequest
	/*Expand
	  Fields, if any, to expand for each document in the search result matching the query.

	*/
	Expand []string
	/*SessionID
	  Knowledge guest session ID.

	*/
	SessionID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post knowledge guest session documents search params
func (o *PostKnowledgeGuestSessionDocumentsSearchParams) WithTimeout(timeout time.Duration) *PostKnowledgeGuestSessionDocumentsSearchParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post knowledge guest session documents search params
func (o *PostKnowledgeGuestSessionDocumentsSearchParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post knowledge guest session documents search params
func (o *PostKnowledgeGuestSessionDocumentsSearchParams) WithContext(ctx context.Context) *PostKnowledgeGuestSessionDocumentsSearchParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post knowledge guest session documents search params
func (o *PostKnowledgeGuestSessionDocumentsSearchParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post knowledge guest session documents search params
func (o *PostKnowledgeGuestSessionDocumentsSearchParams) WithHTTPClient(client *http.Client) *PostKnowledgeGuestSessionDocumentsSearchParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post knowledge guest session documents search params
func (o *PostKnowledgeGuestSessionDocumentsSearchParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the post knowledge guest session documents search params
func (o *PostKnowledgeGuestSessionDocumentsSearchParams) WithBody(body *models.KnowledgeDocumentGuestSearchRequest) *PostKnowledgeGuestSessionDocumentsSearchParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the post knowledge guest session documents search params
func (o *PostKnowledgeGuestSessionDocumentsSearchParams) SetBody(body *models.KnowledgeDocumentGuestSearchRequest) {
	o.Body = body
}

// WithExpand adds the expand to the post knowledge guest session documents search params
func (o *PostKnowledgeGuestSessionDocumentsSearchParams) WithExpand(expand []string) *PostKnowledgeGuestSessionDocumentsSearchParams {
	o.SetExpand(expand)
	return o
}

// SetExpand adds the expand to the post knowledge guest session documents search params
func (o *PostKnowledgeGuestSessionDocumentsSearchParams) SetExpand(expand []string) {
	o.Expand = expand
}

// WithSessionID adds the sessionID to the post knowledge guest session documents search params
func (o *PostKnowledgeGuestSessionDocumentsSearchParams) WithSessionID(sessionID string) *PostKnowledgeGuestSessionDocumentsSearchParams {
	o.SetSessionID(sessionID)
	return o
}

// SetSessionID adds the sessionId to the post knowledge guest session documents search params
func (o *PostKnowledgeGuestSessionDocumentsSearchParams) SetSessionID(sessionID string) {
	o.SessionID = sessionID
}

// WriteToRequest writes these params to a swagger request
func (o *PostKnowledgeGuestSessionDocumentsSearchParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	valuesExpand := o.Expand

	joinedExpand := swag.JoinByFormat(valuesExpand, "multi")
	// query array param expand
	if err := r.SetQueryParam("expand", joinedExpand...); err != nil {
		return err
	}

	// path param sessionId
	if err := r.SetPathParam("sessionId", o.SessionID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
