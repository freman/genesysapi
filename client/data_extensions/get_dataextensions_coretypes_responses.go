// Code generated by go-swagger; DO NOT EDIT.

package data_extensions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetDataextensionsCoretypesReader is a Reader for the GetDataextensionsCoretypes structure.
type GetDataextensionsCoretypesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDataextensionsCoretypesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDataextensionsCoretypesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDataextensionsCoretypesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDataextensionsCoretypesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDataextensionsCoretypesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDataextensionsCoretypesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetDataextensionsCoretypesRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetDataextensionsCoretypesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetDataextensionsCoretypesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetDataextensionsCoretypesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDataextensionsCoretypesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetDataextensionsCoretypesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetDataextensionsCoretypesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetDataextensionsCoretypesOK creates a GetDataextensionsCoretypesOK with default headers values
func NewGetDataextensionsCoretypesOK() *GetDataextensionsCoretypesOK {
	return &GetDataextensionsCoretypesOK{}
}

/*
GetDataextensionsCoretypesOK describes a response with status code 200, with default header values.

successful operation
*/
type GetDataextensionsCoretypesOK struct {
	Payload *models.CoretypeListing
}

// IsSuccess returns true when this get dataextensions coretypes o k response has a 2xx status code
func (o *GetDataextensionsCoretypesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get dataextensions coretypes o k response has a 3xx status code
func (o *GetDataextensionsCoretypesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get dataextensions coretypes o k response has a 4xx status code
func (o *GetDataextensionsCoretypesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get dataextensions coretypes o k response has a 5xx status code
func (o *GetDataextensionsCoretypesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get dataextensions coretypes o k response a status code equal to that given
func (o *GetDataextensionsCoretypesOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetDataextensionsCoretypesOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/dataextensions/coretypes][%d] getDataextensionsCoretypesOK  %+v", 200, o.Payload)
}

func (o *GetDataextensionsCoretypesOK) String() string {
	return fmt.Sprintf("[GET /api/v2/dataextensions/coretypes][%d] getDataextensionsCoretypesOK  %+v", 200, o.Payload)
}

func (o *GetDataextensionsCoretypesOK) GetPayload() *models.CoretypeListing {
	return o.Payload
}

func (o *GetDataextensionsCoretypesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoretypeListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDataextensionsCoretypesBadRequest creates a GetDataextensionsCoretypesBadRequest with default headers values
func NewGetDataextensionsCoretypesBadRequest() *GetDataextensionsCoretypesBadRequest {
	return &GetDataextensionsCoretypesBadRequest{}
}

/*
GetDataextensionsCoretypesBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetDataextensionsCoretypesBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get dataextensions coretypes bad request response has a 2xx status code
func (o *GetDataextensionsCoretypesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get dataextensions coretypes bad request response has a 3xx status code
func (o *GetDataextensionsCoretypesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get dataextensions coretypes bad request response has a 4xx status code
func (o *GetDataextensionsCoretypesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get dataextensions coretypes bad request response has a 5xx status code
func (o *GetDataextensionsCoretypesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get dataextensions coretypes bad request response a status code equal to that given
func (o *GetDataextensionsCoretypesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetDataextensionsCoretypesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/dataextensions/coretypes][%d] getDataextensionsCoretypesBadRequest  %+v", 400, o.Payload)
}

func (o *GetDataextensionsCoretypesBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/dataextensions/coretypes][%d] getDataextensionsCoretypesBadRequest  %+v", 400, o.Payload)
}

func (o *GetDataextensionsCoretypesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetDataextensionsCoretypesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDataextensionsCoretypesUnauthorized creates a GetDataextensionsCoretypesUnauthorized with default headers values
func NewGetDataextensionsCoretypesUnauthorized() *GetDataextensionsCoretypesUnauthorized {
	return &GetDataextensionsCoretypesUnauthorized{}
}

/*
GetDataextensionsCoretypesUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetDataextensionsCoretypesUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get dataextensions coretypes unauthorized response has a 2xx status code
func (o *GetDataextensionsCoretypesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get dataextensions coretypes unauthorized response has a 3xx status code
func (o *GetDataextensionsCoretypesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get dataextensions coretypes unauthorized response has a 4xx status code
func (o *GetDataextensionsCoretypesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get dataextensions coretypes unauthorized response has a 5xx status code
func (o *GetDataextensionsCoretypesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get dataextensions coretypes unauthorized response a status code equal to that given
func (o *GetDataextensionsCoretypesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetDataextensionsCoretypesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/dataextensions/coretypes][%d] getDataextensionsCoretypesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetDataextensionsCoretypesUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/dataextensions/coretypes][%d] getDataextensionsCoretypesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetDataextensionsCoretypesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetDataextensionsCoretypesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDataextensionsCoretypesForbidden creates a GetDataextensionsCoretypesForbidden with default headers values
func NewGetDataextensionsCoretypesForbidden() *GetDataextensionsCoretypesForbidden {
	return &GetDataextensionsCoretypesForbidden{}
}

/*
GetDataextensionsCoretypesForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetDataextensionsCoretypesForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get dataextensions coretypes forbidden response has a 2xx status code
func (o *GetDataextensionsCoretypesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get dataextensions coretypes forbidden response has a 3xx status code
func (o *GetDataextensionsCoretypesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get dataextensions coretypes forbidden response has a 4xx status code
func (o *GetDataextensionsCoretypesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get dataextensions coretypes forbidden response has a 5xx status code
func (o *GetDataextensionsCoretypesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get dataextensions coretypes forbidden response a status code equal to that given
func (o *GetDataextensionsCoretypesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetDataextensionsCoretypesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/dataextensions/coretypes][%d] getDataextensionsCoretypesForbidden  %+v", 403, o.Payload)
}

func (o *GetDataextensionsCoretypesForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/dataextensions/coretypes][%d] getDataextensionsCoretypesForbidden  %+v", 403, o.Payload)
}

func (o *GetDataextensionsCoretypesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetDataextensionsCoretypesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDataextensionsCoretypesNotFound creates a GetDataextensionsCoretypesNotFound with default headers values
func NewGetDataextensionsCoretypesNotFound() *GetDataextensionsCoretypesNotFound {
	return &GetDataextensionsCoretypesNotFound{}
}

/*
GetDataextensionsCoretypesNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetDataextensionsCoretypesNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get dataextensions coretypes not found response has a 2xx status code
func (o *GetDataextensionsCoretypesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get dataextensions coretypes not found response has a 3xx status code
func (o *GetDataextensionsCoretypesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get dataextensions coretypes not found response has a 4xx status code
func (o *GetDataextensionsCoretypesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get dataextensions coretypes not found response has a 5xx status code
func (o *GetDataextensionsCoretypesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get dataextensions coretypes not found response a status code equal to that given
func (o *GetDataextensionsCoretypesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetDataextensionsCoretypesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/dataextensions/coretypes][%d] getDataextensionsCoretypesNotFound  %+v", 404, o.Payload)
}

func (o *GetDataextensionsCoretypesNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/dataextensions/coretypes][%d] getDataextensionsCoretypesNotFound  %+v", 404, o.Payload)
}

func (o *GetDataextensionsCoretypesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetDataextensionsCoretypesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDataextensionsCoretypesRequestTimeout creates a GetDataextensionsCoretypesRequestTimeout with default headers values
func NewGetDataextensionsCoretypesRequestTimeout() *GetDataextensionsCoretypesRequestTimeout {
	return &GetDataextensionsCoretypesRequestTimeout{}
}

/*
GetDataextensionsCoretypesRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetDataextensionsCoretypesRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get dataextensions coretypes request timeout response has a 2xx status code
func (o *GetDataextensionsCoretypesRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get dataextensions coretypes request timeout response has a 3xx status code
func (o *GetDataextensionsCoretypesRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get dataextensions coretypes request timeout response has a 4xx status code
func (o *GetDataextensionsCoretypesRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get dataextensions coretypes request timeout response has a 5xx status code
func (o *GetDataextensionsCoretypesRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get dataextensions coretypes request timeout response a status code equal to that given
func (o *GetDataextensionsCoretypesRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetDataextensionsCoretypesRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/dataextensions/coretypes][%d] getDataextensionsCoretypesRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetDataextensionsCoretypesRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/dataextensions/coretypes][%d] getDataextensionsCoretypesRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetDataextensionsCoretypesRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetDataextensionsCoretypesRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDataextensionsCoretypesRequestEntityTooLarge creates a GetDataextensionsCoretypesRequestEntityTooLarge with default headers values
func NewGetDataextensionsCoretypesRequestEntityTooLarge() *GetDataextensionsCoretypesRequestEntityTooLarge {
	return &GetDataextensionsCoretypesRequestEntityTooLarge{}
}

/*
GetDataextensionsCoretypesRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetDataextensionsCoretypesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get dataextensions coretypes request entity too large response has a 2xx status code
func (o *GetDataextensionsCoretypesRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get dataextensions coretypes request entity too large response has a 3xx status code
func (o *GetDataextensionsCoretypesRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get dataextensions coretypes request entity too large response has a 4xx status code
func (o *GetDataextensionsCoretypesRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get dataextensions coretypes request entity too large response has a 5xx status code
func (o *GetDataextensionsCoretypesRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get dataextensions coretypes request entity too large response a status code equal to that given
func (o *GetDataextensionsCoretypesRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetDataextensionsCoretypesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/dataextensions/coretypes][%d] getDataextensionsCoretypesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetDataextensionsCoretypesRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/dataextensions/coretypes][%d] getDataextensionsCoretypesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetDataextensionsCoretypesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetDataextensionsCoretypesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDataextensionsCoretypesUnsupportedMediaType creates a GetDataextensionsCoretypesUnsupportedMediaType with default headers values
func NewGetDataextensionsCoretypesUnsupportedMediaType() *GetDataextensionsCoretypesUnsupportedMediaType {
	return &GetDataextensionsCoretypesUnsupportedMediaType{}
}

/*
GetDataextensionsCoretypesUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetDataextensionsCoretypesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get dataextensions coretypes unsupported media type response has a 2xx status code
func (o *GetDataextensionsCoretypesUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get dataextensions coretypes unsupported media type response has a 3xx status code
func (o *GetDataextensionsCoretypesUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get dataextensions coretypes unsupported media type response has a 4xx status code
func (o *GetDataextensionsCoretypesUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get dataextensions coretypes unsupported media type response has a 5xx status code
func (o *GetDataextensionsCoretypesUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get dataextensions coretypes unsupported media type response a status code equal to that given
func (o *GetDataextensionsCoretypesUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetDataextensionsCoretypesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/dataextensions/coretypes][%d] getDataextensionsCoretypesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetDataextensionsCoretypesUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/dataextensions/coretypes][%d] getDataextensionsCoretypesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetDataextensionsCoretypesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetDataextensionsCoretypesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDataextensionsCoretypesTooManyRequests creates a GetDataextensionsCoretypesTooManyRequests with default headers values
func NewGetDataextensionsCoretypesTooManyRequests() *GetDataextensionsCoretypesTooManyRequests {
	return &GetDataextensionsCoretypesTooManyRequests{}
}

/*
GetDataextensionsCoretypesTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetDataextensionsCoretypesTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get dataextensions coretypes too many requests response has a 2xx status code
func (o *GetDataextensionsCoretypesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get dataextensions coretypes too many requests response has a 3xx status code
func (o *GetDataextensionsCoretypesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get dataextensions coretypes too many requests response has a 4xx status code
func (o *GetDataextensionsCoretypesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get dataextensions coretypes too many requests response has a 5xx status code
func (o *GetDataextensionsCoretypesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get dataextensions coretypes too many requests response a status code equal to that given
func (o *GetDataextensionsCoretypesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetDataextensionsCoretypesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/dataextensions/coretypes][%d] getDataextensionsCoretypesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetDataextensionsCoretypesTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/dataextensions/coretypes][%d] getDataextensionsCoretypesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetDataextensionsCoretypesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetDataextensionsCoretypesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDataextensionsCoretypesInternalServerError creates a GetDataextensionsCoretypesInternalServerError with default headers values
func NewGetDataextensionsCoretypesInternalServerError() *GetDataextensionsCoretypesInternalServerError {
	return &GetDataextensionsCoretypesInternalServerError{}
}

/*
GetDataextensionsCoretypesInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetDataextensionsCoretypesInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get dataextensions coretypes internal server error response has a 2xx status code
func (o *GetDataextensionsCoretypesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get dataextensions coretypes internal server error response has a 3xx status code
func (o *GetDataextensionsCoretypesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get dataextensions coretypes internal server error response has a 4xx status code
func (o *GetDataextensionsCoretypesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get dataextensions coretypes internal server error response has a 5xx status code
func (o *GetDataextensionsCoretypesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get dataextensions coretypes internal server error response a status code equal to that given
func (o *GetDataextensionsCoretypesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetDataextensionsCoretypesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/dataextensions/coretypes][%d] getDataextensionsCoretypesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetDataextensionsCoretypesInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/dataextensions/coretypes][%d] getDataextensionsCoretypesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetDataextensionsCoretypesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetDataextensionsCoretypesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDataextensionsCoretypesServiceUnavailable creates a GetDataextensionsCoretypesServiceUnavailable with default headers values
func NewGetDataextensionsCoretypesServiceUnavailable() *GetDataextensionsCoretypesServiceUnavailable {
	return &GetDataextensionsCoretypesServiceUnavailable{}
}

/*
GetDataextensionsCoretypesServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetDataextensionsCoretypesServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get dataextensions coretypes service unavailable response has a 2xx status code
func (o *GetDataextensionsCoretypesServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get dataextensions coretypes service unavailable response has a 3xx status code
func (o *GetDataextensionsCoretypesServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get dataextensions coretypes service unavailable response has a 4xx status code
func (o *GetDataextensionsCoretypesServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get dataextensions coretypes service unavailable response has a 5xx status code
func (o *GetDataextensionsCoretypesServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get dataextensions coretypes service unavailable response a status code equal to that given
func (o *GetDataextensionsCoretypesServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetDataextensionsCoretypesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/dataextensions/coretypes][%d] getDataextensionsCoretypesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetDataextensionsCoretypesServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/dataextensions/coretypes][%d] getDataextensionsCoretypesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetDataextensionsCoretypesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetDataextensionsCoretypesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDataextensionsCoretypesGatewayTimeout creates a GetDataextensionsCoretypesGatewayTimeout with default headers values
func NewGetDataextensionsCoretypesGatewayTimeout() *GetDataextensionsCoretypesGatewayTimeout {
	return &GetDataextensionsCoretypesGatewayTimeout{}
}

/*
GetDataextensionsCoretypesGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetDataextensionsCoretypesGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get dataextensions coretypes gateway timeout response has a 2xx status code
func (o *GetDataextensionsCoretypesGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get dataextensions coretypes gateway timeout response has a 3xx status code
func (o *GetDataextensionsCoretypesGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get dataextensions coretypes gateway timeout response has a 4xx status code
func (o *GetDataextensionsCoretypesGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get dataextensions coretypes gateway timeout response has a 5xx status code
func (o *GetDataextensionsCoretypesGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get dataextensions coretypes gateway timeout response a status code equal to that given
func (o *GetDataextensionsCoretypesGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetDataextensionsCoretypesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/dataextensions/coretypes][%d] getDataextensionsCoretypesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetDataextensionsCoretypesGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/dataextensions/coretypes][%d] getDataextensionsCoretypesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetDataextensionsCoretypesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetDataextensionsCoretypesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
