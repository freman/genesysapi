// Code generated by go-swagger; DO NOT EDIT.

package data_extensions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetDataextensionsCoretypesReader is a Reader for the GetDataextensionsCoretypes structure.
type GetDataextensionsCoretypesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDataextensionsCoretypesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDataextensionsCoretypesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDataextensionsCoretypesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDataextensionsCoretypesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDataextensionsCoretypesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDataextensionsCoretypesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetDataextensionsCoretypesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetDataextensionsCoretypesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetDataextensionsCoretypesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDataextensionsCoretypesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetDataextensionsCoretypesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetDataextensionsCoretypesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetDataextensionsCoretypesOK creates a GetDataextensionsCoretypesOK with default headers values
func NewGetDataextensionsCoretypesOK() *GetDataextensionsCoretypesOK {
	return &GetDataextensionsCoretypesOK{}
}

/*GetDataextensionsCoretypesOK handles this case with default header values.

successful operation
*/
type GetDataextensionsCoretypesOK struct {
	Payload *models.CoretypeListing
}

func (o *GetDataextensionsCoretypesOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/dataextensions/coretypes][%d] getDataextensionsCoretypesOK  %+v", 200, o.Payload)
}

func (o *GetDataextensionsCoretypesOK) GetPayload() *models.CoretypeListing {
	return o.Payload
}

func (o *GetDataextensionsCoretypesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoretypeListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDataextensionsCoretypesBadRequest creates a GetDataextensionsCoretypesBadRequest with default headers values
func NewGetDataextensionsCoretypesBadRequest() *GetDataextensionsCoretypesBadRequest {
	return &GetDataextensionsCoretypesBadRequest{}
}

/*GetDataextensionsCoretypesBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetDataextensionsCoretypesBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetDataextensionsCoretypesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/dataextensions/coretypes][%d] getDataextensionsCoretypesBadRequest  %+v", 400, o.Payload)
}

func (o *GetDataextensionsCoretypesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetDataextensionsCoretypesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDataextensionsCoretypesUnauthorized creates a GetDataextensionsCoretypesUnauthorized with default headers values
func NewGetDataextensionsCoretypesUnauthorized() *GetDataextensionsCoretypesUnauthorized {
	return &GetDataextensionsCoretypesUnauthorized{}
}

/*GetDataextensionsCoretypesUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetDataextensionsCoretypesUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetDataextensionsCoretypesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/dataextensions/coretypes][%d] getDataextensionsCoretypesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetDataextensionsCoretypesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetDataextensionsCoretypesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDataextensionsCoretypesForbidden creates a GetDataextensionsCoretypesForbidden with default headers values
func NewGetDataextensionsCoretypesForbidden() *GetDataextensionsCoretypesForbidden {
	return &GetDataextensionsCoretypesForbidden{}
}

/*GetDataextensionsCoretypesForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetDataextensionsCoretypesForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetDataextensionsCoretypesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/dataextensions/coretypes][%d] getDataextensionsCoretypesForbidden  %+v", 403, o.Payload)
}

func (o *GetDataextensionsCoretypesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetDataextensionsCoretypesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDataextensionsCoretypesNotFound creates a GetDataextensionsCoretypesNotFound with default headers values
func NewGetDataextensionsCoretypesNotFound() *GetDataextensionsCoretypesNotFound {
	return &GetDataextensionsCoretypesNotFound{}
}

/*GetDataextensionsCoretypesNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetDataextensionsCoretypesNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetDataextensionsCoretypesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/dataextensions/coretypes][%d] getDataextensionsCoretypesNotFound  %+v", 404, o.Payload)
}

func (o *GetDataextensionsCoretypesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetDataextensionsCoretypesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDataextensionsCoretypesRequestEntityTooLarge creates a GetDataextensionsCoretypesRequestEntityTooLarge with default headers values
func NewGetDataextensionsCoretypesRequestEntityTooLarge() *GetDataextensionsCoretypesRequestEntityTooLarge {
	return &GetDataextensionsCoretypesRequestEntityTooLarge{}
}

/*GetDataextensionsCoretypesRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetDataextensionsCoretypesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetDataextensionsCoretypesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/dataextensions/coretypes][%d] getDataextensionsCoretypesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetDataextensionsCoretypesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetDataextensionsCoretypesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDataextensionsCoretypesUnsupportedMediaType creates a GetDataextensionsCoretypesUnsupportedMediaType with default headers values
func NewGetDataextensionsCoretypesUnsupportedMediaType() *GetDataextensionsCoretypesUnsupportedMediaType {
	return &GetDataextensionsCoretypesUnsupportedMediaType{}
}

/*GetDataextensionsCoretypesUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetDataextensionsCoretypesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetDataextensionsCoretypesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/dataextensions/coretypes][%d] getDataextensionsCoretypesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetDataextensionsCoretypesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetDataextensionsCoretypesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDataextensionsCoretypesTooManyRequests creates a GetDataextensionsCoretypesTooManyRequests with default headers values
func NewGetDataextensionsCoretypesTooManyRequests() *GetDataextensionsCoretypesTooManyRequests {
	return &GetDataextensionsCoretypesTooManyRequests{}
}

/*GetDataextensionsCoretypesTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type GetDataextensionsCoretypesTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetDataextensionsCoretypesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/dataextensions/coretypes][%d] getDataextensionsCoretypesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetDataextensionsCoretypesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetDataextensionsCoretypesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDataextensionsCoretypesInternalServerError creates a GetDataextensionsCoretypesInternalServerError with default headers values
func NewGetDataextensionsCoretypesInternalServerError() *GetDataextensionsCoretypesInternalServerError {
	return &GetDataextensionsCoretypesInternalServerError{}
}

/*GetDataextensionsCoretypesInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetDataextensionsCoretypesInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetDataextensionsCoretypesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/dataextensions/coretypes][%d] getDataextensionsCoretypesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetDataextensionsCoretypesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetDataextensionsCoretypesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDataextensionsCoretypesServiceUnavailable creates a GetDataextensionsCoretypesServiceUnavailable with default headers values
func NewGetDataextensionsCoretypesServiceUnavailable() *GetDataextensionsCoretypesServiceUnavailable {
	return &GetDataextensionsCoretypesServiceUnavailable{}
}

/*GetDataextensionsCoretypesServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetDataextensionsCoretypesServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetDataextensionsCoretypesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/dataextensions/coretypes][%d] getDataextensionsCoretypesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetDataextensionsCoretypesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetDataextensionsCoretypesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDataextensionsCoretypesGatewayTimeout creates a GetDataextensionsCoretypesGatewayTimeout with default headers values
func NewGetDataextensionsCoretypesGatewayTimeout() *GetDataextensionsCoretypesGatewayTimeout {
	return &GetDataextensionsCoretypesGatewayTimeout{}
}

/*GetDataextensionsCoretypesGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetDataextensionsCoretypesGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetDataextensionsCoretypesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/dataextensions/coretypes][%d] getDataextensionsCoretypesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetDataextensionsCoretypesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetDataextensionsCoretypesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
