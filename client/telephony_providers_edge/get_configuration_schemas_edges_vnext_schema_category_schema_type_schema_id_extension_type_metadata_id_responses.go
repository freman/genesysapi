// Code generated by go-swagger; DO NOT EDIT.

package telephony_providers_edge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDReader is a Reader for the GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataID structure.
type GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDOK creates a GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDOK with default headers values
func NewGetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDOK() *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDOK {
	return &GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDOK{}
}

/*
GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDOK describes a response with status code 200, with default header values.

successful operation
*/
type GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDOK struct {
	Payload *models.Organization
}

// IsSuccess returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id o k response has a 2xx status code
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id o k response has a 3xx status code
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id o k response has a 4xx status code
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id o k response has a 5xx status code
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id o k response a status code equal to that given
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/configuration/schemas/edges/vnext/{schemaCategory}/{schemaType}/{schemaId}/{extensionType}/{metadataId}][%d] getConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIdExtensionTypeMetadataIdOK  %+v", 200, o.Payload)
}

func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDOK) String() string {
	return fmt.Sprintf("[GET /api/v2/configuration/schemas/edges/vnext/{schemaCategory}/{schemaType}/{schemaId}/{extensionType}/{metadataId}][%d] getConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIdExtensionTypeMetadataIdOK  %+v", 200, o.Payload)
}

func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDOK) GetPayload() *models.Organization {
	return o.Payload
}

func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Organization)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDBadRequest creates a GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDBadRequest with default headers values
func NewGetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDBadRequest() *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDBadRequest {
	return &GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDBadRequest{}
}

/*
GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id bad request response has a 2xx status code
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id bad request response has a 3xx status code
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id bad request response has a 4xx status code
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id bad request response has a 5xx status code
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id bad request response a status code equal to that given
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/configuration/schemas/edges/vnext/{schemaCategory}/{schemaType}/{schemaId}/{extensionType}/{metadataId}][%d] getConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIdExtensionTypeMetadataIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/configuration/schemas/edges/vnext/{schemaCategory}/{schemaType}/{schemaId}/{extensionType}/{metadataId}][%d] getConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIdExtensionTypeMetadataIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDUnauthorized creates a GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDUnauthorized with default headers values
func NewGetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDUnauthorized() *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDUnauthorized {
	return &GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDUnauthorized{}
}

/*
GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id unauthorized response has a 2xx status code
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id unauthorized response has a 3xx status code
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id unauthorized response has a 4xx status code
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id unauthorized response has a 5xx status code
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id unauthorized response a status code equal to that given
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/configuration/schemas/edges/vnext/{schemaCategory}/{schemaType}/{schemaId}/{extensionType}/{metadataId}][%d] getConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIdExtensionTypeMetadataIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/configuration/schemas/edges/vnext/{schemaCategory}/{schemaType}/{schemaId}/{extensionType}/{metadataId}][%d] getConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIdExtensionTypeMetadataIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDForbidden creates a GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDForbidden with default headers values
func NewGetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDForbidden() *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDForbidden {
	return &GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDForbidden{}
}

/*
GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id forbidden response has a 2xx status code
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id forbidden response has a 3xx status code
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id forbidden response has a 4xx status code
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id forbidden response has a 5xx status code
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id forbidden response a status code equal to that given
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/configuration/schemas/edges/vnext/{schemaCategory}/{schemaType}/{schemaId}/{extensionType}/{metadataId}][%d] getConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIdExtensionTypeMetadataIdForbidden  %+v", 403, o.Payload)
}

func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/configuration/schemas/edges/vnext/{schemaCategory}/{schemaType}/{schemaId}/{extensionType}/{metadataId}][%d] getConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIdExtensionTypeMetadataIdForbidden  %+v", 403, o.Payload)
}

func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDNotFound creates a GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDNotFound with default headers values
func NewGetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDNotFound() *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDNotFound {
	return &GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDNotFound{}
}

/*
GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id not found response has a 2xx status code
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id not found response has a 3xx status code
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id not found response has a 4xx status code
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id not found response has a 5xx status code
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id not found response a status code equal to that given
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/configuration/schemas/edges/vnext/{schemaCategory}/{schemaType}/{schemaId}/{extensionType}/{metadataId}][%d] getConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIdExtensionTypeMetadataIdNotFound  %+v", 404, o.Payload)
}

func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/configuration/schemas/edges/vnext/{schemaCategory}/{schemaType}/{schemaId}/{extensionType}/{metadataId}][%d] getConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIdExtensionTypeMetadataIdNotFound  %+v", 404, o.Payload)
}

func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDRequestTimeout creates a GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDRequestTimeout with default headers values
func NewGetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDRequestTimeout() *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDRequestTimeout {
	return &GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDRequestTimeout{}
}

/*
GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id request timeout response has a 2xx status code
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id request timeout response has a 3xx status code
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id request timeout response has a 4xx status code
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id request timeout response has a 5xx status code
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id request timeout response a status code equal to that given
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/configuration/schemas/edges/vnext/{schemaCategory}/{schemaType}/{schemaId}/{extensionType}/{metadataId}][%d] getConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIdExtensionTypeMetadataIdRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/configuration/schemas/edges/vnext/{schemaCategory}/{schemaType}/{schemaId}/{extensionType}/{metadataId}][%d] getConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIdExtensionTypeMetadataIdRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDRequestEntityTooLarge creates a GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDRequestEntityTooLarge with default headers values
func NewGetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDRequestEntityTooLarge() *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDRequestEntityTooLarge {
	return &GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDRequestEntityTooLarge{}
}

/*
GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id request entity too large response has a 2xx status code
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id request entity too large response has a 3xx status code
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id request entity too large response has a 4xx status code
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id request entity too large response has a 5xx status code
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id request entity too large response a status code equal to that given
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/configuration/schemas/edges/vnext/{schemaCategory}/{schemaType}/{schemaId}/{extensionType}/{metadataId}][%d] getConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIdExtensionTypeMetadataIdRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/configuration/schemas/edges/vnext/{schemaCategory}/{schemaType}/{schemaId}/{extensionType}/{metadataId}][%d] getConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIdExtensionTypeMetadataIdRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDUnsupportedMediaType creates a GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDUnsupportedMediaType with default headers values
func NewGetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDUnsupportedMediaType() *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDUnsupportedMediaType {
	return &GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDUnsupportedMediaType{}
}

/*
GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id unsupported media type response has a 2xx status code
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id unsupported media type response has a 3xx status code
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id unsupported media type response has a 4xx status code
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id unsupported media type response has a 5xx status code
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id unsupported media type response a status code equal to that given
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/configuration/schemas/edges/vnext/{schemaCategory}/{schemaType}/{schemaId}/{extensionType}/{metadataId}][%d] getConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIdExtensionTypeMetadataIdUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/configuration/schemas/edges/vnext/{schemaCategory}/{schemaType}/{schemaId}/{extensionType}/{metadataId}][%d] getConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIdExtensionTypeMetadataIdUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDTooManyRequests creates a GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDTooManyRequests with default headers values
func NewGetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDTooManyRequests() *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDTooManyRequests {
	return &GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDTooManyRequests{}
}

/*
GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id too many requests response has a 2xx status code
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id too many requests response has a 3xx status code
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id too many requests response has a 4xx status code
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id too many requests response has a 5xx status code
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id too many requests response a status code equal to that given
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/configuration/schemas/edges/vnext/{schemaCategory}/{schemaType}/{schemaId}/{extensionType}/{metadataId}][%d] getConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIdExtensionTypeMetadataIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/configuration/schemas/edges/vnext/{schemaCategory}/{schemaType}/{schemaId}/{extensionType}/{metadataId}][%d] getConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIdExtensionTypeMetadataIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDInternalServerError creates a GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDInternalServerError with default headers values
func NewGetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDInternalServerError() *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDInternalServerError {
	return &GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDInternalServerError{}
}

/*
GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id internal server error response has a 2xx status code
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id internal server error response has a 3xx status code
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id internal server error response has a 4xx status code
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id internal server error response has a 5xx status code
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id internal server error response a status code equal to that given
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/configuration/schemas/edges/vnext/{schemaCategory}/{schemaType}/{schemaId}/{extensionType}/{metadataId}][%d] getConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIdExtensionTypeMetadataIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/configuration/schemas/edges/vnext/{schemaCategory}/{schemaType}/{schemaId}/{extensionType}/{metadataId}][%d] getConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIdExtensionTypeMetadataIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDServiceUnavailable creates a GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDServiceUnavailable with default headers values
func NewGetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDServiceUnavailable() *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDServiceUnavailable {
	return &GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDServiceUnavailable{}
}

/*
GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id service unavailable response has a 2xx status code
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id service unavailable response has a 3xx status code
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id service unavailable response has a 4xx status code
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id service unavailable response has a 5xx status code
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id service unavailable response a status code equal to that given
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/configuration/schemas/edges/vnext/{schemaCategory}/{schemaType}/{schemaId}/{extensionType}/{metadataId}][%d] getConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIdExtensionTypeMetadataIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/configuration/schemas/edges/vnext/{schemaCategory}/{schemaType}/{schemaId}/{extensionType}/{metadataId}][%d] getConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIdExtensionTypeMetadataIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDGatewayTimeout creates a GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDGatewayTimeout with default headers values
func NewGetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDGatewayTimeout() *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDGatewayTimeout {
	return &GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDGatewayTimeout{}
}

/*
GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id gateway timeout response has a 2xx status code
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id gateway timeout response has a 3xx status code
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id gateway timeout response has a 4xx status code
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id gateway timeout response has a 5xx status code
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id gateway timeout response a status code equal to that given
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/configuration/schemas/edges/vnext/{schemaCategory}/{schemaType}/{schemaId}/{extensionType}/{metadataId}][%d] getConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIdExtensionTypeMetadataIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/configuration/schemas/edges/vnext/{schemaCategory}/{schemaType}/{schemaId}/{extensionType}/{metadataId}][%d] getConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIdExtensionTypeMetadataIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
