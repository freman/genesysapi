// Code generated by go-swagger; DO NOT EDIT.

package telephony_providers_edge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParams creates a new GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParams object
// with the default values initialized.
func NewGetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParams() *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParams {
	var ()
	return &GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParamsWithTimeout creates a new GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParamsWithTimeout(timeout time.Duration) *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParams {
	var ()
	return &GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParams{

		timeout: timeout,
	}
}

// NewGetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParamsWithContext creates a new GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParamsWithContext(ctx context.Context) *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParams {
	var ()
	return &GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParams{

		Context: ctx,
	}
}

// NewGetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParamsWithHTTPClient creates a new GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParamsWithHTTPClient(client *http.Client) *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParams {
	var ()
	return &GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParams{
		HTTPClient: client,
	}
}

/*GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParams contains all the parameters to send to the API endpoint
for the get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id operation typically these are written to a http.Request
*/
type GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParams struct {

	/*ExtensionType
	  extension

	*/
	ExtensionType string
	/*MetadataID
	  Metadata ID

	*/
	MetadataID string
	/*SchemaCategory
	  Schema category

	*/
	SchemaCategory string
	/*SchemaID
	  Schema ID

	*/
	SchemaID string
	/*SchemaType
	  Schema type

	*/
	SchemaType string
	/*Type
	  Type

	*/
	Type *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id params
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParams) WithTimeout(timeout time.Duration) *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id params
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id params
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParams) WithContext(ctx context.Context) *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id params
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id params
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParams) WithHTTPClient(client *http.Client) *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id params
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithExtensionType adds the extensionType to the get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id params
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParams) WithExtensionType(extensionType string) *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParams {
	o.SetExtensionType(extensionType)
	return o
}

// SetExtensionType adds the extensionType to the get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id params
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParams) SetExtensionType(extensionType string) {
	o.ExtensionType = extensionType
}

// WithMetadataID adds the metadataID to the get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id params
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParams) WithMetadataID(metadataID string) *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParams {
	o.SetMetadataID(metadataID)
	return o
}

// SetMetadataID adds the metadataId to the get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id params
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParams) SetMetadataID(metadataID string) {
	o.MetadataID = metadataID
}

// WithSchemaCategory adds the schemaCategory to the get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id params
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParams) WithSchemaCategory(schemaCategory string) *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParams {
	o.SetSchemaCategory(schemaCategory)
	return o
}

// SetSchemaCategory adds the schemaCategory to the get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id params
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParams) SetSchemaCategory(schemaCategory string) {
	o.SchemaCategory = schemaCategory
}

// WithSchemaID adds the schemaID to the get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id params
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParams) WithSchemaID(schemaID string) *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParams {
	o.SetSchemaID(schemaID)
	return o
}

// SetSchemaID adds the schemaId to the get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id params
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParams) SetSchemaID(schemaID string) {
	o.SchemaID = schemaID
}

// WithSchemaType adds the schemaType to the get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id params
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParams) WithSchemaType(schemaType string) *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParams {
	o.SetSchemaType(schemaType)
	return o
}

// SetSchemaType adds the schemaType to the get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id params
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParams) SetSchemaType(schemaType string) {
	o.SchemaType = schemaType
}

// WithType adds the typeVar to the get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id params
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParams) WithType(typeVar *string) *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParams {
	o.SetType(typeVar)
	return o
}

// SetType adds the type to the get configuration schemas edges vnext schema category schema type schema Id extension type metadata Id params
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParams) SetType(typeVar *string) {
	o.Type = typeVar
}

// WriteToRequest writes these params to a swagger request
func (o *GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIDExtensionTypeMetadataIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param extensionType
	if err := r.SetPathParam("extensionType", o.ExtensionType); err != nil {
		return err
	}

	// path param metadataId
	if err := r.SetPathParam("metadataId", o.MetadataID); err != nil {
		return err
	}

	// path param schemaCategory
	if err := r.SetPathParam("schemaCategory", o.SchemaCategory); err != nil {
		return err
	}

	// path param schemaId
	if err := r.SetPathParam("schemaId", o.SchemaID); err != nil {
		return err
	}

	// path param schemaType
	if err := r.SetPathParam("schemaType", o.SchemaType); err != nil {
		return err
	}

	if o.Type != nil {

		// query param type
		var qrType string
		if o.Type != nil {
			qrType = *o.Type
		}
		qType := qrType
		if qType != "" {
			if err := r.SetQueryParam("type", qType); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
