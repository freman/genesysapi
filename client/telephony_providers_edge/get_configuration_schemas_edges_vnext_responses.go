// Code generated by go-swagger; DO NOT EDIT.

package telephony_providers_edge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetConfigurationSchemasEdgesVnextReader is a Reader for the GetConfigurationSchemasEdgesVnext structure.
type GetConfigurationSchemasEdgesVnextReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConfigurationSchemasEdgesVnextReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConfigurationSchemasEdgesVnextOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetConfigurationSchemasEdgesVnextBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetConfigurationSchemasEdgesVnextUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetConfigurationSchemasEdgesVnextForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetConfigurationSchemasEdgesVnextNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetConfigurationSchemasEdgesVnextRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetConfigurationSchemasEdgesVnextRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetConfigurationSchemasEdgesVnextUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetConfigurationSchemasEdgesVnextTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetConfigurationSchemasEdgesVnextInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetConfigurationSchemasEdgesVnextServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetConfigurationSchemasEdgesVnextGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetConfigurationSchemasEdgesVnextOK creates a GetConfigurationSchemasEdgesVnextOK with default headers values
func NewGetConfigurationSchemasEdgesVnextOK() *GetConfigurationSchemasEdgesVnextOK {
	return &GetConfigurationSchemasEdgesVnextOK{}
}

/*
GetConfigurationSchemasEdgesVnextOK describes a response with status code 200, with default header values.

successful operation
*/
type GetConfigurationSchemasEdgesVnextOK struct {
	Payload *models.SchemaCategoryEntityListing
}

// IsSuccess returns true when this get configuration schemas edges vnext o k response has a 2xx status code
func (o *GetConfigurationSchemasEdgesVnextOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get configuration schemas edges vnext o k response has a 3xx status code
func (o *GetConfigurationSchemasEdgesVnextOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get configuration schemas edges vnext o k response has a 4xx status code
func (o *GetConfigurationSchemasEdgesVnextOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get configuration schemas edges vnext o k response has a 5xx status code
func (o *GetConfigurationSchemasEdgesVnextOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get configuration schemas edges vnext o k response a status code equal to that given
func (o *GetConfigurationSchemasEdgesVnextOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetConfigurationSchemasEdgesVnextOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/configuration/schemas/edges/vnext][%d] getConfigurationSchemasEdgesVnextOK  %+v", 200, o.Payload)
}

func (o *GetConfigurationSchemasEdgesVnextOK) String() string {
	return fmt.Sprintf("[GET /api/v2/configuration/schemas/edges/vnext][%d] getConfigurationSchemasEdgesVnextOK  %+v", 200, o.Payload)
}

func (o *GetConfigurationSchemasEdgesVnextOK) GetPayload() *models.SchemaCategoryEntityListing {
	return o.Payload
}

func (o *GetConfigurationSchemasEdgesVnextOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SchemaCategoryEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConfigurationSchemasEdgesVnextBadRequest creates a GetConfigurationSchemasEdgesVnextBadRequest with default headers values
func NewGetConfigurationSchemasEdgesVnextBadRequest() *GetConfigurationSchemasEdgesVnextBadRequest {
	return &GetConfigurationSchemasEdgesVnextBadRequest{}
}

/*
GetConfigurationSchemasEdgesVnextBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetConfigurationSchemasEdgesVnextBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get configuration schemas edges vnext bad request response has a 2xx status code
func (o *GetConfigurationSchemasEdgesVnextBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get configuration schemas edges vnext bad request response has a 3xx status code
func (o *GetConfigurationSchemasEdgesVnextBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get configuration schemas edges vnext bad request response has a 4xx status code
func (o *GetConfigurationSchemasEdgesVnextBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get configuration schemas edges vnext bad request response has a 5xx status code
func (o *GetConfigurationSchemasEdgesVnextBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get configuration schemas edges vnext bad request response a status code equal to that given
func (o *GetConfigurationSchemasEdgesVnextBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetConfigurationSchemasEdgesVnextBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/configuration/schemas/edges/vnext][%d] getConfigurationSchemasEdgesVnextBadRequest  %+v", 400, o.Payload)
}

func (o *GetConfigurationSchemasEdgesVnextBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/configuration/schemas/edges/vnext][%d] getConfigurationSchemasEdgesVnextBadRequest  %+v", 400, o.Payload)
}

func (o *GetConfigurationSchemasEdgesVnextBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConfigurationSchemasEdgesVnextBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConfigurationSchemasEdgesVnextUnauthorized creates a GetConfigurationSchemasEdgesVnextUnauthorized with default headers values
func NewGetConfigurationSchemasEdgesVnextUnauthorized() *GetConfigurationSchemasEdgesVnextUnauthorized {
	return &GetConfigurationSchemasEdgesVnextUnauthorized{}
}

/*
GetConfigurationSchemasEdgesVnextUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetConfigurationSchemasEdgesVnextUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get configuration schemas edges vnext unauthorized response has a 2xx status code
func (o *GetConfigurationSchemasEdgesVnextUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get configuration schemas edges vnext unauthorized response has a 3xx status code
func (o *GetConfigurationSchemasEdgesVnextUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get configuration schemas edges vnext unauthorized response has a 4xx status code
func (o *GetConfigurationSchemasEdgesVnextUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get configuration schemas edges vnext unauthorized response has a 5xx status code
func (o *GetConfigurationSchemasEdgesVnextUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get configuration schemas edges vnext unauthorized response a status code equal to that given
func (o *GetConfigurationSchemasEdgesVnextUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetConfigurationSchemasEdgesVnextUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/configuration/schemas/edges/vnext][%d] getConfigurationSchemasEdgesVnextUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConfigurationSchemasEdgesVnextUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/configuration/schemas/edges/vnext][%d] getConfigurationSchemasEdgesVnextUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConfigurationSchemasEdgesVnextUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConfigurationSchemasEdgesVnextUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConfigurationSchemasEdgesVnextForbidden creates a GetConfigurationSchemasEdgesVnextForbidden with default headers values
func NewGetConfigurationSchemasEdgesVnextForbidden() *GetConfigurationSchemasEdgesVnextForbidden {
	return &GetConfigurationSchemasEdgesVnextForbidden{}
}

/*
GetConfigurationSchemasEdgesVnextForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetConfigurationSchemasEdgesVnextForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get configuration schemas edges vnext forbidden response has a 2xx status code
func (o *GetConfigurationSchemasEdgesVnextForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get configuration schemas edges vnext forbidden response has a 3xx status code
func (o *GetConfigurationSchemasEdgesVnextForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get configuration schemas edges vnext forbidden response has a 4xx status code
func (o *GetConfigurationSchemasEdgesVnextForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get configuration schemas edges vnext forbidden response has a 5xx status code
func (o *GetConfigurationSchemasEdgesVnextForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get configuration schemas edges vnext forbidden response a status code equal to that given
func (o *GetConfigurationSchemasEdgesVnextForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetConfigurationSchemasEdgesVnextForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/configuration/schemas/edges/vnext][%d] getConfigurationSchemasEdgesVnextForbidden  %+v", 403, o.Payload)
}

func (o *GetConfigurationSchemasEdgesVnextForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/configuration/schemas/edges/vnext][%d] getConfigurationSchemasEdgesVnextForbidden  %+v", 403, o.Payload)
}

func (o *GetConfigurationSchemasEdgesVnextForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConfigurationSchemasEdgesVnextForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConfigurationSchemasEdgesVnextNotFound creates a GetConfigurationSchemasEdgesVnextNotFound with default headers values
func NewGetConfigurationSchemasEdgesVnextNotFound() *GetConfigurationSchemasEdgesVnextNotFound {
	return &GetConfigurationSchemasEdgesVnextNotFound{}
}

/*
GetConfigurationSchemasEdgesVnextNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetConfigurationSchemasEdgesVnextNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get configuration schemas edges vnext not found response has a 2xx status code
func (o *GetConfigurationSchemasEdgesVnextNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get configuration schemas edges vnext not found response has a 3xx status code
func (o *GetConfigurationSchemasEdgesVnextNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get configuration schemas edges vnext not found response has a 4xx status code
func (o *GetConfigurationSchemasEdgesVnextNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get configuration schemas edges vnext not found response has a 5xx status code
func (o *GetConfigurationSchemasEdgesVnextNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get configuration schemas edges vnext not found response a status code equal to that given
func (o *GetConfigurationSchemasEdgesVnextNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetConfigurationSchemasEdgesVnextNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/configuration/schemas/edges/vnext][%d] getConfigurationSchemasEdgesVnextNotFound  %+v", 404, o.Payload)
}

func (o *GetConfigurationSchemasEdgesVnextNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/configuration/schemas/edges/vnext][%d] getConfigurationSchemasEdgesVnextNotFound  %+v", 404, o.Payload)
}

func (o *GetConfigurationSchemasEdgesVnextNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConfigurationSchemasEdgesVnextNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConfigurationSchemasEdgesVnextRequestTimeout creates a GetConfigurationSchemasEdgesVnextRequestTimeout with default headers values
func NewGetConfigurationSchemasEdgesVnextRequestTimeout() *GetConfigurationSchemasEdgesVnextRequestTimeout {
	return &GetConfigurationSchemasEdgesVnextRequestTimeout{}
}

/*
GetConfigurationSchemasEdgesVnextRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetConfigurationSchemasEdgesVnextRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get configuration schemas edges vnext request timeout response has a 2xx status code
func (o *GetConfigurationSchemasEdgesVnextRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get configuration schemas edges vnext request timeout response has a 3xx status code
func (o *GetConfigurationSchemasEdgesVnextRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get configuration schemas edges vnext request timeout response has a 4xx status code
func (o *GetConfigurationSchemasEdgesVnextRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get configuration schemas edges vnext request timeout response has a 5xx status code
func (o *GetConfigurationSchemasEdgesVnextRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get configuration schemas edges vnext request timeout response a status code equal to that given
func (o *GetConfigurationSchemasEdgesVnextRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetConfigurationSchemasEdgesVnextRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/configuration/schemas/edges/vnext][%d] getConfigurationSchemasEdgesVnextRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConfigurationSchemasEdgesVnextRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/configuration/schemas/edges/vnext][%d] getConfigurationSchemasEdgesVnextRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConfigurationSchemasEdgesVnextRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConfigurationSchemasEdgesVnextRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConfigurationSchemasEdgesVnextRequestEntityTooLarge creates a GetConfigurationSchemasEdgesVnextRequestEntityTooLarge with default headers values
func NewGetConfigurationSchemasEdgesVnextRequestEntityTooLarge() *GetConfigurationSchemasEdgesVnextRequestEntityTooLarge {
	return &GetConfigurationSchemasEdgesVnextRequestEntityTooLarge{}
}

/*
GetConfigurationSchemasEdgesVnextRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetConfigurationSchemasEdgesVnextRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get configuration schemas edges vnext request entity too large response has a 2xx status code
func (o *GetConfigurationSchemasEdgesVnextRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get configuration schemas edges vnext request entity too large response has a 3xx status code
func (o *GetConfigurationSchemasEdgesVnextRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get configuration schemas edges vnext request entity too large response has a 4xx status code
func (o *GetConfigurationSchemasEdgesVnextRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get configuration schemas edges vnext request entity too large response has a 5xx status code
func (o *GetConfigurationSchemasEdgesVnextRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get configuration schemas edges vnext request entity too large response a status code equal to that given
func (o *GetConfigurationSchemasEdgesVnextRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetConfigurationSchemasEdgesVnextRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/configuration/schemas/edges/vnext][%d] getConfigurationSchemasEdgesVnextRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConfigurationSchemasEdgesVnextRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/configuration/schemas/edges/vnext][%d] getConfigurationSchemasEdgesVnextRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConfigurationSchemasEdgesVnextRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConfigurationSchemasEdgesVnextRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConfigurationSchemasEdgesVnextUnsupportedMediaType creates a GetConfigurationSchemasEdgesVnextUnsupportedMediaType with default headers values
func NewGetConfigurationSchemasEdgesVnextUnsupportedMediaType() *GetConfigurationSchemasEdgesVnextUnsupportedMediaType {
	return &GetConfigurationSchemasEdgesVnextUnsupportedMediaType{}
}

/*
GetConfigurationSchemasEdgesVnextUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetConfigurationSchemasEdgesVnextUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get configuration schemas edges vnext unsupported media type response has a 2xx status code
func (o *GetConfigurationSchemasEdgesVnextUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get configuration schemas edges vnext unsupported media type response has a 3xx status code
func (o *GetConfigurationSchemasEdgesVnextUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get configuration schemas edges vnext unsupported media type response has a 4xx status code
func (o *GetConfigurationSchemasEdgesVnextUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get configuration schemas edges vnext unsupported media type response has a 5xx status code
func (o *GetConfigurationSchemasEdgesVnextUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get configuration schemas edges vnext unsupported media type response a status code equal to that given
func (o *GetConfigurationSchemasEdgesVnextUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetConfigurationSchemasEdgesVnextUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/configuration/schemas/edges/vnext][%d] getConfigurationSchemasEdgesVnextUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConfigurationSchemasEdgesVnextUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/configuration/schemas/edges/vnext][%d] getConfigurationSchemasEdgesVnextUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConfigurationSchemasEdgesVnextUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConfigurationSchemasEdgesVnextUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConfigurationSchemasEdgesVnextTooManyRequests creates a GetConfigurationSchemasEdgesVnextTooManyRequests with default headers values
func NewGetConfigurationSchemasEdgesVnextTooManyRequests() *GetConfigurationSchemasEdgesVnextTooManyRequests {
	return &GetConfigurationSchemasEdgesVnextTooManyRequests{}
}

/*
GetConfigurationSchemasEdgesVnextTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetConfigurationSchemasEdgesVnextTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get configuration schemas edges vnext too many requests response has a 2xx status code
func (o *GetConfigurationSchemasEdgesVnextTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get configuration schemas edges vnext too many requests response has a 3xx status code
func (o *GetConfigurationSchemasEdgesVnextTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get configuration schemas edges vnext too many requests response has a 4xx status code
func (o *GetConfigurationSchemasEdgesVnextTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get configuration schemas edges vnext too many requests response has a 5xx status code
func (o *GetConfigurationSchemasEdgesVnextTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get configuration schemas edges vnext too many requests response a status code equal to that given
func (o *GetConfigurationSchemasEdgesVnextTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetConfigurationSchemasEdgesVnextTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/configuration/schemas/edges/vnext][%d] getConfigurationSchemasEdgesVnextTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConfigurationSchemasEdgesVnextTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/configuration/schemas/edges/vnext][%d] getConfigurationSchemasEdgesVnextTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConfigurationSchemasEdgesVnextTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConfigurationSchemasEdgesVnextTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConfigurationSchemasEdgesVnextInternalServerError creates a GetConfigurationSchemasEdgesVnextInternalServerError with default headers values
func NewGetConfigurationSchemasEdgesVnextInternalServerError() *GetConfigurationSchemasEdgesVnextInternalServerError {
	return &GetConfigurationSchemasEdgesVnextInternalServerError{}
}

/*
GetConfigurationSchemasEdgesVnextInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetConfigurationSchemasEdgesVnextInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get configuration schemas edges vnext internal server error response has a 2xx status code
func (o *GetConfigurationSchemasEdgesVnextInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get configuration schemas edges vnext internal server error response has a 3xx status code
func (o *GetConfigurationSchemasEdgesVnextInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get configuration schemas edges vnext internal server error response has a 4xx status code
func (o *GetConfigurationSchemasEdgesVnextInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get configuration schemas edges vnext internal server error response has a 5xx status code
func (o *GetConfigurationSchemasEdgesVnextInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get configuration schemas edges vnext internal server error response a status code equal to that given
func (o *GetConfigurationSchemasEdgesVnextInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetConfigurationSchemasEdgesVnextInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/configuration/schemas/edges/vnext][%d] getConfigurationSchemasEdgesVnextInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConfigurationSchemasEdgesVnextInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/configuration/schemas/edges/vnext][%d] getConfigurationSchemasEdgesVnextInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConfigurationSchemasEdgesVnextInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConfigurationSchemasEdgesVnextInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConfigurationSchemasEdgesVnextServiceUnavailable creates a GetConfigurationSchemasEdgesVnextServiceUnavailable with default headers values
func NewGetConfigurationSchemasEdgesVnextServiceUnavailable() *GetConfigurationSchemasEdgesVnextServiceUnavailable {
	return &GetConfigurationSchemasEdgesVnextServiceUnavailable{}
}

/*
GetConfigurationSchemasEdgesVnextServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetConfigurationSchemasEdgesVnextServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get configuration schemas edges vnext service unavailable response has a 2xx status code
func (o *GetConfigurationSchemasEdgesVnextServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get configuration schemas edges vnext service unavailable response has a 3xx status code
func (o *GetConfigurationSchemasEdgesVnextServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get configuration schemas edges vnext service unavailable response has a 4xx status code
func (o *GetConfigurationSchemasEdgesVnextServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get configuration schemas edges vnext service unavailable response has a 5xx status code
func (o *GetConfigurationSchemasEdgesVnextServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get configuration schemas edges vnext service unavailable response a status code equal to that given
func (o *GetConfigurationSchemasEdgesVnextServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetConfigurationSchemasEdgesVnextServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/configuration/schemas/edges/vnext][%d] getConfigurationSchemasEdgesVnextServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConfigurationSchemasEdgesVnextServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/configuration/schemas/edges/vnext][%d] getConfigurationSchemasEdgesVnextServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConfigurationSchemasEdgesVnextServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConfigurationSchemasEdgesVnextServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConfigurationSchemasEdgesVnextGatewayTimeout creates a GetConfigurationSchemasEdgesVnextGatewayTimeout with default headers values
func NewGetConfigurationSchemasEdgesVnextGatewayTimeout() *GetConfigurationSchemasEdgesVnextGatewayTimeout {
	return &GetConfigurationSchemasEdgesVnextGatewayTimeout{}
}

/*
GetConfigurationSchemasEdgesVnextGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetConfigurationSchemasEdgesVnextGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get configuration schemas edges vnext gateway timeout response has a 2xx status code
func (o *GetConfigurationSchemasEdgesVnextGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get configuration schemas edges vnext gateway timeout response has a 3xx status code
func (o *GetConfigurationSchemasEdgesVnextGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get configuration schemas edges vnext gateway timeout response has a 4xx status code
func (o *GetConfigurationSchemasEdgesVnextGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get configuration schemas edges vnext gateway timeout response has a 5xx status code
func (o *GetConfigurationSchemasEdgesVnextGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get configuration schemas edges vnext gateway timeout response a status code equal to that given
func (o *GetConfigurationSchemasEdgesVnextGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetConfigurationSchemasEdgesVnextGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/configuration/schemas/edges/vnext][%d] getConfigurationSchemasEdgesVnextGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConfigurationSchemasEdgesVnextGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/configuration/schemas/edges/vnext][%d] getConfigurationSchemasEdgesVnextGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConfigurationSchemasEdgesVnextGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConfigurationSchemasEdgesVnextGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
