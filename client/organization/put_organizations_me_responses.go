// Code generated by go-swagger; DO NOT EDIT.

package organization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutOrganizationsMeReader is a Reader for the PutOrganizationsMe structure.
type PutOrganizationsMeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutOrganizationsMeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutOrganizationsMeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutOrganizationsMeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutOrganizationsMeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutOrganizationsMeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutOrganizationsMeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutOrganizationsMeRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPutOrganizationsMeConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutOrganizationsMeRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutOrganizationsMeUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutOrganizationsMeTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutOrganizationsMeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutOrganizationsMeServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutOrganizationsMeGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutOrganizationsMeOK creates a PutOrganizationsMeOK with default headers values
func NewPutOrganizationsMeOK() *PutOrganizationsMeOK {
	return &PutOrganizationsMeOK{}
}

/*
PutOrganizationsMeOK describes a response with status code 200, with default header values.

successful operation
*/
type PutOrganizationsMeOK struct {
	Payload *models.Organization
}

// IsSuccess returns true when this put organizations me o k response has a 2xx status code
func (o *PutOrganizationsMeOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put organizations me o k response has a 3xx status code
func (o *PutOrganizationsMeOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put organizations me o k response has a 4xx status code
func (o *PutOrganizationsMeOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put organizations me o k response has a 5xx status code
func (o *PutOrganizationsMeOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put organizations me o k response a status code equal to that given
func (o *PutOrganizationsMeOK) IsCode(code int) bool {
	return code == 200
}

func (o *PutOrganizationsMeOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/organizations/me][%d] putOrganizationsMeOK  %+v", 200, o.Payload)
}

func (o *PutOrganizationsMeOK) String() string {
	return fmt.Sprintf("[PUT /api/v2/organizations/me][%d] putOrganizationsMeOK  %+v", 200, o.Payload)
}

func (o *PutOrganizationsMeOK) GetPayload() *models.Organization {
	return o.Payload
}

func (o *PutOrganizationsMeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Organization)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOrganizationsMeBadRequest creates a PutOrganizationsMeBadRequest with default headers values
func NewPutOrganizationsMeBadRequest() *PutOrganizationsMeBadRequest {
	return &PutOrganizationsMeBadRequest{}
}

/*
PutOrganizationsMeBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutOrganizationsMeBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put organizations me bad request response has a 2xx status code
func (o *PutOrganizationsMeBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put organizations me bad request response has a 3xx status code
func (o *PutOrganizationsMeBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put organizations me bad request response has a 4xx status code
func (o *PutOrganizationsMeBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put organizations me bad request response has a 5xx status code
func (o *PutOrganizationsMeBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put organizations me bad request response a status code equal to that given
func (o *PutOrganizationsMeBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PutOrganizationsMeBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/organizations/me][%d] putOrganizationsMeBadRequest  %+v", 400, o.Payload)
}

func (o *PutOrganizationsMeBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/v2/organizations/me][%d] putOrganizationsMeBadRequest  %+v", 400, o.Payload)
}

func (o *PutOrganizationsMeBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOrganizationsMeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOrganizationsMeUnauthorized creates a PutOrganizationsMeUnauthorized with default headers values
func NewPutOrganizationsMeUnauthorized() *PutOrganizationsMeUnauthorized {
	return &PutOrganizationsMeUnauthorized{}
}

/*
PutOrganizationsMeUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PutOrganizationsMeUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put organizations me unauthorized response has a 2xx status code
func (o *PutOrganizationsMeUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put organizations me unauthorized response has a 3xx status code
func (o *PutOrganizationsMeUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put organizations me unauthorized response has a 4xx status code
func (o *PutOrganizationsMeUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put organizations me unauthorized response has a 5xx status code
func (o *PutOrganizationsMeUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put organizations me unauthorized response a status code equal to that given
func (o *PutOrganizationsMeUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PutOrganizationsMeUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/organizations/me][%d] putOrganizationsMeUnauthorized  %+v", 401, o.Payload)
}

func (o *PutOrganizationsMeUnauthorized) String() string {
	return fmt.Sprintf("[PUT /api/v2/organizations/me][%d] putOrganizationsMeUnauthorized  %+v", 401, o.Payload)
}

func (o *PutOrganizationsMeUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOrganizationsMeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOrganizationsMeForbidden creates a PutOrganizationsMeForbidden with default headers values
func NewPutOrganizationsMeForbidden() *PutOrganizationsMeForbidden {
	return &PutOrganizationsMeForbidden{}
}

/*
PutOrganizationsMeForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PutOrganizationsMeForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put organizations me forbidden response has a 2xx status code
func (o *PutOrganizationsMeForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put organizations me forbidden response has a 3xx status code
func (o *PutOrganizationsMeForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put organizations me forbidden response has a 4xx status code
func (o *PutOrganizationsMeForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put organizations me forbidden response has a 5xx status code
func (o *PutOrganizationsMeForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put organizations me forbidden response a status code equal to that given
func (o *PutOrganizationsMeForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PutOrganizationsMeForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/organizations/me][%d] putOrganizationsMeForbidden  %+v", 403, o.Payload)
}

func (o *PutOrganizationsMeForbidden) String() string {
	return fmt.Sprintf("[PUT /api/v2/organizations/me][%d] putOrganizationsMeForbidden  %+v", 403, o.Payload)
}

func (o *PutOrganizationsMeForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOrganizationsMeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOrganizationsMeNotFound creates a PutOrganizationsMeNotFound with default headers values
func NewPutOrganizationsMeNotFound() *PutOrganizationsMeNotFound {
	return &PutOrganizationsMeNotFound{}
}

/*
PutOrganizationsMeNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PutOrganizationsMeNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put organizations me not found response has a 2xx status code
func (o *PutOrganizationsMeNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put organizations me not found response has a 3xx status code
func (o *PutOrganizationsMeNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put organizations me not found response has a 4xx status code
func (o *PutOrganizationsMeNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put organizations me not found response has a 5xx status code
func (o *PutOrganizationsMeNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put organizations me not found response a status code equal to that given
func (o *PutOrganizationsMeNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PutOrganizationsMeNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/organizations/me][%d] putOrganizationsMeNotFound  %+v", 404, o.Payload)
}

func (o *PutOrganizationsMeNotFound) String() string {
	return fmt.Sprintf("[PUT /api/v2/organizations/me][%d] putOrganizationsMeNotFound  %+v", 404, o.Payload)
}

func (o *PutOrganizationsMeNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOrganizationsMeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOrganizationsMeRequestTimeout creates a PutOrganizationsMeRequestTimeout with default headers values
func NewPutOrganizationsMeRequestTimeout() *PutOrganizationsMeRequestTimeout {
	return &PutOrganizationsMeRequestTimeout{}
}

/*
PutOrganizationsMeRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutOrganizationsMeRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put organizations me request timeout response has a 2xx status code
func (o *PutOrganizationsMeRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put organizations me request timeout response has a 3xx status code
func (o *PutOrganizationsMeRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put organizations me request timeout response has a 4xx status code
func (o *PutOrganizationsMeRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this put organizations me request timeout response has a 5xx status code
func (o *PutOrganizationsMeRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this put organizations me request timeout response a status code equal to that given
func (o *PutOrganizationsMeRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PutOrganizationsMeRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/organizations/me][%d] putOrganizationsMeRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutOrganizationsMeRequestTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/organizations/me][%d] putOrganizationsMeRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutOrganizationsMeRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOrganizationsMeRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOrganizationsMeConflict creates a PutOrganizationsMeConflict with default headers values
func NewPutOrganizationsMeConflict() *PutOrganizationsMeConflict {
	return &PutOrganizationsMeConflict{}
}

/*
PutOrganizationsMeConflict describes a response with status code 409, with default header values.

Resource conflict - Unexpected version was provided
*/
type PutOrganizationsMeConflict struct {
}

// IsSuccess returns true when this put organizations me conflict response has a 2xx status code
func (o *PutOrganizationsMeConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put organizations me conflict response has a 3xx status code
func (o *PutOrganizationsMeConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put organizations me conflict response has a 4xx status code
func (o *PutOrganizationsMeConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this put organizations me conflict response has a 5xx status code
func (o *PutOrganizationsMeConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this put organizations me conflict response a status code equal to that given
func (o *PutOrganizationsMeConflict) IsCode(code int) bool {
	return code == 409
}

func (o *PutOrganizationsMeConflict) Error() string {
	return fmt.Sprintf("[PUT /api/v2/organizations/me][%d] putOrganizationsMeConflict ", 409)
}

func (o *PutOrganizationsMeConflict) String() string {
	return fmt.Sprintf("[PUT /api/v2/organizations/me][%d] putOrganizationsMeConflict ", 409)
}

func (o *PutOrganizationsMeConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutOrganizationsMeRequestEntityTooLarge creates a PutOrganizationsMeRequestEntityTooLarge with default headers values
func NewPutOrganizationsMeRequestEntityTooLarge() *PutOrganizationsMeRequestEntityTooLarge {
	return &PutOrganizationsMeRequestEntityTooLarge{}
}

/*
PutOrganizationsMeRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PutOrganizationsMeRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put organizations me request entity too large response has a 2xx status code
func (o *PutOrganizationsMeRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put organizations me request entity too large response has a 3xx status code
func (o *PutOrganizationsMeRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put organizations me request entity too large response has a 4xx status code
func (o *PutOrganizationsMeRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this put organizations me request entity too large response has a 5xx status code
func (o *PutOrganizationsMeRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this put organizations me request entity too large response a status code equal to that given
func (o *PutOrganizationsMeRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PutOrganizationsMeRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/organizations/me][%d] putOrganizationsMeRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutOrganizationsMeRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PUT /api/v2/organizations/me][%d] putOrganizationsMeRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutOrganizationsMeRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOrganizationsMeRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOrganizationsMeUnsupportedMediaType creates a PutOrganizationsMeUnsupportedMediaType with default headers values
func NewPutOrganizationsMeUnsupportedMediaType() *PutOrganizationsMeUnsupportedMediaType {
	return &PutOrganizationsMeUnsupportedMediaType{}
}

/*
PutOrganizationsMeUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutOrganizationsMeUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put organizations me unsupported media type response has a 2xx status code
func (o *PutOrganizationsMeUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put organizations me unsupported media type response has a 3xx status code
func (o *PutOrganizationsMeUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put organizations me unsupported media type response has a 4xx status code
func (o *PutOrganizationsMeUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this put organizations me unsupported media type response has a 5xx status code
func (o *PutOrganizationsMeUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this put organizations me unsupported media type response a status code equal to that given
func (o *PutOrganizationsMeUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PutOrganizationsMeUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/organizations/me][%d] putOrganizationsMeUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutOrganizationsMeUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PUT /api/v2/organizations/me][%d] putOrganizationsMeUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutOrganizationsMeUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOrganizationsMeUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOrganizationsMeTooManyRequests creates a PutOrganizationsMeTooManyRequests with default headers values
func NewPutOrganizationsMeTooManyRequests() *PutOrganizationsMeTooManyRequests {
	return &PutOrganizationsMeTooManyRequests{}
}

/*
PutOrganizationsMeTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutOrganizationsMeTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put organizations me too many requests response has a 2xx status code
func (o *PutOrganizationsMeTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put organizations me too many requests response has a 3xx status code
func (o *PutOrganizationsMeTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put organizations me too many requests response has a 4xx status code
func (o *PutOrganizationsMeTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this put organizations me too many requests response has a 5xx status code
func (o *PutOrganizationsMeTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this put organizations me too many requests response a status code equal to that given
func (o *PutOrganizationsMeTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PutOrganizationsMeTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/organizations/me][%d] putOrganizationsMeTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutOrganizationsMeTooManyRequests) String() string {
	return fmt.Sprintf("[PUT /api/v2/organizations/me][%d] putOrganizationsMeTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutOrganizationsMeTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOrganizationsMeTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOrganizationsMeInternalServerError creates a PutOrganizationsMeInternalServerError with default headers values
func NewPutOrganizationsMeInternalServerError() *PutOrganizationsMeInternalServerError {
	return &PutOrganizationsMeInternalServerError{}
}

/*
PutOrganizationsMeInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutOrganizationsMeInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put organizations me internal server error response has a 2xx status code
func (o *PutOrganizationsMeInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put organizations me internal server error response has a 3xx status code
func (o *PutOrganizationsMeInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put organizations me internal server error response has a 4xx status code
func (o *PutOrganizationsMeInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this put organizations me internal server error response has a 5xx status code
func (o *PutOrganizationsMeInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this put organizations me internal server error response a status code equal to that given
func (o *PutOrganizationsMeInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PutOrganizationsMeInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/organizations/me][%d] putOrganizationsMeInternalServerError  %+v", 500, o.Payload)
}

func (o *PutOrganizationsMeInternalServerError) String() string {
	return fmt.Sprintf("[PUT /api/v2/organizations/me][%d] putOrganizationsMeInternalServerError  %+v", 500, o.Payload)
}

func (o *PutOrganizationsMeInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOrganizationsMeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOrganizationsMeServiceUnavailable creates a PutOrganizationsMeServiceUnavailable with default headers values
func NewPutOrganizationsMeServiceUnavailable() *PutOrganizationsMeServiceUnavailable {
	return &PutOrganizationsMeServiceUnavailable{}
}

/*
PutOrganizationsMeServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutOrganizationsMeServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put organizations me service unavailable response has a 2xx status code
func (o *PutOrganizationsMeServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put organizations me service unavailable response has a 3xx status code
func (o *PutOrganizationsMeServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put organizations me service unavailable response has a 4xx status code
func (o *PutOrganizationsMeServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this put organizations me service unavailable response has a 5xx status code
func (o *PutOrganizationsMeServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this put organizations me service unavailable response a status code equal to that given
func (o *PutOrganizationsMeServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PutOrganizationsMeServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/organizations/me][%d] putOrganizationsMeServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutOrganizationsMeServiceUnavailable) String() string {
	return fmt.Sprintf("[PUT /api/v2/organizations/me][%d] putOrganizationsMeServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutOrganizationsMeServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOrganizationsMeServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOrganizationsMeGatewayTimeout creates a PutOrganizationsMeGatewayTimeout with default headers values
func NewPutOrganizationsMeGatewayTimeout() *PutOrganizationsMeGatewayTimeout {
	return &PutOrganizationsMeGatewayTimeout{}
}

/*
PutOrganizationsMeGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PutOrganizationsMeGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put organizations me gateway timeout response has a 2xx status code
func (o *PutOrganizationsMeGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put organizations me gateway timeout response has a 3xx status code
func (o *PutOrganizationsMeGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put organizations me gateway timeout response has a 4xx status code
func (o *PutOrganizationsMeGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this put organizations me gateway timeout response has a 5xx status code
func (o *PutOrganizationsMeGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this put organizations me gateway timeout response a status code equal to that given
func (o *PutOrganizationsMeGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PutOrganizationsMeGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/organizations/me][%d] putOrganizationsMeGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutOrganizationsMeGatewayTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/organizations/me][%d] putOrganizationsMeGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutOrganizationsMeGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOrganizationsMeGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
