// Code generated by go-swagger; DO NOT EDIT.

package organization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetOrganizationsLimitsDocsReader is a Reader for the GetOrganizationsLimitsDocs structure.
type GetOrganizationsLimitsDocsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOrganizationsLimitsDocsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOrganizationsLimitsDocsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOrganizationsLimitsDocsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetOrganizationsLimitsDocsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetOrganizationsLimitsDocsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOrganizationsLimitsDocsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetOrganizationsLimitsDocsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetOrganizationsLimitsDocsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetOrganizationsLimitsDocsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetOrganizationsLimitsDocsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOrganizationsLimitsDocsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetOrganizationsLimitsDocsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetOrganizationsLimitsDocsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetOrganizationsLimitsDocsOK creates a GetOrganizationsLimitsDocsOK with default headers values
func NewGetOrganizationsLimitsDocsOK() *GetOrganizationsLimitsDocsOK {
	return &GetOrganizationsLimitsDocsOK{}
}

/*
GetOrganizationsLimitsDocsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetOrganizationsLimitsDocsOK struct {
	Payload *models.URLResponse
}

// IsSuccess returns true when this get organizations limits docs o k response has a 2xx status code
func (o *GetOrganizationsLimitsDocsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get organizations limits docs o k response has a 3xx status code
func (o *GetOrganizationsLimitsDocsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations limits docs o k response has a 4xx status code
func (o *GetOrganizationsLimitsDocsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get organizations limits docs o k response has a 5xx status code
func (o *GetOrganizationsLimitsDocsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get organizations limits docs o k response a status code equal to that given
func (o *GetOrganizationsLimitsDocsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetOrganizationsLimitsDocsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/organizations/limits/docs][%d] getOrganizationsLimitsDocsOK  %+v", 200, o.Payload)
}

func (o *GetOrganizationsLimitsDocsOK) String() string {
	return fmt.Sprintf("[GET /api/v2/organizations/limits/docs][%d] getOrganizationsLimitsDocsOK  %+v", 200, o.Payload)
}

func (o *GetOrganizationsLimitsDocsOK) GetPayload() *models.URLResponse {
	return o.Payload
}

func (o *GetOrganizationsLimitsDocsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.URLResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationsLimitsDocsBadRequest creates a GetOrganizationsLimitsDocsBadRequest with default headers values
func NewGetOrganizationsLimitsDocsBadRequest() *GetOrganizationsLimitsDocsBadRequest {
	return &GetOrganizationsLimitsDocsBadRequest{}
}

/*
GetOrganizationsLimitsDocsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetOrganizationsLimitsDocsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get organizations limits docs bad request response has a 2xx status code
func (o *GetOrganizationsLimitsDocsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organizations limits docs bad request response has a 3xx status code
func (o *GetOrganizationsLimitsDocsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations limits docs bad request response has a 4xx status code
func (o *GetOrganizationsLimitsDocsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organizations limits docs bad request response has a 5xx status code
func (o *GetOrganizationsLimitsDocsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get organizations limits docs bad request response a status code equal to that given
func (o *GetOrganizationsLimitsDocsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetOrganizationsLimitsDocsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/organizations/limits/docs][%d] getOrganizationsLimitsDocsBadRequest  %+v", 400, o.Payload)
}

func (o *GetOrganizationsLimitsDocsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/organizations/limits/docs][%d] getOrganizationsLimitsDocsBadRequest  %+v", 400, o.Payload)
}

func (o *GetOrganizationsLimitsDocsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrganizationsLimitsDocsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationsLimitsDocsUnauthorized creates a GetOrganizationsLimitsDocsUnauthorized with default headers values
func NewGetOrganizationsLimitsDocsUnauthorized() *GetOrganizationsLimitsDocsUnauthorized {
	return &GetOrganizationsLimitsDocsUnauthorized{}
}

/*
GetOrganizationsLimitsDocsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetOrganizationsLimitsDocsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get organizations limits docs unauthorized response has a 2xx status code
func (o *GetOrganizationsLimitsDocsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organizations limits docs unauthorized response has a 3xx status code
func (o *GetOrganizationsLimitsDocsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations limits docs unauthorized response has a 4xx status code
func (o *GetOrganizationsLimitsDocsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organizations limits docs unauthorized response has a 5xx status code
func (o *GetOrganizationsLimitsDocsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get organizations limits docs unauthorized response a status code equal to that given
func (o *GetOrganizationsLimitsDocsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetOrganizationsLimitsDocsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/organizations/limits/docs][%d] getOrganizationsLimitsDocsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetOrganizationsLimitsDocsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/organizations/limits/docs][%d] getOrganizationsLimitsDocsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetOrganizationsLimitsDocsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrganizationsLimitsDocsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationsLimitsDocsForbidden creates a GetOrganizationsLimitsDocsForbidden with default headers values
func NewGetOrganizationsLimitsDocsForbidden() *GetOrganizationsLimitsDocsForbidden {
	return &GetOrganizationsLimitsDocsForbidden{}
}

/*
GetOrganizationsLimitsDocsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetOrganizationsLimitsDocsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get organizations limits docs forbidden response has a 2xx status code
func (o *GetOrganizationsLimitsDocsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organizations limits docs forbidden response has a 3xx status code
func (o *GetOrganizationsLimitsDocsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations limits docs forbidden response has a 4xx status code
func (o *GetOrganizationsLimitsDocsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organizations limits docs forbidden response has a 5xx status code
func (o *GetOrganizationsLimitsDocsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get organizations limits docs forbidden response a status code equal to that given
func (o *GetOrganizationsLimitsDocsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetOrganizationsLimitsDocsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/organizations/limits/docs][%d] getOrganizationsLimitsDocsForbidden  %+v", 403, o.Payload)
}

func (o *GetOrganizationsLimitsDocsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/organizations/limits/docs][%d] getOrganizationsLimitsDocsForbidden  %+v", 403, o.Payload)
}

func (o *GetOrganizationsLimitsDocsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrganizationsLimitsDocsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationsLimitsDocsNotFound creates a GetOrganizationsLimitsDocsNotFound with default headers values
func NewGetOrganizationsLimitsDocsNotFound() *GetOrganizationsLimitsDocsNotFound {
	return &GetOrganizationsLimitsDocsNotFound{}
}

/*
GetOrganizationsLimitsDocsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetOrganizationsLimitsDocsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get organizations limits docs not found response has a 2xx status code
func (o *GetOrganizationsLimitsDocsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organizations limits docs not found response has a 3xx status code
func (o *GetOrganizationsLimitsDocsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations limits docs not found response has a 4xx status code
func (o *GetOrganizationsLimitsDocsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organizations limits docs not found response has a 5xx status code
func (o *GetOrganizationsLimitsDocsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get organizations limits docs not found response a status code equal to that given
func (o *GetOrganizationsLimitsDocsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetOrganizationsLimitsDocsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/organizations/limits/docs][%d] getOrganizationsLimitsDocsNotFound  %+v", 404, o.Payload)
}

func (o *GetOrganizationsLimitsDocsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/organizations/limits/docs][%d] getOrganizationsLimitsDocsNotFound  %+v", 404, o.Payload)
}

func (o *GetOrganizationsLimitsDocsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrganizationsLimitsDocsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationsLimitsDocsRequestTimeout creates a GetOrganizationsLimitsDocsRequestTimeout with default headers values
func NewGetOrganizationsLimitsDocsRequestTimeout() *GetOrganizationsLimitsDocsRequestTimeout {
	return &GetOrganizationsLimitsDocsRequestTimeout{}
}

/*
GetOrganizationsLimitsDocsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetOrganizationsLimitsDocsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get organizations limits docs request timeout response has a 2xx status code
func (o *GetOrganizationsLimitsDocsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organizations limits docs request timeout response has a 3xx status code
func (o *GetOrganizationsLimitsDocsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations limits docs request timeout response has a 4xx status code
func (o *GetOrganizationsLimitsDocsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organizations limits docs request timeout response has a 5xx status code
func (o *GetOrganizationsLimitsDocsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get organizations limits docs request timeout response a status code equal to that given
func (o *GetOrganizationsLimitsDocsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetOrganizationsLimitsDocsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/organizations/limits/docs][%d] getOrganizationsLimitsDocsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetOrganizationsLimitsDocsRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/organizations/limits/docs][%d] getOrganizationsLimitsDocsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetOrganizationsLimitsDocsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrganizationsLimitsDocsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationsLimitsDocsRequestEntityTooLarge creates a GetOrganizationsLimitsDocsRequestEntityTooLarge with default headers values
func NewGetOrganizationsLimitsDocsRequestEntityTooLarge() *GetOrganizationsLimitsDocsRequestEntityTooLarge {
	return &GetOrganizationsLimitsDocsRequestEntityTooLarge{}
}

/*
GetOrganizationsLimitsDocsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetOrganizationsLimitsDocsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get organizations limits docs request entity too large response has a 2xx status code
func (o *GetOrganizationsLimitsDocsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organizations limits docs request entity too large response has a 3xx status code
func (o *GetOrganizationsLimitsDocsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations limits docs request entity too large response has a 4xx status code
func (o *GetOrganizationsLimitsDocsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organizations limits docs request entity too large response has a 5xx status code
func (o *GetOrganizationsLimitsDocsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get organizations limits docs request entity too large response a status code equal to that given
func (o *GetOrganizationsLimitsDocsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetOrganizationsLimitsDocsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/organizations/limits/docs][%d] getOrganizationsLimitsDocsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetOrganizationsLimitsDocsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/organizations/limits/docs][%d] getOrganizationsLimitsDocsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetOrganizationsLimitsDocsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrganizationsLimitsDocsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationsLimitsDocsUnsupportedMediaType creates a GetOrganizationsLimitsDocsUnsupportedMediaType with default headers values
func NewGetOrganizationsLimitsDocsUnsupportedMediaType() *GetOrganizationsLimitsDocsUnsupportedMediaType {
	return &GetOrganizationsLimitsDocsUnsupportedMediaType{}
}

/*
GetOrganizationsLimitsDocsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetOrganizationsLimitsDocsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get organizations limits docs unsupported media type response has a 2xx status code
func (o *GetOrganizationsLimitsDocsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organizations limits docs unsupported media type response has a 3xx status code
func (o *GetOrganizationsLimitsDocsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations limits docs unsupported media type response has a 4xx status code
func (o *GetOrganizationsLimitsDocsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organizations limits docs unsupported media type response has a 5xx status code
func (o *GetOrganizationsLimitsDocsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get organizations limits docs unsupported media type response a status code equal to that given
func (o *GetOrganizationsLimitsDocsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetOrganizationsLimitsDocsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/organizations/limits/docs][%d] getOrganizationsLimitsDocsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetOrganizationsLimitsDocsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/organizations/limits/docs][%d] getOrganizationsLimitsDocsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetOrganizationsLimitsDocsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrganizationsLimitsDocsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationsLimitsDocsTooManyRequests creates a GetOrganizationsLimitsDocsTooManyRequests with default headers values
func NewGetOrganizationsLimitsDocsTooManyRequests() *GetOrganizationsLimitsDocsTooManyRequests {
	return &GetOrganizationsLimitsDocsTooManyRequests{}
}

/*
GetOrganizationsLimitsDocsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetOrganizationsLimitsDocsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get organizations limits docs too many requests response has a 2xx status code
func (o *GetOrganizationsLimitsDocsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organizations limits docs too many requests response has a 3xx status code
func (o *GetOrganizationsLimitsDocsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations limits docs too many requests response has a 4xx status code
func (o *GetOrganizationsLimitsDocsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organizations limits docs too many requests response has a 5xx status code
func (o *GetOrganizationsLimitsDocsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get organizations limits docs too many requests response a status code equal to that given
func (o *GetOrganizationsLimitsDocsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetOrganizationsLimitsDocsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/organizations/limits/docs][%d] getOrganizationsLimitsDocsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetOrganizationsLimitsDocsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/organizations/limits/docs][%d] getOrganizationsLimitsDocsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetOrganizationsLimitsDocsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrganizationsLimitsDocsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationsLimitsDocsInternalServerError creates a GetOrganizationsLimitsDocsInternalServerError with default headers values
func NewGetOrganizationsLimitsDocsInternalServerError() *GetOrganizationsLimitsDocsInternalServerError {
	return &GetOrganizationsLimitsDocsInternalServerError{}
}

/*
GetOrganizationsLimitsDocsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetOrganizationsLimitsDocsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get organizations limits docs internal server error response has a 2xx status code
func (o *GetOrganizationsLimitsDocsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organizations limits docs internal server error response has a 3xx status code
func (o *GetOrganizationsLimitsDocsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations limits docs internal server error response has a 4xx status code
func (o *GetOrganizationsLimitsDocsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get organizations limits docs internal server error response has a 5xx status code
func (o *GetOrganizationsLimitsDocsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get organizations limits docs internal server error response a status code equal to that given
func (o *GetOrganizationsLimitsDocsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetOrganizationsLimitsDocsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/organizations/limits/docs][%d] getOrganizationsLimitsDocsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOrganizationsLimitsDocsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/organizations/limits/docs][%d] getOrganizationsLimitsDocsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOrganizationsLimitsDocsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrganizationsLimitsDocsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationsLimitsDocsServiceUnavailable creates a GetOrganizationsLimitsDocsServiceUnavailable with default headers values
func NewGetOrganizationsLimitsDocsServiceUnavailable() *GetOrganizationsLimitsDocsServiceUnavailable {
	return &GetOrganizationsLimitsDocsServiceUnavailable{}
}

/*
GetOrganizationsLimitsDocsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetOrganizationsLimitsDocsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get organizations limits docs service unavailable response has a 2xx status code
func (o *GetOrganizationsLimitsDocsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organizations limits docs service unavailable response has a 3xx status code
func (o *GetOrganizationsLimitsDocsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations limits docs service unavailable response has a 4xx status code
func (o *GetOrganizationsLimitsDocsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get organizations limits docs service unavailable response has a 5xx status code
func (o *GetOrganizationsLimitsDocsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get organizations limits docs service unavailable response a status code equal to that given
func (o *GetOrganizationsLimitsDocsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetOrganizationsLimitsDocsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/organizations/limits/docs][%d] getOrganizationsLimitsDocsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetOrganizationsLimitsDocsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/organizations/limits/docs][%d] getOrganizationsLimitsDocsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetOrganizationsLimitsDocsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrganizationsLimitsDocsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationsLimitsDocsGatewayTimeout creates a GetOrganizationsLimitsDocsGatewayTimeout with default headers values
func NewGetOrganizationsLimitsDocsGatewayTimeout() *GetOrganizationsLimitsDocsGatewayTimeout {
	return &GetOrganizationsLimitsDocsGatewayTimeout{}
}

/*
GetOrganizationsLimitsDocsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetOrganizationsLimitsDocsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get organizations limits docs gateway timeout response has a 2xx status code
func (o *GetOrganizationsLimitsDocsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organizations limits docs gateway timeout response has a 3xx status code
func (o *GetOrganizationsLimitsDocsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations limits docs gateway timeout response has a 4xx status code
func (o *GetOrganizationsLimitsDocsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get organizations limits docs gateway timeout response has a 5xx status code
func (o *GetOrganizationsLimitsDocsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get organizations limits docs gateway timeout response a status code equal to that given
func (o *GetOrganizationsLimitsDocsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetOrganizationsLimitsDocsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/organizations/limits/docs][%d] getOrganizationsLimitsDocsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetOrganizationsLimitsDocsGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/organizations/limits/docs][%d] getOrganizationsLimitsDocsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetOrganizationsLimitsDocsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrganizationsLimitsDocsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
