// Code generated by go-swagger; DO NOT EDIT.

package organization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetOrganizationsLimitsNamespaceDefaultsReader is a Reader for the GetOrganizationsLimitsNamespaceDefaults structure.
type GetOrganizationsLimitsNamespaceDefaultsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOrganizationsLimitsNamespaceDefaultsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOrganizationsLimitsNamespaceDefaultsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOrganizationsLimitsNamespaceDefaultsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetOrganizationsLimitsNamespaceDefaultsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetOrganizationsLimitsNamespaceDefaultsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOrganizationsLimitsNamespaceDefaultsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetOrganizationsLimitsNamespaceDefaultsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetOrganizationsLimitsNamespaceDefaultsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetOrganizationsLimitsNamespaceDefaultsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetOrganizationsLimitsNamespaceDefaultsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOrganizationsLimitsNamespaceDefaultsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetOrganizationsLimitsNamespaceDefaultsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetOrganizationsLimitsNamespaceDefaultsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetOrganizationsLimitsNamespaceDefaultsOK creates a GetOrganizationsLimitsNamespaceDefaultsOK with default headers values
func NewGetOrganizationsLimitsNamespaceDefaultsOK() *GetOrganizationsLimitsNamespaceDefaultsOK {
	return &GetOrganizationsLimitsNamespaceDefaultsOK{}
}

/*
GetOrganizationsLimitsNamespaceDefaultsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetOrganizationsLimitsNamespaceDefaultsOK struct {
	Payload *models.LimitsEntityListing
}

// IsSuccess returns true when this get organizations limits namespace defaults o k response has a 2xx status code
func (o *GetOrganizationsLimitsNamespaceDefaultsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get organizations limits namespace defaults o k response has a 3xx status code
func (o *GetOrganizationsLimitsNamespaceDefaultsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations limits namespace defaults o k response has a 4xx status code
func (o *GetOrganizationsLimitsNamespaceDefaultsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get organizations limits namespace defaults o k response has a 5xx status code
func (o *GetOrganizationsLimitsNamespaceDefaultsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get organizations limits namespace defaults o k response a status code equal to that given
func (o *GetOrganizationsLimitsNamespaceDefaultsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetOrganizationsLimitsNamespaceDefaultsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/organizations/limits/namespaces/{namespaceName}/defaults][%d] getOrganizationsLimitsNamespaceDefaultsOK  %+v", 200, o.Payload)
}

func (o *GetOrganizationsLimitsNamespaceDefaultsOK) String() string {
	return fmt.Sprintf("[GET /api/v2/organizations/limits/namespaces/{namespaceName}/defaults][%d] getOrganizationsLimitsNamespaceDefaultsOK  %+v", 200, o.Payload)
}

func (o *GetOrganizationsLimitsNamespaceDefaultsOK) GetPayload() *models.LimitsEntityListing {
	return o.Payload
}

func (o *GetOrganizationsLimitsNamespaceDefaultsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LimitsEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationsLimitsNamespaceDefaultsBadRequest creates a GetOrganizationsLimitsNamespaceDefaultsBadRequest with default headers values
func NewGetOrganizationsLimitsNamespaceDefaultsBadRequest() *GetOrganizationsLimitsNamespaceDefaultsBadRequest {
	return &GetOrganizationsLimitsNamespaceDefaultsBadRequest{}
}

/*
GetOrganizationsLimitsNamespaceDefaultsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetOrganizationsLimitsNamespaceDefaultsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get organizations limits namespace defaults bad request response has a 2xx status code
func (o *GetOrganizationsLimitsNamespaceDefaultsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organizations limits namespace defaults bad request response has a 3xx status code
func (o *GetOrganizationsLimitsNamespaceDefaultsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations limits namespace defaults bad request response has a 4xx status code
func (o *GetOrganizationsLimitsNamespaceDefaultsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organizations limits namespace defaults bad request response has a 5xx status code
func (o *GetOrganizationsLimitsNamespaceDefaultsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get organizations limits namespace defaults bad request response a status code equal to that given
func (o *GetOrganizationsLimitsNamespaceDefaultsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetOrganizationsLimitsNamespaceDefaultsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/organizations/limits/namespaces/{namespaceName}/defaults][%d] getOrganizationsLimitsNamespaceDefaultsBadRequest  %+v", 400, o.Payload)
}

func (o *GetOrganizationsLimitsNamespaceDefaultsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/organizations/limits/namespaces/{namespaceName}/defaults][%d] getOrganizationsLimitsNamespaceDefaultsBadRequest  %+v", 400, o.Payload)
}

func (o *GetOrganizationsLimitsNamespaceDefaultsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrganizationsLimitsNamespaceDefaultsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationsLimitsNamespaceDefaultsUnauthorized creates a GetOrganizationsLimitsNamespaceDefaultsUnauthorized with default headers values
func NewGetOrganizationsLimitsNamespaceDefaultsUnauthorized() *GetOrganizationsLimitsNamespaceDefaultsUnauthorized {
	return &GetOrganizationsLimitsNamespaceDefaultsUnauthorized{}
}

/*
GetOrganizationsLimitsNamespaceDefaultsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetOrganizationsLimitsNamespaceDefaultsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get organizations limits namespace defaults unauthorized response has a 2xx status code
func (o *GetOrganizationsLimitsNamespaceDefaultsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organizations limits namespace defaults unauthorized response has a 3xx status code
func (o *GetOrganizationsLimitsNamespaceDefaultsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations limits namespace defaults unauthorized response has a 4xx status code
func (o *GetOrganizationsLimitsNamespaceDefaultsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organizations limits namespace defaults unauthorized response has a 5xx status code
func (o *GetOrganizationsLimitsNamespaceDefaultsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get organizations limits namespace defaults unauthorized response a status code equal to that given
func (o *GetOrganizationsLimitsNamespaceDefaultsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetOrganizationsLimitsNamespaceDefaultsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/organizations/limits/namespaces/{namespaceName}/defaults][%d] getOrganizationsLimitsNamespaceDefaultsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetOrganizationsLimitsNamespaceDefaultsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/organizations/limits/namespaces/{namespaceName}/defaults][%d] getOrganizationsLimitsNamespaceDefaultsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetOrganizationsLimitsNamespaceDefaultsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrganizationsLimitsNamespaceDefaultsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationsLimitsNamespaceDefaultsForbidden creates a GetOrganizationsLimitsNamespaceDefaultsForbidden with default headers values
func NewGetOrganizationsLimitsNamespaceDefaultsForbidden() *GetOrganizationsLimitsNamespaceDefaultsForbidden {
	return &GetOrganizationsLimitsNamespaceDefaultsForbidden{}
}

/*
GetOrganizationsLimitsNamespaceDefaultsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetOrganizationsLimitsNamespaceDefaultsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get organizations limits namespace defaults forbidden response has a 2xx status code
func (o *GetOrganizationsLimitsNamespaceDefaultsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organizations limits namespace defaults forbidden response has a 3xx status code
func (o *GetOrganizationsLimitsNamespaceDefaultsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations limits namespace defaults forbidden response has a 4xx status code
func (o *GetOrganizationsLimitsNamespaceDefaultsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organizations limits namespace defaults forbidden response has a 5xx status code
func (o *GetOrganizationsLimitsNamespaceDefaultsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get organizations limits namespace defaults forbidden response a status code equal to that given
func (o *GetOrganizationsLimitsNamespaceDefaultsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetOrganizationsLimitsNamespaceDefaultsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/organizations/limits/namespaces/{namespaceName}/defaults][%d] getOrganizationsLimitsNamespaceDefaultsForbidden  %+v", 403, o.Payload)
}

func (o *GetOrganizationsLimitsNamespaceDefaultsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/organizations/limits/namespaces/{namespaceName}/defaults][%d] getOrganizationsLimitsNamespaceDefaultsForbidden  %+v", 403, o.Payload)
}

func (o *GetOrganizationsLimitsNamespaceDefaultsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrganizationsLimitsNamespaceDefaultsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationsLimitsNamespaceDefaultsNotFound creates a GetOrganizationsLimitsNamespaceDefaultsNotFound with default headers values
func NewGetOrganizationsLimitsNamespaceDefaultsNotFound() *GetOrganizationsLimitsNamespaceDefaultsNotFound {
	return &GetOrganizationsLimitsNamespaceDefaultsNotFound{}
}

/*
GetOrganizationsLimitsNamespaceDefaultsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetOrganizationsLimitsNamespaceDefaultsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get organizations limits namespace defaults not found response has a 2xx status code
func (o *GetOrganizationsLimitsNamespaceDefaultsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organizations limits namespace defaults not found response has a 3xx status code
func (o *GetOrganizationsLimitsNamespaceDefaultsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations limits namespace defaults not found response has a 4xx status code
func (o *GetOrganizationsLimitsNamespaceDefaultsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organizations limits namespace defaults not found response has a 5xx status code
func (o *GetOrganizationsLimitsNamespaceDefaultsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get organizations limits namespace defaults not found response a status code equal to that given
func (o *GetOrganizationsLimitsNamespaceDefaultsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetOrganizationsLimitsNamespaceDefaultsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/organizations/limits/namespaces/{namespaceName}/defaults][%d] getOrganizationsLimitsNamespaceDefaultsNotFound  %+v", 404, o.Payload)
}

func (o *GetOrganizationsLimitsNamespaceDefaultsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/organizations/limits/namespaces/{namespaceName}/defaults][%d] getOrganizationsLimitsNamespaceDefaultsNotFound  %+v", 404, o.Payload)
}

func (o *GetOrganizationsLimitsNamespaceDefaultsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrganizationsLimitsNamespaceDefaultsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationsLimitsNamespaceDefaultsRequestTimeout creates a GetOrganizationsLimitsNamespaceDefaultsRequestTimeout with default headers values
func NewGetOrganizationsLimitsNamespaceDefaultsRequestTimeout() *GetOrganizationsLimitsNamespaceDefaultsRequestTimeout {
	return &GetOrganizationsLimitsNamespaceDefaultsRequestTimeout{}
}

/*
GetOrganizationsLimitsNamespaceDefaultsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetOrganizationsLimitsNamespaceDefaultsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get organizations limits namespace defaults request timeout response has a 2xx status code
func (o *GetOrganizationsLimitsNamespaceDefaultsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organizations limits namespace defaults request timeout response has a 3xx status code
func (o *GetOrganizationsLimitsNamespaceDefaultsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations limits namespace defaults request timeout response has a 4xx status code
func (o *GetOrganizationsLimitsNamespaceDefaultsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organizations limits namespace defaults request timeout response has a 5xx status code
func (o *GetOrganizationsLimitsNamespaceDefaultsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get organizations limits namespace defaults request timeout response a status code equal to that given
func (o *GetOrganizationsLimitsNamespaceDefaultsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetOrganizationsLimitsNamespaceDefaultsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/organizations/limits/namespaces/{namespaceName}/defaults][%d] getOrganizationsLimitsNamespaceDefaultsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetOrganizationsLimitsNamespaceDefaultsRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/organizations/limits/namespaces/{namespaceName}/defaults][%d] getOrganizationsLimitsNamespaceDefaultsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetOrganizationsLimitsNamespaceDefaultsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrganizationsLimitsNamespaceDefaultsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationsLimitsNamespaceDefaultsRequestEntityTooLarge creates a GetOrganizationsLimitsNamespaceDefaultsRequestEntityTooLarge with default headers values
func NewGetOrganizationsLimitsNamespaceDefaultsRequestEntityTooLarge() *GetOrganizationsLimitsNamespaceDefaultsRequestEntityTooLarge {
	return &GetOrganizationsLimitsNamespaceDefaultsRequestEntityTooLarge{}
}

/*
GetOrganizationsLimitsNamespaceDefaultsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetOrganizationsLimitsNamespaceDefaultsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get organizations limits namespace defaults request entity too large response has a 2xx status code
func (o *GetOrganizationsLimitsNamespaceDefaultsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organizations limits namespace defaults request entity too large response has a 3xx status code
func (o *GetOrganizationsLimitsNamespaceDefaultsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations limits namespace defaults request entity too large response has a 4xx status code
func (o *GetOrganizationsLimitsNamespaceDefaultsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organizations limits namespace defaults request entity too large response has a 5xx status code
func (o *GetOrganizationsLimitsNamespaceDefaultsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get organizations limits namespace defaults request entity too large response a status code equal to that given
func (o *GetOrganizationsLimitsNamespaceDefaultsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetOrganizationsLimitsNamespaceDefaultsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/organizations/limits/namespaces/{namespaceName}/defaults][%d] getOrganizationsLimitsNamespaceDefaultsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetOrganizationsLimitsNamespaceDefaultsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/organizations/limits/namespaces/{namespaceName}/defaults][%d] getOrganizationsLimitsNamespaceDefaultsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetOrganizationsLimitsNamespaceDefaultsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrganizationsLimitsNamespaceDefaultsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationsLimitsNamespaceDefaultsUnsupportedMediaType creates a GetOrganizationsLimitsNamespaceDefaultsUnsupportedMediaType with default headers values
func NewGetOrganizationsLimitsNamespaceDefaultsUnsupportedMediaType() *GetOrganizationsLimitsNamespaceDefaultsUnsupportedMediaType {
	return &GetOrganizationsLimitsNamespaceDefaultsUnsupportedMediaType{}
}

/*
GetOrganizationsLimitsNamespaceDefaultsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetOrganizationsLimitsNamespaceDefaultsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get organizations limits namespace defaults unsupported media type response has a 2xx status code
func (o *GetOrganizationsLimitsNamespaceDefaultsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organizations limits namespace defaults unsupported media type response has a 3xx status code
func (o *GetOrganizationsLimitsNamespaceDefaultsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations limits namespace defaults unsupported media type response has a 4xx status code
func (o *GetOrganizationsLimitsNamespaceDefaultsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organizations limits namespace defaults unsupported media type response has a 5xx status code
func (o *GetOrganizationsLimitsNamespaceDefaultsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get organizations limits namespace defaults unsupported media type response a status code equal to that given
func (o *GetOrganizationsLimitsNamespaceDefaultsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetOrganizationsLimitsNamespaceDefaultsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/organizations/limits/namespaces/{namespaceName}/defaults][%d] getOrganizationsLimitsNamespaceDefaultsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetOrganizationsLimitsNamespaceDefaultsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/organizations/limits/namespaces/{namespaceName}/defaults][%d] getOrganizationsLimitsNamespaceDefaultsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetOrganizationsLimitsNamespaceDefaultsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrganizationsLimitsNamespaceDefaultsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationsLimitsNamespaceDefaultsTooManyRequests creates a GetOrganizationsLimitsNamespaceDefaultsTooManyRequests with default headers values
func NewGetOrganizationsLimitsNamespaceDefaultsTooManyRequests() *GetOrganizationsLimitsNamespaceDefaultsTooManyRequests {
	return &GetOrganizationsLimitsNamespaceDefaultsTooManyRequests{}
}

/*
GetOrganizationsLimitsNamespaceDefaultsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetOrganizationsLimitsNamespaceDefaultsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get organizations limits namespace defaults too many requests response has a 2xx status code
func (o *GetOrganizationsLimitsNamespaceDefaultsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organizations limits namespace defaults too many requests response has a 3xx status code
func (o *GetOrganizationsLimitsNamespaceDefaultsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations limits namespace defaults too many requests response has a 4xx status code
func (o *GetOrganizationsLimitsNamespaceDefaultsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organizations limits namespace defaults too many requests response has a 5xx status code
func (o *GetOrganizationsLimitsNamespaceDefaultsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get organizations limits namespace defaults too many requests response a status code equal to that given
func (o *GetOrganizationsLimitsNamespaceDefaultsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetOrganizationsLimitsNamespaceDefaultsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/organizations/limits/namespaces/{namespaceName}/defaults][%d] getOrganizationsLimitsNamespaceDefaultsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetOrganizationsLimitsNamespaceDefaultsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/organizations/limits/namespaces/{namespaceName}/defaults][%d] getOrganizationsLimitsNamespaceDefaultsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetOrganizationsLimitsNamespaceDefaultsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrganizationsLimitsNamespaceDefaultsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationsLimitsNamespaceDefaultsInternalServerError creates a GetOrganizationsLimitsNamespaceDefaultsInternalServerError with default headers values
func NewGetOrganizationsLimitsNamespaceDefaultsInternalServerError() *GetOrganizationsLimitsNamespaceDefaultsInternalServerError {
	return &GetOrganizationsLimitsNamespaceDefaultsInternalServerError{}
}

/*
GetOrganizationsLimitsNamespaceDefaultsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetOrganizationsLimitsNamespaceDefaultsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get organizations limits namespace defaults internal server error response has a 2xx status code
func (o *GetOrganizationsLimitsNamespaceDefaultsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organizations limits namespace defaults internal server error response has a 3xx status code
func (o *GetOrganizationsLimitsNamespaceDefaultsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations limits namespace defaults internal server error response has a 4xx status code
func (o *GetOrganizationsLimitsNamespaceDefaultsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get organizations limits namespace defaults internal server error response has a 5xx status code
func (o *GetOrganizationsLimitsNamespaceDefaultsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get organizations limits namespace defaults internal server error response a status code equal to that given
func (o *GetOrganizationsLimitsNamespaceDefaultsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetOrganizationsLimitsNamespaceDefaultsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/organizations/limits/namespaces/{namespaceName}/defaults][%d] getOrganizationsLimitsNamespaceDefaultsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOrganizationsLimitsNamespaceDefaultsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/organizations/limits/namespaces/{namespaceName}/defaults][%d] getOrganizationsLimitsNamespaceDefaultsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOrganizationsLimitsNamespaceDefaultsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrganizationsLimitsNamespaceDefaultsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationsLimitsNamespaceDefaultsServiceUnavailable creates a GetOrganizationsLimitsNamespaceDefaultsServiceUnavailable with default headers values
func NewGetOrganizationsLimitsNamespaceDefaultsServiceUnavailable() *GetOrganizationsLimitsNamespaceDefaultsServiceUnavailable {
	return &GetOrganizationsLimitsNamespaceDefaultsServiceUnavailable{}
}

/*
GetOrganizationsLimitsNamespaceDefaultsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetOrganizationsLimitsNamespaceDefaultsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get organizations limits namespace defaults service unavailable response has a 2xx status code
func (o *GetOrganizationsLimitsNamespaceDefaultsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organizations limits namespace defaults service unavailable response has a 3xx status code
func (o *GetOrganizationsLimitsNamespaceDefaultsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations limits namespace defaults service unavailable response has a 4xx status code
func (o *GetOrganizationsLimitsNamespaceDefaultsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get organizations limits namespace defaults service unavailable response has a 5xx status code
func (o *GetOrganizationsLimitsNamespaceDefaultsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get organizations limits namespace defaults service unavailable response a status code equal to that given
func (o *GetOrganizationsLimitsNamespaceDefaultsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetOrganizationsLimitsNamespaceDefaultsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/organizations/limits/namespaces/{namespaceName}/defaults][%d] getOrganizationsLimitsNamespaceDefaultsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetOrganizationsLimitsNamespaceDefaultsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/organizations/limits/namespaces/{namespaceName}/defaults][%d] getOrganizationsLimitsNamespaceDefaultsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetOrganizationsLimitsNamespaceDefaultsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrganizationsLimitsNamespaceDefaultsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationsLimitsNamespaceDefaultsGatewayTimeout creates a GetOrganizationsLimitsNamespaceDefaultsGatewayTimeout with default headers values
func NewGetOrganizationsLimitsNamespaceDefaultsGatewayTimeout() *GetOrganizationsLimitsNamespaceDefaultsGatewayTimeout {
	return &GetOrganizationsLimitsNamespaceDefaultsGatewayTimeout{}
}

/*
GetOrganizationsLimitsNamespaceDefaultsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetOrganizationsLimitsNamespaceDefaultsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get organizations limits namespace defaults gateway timeout response has a 2xx status code
func (o *GetOrganizationsLimitsNamespaceDefaultsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organizations limits namespace defaults gateway timeout response has a 3xx status code
func (o *GetOrganizationsLimitsNamespaceDefaultsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations limits namespace defaults gateway timeout response has a 4xx status code
func (o *GetOrganizationsLimitsNamespaceDefaultsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get organizations limits namespace defaults gateway timeout response has a 5xx status code
func (o *GetOrganizationsLimitsNamespaceDefaultsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get organizations limits namespace defaults gateway timeout response a status code equal to that given
func (o *GetOrganizationsLimitsNamespaceDefaultsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetOrganizationsLimitsNamespaceDefaultsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/organizations/limits/namespaces/{namespaceName}/defaults][%d] getOrganizationsLimitsNamespaceDefaultsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetOrganizationsLimitsNamespaceDefaultsGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/organizations/limits/namespaces/{namespaceName}/defaults][%d] getOrganizationsLimitsNamespaceDefaultsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetOrganizationsLimitsNamespaceDefaultsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrganizationsLimitsNamespaceDefaultsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
