// Code generated by go-swagger; DO NOT EDIT.

package teams

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetTeamsReader is a Reader for the GetTeams structure.
type GetTeamsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTeamsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTeamsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetTeamsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetTeamsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetTeamsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetTeamsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetTeamsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetTeamsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetTeamsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetTeamsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetTeamsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetTeamsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetTeamsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetTeamsOK creates a GetTeamsOK with default headers values
func NewGetTeamsOK() *GetTeamsOK {
	return &GetTeamsOK{}
}

/*GetTeamsOK handles this case with default header values.

successful operation
*/
type GetTeamsOK struct {
	Payload *models.TeamEntityListing
}

func (o *GetTeamsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/teams][%d] getTeamsOK  %+v", 200, o.Payload)
}

func (o *GetTeamsOK) GetPayload() *models.TeamEntityListing {
	return o.Payload
}

func (o *GetTeamsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TeamEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTeamsBadRequest creates a GetTeamsBadRequest with default headers values
func NewGetTeamsBadRequest() *GetTeamsBadRequest {
	return &GetTeamsBadRequest{}
}

/*GetTeamsBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetTeamsBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetTeamsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/teams][%d] getTeamsBadRequest  %+v", 400, o.Payload)
}

func (o *GetTeamsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetTeamsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTeamsUnauthorized creates a GetTeamsUnauthorized with default headers values
func NewGetTeamsUnauthorized() *GetTeamsUnauthorized {
	return &GetTeamsUnauthorized{}
}

/*GetTeamsUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetTeamsUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetTeamsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/teams][%d] getTeamsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetTeamsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetTeamsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTeamsForbidden creates a GetTeamsForbidden with default headers values
func NewGetTeamsForbidden() *GetTeamsForbidden {
	return &GetTeamsForbidden{}
}

/*GetTeamsForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetTeamsForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetTeamsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/teams][%d] getTeamsForbidden  %+v", 403, o.Payload)
}

func (o *GetTeamsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetTeamsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTeamsNotFound creates a GetTeamsNotFound with default headers values
func NewGetTeamsNotFound() *GetTeamsNotFound {
	return &GetTeamsNotFound{}
}

/*GetTeamsNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetTeamsNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetTeamsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/teams][%d] getTeamsNotFound  %+v", 404, o.Payload)
}

func (o *GetTeamsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetTeamsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTeamsRequestTimeout creates a GetTeamsRequestTimeout with default headers values
func NewGetTeamsRequestTimeout() *GetTeamsRequestTimeout {
	return &GetTeamsRequestTimeout{}
}

/*GetTeamsRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetTeamsRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetTeamsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/teams][%d] getTeamsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetTeamsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetTeamsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTeamsRequestEntityTooLarge creates a GetTeamsRequestEntityTooLarge with default headers values
func NewGetTeamsRequestEntityTooLarge() *GetTeamsRequestEntityTooLarge {
	return &GetTeamsRequestEntityTooLarge{}
}

/*GetTeamsRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetTeamsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetTeamsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/teams][%d] getTeamsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetTeamsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetTeamsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTeamsUnsupportedMediaType creates a GetTeamsUnsupportedMediaType with default headers values
func NewGetTeamsUnsupportedMediaType() *GetTeamsUnsupportedMediaType {
	return &GetTeamsUnsupportedMediaType{}
}

/*GetTeamsUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetTeamsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetTeamsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/teams][%d] getTeamsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetTeamsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetTeamsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTeamsTooManyRequests creates a GetTeamsTooManyRequests with default headers values
func NewGetTeamsTooManyRequests() *GetTeamsTooManyRequests {
	return &GetTeamsTooManyRequests{}
}

/*GetTeamsTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetTeamsTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetTeamsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/teams][%d] getTeamsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetTeamsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetTeamsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTeamsInternalServerError creates a GetTeamsInternalServerError with default headers values
func NewGetTeamsInternalServerError() *GetTeamsInternalServerError {
	return &GetTeamsInternalServerError{}
}

/*GetTeamsInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetTeamsInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetTeamsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/teams][%d] getTeamsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetTeamsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetTeamsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTeamsServiceUnavailable creates a GetTeamsServiceUnavailable with default headers values
func NewGetTeamsServiceUnavailable() *GetTeamsServiceUnavailable {
	return &GetTeamsServiceUnavailable{}
}

/*GetTeamsServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetTeamsServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetTeamsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/teams][%d] getTeamsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetTeamsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetTeamsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTeamsGatewayTimeout creates a GetTeamsGatewayTimeout with default headers values
func NewGetTeamsGatewayTimeout() *GetTeamsGatewayTimeout {
	return &GetTeamsGatewayTimeout{}
}

/*GetTeamsGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetTeamsGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetTeamsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/teams][%d] getTeamsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetTeamsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetTeamsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
