// Code generated by go-swagger; DO NOT EDIT.

package teams

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostTeamMembersReader is a Reader for the PostTeamMembers structure.
type PostTeamMembersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostTeamMembersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostTeamMembersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostTeamMembersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostTeamMembersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostTeamMembersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostTeamMembersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostTeamMembersRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostTeamMembersRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostTeamMembersUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostTeamMembersTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostTeamMembersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostTeamMembersServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostTeamMembersGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostTeamMembersOK creates a PostTeamMembersOK with default headers values
func NewPostTeamMembersOK() *PostTeamMembersOK {
	return &PostTeamMembersOK{}
}

/*
PostTeamMembersOK describes a response with status code 200, with default header values.

successful operation
*/
type PostTeamMembersOK struct {
	Payload *models.TeamMemberAddListingResponse
}

// IsSuccess returns true when this post team members o k response has a 2xx status code
func (o *PostTeamMembersOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post team members o k response has a 3xx status code
func (o *PostTeamMembersOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post team members o k response has a 4xx status code
func (o *PostTeamMembersOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post team members o k response has a 5xx status code
func (o *PostTeamMembersOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post team members o k response a status code equal to that given
func (o *PostTeamMembersOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostTeamMembersOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/teams/{teamId}/members][%d] postTeamMembersOK  %+v", 200, o.Payload)
}

func (o *PostTeamMembersOK) String() string {
	return fmt.Sprintf("[POST /api/v2/teams/{teamId}/members][%d] postTeamMembersOK  %+v", 200, o.Payload)
}

func (o *PostTeamMembersOK) GetPayload() *models.TeamMemberAddListingResponse {
	return o.Payload
}

func (o *PostTeamMembersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TeamMemberAddListingResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTeamMembersBadRequest creates a PostTeamMembersBadRequest with default headers values
func NewPostTeamMembersBadRequest() *PostTeamMembersBadRequest {
	return &PostTeamMembersBadRequest{}
}

/*
PostTeamMembersBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostTeamMembersBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post team members bad request response has a 2xx status code
func (o *PostTeamMembersBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post team members bad request response has a 3xx status code
func (o *PostTeamMembersBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post team members bad request response has a 4xx status code
func (o *PostTeamMembersBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post team members bad request response has a 5xx status code
func (o *PostTeamMembersBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post team members bad request response a status code equal to that given
func (o *PostTeamMembersBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostTeamMembersBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/teams/{teamId}/members][%d] postTeamMembersBadRequest  %+v", 400, o.Payload)
}

func (o *PostTeamMembersBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/teams/{teamId}/members][%d] postTeamMembersBadRequest  %+v", 400, o.Payload)
}

func (o *PostTeamMembersBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostTeamMembersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTeamMembersUnauthorized creates a PostTeamMembersUnauthorized with default headers values
func NewPostTeamMembersUnauthorized() *PostTeamMembersUnauthorized {
	return &PostTeamMembersUnauthorized{}
}

/*
PostTeamMembersUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostTeamMembersUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post team members unauthorized response has a 2xx status code
func (o *PostTeamMembersUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post team members unauthorized response has a 3xx status code
func (o *PostTeamMembersUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post team members unauthorized response has a 4xx status code
func (o *PostTeamMembersUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post team members unauthorized response has a 5xx status code
func (o *PostTeamMembersUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post team members unauthorized response a status code equal to that given
func (o *PostTeamMembersUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostTeamMembersUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/teams/{teamId}/members][%d] postTeamMembersUnauthorized  %+v", 401, o.Payload)
}

func (o *PostTeamMembersUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/teams/{teamId}/members][%d] postTeamMembersUnauthorized  %+v", 401, o.Payload)
}

func (o *PostTeamMembersUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostTeamMembersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTeamMembersForbidden creates a PostTeamMembersForbidden with default headers values
func NewPostTeamMembersForbidden() *PostTeamMembersForbidden {
	return &PostTeamMembersForbidden{}
}

/*
PostTeamMembersForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostTeamMembersForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post team members forbidden response has a 2xx status code
func (o *PostTeamMembersForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post team members forbidden response has a 3xx status code
func (o *PostTeamMembersForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post team members forbidden response has a 4xx status code
func (o *PostTeamMembersForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post team members forbidden response has a 5xx status code
func (o *PostTeamMembersForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post team members forbidden response a status code equal to that given
func (o *PostTeamMembersForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostTeamMembersForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/teams/{teamId}/members][%d] postTeamMembersForbidden  %+v", 403, o.Payload)
}

func (o *PostTeamMembersForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/teams/{teamId}/members][%d] postTeamMembersForbidden  %+v", 403, o.Payload)
}

func (o *PostTeamMembersForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostTeamMembersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTeamMembersNotFound creates a PostTeamMembersNotFound with default headers values
func NewPostTeamMembersNotFound() *PostTeamMembersNotFound {
	return &PostTeamMembersNotFound{}
}

/*
PostTeamMembersNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostTeamMembersNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post team members not found response has a 2xx status code
func (o *PostTeamMembersNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post team members not found response has a 3xx status code
func (o *PostTeamMembersNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post team members not found response has a 4xx status code
func (o *PostTeamMembersNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post team members not found response has a 5xx status code
func (o *PostTeamMembersNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post team members not found response a status code equal to that given
func (o *PostTeamMembersNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostTeamMembersNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/teams/{teamId}/members][%d] postTeamMembersNotFound  %+v", 404, o.Payload)
}

func (o *PostTeamMembersNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/teams/{teamId}/members][%d] postTeamMembersNotFound  %+v", 404, o.Payload)
}

func (o *PostTeamMembersNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostTeamMembersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTeamMembersRequestTimeout creates a PostTeamMembersRequestTimeout with default headers values
func NewPostTeamMembersRequestTimeout() *PostTeamMembersRequestTimeout {
	return &PostTeamMembersRequestTimeout{}
}

/*
PostTeamMembersRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostTeamMembersRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post team members request timeout response has a 2xx status code
func (o *PostTeamMembersRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post team members request timeout response has a 3xx status code
func (o *PostTeamMembersRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post team members request timeout response has a 4xx status code
func (o *PostTeamMembersRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post team members request timeout response has a 5xx status code
func (o *PostTeamMembersRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post team members request timeout response a status code equal to that given
func (o *PostTeamMembersRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostTeamMembersRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/teams/{teamId}/members][%d] postTeamMembersRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostTeamMembersRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/teams/{teamId}/members][%d] postTeamMembersRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostTeamMembersRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostTeamMembersRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTeamMembersRequestEntityTooLarge creates a PostTeamMembersRequestEntityTooLarge with default headers values
func NewPostTeamMembersRequestEntityTooLarge() *PostTeamMembersRequestEntityTooLarge {
	return &PostTeamMembersRequestEntityTooLarge{}
}

/*
PostTeamMembersRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PostTeamMembersRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post team members request entity too large response has a 2xx status code
func (o *PostTeamMembersRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post team members request entity too large response has a 3xx status code
func (o *PostTeamMembersRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post team members request entity too large response has a 4xx status code
func (o *PostTeamMembersRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post team members request entity too large response has a 5xx status code
func (o *PostTeamMembersRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post team members request entity too large response a status code equal to that given
func (o *PostTeamMembersRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostTeamMembersRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/teams/{teamId}/members][%d] postTeamMembersRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostTeamMembersRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/teams/{teamId}/members][%d] postTeamMembersRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostTeamMembersRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostTeamMembersRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTeamMembersUnsupportedMediaType creates a PostTeamMembersUnsupportedMediaType with default headers values
func NewPostTeamMembersUnsupportedMediaType() *PostTeamMembersUnsupportedMediaType {
	return &PostTeamMembersUnsupportedMediaType{}
}

/*
PostTeamMembersUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostTeamMembersUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post team members unsupported media type response has a 2xx status code
func (o *PostTeamMembersUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post team members unsupported media type response has a 3xx status code
func (o *PostTeamMembersUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post team members unsupported media type response has a 4xx status code
func (o *PostTeamMembersUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post team members unsupported media type response has a 5xx status code
func (o *PostTeamMembersUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post team members unsupported media type response a status code equal to that given
func (o *PostTeamMembersUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostTeamMembersUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/teams/{teamId}/members][%d] postTeamMembersUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostTeamMembersUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/teams/{teamId}/members][%d] postTeamMembersUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostTeamMembersUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostTeamMembersUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTeamMembersTooManyRequests creates a PostTeamMembersTooManyRequests with default headers values
func NewPostTeamMembersTooManyRequests() *PostTeamMembersTooManyRequests {
	return &PostTeamMembersTooManyRequests{}
}

/*
PostTeamMembersTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostTeamMembersTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post team members too many requests response has a 2xx status code
func (o *PostTeamMembersTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post team members too many requests response has a 3xx status code
func (o *PostTeamMembersTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post team members too many requests response has a 4xx status code
func (o *PostTeamMembersTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post team members too many requests response has a 5xx status code
func (o *PostTeamMembersTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post team members too many requests response a status code equal to that given
func (o *PostTeamMembersTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostTeamMembersTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/teams/{teamId}/members][%d] postTeamMembersTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostTeamMembersTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/teams/{teamId}/members][%d] postTeamMembersTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostTeamMembersTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostTeamMembersTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTeamMembersInternalServerError creates a PostTeamMembersInternalServerError with default headers values
func NewPostTeamMembersInternalServerError() *PostTeamMembersInternalServerError {
	return &PostTeamMembersInternalServerError{}
}

/*
PostTeamMembersInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostTeamMembersInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post team members internal server error response has a 2xx status code
func (o *PostTeamMembersInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post team members internal server error response has a 3xx status code
func (o *PostTeamMembersInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post team members internal server error response has a 4xx status code
func (o *PostTeamMembersInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post team members internal server error response has a 5xx status code
func (o *PostTeamMembersInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post team members internal server error response a status code equal to that given
func (o *PostTeamMembersInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostTeamMembersInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/teams/{teamId}/members][%d] postTeamMembersInternalServerError  %+v", 500, o.Payload)
}

func (o *PostTeamMembersInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/teams/{teamId}/members][%d] postTeamMembersInternalServerError  %+v", 500, o.Payload)
}

func (o *PostTeamMembersInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostTeamMembersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTeamMembersServiceUnavailable creates a PostTeamMembersServiceUnavailable with default headers values
func NewPostTeamMembersServiceUnavailable() *PostTeamMembersServiceUnavailable {
	return &PostTeamMembersServiceUnavailable{}
}

/*
PostTeamMembersServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostTeamMembersServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post team members service unavailable response has a 2xx status code
func (o *PostTeamMembersServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post team members service unavailable response has a 3xx status code
func (o *PostTeamMembersServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post team members service unavailable response has a 4xx status code
func (o *PostTeamMembersServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post team members service unavailable response has a 5xx status code
func (o *PostTeamMembersServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post team members service unavailable response a status code equal to that given
func (o *PostTeamMembersServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostTeamMembersServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/teams/{teamId}/members][%d] postTeamMembersServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostTeamMembersServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/teams/{teamId}/members][%d] postTeamMembersServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostTeamMembersServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostTeamMembersServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTeamMembersGatewayTimeout creates a PostTeamMembersGatewayTimeout with default headers values
func NewPostTeamMembersGatewayTimeout() *PostTeamMembersGatewayTimeout {
	return &PostTeamMembersGatewayTimeout{}
}

/*
PostTeamMembersGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostTeamMembersGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post team members gateway timeout response has a 2xx status code
func (o *PostTeamMembersGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post team members gateway timeout response has a 3xx status code
func (o *PostTeamMembersGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post team members gateway timeout response has a 4xx status code
func (o *PostTeamMembersGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post team members gateway timeout response has a 5xx status code
func (o *PostTeamMembersGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post team members gateway timeout response a status code equal to that given
func (o *PostTeamMembersGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostTeamMembersGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/teams/{teamId}/members][%d] postTeamMembersGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostTeamMembersGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/teams/{teamId}/members][%d] postTeamMembersGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostTeamMembersGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostTeamMembersGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
