// Code generated by go-swagger; DO NOT EDIT.

package infrastructure_as_code

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetInfrastructureascodeJobReader is a Reader for the GetInfrastructureascodeJob structure.
type GetInfrastructureascodeJobReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInfrastructureascodeJobReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInfrastructureascodeJobOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewGetInfrastructureascodeJobAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetInfrastructureascodeJobBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetInfrastructureascodeJobUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetInfrastructureascodeJobForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetInfrastructureascodeJobNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetInfrastructureascodeJobRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetInfrastructureascodeJobRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetInfrastructureascodeJobUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetInfrastructureascodeJobTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetInfrastructureascodeJobInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetInfrastructureascodeJobServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetInfrastructureascodeJobGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetInfrastructureascodeJobOK creates a GetInfrastructureascodeJobOK with default headers values
func NewGetInfrastructureascodeJobOK() *GetInfrastructureascodeJobOK {
	return &GetInfrastructureascodeJobOK{}
}

/*
GetInfrastructureascodeJobOK describes a response with status code 200, with default header values.

successful operation
*/
type GetInfrastructureascodeJobOK struct {
	Payload *models.InfrastructureascodeJob
}

// IsSuccess returns true when this get infrastructureascode job o k response has a 2xx status code
func (o *GetInfrastructureascodeJobOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get infrastructureascode job o k response has a 3xx status code
func (o *GetInfrastructureascodeJobOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get infrastructureascode job o k response has a 4xx status code
func (o *GetInfrastructureascodeJobOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get infrastructureascode job o k response has a 5xx status code
func (o *GetInfrastructureascodeJobOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get infrastructureascode job o k response a status code equal to that given
func (o *GetInfrastructureascodeJobOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetInfrastructureascodeJobOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/infrastructureascode/jobs/{jobId}][%d] getInfrastructureascodeJobOK  %+v", 200, o.Payload)
}

func (o *GetInfrastructureascodeJobOK) String() string {
	return fmt.Sprintf("[GET /api/v2/infrastructureascode/jobs/{jobId}][%d] getInfrastructureascodeJobOK  %+v", 200, o.Payload)
}

func (o *GetInfrastructureascodeJobOK) GetPayload() *models.InfrastructureascodeJob {
	return o.Payload
}

func (o *GetInfrastructureascodeJobOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InfrastructureascodeJob)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInfrastructureascodeJobAccepted creates a GetInfrastructureascodeJobAccepted with default headers values
func NewGetInfrastructureascodeJobAccepted() *GetInfrastructureascodeJobAccepted {
	return &GetInfrastructureascodeJobAccepted{}
}

/*
GetInfrastructureascodeJobAccepted describes a response with status code 202, with default header values.

Job in progress.
*/
type GetInfrastructureascodeJobAccepted struct {
	Payload *models.InfrastructureascodeJob
}

// IsSuccess returns true when this get infrastructureascode job accepted response has a 2xx status code
func (o *GetInfrastructureascodeJobAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get infrastructureascode job accepted response has a 3xx status code
func (o *GetInfrastructureascodeJobAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get infrastructureascode job accepted response has a 4xx status code
func (o *GetInfrastructureascodeJobAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this get infrastructureascode job accepted response has a 5xx status code
func (o *GetInfrastructureascodeJobAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this get infrastructureascode job accepted response a status code equal to that given
func (o *GetInfrastructureascodeJobAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *GetInfrastructureascodeJobAccepted) Error() string {
	return fmt.Sprintf("[GET /api/v2/infrastructureascode/jobs/{jobId}][%d] getInfrastructureascodeJobAccepted  %+v", 202, o.Payload)
}

func (o *GetInfrastructureascodeJobAccepted) String() string {
	return fmt.Sprintf("[GET /api/v2/infrastructureascode/jobs/{jobId}][%d] getInfrastructureascodeJobAccepted  %+v", 202, o.Payload)
}

func (o *GetInfrastructureascodeJobAccepted) GetPayload() *models.InfrastructureascodeJob {
	return o.Payload
}

func (o *GetInfrastructureascodeJobAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InfrastructureascodeJob)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInfrastructureascodeJobBadRequest creates a GetInfrastructureascodeJobBadRequest with default headers values
func NewGetInfrastructureascodeJobBadRequest() *GetInfrastructureascodeJobBadRequest {
	return &GetInfrastructureascodeJobBadRequest{}
}

/*
GetInfrastructureascodeJobBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetInfrastructureascodeJobBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get infrastructureascode job bad request response has a 2xx status code
func (o *GetInfrastructureascodeJobBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get infrastructureascode job bad request response has a 3xx status code
func (o *GetInfrastructureascodeJobBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get infrastructureascode job bad request response has a 4xx status code
func (o *GetInfrastructureascodeJobBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get infrastructureascode job bad request response has a 5xx status code
func (o *GetInfrastructureascodeJobBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get infrastructureascode job bad request response a status code equal to that given
func (o *GetInfrastructureascodeJobBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetInfrastructureascodeJobBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/infrastructureascode/jobs/{jobId}][%d] getInfrastructureascodeJobBadRequest  %+v", 400, o.Payload)
}

func (o *GetInfrastructureascodeJobBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/infrastructureascode/jobs/{jobId}][%d] getInfrastructureascodeJobBadRequest  %+v", 400, o.Payload)
}

func (o *GetInfrastructureascodeJobBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetInfrastructureascodeJobBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInfrastructureascodeJobUnauthorized creates a GetInfrastructureascodeJobUnauthorized with default headers values
func NewGetInfrastructureascodeJobUnauthorized() *GetInfrastructureascodeJobUnauthorized {
	return &GetInfrastructureascodeJobUnauthorized{}
}

/*
GetInfrastructureascodeJobUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetInfrastructureascodeJobUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get infrastructureascode job unauthorized response has a 2xx status code
func (o *GetInfrastructureascodeJobUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get infrastructureascode job unauthorized response has a 3xx status code
func (o *GetInfrastructureascodeJobUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get infrastructureascode job unauthorized response has a 4xx status code
func (o *GetInfrastructureascodeJobUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get infrastructureascode job unauthorized response has a 5xx status code
func (o *GetInfrastructureascodeJobUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get infrastructureascode job unauthorized response a status code equal to that given
func (o *GetInfrastructureascodeJobUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetInfrastructureascodeJobUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/infrastructureascode/jobs/{jobId}][%d] getInfrastructureascodeJobUnauthorized  %+v", 401, o.Payload)
}

func (o *GetInfrastructureascodeJobUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/infrastructureascode/jobs/{jobId}][%d] getInfrastructureascodeJobUnauthorized  %+v", 401, o.Payload)
}

func (o *GetInfrastructureascodeJobUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetInfrastructureascodeJobUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInfrastructureascodeJobForbidden creates a GetInfrastructureascodeJobForbidden with default headers values
func NewGetInfrastructureascodeJobForbidden() *GetInfrastructureascodeJobForbidden {
	return &GetInfrastructureascodeJobForbidden{}
}

/*
GetInfrastructureascodeJobForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetInfrastructureascodeJobForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get infrastructureascode job forbidden response has a 2xx status code
func (o *GetInfrastructureascodeJobForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get infrastructureascode job forbidden response has a 3xx status code
func (o *GetInfrastructureascodeJobForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get infrastructureascode job forbidden response has a 4xx status code
func (o *GetInfrastructureascodeJobForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get infrastructureascode job forbidden response has a 5xx status code
func (o *GetInfrastructureascodeJobForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get infrastructureascode job forbidden response a status code equal to that given
func (o *GetInfrastructureascodeJobForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetInfrastructureascodeJobForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/infrastructureascode/jobs/{jobId}][%d] getInfrastructureascodeJobForbidden  %+v", 403, o.Payload)
}

func (o *GetInfrastructureascodeJobForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/infrastructureascode/jobs/{jobId}][%d] getInfrastructureascodeJobForbidden  %+v", 403, o.Payload)
}

func (o *GetInfrastructureascodeJobForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetInfrastructureascodeJobForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInfrastructureascodeJobNotFound creates a GetInfrastructureascodeJobNotFound with default headers values
func NewGetInfrastructureascodeJobNotFound() *GetInfrastructureascodeJobNotFound {
	return &GetInfrastructureascodeJobNotFound{}
}

/*
GetInfrastructureascodeJobNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetInfrastructureascodeJobNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get infrastructureascode job not found response has a 2xx status code
func (o *GetInfrastructureascodeJobNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get infrastructureascode job not found response has a 3xx status code
func (o *GetInfrastructureascodeJobNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get infrastructureascode job not found response has a 4xx status code
func (o *GetInfrastructureascodeJobNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get infrastructureascode job not found response has a 5xx status code
func (o *GetInfrastructureascodeJobNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get infrastructureascode job not found response a status code equal to that given
func (o *GetInfrastructureascodeJobNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetInfrastructureascodeJobNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/infrastructureascode/jobs/{jobId}][%d] getInfrastructureascodeJobNotFound  %+v", 404, o.Payload)
}

func (o *GetInfrastructureascodeJobNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/infrastructureascode/jobs/{jobId}][%d] getInfrastructureascodeJobNotFound  %+v", 404, o.Payload)
}

func (o *GetInfrastructureascodeJobNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetInfrastructureascodeJobNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInfrastructureascodeJobRequestTimeout creates a GetInfrastructureascodeJobRequestTimeout with default headers values
func NewGetInfrastructureascodeJobRequestTimeout() *GetInfrastructureascodeJobRequestTimeout {
	return &GetInfrastructureascodeJobRequestTimeout{}
}

/*
GetInfrastructureascodeJobRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetInfrastructureascodeJobRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get infrastructureascode job request timeout response has a 2xx status code
func (o *GetInfrastructureascodeJobRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get infrastructureascode job request timeout response has a 3xx status code
func (o *GetInfrastructureascodeJobRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get infrastructureascode job request timeout response has a 4xx status code
func (o *GetInfrastructureascodeJobRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get infrastructureascode job request timeout response has a 5xx status code
func (o *GetInfrastructureascodeJobRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get infrastructureascode job request timeout response a status code equal to that given
func (o *GetInfrastructureascodeJobRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetInfrastructureascodeJobRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/infrastructureascode/jobs/{jobId}][%d] getInfrastructureascodeJobRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetInfrastructureascodeJobRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/infrastructureascode/jobs/{jobId}][%d] getInfrastructureascodeJobRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetInfrastructureascodeJobRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetInfrastructureascodeJobRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInfrastructureascodeJobRequestEntityTooLarge creates a GetInfrastructureascodeJobRequestEntityTooLarge with default headers values
func NewGetInfrastructureascodeJobRequestEntityTooLarge() *GetInfrastructureascodeJobRequestEntityTooLarge {
	return &GetInfrastructureascodeJobRequestEntityTooLarge{}
}

/*
GetInfrastructureascodeJobRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetInfrastructureascodeJobRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get infrastructureascode job request entity too large response has a 2xx status code
func (o *GetInfrastructureascodeJobRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get infrastructureascode job request entity too large response has a 3xx status code
func (o *GetInfrastructureascodeJobRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get infrastructureascode job request entity too large response has a 4xx status code
func (o *GetInfrastructureascodeJobRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get infrastructureascode job request entity too large response has a 5xx status code
func (o *GetInfrastructureascodeJobRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get infrastructureascode job request entity too large response a status code equal to that given
func (o *GetInfrastructureascodeJobRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetInfrastructureascodeJobRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/infrastructureascode/jobs/{jobId}][%d] getInfrastructureascodeJobRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetInfrastructureascodeJobRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/infrastructureascode/jobs/{jobId}][%d] getInfrastructureascodeJobRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetInfrastructureascodeJobRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetInfrastructureascodeJobRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInfrastructureascodeJobUnsupportedMediaType creates a GetInfrastructureascodeJobUnsupportedMediaType with default headers values
func NewGetInfrastructureascodeJobUnsupportedMediaType() *GetInfrastructureascodeJobUnsupportedMediaType {
	return &GetInfrastructureascodeJobUnsupportedMediaType{}
}

/*
GetInfrastructureascodeJobUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetInfrastructureascodeJobUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get infrastructureascode job unsupported media type response has a 2xx status code
func (o *GetInfrastructureascodeJobUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get infrastructureascode job unsupported media type response has a 3xx status code
func (o *GetInfrastructureascodeJobUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get infrastructureascode job unsupported media type response has a 4xx status code
func (o *GetInfrastructureascodeJobUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get infrastructureascode job unsupported media type response has a 5xx status code
func (o *GetInfrastructureascodeJobUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get infrastructureascode job unsupported media type response a status code equal to that given
func (o *GetInfrastructureascodeJobUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetInfrastructureascodeJobUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/infrastructureascode/jobs/{jobId}][%d] getInfrastructureascodeJobUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetInfrastructureascodeJobUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/infrastructureascode/jobs/{jobId}][%d] getInfrastructureascodeJobUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetInfrastructureascodeJobUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetInfrastructureascodeJobUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInfrastructureascodeJobTooManyRequests creates a GetInfrastructureascodeJobTooManyRequests with default headers values
func NewGetInfrastructureascodeJobTooManyRequests() *GetInfrastructureascodeJobTooManyRequests {
	return &GetInfrastructureascodeJobTooManyRequests{}
}

/*
GetInfrastructureascodeJobTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetInfrastructureascodeJobTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get infrastructureascode job too many requests response has a 2xx status code
func (o *GetInfrastructureascodeJobTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get infrastructureascode job too many requests response has a 3xx status code
func (o *GetInfrastructureascodeJobTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get infrastructureascode job too many requests response has a 4xx status code
func (o *GetInfrastructureascodeJobTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get infrastructureascode job too many requests response has a 5xx status code
func (o *GetInfrastructureascodeJobTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get infrastructureascode job too many requests response a status code equal to that given
func (o *GetInfrastructureascodeJobTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetInfrastructureascodeJobTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/infrastructureascode/jobs/{jobId}][%d] getInfrastructureascodeJobTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetInfrastructureascodeJobTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/infrastructureascode/jobs/{jobId}][%d] getInfrastructureascodeJobTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetInfrastructureascodeJobTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetInfrastructureascodeJobTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInfrastructureascodeJobInternalServerError creates a GetInfrastructureascodeJobInternalServerError with default headers values
func NewGetInfrastructureascodeJobInternalServerError() *GetInfrastructureascodeJobInternalServerError {
	return &GetInfrastructureascodeJobInternalServerError{}
}

/*
GetInfrastructureascodeJobInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetInfrastructureascodeJobInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get infrastructureascode job internal server error response has a 2xx status code
func (o *GetInfrastructureascodeJobInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get infrastructureascode job internal server error response has a 3xx status code
func (o *GetInfrastructureascodeJobInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get infrastructureascode job internal server error response has a 4xx status code
func (o *GetInfrastructureascodeJobInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get infrastructureascode job internal server error response has a 5xx status code
func (o *GetInfrastructureascodeJobInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get infrastructureascode job internal server error response a status code equal to that given
func (o *GetInfrastructureascodeJobInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetInfrastructureascodeJobInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/infrastructureascode/jobs/{jobId}][%d] getInfrastructureascodeJobInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInfrastructureascodeJobInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/infrastructureascode/jobs/{jobId}][%d] getInfrastructureascodeJobInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInfrastructureascodeJobInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetInfrastructureascodeJobInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInfrastructureascodeJobServiceUnavailable creates a GetInfrastructureascodeJobServiceUnavailable with default headers values
func NewGetInfrastructureascodeJobServiceUnavailable() *GetInfrastructureascodeJobServiceUnavailable {
	return &GetInfrastructureascodeJobServiceUnavailable{}
}

/*
GetInfrastructureascodeJobServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetInfrastructureascodeJobServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get infrastructureascode job service unavailable response has a 2xx status code
func (o *GetInfrastructureascodeJobServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get infrastructureascode job service unavailable response has a 3xx status code
func (o *GetInfrastructureascodeJobServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get infrastructureascode job service unavailable response has a 4xx status code
func (o *GetInfrastructureascodeJobServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get infrastructureascode job service unavailable response has a 5xx status code
func (o *GetInfrastructureascodeJobServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get infrastructureascode job service unavailable response a status code equal to that given
func (o *GetInfrastructureascodeJobServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetInfrastructureascodeJobServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/infrastructureascode/jobs/{jobId}][%d] getInfrastructureascodeJobServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetInfrastructureascodeJobServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/infrastructureascode/jobs/{jobId}][%d] getInfrastructureascodeJobServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetInfrastructureascodeJobServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetInfrastructureascodeJobServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInfrastructureascodeJobGatewayTimeout creates a GetInfrastructureascodeJobGatewayTimeout with default headers values
func NewGetInfrastructureascodeJobGatewayTimeout() *GetInfrastructureascodeJobGatewayTimeout {
	return &GetInfrastructureascodeJobGatewayTimeout{}
}

/*
GetInfrastructureascodeJobGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetInfrastructureascodeJobGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get infrastructureascode job gateway timeout response has a 2xx status code
func (o *GetInfrastructureascodeJobGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get infrastructureascode job gateway timeout response has a 3xx status code
func (o *GetInfrastructureascodeJobGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get infrastructureascode job gateway timeout response has a 4xx status code
func (o *GetInfrastructureascodeJobGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get infrastructureascode job gateway timeout response has a 5xx status code
func (o *GetInfrastructureascodeJobGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get infrastructureascode job gateway timeout response a status code equal to that given
func (o *GetInfrastructureascodeJobGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetInfrastructureascodeJobGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/infrastructureascode/jobs/{jobId}][%d] getInfrastructureascodeJobGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetInfrastructureascodeJobGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/infrastructureascode/jobs/{jobId}][%d] getInfrastructureascodeJobGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetInfrastructureascodeJobGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetInfrastructureascodeJobGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
