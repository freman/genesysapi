// Code generated by go-swagger; DO NOT EDIT.

package infrastructure_as_code

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetInfrastructureascodeJobsParams creates a new GetInfrastructureascodeJobsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetInfrastructureascodeJobsParams() *GetInfrastructureascodeJobsParams {
	return &GetInfrastructureascodeJobsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetInfrastructureascodeJobsParamsWithTimeout creates a new GetInfrastructureascodeJobsParams object
// with the ability to set a timeout on a request.
func NewGetInfrastructureascodeJobsParamsWithTimeout(timeout time.Duration) *GetInfrastructureascodeJobsParams {
	return &GetInfrastructureascodeJobsParams{
		timeout: timeout,
	}
}

// NewGetInfrastructureascodeJobsParamsWithContext creates a new GetInfrastructureascodeJobsParams object
// with the ability to set a context for a request.
func NewGetInfrastructureascodeJobsParamsWithContext(ctx context.Context) *GetInfrastructureascodeJobsParams {
	return &GetInfrastructureascodeJobsParams{
		Context: ctx,
	}
}

// NewGetInfrastructureascodeJobsParamsWithHTTPClient creates a new GetInfrastructureascodeJobsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetInfrastructureascodeJobsParamsWithHTTPClient(client *http.Client) *GetInfrastructureascodeJobsParams {
	return &GetInfrastructureascodeJobsParams{
		HTTPClient: client,
	}
}

/*
GetInfrastructureascodeJobsParams contains all the parameters to send to the API endpoint

	for the get infrastructureascode jobs operation.

	Typically these are written to a http.Request.
*/
type GetInfrastructureascodeJobsParams struct {

	/* IncludeErrors.

	   Include error messages
	*/
	IncludeErrors *bool

	/* MaxResults.

	   Number of jobs to show

	   Format: int32
	   Default: 1
	*/
	MaxResults *int32

	/* SortBy.

	   Sort by

	   Default: "id"
	*/
	SortBy *string

	/* SortOrder.

	   Sort order

	   Default: "asc"
	*/
	SortOrder *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get infrastructureascode jobs params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetInfrastructureascodeJobsParams) WithDefaults() *GetInfrastructureascodeJobsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get infrastructureascode jobs params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetInfrastructureascodeJobsParams) SetDefaults() {
	var (
		includeErrorsDefault = bool(false)

		maxResultsDefault = int32(1)

		sortByDefault = string("id")

		sortOrderDefault = string("asc")
	)

	val := GetInfrastructureascodeJobsParams{
		IncludeErrors: &includeErrorsDefault,
		MaxResults:    &maxResultsDefault,
		SortBy:        &sortByDefault,
		SortOrder:     &sortOrderDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the get infrastructureascode jobs params
func (o *GetInfrastructureascodeJobsParams) WithTimeout(timeout time.Duration) *GetInfrastructureascodeJobsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get infrastructureascode jobs params
func (o *GetInfrastructureascodeJobsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get infrastructureascode jobs params
func (o *GetInfrastructureascodeJobsParams) WithContext(ctx context.Context) *GetInfrastructureascodeJobsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get infrastructureascode jobs params
func (o *GetInfrastructureascodeJobsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get infrastructureascode jobs params
func (o *GetInfrastructureascodeJobsParams) WithHTTPClient(client *http.Client) *GetInfrastructureascodeJobsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get infrastructureascode jobs params
func (o *GetInfrastructureascodeJobsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIncludeErrors adds the includeErrors to the get infrastructureascode jobs params
func (o *GetInfrastructureascodeJobsParams) WithIncludeErrors(includeErrors *bool) *GetInfrastructureascodeJobsParams {
	o.SetIncludeErrors(includeErrors)
	return o
}

// SetIncludeErrors adds the includeErrors to the get infrastructureascode jobs params
func (o *GetInfrastructureascodeJobsParams) SetIncludeErrors(includeErrors *bool) {
	o.IncludeErrors = includeErrors
}

// WithMaxResults adds the maxResults to the get infrastructureascode jobs params
func (o *GetInfrastructureascodeJobsParams) WithMaxResults(maxResults *int32) *GetInfrastructureascodeJobsParams {
	o.SetMaxResults(maxResults)
	return o
}

// SetMaxResults adds the maxResults to the get infrastructureascode jobs params
func (o *GetInfrastructureascodeJobsParams) SetMaxResults(maxResults *int32) {
	o.MaxResults = maxResults
}

// WithSortBy adds the sortBy to the get infrastructureascode jobs params
func (o *GetInfrastructureascodeJobsParams) WithSortBy(sortBy *string) *GetInfrastructureascodeJobsParams {
	o.SetSortBy(sortBy)
	return o
}

// SetSortBy adds the sortBy to the get infrastructureascode jobs params
func (o *GetInfrastructureascodeJobsParams) SetSortBy(sortBy *string) {
	o.SortBy = sortBy
}

// WithSortOrder adds the sortOrder to the get infrastructureascode jobs params
func (o *GetInfrastructureascodeJobsParams) WithSortOrder(sortOrder *string) *GetInfrastructureascodeJobsParams {
	o.SetSortOrder(sortOrder)
	return o
}

// SetSortOrder adds the sortOrder to the get infrastructureascode jobs params
func (o *GetInfrastructureascodeJobsParams) SetSortOrder(sortOrder *string) {
	o.SortOrder = sortOrder
}

// WriteToRequest writes these params to a swagger request
func (o *GetInfrastructureascodeJobsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.IncludeErrors != nil {

		// query param includeErrors
		var qrIncludeErrors bool

		if o.IncludeErrors != nil {
			qrIncludeErrors = *o.IncludeErrors
		}
		qIncludeErrors := swag.FormatBool(qrIncludeErrors)
		if qIncludeErrors != "" {

			if err := r.SetQueryParam("includeErrors", qIncludeErrors); err != nil {
				return err
			}
		}
	}

	if o.MaxResults != nil {

		// query param maxResults
		var qrMaxResults int32

		if o.MaxResults != nil {
			qrMaxResults = *o.MaxResults
		}
		qMaxResults := swag.FormatInt32(qrMaxResults)
		if qMaxResults != "" {

			if err := r.SetQueryParam("maxResults", qMaxResults); err != nil {
				return err
			}
		}
	}

	if o.SortBy != nil {

		// query param sortBy
		var qrSortBy string

		if o.SortBy != nil {
			qrSortBy = *o.SortBy
		}
		qSortBy := qrSortBy
		if qSortBy != "" {

			if err := r.SetQueryParam("sortBy", qSortBy); err != nil {
				return err
			}
		}
	}

	if o.SortOrder != nil {

		// query param sortOrder
		var qrSortOrder string

		if o.SortOrder != nil {
			qrSortOrder = *o.SortOrder
		}
		qSortOrder := qrSortOrder
		if qSortOrder != "" {

			if err := r.SetQueryParam("sortOrder", qSortOrder); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
