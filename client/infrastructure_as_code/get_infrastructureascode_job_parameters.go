// Code generated by go-swagger; DO NOT EDIT.

package infrastructure_as_code

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetInfrastructureascodeJobParams creates a new GetInfrastructureascodeJobParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetInfrastructureascodeJobParams() *GetInfrastructureascodeJobParams {
	return &GetInfrastructureascodeJobParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetInfrastructureascodeJobParamsWithTimeout creates a new GetInfrastructureascodeJobParams object
// with the ability to set a timeout on a request.
func NewGetInfrastructureascodeJobParamsWithTimeout(timeout time.Duration) *GetInfrastructureascodeJobParams {
	return &GetInfrastructureascodeJobParams{
		timeout: timeout,
	}
}

// NewGetInfrastructureascodeJobParamsWithContext creates a new GetInfrastructureascodeJobParams object
// with the ability to set a context for a request.
func NewGetInfrastructureascodeJobParamsWithContext(ctx context.Context) *GetInfrastructureascodeJobParams {
	return &GetInfrastructureascodeJobParams{
		Context: ctx,
	}
}

// NewGetInfrastructureascodeJobParamsWithHTTPClient creates a new GetInfrastructureascodeJobParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetInfrastructureascodeJobParamsWithHTTPClient(client *http.Client) *GetInfrastructureascodeJobParams {
	return &GetInfrastructureascodeJobParams{
		HTTPClient: client,
	}
}

/*
GetInfrastructureascodeJobParams contains all the parameters to send to the API endpoint

	for the get infrastructureascode job operation.

	Typically these are written to a http.Request.
*/
type GetInfrastructureascodeJobParams struct {

	/* Details.

	   Include details of execution, including job results or error information
	*/
	Details *bool

	/* JobID.

	   Job ID
	*/
	JobID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get infrastructureascode job params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetInfrastructureascodeJobParams) WithDefaults() *GetInfrastructureascodeJobParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get infrastructureascode job params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetInfrastructureascodeJobParams) SetDefaults() {
	var (
		detailsDefault = bool(false)
	)

	val := GetInfrastructureascodeJobParams{
		Details: &detailsDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the get infrastructureascode job params
func (o *GetInfrastructureascodeJobParams) WithTimeout(timeout time.Duration) *GetInfrastructureascodeJobParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get infrastructureascode job params
func (o *GetInfrastructureascodeJobParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get infrastructureascode job params
func (o *GetInfrastructureascodeJobParams) WithContext(ctx context.Context) *GetInfrastructureascodeJobParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get infrastructureascode job params
func (o *GetInfrastructureascodeJobParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get infrastructureascode job params
func (o *GetInfrastructureascodeJobParams) WithHTTPClient(client *http.Client) *GetInfrastructureascodeJobParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get infrastructureascode job params
func (o *GetInfrastructureascodeJobParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDetails adds the details to the get infrastructureascode job params
func (o *GetInfrastructureascodeJobParams) WithDetails(details *bool) *GetInfrastructureascodeJobParams {
	o.SetDetails(details)
	return o
}

// SetDetails adds the details to the get infrastructureascode job params
func (o *GetInfrastructureascodeJobParams) SetDetails(details *bool) {
	o.Details = details
}

// WithJobID adds the jobID to the get infrastructureascode job params
func (o *GetInfrastructureascodeJobParams) WithJobID(jobID string) *GetInfrastructureascodeJobParams {
	o.SetJobID(jobID)
	return o
}

// SetJobID adds the jobId to the get infrastructureascode job params
func (o *GetInfrastructureascodeJobParams) SetJobID(jobID string) {
	o.JobID = jobID
}

// WriteToRequest writes these params to a swagger request
func (o *GetInfrastructureascodeJobParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Details != nil {

		// query param details
		var qrDetails bool

		if o.Details != nil {
			qrDetails = *o.Details
		}
		qDetails := swag.FormatBool(qrDetails)
		if qDetails != "" {

			if err := r.SetQueryParam("details", qDetails); err != nil {
				return err
			}
		}
	}

	// path param jobId
	if err := r.SetPathParam("jobId", o.JobID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
