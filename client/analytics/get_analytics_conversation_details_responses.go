// Code generated by go-swagger; DO NOT EDIT.

package analytics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetAnalyticsConversationDetailsReader is a Reader for the GetAnalyticsConversationDetails structure.
type GetAnalyticsConversationDetailsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAnalyticsConversationDetailsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAnalyticsConversationDetailsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAnalyticsConversationDetailsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAnalyticsConversationDetailsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAnalyticsConversationDetailsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAnalyticsConversationDetailsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetAnalyticsConversationDetailsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetAnalyticsConversationDetailsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetAnalyticsConversationDetailsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetAnalyticsConversationDetailsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAnalyticsConversationDetailsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetAnalyticsConversationDetailsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetAnalyticsConversationDetailsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAnalyticsConversationDetailsOK creates a GetAnalyticsConversationDetailsOK with default headers values
func NewGetAnalyticsConversationDetailsOK() *GetAnalyticsConversationDetailsOK {
	return &GetAnalyticsConversationDetailsOK{}
}

/*
GetAnalyticsConversationDetailsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetAnalyticsConversationDetailsOK struct {
	Payload *models.AnalyticsConversationWithoutAttributes
}

// IsSuccess returns true when this get analytics conversation details o k response has a 2xx status code
func (o *GetAnalyticsConversationDetailsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get analytics conversation details o k response has a 3xx status code
func (o *GetAnalyticsConversationDetailsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get analytics conversation details o k response has a 4xx status code
func (o *GetAnalyticsConversationDetailsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get analytics conversation details o k response has a 5xx status code
func (o *GetAnalyticsConversationDetailsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get analytics conversation details o k response a status code equal to that given
func (o *GetAnalyticsConversationDetailsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetAnalyticsConversationDetailsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/conversations/{conversationId}/details][%d] getAnalyticsConversationDetailsOK  %+v", 200, o.Payload)
}

func (o *GetAnalyticsConversationDetailsOK) String() string {
	return fmt.Sprintf("[GET /api/v2/analytics/conversations/{conversationId}/details][%d] getAnalyticsConversationDetailsOK  %+v", 200, o.Payload)
}

func (o *GetAnalyticsConversationDetailsOK) GetPayload() *models.AnalyticsConversationWithoutAttributes {
	return o.Payload
}

func (o *GetAnalyticsConversationDetailsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AnalyticsConversationWithoutAttributes)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsConversationDetailsBadRequest creates a GetAnalyticsConversationDetailsBadRequest with default headers values
func NewGetAnalyticsConversationDetailsBadRequest() *GetAnalyticsConversationDetailsBadRequest {
	return &GetAnalyticsConversationDetailsBadRequest{}
}

/*
GetAnalyticsConversationDetailsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetAnalyticsConversationDetailsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get analytics conversation details bad request response has a 2xx status code
func (o *GetAnalyticsConversationDetailsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get analytics conversation details bad request response has a 3xx status code
func (o *GetAnalyticsConversationDetailsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get analytics conversation details bad request response has a 4xx status code
func (o *GetAnalyticsConversationDetailsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get analytics conversation details bad request response has a 5xx status code
func (o *GetAnalyticsConversationDetailsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get analytics conversation details bad request response a status code equal to that given
func (o *GetAnalyticsConversationDetailsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetAnalyticsConversationDetailsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/conversations/{conversationId}/details][%d] getAnalyticsConversationDetailsBadRequest  %+v", 400, o.Payload)
}

func (o *GetAnalyticsConversationDetailsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/analytics/conversations/{conversationId}/details][%d] getAnalyticsConversationDetailsBadRequest  %+v", 400, o.Payload)
}

func (o *GetAnalyticsConversationDetailsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsConversationDetailsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsConversationDetailsUnauthorized creates a GetAnalyticsConversationDetailsUnauthorized with default headers values
func NewGetAnalyticsConversationDetailsUnauthorized() *GetAnalyticsConversationDetailsUnauthorized {
	return &GetAnalyticsConversationDetailsUnauthorized{}
}

/*
GetAnalyticsConversationDetailsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetAnalyticsConversationDetailsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get analytics conversation details unauthorized response has a 2xx status code
func (o *GetAnalyticsConversationDetailsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get analytics conversation details unauthorized response has a 3xx status code
func (o *GetAnalyticsConversationDetailsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get analytics conversation details unauthorized response has a 4xx status code
func (o *GetAnalyticsConversationDetailsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get analytics conversation details unauthorized response has a 5xx status code
func (o *GetAnalyticsConversationDetailsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get analytics conversation details unauthorized response a status code equal to that given
func (o *GetAnalyticsConversationDetailsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetAnalyticsConversationDetailsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/conversations/{conversationId}/details][%d] getAnalyticsConversationDetailsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAnalyticsConversationDetailsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/analytics/conversations/{conversationId}/details][%d] getAnalyticsConversationDetailsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAnalyticsConversationDetailsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsConversationDetailsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsConversationDetailsForbidden creates a GetAnalyticsConversationDetailsForbidden with default headers values
func NewGetAnalyticsConversationDetailsForbidden() *GetAnalyticsConversationDetailsForbidden {
	return &GetAnalyticsConversationDetailsForbidden{}
}

/*
GetAnalyticsConversationDetailsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetAnalyticsConversationDetailsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get analytics conversation details forbidden response has a 2xx status code
func (o *GetAnalyticsConversationDetailsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get analytics conversation details forbidden response has a 3xx status code
func (o *GetAnalyticsConversationDetailsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get analytics conversation details forbidden response has a 4xx status code
func (o *GetAnalyticsConversationDetailsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get analytics conversation details forbidden response has a 5xx status code
func (o *GetAnalyticsConversationDetailsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get analytics conversation details forbidden response a status code equal to that given
func (o *GetAnalyticsConversationDetailsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetAnalyticsConversationDetailsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/conversations/{conversationId}/details][%d] getAnalyticsConversationDetailsForbidden  %+v", 403, o.Payload)
}

func (o *GetAnalyticsConversationDetailsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/analytics/conversations/{conversationId}/details][%d] getAnalyticsConversationDetailsForbidden  %+v", 403, o.Payload)
}

func (o *GetAnalyticsConversationDetailsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsConversationDetailsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsConversationDetailsNotFound creates a GetAnalyticsConversationDetailsNotFound with default headers values
func NewGetAnalyticsConversationDetailsNotFound() *GetAnalyticsConversationDetailsNotFound {
	return &GetAnalyticsConversationDetailsNotFound{}
}

/*
GetAnalyticsConversationDetailsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetAnalyticsConversationDetailsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get analytics conversation details not found response has a 2xx status code
func (o *GetAnalyticsConversationDetailsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get analytics conversation details not found response has a 3xx status code
func (o *GetAnalyticsConversationDetailsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get analytics conversation details not found response has a 4xx status code
func (o *GetAnalyticsConversationDetailsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get analytics conversation details not found response has a 5xx status code
func (o *GetAnalyticsConversationDetailsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get analytics conversation details not found response a status code equal to that given
func (o *GetAnalyticsConversationDetailsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetAnalyticsConversationDetailsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/conversations/{conversationId}/details][%d] getAnalyticsConversationDetailsNotFound  %+v", 404, o.Payload)
}

func (o *GetAnalyticsConversationDetailsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/analytics/conversations/{conversationId}/details][%d] getAnalyticsConversationDetailsNotFound  %+v", 404, o.Payload)
}

func (o *GetAnalyticsConversationDetailsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsConversationDetailsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsConversationDetailsRequestTimeout creates a GetAnalyticsConversationDetailsRequestTimeout with default headers values
func NewGetAnalyticsConversationDetailsRequestTimeout() *GetAnalyticsConversationDetailsRequestTimeout {
	return &GetAnalyticsConversationDetailsRequestTimeout{}
}

/*
GetAnalyticsConversationDetailsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetAnalyticsConversationDetailsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get analytics conversation details request timeout response has a 2xx status code
func (o *GetAnalyticsConversationDetailsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get analytics conversation details request timeout response has a 3xx status code
func (o *GetAnalyticsConversationDetailsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get analytics conversation details request timeout response has a 4xx status code
func (o *GetAnalyticsConversationDetailsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get analytics conversation details request timeout response has a 5xx status code
func (o *GetAnalyticsConversationDetailsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get analytics conversation details request timeout response a status code equal to that given
func (o *GetAnalyticsConversationDetailsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetAnalyticsConversationDetailsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/conversations/{conversationId}/details][%d] getAnalyticsConversationDetailsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetAnalyticsConversationDetailsRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/analytics/conversations/{conversationId}/details][%d] getAnalyticsConversationDetailsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetAnalyticsConversationDetailsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsConversationDetailsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsConversationDetailsRequestEntityTooLarge creates a GetAnalyticsConversationDetailsRequestEntityTooLarge with default headers values
func NewGetAnalyticsConversationDetailsRequestEntityTooLarge() *GetAnalyticsConversationDetailsRequestEntityTooLarge {
	return &GetAnalyticsConversationDetailsRequestEntityTooLarge{}
}

/*
GetAnalyticsConversationDetailsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetAnalyticsConversationDetailsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get analytics conversation details request entity too large response has a 2xx status code
func (o *GetAnalyticsConversationDetailsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get analytics conversation details request entity too large response has a 3xx status code
func (o *GetAnalyticsConversationDetailsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get analytics conversation details request entity too large response has a 4xx status code
func (o *GetAnalyticsConversationDetailsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get analytics conversation details request entity too large response has a 5xx status code
func (o *GetAnalyticsConversationDetailsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get analytics conversation details request entity too large response a status code equal to that given
func (o *GetAnalyticsConversationDetailsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetAnalyticsConversationDetailsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/conversations/{conversationId}/details][%d] getAnalyticsConversationDetailsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetAnalyticsConversationDetailsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/analytics/conversations/{conversationId}/details][%d] getAnalyticsConversationDetailsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetAnalyticsConversationDetailsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsConversationDetailsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsConversationDetailsUnsupportedMediaType creates a GetAnalyticsConversationDetailsUnsupportedMediaType with default headers values
func NewGetAnalyticsConversationDetailsUnsupportedMediaType() *GetAnalyticsConversationDetailsUnsupportedMediaType {
	return &GetAnalyticsConversationDetailsUnsupportedMediaType{}
}

/*
GetAnalyticsConversationDetailsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetAnalyticsConversationDetailsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get analytics conversation details unsupported media type response has a 2xx status code
func (o *GetAnalyticsConversationDetailsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get analytics conversation details unsupported media type response has a 3xx status code
func (o *GetAnalyticsConversationDetailsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get analytics conversation details unsupported media type response has a 4xx status code
func (o *GetAnalyticsConversationDetailsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get analytics conversation details unsupported media type response has a 5xx status code
func (o *GetAnalyticsConversationDetailsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get analytics conversation details unsupported media type response a status code equal to that given
func (o *GetAnalyticsConversationDetailsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetAnalyticsConversationDetailsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/conversations/{conversationId}/details][%d] getAnalyticsConversationDetailsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetAnalyticsConversationDetailsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/analytics/conversations/{conversationId}/details][%d] getAnalyticsConversationDetailsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetAnalyticsConversationDetailsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsConversationDetailsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsConversationDetailsTooManyRequests creates a GetAnalyticsConversationDetailsTooManyRequests with default headers values
func NewGetAnalyticsConversationDetailsTooManyRequests() *GetAnalyticsConversationDetailsTooManyRequests {
	return &GetAnalyticsConversationDetailsTooManyRequests{}
}

/*
GetAnalyticsConversationDetailsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetAnalyticsConversationDetailsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get analytics conversation details too many requests response has a 2xx status code
func (o *GetAnalyticsConversationDetailsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get analytics conversation details too many requests response has a 3xx status code
func (o *GetAnalyticsConversationDetailsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get analytics conversation details too many requests response has a 4xx status code
func (o *GetAnalyticsConversationDetailsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get analytics conversation details too many requests response has a 5xx status code
func (o *GetAnalyticsConversationDetailsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get analytics conversation details too many requests response a status code equal to that given
func (o *GetAnalyticsConversationDetailsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetAnalyticsConversationDetailsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/conversations/{conversationId}/details][%d] getAnalyticsConversationDetailsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetAnalyticsConversationDetailsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/analytics/conversations/{conversationId}/details][%d] getAnalyticsConversationDetailsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetAnalyticsConversationDetailsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsConversationDetailsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsConversationDetailsInternalServerError creates a GetAnalyticsConversationDetailsInternalServerError with default headers values
func NewGetAnalyticsConversationDetailsInternalServerError() *GetAnalyticsConversationDetailsInternalServerError {
	return &GetAnalyticsConversationDetailsInternalServerError{}
}

/*
GetAnalyticsConversationDetailsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetAnalyticsConversationDetailsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get analytics conversation details internal server error response has a 2xx status code
func (o *GetAnalyticsConversationDetailsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get analytics conversation details internal server error response has a 3xx status code
func (o *GetAnalyticsConversationDetailsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get analytics conversation details internal server error response has a 4xx status code
func (o *GetAnalyticsConversationDetailsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get analytics conversation details internal server error response has a 5xx status code
func (o *GetAnalyticsConversationDetailsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get analytics conversation details internal server error response a status code equal to that given
func (o *GetAnalyticsConversationDetailsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetAnalyticsConversationDetailsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/conversations/{conversationId}/details][%d] getAnalyticsConversationDetailsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAnalyticsConversationDetailsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/analytics/conversations/{conversationId}/details][%d] getAnalyticsConversationDetailsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAnalyticsConversationDetailsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsConversationDetailsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsConversationDetailsServiceUnavailable creates a GetAnalyticsConversationDetailsServiceUnavailable with default headers values
func NewGetAnalyticsConversationDetailsServiceUnavailable() *GetAnalyticsConversationDetailsServiceUnavailable {
	return &GetAnalyticsConversationDetailsServiceUnavailable{}
}

/*
GetAnalyticsConversationDetailsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetAnalyticsConversationDetailsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get analytics conversation details service unavailable response has a 2xx status code
func (o *GetAnalyticsConversationDetailsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get analytics conversation details service unavailable response has a 3xx status code
func (o *GetAnalyticsConversationDetailsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get analytics conversation details service unavailable response has a 4xx status code
func (o *GetAnalyticsConversationDetailsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get analytics conversation details service unavailable response has a 5xx status code
func (o *GetAnalyticsConversationDetailsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get analytics conversation details service unavailable response a status code equal to that given
func (o *GetAnalyticsConversationDetailsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetAnalyticsConversationDetailsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/conversations/{conversationId}/details][%d] getAnalyticsConversationDetailsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetAnalyticsConversationDetailsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/analytics/conversations/{conversationId}/details][%d] getAnalyticsConversationDetailsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetAnalyticsConversationDetailsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsConversationDetailsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsConversationDetailsGatewayTimeout creates a GetAnalyticsConversationDetailsGatewayTimeout with default headers values
func NewGetAnalyticsConversationDetailsGatewayTimeout() *GetAnalyticsConversationDetailsGatewayTimeout {
	return &GetAnalyticsConversationDetailsGatewayTimeout{}
}

/*
GetAnalyticsConversationDetailsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetAnalyticsConversationDetailsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get analytics conversation details gateway timeout response has a 2xx status code
func (o *GetAnalyticsConversationDetailsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get analytics conversation details gateway timeout response has a 3xx status code
func (o *GetAnalyticsConversationDetailsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get analytics conversation details gateway timeout response has a 4xx status code
func (o *GetAnalyticsConversationDetailsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get analytics conversation details gateway timeout response has a 5xx status code
func (o *GetAnalyticsConversationDetailsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get analytics conversation details gateway timeout response a status code equal to that given
func (o *GetAnalyticsConversationDetailsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetAnalyticsConversationDetailsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/conversations/{conversationId}/details][%d] getAnalyticsConversationDetailsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetAnalyticsConversationDetailsGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/analytics/conversations/{conversationId}/details][%d] getAnalyticsConversationDetailsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetAnalyticsConversationDetailsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsConversationDetailsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
