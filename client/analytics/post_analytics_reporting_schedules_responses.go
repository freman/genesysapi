// Code generated by go-swagger; DO NOT EDIT.

package analytics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostAnalyticsReportingSchedulesReader is a Reader for the PostAnalyticsReportingSchedules structure.
type PostAnalyticsReportingSchedulesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostAnalyticsReportingSchedulesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostAnalyticsReportingSchedulesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostAnalyticsReportingSchedulesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostAnalyticsReportingSchedulesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostAnalyticsReportingSchedulesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostAnalyticsReportingSchedulesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostAnalyticsReportingSchedulesRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostAnalyticsReportingSchedulesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostAnalyticsReportingSchedulesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostAnalyticsReportingSchedulesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostAnalyticsReportingSchedulesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostAnalyticsReportingSchedulesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostAnalyticsReportingSchedulesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostAnalyticsReportingSchedulesOK creates a PostAnalyticsReportingSchedulesOK with default headers values
func NewPostAnalyticsReportingSchedulesOK() *PostAnalyticsReportingSchedulesOK {
	return &PostAnalyticsReportingSchedulesOK{}
}

/*
PostAnalyticsReportingSchedulesOK describes a response with status code 200, with default header values.

successful operation
*/
type PostAnalyticsReportingSchedulesOK struct {
	Payload *models.ReportSchedule
}

// IsSuccess returns true when this post analytics reporting schedules o k response has a 2xx status code
func (o *PostAnalyticsReportingSchedulesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post analytics reporting schedules o k response has a 3xx status code
func (o *PostAnalyticsReportingSchedulesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post analytics reporting schedules o k response has a 4xx status code
func (o *PostAnalyticsReportingSchedulesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post analytics reporting schedules o k response has a 5xx status code
func (o *PostAnalyticsReportingSchedulesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post analytics reporting schedules o k response a status code equal to that given
func (o *PostAnalyticsReportingSchedulesOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostAnalyticsReportingSchedulesOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/schedules][%d] postAnalyticsReportingSchedulesOK  %+v", 200, o.Payload)
}

func (o *PostAnalyticsReportingSchedulesOK) String() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/schedules][%d] postAnalyticsReportingSchedulesOK  %+v", 200, o.Payload)
}

func (o *PostAnalyticsReportingSchedulesOK) GetPayload() *models.ReportSchedule {
	return o.Payload
}

func (o *PostAnalyticsReportingSchedulesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ReportSchedule)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAnalyticsReportingSchedulesBadRequest creates a PostAnalyticsReportingSchedulesBadRequest with default headers values
func NewPostAnalyticsReportingSchedulesBadRequest() *PostAnalyticsReportingSchedulesBadRequest {
	return &PostAnalyticsReportingSchedulesBadRequest{}
}

/*
PostAnalyticsReportingSchedulesBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostAnalyticsReportingSchedulesBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post analytics reporting schedules bad request response has a 2xx status code
func (o *PostAnalyticsReportingSchedulesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post analytics reporting schedules bad request response has a 3xx status code
func (o *PostAnalyticsReportingSchedulesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post analytics reporting schedules bad request response has a 4xx status code
func (o *PostAnalyticsReportingSchedulesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post analytics reporting schedules bad request response has a 5xx status code
func (o *PostAnalyticsReportingSchedulesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post analytics reporting schedules bad request response a status code equal to that given
func (o *PostAnalyticsReportingSchedulesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostAnalyticsReportingSchedulesBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/schedules][%d] postAnalyticsReportingSchedulesBadRequest  %+v", 400, o.Payload)
}

func (o *PostAnalyticsReportingSchedulesBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/schedules][%d] postAnalyticsReportingSchedulesBadRequest  %+v", 400, o.Payload)
}

func (o *PostAnalyticsReportingSchedulesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAnalyticsReportingSchedulesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAnalyticsReportingSchedulesUnauthorized creates a PostAnalyticsReportingSchedulesUnauthorized with default headers values
func NewPostAnalyticsReportingSchedulesUnauthorized() *PostAnalyticsReportingSchedulesUnauthorized {
	return &PostAnalyticsReportingSchedulesUnauthorized{}
}

/*
PostAnalyticsReportingSchedulesUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostAnalyticsReportingSchedulesUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post analytics reporting schedules unauthorized response has a 2xx status code
func (o *PostAnalyticsReportingSchedulesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post analytics reporting schedules unauthorized response has a 3xx status code
func (o *PostAnalyticsReportingSchedulesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post analytics reporting schedules unauthorized response has a 4xx status code
func (o *PostAnalyticsReportingSchedulesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post analytics reporting schedules unauthorized response has a 5xx status code
func (o *PostAnalyticsReportingSchedulesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post analytics reporting schedules unauthorized response a status code equal to that given
func (o *PostAnalyticsReportingSchedulesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostAnalyticsReportingSchedulesUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/schedules][%d] postAnalyticsReportingSchedulesUnauthorized  %+v", 401, o.Payload)
}

func (o *PostAnalyticsReportingSchedulesUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/schedules][%d] postAnalyticsReportingSchedulesUnauthorized  %+v", 401, o.Payload)
}

func (o *PostAnalyticsReportingSchedulesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAnalyticsReportingSchedulesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAnalyticsReportingSchedulesForbidden creates a PostAnalyticsReportingSchedulesForbidden with default headers values
func NewPostAnalyticsReportingSchedulesForbidden() *PostAnalyticsReportingSchedulesForbidden {
	return &PostAnalyticsReportingSchedulesForbidden{}
}

/*
PostAnalyticsReportingSchedulesForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostAnalyticsReportingSchedulesForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post analytics reporting schedules forbidden response has a 2xx status code
func (o *PostAnalyticsReportingSchedulesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post analytics reporting schedules forbidden response has a 3xx status code
func (o *PostAnalyticsReportingSchedulesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post analytics reporting schedules forbidden response has a 4xx status code
func (o *PostAnalyticsReportingSchedulesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post analytics reporting schedules forbidden response has a 5xx status code
func (o *PostAnalyticsReportingSchedulesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post analytics reporting schedules forbidden response a status code equal to that given
func (o *PostAnalyticsReportingSchedulesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostAnalyticsReportingSchedulesForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/schedules][%d] postAnalyticsReportingSchedulesForbidden  %+v", 403, o.Payload)
}

func (o *PostAnalyticsReportingSchedulesForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/schedules][%d] postAnalyticsReportingSchedulesForbidden  %+v", 403, o.Payload)
}

func (o *PostAnalyticsReportingSchedulesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAnalyticsReportingSchedulesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAnalyticsReportingSchedulesNotFound creates a PostAnalyticsReportingSchedulesNotFound with default headers values
func NewPostAnalyticsReportingSchedulesNotFound() *PostAnalyticsReportingSchedulesNotFound {
	return &PostAnalyticsReportingSchedulesNotFound{}
}

/*
PostAnalyticsReportingSchedulesNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostAnalyticsReportingSchedulesNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post analytics reporting schedules not found response has a 2xx status code
func (o *PostAnalyticsReportingSchedulesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post analytics reporting schedules not found response has a 3xx status code
func (o *PostAnalyticsReportingSchedulesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post analytics reporting schedules not found response has a 4xx status code
func (o *PostAnalyticsReportingSchedulesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post analytics reporting schedules not found response has a 5xx status code
func (o *PostAnalyticsReportingSchedulesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post analytics reporting schedules not found response a status code equal to that given
func (o *PostAnalyticsReportingSchedulesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostAnalyticsReportingSchedulesNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/schedules][%d] postAnalyticsReportingSchedulesNotFound  %+v", 404, o.Payload)
}

func (o *PostAnalyticsReportingSchedulesNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/schedules][%d] postAnalyticsReportingSchedulesNotFound  %+v", 404, o.Payload)
}

func (o *PostAnalyticsReportingSchedulesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAnalyticsReportingSchedulesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAnalyticsReportingSchedulesRequestTimeout creates a PostAnalyticsReportingSchedulesRequestTimeout with default headers values
func NewPostAnalyticsReportingSchedulesRequestTimeout() *PostAnalyticsReportingSchedulesRequestTimeout {
	return &PostAnalyticsReportingSchedulesRequestTimeout{}
}

/*
PostAnalyticsReportingSchedulesRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostAnalyticsReportingSchedulesRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post analytics reporting schedules request timeout response has a 2xx status code
func (o *PostAnalyticsReportingSchedulesRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post analytics reporting schedules request timeout response has a 3xx status code
func (o *PostAnalyticsReportingSchedulesRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post analytics reporting schedules request timeout response has a 4xx status code
func (o *PostAnalyticsReportingSchedulesRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post analytics reporting schedules request timeout response has a 5xx status code
func (o *PostAnalyticsReportingSchedulesRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post analytics reporting schedules request timeout response a status code equal to that given
func (o *PostAnalyticsReportingSchedulesRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostAnalyticsReportingSchedulesRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/schedules][%d] postAnalyticsReportingSchedulesRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostAnalyticsReportingSchedulesRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/schedules][%d] postAnalyticsReportingSchedulesRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostAnalyticsReportingSchedulesRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAnalyticsReportingSchedulesRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAnalyticsReportingSchedulesRequestEntityTooLarge creates a PostAnalyticsReportingSchedulesRequestEntityTooLarge with default headers values
func NewPostAnalyticsReportingSchedulesRequestEntityTooLarge() *PostAnalyticsReportingSchedulesRequestEntityTooLarge {
	return &PostAnalyticsReportingSchedulesRequestEntityTooLarge{}
}

/*
PostAnalyticsReportingSchedulesRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PostAnalyticsReportingSchedulesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post analytics reporting schedules request entity too large response has a 2xx status code
func (o *PostAnalyticsReportingSchedulesRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post analytics reporting schedules request entity too large response has a 3xx status code
func (o *PostAnalyticsReportingSchedulesRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post analytics reporting schedules request entity too large response has a 4xx status code
func (o *PostAnalyticsReportingSchedulesRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post analytics reporting schedules request entity too large response has a 5xx status code
func (o *PostAnalyticsReportingSchedulesRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post analytics reporting schedules request entity too large response a status code equal to that given
func (o *PostAnalyticsReportingSchedulesRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostAnalyticsReportingSchedulesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/schedules][%d] postAnalyticsReportingSchedulesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostAnalyticsReportingSchedulesRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/schedules][%d] postAnalyticsReportingSchedulesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostAnalyticsReportingSchedulesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAnalyticsReportingSchedulesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAnalyticsReportingSchedulesUnsupportedMediaType creates a PostAnalyticsReportingSchedulesUnsupportedMediaType with default headers values
func NewPostAnalyticsReportingSchedulesUnsupportedMediaType() *PostAnalyticsReportingSchedulesUnsupportedMediaType {
	return &PostAnalyticsReportingSchedulesUnsupportedMediaType{}
}

/*
PostAnalyticsReportingSchedulesUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostAnalyticsReportingSchedulesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post analytics reporting schedules unsupported media type response has a 2xx status code
func (o *PostAnalyticsReportingSchedulesUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post analytics reporting schedules unsupported media type response has a 3xx status code
func (o *PostAnalyticsReportingSchedulesUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post analytics reporting schedules unsupported media type response has a 4xx status code
func (o *PostAnalyticsReportingSchedulesUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post analytics reporting schedules unsupported media type response has a 5xx status code
func (o *PostAnalyticsReportingSchedulesUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post analytics reporting schedules unsupported media type response a status code equal to that given
func (o *PostAnalyticsReportingSchedulesUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostAnalyticsReportingSchedulesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/schedules][%d] postAnalyticsReportingSchedulesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostAnalyticsReportingSchedulesUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/schedules][%d] postAnalyticsReportingSchedulesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostAnalyticsReportingSchedulesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAnalyticsReportingSchedulesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAnalyticsReportingSchedulesTooManyRequests creates a PostAnalyticsReportingSchedulesTooManyRequests with default headers values
func NewPostAnalyticsReportingSchedulesTooManyRequests() *PostAnalyticsReportingSchedulesTooManyRequests {
	return &PostAnalyticsReportingSchedulesTooManyRequests{}
}

/*
PostAnalyticsReportingSchedulesTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostAnalyticsReportingSchedulesTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post analytics reporting schedules too many requests response has a 2xx status code
func (o *PostAnalyticsReportingSchedulesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post analytics reporting schedules too many requests response has a 3xx status code
func (o *PostAnalyticsReportingSchedulesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post analytics reporting schedules too many requests response has a 4xx status code
func (o *PostAnalyticsReportingSchedulesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post analytics reporting schedules too many requests response has a 5xx status code
func (o *PostAnalyticsReportingSchedulesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post analytics reporting schedules too many requests response a status code equal to that given
func (o *PostAnalyticsReportingSchedulesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostAnalyticsReportingSchedulesTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/schedules][%d] postAnalyticsReportingSchedulesTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostAnalyticsReportingSchedulesTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/schedules][%d] postAnalyticsReportingSchedulesTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostAnalyticsReportingSchedulesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAnalyticsReportingSchedulesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAnalyticsReportingSchedulesInternalServerError creates a PostAnalyticsReportingSchedulesInternalServerError with default headers values
func NewPostAnalyticsReportingSchedulesInternalServerError() *PostAnalyticsReportingSchedulesInternalServerError {
	return &PostAnalyticsReportingSchedulesInternalServerError{}
}

/*
PostAnalyticsReportingSchedulesInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostAnalyticsReportingSchedulesInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post analytics reporting schedules internal server error response has a 2xx status code
func (o *PostAnalyticsReportingSchedulesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post analytics reporting schedules internal server error response has a 3xx status code
func (o *PostAnalyticsReportingSchedulesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post analytics reporting schedules internal server error response has a 4xx status code
func (o *PostAnalyticsReportingSchedulesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post analytics reporting schedules internal server error response has a 5xx status code
func (o *PostAnalyticsReportingSchedulesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post analytics reporting schedules internal server error response a status code equal to that given
func (o *PostAnalyticsReportingSchedulesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostAnalyticsReportingSchedulesInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/schedules][%d] postAnalyticsReportingSchedulesInternalServerError  %+v", 500, o.Payload)
}

func (o *PostAnalyticsReportingSchedulesInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/schedules][%d] postAnalyticsReportingSchedulesInternalServerError  %+v", 500, o.Payload)
}

func (o *PostAnalyticsReportingSchedulesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAnalyticsReportingSchedulesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAnalyticsReportingSchedulesServiceUnavailable creates a PostAnalyticsReportingSchedulesServiceUnavailable with default headers values
func NewPostAnalyticsReportingSchedulesServiceUnavailable() *PostAnalyticsReportingSchedulesServiceUnavailable {
	return &PostAnalyticsReportingSchedulesServiceUnavailable{}
}

/*
PostAnalyticsReportingSchedulesServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostAnalyticsReportingSchedulesServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post analytics reporting schedules service unavailable response has a 2xx status code
func (o *PostAnalyticsReportingSchedulesServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post analytics reporting schedules service unavailable response has a 3xx status code
func (o *PostAnalyticsReportingSchedulesServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post analytics reporting schedules service unavailable response has a 4xx status code
func (o *PostAnalyticsReportingSchedulesServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post analytics reporting schedules service unavailable response has a 5xx status code
func (o *PostAnalyticsReportingSchedulesServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post analytics reporting schedules service unavailable response a status code equal to that given
func (o *PostAnalyticsReportingSchedulesServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostAnalyticsReportingSchedulesServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/schedules][%d] postAnalyticsReportingSchedulesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostAnalyticsReportingSchedulesServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/schedules][%d] postAnalyticsReportingSchedulesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostAnalyticsReportingSchedulesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAnalyticsReportingSchedulesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAnalyticsReportingSchedulesGatewayTimeout creates a PostAnalyticsReportingSchedulesGatewayTimeout with default headers values
func NewPostAnalyticsReportingSchedulesGatewayTimeout() *PostAnalyticsReportingSchedulesGatewayTimeout {
	return &PostAnalyticsReportingSchedulesGatewayTimeout{}
}

/*
PostAnalyticsReportingSchedulesGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostAnalyticsReportingSchedulesGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post analytics reporting schedules gateway timeout response has a 2xx status code
func (o *PostAnalyticsReportingSchedulesGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post analytics reporting schedules gateway timeout response has a 3xx status code
func (o *PostAnalyticsReportingSchedulesGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post analytics reporting schedules gateway timeout response has a 4xx status code
func (o *PostAnalyticsReportingSchedulesGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post analytics reporting schedules gateway timeout response has a 5xx status code
func (o *PostAnalyticsReportingSchedulesGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post analytics reporting schedules gateway timeout response a status code equal to that given
func (o *PostAnalyticsReportingSchedulesGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostAnalyticsReportingSchedulesGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/schedules][%d] postAnalyticsReportingSchedulesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostAnalyticsReportingSchedulesGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/schedules][%d] postAnalyticsReportingSchedulesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostAnalyticsReportingSchedulesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAnalyticsReportingSchedulesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
