// Code generated by go-swagger; DO NOT EDIT.

package analytics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetAnalyticsReportingTimeperiodsReader is a Reader for the GetAnalyticsReportingTimeperiods structure.
type GetAnalyticsReportingTimeperiodsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAnalyticsReportingTimeperiodsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAnalyticsReportingTimeperiodsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAnalyticsReportingTimeperiodsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAnalyticsReportingTimeperiodsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAnalyticsReportingTimeperiodsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAnalyticsReportingTimeperiodsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetAnalyticsReportingTimeperiodsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetAnalyticsReportingTimeperiodsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetAnalyticsReportingTimeperiodsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetAnalyticsReportingTimeperiodsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAnalyticsReportingTimeperiodsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetAnalyticsReportingTimeperiodsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetAnalyticsReportingTimeperiodsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAnalyticsReportingTimeperiodsOK creates a GetAnalyticsReportingTimeperiodsOK with default headers values
func NewGetAnalyticsReportingTimeperiodsOK() *GetAnalyticsReportingTimeperiodsOK {
	return &GetAnalyticsReportingTimeperiodsOK{}
}

/*
GetAnalyticsReportingTimeperiodsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetAnalyticsReportingTimeperiodsOK struct {
	Payload []string
}

// IsSuccess returns true when this get analytics reporting timeperiods o k response has a 2xx status code
func (o *GetAnalyticsReportingTimeperiodsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get analytics reporting timeperiods o k response has a 3xx status code
func (o *GetAnalyticsReportingTimeperiodsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get analytics reporting timeperiods o k response has a 4xx status code
func (o *GetAnalyticsReportingTimeperiodsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get analytics reporting timeperiods o k response has a 5xx status code
func (o *GetAnalyticsReportingTimeperiodsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get analytics reporting timeperiods o k response a status code equal to that given
func (o *GetAnalyticsReportingTimeperiodsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetAnalyticsReportingTimeperiodsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/timeperiods][%d] getAnalyticsReportingTimeperiodsOK  %+v", 200, o.Payload)
}

func (o *GetAnalyticsReportingTimeperiodsOK) String() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/timeperiods][%d] getAnalyticsReportingTimeperiodsOK  %+v", 200, o.Payload)
}

func (o *GetAnalyticsReportingTimeperiodsOK) GetPayload() []string {
	return o.Payload
}

func (o *GetAnalyticsReportingTimeperiodsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsReportingTimeperiodsBadRequest creates a GetAnalyticsReportingTimeperiodsBadRequest with default headers values
func NewGetAnalyticsReportingTimeperiodsBadRequest() *GetAnalyticsReportingTimeperiodsBadRequest {
	return &GetAnalyticsReportingTimeperiodsBadRequest{}
}

/*
GetAnalyticsReportingTimeperiodsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetAnalyticsReportingTimeperiodsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get analytics reporting timeperiods bad request response has a 2xx status code
func (o *GetAnalyticsReportingTimeperiodsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get analytics reporting timeperiods bad request response has a 3xx status code
func (o *GetAnalyticsReportingTimeperiodsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get analytics reporting timeperiods bad request response has a 4xx status code
func (o *GetAnalyticsReportingTimeperiodsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get analytics reporting timeperiods bad request response has a 5xx status code
func (o *GetAnalyticsReportingTimeperiodsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get analytics reporting timeperiods bad request response a status code equal to that given
func (o *GetAnalyticsReportingTimeperiodsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetAnalyticsReportingTimeperiodsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/timeperiods][%d] getAnalyticsReportingTimeperiodsBadRequest  %+v", 400, o.Payload)
}

func (o *GetAnalyticsReportingTimeperiodsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/timeperiods][%d] getAnalyticsReportingTimeperiodsBadRequest  %+v", 400, o.Payload)
}

func (o *GetAnalyticsReportingTimeperiodsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsReportingTimeperiodsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsReportingTimeperiodsUnauthorized creates a GetAnalyticsReportingTimeperiodsUnauthorized with default headers values
func NewGetAnalyticsReportingTimeperiodsUnauthorized() *GetAnalyticsReportingTimeperiodsUnauthorized {
	return &GetAnalyticsReportingTimeperiodsUnauthorized{}
}

/*
GetAnalyticsReportingTimeperiodsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetAnalyticsReportingTimeperiodsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get analytics reporting timeperiods unauthorized response has a 2xx status code
func (o *GetAnalyticsReportingTimeperiodsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get analytics reporting timeperiods unauthorized response has a 3xx status code
func (o *GetAnalyticsReportingTimeperiodsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get analytics reporting timeperiods unauthorized response has a 4xx status code
func (o *GetAnalyticsReportingTimeperiodsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get analytics reporting timeperiods unauthorized response has a 5xx status code
func (o *GetAnalyticsReportingTimeperiodsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get analytics reporting timeperiods unauthorized response a status code equal to that given
func (o *GetAnalyticsReportingTimeperiodsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetAnalyticsReportingTimeperiodsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/timeperiods][%d] getAnalyticsReportingTimeperiodsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAnalyticsReportingTimeperiodsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/timeperiods][%d] getAnalyticsReportingTimeperiodsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAnalyticsReportingTimeperiodsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsReportingTimeperiodsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsReportingTimeperiodsForbidden creates a GetAnalyticsReportingTimeperiodsForbidden with default headers values
func NewGetAnalyticsReportingTimeperiodsForbidden() *GetAnalyticsReportingTimeperiodsForbidden {
	return &GetAnalyticsReportingTimeperiodsForbidden{}
}

/*
GetAnalyticsReportingTimeperiodsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetAnalyticsReportingTimeperiodsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get analytics reporting timeperiods forbidden response has a 2xx status code
func (o *GetAnalyticsReportingTimeperiodsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get analytics reporting timeperiods forbidden response has a 3xx status code
func (o *GetAnalyticsReportingTimeperiodsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get analytics reporting timeperiods forbidden response has a 4xx status code
func (o *GetAnalyticsReportingTimeperiodsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get analytics reporting timeperiods forbidden response has a 5xx status code
func (o *GetAnalyticsReportingTimeperiodsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get analytics reporting timeperiods forbidden response a status code equal to that given
func (o *GetAnalyticsReportingTimeperiodsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetAnalyticsReportingTimeperiodsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/timeperiods][%d] getAnalyticsReportingTimeperiodsForbidden  %+v", 403, o.Payload)
}

func (o *GetAnalyticsReportingTimeperiodsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/timeperiods][%d] getAnalyticsReportingTimeperiodsForbidden  %+v", 403, o.Payload)
}

func (o *GetAnalyticsReportingTimeperiodsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsReportingTimeperiodsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsReportingTimeperiodsNotFound creates a GetAnalyticsReportingTimeperiodsNotFound with default headers values
func NewGetAnalyticsReportingTimeperiodsNotFound() *GetAnalyticsReportingTimeperiodsNotFound {
	return &GetAnalyticsReportingTimeperiodsNotFound{}
}

/*
GetAnalyticsReportingTimeperiodsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetAnalyticsReportingTimeperiodsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get analytics reporting timeperiods not found response has a 2xx status code
func (o *GetAnalyticsReportingTimeperiodsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get analytics reporting timeperiods not found response has a 3xx status code
func (o *GetAnalyticsReportingTimeperiodsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get analytics reporting timeperiods not found response has a 4xx status code
func (o *GetAnalyticsReportingTimeperiodsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get analytics reporting timeperiods not found response has a 5xx status code
func (o *GetAnalyticsReportingTimeperiodsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get analytics reporting timeperiods not found response a status code equal to that given
func (o *GetAnalyticsReportingTimeperiodsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetAnalyticsReportingTimeperiodsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/timeperiods][%d] getAnalyticsReportingTimeperiodsNotFound  %+v", 404, o.Payload)
}

func (o *GetAnalyticsReportingTimeperiodsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/timeperiods][%d] getAnalyticsReportingTimeperiodsNotFound  %+v", 404, o.Payload)
}

func (o *GetAnalyticsReportingTimeperiodsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsReportingTimeperiodsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsReportingTimeperiodsRequestTimeout creates a GetAnalyticsReportingTimeperiodsRequestTimeout with default headers values
func NewGetAnalyticsReportingTimeperiodsRequestTimeout() *GetAnalyticsReportingTimeperiodsRequestTimeout {
	return &GetAnalyticsReportingTimeperiodsRequestTimeout{}
}

/*
GetAnalyticsReportingTimeperiodsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetAnalyticsReportingTimeperiodsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get analytics reporting timeperiods request timeout response has a 2xx status code
func (o *GetAnalyticsReportingTimeperiodsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get analytics reporting timeperiods request timeout response has a 3xx status code
func (o *GetAnalyticsReportingTimeperiodsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get analytics reporting timeperiods request timeout response has a 4xx status code
func (o *GetAnalyticsReportingTimeperiodsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get analytics reporting timeperiods request timeout response has a 5xx status code
func (o *GetAnalyticsReportingTimeperiodsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get analytics reporting timeperiods request timeout response a status code equal to that given
func (o *GetAnalyticsReportingTimeperiodsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetAnalyticsReportingTimeperiodsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/timeperiods][%d] getAnalyticsReportingTimeperiodsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetAnalyticsReportingTimeperiodsRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/timeperiods][%d] getAnalyticsReportingTimeperiodsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetAnalyticsReportingTimeperiodsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsReportingTimeperiodsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsReportingTimeperiodsRequestEntityTooLarge creates a GetAnalyticsReportingTimeperiodsRequestEntityTooLarge with default headers values
func NewGetAnalyticsReportingTimeperiodsRequestEntityTooLarge() *GetAnalyticsReportingTimeperiodsRequestEntityTooLarge {
	return &GetAnalyticsReportingTimeperiodsRequestEntityTooLarge{}
}

/*
GetAnalyticsReportingTimeperiodsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetAnalyticsReportingTimeperiodsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get analytics reporting timeperiods request entity too large response has a 2xx status code
func (o *GetAnalyticsReportingTimeperiodsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get analytics reporting timeperiods request entity too large response has a 3xx status code
func (o *GetAnalyticsReportingTimeperiodsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get analytics reporting timeperiods request entity too large response has a 4xx status code
func (o *GetAnalyticsReportingTimeperiodsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get analytics reporting timeperiods request entity too large response has a 5xx status code
func (o *GetAnalyticsReportingTimeperiodsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get analytics reporting timeperiods request entity too large response a status code equal to that given
func (o *GetAnalyticsReportingTimeperiodsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetAnalyticsReportingTimeperiodsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/timeperiods][%d] getAnalyticsReportingTimeperiodsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetAnalyticsReportingTimeperiodsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/timeperiods][%d] getAnalyticsReportingTimeperiodsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetAnalyticsReportingTimeperiodsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsReportingTimeperiodsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsReportingTimeperiodsUnsupportedMediaType creates a GetAnalyticsReportingTimeperiodsUnsupportedMediaType with default headers values
func NewGetAnalyticsReportingTimeperiodsUnsupportedMediaType() *GetAnalyticsReportingTimeperiodsUnsupportedMediaType {
	return &GetAnalyticsReportingTimeperiodsUnsupportedMediaType{}
}

/*
GetAnalyticsReportingTimeperiodsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetAnalyticsReportingTimeperiodsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get analytics reporting timeperiods unsupported media type response has a 2xx status code
func (o *GetAnalyticsReportingTimeperiodsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get analytics reporting timeperiods unsupported media type response has a 3xx status code
func (o *GetAnalyticsReportingTimeperiodsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get analytics reporting timeperiods unsupported media type response has a 4xx status code
func (o *GetAnalyticsReportingTimeperiodsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get analytics reporting timeperiods unsupported media type response has a 5xx status code
func (o *GetAnalyticsReportingTimeperiodsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get analytics reporting timeperiods unsupported media type response a status code equal to that given
func (o *GetAnalyticsReportingTimeperiodsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetAnalyticsReportingTimeperiodsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/timeperiods][%d] getAnalyticsReportingTimeperiodsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetAnalyticsReportingTimeperiodsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/timeperiods][%d] getAnalyticsReportingTimeperiodsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetAnalyticsReportingTimeperiodsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsReportingTimeperiodsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsReportingTimeperiodsTooManyRequests creates a GetAnalyticsReportingTimeperiodsTooManyRequests with default headers values
func NewGetAnalyticsReportingTimeperiodsTooManyRequests() *GetAnalyticsReportingTimeperiodsTooManyRequests {
	return &GetAnalyticsReportingTimeperiodsTooManyRequests{}
}

/*
GetAnalyticsReportingTimeperiodsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetAnalyticsReportingTimeperiodsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get analytics reporting timeperiods too many requests response has a 2xx status code
func (o *GetAnalyticsReportingTimeperiodsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get analytics reporting timeperiods too many requests response has a 3xx status code
func (o *GetAnalyticsReportingTimeperiodsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get analytics reporting timeperiods too many requests response has a 4xx status code
func (o *GetAnalyticsReportingTimeperiodsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get analytics reporting timeperiods too many requests response has a 5xx status code
func (o *GetAnalyticsReportingTimeperiodsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get analytics reporting timeperiods too many requests response a status code equal to that given
func (o *GetAnalyticsReportingTimeperiodsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetAnalyticsReportingTimeperiodsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/timeperiods][%d] getAnalyticsReportingTimeperiodsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetAnalyticsReportingTimeperiodsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/timeperiods][%d] getAnalyticsReportingTimeperiodsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetAnalyticsReportingTimeperiodsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsReportingTimeperiodsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsReportingTimeperiodsInternalServerError creates a GetAnalyticsReportingTimeperiodsInternalServerError with default headers values
func NewGetAnalyticsReportingTimeperiodsInternalServerError() *GetAnalyticsReportingTimeperiodsInternalServerError {
	return &GetAnalyticsReportingTimeperiodsInternalServerError{}
}

/*
GetAnalyticsReportingTimeperiodsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetAnalyticsReportingTimeperiodsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get analytics reporting timeperiods internal server error response has a 2xx status code
func (o *GetAnalyticsReportingTimeperiodsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get analytics reporting timeperiods internal server error response has a 3xx status code
func (o *GetAnalyticsReportingTimeperiodsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get analytics reporting timeperiods internal server error response has a 4xx status code
func (o *GetAnalyticsReportingTimeperiodsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get analytics reporting timeperiods internal server error response has a 5xx status code
func (o *GetAnalyticsReportingTimeperiodsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get analytics reporting timeperiods internal server error response a status code equal to that given
func (o *GetAnalyticsReportingTimeperiodsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetAnalyticsReportingTimeperiodsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/timeperiods][%d] getAnalyticsReportingTimeperiodsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAnalyticsReportingTimeperiodsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/timeperiods][%d] getAnalyticsReportingTimeperiodsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAnalyticsReportingTimeperiodsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsReportingTimeperiodsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsReportingTimeperiodsServiceUnavailable creates a GetAnalyticsReportingTimeperiodsServiceUnavailable with default headers values
func NewGetAnalyticsReportingTimeperiodsServiceUnavailable() *GetAnalyticsReportingTimeperiodsServiceUnavailable {
	return &GetAnalyticsReportingTimeperiodsServiceUnavailable{}
}

/*
GetAnalyticsReportingTimeperiodsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetAnalyticsReportingTimeperiodsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get analytics reporting timeperiods service unavailable response has a 2xx status code
func (o *GetAnalyticsReportingTimeperiodsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get analytics reporting timeperiods service unavailable response has a 3xx status code
func (o *GetAnalyticsReportingTimeperiodsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get analytics reporting timeperiods service unavailable response has a 4xx status code
func (o *GetAnalyticsReportingTimeperiodsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get analytics reporting timeperiods service unavailable response has a 5xx status code
func (o *GetAnalyticsReportingTimeperiodsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get analytics reporting timeperiods service unavailable response a status code equal to that given
func (o *GetAnalyticsReportingTimeperiodsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetAnalyticsReportingTimeperiodsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/timeperiods][%d] getAnalyticsReportingTimeperiodsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetAnalyticsReportingTimeperiodsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/timeperiods][%d] getAnalyticsReportingTimeperiodsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetAnalyticsReportingTimeperiodsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsReportingTimeperiodsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsReportingTimeperiodsGatewayTimeout creates a GetAnalyticsReportingTimeperiodsGatewayTimeout with default headers values
func NewGetAnalyticsReportingTimeperiodsGatewayTimeout() *GetAnalyticsReportingTimeperiodsGatewayTimeout {
	return &GetAnalyticsReportingTimeperiodsGatewayTimeout{}
}

/*
GetAnalyticsReportingTimeperiodsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetAnalyticsReportingTimeperiodsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get analytics reporting timeperiods gateway timeout response has a 2xx status code
func (o *GetAnalyticsReportingTimeperiodsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get analytics reporting timeperiods gateway timeout response has a 3xx status code
func (o *GetAnalyticsReportingTimeperiodsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get analytics reporting timeperiods gateway timeout response has a 4xx status code
func (o *GetAnalyticsReportingTimeperiodsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get analytics reporting timeperiods gateway timeout response has a 5xx status code
func (o *GetAnalyticsReportingTimeperiodsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get analytics reporting timeperiods gateway timeout response a status code equal to that given
func (o *GetAnalyticsReportingTimeperiodsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetAnalyticsReportingTimeperiodsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/timeperiods][%d] getAnalyticsReportingTimeperiodsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetAnalyticsReportingTimeperiodsGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/timeperiods][%d] getAnalyticsReportingTimeperiodsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetAnalyticsReportingTimeperiodsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsReportingTimeperiodsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
