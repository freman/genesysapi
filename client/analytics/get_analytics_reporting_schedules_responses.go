// Code generated by go-swagger; DO NOT EDIT.

package analytics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetAnalyticsReportingSchedulesReader is a Reader for the GetAnalyticsReportingSchedules structure.
type GetAnalyticsReportingSchedulesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAnalyticsReportingSchedulesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAnalyticsReportingSchedulesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAnalyticsReportingSchedulesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAnalyticsReportingSchedulesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAnalyticsReportingSchedulesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAnalyticsReportingSchedulesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetAnalyticsReportingSchedulesRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetAnalyticsReportingSchedulesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetAnalyticsReportingSchedulesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetAnalyticsReportingSchedulesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAnalyticsReportingSchedulesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetAnalyticsReportingSchedulesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetAnalyticsReportingSchedulesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAnalyticsReportingSchedulesOK creates a GetAnalyticsReportingSchedulesOK with default headers values
func NewGetAnalyticsReportingSchedulesOK() *GetAnalyticsReportingSchedulesOK {
	return &GetAnalyticsReportingSchedulesOK{}
}

/*
GetAnalyticsReportingSchedulesOK describes a response with status code 200, with default header values.

successful operation
*/
type GetAnalyticsReportingSchedulesOK struct {
	Payload *models.ReportScheduleEntityListing
}

// IsSuccess returns true when this get analytics reporting schedules o k response has a 2xx status code
func (o *GetAnalyticsReportingSchedulesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get analytics reporting schedules o k response has a 3xx status code
func (o *GetAnalyticsReportingSchedulesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get analytics reporting schedules o k response has a 4xx status code
func (o *GetAnalyticsReportingSchedulesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get analytics reporting schedules o k response has a 5xx status code
func (o *GetAnalyticsReportingSchedulesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get analytics reporting schedules o k response a status code equal to that given
func (o *GetAnalyticsReportingSchedulesOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetAnalyticsReportingSchedulesOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/schedules][%d] getAnalyticsReportingSchedulesOK  %+v", 200, o.Payload)
}

func (o *GetAnalyticsReportingSchedulesOK) String() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/schedules][%d] getAnalyticsReportingSchedulesOK  %+v", 200, o.Payload)
}

func (o *GetAnalyticsReportingSchedulesOK) GetPayload() *models.ReportScheduleEntityListing {
	return o.Payload
}

func (o *GetAnalyticsReportingSchedulesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ReportScheduleEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsReportingSchedulesBadRequest creates a GetAnalyticsReportingSchedulesBadRequest with default headers values
func NewGetAnalyticsReportingSchedulesBadRequest() *GetAnalyticsReportingSchedulesBadRequest {
	return &GetAnalyticsReportingSchedulesBadRequest{}
}

/*
GetAnalyticsReportingSchedulesBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetAnalyticsReportingSchedulesBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get analytics reporting schedules bad request response has a 2xx status code
func (o *GetAnalyticsReportingSchedulesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get analytics reporting schedules bad request response has a 3xx status code
func (o *GetAnalyticsReportingSchedulesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get analytics reporting schedules bad request response has a 4xx status code
func (o *GetAnalyticsReportingSchedulesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get analytics reporting schedules bad request response has a 5xx status code
func (o *GetAnalyticsReportingSchedulesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get analytics reporting schedules bad request response a status code equal to that given
func (o *GetAnalyticsReportingSchedulesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetAnalyticsReportingSchedulesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/schedules][%d] getAnalyticsReportingSchedulesBadRequest  %+v", 400, o.Payload)
}

func (o *GetAnalyticsReportingSchedulesBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/schedules][%d] getAnalyticsReportingSchedulesBadRequest  %+v", 400, o.Payload)
}

func (o *GetAnalyticsReportingSchedulesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsReportingSchedulesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsReportingSchedulesUnauthorized creates a GetAnalyticsReportingSchedulesUnauthorized with default headers values
func NewGetAnalyticsReportingSchedulesUnauthorized() *GetAnalyticsReportingSchedulesUnauthorized {
	return &GetAnalyticsReportingSchedulesUnauthorized{}
}

/*
GetAnalyticsReportingSchedulesUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetAnalyticsReportingSchedulesUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get analytics reporting schedules unauthorized response has a 2xx status code
func (o *GetAnalyticsReportingSchedulesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get analytics reporting schedules unauthorized response has a 3xx status code
func (o *GetAnalyticsReportingSchedulesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get analytics reporting schedules unauthorized response has a 4xx status code
func (o *GetAnalyticsReportingSchedulesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get analytics reporting schedules unauthorized response has a 5xx status code
func (o *GetAnalyticsReportingSchedulesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get analytics reporting schedules unauthorized response a status code equal to that given
func (o *GetAnalyticsReportingSchedulesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetAnalyticsReportingSchedulesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/schedules][%d] getAnalyticsReportingSchedulesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAnalyticsReportingSchedulesUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/schedules][%d] getAnalyticsReportingSchedulesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAnalyticsReportingSchedulesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsReportingSchedulesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsReportingSchedulesForbidden creates a GetAnalyticsReportingSchedulesForbidden with default headers values
func NewGetAnalyticsReportingSchedulesForbidden() *GetAnalyticsReportingSchedulesForbidden {
	return &GetAnalyticsReportingSchedulesForbidden{}
}

/*
GetAnalyticsReportingSchedulesForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetAnalyticsReportingSchedulesForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get analytics reporting schedules forbidden response has a 2xx status code
func (o *GetAnalyticsReportingSchedulesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get analytics reporting schedules forbidden response has a 3xx status code
func (o *GetAnalyticsReportingSchedulesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get analytics reporting schedules forbidden response has a 4xx status code
func (o *GetAnalyticsReportingSchedulesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get analytics reporting schedules forbidden response has a 5xx status code
func (o *GetAnalyticsReportingSchedulesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get analytics reporting schedules forbidden response a status code equal to that given
func (o *GetAnalyticsReportingSchedulesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetAnalyticsReportingSchedulesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/schedules][%d] getAnalyticsReportingSchedulesForbidden  %+v", 403, o.Payload)
}

func (o *GetAnalyticsReportingSchedulesForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/schedules][%d] getAnalyticsReportingSchedulesForbidden  %+v", 403, o.Payload)
}

func (o *GetAnalyticsReportingSchedulesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsReportingSchedulesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsReportingSchedulesNotFound creates a GetAnalyticsReportingSchedulesNotFound with default headers values
func NewGetAnalyticsReportingSchedulesNotFound() *GetAnalyticsReportingSchedulesNotFound {
	return &GetAnalyticsReportingSchedulesNotFound{}
}

/*
GetAnalyticsReportingSchedulesNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetAnalyticsReportingSchedulesNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get analytics reporting schedules not found response has a 2xx status code
func (o *GetAnalyticsReportingSchedulesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get analytics reporting schedules not found response has a 3xx status code
func (o *GetAnalyticsReportingSchedulesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get analytics reporting schedules not found response has a 4xx status code
func (o *GetAnalyticsReportingSchedulesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get analytics reporting schedules not found response has a 5xx status code
func (o *GetAnalyticsReportingSchedulesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get analytics reporting schedules not found response a status code equal to that given
func (o *GetAnalyticsReportingSchedulesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetAnalyticsReportingSchedulesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/schedules][%d] getAnalyticsReportingSchedulesNotFound  %+v", 404, o.Payload)
}

func (o *GetAnalyticsReportingSchedulesNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/schedules][%d] getAnalyticsReportingSchedulesNotFound  %+v", 404, o.Payload)
}

func (o *GetAnalyticsReportingSchedulesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsReportingSchedulesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsReportingSchedulesRequestTimeout creates a GetAnalyticsReportingSchedulesRequestTimeout with default headers values
func NewGetAnalyticsReportingSchedulesRequestTimeout() *GetAnalyticsReportingSchedulesRequestTimeout {
	return &GetAnalyticsReportingSchedulesRequestTimeout{}
}

/*
GetAnalyticsReportingSchedulesRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetAnalyticsReportingSchedulesRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get analytics reporting schedules request timeout response has a 2xx status code
func (o *GetAnalyticsReportingSchedulesRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get analytics reporting schedules request timeout response has a 3xx status code
func (o *GetAnalyticsReportingSchedulesRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get analytics reporting schedules request timeout response has a 4xx status code
func (o *GetAnalyticsReportingSchedulesRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get analytics reporting schedules request timeout response has a 5xx status code
func (o *GetAnalyticsReportingSchedulesRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get analytics reporting schedules request timeout response a status code equal to that given
func (o *GetAnalyticsReportingSchedulesRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetAnalyticsReportingSchedulesRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/schedules][%d] getAnalyticsReportingSchedulesRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetAnalyticsReportingSchedulesRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/schedules][%d] getAnalyticsReportingSchedulesRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetAnalyticsReportingSchedulesRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsReportingSchedulesRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsReportingSchedulesRequestEntityTooLarge creates a GetAnalyticsReportingSchedulesRequestEntityTooLarge with default headers values
func NewGetAnalyticsReportingSchedulesRequestEntityTooLarge() *GetAnalyticsReportingSchedulesRequestEntityTooLarge {
	return &GetAnalyticsReportingSchedulesRequestEntityTooLarge{}
}

/*
GetAnalyticsReportingSchedulesRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetAnalyticsReportingSchedulesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get analytics reporting schedules request entity too large response has a 2xx status code
func (o *GetAnalyticsReportingSchedulesRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get analytics reporting schedules request entity too large response has a 3xx status code
func (o *GetAnalyticsReportingSchedulesRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get analytics reporting schedules request entity too large response has a 4xx status code
func (o *GetAnalyticsReportingSchedulesRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get analytics reporting schedules request entity too large response has a 5xx status code
func (o *GetAnalyticsReportingSchedulesRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get analytics reporting schedules request entity too large response a status code equal to that given
func (o *GetAnalyticsReportingSchedulesRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetAnalyticsReportingSchedulesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/schedules][%d] getAnalyticsReportingSchedulesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetAnalyticsReportingSchedulesRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/schedules][%d] getAnalyticsReportingSchedulesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetAnalyticsReportingSchedulesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsReportingSchedulesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsReportingSchedulesUnsupportedMediaType creates a GetAnalyticsReportingSchedulesUnsupportedMediaType with default headers values
func NewGetAnalyticsReportingSchedulesUnsupportedMediaType() *GetAnalyticsReportingSchedulesUnsupportedMediaType {
	return &GetAnalyticsReportingSchedulesUnsupportedMediaType{}
}

/*
GetAnalyticsReportingSchedulesUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetAnalyticsReportingSchedulesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get analytics reporting schedules unsupported media type response has a 2xx status code
func (o *GetAnalyticsReportingSchedulesUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get analytics reporting schedules unsupported media type response has a 3xx status code
func (o *GetAnalyticsReportingSchedulesUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get analytics reporting schedules unsupported media type response has a 4xx status code
func (o *GetAnalyticsReportingSchedulesUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get analytics reporting schedules unsupported media type response has a 5xx status code
func (o *GetAnalyticsReportingSchedulesUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get analytics reporting schedules unsupported media type response a status code equal to that given
func (o *GetAnalyticsReportingSchedulesUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetAnalyticsReportingSchedulesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/schedules][%d] getAnalyticsReportingSchedulesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetAnalyticsReportingSchedulesUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/schedules][%d] getAnalyticsReportingSchedulesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetAnalyticsReportingSchedulesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsReportingSchedulesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsReportingSchedulesTooManyRequests creates a GetAnalyticsReportingSchedulesTooManyRequests with default headers values
func NewGetAnalyticsReportingSchedulesTooManyRequests() *GetAnalyticsReportingSchedulesTooManyRequests {
	return &GetAnalyticsReportingSchedulesTooManyRequests{}
}

/*
GetAnalyticsReportingSchedulesTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetAnalyticsReportingSchedulesTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get analytics reporting schedules too many requests response has a 2xx status code
func (o *GetAnalyticsReportingSchedulesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get analytics reporting schedules too many requests response has a 3xx status code
func (o *GetAnalyticsReportingSchedulesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get analytics reporting schedules too many requests response has a 4xx status code
func (o *GetAnalyticsReportingSchedulesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get analytics reporting schedules too many requests response has a 5xx status code
func (o *GetAnalyticsReportingSchedulesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get analytics reporting schedules too many requests response a status code equal to that given
func (o *GetAnalyticsReportingSchedulesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetAnalyticsReportingSchedulesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/schedules][%d] getAnalyticsReportingSchedulesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetAnalyticsReportingSchedulesTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/schedules][%d] getAnalyticsReportingSchedulesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetAnalyticsReportingSchedulesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsReportingSchedulesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsReportingSchedulesInternalServerError creates a GetAnalyticsReportingSchedulesInternalServerError with default headers values
func NewGetAnalyticsReportingSchedulesInternalServerError() *GetAnalyticsReportingSchedulesInternalServerError {
	return &GetAnalyticsReportingSchedulesInternalServerError{}
}

/*
GetAnalyticsReportingSchedulesInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetAnalyticsReportingSchedulesInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get analytics reporting schedules internal server error response has a 2xx status code
func (o *GetAnalyticsReportingSchedulesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get analytics reporting schedules internal server error response has a 3xx status code
func (o *GetAnalyticsReportingSchedulesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get analytics reporting schedules internal server error response has a 4xx status code
func (o *GetAnalyticsReportingSchedulesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get analytics reporting schedules internal server error response has a 5xx status code
func (o *GetAnalyticsReportingSchedulesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get analytics reporting schedules internal server error response a status code equal to that given
func (o *GetAnalyticsReportingSchedulesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetAnalyticsReportingSchedulesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/schedules][%d] getAnalyticsReportingSchedulesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAnalyticsReportingSchedulesInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/schedules][%d] getAnalyticsReportingSchedulesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAnalyticsReportingSchedulesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsReportingSchedulesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsReportingSchedulesServiceUnavailable creates a GetAnalyticsReportingSchedulesServiceUnavailable with default headers values
func NewGetAnalyticsReportingSchedulesServiceUnavailable() *GetAnalyticsReportingSchedulesServiceUnavailable {
	return &GetAnalyticsReportingSchedulesServiceUnavailable{}
}

/*
GetAnalyticsReportingSchedulesServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetAnalyticsReportingSchedulesServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get analytics reporting schedules service unavailable response has a 2xx status code
func (o *GetAnalyticsReportingSchedulesServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get analytics reporting schedules service unavailable response has a 3xx status code
func (o *GetAnalyticsReportingSchedulesServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get analytics reporting schedules service unavailable response has a 4xx status code
func (o *GetAnalyticsReportingSchedulesServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get analytics reporting schedules service unavailable response has a 5xx status code
func (o *GetAnalyticsReportingSchedulesServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get analytics reporting schedules service unavailable response a status code equal to that given
func (o *GetAnalyticsReportingSchedulesServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetAnalyticsReportingSchedulesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/schedules][%d] getAnalyticsReportingSchedulesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetAnalyticsReportingSchedulesServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/schedules][%d] getAnalyticsReportingSchedulesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetAnalyticsReportingSchedulesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsReportingSchedulesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsReportingSchedulesGatewayTimeout creates a GetAnalyticsReportingSchedulesGatewayTimeout with default headers values
func NewGetAnalyticsReportingSchedulesGatewayTimeout() *GetAnalyticsReportingSchedulesGatewayTimeout {
	return &GetAnalyticsReportingSchedulesGatewayTimeout{}
}

/*
GetAnalyticsReportingSchedulesGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetAnalyticsReportingSchedulesGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get analytics reporting schedules gateway timeout response has a 2xx status code
func (o *GetAnalyticsReportingSchedulesGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get analytics reporting schedules gateway timeout response has a 3xx status code
func (o *GetAnalyticsReportingSchedulesGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get analytics reporting schedules gateway timeout response has a 4xx status code
func (o *GetAnalyticsReportingSchedulesGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get analytics reporting schedules gateway timeout response has a 5xx status code
func (o *GetAnalyticsReportingSchedulesGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get analytics reporting schedules gateway timeout response a status code equal to that given
func (o *GetAnalyticsReportingSchedulesGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetAnalyticsReportingSchedulesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/schedules][%d] getAnalyticsReportingSchedulesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetAnalyticsReportingSchedulesGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/schedules][%d] getAnalyticsReportingSchedulesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetAnalyticsReportingSchedulesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsReportingSchedulesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
