// Code generated by go-swagger; DO NOT EDIT.

package analytics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// DeleteAnalyticsReportingScheduleReader is a Reader for the DeleteAnalyticsReportingSchedule structure.
type DeleteAnalyticsReportingScheduleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteAnalyticsReportingScheduleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteAnalyticsReportingScheduleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteAnalyticsReportingScheduleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteAnalyticsReportingScheduleUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteAnalyticsReportingScheduleForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteAnalyticsReportingScheduleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewDeleteAnalyticsReportingScheduleRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewDeleteAnalyticsReportingScheduleRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDeleteAnalyticsReportingScheduleUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteAnalyticsReportingScheduleTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteAnalyticsReportingScheduleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteAnalyticsReportingScheduleServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteAnalyticsReportingScheduleGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteAnalyticsReportingScheduleOK creates a DeleteAnalyticsReportingScheduleOK with default headers values
func NewDeleteAnalyticsReportingScheduleOK() *DeleteAnalyticsReportingScheduleOK {
	return &DeleteAnalyticsReportingScheduleOK{}
}

/*
DeleteAnalyticsReportingScheduleOK describes a response with status code 200, with default header values.

Operation was successful.
*/
type DeleteAnalyticsReportingScheduleOK struct {
}

// IsSuccess returns true when this delete analytics reporting schedule o k response has a 2xx status code
func (o *DeleteAnalyticsReportingScheduleOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete analytics reporting schedule o k response has a 3xx status code
func (o *DeleteAnalyticsReportingScheduleOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete analytics reporting schedule o k response has a 4xx status code
func (o *DeleteAnalyticsReportingScheduleOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete analytics reporting schedule o k response has a 5xx status code
func (o *DeleteAnalyticsReportingScheduleOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete analytics reporting schedule o k response a status code equal to that given
func (o *DeleteAnalyticsReportingScheduleOK) IsCode(code int) bool {
	return code == 200
}

func (o *DeleteAnalyticsReportingScheduleOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/analytics/reporting/schedules/{scheduleId}][%d] deleteAnalyticsReportingScheduleOK ", 200)
}

func (o *DeleteAnalyticsReportingScheduleOK) String() string {
	return fmt.Sprintf("[DELETE /api/v2/analytics/reporting/schedules/{scheduleId}][%d] deleteAnalyticsReportingScheduleOK ", 200)
}

func (o *DeleteAnalyticsReportingScheduleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAnalyticsReportingScheduleBadRequest creates a DeleteAnalyticsReportingScheduleBadRequest with default headers values
func NewDeleteAnalyticsReportingScheduleBadRequest() *DeleteAnalyticsReportingScheduleBadRequest {
	return &DeleteAnalyticsReportingScheduleBadRequest{}
}

/*
DeleteAnalyticsReportingScheduleBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type DeleteAnalyticsReportingScheduleBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete analytics reporting schedule bad request response has a 2xx status code
func (o *DeleteAnalyticsReportingScheduleBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete analytics reporting schedule bad request response has a 3xx status code
func (o *DeleteAnalyticsReportingScheduleBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete analytics reporting schedule bad request response has a 4xx status code
func (o *DeleteAnalyticsReportingScheduleBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete analytics reporting schedule bad request response has a 5xx status code
func (o *DeleteAnalyticsReportingScheduleBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete analytics reporting schedule bad request response a status code equal to that given
func (o *DeleteAnalyticsReportingScheduleBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteAnalyticsReportingScheduleBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/analytics/reporting/schedules/{scheduleId}][%d] deleteAnalyticsReportingScheduleBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteAnalyticsReportingScheduleBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v2/analytics/reporting/schedules/{scheduleId}][%d] deleteAnalyticsReportingScheduleBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteAnalyticsReportingScheduleBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteAnalyticsReportingScheduleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAnalyticsReportingScheduleUnauthorized creates a DeleteAnalyticsReportingScheduleUnauthorized with default headers values
func NewDeleteAnalyticsReportingScheduleUnauthorized() *DeleteAnalyticsReportingScheduleUnauthorized {
	return &DeleteAnalyticsReportingScheduleUnauthorized{}
}

/*
DeleteAnalyticsReportingScheduleUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type DeleteAnalyticsReportingScheduleUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete analytics reporting schedule unauthorized response has a 2xx status code
func (o *DeleteAnalyticsReportingScheduleUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete analytics reporting schedule unauthorized response has a 3xx status code
func (o *DeleteAnalyticsReportingScheduleUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete analytics reporting schedule unauthorized response has a 4xx status code
func (o *DeleteAnalyticsReportingScheduleUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete analytics reporting schedule unauthorized response has a 5xx status code
func (o *DeleteAnalyticsReportingScheduleUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete analytics reporting schedule unauthorized response a status code equal to that given
func (o *DeleteAnalyticsReportingScheduleUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteAnalyticsReportingScheduleUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/analytics/reporting/schedules/{scheduleId}][%d] deleteAnalyticsReportingScheduleUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteAnalyticsReportingScheduleUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/v2/analytics/reporting/schedules/{scheduleId}][%d] deleteAnalyticsReportingScheduleUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteAnalyticsReportingScheduleUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteAnalyticsReportingScheduleUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAnalyticsReportingScheduleForbidden creates a DeleteAnalyticsReportingScheduleForbidden with default headers values
func NewDeleteAnalyticsReportingScheduleForbidden() *DeleteAnalyticsReportingScheduleForbidden {
	return &DeleteAnalyticsReportingScheduleForbidden{}
}

/*
DeleteAnalyticsReportingScheduleForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type DeleteAnalyticsReportingScheduleForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete analytics reporting schedule forbidden response has a 2xx status code
func (o *DeleteAnalyticsReportingScheduleForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete analytics reporting schedule forbidden response has a 3xx status code
func (o *DeleteAnalyticsReportingScheduleForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete analytics reporting schedule forbidden response has a 4xx status code
func (o *DeleteAnalyticsReportingScheduleForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete analytics reporting schedule forbidden response has a 5xx status code
func (o *DeleteAnalyticsReportingScheduleForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete analytics reporting schedule forbidden response a status code equal to that given
func (o *DeleteAnalyticsReportingScheduleForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteAnalyticsReportingScheduleForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/analytics/reporting/schedules/{scheduleId}][%d] deleteAnalyticsReportingScheduleForbidden  %+v", 403, o.Payload)
}

func (o *DeleteAnalyticsReportingScheduleForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/v2/analytics/reporting/schedules/{scheduleId}][%d] deleteAnalyticsReportingScheduleForbidden  %+v", 403, o.Payload)
}

func (o *DeleteAnalyticsReportingScheduleForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteAnalyticsReportingScheduleForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAnalyticsReportingScheduleNotFound creates a DeleteAnalyticsReportingScheduleNotFound with default headers values
func NewDeleteAnalyticsReportingScheduleNotFound() *DeleteAnalyticsReportingScheduleNotFound {
	return &DeleteAnalyticsReportingScheduleNotFound{}
}

/*
DeleteAnalyticsReportingScheduleNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type DeleteAnalyticsReportingScheduleNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete analytics reporting schedule not found response has a 2xx status code
func (o *DeleteAnalyticsReportingScheduleNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete analytics reporting schedule not found response has a 3xx status code
func (o *DeleteAnalyticsReportingScheduleNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete analytics reporting schedule not found response has a 4xx status code
func (o *DeleteAnalyticsReportingScheduleNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete analytics reporting schedule not found response has a 5xx status code
func (o *DeleteAnalyticsReportingScheduleNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete analytics reporting schedule not found response a status code equal to that given
func (o *DeleteAnalyticsReportingScheduleNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteAnalyticsReportingScheduleNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/analytics/reporting/schedules/{scheduleId}][%d] deleteAnalyticsReportingScheduleNotFound  %+v", 404, o.Payload)
}

func (o *DeleteAnalyticsReportingScheduleNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v2/analytics/reporting/schedules/{scheduleId}][%d] deleteAnalyticsReportingScheduleNotFound  %+v", 404, o.Payload)
}

func (o *DeleteAnalyticsReportingScheduleNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteAnalyticsReportingScheduleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAnalyticsReportingScheduleRequestTimeout creates a DeleteAnalyticsReportingScheduleRequestTimeout with default headers values
func NewDeleteAnalyticsReportingScheduleRequestTimeout() *DeleteAnalyticsReportingScheduleRequestTimeout {
	return &DeleteAnalyticsReportingScheduleRequestTimeout{}
}

/*
DeleteAnalyticsReportingScheduleRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type DeleteAnalyticsReportingScheduleRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete analytics reporting schedule request timeout response has a 2xx status code
func (o *DeleteAnalyticsReportingScheduleRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete analytics reporting schedule request timeout response has a 3xx status code
func (o *DeleteAnalyticsReportingScheduleRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete analytics reporting schedule request timeout response has a 4xx status code
func (o *DeleteAnalyticsReportingScheduleRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete analytics reporting schedule request timeout response has a 5xx status code
func (o *DeleteAnalyticsReportingScheduleRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this delete analytics reporting schedule request timeout response a status code equal to that given
func (o *DeleteAnalyticsReportingScheduleRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *DeleteAnalyticsReportingScheduleRequestTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/analytics/reporting/schedules/{scheduleId}][%d] deleteAnalyticsReportingScheduleRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteAnalyticsReportingScheduleRequestTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/analytics/reporting/schedules/{scheduleId}][%d] deleteAnalyticsReportingScheduleRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteAnalyticsReportingScheduleRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteAnalyticsReportingScheduleRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAnalyticsReportingScheduleRequestEntityTooLarge creates a DeleteAnalyticsReportingScheduleRequestEntityTooLarge with default headers values
func NewDeleteAnalyticsReportingScheduleRequestEntityTooLarge() *DeleteAnalyticsReportingScheduleRequestEntityTooLarge {
	return &DeleteAnalyticsReportingScheduleRequestEntityTooLarge{}
}

/*
DeleteAnalyticsReportingScheduleRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type DeleteAnalyticsReportingScheduleRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete analytics reporting schedule request entity too large response has a 2xx status code
func (o *DeleteAnalyticsReportingScheduleRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete analytics reporting schedule request entity too large response has a 3xx status code
func (o *DeleteAnalyticsReportingScheduleRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete analytics reporting schedule request entity too large response has a 4xx status code
func (o *DeleteAnalyticsReportingScheduleRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete analytics reporting schedule request entity too large response has a 5xx status code
func (o *DeleteAnalyticsReportingScheduleRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this delete analytics reporting schedule request entity too large response a status code equal to that given
func (o *DeleteAnalyticsReportingScheduleRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *DeleteAnalyticsReportingScheduleRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/analytics/reporting/schedules/{scheduleId}][%d] deleteAnalyticsReportingScheduleRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteAnalyticsReportingScheduleRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[DELETE /api/v2/analytics/reporting/schedules/{scheduleId}][%d] deleteAnalyticsReportingScheduleRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteAnalyticsReportingScheduleRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteAnalyticsReportingScheduleRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAnalyticsReportingScheduleUnsupportedMediaType creates a DeleteAnalyticsReportingScheduleUnsupportedMediaType with default headers values
func NewDeleteAnalyticsReportingScheduleUnsupportedMediaType() *DeleteAnalyticsReportingScheduleUnsupportedMediaType {
	return &DeleteAnalyticsReportingScheduleUnsupportedMediaType{}
}

/*
DeleteAnalyticsReportingScheduleUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type DeleteAnalyticsReportingScheduleUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete analytics reporting schedule unsupported media type response has a 2xx status code
func (o *DeleteAnalyticsReportingScheduleUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete analytics reporting schedule unsupported media type response has a 3xx status code
func (o *DeleteAnalyticsReportingScheduleUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete analytics reporting schedule unsupported media type response has a 4xx status code
func (o *DeleteAnalyticsReportingScheduleUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete analytics reporting schedule unsupported media type response has a 5xx status code
func (o *DeleteAnalyticsReportingScheduleUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this delete analytics reporting schedule unsupported media type response a status code equal to that given
func (o *DeleteAnalyticsReportingScheduleUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *DeleteAnalyticsReportingScheduleUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/analytics/reporting/schedules/{scheduleId}][%d] deleteAnalyticsReportingScheduleUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteAnalyticsReportingScheduleUnsupportedMediaType) String() string {
	return fmt.Sprintf("[DELETE /api/v2/analytics/reporting/schedules/{scheduleId}][%d] deleteAnalyticsReportingScheduleUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteAnalyticsReportingScheduleUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteAnalyticsReportingScheduleUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAnalyticsReportingScheduleTooManyRequests creates a DeleteAnalyticsReportingScheduleTooManyRequests with default headers values
func NewDeleteAnalyticsReportingScheduleTooManyRequests() *DeleteAnalyticsReportingScheduleTooManyRequests {
	return &DeleteAnalyticsReportingScheduleTooManyRequests{}
}

/*
DeleteAnalyticsReportingScheduleTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type DeleteAnalyticsReportingScheduleTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete analytics reporting schedule too many requests response has a 2xx status code
func (o *DeleteAnalyticsReportingScheduleTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete analytics reporting schedule too many requests response has a 3xx status code
func (o *DeleteAnalyticsReportingScheduleTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete analytics reporting schedule too many requests response has a 4xx status code
func (o *DeleteAnalyticsReportingScheduleTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete analytics reporting schedule too many requests response has a 5xx status code
func (o *DeleteAnalyticsReportingScheduleTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete analytics reporting schedule too many requests response a status code equal to that given
func (o *DeleteAnalyticsReportingScheduleTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *DeleteAnalyticsReportingScheduleTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/analytics/reporting/schedules/{scheduleId}][%d] deleteAnalyticsReportingScheduleTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteAnalyticsReportingScheduleTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /api/v2/analytics/reporting/schedules/{scheduleId}][%d] deleteAnalyticsReportingScheduleTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteAnalyticsReportingScheduleTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteAnalyticsReportingScheduleTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAnalyticsReportingScheduleInternalServerError creates a DeleteAnalyticsReportingScheduleInternalServerError with default headers values
func NewDeleteAnalyticsReportingScheduleInternalServerError() *DeleteAnalyticsReportingScheduleInternalServerError {
	return &DeleteAnalyticsReportingScheduleInternalServerError{}
}

/*
DeleteAnalyticsReportingScheduleInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type DeleteAnalyticsReportingScheduleInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete analytics reporting schedule internal server error response has a 2xx status code
func (o *DeleteAnalyticsReportingScheduleInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete analytics reporting schedule internal server error response has a 3xx status code
func (o *DeleteAnalyticsReportingScheduleInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete analytics reporting schedule internal server error response has a 4xx status code
func (o *DeleteAnalyticsReportingScheduleInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete analytics reporting schedule internal server error response has a 5xx status code
func (o *DeleteAnalyticsReportingScheduleInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete analytics reporting schedule internal server error response a status code equal to that given
func (o *DeleteAnalyticsReportingScheduleInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteAnalyticsReportingScheduleInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/analytics/reporting/schedules/{scheduleId}][%d] deleteAnalyticsReportingScheduleInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteAnalyticsReportingScheduleInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/v2/analytics/reporting/schedules/{scheduleId}][%d] deleteAnalyticsReportingScheduleInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteAnalyticsReportingScheduleInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteAnalyticsReportingScheduleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAnalyticsReportingScheduleServiceUnavailable creates a DeleteAnalyticsReportingScheduleServiceUnavailable with default headers values
func NewDeleteAnalyticsReportingScheduleServiceUnavailable() *DeleteAnalyticsReportingScheduleServiceUnavailable {
	return &DeleteAnalyticsReportingScheduleServiceUnavailable{}
}

/*
DeleteAnalyticsReportingScheduleServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type DeleteAnalyticsReportingScheduleServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete analytics reporting schedule service unavailable response has a 2xx status code
func (o *DeleteAnalyticsReportingScheduleServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete analytics reporting schedule service unavailable response has a 3xx status code
func (o *DeleteAnalyticsReportingScheduleServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete analytics reporting schedule service unavailable response has a 4xx status code
func (o *DeleteAnalyticsReportingScheduleServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete analytics reporting schedule service unavailable response has a 5xx status code
func (o *DeleteAnalyticsReportingScheduleServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this delete analytics reporting schedule service unavailable response a status code equal to that given
func (o *DeleteAnalyticsReportingScheduleServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *DeleteAnalyticsReportingScheduleServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/analytics/reporting/schedules/{scheduleId}][%d] deleteAnalyticsReportingScheduleServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteAnalyticsReportingScheduleServiceUnavailable) String() string {
	return fmt.Sprintf("[DELETE /api/v2/analytics/reporting/schedules/{scheduleId}][%d] deleteAnalyticsReportingScheduleServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteAnalyticsReportingScheduleServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteAnalyticsReportingScheduleServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAnalyticsReportingScheduleGatewayTimeout creates a DeleteAnalyticsReportingScheduleGatewayTimeout with default headers values
func NewDeleteAnalyticsReportingScheduleGatewayTimeout() *DeleteAnalyticsReportingScheduleGatewayTimeout {
	return &DeleteAnalyticsReportingScheduleGatewayTimeout{}
}

/*
DeleteAnalyticsReportingScheduleGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type DeleteAnalyticsReportingScheduleGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete analytics reporting schedule gateway timeout response has a 2xx status code
func (o *DeleteAnalyticsReportingScheduleGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete analytics reporting schedule gateway timeout response has a 3xx status code
func (o *DeleteAnalyticsReportingScheduleGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete analytics reporting schedule gateway timeout response has a 4xx status code
func (o *DeleteAnalyticsReportingScheduleGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete analytics reporting schedule gateway timeout response has a 5xx status code
func (o *DeleteAnalyticsReportingScheduleGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this delete analytics reporting schedule gateway timeout response a status code equal to that given
func (o *DeleteAnalyticsReportingScheduleGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *DeleteAnalyticsReportingScheduleGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/analytics/reporting/schedules/{scheduleId}][%d] deleteAnalyticsReportingScheduleGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteAnalyticsReportingScheduleGatewayTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/analytics/reporting/schedules/{scheduleId}][%d] deleteAnalyticsReportingScheduleGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteAnalyticsReportingScheduleGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteAnalyticsReportingScheduleGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
