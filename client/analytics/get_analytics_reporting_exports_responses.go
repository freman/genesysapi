// Code generated by go-swagger; DO NOT EDIT.

package analytics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetAnalyticsReportingExportsReader is a Reader for the GetAnalyticsReportingExports structure.
type GetAnalyticsReportingExportsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAnalyticsReportingExportsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAnalyticsReportingExportsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAnalyticsReportingExportsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAnalyticsReportingExportsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAnalyticsReportingExportsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAnalyticsReportingExportsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetAnalyticsReportingExportsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetAnalyticsReportingExportsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetAnalyticsReportingExportsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAnalyticsReportingExportsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetAnalyticsReportingExportsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetAnalyticsReportingExportsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAnalyticsReportingExportsOK creates a GetAnalyticsReportingExportsOK with default headers values
func NewGetAnalyticsReportingExportsOK() *GetAnalyticsReportingExportsOK {
	return &GetAnalyticsReportingExportsOK{}
}

/*GetAnalyticsReportingExportsOK handles this case with default header values.

successful operation
*/
type GetAnalyticsReportingExportsOK struct {
	Payload *models.ReportingExportJobListing
}

func (o *GetAnalyticsReportingExportsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/exports][%d] getAnalyticsReportingExportsOK  %+v", 200, o.Payload)
}

func (o *GetAnalyticsReportingExportsOK) GetPayload() *models.ReportingExportJobListing {
	return o.Payload
}

func (o *GetAnalyticsReportingExportsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ReportingExportJobListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsReportingExportsBadRequest creates a GetAnalyticsReportingExportsBadRequest with default headers values
func NewGetAnalyticsReportingExportsBadRequest() *GetAnalyticsReportingExportsBadRequest {
	return &GetAnalyticsReportingExportsBadRequest{}
}

/*GetAnalyticsReportingExportsBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetAnalyticsReportingExportsBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetAnalyticsReportingExportsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/exports][%d] getAnalyticsReportingExportsBadRequest  %+v", 400, o.Payload)
}

func (o *GetAnalyticsReportingExportsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsReportingExportsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsReportingExportsUnauthorized creates a GetAnalyticsReportingExportsUnauthorized with default headers values
func NewGetAnalyticsReportingExportsUnauthorized() *GetAnalyticsReportingExportsUnauthorized {
	return &GetAnalyticsReportingExportsUnauthorized{}
}

/*GetAnalyticsReportingExportsUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetAnalyticsReportingExportsUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetAnalyticsReportingExportsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/exports][%d] getAnalyticsReportingExportsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAnalyticsReportingExportsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsReportingExportsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsReportingExportsForbidden creates a GetAnalyticsReportingExportsForbidden with default headers values
func NewGetAnalyticsReportingExportsForbidden() *GetAnalyticsReportingExportsForbidden {
	return &GetAnalyticsReportingExportsForbidden{}
}

/*GetAnalyticsReportingExportsForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetAnalyticsReportingExportsForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetAnalyticsReportingExportsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/exports][%d] getAnalyticsReportingExportsForbidden  %+v", 403, o.Payload)
}

func (o *GetAnalyticsReportingExportsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsReportingExportsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsReportingExportsNotFound creates a GetAnalyticsReportingExportsNotFound with default headers values
func NewGetAnalyticsReportingExportsNotFound() *GetAnalyticsReportingExportsNotFound {
	return &GetAnalyticsReportingExportsNotFound{}
}

/*GetAnalyticsReportingExportsNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetAnalyticsReportingExportsNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetAnalyticsReportingExportsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/exports][%d] getAnalyticsReportingExportsNotFound  %+v", 404, o.Payload)
}

func (o *GetAnalyticsReportingExportsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsReportingExportsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsReportingExportsRequestEntityTooLarge creates a GetAnalyticsReportingExportsRequestEntityTooLarge with default headers values
func NewGetAnalyticsReportingExportsRequestEntityTooLarge() *GetAnalyticsReportingExportsRequestEntityTooLarge {
	return &GetAnalyticsReportingExportsRequestEntityTooLarge{}
}

/*GetAnalyticsReportingExportsRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetAnalyticsReportingExportsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetAnalyticsReportingExportsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/exports][%d] getAnalyticsReportingExportsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetAnalyticsReportingExportsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsReportingExportsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsReportingExportsUnsupportedMediaType creates a GetAnalyticsReportingExportsUnsupportedMediaType with default headers values
func NewGetAnalyticsReportingExportsUnsupportedMediaType() *GetAnalyticsReportingExportsUnsupportedMediaType {
	return &GetAnalyticsReportingExportsUnsupportedMediaType{}
}

/*GetAnalyticsReportingExportsUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetAnalyticsReportingExportsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetAnalyticsReportingExportsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/exports][%d] getAnalyticsReportingExportsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetAnalyticsReportingExportsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsReportingExportsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsReportingExportsTooManyRequests creates a GetAnalyticsReportingExportsTooManyRequests with default headers values
func NewGetAnalyticsReportingExportsTooManyRequests() *GetAnalyticsReportingExportsTooManyRequests {
	return &GetAnalyticsReportingExportsTooManyRequests{}
}

/*GetAnalyticsReportingExportsTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type GetAnalyticsReportingExportsTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetAnalyticsReportingExportsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/exports][%d] getAnalyticsReportingExportsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetAnalyticsReportingExportsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsReportingExportsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsReportingExportsInternalServerError creates a GetAnalyticsReportingExportsInternalServerError with default headers values
func NewGetAnalyticsReportingExportsInternalServerError() *GetAnalyticsReportingExportsInternalServerError {
	return &GetAnalyticsReportingExportsInternalServerError{}
}

/*GetAnalyticsReportingExportsInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetAnalyticsReportingExportsInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetAnalyticsReportingExportsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/exports][%d] getAnalyticsReportingExportsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAnalyticsReportingExportsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsReportingExportsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsReportingExportsServiceUnavailable creates a GetAnalyticsReportingExportsServiceUnavailable with default headers values
func NewGetAnalyticsReportingExportsServiceUnavailable() *GetAnalyticsReportingExportsServiceUnavailable {
	return &GetAnalyticsReportingExportsServiceUnavailable{}
}

/*GetAnalyticsReportingExportsServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetAnalyticsReportingExportsServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetAnalyticsReportingExportsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/exports][%d] getAnalyticsReportingExportsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetAnalyticsReportingExportsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsReportingExportsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsReportingExportsGatewayTimeout creates a GetAnalyticsReportingExportsGatewayTimeout with default headers values
func NewGetAnalyticsReportingExportsGatewayTimeout() *GetAnalyticsReportingExportsGatewayTimeout {
	return &GetAnalyticsReportingExportsGatewayTimeout{}
}

/*GetAnalyticsReportingExportsGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetAnalyticsReportingExportsGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetAnalyticsReportingExportsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/exports][%d] getAnalyticsReportingExportsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetAnalyticsReportingExportsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsReportingExportsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
