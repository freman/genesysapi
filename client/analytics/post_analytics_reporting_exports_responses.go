// Code generated by go-swagger; DO NOT EDIT.

package analytics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostAnalyticsReportingExportsReader is a Reader for the PostAnalyticsReportingExports structure.
type PostAnalyticsReportingExportsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostAnalyticsReportingExportsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostAnalyticsReportingExportsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostAnalyticsReportingExportsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostAnalyticsReportingExportsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostAnalyticsReportingExportsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostAnalyticsReportingExportsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostAnalyticsReportingExportsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostAnalyticsReportingExportsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostAnalyticsReportingExportsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostAnalyticsReportingExportsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostAnalyticsReportingExportsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostAnalyticsReportingExportsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostAnalyticsReportingExportsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostAnalyticsReportingExportsOK creates a PostAnalyticsReportingExportsOK with default headers values
func NewPostAnalyticsReportingExportsOK() *PostAnalyticsReportingExportsOK {
	return &PostAnalyticsReportingExportsOK{}
}

/*
PostAnalyticsReportingExportsOK describes a response with status code 200, with default header values.

successful operation
*/
type PostAnalyticsReportingExportsOK struct {
	Payload *models.ReportingExportJobResponse
}

// IsSuccess returns true when this post analytics reporting exports o k response has a 2xx status code
func (o *PostAnalyticsReportingExportsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post analytics reporting exports o k response has a 3xx status code
func (o *PostAnalyticsReportingExportsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post analytics reporting exports o k response has a 4xx status code
func (o *PostAnalyticsReportingExportsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post analytics reporting exports o k response has a 5xx status code
func (o *PostAnalyticsReportingExportsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post analytics reporting exports o k response a status code equal to that given
func (o *PostAnalyticsReportingExportsOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostAnalyticsReportingExportsOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/exports][%d] postAnalyticsReportingExportsOK  %+v", 200, o.Payload)
}

func (o *PostAnalyticsReportingExportsOK) String() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/exports][%d] postAnalyticsReportingExportsOK  %+v", 200, o.Payload)
}

func (o *PostAnalyticsReportingExportsOK) GetPayload() *models.ReportingExportJobResponse {
	return o.Payload
}

func (o *PostAnalyticsReportingExportsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ReportingExportJobResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAnalyticsReportingExportsBadRequest creates a PostAnalyticsReportingExportsBadRequest with default headers values
func NewPostAnalyticsReportingExportsBadRequest() *PostAnalyticsReportingExportsBadRequest {
	return &PostAnalyticsReportingExportsBadRequest{}
}

/*
PostAnalyticsReportingExportsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostAnalyticsReportingExportsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post analytics reporting exports bad request response has a 2xx status code
func (o *PostAnalyticsReportingExportsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post analytics reporting exports bad request response has a 3xx status code
func (o *PostAnalyticsReportingExportsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post analytics reporting exports bad request response has a 4xx status code
func (o *PostAnalyticsReportingExportsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post analytics reporting exports bad request response has a 5xx status code
func (o *PostAnalyticsReportingExportsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post analytics reporting exports bad request response a status code equal to that given
func (o *PostAnalyticsReportingExportsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostAnalyticsReportingExportsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/exports][%d] postAnalyticsReportingExportsBadRequest  %+v", 400, o.Payload)
}

func (o *PostAnalyticsReportingExportsBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/exports][%d] postAnalyticsReportingExportsBadRequest  %+v", 400, o.Payload)
}

func (o *PostAnalyticsReportingExportsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAnalyticsReportingExportsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAnalyticsReportingExportsUnauthorized creates a PostAnalyticsReportingExportsUnauthorized with default headers values
func NewPostAnalyticsReportingExportsUnauthorized() *PostAnalyticsReportingExportsUnauthorized {
	return &PostAnalyticsReportingExportsUnauthorized{}
}

/*
PostAnalyticsReportingExportsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostAnalyticsReportingExportsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post analytics reporting exports unauthorized response has a 2xx status code
func (o *PostAnalyticsReportingExportsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post analytics reporting exports unauthorized response has a 3xx status code
func (o *PostAnalyticsReportingExportsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post analytics reporting exports unauthorized response has a 4xx status code
func (o *PostAnalyticsReportingExportsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post analytics reporting exports unauthorized response has a 5xx status code
func (o *PostAnalyticsReportingExportsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post analytics reporting exports unauthorized response a status code equal to that given
func (o *PostAnalyticsReportingExportsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostAnalyticsReportingExportsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/exports][%d] postAnalyticsReportingExportsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostAnalyticsReportingExportsUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/exports][%d] postAnalyticsReportingExportsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostAnalyticsReportingExportsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAnalyticsReportingExportsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAnalyticsReportingExportsForbidden creates a PostAnalyticsReportingExportsForbidden with default headers values
func NewPostAnalyticsReportingExportsForbidden() *PostAnalyticsReportingExportsForbidden {
	return &PostAnalyticsReportingExportsForbidden{}
}

/*
PostAnalyticsReportingExportsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostAnalyticsReportingExportsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post analytics reporting exports forbidden response has a 2xx status code
func (o *PostAnalyticsReportingExportsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post analytics reporting exports forbidden response has a 3xx status code
func (o *PostAnalyticsReportingExportsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post analytics reporting exports forbidden response has a 4xx status code
func (o *PostAnalyticsReportingExportsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post analytics reporting exports forbidden response has a 5xx status code
func (o *PostAnalyticsReportingExportsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post analytics reporting exports forbidden response a status code equal to that given
func (o *PostAnalyticsReportingExportsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostAnalyticsReportingExportsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/exports][%d] postAnalyticsReportingExportsForbidden  %+v", 403, o.Payload)
}

func (o *PostAnalyticsReportingExportsForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/exports][%d] postAnalyticsReportingExportsForbidden  %+v", 403, o.Payload)
}

func (o *PostAnalyticsReportingExportsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAnalyticsReportingExportsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAnalyticsReportingExportsNotFound creates a PostAnalyticsReportingExportsNotFound with default headers values
func NewPostAnalyticsReportingExportsNotFound() *PostAnalyticsReportingExportsNotFound {
	return &PostAnalyticsReportingExportsNotFound{}
}

/*
PostAnalyticsReportingExportsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostAnalyticsReportingExportsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post analytics reporting exports not found response has a 2xx status code
func (o *PostAnalyticsReportingExportsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post analytics reporting exports not found response has a 3xx status code
func (o *PostAnalyticsReportingExportsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post analytics reporting exports not found response has a 4xx status code
func (o *PostAnalyticsReportingExportsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post analytics reporting exports not found response has a 5xx status code
func (o *PostAnalyticsReportingExportsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post analytics reporting exports not found response a status code equal to that given
func (o *PostAnalyticsReportingExportsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostAnalyticsReportingExportsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/exports][%d] postAnalyticsReportingExportsNotFound  %+v", 404, o.Payload)
}

func (o *PostAnalyticsReportingExportsNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/exports][%d] postAnalyticsReportingExportsNotFound  %+v", 404, o.Payload)
}

func (o *PostAnalyticsReportingExportsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAnalyticsReportingExportsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAnalyticsReportingExportsRequestTimeout creates a PostAnalyticsReportingExportsRequestTimeout with default headers values
func NewPostAnalyticsReportingExportsRequestTimeout() *PostAnalyticsReportingExportsRequestTimeout {
	return &PostAnalyticsReportingExportsRequestTimeout{}
}

/*
PostAnalyticsReportingExportsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostAnalyticsReportingExportsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post analytics reporting exports request timeout response has a 2xx status code
func (o *PostAnalyticsReportingExportsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post analytics reporting exports request timeout response has a 3xx status code
func (o *PostAnalyticsReportingExportsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post analytics reporting exports request timeout response has a 4xx status code
func (o *PostAnalyticsReportingExportsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post analytics reporting exports request timeout response has a 5xx status code
func (o *PostAnalyticsReportingExportsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post analytics reporting exports request timeout response a status code equal to that given
func (o *PostAnalyticsReportingExportsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostAnalyticsReportingExportsRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/exports][%d] postAnalyticsReportingExportsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostAnalyticsReportingExportsRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/exports][%d] postAnalyticsReportingExportsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostAnalyticsReportingExportsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAnalyticsReportingExportsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAnalyticsReportingExportsRequestEntityTooLarge creates a PostAnalyticsReportingExportsRequestEntityTooLarge with default headers values
func NewPostAnalyticsReportingExportsRequestEntityTooLarge() *PostAnalyticsReportingExportsRequestEntityTooLarge {
	return &PostAnalyticsReportingExportsRequestEntityTooLarge{}
}

/*
PostAnalyticsReportingExportsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PostAnalyticsReportingExportsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post analytics reporting exports request entity too large response has a 2xx status code
func (o *PostAnalyticsReportingExportsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post analytics reporting exports request entity too large response has a 3xx status code
func (o *PostAnalyticsReportingExportsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post analytics reporting exports request entity too large response has a 4xx status code
func (o *PostAnalyticsReportingExportsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post analytics reporting exports request entity too large response has a 5xx status code
func (o *PostAnalyticsReportingExportsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post analytics reporting exports request entity too large response a status code equal to that given
func (o *PostAnalyticsReportingExportsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostAnalyticsReportingExportsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/exports][%d] postAnalyticsReportingExportsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostAnalyticsReportingExportsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/exports][%d] postAnalyticsReportingExportsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostAnalyticsReportingExportsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAnalyticsReportingExportsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAnalyticsReportingExportsUnsupportedMediaType creates a PostAnalyticsReportingExportsUnsupportedMediaType with default headers values
func NewPostAnalyticsReportingExportsUnsupportedMediaType() *PostAnalyticsReportingExportsUnsupportedMediaType {
	return &PostAnalyticsReportingExportsUnsupportedMediaType{}
}

/*
PostAnalyticsReportingExportsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostAnalyticsReportingExportsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post analytics reporting exports unsupported media type response has a 2xx status code
func (o *PostAnalyticsReportingExportsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post analytics reporting exports unsupported media type response has a 3xx status code
func (o *PostAnalyticsReportingExportsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post analytics reporting exports unsupported media type response has a 4xx status code
func (o *PostAnalyticsReportingExportsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post analytics reporting exports unsupported media type response has a 5xx status code
func (o *PostAnalyticsReportingExportsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post analytics reporting exports unsupported media type response a status code equal to that given
func (o *PostAnalyticsReportingExportsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostAnalyticsReportingExportsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/exports][%d] postAnalyticsReportingExportsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostAnalyticsReportingExportsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/exports][%d] postAnalyticsReportingExportsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostAnalyticsReportingExportsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAnalyticsReportingExportsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAnalyticsReportingExportsTooManyRequests creates a PostAnalyticsReportingExportsTooManyRequests with default headers values
func NewPostAnalyticsReportingExportsTooManyRequests() *PostAnalyticsReportingExportsTooManyRequests {
	return &PostAnalyticsReportingExportsTooManyRequests{}
}

/*
PostAnalyticsReportingExportsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostAnalyticsReportingExportsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post analytics reporting exports too many requests response has a 2xx status code
func (o *PostAnalyticsReportingExportsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post analytics reporting exports too many requests response has a 3xx status code
func (o *PostAnalyticsReportingExportsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post analytics reporting exports too many requests response has a 4xx status code
func (o *PostAnalyticsReportingExportsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post analytics reporting exports too many requests response has a 5xx status code
func (o *PostAnalyticsReportingExportsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post analytics reporting exports too many requests response a status code equal to that given
func (o *PostAnalyticsReportingExportsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostAnalyticsReportingExportsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/exports][%d] postAnalyticsReportingExportsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostAnalyticsReportingExportsTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/exports][%d] postAnalyticsReportingExportsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostAnalyticsReportingExportsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAnalyticsReportingExportsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAnalyticsReportingExportsInternalServerError creates a PostAnalyticsReportingExportsInternalServerError with default headers values
func NewPostAnalyticsReportingExportsInternalServerError() *PostAnalyticsReportingExportsInternalServerError {
	return &PostAnalyticsReportingExportsInternalServerError{}
}

/*
PostAnalyticsReportingExportsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostAnalyticsReportingExportsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post analytics reporting exports internal server error response has a 2xx status code
func (o *PostAnalyticsReportingExportsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post analytics reporting exports internal server error response has a 3xx status code
func (o *PostAnalyticsReportingExportsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post analytics reporting exports internal server error response has a 4xx status code
func (o *PostAnalyticsReportingExportsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post analytics reporting exports internal server error response has a 5xx status code
func (o *PostAnalyticsReportingExportsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post analytics reporting exports internal server error response a status code equal to that given
func (o *PostAnalyticsReportingExportsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostAnalyticsReportingExportsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/exports][%d] postAnalyticsReportingExportsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostAnalyticsReportingExportsInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/exports][%d] postAnalyticsReportingExportsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostAnalyticsReportingExportsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAnalyticsReportingExportsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAnalyticsReportingExportsServiceUnavailable creates a PostAnalyticsReportingExportsServiceUnavailable with default headers values
func NewPostAnalyticsReportingExportsServiceUnavailable() *PostAnalyticsReportingExportsServiceUnavailable {
	return &PostAnalyticsReportingExportsServiceUnavailable{}
}

/*
PostAnalyticsReportingExportsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostAnalyticsReportingExportsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post analytics reporting exports service unavailable response has a 2xx status code
func (o *PostAnalyticsReportingExportsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post analytics reporting exports service unavailable response has a 3xx status code
func (o *PostAnalyticsReportingExportsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post analytics reporting exports service unavailable response has a 4xx status code
func (o *PostAnalyticsReportingExportsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post analytics reporting exports service unavailable response has a 5xx status code
func (o *PostAnalyticsReportingExportsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post analytics reporting exports service unavailable response a status code equal to that given
func (o *PostAnalyticsReportingExportsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostAnalyticsReportingExportsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/exports][%d] postAnalyticsReportingExportsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostAnalyticsReportingExportsServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/exports][%d] postAnalyticsReportingExportsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostAnalyticsReportingExportsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAnalyticsReportingExportsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAnalyticsReportingExportsGatewayTimeout creates a PostAnalyticsReportingExportsGatewayTimeout with default headers values
func NewPostAnalyticsReportingExportsGatewayTimeout() *PostAnalyticsReportingExportsGatewayTimeout {
	return &PostAnalyticsReportingExportsGatewayTimeout{}
}

/*
PostAnalyticsReportingExportsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostAnalyticsReportingExportsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post analytics reporting exports gateway timeout response has a 2xx status code
func (o *PostAnalyticsReportingExportsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post analytics reporting exports gateway timeout response has a 3xx status code
func (o *PostAnalyticsReportingExportsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post analytics reporting exports gateway timeout response has a 4xx status code
func (o *PostAnalyticsReportingExportsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post analytics reporting exports gateway timeout response has a 5xx status code
func (o *PostAnalyticsReportingExportsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post analytics reporting exports gateway timeout response a status code equal to that given
func (o *PostAnalyticsReportingExportsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostAnalyticsReportingExportsGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/exports][%d] postAnalyticsReportingExportsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostAnalyticsReportingExportsGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/exports][%d] postAnalyticsReportingExportsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostAnalyticsReportingExportsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAnalyticsReportingExportsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
