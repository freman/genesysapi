// Code generated by go-swagger; DO NOT EDIT.

package analytics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutAnalyticsDataretentionSettingsReader is a Reader for the PutAnalyticsDataretentionSettings structure.
type PutAnalyticsDataretentionSettingsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutAnalyticsDataretentionSettingsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutAnalyticsDataretentionSettingsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutAnalyticsDataretentionSettingsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutAnalyticsDataretentionSettingsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutAnalyticsDataretentionSettingsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutAnalyticsDataretentionSettingsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutAnalyticsDataretentionSettingsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPutAnalyticsDataretentionSettingsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutAnalyticsDataretentionSettingsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutAnalyticsDataretentionSettingsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutAnalyticsDataretentionSettingsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutAnalyticsDataretentionSettingsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutAnalyticsDataretentionSettingsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutAnalyticsDataretentionSettingsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutAnalyticsDataretentionSettingsOK creates a PutAnalyticsDataretentionSettingsOK with default headers values
func NewPutAnalyticsDataretentionSettingsOK() *PutAnalyticsDataretentionSettingsOK {
	return &PutAnalyticsDataretentionSettingsOK{}
}

/*PutAnalyticsDataretentionSettingsOK handles this case with default header values.

successful operation
*/
type PutAnalyticsDataretentionSettingsOK struct {
	Payload *models.AnalyticsDataRetentionResponse
}

func (o *PutAnalyticsDataretentionSettingsOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/analytics/dataretention/settings][%d] putAnalyticsDataretentionSettingsOK  %+v", 200, o.Payload)
}

func (o *PutAnalyticsDataretentionSettingsOK) GetPayload() *models.AnalyticsDataRetentionResponse {
	return o.Payload
}

func (o *PutAnalyticsDataretentionSettingsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AnalyticsDataRetentionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAnalyticsDataretentionSettingsBadRequest creates a PutAnalyticsDataretentionSettingsBadRequest with default headers values
func NewPutAnalyticsDataretentionSettingsBadRequest() *PutAnalyticsDataretentionSettingsBadRequest {
	return &PutAnalyticsDataretentionSettingsBadRequest{}
}

/*PutAnalyticsDataretentionSettingsBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutAnalyticsDataretentionSettingsBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PutAnalyticsDataretentionSettingsBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/analytics/dataretention/settings][%d] putAnalyticsDataretentionSettingsBadRequest  %+v", 400, o.Payload)
}

func (o *PutAnalyticsDataretentionSettingsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutAnalyticsDataretentionSettingsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAnalyticsDataretentionSettingsUnauthorized creates a PutAnalyticsDataretentionSettingsUnauthorized with default headers values
func NewPutAnalyticsDataretentionSettingsUnauthorized() *PutAnalyticsDataretentionSettingsUnauthorized {
	return &PutAnalyticsDataretentionSettingsUnauthorized{}
}

/*PutAnalyticsDataretentionSettingsUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PutAnalyticsDataretentionSettingsUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PutAnalyticsDataretentionSettingsUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/analytics/dataretention/settings][%d] putAnalyticsDataretentionSettingsUnauthorized  %+v", 401, o.Payload)
}

func (o *PutAnalyticsDataretentionSettingsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutAnalyticsDataretentionSettingsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAnalyticsDataretentionSettingsForbidden creates a PutAnalyticsDataretentionSettingsForbidden with default headers values
func NewPutAnalyticsDataretentionSettingsForbidden() *PutAnalyticsDataretentionSettingsForbidden {
	return &PutAnalyticsDataretentionSettingsForbidden{}
}

/*PutAnalyticsDataretentionSettingsForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PutAnalyticsDataretentionSettingsForbidden struct {
	Payload *models.ErrorBody
}

func (o *PutAnalyticsDataretentionSettingsForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/analytics/dataretention/settings][%d] putAnalyticsDataretentionSettingsForbidden  %+v", 403, o.Payload)
}

func (o *PutAnalyticsDataretentionSettingsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutAnalyticsDataretentionSettingsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAnalyticsDataretentionSettingsNotFound creates a PutAnalyticsDataretentionSettingsNotFound with default headers values
func NewPutAnalyticsDataretentionSettingsNotFound() *PutAnalyticsDataretentionSettingsNotFound {
	return &PutAnalyticsDataretentionSettingsNotFound{}
}

/*PutAnalyticsDataretentionSettingsNotFound handles this case with default header values.

The requested resource was not found.
*/
type PutAnalyticsDataretentionSettingsNotFound struct {
	Payload *models.ErrorBody
}

func (o *PutAnalyticsDataretentionSettingsNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/analytics/dataretention/settings][%d] putAnalyticsDataretentionSettingsNotFound  %+v", 404, o.Payload)
}

func (o *PutAnalyticsDataretentionSettingsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutAnalyticsDataretentionSettingsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAnalyticsDataretentionSettingsRequestTimeout creates a PutAnalyticsDataretentionSettingsRequestTimeout with default headers values
func NewPutAnalyticsDataretentionSettingsRequestTimeout() *PutAnalyticsDataretentionSettingsRequestTimeout {
	return &PutAnalyticsDataretentionSettingsRequestTimeout{}
}

/*PutAnalyticsDataretentionSettingsRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutAnalyticsDataretentionSettingsRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PutAnalyticsDataretentionSettingsRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/analytics/dataretention/settings][%d] putAnalyticsDataretentionSettingsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutAnalyticsDataretentionSettingsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutAnalyticsDataretentionSettingsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAnalyticsDataretentionSettingsConflict creates a PutAnalyticsDataretentionSettingsConflict with default headers values
func NewPutAnalyticsDataretentionSettingsConflict() *PutAnalyticsDataretentionSettingsConflict {
	return &PutAnalyticsDataretentionSettingsConflict{}
}

/*PutAnalyticsDataretentionSettingsConflict handles this case with default header values.

Conflict
*/
type PutAnalyticsDataretentionSettingsConflict struct {
	Payload *models.ErrorBody
}

func (o *PutAnalyticsDataretentionSettingsConflict) Error() string {
	return fmt.Sprintf("[PUT /api/v2/analytics/dataretention/settings][%d] putAnalyticsDataretentionSettingsConflict  %+v", 409, o.Payload)
}

func (o *PutAnalyticsDataretentionSettingsConflict) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutAnalyticsDataretentionSettingsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAnalyticsDataretentionSettingsRequestEntityTooLarge creates a PutAnalyticsDataretentionSettingsRequestEntityTooLarge with default headers values
func NewPutAnalyticsDataretentionSettingsRequestEntityTooLarge() *PutAnalyticsDataretentionSettingsRequestEntityTooLarge {
	return &PutAnalyticsDataretentionSettingsRequestEntityTooLarge{}
}

/*PutAnalyticsDataretentionSettingsRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PutAnalyticsDataretentionSettingsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PutAnalyticsDataretentionSettingsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/analytics/dataretention/settings][%d] putAnalyticsDataretentionSettingsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutAnalyticsDataretentionSettingsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutAnalyticsDataretentionSettingsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAnalyticsDataretentionSettingsUnsupportedMediaType creates a PutAnalyticsDataretentionSettingsUnsupportedMediaType with default headers values
func NewPutAnalyticsDataretentionSettingsUnsupportedMediaType() *PutAnalyticsDataretentionSettingsUnsupportedMediaType {
	return &PutAnalyticsDataretentionSettingsUnsupportedMediaType{}
}

/*PutAnalyticsDataretentionSettingsUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutAnalyticsDataretentionSettingsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PutAnalyticsDataretentionSettingsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/analytics/dataretention/settings][%d] putAnalyticsDataretentionSettingsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutAnalyticsDataretentionSettingsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutAnalyticsDataretentionSettingsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAnalyticsDataretentionSettingsTooManyRequests creates a PutAnalyticsDataretentionSettingsTooManyRequests with default headers values
func NewPutAnalyticsDataretentionSettingsTooManyRequests() *PutAnalyticsDataretentionSettingsTooManyRequests {
	return &PutAnalyticsDataretentionSettingsTooManyRequests{}
}

/*PutAnalyticsDataretentionSettingsTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutAnalyticsDataretentionSettingsTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PutAnalyticsDataretentionSettingsTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/analytics/dataretention/settings][%d] putAnalyticsDataretentionSettingsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutAnalyticsDataretentionSettingsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutAnalyticsDataretentionSettingsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAnalyticsDataretentionSettingsInternalServerError creates a PutAnalyticsDataretentionSettingsInternalServerError with default headers values
func NewPutAnalyticsDataretentionSettingsInternalServerError() *PutAnalyticsDataretentionSettingsInternalServerError {
	return &PutAnalyticsDataretentionSettingsInternalServerError{}
}

/*PutAnalyticsDataretentionSettingsInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutAnalyticsDataretentionSettingsInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PutAnalyticsDataretentionSettingsInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/analytics/dataretention/settings][%d] putAnalyticsDataretentionSettingsInternalServerError  %+v", 500, o.Payload)
}

func (o *PutAnalyticsDataretentionSettingsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutAnalyticsDataretentionSettingsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAnalyticsDataretentionSettingsServiceUnavailable creates a PutAnalyticsDataretentionSettingsServiceUnavailable with default headers values
func NewPutAnalyticsDataretentionSettingsServiceUnavailable() *PutAnalyticsDataretentionSettingsServiceUnavailable {
	return &PutAnalyticsDataretentionSettingsServiceUnavailable{}
}

/*PutAnalyticsDataretentionSettingsServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutAnalyticsDataretentionSettingsServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PutAnalyticsDataretentionSettingsServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/analytics/dataretention/settings][%d] putAnalyticsDataretentionSettingsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutAnalyticsDataretentionSettingsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutAnalyticsDataretentionSettingsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAnalyticsDataretentionSettingsGatewayTimeout creates a PutAnalyticsDataretentionSettingsGatewayTimeout with default headers values
func NewPutAnalyticsDataretentionSettingsGatewayTimeout() *PutAnalyticsDataretentionSettingsGatewayTimeout {
	return &PutAnalyticsDataretentionSettingsGatewayTimeout{}
}

/*PutAnalyticsDataretentionSettingsGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PutAnalyticsDataretentionSettingsGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PutAnalyticsDataretentionSettingsGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/analytics/dataretention/settings][%d] putAnalyticsDataretentionSettingsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutAnalyticsDataretentionSettingsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutAnalyticsDataretentionSettingsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
