// Code generated by go-swagger; DO NOT EDIT.

package analytics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetAnalyticsReportingScheduleHistoryLatestReader is a Reader for the GetAnalyticsReportingScheduleHistoryLatest structure.
type GetAnalyticsReportingScheduleHistoryLatestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAnalyticsReportingScheduleHistoryLatestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAnalyticsReportingScheduleHistoryLatestOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAnalyticsReportingScheduleHistoryLatestBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAnalyticsReportingScheduleHistoryLatestUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAnalyticsReportingScheduleHistoryLatestForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAnalyticsReportingScheduleHistoryLatestNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetAnalyticsReportingScheduleHistoryLatestRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetAnalyticsReportingScheduleHistoryLatestRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetAnalyticsReportingScheduleHistoryLatestUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetAnalyticsReportingScheduleHistoryLatestTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAnalyticsReportingScheduleHistoryLatestInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetAnalyticsReportingScheduleHistoryLatestServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetAnalyticsReportingScheduleHistoryLatestGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAnalyticsReportingScheduleHistoryLatestOK creates a GetAnalyticsReportingScheduleHistoryLatestOK with default headers values
func NewGetAnalyticsReportingScheduleHistoryLatestOK() *GetAnalyticsReportingScheduleHistoryLatestOK {
	return &GetAnalyticsReportingScheduleHistoryLatestOK{}
}

/*
GetAnalyticsReportingScheduleHistoryLatestOK describes a response with status code 200, with default header values.

successful operation
*/
type GetAnalyticsReportingScheduleHistoryLatestOK struct {
	Payload *models.ReportRunEntry
}

// IsSuccess returns true when this get analytics reporting schedule history latest o k response has a 2xx status code
func (o *GetAnalyticsReportingScheduleHistoryLatestOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get analytics reporting schedule history latest o k response has a 3xx status code
func (o *GetAnalyticsReportingScheduleHistoryLatestOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get analytics reporting schedule history latest o k response has a 4xx status code
func (o *GetAnalyticsReportingScheduleHistoryLatestOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get analytics reporting schedule history latest o k response has a 5xx status code
func (o *GetAnalyticsReportingScheduleHistoryLatestOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get analytics reporting schedule history latest o k response a status code equal to that given
func (o *GetAnalyticsReportingScheduleHistoryLatestOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetAnalyticsReportingScheduleHistoryLatestOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/schedules/{scheduleId}/history/latest][%d] getAnalyticsReportingScheduleHistoryLatestOK  %+v", 200, o.Payload)
}

func (o *GetAnalyticsReportingScheduleHistoryLatestOK) String() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/schedules/{scheduleId}/history/latest][%d] getAnalyticsReportingScheduleHistoryLatestOK  %+v", 200, o.Payload)
}

func (o *GetAnalyticsReportingScheduleHistoryLatestOK) GetPayload() *models.ReportRunEntry {
	return o.Payload
}

func (o *GetAnalyticsReportingScheduleHistoryLatestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ReportRunEntry)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsReportingScheduleHistoryLatestBadRequest creates a GetAnalyticsReportingScheduleHistoryLatestBadRequest with default headers values
func NewGetAnalyticsReportingScheduleHistoryLatestBadRequest() *GetAnalyticsReportingScheduleHistoryLatestBadRequest {
	return &GetAnalyticsReportingScheduleHistoryLatestBadRequest{}
}

/*
GetAnalyticsReportingScheduleHistoryLatestBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetAnalyticsReportingScheduleHistoryLatestBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get analytics reporting schedule history latest bad request response has a 2xx status code
func (o *GetAnalyticsReportingScheduleHistoryLatestBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get analytics reporting schedule history latest bad request response has a 3xx status code
func (o *GetAnalyticsReportingScheduleHistoryLatestBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get analytics reporting schedule history latest bad request response has a 4xx status code
func (o *GetAnalyticsReportingScheduleHistoryLatestBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get analytics reporting schedule history latest bad request response has a 5xx status code
func (o *GetAnalyticsReportingScheduleHistoryLatestBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get analytics reporting schedule history latest bad request response a status code equal to that given
func (o *GetAnalyticsReportingScheduleHistoryLatestBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetAnalyticsReportingScheduleHistoryLatestBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/schedules/{scheduleId}/history/latest][%d] getAnalyticsReportingScheduleHistoryLatestBadRequest  %+v", 400, o.Payload)
}

func (o *GetAnalyticsReportingScheduleHistoryLatestBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/schedules/{scheduleId}/history/latest][%d] getAnalyticsReportingScheduleHistoryLatestBadRequest  %+v", 400, o.Payload)
}

func (o *GetAnalyticsReportingScheduleHistoryLatestBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsReportingScheduleHistoryLatestBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsReportingScheduleHistoryLatestUnauthorized creates a GetAnalyticsReportingScheduleHistoryLatestUnauthorized with default headers values
func NewGetAnalyticsReportingScheduleHistoryLatestUnauthorized() *GetAnalyticsReportingScheduleHistoryLatestUnauthorized {
	return &GetAnalyticsReportingScheduleHistoryLatestUnauthorized{}
}

/*
GetAnalyticsReportingScheduleHistoryLatestUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetAnalyticsReportingScheduleHistoryLatestUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get analytics reporting schedule history latest unauthorized response has a 2xx status code
func (o *GetAnalyticsReportingScheduleHistoryLatestUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get analytics reporting schedule history latest unauthorized response has a 3xx status code
func (o *GetAnalyticsReportingScheduleHistoryLatestUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get analytics reporting schedule history latest unauthorized response has a 4xx status code
func (o *GetAnalyticsReportingScheduleHistoryLatestUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get analytics reporting schedule history latest unauthorized response has a 5xx status code
func (o *GetAnalyticsReportingScheduleHistoryLatestUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get analytics reporting schedule history latest unauthorized response a status code equal to that given
func (o *GetAnalyticsReportingScheduleHistoryLatestUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetAnalyticsReportingScheduleHistoryLatestUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/schedules/{scheduleId}/history/latest][%d] getAnalyticsReportingScheduleHistoryLatestUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAnalyticsReportingScheduleHistoryLatestUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/schedules/{scheduleId}/history/latest][%d] getAnalyticsReportingScheduleHistoryLatestUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAnalyticsReportingScheduleHistoryLatestUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsReportingScheduleHistoryLatestUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsReportingScheduleHistoryLatestForbidden creates a GetAnalyticsReportingScheduleHistoryLatestForbidden with default headers values
func NewGetAnalyticsReportingScheduleHistoryLatestForbidden() *GetAnalyticsReportingScheduleHistoryLatestForbidden {
	return &GetAnalyticsReportingScheduleHistoryLatestForbidden{}
}

/*
GetAnalyticsReportingScheduleHistoryLatestForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetAnalyticsReportingScheduleHistoryLatestForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get analytics reporting schedule history latest forbidden response has a 2xx status code
func (o *GetAnalyticsReportingScheduleHistoryLatestForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get analytics reporting schedule history latest forbidden response has a 3xx status code
func (o *GetAnalyticsReportingScheduleHistoryLatestForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get analytics reporting schedule history latest forbidden response has a 4xx status code
func (o *GetAnalyticsReportingScheduleHistoryLatestForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get analytics reporting schedule history latest forbidden response has a 5xx status code
func (o *GetAnalyticsReportingScheduleHistoryLatestForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get analytics reporting schedule history latest forbidden response a status code equal to that given
func (o *GetAnalyticsReportingScheduleHistoryLatestForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetAnalyticsReportingScheduleHistoryLatestForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/schedules/{scheduleId}/history/latest][%d] getAnalyticsReportingScheduleHistoryLatestForbidden  %+v", 403, o.Payload)
}

func (o *GetAnalyticsReportingScheduleHistoryLatestForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/schedules/{scheduleId}/history/latest][%d] getAnalyticsReportingScheduleHistoryLatestForbidden  %+v", 403, o.Payload)
}

func (o *GetAnalyticsReportingScheduleHistoryLatestForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsReportingScheduleHistoryLatestForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsReportingScheduleHistoryLatestNotFound creates a GetAnalyticsReportingScheduleHistoryLatestNotFound with default headers values
func NewGetAnalyticsReportingScheduleHistoryLatestNotFound() *GetAnalyticsReportingScheduleHistoryLatestNotFound {
	return &GetAnalyticsReportingScheduleHistoryLatestNotFound{}
}

/*
GetAnalyticsReportingScheduleHistoryLatestNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetAnalyticsReportingScheduleHistoryLatestNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get analytics reporting schedule history latest not found response has a 2xx status code
func (o *GetAnalyticsReportingScheduleHistoryLatestNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get analytics reporting schedule history latest not found response has a 3xx status code
func (o *GetAnalyticsReportingScheduleHistoryLatestNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get analytics reporting schedule history latest not found response has a 4xx status code
func (o *GetAnalyticsReportingScheduleHistoryLatestNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get analytics reporting schedule history latest not found response has a 5xx status code
func (o *GetAnalyticsReportingScheduleHistoryLatestNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get analytics reporting schedule history latest not found response a status code equal to that given
func (o *GetAnalyticsReportingScheduleHistoryLatestNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetAnalyticsReportingScheduleHistoryLatestNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/schedules/{scheduleId}/history/latest][%d] getAnalyticsReportingScheduleHistoryLatestNotFound  %+v", 404, o.Payload)
}

func (o *GetAnalyticsReportingScheduleHistoryLatestNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/schedules/{scheduleId}/history/latest][%d] getAnalyticsReportingScheduleHistoryLatestNotFound  %+v", 404, o.Payload)
}

func (o *GetAnalyticsReportingScheduleHistoryLatestNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsReportingScheduleHistoryLatestNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsReportingScheduleHistoryLatestRequestTimeout creates a GetAnalyticsReportingScheduleHistoryLatestRequestTimeout with default headers values
func NewGetAnalyticsReportingScheduleHistoryLatestRequestTimeout() *GetAnalyticsReportingScheduleHistoryLatestRequestTimeout {
	return &GetAnalyticsReportingScheduleHistoryLatestRequestTimeout{}
}

/*
GetAnalyticsReportingScheduleHistoryLatestRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetAnalyticsReportingScheduleHistoryLatestRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get analytics reporting schedule history latest request timeout response has a 2xx status code
func (o *GetAnalyticsReportingScheduleHistoryLatestRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get analytics reporting schedule history latest request timeout response has a 3xx status code
func (o *GetAnalyticsReportingScheduleHistoryLatestRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get analytics reporting schedule history latest request timeout response has a 4xx status code
func (o *GetAnalyticsReportingScheduleHistoryLatestRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get analytics reporting schedule history latest request timeout response has a 5xx status code
func (o *GetAnalyticsReportingScheduleHistoryLatestRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get analytics reporting schedule history latest request timeout response a status code equal to that given
func (o *GetAnalyticsReportingScheduleHistoryLatestRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetAnalyticsReportingScheduleHistoryLatestRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/schedules/{scheduleId}/history/latest][%d] getAnalyticsReportingScheduleHistoryLatestRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetAnalyticsReportingScheduleHistoryLatestRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/schedules/{scheduleId}/history/latest][%d] getAnalyticsReportingScheduleHistoryLatestRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetAnalyticsReportingScheduleHistoryLatestRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsReportingScheduleHistoryLatestRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsReportingScheduleHistoryLatestRequestEntityTooLarge creates a GetAnalyticsReportingScheduleHistoryLatestRequestEntityTooLarge with default headers values
func NewGetAnalyticsReportingScheduleHistoryLatestRequestEntityTooLarge() *GetAnalyticsReportingScheduleHistoryLatestRequestEntityTooLarge {
	return &GetAnalyticsReportingScheduleHistoryLatestRequestEntityTooLarge{}
}

/*
GetAnalyticsReportingScheduleHistoryLatestRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetAnalyticsReportingScheduleHistoryLatestRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get analytics reporting schedule history latest request entity too large response has a 2xx status code
func (o *GetAnalyticsReportingScheduleHistoryLatestRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get analytics reporting schedule history latest request entity too large response has a 3xx status code
func (o *GetAnalyticsReportingScheduleHistoryLatestRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get analytics reporting schedule history latest request entity too large response has a 4xx status code
func (o *GetAnalyticsReportingScheduleHistoryLatestRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get analytics reporting schedule history latest request entity too large response has a 5xx status code
func (o *GetAnalyticsReportingScheduleHistoryLatestRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get analytics reporting schedule history latest request entity too large response a status code equal to that given
func (o *GetAnalyticsReportingScheduleHistoryLatestRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetAnalyticsReportingScheduleHistoryLatestRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/schedules/{scheduleId}/history/latest][%d] getAnalyticsReportingScheduleHistoryLatestRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetAnalyticsReportingScheduleHistoryLatestRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/schedules/{scheduleId}/history/latest][%d] getAnalyticsReportingScheduleHistoryLatestRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetAnalyticsReportingScheduleHistoryLatestRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsReportingScheduleHistoryLatestRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsReportingScheduleHistoryLatestUnsupportedMediaType creates a GetAnalyticsReportingScheduleHistoryLatestUnsupportedMediaType with default headers values
func NewGetAnalyticsReportingScheduleHistoryLatestUnsupportedMediaType() *GetAnalyticsReportingScheduleHistoryLatestUnsupportedMediaType {
	return &GetAnalyticsReportingScheduleHistoryLatestUnsupportedMediaType{}
}

/*
GetAnalyticsReportingScheduleHistoryLatestUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetAnalyticsReportingScheduleHistoryLatestUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get analytics reporting schedule history latest unsupported media type response has a 2xx status code
func (o *GetAnalyticsReportingScheduleHistoryLatestUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get analytics reporting schedule history latest unsupported media type response has a 3xx status code
func (o *GetAnalyticsReportingScheduleHistoryLatestUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get analytics reporting schedule history latest unsupported media type response has a 4xx status code
func (o *GetAnalyticsReportingScheduleHistoryLatestUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get analytics reporting schedule history latest unsupported media type response has a 5xx status code
func (o *GetAnalyticsReportingScheduleHistoryLatestUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get analytics reporting schedule history latest unsupported media type response a status code equal to that given
func (o *GetAnalyticsReportingScheduleHistoryLatestUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetAnalyticsReportingScheduleHistoryLatestUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/schedules/{scheduleId}/history/latest][%d] getAnalyticsReportingScheduleHistoryLatestUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetAnalyticsReportingScheduleHistoryLatestUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/schedules/{scheduleId}/history/latest][%d] getAnalyticsReportingScheduleHistoryLatestUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetAnalyticsReportingScheduleHistoryLatestUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsReportingScheduleHistoryLatestUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsReportingScheduleHistoryLatestTooManyRequests creates a GetAnalyticsReportingScheduleHistoryLatestTooManyRequests with default headers values
func NewGetAnalyticsReportingScheduleHistoryLatestTooManyRequests() *GetAnalyticsReportingScheduleHistoryLatestTooManyRequests {
	return &GetAnalyticsReportingScheduleHistoryLatestTooManyRequests{}
}

/*
GetAnalyticsReportingScheduleHistoryLatestTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetAnalyticsReportingScheduleHistoryLatestTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get analytics reporting schedule history latest too many requests response has a 2xx status code
func (o *GetAnalyticsReportingScheduleHistoryLatestTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get analytics reporting schedule history latest too many requests response has a 3xx status code
func (o *GetAnalyticsReportingScheduleHistoryLatestTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get analytics reporting schedule history latest too many requests response has a 4xx status code
func (o *GetAnalyticsReportingScheduleHistoryLatestTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get analytics reporting schedule history latest too many requests response has a 5xx status code
func (o *GetAnalyticsReportingScheduleHistoryLatestTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get analytics reporting schedule history latest too many requests response a status code equal to that given
func (o *GetAnalyticsReportingScheduleHistoryLatestTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetAnalyticsReportingScheduleHistoryLatestTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/schedules/{scheduleId}/history/latest][%d] getAnalyticsReportingScheduleHistoryLatestTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetAnalyticsReportingScheduleHistoryLatestTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/schedules/{scheduleId}/history/latest][%d] getAnalyticsReportingScheduleHistoryLatestTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetAnalyticsReportingScheduleHistoryLatestTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsReportingScheduleHistoryLatestTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsReportingScheduleHistoryLatestInternalServerError creates a GetAnalyticsReportingScheduleHistoryLatestInternalServerError with default headers values
func NewGetAnalyticsReportingScheduleHistoryLatestInternalServerError() *GetAnalyticsReportingScheduleHistoryLatestInternalServerError {
	return &GetAnalyticsReportingScheduleHistoryLatestInternalServerError{}
}

/*
GetAnalyticsReportingScheduleHistoryLatestInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetAnalyticsReportingScheduleHistoryLatestInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get analytics reporting schedule history latest internal server error response has a 2xx status code
func (o *GetAnalyticsReportingScheduleHistoryLatestInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get analytics reporting schedule history latest internal server error response has a 3xx status code
func (o *GetAnalyticsReportingScheduleHistoryLatestInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get analytics reporting schedule history latest internal server error response has a 4xx status code
func (o *GetAnalyticsReportingScheduleHistoryLatestInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get analytics reporting schedule history latest internal server error response has a 5xx status code
func (o *GetAnalyticsReportingScheduleHistoryLatestInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get analytics reporting schedule history latest internal server error response a status code equal to that given
func (o *GetAnalyticsReportingScheduleHistoryLatestInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetAnalyticsReportingScheduleHistoryLatestInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/schedules/{scheduleId}/history/latest][%d] getAnalyticsReportingScheduleHistoryLatestInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAnalyticsReportingScheduleHistoryLatestInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/schedules/{scheduleId}/history/latest][%d] getAnalyticsReportingScheduleHistoryLatestInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAnalyticsReportingScheduleHistoryLatestInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsReportingScheduleHistoryLatestInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsReportingScheduleHistoryLatestServiceUnavailable creates a GetAnalyticsReportingScheduleHistoryLatestServiceUnavailable with default headers values
func NewGetAnalyticsReportingScheduleHistoryLatestServiceUnavailable() *GetAnalyticsReportingScheduleHistoryLatestServiceUnavailable {
	return &GetAnalyticsReportingScheduleHistoryLatestServiceUnavailable{}
}

/*
GetAnalyticsReportingScheduleHistoryLatestServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetAnalyticsReportingScheduleHistoryLatestServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get analytics reporting schedule history latest service unavailable response has a 2xx status code
func (o *GetAnalyticsReportingScheduleHistoryLatestServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get analytics reporting schedule history latest service unavailable response has a 3xx status code
func (o *GetAnalyticsReportingScheduleHistoryLatestServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get analytics reporting schedule history latest service unavailable response has a 4xx status code
func (o *GetAnalyticsReportingScheduleHistoryLatestServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get analytics reporting schedule history latest service unavailable response has a 5xx status code
func (o *GetAnalyticsReportingScheduleHistoryLatestServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get analytics reporting schedule history latest service unavailable response a status code equal to that given
func (o *GetAnalyticsReportingScheduleHistoryLatestServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetAnalyticsReportingScheduleHistoryLatestServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/schedules/{scheduleId}/history/latest][%d] getAnalyticsReportingScheduleHistoryLatestServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetAnalyticsReportingScheduleHistoryLatestServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/schedules/{scheduleId}/history/latest][%d] getAnalyticsReportingScheduleHistoryLatestServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetAnalyticsReportingScheduleHistoryLatestServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsReportingScheduleHistoryLatestServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnalyticsReportingScheduleHistoryLatestGatewayTimeout creates a GetAnalyticsReportingScheduleHistoryLatestGatewayTimeout with default headers values
func NewGetAnalyticsReportingScheduleHistoryLatestGatewayTimeout() *GetAnalyticsReportingScheduleHistoryLatestGatewayTimeout {
	return &GetAnalyticsReportingScheduleHistoryLatestGatewayTimeout{}
}

/*
GetAnalyticsReportingScheduleHistoryLatestGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetAnalyticsReportingScheduleHistoryLatestGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get analytics reporting schedule history latest gateway timeout response has a 2xx status code
func (o *GetAnalyticsReportingScheduleHistoryLatestGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get analytics reporting schedule history latest gateway timeout response has a 3xx status code
func (o *GetAnalyticsReportingScheduleHistoryLatestGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get analytics reporting schedule history latest gateway timeout response has a 4xx status code
func (o *GetAnalyticsReportingScheduleHistoryLatestGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get analytics reporting schedule history latest gateway timeout response has a 5xx status code
func (o *GetAnalyticsReportingScheduleHistoryLatestGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get analytics reporting schedule history latest gateway timeout response a status code equal to that given
func (o *GetAnalyticsReportingScheduleHistoryLatestGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetAnalyticsReportingScheduleHistoryLatestGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/schedules/{scheduleId}/history/latest][%d] getAnalyticsReportingScheduleHistoryLatestGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetAnalyticsReportingScheduleHistoryLatestGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/analytics/reporting/schedules/{scheduleId}/history/latest][%d] getAnalyticsReportingScheduleHistoryLatestGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetAnalyticsReportingScheduleHistoryLatestGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAnalyticsReportingScheduleHistoryLatestGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
