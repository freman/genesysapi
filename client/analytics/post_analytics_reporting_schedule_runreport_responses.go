// Code generated by go-swagger; DO NOT EDIT.

package analytics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostAnalyticsReportingScheduleRunreportReader is a Reader for the PostAnalyticsReportingScheduleRunreport structure.
type PostAnalyticsReportingScheduleRunreportReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostAnalyticsReportingScheduleRunreportReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewPostAnalyticsReportingScheduleRunreportAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostAnalyticsReportingScheduleRunreportBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostAnalyticsReportingScheduleRunreportUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostAnalyticsReportingScheduleRunreportForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostAnalyticsReportingScheduleRunreportNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostAnalyticsReportingScheduleRunreportRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostAnalyticsReportingScheduleRunreportRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostAnalyticsReportingScheduleRunreportUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostAnalyticsReportingScheduleRunreportTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostAnalyticsReportingScheduleRunreportInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostAnalyticsReportingScheduleRunreportServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostAnalyticsReportingScheduleRunreportGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostAnalyticsReportingScheduleRunreportAccepted creates a PostAnalyticsReportingScheduleRunreportAccepted with default headers values
func NewPostAnalyticsReportingScheduleRunreportAccepted() *PostAnalyticsReportingScheduleRunreportAccepted {
	return &PostAnalyticsReportingScheduleRunreportAccepted{}
}

/*
PostAnalyticsReportingScheduleRunreportAccepted describes a response with status code 202, with default header values.

Accepted - Processing Report
*/
type PostAnalyticsReportingScheduleRunreportAccepted struct {
	Payload *models.RunNowResponse
}

// IsSuccess returns true when this post analytics reporting schedule runreport accepted response has a 2xx status code
func (o *PostAnalyticsReportingScheduleRunreportAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post analytics reporting schedule runreport accepted response has a 3xx status code
func (o *PostAnalyticsReportingScheduleRunreportAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post analytics reporting schedule runreport accepted response has a 4xx status code
func (o *PostAnalyticsReportingScheduleRunreportAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this post analytics reporting schedule runreport accepted response has a 5xx status code
func (o *PostAnalyticsReportingScheduleRunreportAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this post analytics reporting schedule runreport accepted response a status code equal to that given
func (o *PostAnalyticsReportingScheduleRunreportAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *PostAnalyticsReportingScheduleRunreportAccepted) Error() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/schedules/{scheduleId}/runreport][%d] postAnalyticsReportingScheduleRunreportAccepted  %+v", 202, o.Payload)
}

func (o *PostAnalyticsReportingScheduleRunreportAccepted) String() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/schedules/{scheduleId}/runreport][%d] postAnalyticsReportingScheduleRunreportAccepted  %+v", 202, o.Payload)
}

func (o *PostAnalyticsReportingScheduleRunreportAccepted) GetPayload() *models.RunNowResponse {
	return o.Payload
}

func (o *PostAnalyticsReportingScheduleRunreportAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RunNowResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAnalyticsReportingScheduleRunreportBadRequest creates a PostAnalyticsReportingScheduleRunreportBadRequest with default headers values
func NewPostAnalyticsReportingScheduleRunreportBadRequest() *PostAnalyticsReportingScheduleRunreportBadRequest {
	return &PostAnalyticsReportingScheduleRunreportBadRequest{}
}

/*
PostAnalyticsReportingScheduleRunreportBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostAnalyticsReportingScheduleRunreportBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post analytics reporting schedule runreport bad request response has a 2xx status code
func (o *PostAnalyticsReportingScheduleRunreportBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post analytics reporting schedule runreport bad request response has a 3xx status code
func (o *PostAnalyticsReportingScheduleRunreportBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post analytics reporting schedule runreport bad request response has a 4xx status code
func (o *PostAnalyticsReportingScheduleRunreportBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post analytics reporting schedule runreport bad request response has a 5xx status code
func (o *PostAnalyticsReportingScheduleRunreportBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post analytics reporting schedule runreport bad request response a status code equal to that given
func (o *PostAnalyticsReportingScheduleRunreportBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostAnalyticsReportingScheduleRunreportBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/schedules/{scheduleId}/runreport][%d] postAnalyticsReportingScheduleRunreportBadRequest  %+v", 400, o.Payload)
}

func (o *PostAnalyticsReportingScheduleRunreportBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/schedules/{scheduleId}/runreport][%d] postAnalyticsReportingScheduleRunreportBadRequest  %+v", 400, o.Payload)
}

func (o *PostAnalyticsReportingScheduleRunreportBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAnalyticsReportingScheduleRunreportBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAnalyticsReportingScheduleRunreportUnauthorized creates a PostAnalyticsReportingScheduleRunreportUnauthorized with default headers values
func NewPostAnalyticsReportingScheduleRunreportUnauthorized() *PostAnalyticsReportingScheduleRunreportUnauthorized {
	return &PostAnalyticsReportingScheduleRunreportUnauthorized{}
}

/*
PostAnalyticsReportingScheduleRunreportUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostAnalyticsReportingScheduleRunreportUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post analytics reporting schedule runreport unauthorized response has a 2xx status code
func (o *PostAnalyticsReportingScheduleRunreportUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post analytics reporting schedule runreport unauthorized response has a 3xx status code
func (o *PostAnalyticsReportingScheduleRunreportUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post analytics reporting schedule runreport unauthorized response has a 4xx status code
func (o *PostAnalyticsReportingScheduleRunreportUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post analytics reporting schedule runreport unauthorized response has a 5xx status code
func (o *PostAnalyticsReportingScheduleRunreportUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post analytics reporting schedule runreport unauthorized response a status code equal to that given
func (o *PostAnalyticsReportingScheduleRunreportUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostAnalyticsReportingScheduleRunreportUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/schedules/{scheduleId}/runreport][%d] postAnalyticsReportingScheduleRunreportUnauthorized  %+v", 401, o.Payload)
}

func (o *PostAnalyticsReportingScheduleRunreportUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/schedules/{scheduleId}/runreport][%d] postAnalyticsReportingScheduleRunreportUnauthorized  %+v", 401, o.Payload)
}

func (o *PostAnalyticsReportingScheduleRunreportUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAnalyticsReportingScheduleRunreportUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAnalyticsReportingScheduleRunreportForbidden creates a PostAnalyticsReportingScheduleRunreportForbidden with default headers values
func NewPostAnalyticsReportingScheduleRunreportForbidden() *PostAnalyticsReportingScheduleRunreportForbidden {
	return &PostAnalyticsReportingScheduleRunreportForbidden{}
}

/*
PostAnalyticsReportingScheduleRunreportForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostAnalyticsReportingScheduleRunreportForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post analytics reporting schedule runreport forbidden response has a 2xx status code
func (o *PostAnalyticsReportingScheduleRunreportForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post analytics reporting schedule runreport forbidden response has a 3xx status code
func (o *PostAnalyticsReportingScheduleRunreportForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post analytics reporting schedule runreport forbidden response has a 4xx status code
func (o *PostAnalyticsReportingScheduleRunreportForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post analytics reporting schedule runreport forbidden response has a 5xx status code
func (o *PostAnalyticsReportingScheduleRunreportForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post analytics reporting schedule runreport forbidden response a status code equal to that given
func (o *PostAnalyticsReportingScheduleRunreportForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostAnalyticsReportingScheduleRunreportForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/schedules/{scheduleId}/runreport][%d] postAnalyticsReportingScheduleRunreportForbidden  %+v", 403, o.Payload)
}

func (o *PostAnalyticsReportingScheduleRunreportForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/schedules/{scheduleId}/runreport][%d] postAnalyticsReportingScheduleRunreportForbidden  %+v", 403, o.Payload)
}

func (o *PostAnalyticsReportingScheduleRunreportForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAnalyticsReportingScheduleRunreportForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAnalyticsReportingScheduleRunreportNotFound creates a PostAnalyticsReportingScheduleRunreportNotFound with default headers values
func NewPostAnalyticsReportingScheduleRunreportNotFound() *PostAnalyticsReportingScheduleRunreportNotFound {
	return &PostAnalyticsReportingScheduleRunreportNotFound{}
}

/*
PostAnalyticsReportingScheduleRunreportNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostAnalyticsReportingScheduleRunreportNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post analytics reporting schedule runreport not found response has a 2xx status code
func (o *PostAnalyticsReportingScheduleRunreportNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post analytics reporting schedule runreport not found response has a 3xx status code
func (o *PostAnalyticsReportingScheduleRunreportNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post analytics reporting schedule runreport not found response has a 4xx status code
func (o *PostAnalyticsReportingScheduleRunreportNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post analytics reporting schedule runreport not found response has a 5xx status code
func (o *PostAnalyticsReportingScheduleRunreportNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post analytics reporting schedule runreport not found response a status code equal to that given
func (o *PostAnalyticsReportingScheduleRunreportNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostAnalyticsReportingScheduleRunreportNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/schedules/{scheduleId}/runreport][%d] postAnalyticsReportingScheduleRunreportNotFound  %+v", 404, o.Payload)
}

func (o *PostAnalyticsReportingScheduleRunreportNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/schedules/{scheduleId}/runreport][%d] postAnalyticsReportingScheduleRunreportNotFound  %+v", 404, o.Payload)
}

func (o *PostAnalyticsReportingScheduleRunreportNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAnalyticsReportingScheduleRunreportNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAnalyticsReportingScheduleRunreportRequestTimeout creates a PostAnalyticsReportingScheduleRunreportRequestTimeout with default headers values
func NewPostAnalyticsReportingScheduleRunreportRequestTimeout() *PostAnalyticsReportingScheduleRunreportRequestTimeout {
	return &PostAnalyticsReportingScheduleRunreportRequestTimeout{}
}

/*
PostAnalyticsReportingScheduleRunreportRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostAnalyticsReportingScheduleRunreportRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post analytics reporting schedule runreport request timeout response has a 2xx status code
func (o *PostAnalyticsReportingScheduleRunreportRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post analytics reporting schedule runreport request timeout response has a 3xx status code
func (o *PostAnalyticsReportingScheduleRunreportRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post analytics reporting schedule runreport request timeout response has a 4xx status code
func (o *PostAnalyticsReportingScheduleRunreportRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post analytics reporting schedule runreport request timeout response has a 5xx status code
func (o *PostAnalyticsReportingScheduleRunreportRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post analytics reporting schedule runreport request timeout response a status code equal to that given
func (o *PostAnalyticsReportingScheduleRunreportRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostAnalyticsReportingScheduleRunreportRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/schedules/{scheduleId}/runreport][%d] postAnalyticsReportingScheduleRunreportRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostAnalyticsReportingScheduleRunreportRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/schedules/{scheduleId}/runreport][%d] postAnalyticsReportingScheduleRunreportRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostAnalyticsReportingScheduleRunreportRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAnalyticsReportingScheduleRunreportRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAnalyticsReportingScheduleRunreportRequestEntityTooLarge creates a PostAnalyticsReportingScheduleRunreportRequestEntityTooLarge with default headers values
func NewPostAnalyticsReportingScheduleRunreportRequestEntityTooLarge() *PostAnalyticsReportingScheduleRunreportRequestEntityTooLarge {
	return &PostAnalyticsReportingScheduleRunreportRequestEntityTooLarge{}
}

/*
PostAnalyticsReportingScheduleRunreportRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PostAnalyticsReportingScheduleRunreportRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post analytics reporting schedule runreport request entity too large response has a 2xx status code
func (o *PostAnalyticsReportingScheduleRunreportRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post analytics reporting schedule runreport request entity too large response has a 3xx status code
func (o *PostAnalyticsReportingScheduleRunreportRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post analytics reporting schedule runreport request entity too large response has a 4xx status code
func (o *PostAnalyticsReportingScheduleRunreportRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post analytics reporting schedule runreport request entity too large response has a 5xx status code
func (o *PostAnalyticsReportingScheduleRunreportRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post analytics reporting schedule runreport request entity too large response a status code equal to that given
func (o *PostAnalyticsReportingScheduleRunreportRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostAnalyticsReportingScheduleRunreportRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/schedules/{scheduleId}/runreport][%d] postAnalyticsReportingScheduleRunreportRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostAnalyticsReportingScheduleRunreportRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/schedules/{scheduleId}/runreport][%d] postAnalyticsReportingScheduleRunreportRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostAnalyticsReportingScheduleRunreportRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAnalyticsReportingScheduleRunreportRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAnalyticsReportingScheduleRunreportUnsupportedMediaType creates a PostAnalyticsReportingScheduleRunreportUnsupportedMediaType with default headers values
func NewPostAnalyticsReportingScheduleRunreportUnsupportedMediaType() *PostAnalyticsReportingScheduleRunreportUnsupportedMediaType {
	return &PostAnalyticsReportingScheduleRunreportUnsupportedMediaType{}
}

/*
PostAnalyticsReportingScheduleRunreportUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostAnalyticsReportingScheduleRunreportUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post analytics reporting schedule runreport unsupported media type response has a 2xx status code
func (o *PostAnalyticsReportingScheduleRunreportUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post analytics reporting schedule runreport unsupported media type response has a 3xx status code
func (o *PostAnalyticsReportingScheduleRunreportUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post analytics reporting schedule runreport unsupported media type response has a 4xx status code
func (o *PostAnalyticsReportingScheduleRunreportUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post analytics reporting schedule runreport unsupported media type response has a 5xx status code
func (o *PostAnalyticsReportingScheduleRunreportUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post analytics reporting schedule runreport unsupported media type response a status code equal to that given
func (o *PostAnalyticsReportingScheduleRunreportUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostAnalyticsReportingScheduleRunreportUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/schedules/{scheduleId}/runreport][%d] postAnalyticsReportingScheduleRunreportUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostAnalyticsReportingScheduleRunreportUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/schedules/{scheduleId}/runreport][%d] postAnalyticsReportingScheduleRunreportUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostAnalyticsReportingScheduleRunreportUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAnalyticsReportingScheduleRunreportUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAnalyticsReportingScheduleRunreportTooManyRequests creates a PostAnalyticsReportingScheduleRunreportTooManyRequests with default headers values
func NewPostAnalyticsReportingScheduleRunreportTooManyRequests() *PostAnalyticsReportingScheduleRunreportTooManyRequests {
	return &PostAnalyticsReportingScheduleRunreportTooManyRequests{}
}

/*
PostAnalyticsReportingScheduleRunreportTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostAnalyticsReportingScheduleRunreportTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post analytics reporting schedule runreport too many requests response has a 2xx status code
func (o *PostAnalyticsReportingScheduleRunreportTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post analytics reporting schedule runreport too many requests response has a 3xx status code
func (o *PostAnalyticsReportingScheduleRunreportTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post analytics reporting schedule runreport too many requests response has a 4xx status code
func (o *PostAnalyticsReportingScheduleRunreportTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post analytics reporting schedule runreport too many requests response has a 5xx status code
func (o *PostAnalyticsReportingScheduleRunreportTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post analytics reporting schedule runreport too many requests response a status code equal to that given
func (o *PostAnalyticsReportingScheduleRunreportTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostAnalyticsReportingScheduleRunreportTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/schedules/{scheduleId}/runreport][%d] postAnalyticsReportingScheduleRunreportTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostAnalyticsReportingScheduleRunreportTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/schedules/{scheduleId}/runreport][%d] postAnalyticsReportingScheduleRunreportTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostAnalyticsReportingScheduleRunreportTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAnalyticsReportingScheduleRunreportTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAnalyticsReportingScheduleRunreportInternalServerError creates a PostAnalyticsReportingScheduleRunreportInternalServerError with default headers values
func NewPostAnalyticsReportingScheduleRunreportInternalServerError() *PostAnalyticsReportingScheduleRunreportInternalServerError {
	return &PostAnalyticsReportingScheduleRunreportInternalServerError{}
}

/*
PostAnalyticsReportingScheduleRunreportInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostAnalyticsReportingScheduleRunreportInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post analytics reporting schedule runreport internal server error response has a 2xx status code
func (o *PostAnalyticsReportingScheduleRunreportInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post analytics reporting schedule runreport internal server error response has a 3xx status code
func (o *PostAnalyticsReportingScheduleRunreportInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post analytics reporting schedule runreport internal server error response has a 4xx status code
func (o *PostAnalyticsReportingScheduleRunreportInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post analytics reporting schedule runreport internal server error response has a 5xx status code
func (o *PostAnalyticsReportingScheduleRunreportInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post analytics reporting schedule runreport internal server error response a status code equal to that given
func (o *PostAnalyticsReportingScheduleRunreportInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostAnalyticsReportingScheduleRunreportInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/schedules/{scheduleId}/runreport][%d] postAnalyticsReportingScheduleRunreportInternalServerError  %+v", 500, o.Payload)
}

func (o *PostAnalyticsReportingScheduleRunreportInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/schedules/{scheduleId}/runreport][%d] postAnalyticsReportingScheduleRunreportInternalServerError  %+v", 500, o.Payload)
}

func (o *PostAnalyticsReportingScheduleRunreportInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAnalyticsReportingScheduleRunreportInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAnalyticsReportingScheduleRunreportServiceUnavailable creates a PostAnalyticsReportingScheduleRunreportServiceUnavailable with default headers values
func NewPostAnalyticsReportingScheduleRunreportServiceUnavailable() *PostAnalyticsReportingScheduleRunreportServiceUnavailable {
	return &PostAnalyticsReportingScheduleRunreportServiceUnavailable{}
}

/*
PostAnalyticsReportingScheduleRunreportServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostAnalyticsReportingScheduleRunreportServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post analytics reporting schedule runreport service unavailable response has a 2xx status code
func (o *PostAnalyticsReportingScheduleRunreportServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post analytics reporting schedule runreport service unavailable response has a 3xx status code
func (o *PostAnalyticsReportingScheduleRunreportServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post analytics reporting schedule runreport service unavailable response has a 4xx status code
func (o *PostAnalyticsReportingScheduleRunreportServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post analytics reporting schedule runreport service unavailable response has a 5xx status code
func (o *PostAnalyticsReportingScheduleRunreportServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post analytics reporting schedule runreport service unavailable response a status code equal to that given
func (o *PostAnalyticsReportingScheduleRunreportServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostAnalyticsReportingScheduleRunreportServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/schedules/{scheduleId}/runreport][%d] postAnalyticsReportingScheduleRunreportServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostAnalyticsReportingScheduleRunreportServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/schedules/{scheduleId}/runreport][%d] postAnalyticsReportingScheduleRunreportServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostAnalyticsReportingScheduleRunreportServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAnalyticsReportingScheduleRunreportServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAnalyticsReportingScheduleRunreportGatewayTimeout creates a PostAnalyticsReportingScheduleRunreportGatewayTimeout with default headers values
func NewPostAnalyticsReportingScheduleRunreportGatewayTimeout() *PostAnalyticsReportingScheduleRunreportGatewayTimeout {
	return &PostAnalyticsReportingScheduleRunreportGatewayTimeout{}
}

/*
PostAnalyticsReportingScheduleRunreportGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostAnalyticsReportingScheduleRunreportGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post analytics reporting schedule runreport gateway timeout response has a 2xx status code
func (o *PostAnalyticsReportingScheduleRunreportGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post analytics reporting schedule runreport gateway timeout response has a 3xx status code
func (o *PostAnalyticsReportingScheduleRunreportGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post analytics reporting schedule runreport gateway timeout response has a 4xx status code
func (o *PostAnalyticsReportingScheduleRunreportGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post analytics reporting schedule runreport gateway timeout response has a 5xx status code
func (o *PostAnalyticsReportingScheduleRunreportGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post analytics reporting schedule runreport gateway timeout response a status code equal to that given
func (o *PostAnalyticsReportingScheduleRunreportGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostAnalyticsReportingScheduleRunreportGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/schedules/{scheduleId}/runreport][%d] postAnalyticsReportingScheduleRunreportGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostAnalyticsReportingScheduleRunreportGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/analytics/reporting/schedules/{scheduleId}/runreport][%d] postAnalyticsReportingScheduleRunreportGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostAnalyticsReportingScheduleRunreportGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAnalyticsReportingScheduleRunreportGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
