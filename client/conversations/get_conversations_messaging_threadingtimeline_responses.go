// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetConversationsMessagingThreadingtimelineReader is a Reader for the GetConversationsMessagingThreadingtimeline structure.
type GetConversationsMessagingThreadingtimelineReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConversationsMessagingThreadingtimelineReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConversationsMessagingThreadingtimelineOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetConversationsMessagingThreadingtimelineBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetConversationsMessagingThreadingtimelineUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetConversationsMessagingThreadingtimelineForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetConversationsMessagingThreadingtimelineNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetConversationsMessagingThreadingtimelineRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetConversationsMessagingThreadingtimelineRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetConversationsMessagingThreadingtimelineUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetConversationsMessagingThreadingtimelineTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetConversationsMessagingThreadingtimelineInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetConversationsMessagingThreadingtimelineServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetConversationsMessagingThreadingtimelineGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetConversationsMessagingThreadingtimelineOK creates a GetConversationsMessagingThreadingtimelineOK with default headers values
func NewGetConversationsMessagingThreadingtimelineOK() *GetConversationsMessagingThreadingtimelineOK {
	return &GetConversationsMessagingThreadingtimelineOK{}
}

/*GetConversationsMessagingThreadingtimelineOK handles this case with default header values.

successful operation
*/
type GetConversationsMessagingThreadingtimelineOK struct {
	Payload *models.ConversationThreadingWindow
}

func (o *GetConversationsMessagingThreadingtimelineOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/threadingtimeline][%d] getConversationsMessagingThreadingtimelineOK  %+v", 200, o.Payload)
}

func (o *GetConversationsMessagingThreadingtimelineOK) GetPayload() *models.ConversationThreadingWindow {
	return o.Payload
}

func (o *GetConversationsMessagingThreadingtimelineOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConversationThreadingWindow)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessagingThreadingtimelineBadRequest creates a GetConversationsMessagingThreadingtimelineBadRequest with default headers values
func NewGetConversationsMessagingThreadingtimelineBadRequest() *GetConversationsMessagingThreadingtimelineBadRequest {
	return &GetConversationsMessagingThreadingtimelineBadRequest{}
}

/*GetConversationsMessagingThreadingtimelineBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetConversationsMessagingThreadingtimelineBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsMessagingThreadingtimelineBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/threadingtimeline][%d] getConversationsMessagingThreadingtimelineBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsMessagingThreadingtimelineBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessagingThreadingtimelineBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessagingThreadingtimelineUnauthorized creates a GetConversationsMessagingThreadingtimelineUnauthorized with default headers values
func NewGetConversationsMessagingThreadingtimelineUnauthorized() *GetConversationsMessagingThreadingtimelineUnauthorized {
	return &GetConversationsMessagingThreadingtimelineUnauthorized{}
}

/*GetConversationsMessagingThreadingtimelineUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetConversationsMessagingThreadingtimelineUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsMessagingThreadingtimelineUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/threadingtimeline][%d] getConversationsMessagingThreadingtimelineUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsMessagingThreadingtimelineUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessagingThreadingtimelineUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessagingThreadingtimelineForbidden creates a GetConversationsMessagingThreadingtimelineForbidden with default headers values
func NewGetConversationsMessagingThreadingtimelineForbidden() *GetConversationsMessagingThreadingtimelineForbidden {
	return &GetConversationsMessagingThreadingtimelineForbidden{}
}

/*GetConversationsMessagingThreadingtimelineForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetConversationsMessagingThreadingtimelineForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsMessagingThreadingtimelineForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/threadingtimeline][%d] getConversationsMessagingThreadingtimelineForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsMessagingThreadingtimelineForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessagingThreadingtimelineForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessagingThreadingtimelineNotFound creates a GetConversationsMessagingThreadingtimelineNotFound with default headers values
func NewGetConversationsMessagingThreadingtimelineNotFound() *GetConversationsMessagingThreadingtimelineNotFound {
	return &GetConversationsMessagingThreadingtimelineNotFound{}
}

/*GetConversationsMessagingThreadingtimelineNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetConversationsMessagingThreadingtimelineNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsMessagingThreadingtimelineNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/threadingtimeline][%d] getConversationsMessagingThreadingtimelineNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsMessagingThreadingtimelineNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessagingThreadingtimelineNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessagingThreadingtimelineRequestTimeout creates a GetConversationsMessagingThreadingtimelineRequestTimeout with default headers values
func NewGetConversationsMessagingThreadingtimelineRequestTimeout() *GetConversationsMessagingThreadingtimelineRequestTimeout {
	return &GetConversationsMessagingThreadingtimelineRequestTimeout{}
}

/*GetConversationsMessagingThreadingtimelineRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetConversationsMessagingThreadingtimelineRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsMessagingThreadingtimelineRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/threadingtimeline][%d] getConversationsMessagingThreadingtimelineRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationsMessagingThreadingtimelineRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessagingThreadingtimelineRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessagingThreadingtimelineRequestEntityTooLarge creates a GetConversationsMessagingThreadingtimelineRequestEntityTooLarge with default headers values
func NewGetConversationsMessagingThreadingtimelineRequestEntityTooLarge() *GetConversationsMessagingThreadingtimelineRequestEntityTooLarge {
	return &GetConversationsMessagingThreadingtimelineRequestEntityTooLarge{}
}

/*GetConversationsMessagingThreadingtimelineRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetConversationsMessagingThreadingtimelineRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsMessagingThreadingtimelineRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/threadingtimeline][%d] getConversationsMessagingThreadingtimelineRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsMessagingThreadingtimelineRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessagingThreadingtimelineRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessagingThreadingtimelineUnsupportedMediaType creates a GetConversationsMessagingThreadingtimelineUnsupportedMediaType with default headers values
func NewGetConversationsMessagingThreadingtimelineUnsupportedMediaType() *GetConversationsMessagingThreadingtimelineUnsupportedMediaType {
	return &GetConversationsMessagingThreadingtimelineUnsupportedMediaType{}
}

/*GetConversationsMessagingThreadingtimelineUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetConversationsMessagingThreadingtimelineUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsMessagingThreadingtimelineUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/threadingtimeline][%d] getConversationsMessagingThreadingtimelineUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsMessagingThreadingtimelineUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessagingThreadingtimelineUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessagingThreadingtimelineTooManyRequests creates a GetConversationsMessagingThreadingtimelineTooManyRequests with default headers values
func NewGetConversationsMessagingThreadingtimelineTooManyRequests() *GetConversationsMessagingThreadingtimelineTooManyRequests {
	return &GetConversationsMessagingThreadingtimelineTooManyRequests{}
}

/*GetConversationsMessagingThreadingtimelineTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetConversationsMessagingThreadingtimelineTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsMessagingThreadingtimelineTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/threadingtimeline][%d] getConversationsMessagingThreadingtimelineTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsMessagingThreadingtimelineTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessagingThreadingtimelineTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessagingThreadingtimelineInternalServerError creates a GetConversationsMessagingThreadingtimelineInternalServerError with default headers values
func NewGetConversationsMessagingThreadingtimelineInternalServerError() *GetConversationsMessagingThreadingtimelineInternalServerError {
	return &GetConversationsMessagingThreadingtimelineInternalServerError{}
}

/*GetConversationsMessagingThreadingtimelineInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetConversationsMessagingThreadingtimelineInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsMessagingThreadingtimelineInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/threadingtimeline][%d] getConversationsMessagingThreadingtimelineInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsMessagingThreadingtimelineInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessagingThreadingtimelineInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessagingThreadingtimelineServiceUnavailable creates a GetConversationsMessagingThreadingtimelineServiceUnavailable with default headers values
func NewGetConversationsMessagingThreadingtimelineServiceUnavailable() *GetConversationsMessagingThreadingtimelineServiceUnavailable {
	return &GetConversationsMessagingThreadingtimelineServiceUnavailable{}
}

/*GetConversationsMessagingThreadingtimelineServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetConversationsMessagingThreadingtimelineServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsMessagingThreadingtimelineServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/threadingtimeline][%d] getConversationsMessagingThreadingtimelineServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsMessagingThreadingtimelineServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessagingThreadingtimelineServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessagingThreadingtimelineGatewayTimeout creates a GetConversationsMessagingThreadingtimelineGatewayTimeout with default headers values
func NewGetConversationsMessagingThreadingtimelineGatewayTimeout() *GetConversationsMessagingThreadingtimelineGatewayTimeout {
	return &GetConversationsMessagingThreadingtimelineGatewayTimeout{}
}

/*GetConversationsMessagingThreadingtimelineGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetConversationsMessagingThreadingtimelineGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsMessagingThreadingtimelineGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/threadingtimeline][%d] getConversationsMessagingThreadingtimelineGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsMessagingThreadingtimelineGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessagingThreadingtimelineGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
