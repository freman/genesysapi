// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// DeleteConversationsMessagingIntegrationsTwitterIntegrationIDReader is a Reader for the DeleteConversationsMessagingIntegrationsTwitterIntegrationID structure.
type DeleteConversationsMessagingIntegrationsTwitterIntegrationIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteConversationsMessagingIntegrationsTwitterIntegrationIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteConversationsMessagingIntegrationsTwitterIntegrationIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteConversationsMessagingIntegrationsTwitterIntegrationIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteConversationsMessagingIntegrationsTwitterIntegrationIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteConversationsMessagingIntegrationsTwitterIntegrationIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewDeleteConversationsMessagingIntegrationsTwitterIntegrationIDRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewDeleteConversationsMessagingIntegrationsTwitterIntegrationIDRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDeleteConversationsMessagingIntegrationsTwitterIntegrationIDUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteConversationsMessagingIntegrationsTwitterIntegrationIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteConversationsMessagingIntegrationsTwitterIntegrationIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteConversationsMessagingIntegrationsTwitterIntegrationIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteConversationsMessagingIntegrationsTwitterIntegrationIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteConversationsMessagingIntegrationsTwitterIntegrationIDNoContent creates a DeleteConversationsMessagingIntegrationsTwitterIntegrationIDNoContent with default headers values
func NewDeleteConversationsMessagingIntegrationsTwitterIntegrationIDNoContent() *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDNoContent {
	return &DeleteConversationsMessagingIntegrationsTwitterIntegrationIDNoContent{}
}

/*
DeleteConversationsMessagingIntegrationsTwitterIntegrationIDNoContent describes a response with status code 204, with default header values.

Operation was successful
*/
type DeleteConversationsMessagingIntegrationsTwitterIntegrationIDNoContent struct {
}

// IsSuccess returns true when this delete conversations messaging integrations twitter integration Id no content response has a 2xx status code
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete conversations messaging integrations twitter integration Id no content response has a 3xx status code
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete conversations messaging integrations twitter integration Id no content response has a 4xx status code
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete conversations messaging integrations twitter integration Id no content response has a 5xx status code
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete conversations messaging integrations twitter integration Id no content response a status code equal to that given
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/conversations/messaging/integrations/twitter/{integrationId}][%d] deleteConversationsMessagingIntegrationsTwitterIntegrationIdNoContent ", 204)
}

func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDNoContent) String() string {
	return fmt.Sprintf("[DELETE /api/v2/conversations/messaging/integrations/twitter/{integrationId}][%d] deleteConversationsMessagingIntegrationsTwitterIntegrationIdNoContent ", 204)
}

func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteConversationsMessagingIntegrationsTwitterIntegrationIDBadRequest creates a DeleteConversationsMessagingIntegrationsTwitterIntegrationIDBadRequest with default headers values
func NewDeleteConversationsMessagingIntegrationsTwitterIntegrationIDBadRequest() *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDBadRequest {
	return &DeleteConversationsMessagingIntegrationsTwitterIntegrationIDBadRequest{}
}

/*
DeleteConversationsMessagingIntegrationsTwitterIntegrationIDBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type DeleteConversationsMessagingIntegrationsTwitterIntegrationIDBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete conversations messaging integrations twitter integration Id bad request response has a 2xx status code
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete conversations messaging integrations twitter integration Id bad request response has a 3xx status code
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete conversations messaging integrations twitter integration Id bad request response has a 4xx status code
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete conversations messaging integrations twitter integration Id bad request response has a 5xx status code
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete conversations messaging integrations twitter integration Id bad request response a status code equal to that given
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/conversations/messaging/integrations/twitter/{integrationId}][%d] deleteConversationsMessagingIntegrationsTwitterIntegrationIdBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v2/conversations/messaging/integrations/twitter/{integrationId}][%d] deleteConversationsMessagingIntegrationsTwitterIntegrationIdBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteConversationsMessagingIntegrationsTwitterIntegrationIDUnauthorized creates a DeleteConversationsMessagingIntegrationsTwitterIntegrationIDUnauthorized with default headers values
func NewDeleteConversationsMessagingIntegrationsTwitterIntegrationIDUnauthorized() *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDUnauthorized {
	return &DeleteConversationsMessagingIntegrationsTwitterIntegrationIDUnauthorized{}
}

/*
DeleteConversationsMessagingIntegrationsTwitterIntegrationIDUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type DeleteConversationsMessagingIntegrationsTwitterIntegrationIDUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete conversations messaging integrations twitter integration Id unauthorized response has a 2xx status code
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete conversations messaging integrations twitter integration Id unauthorized response has a 3xx status code
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete conversations messaging integrations twitter integration Id unauthorized response has a 4xx status code
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete conversations messaging integrations twitter integration Id unauthorized response has a 5xx status code
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete conversations messaging integrations twitter integration Id unauthorized response a status code equal to that given
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/conversations/messaging/integrations/twitter/{integrationId}][%d] deleteConversationsMessagingIntegrationsTwitterIntegrationIdUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/v2/conversations/messaging/integrations/twitter/{integrationId}][%d] deleteConversationsMessagingIntegrationsTwitterIntegrationIdUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteConversationsMessagingIntegrationsTwitterIntegrationIDForbidden creates a DeleteConversationsMessagingIntegrationsTwitterIntegrationIDForbidden with default headers values
func NewDeleteConversationsMessagingIntegrationsTwitterIntegrationIDForbidden() *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDForbidden {
	return &DeleteConversationsMessagingIntegrationsTwitterIntegrationIDForbidden{}
}

/*
DeleteConversationsMessagingIntegrationsTwitterIntegrationIDForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type DeleteConversationsMessagingIntegrationsTwitterIntegrationIDForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete conversations messaging integrations twitter integration Id forbidden response has a 2xx status code
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete conversations messaging integrations twitter integration Id forbidden response has a 3xx status code
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete conversations messaging integrations twitter integration Id forbidden response has a 4xx status code
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete conversations messaging integrations twitter integration Id forbidden response has a 5xx status code
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete conversations messaging integrations twitter integration Id forbidden response a status code equal to that given
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/conversations/messaging/integrations/twitter/{integrationId}][%d] deleteConversationsMessagingIntegrationsTwitterIntegrationIdForbidden  %+v", 403, o.Payload)
}

func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/v2/conversations/messaging/integrations/twitter/{integrationId}][%d] deleteConversationsMessagingIntegrationsTwitterIntegrationIdForbidden  %+v", 403, o.Payload)
}

func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteConversationsMessagingIntegrationsTwitterIntegrationIDNotFound creates a DeleteConversationsMessagingIntegrationsTwitterIntegrationIDNotFound with default headers values
func NewDeleteConversationsMessagingIntegrationsTwitterIntegrationIDNotFound() *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDNotFound {
	return &DeleteConversationsMessagingIntegrationsTwitterIntegrationIDNotFound{}
}

/*
DeleteConversationsMessagingIntegrationsTwitterIntegrationIDNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type DeleteConversationsMessagingIntegrationsTwitterIntegrationIDNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete conversations messaging integrations twitter integration Id not found response has a 2xx status code
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete conversations messaging integrations twitter integration Id not found response has a 3xx status code
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete conversations messaging integrations twitter integration Id not found response has a 4xx status code
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete conversations messaging integrations twitter integration Id not found response has a 5xx status code
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete conversations messaging integrations twitter integration Id not found response a status code equal to that given
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/conversations/messaging/integrations/twitter/{integrationId}][%d] deleteConversationsMessagingIntegrationsTwitterIntegrationIdNotFound  %+v", 404, o.Payload)
}

func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v2/conversations/messaging/integrations/twitter/{integrationId}][%d] deleteConversationsMessagingIntegrationsTwitterIntegrationIdNotFound  %+v", 404, o.Payload)
}

func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteConversationsMessagingIntegrationsTwitterIntegrationIDRequestTimeout creates a DeleteConversationsMessagingIntegrationsTwitterIntegrationIDRequestTimeout with default headers values
func NewDeleteConversationsMessagingIntegrationsTwitterIntegrationIDRequestTimeout() *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDRequestTimeout {
	return &DeleteConversationsMessagingIntegrationsTwitterIntegrationIDRequestTimeout{}
}

/*
DeleteConversationsMessagingIntegrationsTwitterIntegrationIDRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type DeleteConversationsMessagingIntegrationsTwitterIntegrationIDRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete conversations messaging integrations twitter integration Id request timeout response has a 2xx status code
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete conversations messaging integrations twitter integration Id request timeout response has a 3xx status code
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete conversations messaging integrations twitter integration Id request timeout response has a 4xx status code
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete conversations messaging integrations twitter integration Id request timeout response has a 5xx status code
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this delete conversations messaging integrations twitter integration Id request timeout response a status code equal to that given
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDRequestTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/conversations/messaging/integrations/twitter/{integrationId}][%d] deleteConversationsMessagingIntegrationsTwitterIntegrationIdRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDRequestTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/conversations/messaging/integrations/twitter/{integrationId}][%d] deleteConversationsMessagingIntegrationsTwitterIntegrationIdRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteConversationsMessagingIntegrationsTwitterIntegrationIDRequestEntityTooLarge creates a DeleteConversationsMessagingIntegrationsTwitterIntegrationIDRequestEntityTooLarge with default headers values
func NewDeleteConversationsMessagingIntegrationsTwitterIntegrationIDRequestEntityTooLarge() *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDRequestEntityTooLarge {
	return &DeleteConversationsMessagingIntegrationsTwitterIntegrationIDRequestEntityTooLarge{}
}

/*
DeleteConversationsMessagingIntegrationsTwitterIntegrationIDRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type DeleteConversationsMessagingIntegrationsTwitterIntegrationIDRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete conversations messaging integrations twitter integration Id request entity too large response has a 2xx status code
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete conversations messaging integrations twitter integration Id request entity too large response has a 3xx status code
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete conversations messaging integrations twitter integration Id request entity too large response has a 4xx status code
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete conversations messaging integrations twitter integration Id request entity too large response has a 5xx status code
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this delete conversations messaging integrations twitter integration Id request entity too large response a status code equal to that given
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/conversations/messaging/integrations/twitter/{integrationId}][%d] deleteConversationsMessagingIntegrationsTwitterIntegrationIdRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[DELETE /api/v2/conversations/messaging/integrations/twitter/{integrationId}][%d] deleteConversationsMessagingIntegrationsTwitterIntegrationIdRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteConversationsMessagingIntegrationsTwitterIntegrationIDUnsupportedMediaType creates a DeleteConversationsMessagingIntegrationsTwitterIntegrationIDUnsupportedMediaType with default headers values
func NewDeleteConversationsMessagingIntegrationsTwitterIntegrationIDUnsupportedMediaType() *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDUnsupportedMediaType {
	return &DeleteConversationsMessagingIntegrationsTwitterIntegrationIDUnsupportedMediaType{}
}

/*
DeleteConversationsMessagingIntegrationsTwitterIntegrationIDUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type DeleteConversationsMessagingIntegrationsTwitterIntegrationIDUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete conversations messaging integrations twitter integration Id unsupported media type response has a 2xx status code
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete conversations messaging integrations twitter integration Id unsupported media type response has a 3xx status code
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete conversations messaging integrations twitter integration Id unsupported media type response has a 4xx status code
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete conversations messaging integrations twitter integration Id unsupported media type response has a 5xx status code
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this delete conversations messaging integrations twitter integration Id unsupported media type response a status code equal to that given
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/conversations/messaging/integrations/twitter/{integrationId}][%d] deleteConversationsMessagingIntegrationsTwitterIntegrationIdUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDUnsupportedMediaType) String() string {
	return fmt.Sprintf("[DELETE /api/v2/conversations/messaging/integrations/twitter/{integrationId}][%d] deleteConversationsMessagingIntegrationsTwitterIntegrationIdUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteConversationsMessagingIntegrationsTwitterIntegrationIDTooManyRequests creates a DeleteConversationsMessagingIntegrationsTwitterIntegrationIDTooManyRequests with default headers values
func NewDeleteConversationsMessagingIntegrationsTwitterIntegrationIDTooManyRequests() *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDTooManyRequests {
	return &DeleteConversationsMessagingIntegrationsTwitterIntegrationIDTooManyRequests{}
}

/*
DeleteConversationsMessagingIntegrationsTwitterIntegrationIDTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type DeleteConversationsMessagingIntegrationsTwitterIntegrationIDTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete conversations messaging integrations twitter integration Id too many requests response has a 2xx status code
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete conversations messaging integrations twitter integration Id too many requests response has a 3xx status code
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete conversations messaging integrations twitter integration Id too many requests response has a 4xx status code
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete conversations messaging integrations twitter integration Id too many requests response has a 5xx status code
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete conversations messaging integrations twitter integration Id too many requests response a status code equal to that given
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/conversations/messaging/integrations/twitter/{integrationId}][%d] deleteConversationsMessagingIntegrationsTwitterIntegrationIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /api/v2/conversations/messaging/integrations/twitter/{integrationId}][%d] deleteConversationsMessagingIntegrationsTwitterIntegrationIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteConversationsMessagingIntegrationsTwitterIntegrationIDInternalServerError creates a DeleteConversationsMessagingIntegrationsTwitterIntegrationIDInternalServerError with default headers values
func NewDeleteConversationsMessagingIntegrationsTwitterIntegrationIDInternalServerError() *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDInternalServerError {
	return &DeleteConversationsMessagingIntegrationsTwitterIntegrationIDInternalServerError{}
}

/*
DeleteConversationsMessagingIntegrationsTwitterIntegrationIDInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type DeleteConversationsMessagingIntegrationsTwitterIntegrationIDInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete conversations messaging integrations twitter integration Id internal server error response has a 2xx status code
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete conversations messaging integrations twitter integration Id internal server error response has a 3xx status code
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete conversations messaging integrations twitter integration Id internal server error response has a 4xx status code
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete conversations messaging integrations twitter integration Id internal server error response has a 5xx status code
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete conversations messaging integrations twitter integration Id internal server error response a status code equal to that given
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/conversations/messaging/integrations/twitter/{integrationId}][%d] deleteConversationsMessagingIntegrationsTwitterIntegrationIdInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/v2/conversations/messaging/integrations/twitter/{integrationId}][%d] deleteConversationsMessagingIntegrationsTwitterIntegrationIdInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteConversationsMessagingIntegrationsTwitterIntegrationIDServiceUnavailable creates a DeleteConversationsMessagingIntegrationsTwitterIntegrationIDServiceUnavailable with default headers values
func NewDeleteConversationsMessagingIntegrationsTwitterIntegrationIDServiceUnavailable() *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDServiceUnavailable {
	return &DeleteConversationsMessagingIntegrationsTwitterIntegrationIDServiceUnavailable{}
}

/*
DeleteConversationsMessagingIntegrationsTwitterIntegrationIDServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type DeleteConversationsMessagingIntegrationsTwitterIntegrationIDServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete conversations messaging integrations twitter integration Id service unavailable response has a 2xx status code
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete conversations messaging integrations twitter integration Id service unavailable response has a 3xx status code
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete conversations messaging integrations twitter integration Id service unavailable response has a 4xx status code
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete conversations messaging integrations twitter integration Id service unavailable response has a 5xx status code
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this delete conversations messaging integrations twitter integration Id service unavailable response a status code equal to that given
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/conversations/messaging/integrations/twitter/{integrationId}][%d] deleteConversationsMessagingIntegrationsTwitterIntegrationIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDServiceUnavailable) String() string {
	return fmt.Sprintf("[DELETE /api/v2/conversations/messaging/integrations/twitter/{integrationId}][%d] deleteConversationsMessagingIntegrationsTwitterIntegrationIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteConversationsMessagingIntegrationsTwitterIntegrationIDGatewayTimeout creates a DeleteConversationsMessagingIntegrationsTwitterIntegrationIDGatewayTimeout with default headers values
func NewDeleteConversationsMessagingIntegrationsTwitterIntegrationIDGatewayTimeout() *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDGatewayTimeout {
	return &DeleteConversationsMessagingIntegrationsTwitterIntegrationIDGatewayTimeout{}
}

/*
DeleteConversationsMessagingIntegrationsTwitterIntegrationIDGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type DeleteConversationsMessagingIntegrationsTwitterIntegrationIDGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete conversations messaging integrations twitter integration Id gateway timeout response has a 2xx status code
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete conversations messaging integrations twitter integration Id gateway timeout response has a 3xx status code
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete conversations messaging integrations twitter integration Id gateway timeout response has a 4xx status code
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete conversations messaging integrations twitter integration Id gateway timeout response has a 5xx status code
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this delete conversations messaging integrations twitter integration Id gateway timeout response a status code equal to that given
func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/conversations/messaging/integrations/twitter/{integrationId}][%d] deleteConversationsMessagingIntegrationsTwitterIntegrationIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDGatewayTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/conversations/messaging/integrations/twitter/{integrationId}][%d] deleteConversationsMessagingIntegrationsTwitterIntegrationIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteConversationsMessagingIntegrationsTwitterIntegrationIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
