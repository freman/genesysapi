// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutConversationsMessagingIntegrationsLineIntegrationIDReader is a Reader for the PutConversationsMessagingIntegrationsLineIntegrationID structure.
type PutConversationsMessagingIntegrationsLineIntegrationIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutConversationsMessagingIntegrationsLineIntegrationIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutConversationsMessagingIntegrationsLineIntegrationIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutConversationsMessagingIntegrationsLineIntegrationIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutConversationsMessagingIntegrationsLineIntegrationIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutConversationsMessagingIntegrationsLineIntegrationIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutConversationsMessagingIntegrationsLineIntegrationIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutConversationsMessagingIntegrationsLineIntegrationIDRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutConversationsMessagingIntegrationsLineIntegrationIDRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutConversationsMessagingIntegrationsLineIntegrationIDUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutConversationsMessagingIntegrationsLineIntegrationIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutConversationsMessagingIntegrationsLineIntegrationIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutConversationsMessagingIntegrationsLineIntegrationIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutConversationsMessagingIntegrationsLineIntegrationIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutConversationsMessagingIntegrationsLineIntegrationIDOK creates a PutConversationsMessagingIntegrationsLineIntegrationIDOK with default headers values
func NewPutConversationsMessagingIntegrationsLineIntegrationIDOK() *PutConversationsMessagingIntegrationsLineIntegrationIDOK {
	return &PutConversationsMessagingIntegrationsLineIntegrationIDOK{}
}

/*PutConversationsMessagingIntegrationsLineIntegrationIDOK handles this case with default header values.

successful operation
*/
type PutConversationsMessagingIntegrationsLineIntegrationIDOK struct {
	Payload *models.LineIntegration
}

func (o *PutConversationsMessagingIntegrationsLineIntegrationIDOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/messaging/integrations/line/{integrationId}][%d] putConversationsMessagingIntegrationsLineIntegrationIdOK  %+v", 200, o.Payload)
}

func (o *PutConversationsMessagingIntegrationsLineIntegrationIDOK) GetPayload() *models.LineIntegration {
	return o.Payload
}

func (o *PutConversationsMessagingIntegrationsLineIntegrationIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LineIntegration)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsMessagingIntegrationsLineIntegrationIDBadRequest creates a PutConversationsMessagingIntegrationsLineIntegrationIDBadRequest with default headers values
func NewPutConversationsMessagingIntegrationsLineIntegrationIDBadRequest() *PutConversationsMessagingIntegrationsLineIntegrationIDBadRequest {
	return &PutConversationsMessagingIntegrationsLineIntegrationIDBadRequest{}
}

/*PutConversationsMessagingIntegrationsLineIntegrationIDBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutConversationsMessagingIntegrationsLineIntegrationIDBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PutConversationsMessagingIntegrationsLineIntegrationIDBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/messaging/integrations/line/{integrationId}][%d] putConversationsMessagingIntegrationsLineIntegrationIdBadRequest  %+v", 400, o.Payload)
}

func (o *PutConversationsMessagingIntegrationsLineIntegrationIDBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsMessagingIntegrationsLineIntegrationIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsMessagingIntegrationsLineIntegrationIDUnauthorized creates a PutConversationsMessagingIntegrationsLineIntegrationIDUnauthorized with default headers values
func NewPutConversationsMessagingIntegrationsLineIntegrationIDUnauthorized() *PutConversationsMessagingIntegrationsLineIntegrationIDUnauthorized {
	return &PutConversationsMessagingIntegrationsLineIntegrationIDUnauthorized{}
}

/*PutConversationsMessagingIntegrationsLineIntegrationIDUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PutConversationsMessagingIntegrationsLineIntegrationIDUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PutConversationsMessagingIntegrationsLineIntegrationIDUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/messaging/integrations/line/{integrationId}][%d] putConversationsMessagingIntegrationsLineIntegrationIdUnauthorized  %+v", 401, o.Payload)
}

func (o *PutConversationsMessagingIntegrationsLineIntegrationIDUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsMessagingIntegrationsLineIntegrationIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsMessagingIntegrationsLineIntegrationIDForbidden creates a PutConversationsMessagingIntegrationsLineIntegrationIDForbidden with default headers values
func NewPutConversationsMessagingIntegrationsLineIntegrationIDForbidden() *PutConversationsMessagingIntegrationsLineIntegrationIDForbidden {
	return &PutConversationsMessagingIntegrationsLineIntegrationIDForbidden{}
}

/*PutConversationsMessagingIntegrationsLineIntegrationIDForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PutConversationsMessagingIntegrationsLineIntegrationIDForbidden struct {
	Payload *models.ErrorBody
}

func (o *PutConversationsMessagingIntegrationsLineIntegrationIDForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/messaging/integrations/line/{integrationId}][%d] putConversationsMessagingIntegrationsLineIntegrationIdForbidden  %+v", 403, o.Payload)
}

func (o *PutConversationsMessagingIntegrationsLineIntegrationIDForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsMessagingIntegrationsLineIntegrationIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsMessagingIntegrationsLineIntegrationIDNotFound creates a PutConversationsMessagingIntegrationsLineIntegrationIDNotFound with default headers values
func NewPutConversationsMessagingIntegrationsLineIntegrationIDNotFound() *PutConversationsMessagingIntegrationsLineIntegrationIDNotFound {
	return &PutConversationsMessagingIntegrationsLineIntegrationIDNotFound{}
}

/*PutConversationsMessagingIntegrationsLineIntegrationIDNotFound handles this case with default header values.

The requested resource was not found.
*/
type PutConversationsMessagingIntegrationsLineIntegrationIDNotFound struct {
	Payload *models.ErrorBody
}

func (o *PutConversationsMessagingIntegrationsLineIntegrationIDNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/messaging/integrations/line/{integrationId}][%d] putConversationsMessagingIntegrationsLineIntegrationIdNotFound  %+v", 404, o.Payload)
}

func (o *PutConversationsMessagingIntegrationsLineIntegrationIDNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsMessagingIntegrationsLineIntegrationIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsMessagingIntegrationsLineIntegrationIDRequestTimeout creates a PutConversationsMessagingIntegrationsLineIntegrationIDRequestTimeout with default headers values
func NewPutConversationsMessagingIntegrationsLineIntegrationIDRequestTimeout() *PutConversationsMessagingIntegrationsLineIntegrationIDRequestTimeout {
	return &PutConversationsMessagingIntegrationsLineIntegrationIDRequestTimeout{}
}

/*PutConversationsMessagingIntegrationsLineIntegrationIDRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutConversationsMessagingIntegrationsLineIntegrationIDRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PutConversationsMessagingIntegrationsLineIntegrationIDRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/messaging/integrations/line/{integrationId}][%d] putConversationsMessagingIntegrationsLineIntegrationIdRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutConversationsMessagingIntegrationsLineIntegrationIDRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsMessagingIntegrationsLineIntegrationIDRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsMessagingIntegrationsLineIntegrationIDRequestEntityTooLarge creates a PutConversationsMessagingIntegrationsLineIntegrationIDRequestEntityTooLarge with default headers values
func NewPutConversationsMessagingIntegrationsLineIntegrationIDRequestEntityTooLarge() *PutConversationsMessagingIntegrationsLineIntegrationIDRequestEntityTooLarge {
	return &PutConversationsMessagingIntegrationsLineIntegrationIDRequestEntityTooLarge{}
}

/*PutConversationsMessagingIntegrationsLineIntegrationIDRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PutConversationsMessagingIntegrationsLineIntegrationIDRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PutConversationsMessagingIntegrationsLineIntegrationIDRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/messaging/integrations/line/{integrationId}][%d] putConversationsMessagingIntegrationsLineIntegrationIdRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutConversationsMessagingIntegrationsLineIntegrationIDRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsMessagingIntegrationsLineIntegrationIDRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsMessagingIntegrationsLineIntegrationIDUnsupportedMediaType creates a PutConversationsMessagingIntegrationsLineIntegrationIDUnsupportedMediaType with default headers values
func NewPutConversationsMessagingIntegrationsLineIntegrationIDUnsupportedMediaType() *PutConversationsMessagingIntegrationsLineIntegrationIDUnsupportedMediaType {
	return &PutConversationsMessagingIntegrationsLineIntegrationIDUnsupportedMediaType{}
}

/*PutConversationsMessagingIntegrationsLineIntegrationIDUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutConversationsMessagingIntegrationsLineIntegrationIDUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PutConversationsMessagingIntegrationsLineIntegrationIDUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/messaging/integrations/line/{integrationId}][%d] putConversationsMessagingIntegrationsLineIntegrationIdUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutConversationsMessagingIntegrationsLineIntegrationIDUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsMessagingIntegrationsLineIntegrationIDUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsMessagingIntegrationsLineIntegrationIDTooManyRequests creates a PutConversationsMessagingIntegrationsLineIntegrationIDTooManyRequests with default headers values
func NewPutConversationsMessagingIntegrationsLineIntegrationIDTooManyRequests() *PutConversationsMessagingIntegrationsLineIntegrationIDTooManyRequests {
	return &PutConversationsMessagingIntegrationsLineIntegrationIDTooManyRequests{}
}

/*PutConversationsMessagingIntegrationsLineIntegrationIDTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutConversationsMessagingIntegrationsLineIntegrationIDTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PutConversationsMessagingIntegrationsLineIntegrationIDTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/messaging/integrations/line/{integrationId}][%d] putConversationsMessagingIntegrationsLineIntegrationIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutConversationsMessagingIntegrationsLineIntegrationIDTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsMessagingIntegrationsLineIntegrationIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsMessagingIntegrationsLineIntegrationIDInternalServerError creates a PutConversationsMessagingIntegrationsLineIntegrationIDInternalServerError with default headers values
func NewPutConversationsMessagingIntegrationsLineIntegrationIDInternalServerError() *PutConversationsMessagingIntegrationsLineIntegrationIDInternalServerError {
	return &PutConversationsMessagingIntegrationsLineIntegrationIDInternalServerError{}
}

/*PutConversationsMessagingIntegrationsLineIntegrationIDInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutConversationsMessagingIntegrationsLineIntegrationIDInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PutConversationsMessagingIntegrationsLineIntegrationIDInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/messaging/integrations/line/{integrationId}][%d] putConversationsMessagingIntegrationsLineIntegrationIdInternalServerError  %+v", 500, o.Payload)
}

func (o *PutConversationsMessagingIntegrationsLineIntegrationIDInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsMessagingIntegrationsLineIntegrationIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsMessagingIntegrationsLineIntegrationIDServiceUnavailable creates a PutConversationsMessagingIntegrationsLineIntegrationIDServiceUnavailable with default headers values
func NewPutConversationsMessagingIntegrationsLineIntegrationIDServiceUnavailable() *PutConversationsMessagingIntegrationsLineIntegrationIDServiceUnavailable {
	return &PutConversationsMessagingIntegrationsLineIntegrationIDServiceUnavailable{}
}

/*PutConversationsMessagingIntegrationsLineIntegrationIDServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutConversationsMessagingIntegrationsLineIntegrationIDServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PutConversationsMessagingIntegrationsLineIntegrationIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/messaging/integrations/line/{integrationId}][%d] putConversationsMessagingIntegrationsLineIntegrationIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutConversationsMessagingIntegrationsLineIntegrationIDServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsMessagingIntegrationsLineIntegrationIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsMessagingIntegrationsLineIntegrationIDGatewayTimeout creates a PutConversationsMessagingIntegrationsLineIntegrationIDGatewayTimeout with default headers values
func NewPutConversationsMessagingIntegrationsLineIntegrationIDGatewayTimeout() *PutConversationsMessagingIntegrationsLineIntegrationIDGatewayTimeout {
	return &PutConversationsMessagingIntegrationsLineIntegrationIDGatewayTimeout{}
}

/*PutConversationsMessagingIntegrationsLineIntegrationIDGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PutConversationsMessagingIntegrationsLineIntegrationIDGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PutConversationsMessagingIntegrationsLineIntegrationIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/messaging/integrations/line/{integrationId}][%d] putConversationsMessagingIntegrationsLineIntegrationIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutConversationsMessagingIntegrationsLineIntegrationIDGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsMessagingIntegrationsLineIntegrationIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
