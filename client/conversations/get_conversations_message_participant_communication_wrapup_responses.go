// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetConversationsMessageParticipantCommunicationWrapupReader is a Reader for the GetConversationsMessageParticipantCommunicationWrapup structure.
type GetConversationsMessageParticipantCommunicationWrapupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConversationsMessageParticipantCommunicationWrapupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConversationsMessageParticipantCommunicationWrapupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetConversationsMessageParticipantCommunicationWrapupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetConversationsMessageParticipantCommunicationWrapupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetConversationsMessageParticipantCommunicationWrapupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetConversationsMessageParticipantCommunicationWrapupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetConversationsMessageParticipantCommunicationWrapupRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetConversationsMessageParticipantCommunicationWrapupRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetConversationsMessageParticipantCommunicationWrapupUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetConversationsMessageParticipantCommunicationWrapupTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetConversationsMessageParticipantCommunicationWrapupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetConversationsMessageParticipantCommunicationWrapupServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetConversationsMessageParticipantCommunicationWrapupGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetConversationsMessageParticipantCommunicationWrapupOK creates a GetConversationsMessageParticipantCommunicationWrapupOK with default headers values
func NewGetConversationsMessageParticipantCommunicationWrapupOK() *GetConversationsMessageParticipantCommunicationWrapupOK {
	return &GetConversationsMessageParticipantCommunicationWrapupOK{}
}

/*
GetConversationsMessageParticipantCommunicationWrapupOK describes a response with status code 200, with default header values.

successful operation
*/
type GetConversationsMessageParticipantCommunicationWrapupOK struct {
	Payload *models.AssignedWrapupCode
}

// IsSuccess returns true when this get conversations message participant communication wrapup o k response has a 2xx status code
func (o *GetConversationsMessageParticipantCommunicationWrapupOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get conversations message participant communication wrapup o k response has a 3xx status code
func (o *GetConversationsMessageParticipantCommunicationWrapupOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations message participant communication wrapup o k response has a 4xx status code
func (o *GetConversationsMessageParticipantCommunicationWrapupOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations message participant communication wrapup o k response has a 5xx status code
func (o *GetConversationsMessageParticipantCommunicationWrapupOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations message participant communication wrapup o k response a status code equal to that given
func (o *GetConversationsMessageParticipantCommunicationWrapupOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetConversationsMessageParticipantCommunicationWrapupOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsMessageParticipantCommunicationWrapupOK  %+v", 200, o.Payload)
}

func (o *GetConversationsMessageParticipantCommunicationWrapupOK) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsMessageParticipantCommunicationWrapupOK  %+v", 200, o.Payload)
}

func (o *GetConversationsMessageParticipantCommunicationWrapupOK) GetPayload() *models.AssignedWrapupCode {
	return o.Payload
}

func (o *GetConversationsMessageParticipantCommunicationWrapupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AssignedWrapupCode)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageParticipantCommunicationWrapupBadRequest creates a GetConversationsMessageParticipantCommunicationWrapupBadRequest with default headers values
func NewGetConversationsMessageParticipantCommunicationWrapupBadRequest() *GetConversationsMessageParticipantCommunicationWrapupBadRequest {
	return &GetConversationsMessageParticipantCommunicationWrapupBadRequest{}
}

/*
GetConversationsMessageParticipantCommunicationWrapupBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetConversationsMessageParticipantCommunicationWrapupBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations message participant communication wrapup bad request response has a 2xx status code
func (o *GetConversationsMessageParticipantCommunicationWrapupBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations message participant communication wrapup bad request response has a 3xx status code
func (o *GetConversationsMessageParticipantCommunicationWrapupBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations message participant communication wrapup bad request response has a 4xx status code
func (o *GetConversationsMessageParticipantCommunicationWrapupBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations message participant communication wrapup bad request response has a 5xx status code
func (o *GetConversationsMessageParticipantCommunicationWrapupBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations message participant communication wrapup bad request response a status code equal to that given
func (o *GetConversationsMessageParticipantCommunicationWrapupBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetConversationsMessageParticipantCommunicationWrapupBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsMessageParticipantCommunicationWrapupBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsMessageParticipantCommunicationWrapupBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsMessageParticipantCommunicationWrapupBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsMessageParticipantCommunicationWrapupBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageParticipantCommunicationWrapupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageParticipantCommunicationWrapupUnauthorized creates a GetConversationsMessageParticipantCommunicationWrapupUnauthorized with default headers values
func NewGetConversationsMessageParticipantCommunicationWrapupUnauthorized() *GetConversationsMessageParticipantCommunicationWrapupUnauthorized {
	return &GetConversationsMessageParticipantCommunicationWrapupUnauthorized{}
}

/*
GetConversationsMessageParticipantCommunicationWrapupUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetConversationsMessageParticipantCommunicationWrapupUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations message participant communication wrapup unauthorized response has a 2xx status code
func (o *GetConversationsMessageParticipantCommunicationWrapupUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations message participant communication wrapup unauthorized response has a 3xx status code
func (o *GetConversationsMessageParticipantCommunicationWrapupUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations message participant communication wrapup unauthorized response has a 4xx status code
func (o *GetConversationsMessageParticipantCommunicationWrapupUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations message participant communication wrapup unauthorized response has a 5xx status code
func (o *GetConversationsMessageParticipantCommunicationWrapupUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations message participant communication wrapup unauthorized response a status code equal to that given
func (o *GetConversationsMessageParticipantCommunicationWrapupUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetConversationsMessageParticipantCommunicationWrapupUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsMessageParticipantCommunicationWrapupUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsMessageParticipantCommunicationWrapupUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsMessageParticipantCommunicationWrapupUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsMessageParticipantCommunicationWrapupUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageParticipantCommunicationWrapupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageParticipantCommunicationWrapupForbidden creates a GetConversationsMessageParticipantCommunicationWrapupForbidden with default headers values
func NewGetConversationsMessageParticipantCommunicationWrapupForbidden() *GetConversationsMessageParticipantCommunicationWrapupForbidden {
	return &GetConversationsMessageParticipantCommunicationWrapupForbidden{}
}

/*
GetConversationsMessageParticipantCommunicationWrapupForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetConversationsMessageParticipantCommunicationWrapupForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations message participant communication wrapup forbidden response has a 2xx status code
func (o *GetConversationsMessageParticipantCommunicationWrapupForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations message participant communication wrapup forbidden response has a 3xx status code
func (o *GetConversationsMessageParticipantCommunicationWrapupForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations message participant communication wrapup forbidden response has a 4xx status code
func (o *GetConversationsMessageParticipantCommunicationWrapupForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations message participant communication wrapup forbidden response has a 5xx status code
func (o *GetConversationsMessageParticipantCommunicationWrapupForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations message participant communication wrapup forbidden response a status code equal to that given
func (o *GetConversationsMessageParticipantCommunicationWrapupForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetConversationsMessageParticipantCommunicationWrapupForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsMessageParticipantCommunicationWrapupForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsMessageParticipantCommunicationWrapupForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsMessageParticipantCommunicationWrapupForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsMessageParticipantCommunicationWrapupForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageParticipantCommunicationWrapupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageParticipantCommunicationWrapupNotFound creates a GetConversationsMessageParticipantCommunicationWrapupNotFound with default headers values
func NewGetConversationsMessageParticipantCommunicationWrapupNotFound() *GetConversationsMessageParticipantCommunicationWrapupNotFound {
	return &GetConversationsMessageParticipantCommunicationWrapupNotFound{}
}

/*
GetConversationsMessageParticipantCommunicationWrapupNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetConversationsMessageParticipantCommunicationWrapupNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations message participant communication wrapup not found response has a 2xx status code
func (o *GetConversationsMessageParticipantCommunicationWrapupNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations message participant communication wrapup not found response has a 3xx status code
func (o *GetConversationsMessageParticipantCommunicationWrapupNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations message participant communication wrapup not found response has a 4xx status code
func (o *GetConversationsMessageParticipantCommunicationWrapupNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations message participant communication wrapup not found response has a 5xx status code
func (o *GetConversationsMessageParticipantCommunicationWrapupNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations message participant communication wrapup not found response a status code equal to that given
func (o *GetConversationsMessageParticipantCommunicationWrapupNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetConversationsMessageParticipantCommunicationWrapupNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsMessageParticipantCommunicationWrapupNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsMessageParticipantCommunicationWrapupNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsMessageParticipantCommunicationWrapupNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsMessageParticipantCommunicationWrapupNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageParticipantCommunicationWrapupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageParticipantCommunicationWrapupRequestTimeout creates a GetConversationsMessageParticipantCommunicationWrapupRequestTimeout with default headers values
func NewGetConversationsMessageParticipantCommunicationWrapupRequestTimeout() *GetConversationsMessageParticipantCommunicationWrapupRequestTimeout {
	return &GetConversationsMessageParticipantCommunicationWrapupRequestTimeout{}
}

/*
GetConversationsMessageParticipantCommunicationWrapupRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetConversationsMessageParticipantCommunicationWrapupRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations message participant communication wrapup request timeout response has a 2xx status code
func (o *GetConversationsMessageParticipantCommunicationWrapupRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations message participant communication wrapup request timeout response has a 3xx status code
func (o *GetConversationsMessageParticipantCommunicationWrapupRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations message participant communication wrapup request timeout response has a 4xx status code
func (o *GetConversationsMessageParticipantCommunicationWrapupRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations message participant communication wrapup request timeout response has a 5xx status code
func (o *GetConversationsMessageParticipantCommunicationWrapupRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations message participant communication wrapup request timeout response a status code equal to that given
func (o *GetConversationsMessageParticipantCommunicationWrapupRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetConversationsMessageParticipantCommunicationWrapupRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsMessageParticipantCommunicationWrapupRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationsMessageParticipantCommunicationWrapupRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsMessageParticipantCommunicationWrapupRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationsMessageParticipantCommunicationWrapupRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageParticipantCommunicationWrapupRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageParticipantCommunicationWrapupRequestEntityTooLarge creates a GetConversationsMessageParticipantCommunicationWrapupRequestEntityTooLarge with default headers values
func NewGetConversationsMessageParticipantCommunicationWrapupRequestEntityTooLarge() *GetConversationsMessageParticipantCommunicationWrapupRequestEntityTooLarge {
	return &GetConversationsMessageParticipantCommunicationWrapupRequestEntityTooLarge{}
}

/*
GetConversationsMessageParticipantCommunicationWrapupRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetConversationsMessageParticipantCommunicationWrapupRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations message participant communication wrapup request entity too large response has a 2xx status code
func (o *GetConversationsMessageParticipantCommunicationWrapupRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations message participant communication wrapup request entity too large response has a 3xx status code
func (o *GetConversationsMessageParticipantCommunicationWrapupRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations message participant communication wrapup request entity too large response has a 4xx status code
func (o *GetConversationsMessageParticipantCommunicationWrapupRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations message participant communication wrapup request entity too large response has a 5xx status code
func (o *GetConversationsMessageParticipantCommunicationWrapupRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations message participant communication wrapup request entity too large response a status code equal to that given
func (o *GetConversationsMessageParticipantCommunicationWrapupRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetConversationsMessageParticipantCommunicationWrapupRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsMessageParticipantCommunicationWrapupRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsMessageParticipantCommunicationWrapupRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsMessageParticipantCommunicationWrapupRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsMessageParticipantCommunicationWrapupRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageParticipantCommunicationWrapupRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageParticipantCommunicationWrapupUnsupportedMediaType creates a GetConversationsMessageParticipantCommunicationWrapupUnsupportedMediaType with default headers values
func NewGetConversationsMessageParticipantCommunicationWrapupUnsupportedMediaType() *GetConversationsMessageParticipantCommunicationWrapupUnsupportedMediaType {
	return &GetConversationsMessageParticipantCommunicationWrapupUnsupportedMediaType{}
}

/*
GetConversationsMessageParticipantCommunicationWrapupUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetConversationsMessageParticipantCommunicationWrapupUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations message participant communication wrapup unsupported media type response has a 2xx status code
func (o *GetConversationsMessageParticipantCommunicationWrapupUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations message participant communication wrapup unsupported media type response has a 3xx status code
func (o *GetConversationsMessageParticipantCommunicationWrapupUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations message participant communication wrapup unsupported media type response has a 4xx status code
func (o *GetConversationsMessageParticipantCommunicationWrapupUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations message participant communication wrapup unsupported media type response has a 5xx status code
func (o *GetConversationsMessageParticipantCommunicationWrapupUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations message participant communication wrapup unsupported media type response a status code equal to that given
func (o *GetConversationsMessageParticipantCommunicationWrapupUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetConversationsMessageParticipantCommunicationWrapupUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsMessageParticipantCommunicationWrapupUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsMessageParticipantCommunicationWrapupUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsMessageParticipantCommunicationWrapupUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsMessageParticipantCommunicationWrapupUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageParticipantCommunicationWrapupUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageParticipantCommunicationWrapupTooManyRequests creates a GetConversationsMessageParticipantCommunicationWrapupTooManyRequests with default headers values
func NewGetConversationsMessageParticipantCommunicationWrapupTooManyRequests() *GetConversationsMessageParticipantCommunicationWrapupTooManyRequests {
	return &GetConversationsMessageParticipantCommunicationWrapupTooManyRequests{}
}

/*
GetConversationsMessageParticipantCommunicationWrapupTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetConversationsMessageParticipantCommunicationWrapupTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations message participant communication wrapup too many requests response has a 2xx status code
func (o *GetConversationsMessageParticipantCommunicationWrapupTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations message participant communication wrapup too many requests response has a 3xx status code
func (o *GetConversationsMessageParticipantCommunicationWrapupTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations message participant communication wrapup too many requests response has a 4xx status code
func (o *GetConversationsMessageParticipantCommunicationWrapupTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations message participant communication wrapup too many requests response has a 5xx status code
func (o *GetConversationsMessageParticipantCommunicationWrapupTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations message participant communication wrapup too many requests response a status code equal to that given
func (o *GetConversationsMessageParticipantCommunicationWrapupTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetConversationsMessageParticipantCommunicationWrapupTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsMessageParticipantCommunicationWrapupTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsMessageParticipantCommunicationWrapupTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsMessageParticipantCommunicationWrapupTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsMessageParticipantCommunicationWrapupTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageParticipantCommunicationWrapupTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageParticipantCommunicationWrapupInternalServerError creates a GetConversationsMessageParticipantCommunicationWrapupInternalServerError with default headers values
func NewGetConversationsMessageParticipantCommunicationWrapupInternalServerError() *GetConversationsMessageParticipantCommunicationWrapupInternalServerError {
	return &GetConversationsMessageParticipantCommunicationWrapupInternalServerError{}
}

/*
GetConversationsMessageParticipantCommunicationWrapupInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetConversationsMessageParticipantCommunicationWrapupInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations message participant communication wrapup internal server error response has a 2xx status code
func (o *GetConversationsMessageParticipantCommunicationWrapupInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations message participant communication wrapup internal server error response has a 3xx status code
func (o *GetConversationsMessageParticipantCommunicationWrapupInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations message participant communication wrapup internal server error response has a 4xx status code
func (o *GetConversationsMessageParticipantCommunicationWrapupInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations message participant communication wrapup internal server error response has a 5xx status code
func (o *GetConversationsMessageParticipantCommunicationWrapupInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations message participant communication wrapup internal server error response a status code equal to that given
func (o *GetConversationsMessageParticipantCommunicationWrapupInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetConversationsMessageParticipantCommunicationWrapupInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsMessageParticipantCommunicationWrapupInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsMessageParticipantCommunicationWrapupInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsMessageParticipantCommunicationWrapupInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsMessageParticipantCommunicationWrapupInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageParticipantCommunicationWrapupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageParticipantCommunicationWrapupServiceUnavailable creates a GetConversationsMessageParticipantCommunicationWrapupServiceUnavailable with default headers values
func NewGetConversationsMessageParticipantCommunicationWrapupServiceUnavailable() *GetConversationsMessageParticipantCommunicationWrapupServiceUnavailable {
	return &GetConversationsMessageParticipantCommunicationWrapupServiceUnavailable{}
}

/*
GetConversationsMessageParticipantCommunicationWrapupServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetConversationsMessageParticipantCommunicationWrapupServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations message participant communication wrapup service unavailable response has a 2xx status code
func (o *GetConversationsMessageParticipantCommunicationWrapupServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations message participant communication wrapup service unavailable response has a 3xx status code
func (o *GetConversationsMessageParticipantCommunicationWrapupServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations message participant communication wrapup service unavailable response has a 4xx status code
func (o *GetConversationsMessageParticipantCommunicationWrapupServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations message participant communication wrapup service unavailable response has a 5xx status code
func (o *GetConversationsMessageParticipantCommunicationWrapupServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations message participant communication wrapup service unavailable response a status code equal to that given
func (o *GetConversationsMessageParticipantCommunicationWrapupServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetConversationsMessageParticipantCommunicationWrapupServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsMessageParticipantCommunicationWrapupServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsMessageParticipantCommunicationWrapupServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsMessageParticipantCommunicationWrapupServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsMessageParticipantCommunicationWrapupServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageParticipantCommunicationWrapupServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageParticipantCommunicationWrapupGatewayTimeout creates a GetConversationsMessageParticipantCommunicationWrapupGatewayTimeout with default headers values
func NewGetConversationsMessageParticipantCommunicationWrapupGatewayTimeout() *GetConversationsMessageParticipantCommunicationWrapupGatewayTimeout {
	return &GetConversationsMessageParticipantCommunicationWrapupGatewayTimeout{}
}

/*
GetConversationsMessageParticipantCommunicationWrapupGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetConversationsMessageParticipantCommunicationWrapupGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations message participant communication wrapup gateway timeout response has a 2xx status code
func (o *GetConversationsMessageParticipantCommunicationWrapupGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations message participant communication wrapup gateway timeout response has a 3xx status code
func (o *GetConversationsMessageParticipantCommunicationWrapupGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations message participant communication wrapup gateway timeout response has a 4xx status code
func (o *GetConversationsMessageParticipantCommunicationWrapupGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations message participant communication wrapup gateway timeout response has a 5xx status code
func (o *GetConversationsMessageParticipantCommunicationWrapupGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations message participant communication wrapup gateway timeout response a status code equal to that given
func (o *GetConversationsMessageParticipantCommunicationWrapupGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetConversationsMessageParticipantCommunicationWrapupGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsMessageParticipantCommunicationWrapupGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsMessageParticipantCommunicationWrapupGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsMessageParticipantCommunicationWrapupGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsMessageParticipantCommunicationWrapupGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageParticipantCommunicationWrapupGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
