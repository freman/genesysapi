// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostConversationsChatCommunicationMessagesReader is a Reader for the PostConversationsChatCommunicationMessages structure.
type PostConversationsChatCommunicationMessagesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostConversationsChatCommunicationMessagesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostConversationsChatCommunicationMessagesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostConversationsChatCommunicationMessagesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostConversationsChatCommunicationMessagesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostConversationsChatCommunicationMessagesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostConversationsChatCommunicationMessagesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostConversationsChatCommunicationMessagesRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostConversationsChatCommunicationMessagesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostConversationsChatCommunicationMessagesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostConversationsChatCommunicationMessagesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostConversationsChatCommunicationMessagesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostConversationsChatCommunicationMessagesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostConversationsChatCommunicationMessagesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostConversationsChatCommunicationMessagesOK creates a PostConversationsChatCommunicationMessagesOK with default headers values
func NewPostConversationsChatCommunicationMessagesOK() *PostConversationsChatCommunicationMessagesOK {
	return &PostConversationsChatCommunicationMessagesOK{}
}

/*
PostConversationsChatCommunicationMessagesOK describes a response with status code 200, with default header values.

successful operation
*/
type PostConversationsChatCommunicationMessagesOK struct {
	Payload *models.WebChatMessage
}

// IsSuccess returns true when this post conversations chat communication messages o k response has a 2xx status code
func (o *PostConversationsChatCommunicationMessagesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post conversations chat communication messages o k response has a 3xx status code
func (o *PostConversationsChatCommunicationMessagesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations chat communication messages o k response has a 4xx status code
func (o *PostConversationsChatCommunicationMessagesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations chat communication messages o k response has a 5xx status code
func (o *PostConversationsChatCommunicationMessagesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations chat communication messages o k response a status code equal to that given
func (o *PostConversationsChatCommunicationMessagesOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostConversationsChatCommunicationMessagesOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/chats/{conversationId}/communications/{communicationId}/messages][%d] postConversationsChatCommunicationMessagesOK  %+v", 200, o.Payload)
}

func (o *PostConversationsChatCommunicationMessagesOK) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/chats/{conversationId}/communications/{communicationId}/messages][%d] postConversationsChatCommunicationMessagesOK  %+v", 200, o.Payload)
}

func (o *PostConversationsChatCommunicationMessagesOK) GetPayload() *models.WebChatMessage {
	return o.Payload
}

func (o *PostConversationsChatCommunicationMessagesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WebChatMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsChatCommunicationMessagesBadRequest creates a PostConversationsChatCommunicationMessagesBadRequest with default headers values
func NewPostConversationsChatCommunicationMessagesBadRequest() *PostConversationsChatCommunicationMessagesBadRequest {
	return &PostConversationsChatCommunicationMessagesBadRequest{}
}

/*
PostConversationsChatCommunicationMessagesBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostConversationsChatCommunicationMessagesBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations chat communication messages bad request response has a 2xx status code
func (o *PostConversationsChatCommunicationMessagesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations chat communication messages bad request response has a 3xx status code
func (o *PostConversationsChatCommunicationMessagesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations chat communication messages bad request response has a 4xx status code
func (o *PostConversationsChatCommunicationMessagesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations chat communication messages bad request response has a 5xx status code
func (o *PostConversationsChatCommunicationMessagesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations chat communication messages bad request response a status code equal to that given
func (o *PostConversationsChatCommunicationMessagesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostConversationsChatCommunicationMessagesBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/chats/{conversationId}/communications/{communicationId}/messages][%d] postConversationsChatCommunicationMessagesBadRequest  %+v", 400, o.Payload)
}

func (o *PostConversationsChatCommunicationMessagesBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/chats/{conversationId}/communications/{communicationId}/messages][%d] postConversationsChatCommunicationMessagesBadRequest  %+v", 400, o.Payload)
}

func (o *PostConversationsChatCommunicationMessagesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsChatCommunicationMessagesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsChatCommunicationMessagesUnauthorized creates a PostConversationsChatCommunicationMessagesUnauthorized with default headers values
func NewPostConversationsChatCommunicationMessagesUnauthorized() *PostConversationsChatCommunicationMessagesUnauthorized {
	return &PostConversationsChatCommunicationMessagesUnauthorized{}
}

/*
PostConversationsChatCommunicationMessagesUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostConversationsChatCommunicationMessagesUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations chat communication messages unauthorized response has a 2xx status code
func (o *PostConversationsChatCommunicationMessagesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations chat communication messages unauthorized response has a 3xx status code
func (o *PostConversationsChatCommunicationMessagesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations chat communication messages unauthorized response has a 4xx status code
func (o *PostConversationsChatCommunicationMessagesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations chat communication messages unauthorized response has a 5xx status code
func (o *PostConversationsChatCommunicationMessagesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations chat communication messages unauthorized response a status code equal to that given
func (o *PostConversationsChatCommunicationMessagesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostConversationsChatCommunicationMessagesUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/chats/{conversationId}/communications/{communicationId}/messages][%d] postConversationsChatCommunicationMessagesUnauthorized  %+v", 401, o.Payload)
}

func (o *PostConversationsChatCommunicationMessagesUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/chats/{conversationId}/communications/{communicationId}/messages][%d] postConversationsChatCommunicationMessagesUnauthorized  %+v", 401, o.Payload)
}

func (o *PostConversationsChatCommunicationMessagesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsChatCommunicationMessagesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsChatCommunicationMessagesForbidden creates a PostConversationsChatCommunicationMessagesForbidden with default headers values
func NewPostConversationsChatCommunicationMessagesForbidden() *PostConversationsChatCommunicationMessagesForbidden {
	return &PostConversationsChatCommunicationMessagesForbidden{}
}

/*
PostConversationsChatCommunicationMessagesForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostConversationsChatCommunicationMessagesForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations chat communication messages forbidden response has a 2xx status code
func (o *PostConversationsChatCommunicationMessagesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations chat communication messages forbidden response has a 3xx status code
func (o *PostConversationsChatCommunicationMessagesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations chat communication messages forbidden response has a 4xx status code
func (o *PostConversationsChatCommunicationMessagesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations chat communication messages forbidden response has a 5xx status code
func (o *PostConversationsChatCommunicationMessagesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations chat communication messages forbidden response a status code equal to that given
func (o *PostConversationsChatCommunicationMessagesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostConversationsChatCommunicationMessagesForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/chats/{conversationId}/communications/{communicationId}/messages][%d] postConversationsChatCommunicationMessagesForbidden  %+v", 403, o.Payload)
}

func (o *PostConversationsChatCommunicationMessagesForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/chats/{conversationId}/communications/{communicationId}/messages][%d] postConversationsChatCommunicationMessagesForbidden  %+v", 403, o.Payload)
}

func (o *PostConversationsChatCommunicationMessagesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsChatCommunicationMessagesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsChatCommunicationMessagesNotFound creates a PostConversationsChatCommunicationMessagesNotFound with default headers values
func NewPostConversationsChatCommunicationMessagesNotFound() *PostConversationsChatCommunicationMessagesNotFound {
	return &PostConversationsChatCommunicationMessagesNotFound{}
}

/*
PostConversationsChatCommunicationMessagesNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostConversationsChatCommunicationMessagesNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations chat communication messages not found response has a 2xx status code
func (o *PostConversationsChatCommunicationMessagesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations chat communication messages not found response has a 3xx status code
func (o *PostConversationsChatCommunicationMessagesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations chat communication messages not found response has a 4xx status code
func (o *PostConversationsChatCommunicationMessagesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations chat communication messages not found response has a 5xx status code
func (o *PostConversationsChatCommunicationMessagesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations chat communication messages not found response a status code equal to that given
func (o *PostConversationsChatCommunicationMessagesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostConversationsChatCommunicationMessagesNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/chats/{conversationId}/communications/{communicationId}/messages][%d] postConversationsChatCommunicationMessagesNotFound  %+v", 404, o.Payload)
}

func (o *PostConversationsChatCommunicationMessagesNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/chats/{conversationId}/communications/{communicationId}/messages][%d] postConversationsChatCommunicationMessagesNotFound  %+v", 404, o.Payload)
}

func (o *PostConversationsChatCommunicationMessagesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsChatCommunicationMessagesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsChatCommunicationMessagesRequestTimeout creates a PostConversationsChatCommunicationMessagesRequestTimeout with default headers values
func NewPostConversationsChatCommunicationMessagesRequestTimeout() *PostConversationsChatCommunicationMessagesRequestTimeout {
	return &PostConversationsChatCommunicationMessagesRequestTimeout{}
}

/*
PostConversationsChatCommunicationMessagesRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostConversationsChatCommunicationMessagesRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations chat communication messages request timeout response has a 2xx status code
func (o *PostConversationsChatCommunicationMessagesRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations chat communication messages request timeout response has a 3xx status code
func (o *PostConversationsChatCommunicationMessagesRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations chat communication messages request timeout response has a 4xx status code
func (o *PostConversationsChatCommunicationMessagesRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations chat communication messages request timeout response has a 5xx status code
func (o *PostConversationsChatCommunicationMessagesRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations chat communication messages request timeout response a status code equal to that given
func (o *PostConversationsChatCommunicationMessagesRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostConversationsChatCommunicationMessagesRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/chats/{conversationId}/communications/{communicationId}/messages][%d] postConversationsChatCommunicationMessagesRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostConversationsChatCommunicationMessagesRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/chats/{conversationId}/communications/{communicationId}/messages][%d] postConversationsChatCommunicationMessagesRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostConversationsChatCommunicationMessagesRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsChatCommunicationMessagesRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsChatCommunicationMessagesRequestEntityTooLarge creates a PostConversationsChatCommunicationMessagesRequestEntityTooLarge with default headers values
func NewPostConversationsChatCommunicationMessagesRequestEntityTooLarge() *PostConversationsChatCommunicationMessagesRequestEntityTooLarge {
	return &PostConversationsChatCommunicationMessagesRequestEntityTooLarge{}
}

/*
PostConversationsChatCommunicationMessagesRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PostConversationsChatCommunicationMessagesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations chat communication messages request entity too large response has a 2xx status code
func (o *PostConversationsChatCommunicationMessagesRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations chat communication messages request entity too large response has a 3xx status code
func (o *PostConversationsChatCommunicationMessagesRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations chat communication messages request entity too large response has a 4xx status code
func (o *PostConversationsChatCommunicationMessagesRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations chat communication messages request entity too large response has a 5xx status code
func (o *PostConversationsChatCommunicationMessagesRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations chat communication messages request entity too large response a status code equal to that given
func (o *PostConversationsChatCommunicationMessagesRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostConversationsChatCommunicationMessagesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/chats/{conversationId}/communications/{communicationId}/messages][%d] postConversationsChatCommunicationMessagesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostConversationsChatCommunicationMessagesRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/chats/{conversationId}/communications/{communicationId}/messages][%d] postConversationsChatCommunicationMessagesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostConversationsChatCommunicationMessagesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsChatCommunicationMessagesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsChatCommunicationMessagesUnsupportedMediaType creates a PostConversationsChatCommunicationMessagesUnsupportedMediaType with default headers values
func NewPostConversationsChatCommunicationMessagesUnsupportedMediaType() *PostConversationsChatCommunicationMessagesUnsupportedMediaType {
	return &PostConversationsChatCommunicationMessagesUnsupportedMediaType{}
}

/*
PostConversationsChatCommunicationMessagesUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostConversationsChatCommunicationMessagesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations chat communication messages unsupported media type response has a 2xx status code
func (o *PostConversationsChatCommunicationMessagesUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations chat communication messages unsupported media type response has a 3xx status code
func (o *PostConversationsChatCommunicationMessagesUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations chat communication messages unsupported media type response has a 4xx status code
func (o *PostConversationsChatCommunicationMessagesUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations chat communication messages unsupported media type response has a 5xx status code
func (o *PostConversationsChatCommunicationMessagesUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations chat communication messages unsupported media type response a status code equal to that given
func (o *PostConversationsChatCommunicationMessagesUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostConversationsChatCommunicationMessagesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/chats/{conversationId}/communications/{communicationId}/messages][%d] postConversationsChatCommunicationMessagesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostConversationsChatCommunicationMessagesUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/chats/{conversationId}/communications/{communicationId}/messages][%d] postConversationsChatCommunicationMessagesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostConversationsChatCommunicationMessagesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsChatCommunicationMessagesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsChatCommunicationMessagesTooManyRequests creates a PostConversationsChatCommunicationMessagesTooManyRequests with default headers values
func NewPostConversationsChatCommunicationMessagesTooManyRequests() *PostConversationsChatCommunicationMessagesTooManyRequests {
	return &PostConversationsChatCommunicationMessagesTooManyRequests{}
}

/*
PostConversationsChatCommunicationMessagesTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostConversationsChatCommunicationMessagesTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations chat communication messages too many requests response has a 2xx status code
func (o *PostConversationsChatCommunicationMessagesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations chat communication messages too many requests response has a 3xx status code
func (o *PostConversationsChatCommunicationMessagesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations chat communication messages too many requests response has a 4xx status code
func (o *PostConversationsChatCommunicationMessagesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations chat communication messages too many requests response has a 5xx status code
func (o *PostConversationsChatCommunicationMessagesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations chat communication messages too many requests response a status code equal to that given
func (o *PostConversationsChatCommunicationMessagesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostConversationsChatCommunicationMessagesTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/chats/{conversationId}/communications/{communicationId}/messages][%d] postConversationsChatCommunicationMessagesTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostConversationsChatCommunicationMessagesTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/chats/{conversationId}/communications/{communicationId}/messages][%d] postConversationsChatCommunicationMessagesTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostConversationsChatCommunicationMessagesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsChatCommunicationMessagesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsChatCommunicationMessagesInternalServerError creates a PostConversationsChatCommunicationMessagesInternalServerError with default headers values
func NewPostConversationsChatCommunicationMessagesInternalServerError() *PostConversationsChatCommunicationMessagesInternalServerError {
	return &PostConversationsChatCommunicationMessagesInternalServerError{}
}

/*
PostConversationsChatCommunicationMessagesInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostConversationsChatCommunicationMessagesInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations chat communication messages internal server error response has a 2xx status code
func (o *PostConversationsChatCommunicationMessagesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations chat communication messages internal server error response has a 3xx status code
func (o *PostConversationsChatCommunicationMessagesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations chat communication messages internal server error response has a 4xx status code
func (o *PostConversationsChatCommunicationMessagesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations chat communication messages internal server error response has a 5xx status code
func (o *PostConversationsChatCommunicationMessagesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversations chat communication messages internal server error response a status code equal to that given
func (o *PostConversationsChatCommunicationMessagesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostConversationsChatCommunicationMessagesInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/chats/{conversationId}/communications/{communicationId}/messages][%d] postConversationsChatCommunicationMessagesInternalServerError  %+v", 500, o.Payload)
}

func (o *PostConversationsChatCommunicationMessagesInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/chats/{conversationId}/communications/{communicationId}/messages][%d] postConversationsChatCommunicationMessagesInternalServerError  %+v", 500, o.Payload)
}

func (o *PostConversationsChatCommunicationMessagesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsChatCommunicationMessagesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsChatCommunicationMessagesServiceUnavailable creates a PostConversationsChatCommunicationMessagesServiceUnavailable with default headers values
func NewPostConversationsChatCommunicationMessagesServiceUnavailable() *PostConversationsChatCommunicationMessagesServiceUnavailable {
	return &PostConversationsChatCommunicationMessagesServiceUnavailable{}
}

/*
PostConversationsChatCommunicationMessagesServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostConversationsChatCommunicationMessagesServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations chat communication messages service unavailable response has a 2xx status code
func (o *PostConversationsChatCommunicationMessagesServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations chat communication messages service unavailable response has a 3xx status code
func (o *PostConversationsChatCommunicationMessagesServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations chat communication messages service unavailable response has a 4xx status code
func (o *PostConversationsChatCommunicationMessagesServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations chat communication messages service unavailable response has a 5xx status code
func (o *PostConversationsChatCommunicationMessagesServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversations chat communication messages service unavailable response a status code equal to that given
func (o *PostConversationsChatCommunicationMessagesServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostConversationsChatCommunicationMessagesServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/chats/{conversationId}/communications/{communicationId}/messages][%d] postConversationsChatCommunicationMessagesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostConversationsChatCommunicationMessagesServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/chats/{conversationId}/communications/{communicationId}/messages][%d] postConversationsChatCommunicationMessagesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostConversationsChatCommunicationMessagesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsChatCommunicationMessagesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsChatCommunicationMessagesGatewayTimeout creates a PostConversationsChatCommunicationMessagesGatewayTimeout with default headers values
func NewPostConversationsChatCommunicationMessagesGatewayTimeout() *PostConversationsChatCommunicationMessagesGatewayTimeout {
	return &PostConversationsChatCommunicationMessagesGatewayTimeout{}
}

/*
PostConversationsChatCommunicationMessagesGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostConversationsChatCommunicationMessagesGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations chat communication messages gateway timeout response has a 2xx status code
func (o *PostConversationsChatCommunicationMessagesGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations chat communication messages gateway timeout response has a 3xx status code
func (o *PostConversationsChatCommunicationMessagesGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations chat communication messages gateway timeout response has a 4xx status code
func (o *PostConversationsChatCommunicationMessagesGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations chat communication messages gateway timeout response has a 5xx status code
func (o *PostConversationsChatCommunicationMessagesGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversations chat communication messages gateway timeout response a status code equal to that given
func (o *PostConversationsChatCommunicationMessagesGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostConversationsChatCommunicationMessagesGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/chats/{conversationId}/communications/{communicationId}/messages][%d] postConversationsChatCommunicationMessagesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostConversationsChatCommunicationMessagesGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/chats/{conversationId}/communications/{communicationId}/messages][%d] postConversationsChatCommunicationMessagesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostConversationsChatCommunicationMessagesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsChatCommunicationMessagesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
