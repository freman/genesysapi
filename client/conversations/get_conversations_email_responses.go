// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetConversationsEmailReader is a Reader for the GetConversationsEmail structure.
type GetConversationsEmailReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConversationsEmailReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConversationsEmailOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetConversationsEmailBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetConversationsEmailUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetConversationsEmailForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetConversationsEmailNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetConversationsEmailRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetConversationsEmailRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetConversationsEmailUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetConversationsEmailTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetConversationsEmailInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetConversationsEmailServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetConversationsEmailGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetConversationsEmailOK creates a GetConversationsEmailOK with default headers values
func NewGetConversationsEmailOK() *GetConversationsEmailOK {
	return &GetConversationsEmailOK{}
}

/*
GetConversationsEmailOK describes a response with status code 200, with default header values.

successful operation
*/
type GetConversationsEmailOK struct {
	Payload *models.EmailConversation
}

// IsSuccess returns true when this get conversations email o k response has a 2xx status code
func (o *GetConversationsEmailOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get conversations email o k response has a 3xx status code
func (o *GetConversationsEmailOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email o k response has a 4xx status code
func (o *GetConversationsEmailOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations email o k response has a 5xx status code
func (o *GetConversationsEmailOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations email o k response a status code equal to that given
func (o *GetConversationsEmailOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetConversationsEmailOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}][%d] getConversationsEmailOK  %+v", 200, o.Payload)
}

func (o *GetConversationsEmailOK) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}][%d] getConversationsEmailOK  %+v", 200, o.Payload)
}

func (o *GetConversationsEmailOK) GetPayload() *models.EmailConversation {
	return o.Payload
}

func (o *GetConversationsEmailOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EmailConversation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailBadRequest creates a GetConversationsEmailBadRequest with default headers values
func NewGetConversationsEmailBadRequest() *GetConversationsEmailBadRequest {
	return &GetConversationsEmailBadRequest{}
}

/*
GetConversationsEmailBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetConversationsEmailBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email bad request response has a 2xx status code
func (o *GetConversationsEmailBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email bad request response has a 3xx status code
func (o *GetConversationsEmailBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email bad request response has a 4xx status code
func (o *GetConversationsEmailBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations email bad request response has a 5xx status code
func (o *GetConversationsEmailBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations email bad request response a status code equal to that given
func (o *GetConversationsEmailBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetConversationsEmailBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}][%d] getConversationsEmailBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsEmailBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}][%d] getConversationsEmailBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsEmailBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailUnauthorized creates a GetConversationsEmailUnauthorized with default headers values
func NewGetConversationsEmailUnauthorized() *GetConversationsEmailUnauthorized {
	return &GetConversationsEmailUnauthorized{}
}

/*
GetConversationsEmailUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetConversationsEmailUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email unauthorized response has a 2xx status code
func (o *GetConversationsEmailUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email unauthorized response has a 3xx status code
func (o *GetConversationsEmailUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email unauthorized response has a 4xx status code
func (o *GetConversationsEmailUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations email unauthorized response has a 5xx status code
func (o *GetConversationsEmailUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations email unauthorized response a status code equal to that given
func (o *GetConversationsEmailUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetConversationsEmailUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}][%d] getConversationsEmailUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsEmailUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}][%d] getConversationsEmailUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsEmailUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailForbidden creates a GetConversationsEmailForbidden with default headers values
func NewGetConversationsEmailForbidden() *GetConversationsEmailForbidden {
	return &GetConversationsEmailForbidden{}
}

/*
GetConversationsEmailForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetConversationsEmailForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email forbidden response has a 2xx status code
func (o *GetConversationsEmailForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email forbidden response has a 3xx status code
func (o *GetConversationsEmailForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email forbidden response has a 4xx status code
func (o *GetConversationsEmailForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations email forbidden response has a 5xx status code
func (o *GetConversationsEmailForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations email forbidden response a status code equal to that given
func (o *GetConversationsEmailForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetConversationsEmailForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}][%d] getConversationsEmailForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsEmailForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}][%d] getConversationsEmailForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsEmailForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailNotFound creates a GetConversationsEmailNotFound with default headers values
func NewGetConversationsEmailNotFound() *GetConversationsEmailNotFound {
	return &GetConversationsEmailNotFound{}
}

/*
GetConversationsEmailNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetConversationsEmailNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email not found response has a 2xx status code
func (o *GetConversationsEmailNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email not found response has a 3xx status code
func (o *GetConversationsEmailNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email not found response has a 4xx status code
func (o *GetConversationsEmailNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations email not found response has a 5xx status code
func (o *GetConversationsEmailNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations email not found response a status code equal to that given
func (o *GetConversationsEmailNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetConversationsEmailNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}][%d] getConversationsEmailNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsEmailNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}][%d] getConversationsEmailNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsEmailNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailRequestTimeout creates a GetConversationsEmailRequestTimeout with default headers values
func NewGetConversationsEmailRequestTimeout() *GetConversationsEmailRequestTimeout {
	return &GetConversationsEmailRequestTimeout{}
}

/*
GetConversationsEmailRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetConversationsEmailRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email request timeout response has a 2xx status code
func (o *GetConversationsEmailRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email request timeout response has a 3xx status code
func (o *GetConversationsEmailRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email request timeout response has a 4xx status code
func (o *GetConversationsEmailRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations email request timeout response has a 5xx status code
func (o *GetConversationsEmailRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations email request timeout response a status code equal to that given
func (o *GetConversationsEmailRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetConversationsEmailRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}][%d] getConversationsEmailRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationsEmailRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}][%d] getConversationsEmailRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationsEmailRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailRequestEntityTooLarge creates a GetConversationsEmailRequestEntityTooLarge with default headers values
func NewGetConversationsEmailRequestEntityTooLarge() *GetConversationsEmailRequestEntityTooLarge {
	return &GetConversationsEmailRequestEntityTooLarge{}
}

/*
GetConversationsEmailRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetConversationsEmailRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email request entity too large response has a 2xx status code
func (o *GetConversationsEmailRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email request entity too large response has a 3xx status code
func (o *GetConversationsEmailRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email request entity too large response has a 4xx status code
func (o *GetConversationsEmailRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations email request entity too large response has a 5xx status code
func (o *GetConversationsEmailRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations email request entity too large response a status code equal to that given
func (o *GetConversationsEmailRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetConversationsEmailRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}][%d] getConversationsEmailRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsEmailRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}][%d] getConversationsEmailRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsEmailRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailUnsupportedMediaType creates a GetConversationsEmailUnsupportedMediaType with default headers values
func NewGetConversationsEmailUnsupportedMediaType() *GetConversationsEmailUnsupportedMediaType {
	return &GetConversationsEmailUnsupportedMediaType{}
}

/*
GetConversationsEmailUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetConversationsEmailUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email unsupported media type response has a 2xx status code
func (o *GetConversationsEmailUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email unsupported media type response has a 3xx status code
func (o *GetConversationsEmailUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email unsupported media type response has a 4xx status code
func (o *GetConversationsEmailUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations email unsupported media type response has a 5xx status code
func (o *GetConversationsEmailUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations email unsupported media type response a status code equal to that given
func (o *GetConversationsEmailUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetConversationsEmailUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}][%d] getConversationsEmailUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsEmailUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}][%d] getConversationsEmailUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsEmailUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailTooManyRequests creates a GetConversationsEmailTooManyRequests with default headers values
func NewGetConversationsEmailTooManyRequests() *GetConversationsEmailTooManyRequests {
	return &GetConversationsEmailTooManyRequests{}
}

/*
GetConversationsEmailTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetConversationsEmailTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email too many requests response has a 2xx status code
func (o *GetConversationsEmailTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email too many requests response has a 3xx status code
func (o *GetConversationsEmailTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email too many requests response has a 4xx status code
func (o *GetConversationsEmailTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations email too many requests response has a 5xx status code
func (o *GetConversationsEmailTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations email too many requests response a status code equal to that given
func (o *GetConversationsEmailTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetConversationsEmailTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}][%d] getConversationsEmailTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsEmailTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}][%d] getConversationsEmailTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsEmailTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailInternalServerError creates a GetConversationsEmailInternalServerError with default headers values
func NewGetConversationsEmailInternalServerError() *GetConversationsEmailInternalServerError {
	return &GetConversationsEmailInternalServerError{}
}

/*
GetConversationsEmailInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetConversationsEmailInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email internal server error response has a 2xx status code
func (o *GetConversationsEmailInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email internal server error response has a 3xx status code
func (o *GetConversationsEmailInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email internal server error response has a 4xx status code
func (o *GetConversationsEmailInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations email internal server error response has a 5xx status code
func (o *GetConversationsEmailInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations email internal server error response a status code equal to that given
func (o *GetConversationsEmailInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetConversationsEmailInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}][%d] getConversationsEmailInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsEmailInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}][%d] getConversationsEmailInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsEmailInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailServiceUnavailable creates a GetConversationsEmailServiceUnavailable with default headers values
func NewGetConversationsEmailServiceUnavailable() *GetConversationsEmailServiceUnavailable {
	return &GetConversationsEmailServiceUnavailable{}
}

/*
GetConversationsEmailServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetConversationsEmailServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email service unavailable response has a 2xx status code
func (o *GetConversationsEmailServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email service unavailable response has a 3xx status code
func (o *GetConversationsEmailServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email service unavailable response has a 4xx status code
func (o *GetConversationsEmailServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations email service unavailable response has a 5xx status code
func (o *GetConversationsEmailServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations email service unavailable response a status code equal to that given
func (o *GetConversationsEmailServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetConversationsEmailServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}][%d] getConversationsEmailServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsEmailServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}][%d] getConversationsEmailServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsEmailServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailGatewayTimeout creates a GetConversationsEmailGatewayTimeout with default headers values
func NewGetConversationsEmailGatewayTimeout() *GetConversationsEmailGatewayTimeout {
	return &GetConversationsEmailGatewayTimeout{}
}

/*
GetConversationsEmailGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetConversationsEmailGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email gateway timeout response has a 2xx status code
func (o *GetConversationsEmailGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email gateway timeout response has a 3xx status code
func (o *GetConversationsEmailGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email gateway timeout response has a 4xx status code
func (o *GetConversationsEmailGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations email gateway timeout response has a 5xx status code
func (o *GetConversationsEmailGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations email gateway timeout response a status code equal to that given
func (o *GetConversationsEmailGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetConversationsEmailGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}][%d] getConversationsEmailGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsEmailGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}][%d] getConversationsEmailGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsEmailGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
