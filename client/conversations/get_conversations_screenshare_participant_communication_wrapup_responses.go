// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetConversationsScreenshareParticipantCommunicationWrapupReader is a Reader for the GetConversationsScreenshareParticipantCommunicationWrapup structure.
type GetConversationsScreenshareParticipantCommunicationWrapupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConversationsScreenshareParticipantCommunicationWrapupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConversationsScreenshareParticipantCommunicationWrapupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetConversationsScreenshareParticipantCommunicationWrapupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetConversationsScreenshareParticipantCommunicationWrapupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetConversationsScreenshareParticipantCommunicationWrapupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetConversationsScreenshareParticipantCommunicationWrapupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetConversationsScreenshareParticipantCommunicationWrapupRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetConversationsScreenshareParticipantCommunicationWrapupRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetConversationsScreenshareParticipantCommunicationWrapupUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetConversationsScreenshareParticipantCommunicationWrapupTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetConversationsScreenshareParticipantCommunicationWrapupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetConversationsScreenshareParticipantCommunicationWrapupServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetConversationsScreenshareParticipantCommunicationWrapupGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetConversationsScreenshareParticipantCommunicationWrapupOK creates a GetConversationsScreenshareParticipantCommunicationWrapupOK with default headers values
func NewGetConversationsScreenshareParticipantCommunicationWrapupOK() *GetConversationsScreenshareParticipantCommunicationWrapupOK {
	return &GetConversationsScreenshareParticipantCommunicationWrapupOK{}
}

/*
GetConversationsScreenshareParticipantCommunicationWrapupOK describes a response with status code 200, with default header values.

successful operation
*/
type GetConversationsScreenshareParticipantCommunicationWrapupOK struct {
	Payload *models.AssignedWrapupCode
}

// IsSuccess returns true when this get conversations screenshare participant communication wrapup o k response has a 2xx status code
func (o *GetConversationsScreenshareParticipantCommunicationWrapupOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get conversations screenshare participant communication wrapup o k response has a 3xx status code
func (o *GetConversationsScreenshareParticipantCommunicationWrapupOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations screenshare participant communication wrapup o k response has a 4xx status code
func (o *GetConversationsScreenshareParticipantCommunicationWrapupOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations screenshare participant communication wrapup o k response has a 5xx status code
func (o *GetConversationsScreenshareParticipantCommunicationWrapupOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations screenshare participant communication wrapup o k response a status code equal to that given
func (o *GetConversationsScreenshareParticipantCommunicationWrapupOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetConversationsScreenshareParticipantCommunicationWrapupOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsScreenshareParticipantCommunicationWrapupOK  %+v", 200, o.Payload)
}

func (o *GetConversationsScreenshareParticipantCommunicationWrapupOK) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsScreenshareParticipantCommunicationWrapupOK  %+v", 200, o.Payload)
}

func (o *GetConversationsScreenshareParticipantCommunicationWrapupOK) GetPayload() *models.AssignedWrapupCode {
	return o.Payload
}

func (o *GetConversationsScreenshareParticipantCommunicationWrapupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AssignedWrapupCode)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsScreenshareParticipantCommunicationWrapupBadRequest creates a GetConversationsScreenshareParticipantCommunicationWrapupBadRequest with default headers values
func NewGetConversationsScreenshareParticipantCommunicationWrapupBadRequest() *GetConversationsScreenshareParticipantCommunicationWrapupBadRequest {
	return &GetConversationsScreenshareParticipantCommunicationWrapupBadRequest{}
}

/*
GetConversationsScreenshareParticipantCommunicationWrapupBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetConversationsScreenshareParticipantCommunicationWrapupBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations screenshare participant communication wrapup bad request response has a 2xx status code
func (o *GetConversationsScreenshareParticipantCommunicationWrapupBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations screenshare participant communication wrapup bad request response has a 3xx status code
func (o *GetConversationsScreenshareParticipantCommunicationWrapupBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations screenshare participant communication wrapup bad request response has a 4xx status code
func (o *GetConversationsScreenshareParticipantCommunicationWrapupBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations screenshare participant communication wrapup bad request response has a 5xx status code
func (o *GetConversationsScreenshareParticipantCommunicationWrapupBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations screenshare participant communication wrapup bad request response a status code equal to that given
func (o *GetConversationsScreenshareParticipantCommunicationWrapupBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetConversationsScreenshareParticipantCommunicationWrapupBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsScreenshareParticipantCommunicationWrapupBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsScreenshareParticipantCommunicationWrapupBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsScreenshareParticipantCommunicationWrapupBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsScreenshareParticipantCommunicationWrapupBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsScreenshareParticipantCommunicationWrapupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsScreenshareParticipantCommunicationWrapupUnauthorized creates a GetConversationsScreenshareParticipantCommunicationWrapupUnauthorized with default headers values
func NewGetConversationsScreenshareParticipantCommunicationWrapupUnauthorized() *GetConversationsScreenshareParticipantCommunicationWrapupUnauthorized {
	return &GetConversationsScreenshareParticipantCommunicationWrapupUnauthorized{}
}

/*
GetConversationsScreenshareParticipantCommunicationWrapupUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetConversationsScreenshareParticipantCommunicationWrapupUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations screenshare participant communication wrapup unauthorized response has a 2xx status code
func (o *GetConversationsScreenshareParticipantCommunicationWrapupUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations screenshare participant communication wrapup unauthorized response has a 3xx status code
func (o *GetConversationsScreenshareParticipantCommunicationWrapupUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations screenshare participant communication wrapup unauthorized response has a 4xx status code
func (o *GetConversationsScreenshareParticipantCommunicationWrapupUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations screenshare participant communication wrapup unauthorized response has a 5xx status code
func (o *GetConversationsScreenshareParticipantCommunicationWrapupUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations screenshare participant communication wrapup unauthorized response a status code equal to that given
func (o *GetConversationsScreenshareParticipantCommunicationWrapupUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetConversationsScreenshareParticipantCommunicationWrapupUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsScreenshareParticipantCommunicationWrapupUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsScreenshareParticipantCommunicationWrapupUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsScreenshareParticipantCommunicationWrapupUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsScreenshareParticipantCommunicationWrapupUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsScreenshareParticipantCommunicationWrapupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsScreenshareParticipantCommunicationWrapupForbidden creates a GetConversationsScreenshareParticipantCommunicationWrapupForbidden with default headers values
func NewGetConversationsScreenshareParticipantCommunicationWrapupForbidden() *GetConversationsScreenshareParticipantCommunicationWrapupForbidden {
	return &GetConversationsScreenshareParticipantCommunicationWrapupForbidden{}
}

/*
GetConversationsScreenshareParticipantCommunicationWrapupForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetConversationsScreenshareParticipantCommunicationWrapupForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations screenshare participant communication wrapup forbidden response has a 2xx status code
func (o *GetConversationsScreenshareParticipantCommunicationWrapupForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations screenshare participant communication wrapup forbidden response has a 3xx status code
func (o *GetConversationsScreenshareParticipantCommunicationWrapupForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations screenshare participant communication wrapup forbidden response has a 4xx status code
func (o *GetConversationsScreenshareParticipantCommunicationWrapupForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations screenshare participant communication wrapup forbidden response has a 5xx status code
func (o *GetConversationsScreenshareParticipantCommunicationWrapupForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations screenshare participant communication wrapup forbidden response a status code equal to that given
func (o *GetConversationsScreenshareParticipantCommunicationWrapupForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetConversationsScreenshareParticipantCommunicationWrapupForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsScreenshareParticipantCommunicationWrapupForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsScreenshareParticipantCommunicationWrapupForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsScreenshareParticipantCommunicationWrapupForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsScreenshareParticipantCommunicationWrapupForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsScreenshareParticipantCommunicationWrapupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsScreenshareParticipantCommunicationWrapupNotFound creates a GetConversationsScreenshareParticipantCommunicationWrapupNotFound with default headers values
func NewGetConversationsScreenshareParticipantCommunicationWrapupNotFound() *GetConversationsScreenshareParticipantCommunicationWrapupNotFound {
	return &GetConversationsScreenshareParticipantCommunicationWrapupNotFound{}
}

/*
GetConversationsScreenshareParticipantCommunicationWrapupNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetConversationsScreenshareParticipantCommunicationWrapupNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations screenshare participant communication wrapup not found response has a 2xx status code
func (o *GetConversationsScreenshareParticipantCommunicationWrapupNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations screenshare participant communication wrapup not found response has a 3xx status code
func (o *GetConversationsScreenshareParticipantCommunicationWrapupNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations screenshare participant communication wrapup not found response has a 4xx status code
func (o *GetConversationsScreenshareParticipantCommunicationWrapupNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations screenshare participant communication wrapup not found response has a 5xx status code
func (o *GetConversationsScreenshareParticipantCommunicationWrapupNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations screenshare participant communication wrapup not found response a status code equal to that given
func (o *GetConversationsScreenshareParticipantCommunicationWrapupNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetConversationsScreenshareParticipantCommunicationWrapupNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsScreenshareParticipantCommunicationWrapupNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsScreenshareParticipantCommunicationWrapupNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsScreenshareParticipantCommunicationWrapupNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsScreenshareParticipantCommunicationWrapupNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsScreenshareParticipantCommunicationWrapupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsScreenshareParticipantCommunicationWrapupRequestTimeout creates a GetConversationsScreenshareParticipantCommunicationWrapupRequestTimeout with default headers values
func NewGetConversationsScreenshareParticipantCommunicationWrapupRequestTimeout() *GetConversationsScreenshareParticipantCommunicationWrapupRequestTimeout {
	return &GetConversationsScreenshareParticipantCommunicationWrapupRequestTimeout{}
}

/*
GetConversationsScreenshareParticipantCommunicationWrapupRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetConversationsScreenshareParticipantCommunicationWrapupRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations screenshare participant communication wrapup request timeout response has a 2xx status code
func (o *GetConversationsScreenshareParticipantCommunicationWrapupRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations screenshare participant communication wrapup request timeout response has a 3xx status code
func (o *GetConversationsScreenshareParticipantCommunicationWrapupRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations screenshare participant communication wrapup request timeout response has a 4xx status code
func (o *GetConversationsScreenshareParticipantCommunicationWrapupRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations screenshare participant communication wrapup request timeout response has a 5xx status code
func (o *GetConversationsScreenshareParticipantCommunicationWrapupRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations screenshare participant communication wrapup request timeout response a status code equal to that given
func (o *GetConversationsScreenshareParticipantCommunicationWrapupRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetConversationsScreenshareParticipantCommunicationWrapupRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsScreenshareParticipantCommunicationWrapupRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationsScreenshareParticipantCommunicationWrapupRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsScreenshareParticipantCommunicationWrapupRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationsScreenshareParticipantCommunicationWrapupRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsScreenshareParticipantCommunicationWrapupRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsScreenshareParticipantCommunicationWrapupRequestEntityTooLarge creates a GetConversationsScreenshareParticipantCommunicationWrapupRequestEntityTooLarge with default headers values
func NewGetConversationsScreenshareParticipantCommunicationWrapupRequestEntityTooLarge() *GetConversationsScreenshareParticipantCommunicationWrapupRequestEntityTooLarge {
	return &GetConversationsScreenshareParticipantCommunicationWrapupRequestEntityTooLarge{}
}

/*
GetConversationsScreenshareParticipantCommunicationWrapupRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetConversationsScreenshareParticipantCommunicationWrapupRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations screenshare participant communication wrapup request entity too large response has a 2xx status code
func (o *GetConversationsScreenshareParticipantCommunicationWrapupRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations screenshare participant communication wrapup request entity too large response has a 3xx status code
func (o *GetConversationsScreenshareParticipantCommunicationWrapupRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations screenshare participant communication wrapup request entity too large response has a 4xx status code
func (o *GetConversationsScreenshareParticipantCommunicationWrapupRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations screenshare participant communication wrapup request entity too large response has a 5xx status code
func (o *GetConversationsScreenshareParticipantCommunicationWrapupRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations screenshare participant communication wrapup request entity too large response a status code equal to that given
func (o *GetConversationsScreenshareParticipantCommunicationWrapupRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetConversationsScreenshareParticipantCommunicationWrapupRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsScreenshareParticipantCommunicationWrapupRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsScreenshareParticipantCommunicationWrapupRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsScreenshareParticipantCommunicationWrapupRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsScreenshareParticipantCommunicationWrapupRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsScreenshareParticipantCommunicationWrapupRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsScreenshareParticipantCommunicationWrapupUnsupportedMediaType creates a GetConversationsScreenshareParticipantCommunicationWrapupUnsupportedMediaType with default headers values
func NewGetConversationsScreenshareParticipantCommunicationWrapupUnsupportedMediaType() *GetConversationsScreenshareParticipantCommunicationWrapupUnsupportedMediaType {
	return &GetConversationsScreenshareParticipantCommunicationWrapupUnsupportedMediaType{}
}

/*
GetConversationsScreenshareParticipantCommunicationWrapupUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetConversationsScreenshareParticipantCommunicationWrapupUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations screenshare participant communication wrapup unsupported media type response has a 2xx status code
func (o *GetConversationsScreenshareParticipantCommunicationWrapupUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations screenshare participant communication wrapup unsupported media type response has a 3xx status code
func (o *GetConversationsScreenshareParticipantCommunicationWrapupUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations screenshare participant communication wrapup unsupported media type response has a 4xx status code
func (o *GetConversationsScreenshareParticipantCommunicationWrapupUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations screenshare participant communication wrapup unsupported media type response has a 5xx status code
func (o *GetConversationsScreenshareParticipantCommunicationWrapupUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations screenshare participant communication wrapup unsupported media type response a status code equal to that given
func (o *GetConversationsScreenshareParticipantCommunicationWrapupUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetConversationsScreenshareParticipantCommunicationWrapupUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsScreenshareParticipantCommunicationWrapupUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsScreenshareParticipantCommunicationWrapupUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsScreenshareParticipantCommunicationWrapupUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsScreenshareParticipantCommunicationWrapupUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsScreenshareParticipantCommunicationWrapupUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsScreenshareParticipantCommunicationWrapupTooManyRequests creates a GetConversationsScreenshareParticipantCommunicationWrapupTooManyRequests with default headers values
func NewGetConversationsScreenshareParticipantCommunicationWrapupTooManyRequests() *GetConversationsScreenshareParticipantCommunicationWrapupTooManyRequests {
	return &GetConversationsScreenshareParticipantCommunicationWrapupTooManyRequests{}
}

/*
GetConversationsScreenshareParticipantCommunicationWrapupTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetConversationsScreenshareParticipantCommunicationWrapupTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations screenshare participant communication wrapup too many requests response has a 2xx status code
func (o *GetConversationsScreenshareParticipantCommunicationWrapupTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations screenshare participant communication wrapup too many requests response has a 3xx status code
func (o *GetConversationsScreenshareParticipantCommunicationWrapupTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations screenshare participant communication wrapup too many requests response has a 4xx status code
func (o *GetConversationsScreenshareParticipantCommunicationWrapupTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations screenshare participant communication wrapup too many requests response has a 5xx status code
func (o *GetConversationsScreenshareParticipantCommunicationWrapupTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations screenshare participant communication wrapup too many requests response a status code equal to that given
func (o *GetConversationsScreenshareParticipantCommunicationWrapupTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetConversationsScreenshareParticipantCommunicationWrapupTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsScreenshareParticipantCommunicationWrapupTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsScreenshareParticipantCommunicationWrapupTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsScreenshareParticipantCommunicationWrapupTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsScreenshareParticipantCommunicationWrapupTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsScreenshareParticipantCommunicationWrapupTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsScreenshareParticipantCommunicationWrapupInternalServerError creates a GetConversationsScreenshareParticipantCommunicationWrapupInternalServerError with default headers values
func NewGetConversationsScreenshareParticipantCommunicationWrapupInternalServerError() *GetConversationsScreenshareParticipantCommunicationWrapupInternalServerError {
	return &GetConversationsScreenshareParticipantCommunicationWrapupInternalServerError{}
}

/*
GetConversationsScreenshareParticipantCommunicationWrapupInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetConversationsScreenshareParticipantCommunicationWrapupInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations screenshare participant communication wrapup internal server error response has a 2xx status code
func (o *GetConversationsScreenshareParticipantCommunicationWrapupInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations screenshare participant communication wrapup internal server error response has a 3xx status code
func (o *GetConversationsScreenshareParticipantCommunicationWrapupInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations screenshare participant communication wrapup internal server error response has a 4xx status code
func (o *GetConversationsScreenshareParticipantCommunicationWrapupInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations screenshare participant communication wrapup internal server error response has a 5xx status code
func (o *GetConversationsScreenshareParticipantCommunicationWrapupInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations screenshare participant communication wrapup internal server error response a status code equal to that given
func (o *GetConversationsScreenshareParticipantCommunicationWrapupInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetConversationsScreenshareParticipantCommunicationWrapupInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsScreenshareParticipantCommunicationWrapupInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsScreenshareParticipantCommunicationWrapupInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsScreenshareParticipantCommunicationWrapupInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsScreenshareParticipantCommunicationWrapupInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsScreenshareParticipantCommunicationWrapupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsScreenshareParticipantCommunicationWrapupServiceUnavailable creates a GetConversationsScreenshareParticipantCommunicationWrapupServiceUnavailable with default headers values
func NewGetConversationsScreenshareParticipantCommunicationWrapupServiceUnavailable() *GetConversationsScreenshareParticipantCommunicationWrapupServiceUnavailable {
	return &GetConversationsScreenshareParticipantCommunicationWrapupServiceUnavailable{}
}

/*
GetConversationsScreenshareParticipantCommunicationWrapupServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetConversationsScreenshareParticipantCommunicationWrapupServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations screenshare participant communication wrapup service unavailable response has a 2xx status code
func (o *GetConversationsScreenshareParticipantCommunicationWrapupServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations screenshare participant communication wrapup service unavailable response has a 3xx status code
func (o *GetConversationsScreenshareParticipantCommunicationWrapupServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations screenshare participant communication wrapup service unavailable response has a 4xx status code
func (o *GetConversationsScreenshareParticipantCommunicationWrapupServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations screenshare participant communication wrapup service unavailable response has a 5xx status code
func (o *GetConversationsScreenshareParticipantCommunicationWrapupServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations screenshare participant communication wrapup service unavailable response a status code equal to that given
func (o *GetConversationsScreenshareParticipantCommunicationWrapupServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetConversationsScreenshareParticipantCommunicationWrapupServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsScreenshareParticipantCommunicationWrapupServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsScreenshareParticipantCommunicationWrapupServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsScreenshareParticipantCommunicationWrapupServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsScreenshareParticipantCommunicationWrapupServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsScreenshareParticipantCommunicationWrapupServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsScreenshareParticipantCommunicationWrapupGatewayTimeout creates a GetConversationsScreenshareParticipantCommunicationWrapupGatewayTimeout with default headers values
func NewGetConversationsScreenshareParticipantCommunicationWrapupGatewayTimeout() *GetConversationsScreenshareParticipantCommunicationWrapupGatewayTimeout {
	return &GetConversationsScreenshareParticipantCommunicationWrapupGatewayTimeout{}
}

/*
GetConversationsScreenshareParticipantCommunicationWrapupGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetConversationsScreenshareParticipantCommunicationWrapupGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations screenshare participant communication wrapup gateway timeout response has a 2xx status code
func (o *GetConversationsScreenshareParticipantCommunicationWrapupGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations screenshare participant communication wrapup gateway timeout response has a 3xx status code
func (o *GetConversationsScreenshareParticipantCommunicationWrapupGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations screenshare participant communication wrapup gateway timeout response has a 4xx status code
func (o *GetConversationsScreenshareParticipantCommunicationWrapupGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations screenshare participant communication wrapup gateway timeout response has a 5xx status code
func (o *GetConversationsScreenshareParticipantCommunicationWrapupGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations screenshare participant communication wrapup gateway timeout response a status code equal to that given
func (o *GetConversationsScreenshareParticipantCommunicationWrapupGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetConversationsScreenshareParticipantCommunicationWrapupGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsScreenshareParticipantCommunicationWrapupGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsScreenshareParticipantCommunicationWrapupGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsScreenshareParticipantCommunicationWrapupGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsScreenshareParticipantCommunicationWrapupGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsScreenshareParticipantCommunicationWrapupGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
