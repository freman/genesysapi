// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetConversationsCobrowsesessionParticipantCommunicationWrapupReader is a Reader for the GetConversationsCobrowsesessionParticipantCommunicationWrapup structure.
type GetConversationsCobrowsesessionParticipantCommunicationWrapupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConversationsCobrowsesessionParticipantCommunicationWrapupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetConversationsCobrowsesessionParticipantCommunicationWrapupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetConversationsCobrowsesessionParticipantCommunicationWrapupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetConversationsCobrowsesessionParticipantCommunicationWrapupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetConversationsCobrowsesessionParticipantCommunicationWrapupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetConversationsCobrowsesessionParticipantCommunicationWrapupRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetConversationsCobrowsesessionParticipantCommunicationWrapupRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetConversationsCobrowsesessionParticipantCommunicationWrapupUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetConversationsCobrowsesessionParticipantCommunicationWrapupTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetConversationsCobrowsesessionParticipantCommunicationWrapupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetConversationsCobrowsesessionParticipantCommunicationWrapupServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetConversationsCobrowsesessionParticipantCommunicationWrapupGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetConversationsCobrowsesessionParticipantCommunicationWrapupOK creates a GetConversationsCobrowsesessionParticipantCommunicationWrapupOK with default headers values
func NewGetConversationsCobrowsesessionParticipantCommunicationWrapupOK() *GetConversationsCobrowsesessionParticipantCommunicationWrapupOK {
	return &GetConversationsCobrowsesessionParticipantCommunicationWrapupOK{}
}

/*
GetConversationsCobrowsesessionParticipantCommunicationWrapupOK describes a response with status code 200, with default header values.

successful operation
*/
type GetConversationsCobrowsesessionParticipantCommunicationWrapupOK struct {
	Payload *models.AssignedWrapupCode
}

// IsSuccess returns true when this get conversations cobrowsesession participant communication wrapup o k response has a 2xx status code
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get conversations cobrowsesession participant communication wrapup o k response has a 3xx status code
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations cobrowsesession participant communication wrapup o k response has a 4xx status code
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations cobrowsesession participant communication wrapup o k response has a 5xx status code
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations cobrowsesession participant communication wrapup o k response a status code equal to that given
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsCobrowsesessionParticipantCommunicationWrapupOK  %+v", 200, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupOK) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsCobrowsesessionParticipantCommunicationWrapupOK  %+v", 200, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupOK) GetPayload() *models.AssignedWrapupCode {
	return o.Payload
}

func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AssignedWrapupCode)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCobrowsesessionParticipantCommunicationWrapupBadRequest creates a GetConversationsCobrowsesessionParticipantCommunicationWrapupBadRequest with default headers values
func NewGetConversationsCobrowsesessionParticipantCommunicationWrapupBadRequest() *GetConversationsCobrowsesessionParticipantCommunicationWrapupBadRequest {
	return &GetConversationsCobrowsesessionParticipantCommunicationWrapupBadRequest{}
}

/*
GetConversationsCobrowsesessionParticipantCommunicationWrapupBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetConversationsCobrowsesessionParticipantCommunicationWrapupBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations cobrowsesession participant communication wrapup bad request response has a 2xx status code
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations cobrowsesession participant communication wrapup bad request response has a 3xx status code
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations cobrowsesession participant communication wrapup bad request response has a 4xx status code
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations cobrowsesession participant communication wrapup bad request response has a 5xx status code
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations cobrowsesession participant communication wrapup bad request response a status code equal to that given
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsCobrowsesessionParticipantCommunicationWrapupBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsCobrowsesessionParticipantCommunicationWrapupBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCobrowsesessionParticipantCommunicationWrapupUnauthorized creates a GetConversationsCobrowsesessionParticipantCommunicationWrapupUnauthorized with default headers values
func NewGetConversationsCobrowsesessionParticipantCommunicationWrapupUnauthorized() *GetConversationsCobrowsesessionParticipantCommunicationWrapupUnauthorized {
	return &GetConversationsCobrowsesessionParticipantCommunicationWrapupUnauthorized{}
}

/*
GetConversationsCobrowsesessionParticipantCommunicationWrapupUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetConversationsCobrowsesessionParticipantCommunicationWrapupUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations cobrowsesession participant communication wrapup unauthorized response has a 2xx status code
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations cobrowsesession participant communication wrapup unauthorized response has a 3xx status code
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations cobrowsesession participant communication wrapup unauthorized response has a 4xx status code
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations cobrowsesession participant communication wrapup unauthorized response has a 5xx status code
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations cobrowsesession participant communication wrapup unauthorized response a status code equal to that given
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsCobrowsesessionParticipantCommunicationWrapupUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsCobrowsesessionParticipantCommunicationWrapupUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCobrowsesessionParticipantCommunicationWrapupForbidden creates a GetConversationsCobrowsesessionParticipantCommunicationWrapupForbidden with default headers values
func NewGetConversationsCobrowsesessionParticipantCommunicationWrapupForbidden() *GetConversationsCobrowsesessionParticipantCommunicationWrapupForbidden {
	return &GetConversationsCobrowsesessionParticipantCommunicationWrapupForbidden{}
}

/*
GetConversationsCobrowsesessionParticipantCommunicationWrapupForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetConversationsCobrowsesessionParticipantCommunicationWrapupForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations cobrowsesession participant communication wrapup forbidden response has a 2xx status code
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations cobrowsesession participant communication wrapup forbidden response has a 3xx status code
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations cobrowsesession participant communication wrapup forbidden response has a 4xx status code
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations cobrowsesession participant communication wrapup forbidden response has a 5xx status code
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations cobrowsesession participant communication wrapup forbidden response a status code equal to that given
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsCobrowsesessionParticipantCommunicationWrapupForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsCobrowsesessionParticipantCommunicationWrapupForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCobrowsesessionParticipantCommunicationWrapupNotFound creates a GetConversationsCobrowsesessionParticipantCommunicationWrapupNotFound with default headers values
func NewGetConversationsCobrowsesessionParticipantCommunicationWrapupNotFound() *GetConversationsCobrowsesessionParticipantCommunicationWrapupNotFound {
	return &GetConversationsCobrowsesessionParticipantCommunicationWrapupNotFound{}
}

/*
GetConversationsCobrowsesessionParticipantCommunicationWrapupNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetConversationsCobrowsesessionParticipantCommunicationWrapupNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations cobrowsesession participant communication wrapup not found response has a 2xx status code
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations cobrowsesession participant communication wrapup not found response has a 3xx status code
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations cobrowsesession participant communication wrapup not found response has a 4xx status code
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations cobrowsesession participant communication wrapup not found response has a 5xx status code
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations cobrowsesession participant communication wrapup not found response a status code equal to that given
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsCobrowsesessionParticipantCommunicationWrapupNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsCobrowsesessionParticipantCommunicationWrapupNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCobrowsesessionParticipantCommunicationWrapupRequestTimeout creates a GetConversationsCobrowsesessionParticipantCommunicationWrapupRequestTimeout with default headers values
func NewGetConversationsCobrowsesessionParticipantCommunicationWrapupRequestTimeout() *GetConversationsCobrowsesessionParticipantCommunicationWrapupRequestTimeout {
	return &GetConversationsCobrowsesessionParticipantCommunicationWrapupRequestTimeout{}
}

/*
GetConversationsCobrowsesessionParticipantCommunicationWrapupRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetConversationsCobrowsesessionParticipantCommunicationWrapupRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations cobrowsesession participant communication wrapup request timeout response has a 2xx status code
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations cobrowsesession participant communication wrapup request timeout response has a 3xx status code
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations cobrowsesession participant communication wrapup request timeout response has a 4xx status code
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations cobrowsesession participant communication wrapup request timeout response has a 5xx status code
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations cobrowsesession participant communication wrapup request timeout response a status code equal to that given
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsCobrowsesessionParticipantCommunicationWrapupRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsCobrowsesessionParticipantCommunicationWrapupRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCobrowsesessionParticipantCommunicationWrapupRequestEntityTooLarge creates a GetConversationsCobrowsesessionParticipantCommunicationWrapupRequestEntityTooLarge with default headers values
func NewGetConversationsCobrowsesessionParticipantCommunicationWrapupRequestEntityTooLarge() *GetConversationsCobrowsesessionParticipantCommunicationWrapupRequestEntityTooLarge {
	return &GetConversationsCobrowsesessionParticipantCommunicationWrapupRequestEntityTooLarge{}
}

/*
GetConversationsCobrowsesessionParticipantCommunicationWrapupRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetConversationsCobrowsesessionParticipantCommunicationWrapupRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations cobrowsesession participant communication wrapup request entity too large response has a 2xx status code
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations cobrowsesession participant communication wrapup request entity too large response has a 3xx status code
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations cobrowsesession participant communication wrapup request entity too large response has a 4xx status code
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations cobrowsesession participant communication wrapup request entity too large response has a 5xx status code
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations cobrowsesession participant communication wrapup request entity too large response a status code equal to that given
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsCobrowsesessionParticipantCommunicationWrapupRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsCobrowsesessionParticipantCommunicationWrapupRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCobrowsesessionParticipantCommunicationWrapupUnsupportedMediaType creates a GetConversationsCobrowsesessionParticipantCommunicationWrapupUnsupportedMediaType with default headers values
func NewGetConversationsCobrowsesessionParticipantCommunicationWrapupUnsupportedMediaType() *GetConversationsCobrowsesessionParticipantCommunicationWrapupUnsupportedMediaType {
	return &GetConversationsCobrowsesessionParticipantCommunicationWrapupUnsupportedMediaType{}
}

/*
GetConversationsCobrowsesessionParticipantCommunicationWrapupUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetConversationsCobrowsesessionParticipantCommunicationWrapupUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations cobrowsesession participant communication wrapup unsupported media type response has a 2xx status code
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations cobrowsesession participant communication wrapup unsupported media type response has a 3xx status code
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations cobrowsesession participant communication wrapup unsupported media type response has a 4xx status code
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations cobrowsesession participant communication wrapup unsupported media type response has a 5xx status code
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations cobrowsesession participant communication wrapup unsupported media type response a status code equal to that given
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsCobrowsesessionParticipantCommunicationWrapupUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsCobrowsesessionParticipantCommunicationWrapupUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCobrowsesessionParticipantCommunicationWrapupTooManyRequests creates a GetConversationsCobrowsesessionParticipantCommunicationWrapupTooManyRequests with default headers values
func NewGetConversationsCobrowsesessionParticipantCommunicationWrapupTooManyRequests() *GetConversationsCobrowsesessionParticipantCommunicationWrapupTooManyRequests {
	return &GetConversationsCobrowsesessionParticipantCommunicationWrapupTooManyRequests{}
}

/*
GetConversationsCobrowsesessionParticipantCommunicationWrapupTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetConversationsCobrowsesessionParticipantCommunicationWrapupTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations cobrowsesession participant communication wrapup too many requests response has a 2xx status code
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations cobrowsesession participant communication wrapup too many requests response has a 3xx status code
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations cobrowsesession participant communication wrapup too many requests response has a 4xx status code
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations cobrowsesession participant communication wrapup too many requests response has a 5xx status code
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations cobrowsesession participant communication wrapup too many requests response a status code equal to that given
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsCobrowsesessionParticipantCommunicationWrapupTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsCobrowsesessionParticipantCommunicationWrapupTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCobrowsesessionParticipantCommunicationWrapupInternalServerError creates a GetConversationsCobrowsesessionParticipantCommunicationWrapupInternalServerError with default headers values
func NewGetConversationsCobrowsesessionParticipantCommunicationWrapupInternalServerError() *GetConversationsCobrowsesessionParticipantCommunicationWrapupInternalServerError {
	return &GetConversationsCobrowsesessionParticipantCommunicationWrapupInternalServerError{}
}

/*
GetConversationsCobrowsesessionParticipantCommunicationWrapupInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetConversationsCobrowsesessionParticipantCommunicationWrapupInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations cobrowsesession participant communication wrapup internal server error response has a 2xx status code
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations cobrowsesession participant communication wrapup internal server error response has a 3xx status code
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations cobrowsesession participant communication wrapup internal server error response has a 4xx status code
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations cobrowsesession participant communication wrapup internal server error response has a 5xx status code
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations cobrowsesession participant communication wrapup internal server error response a status code equal to that given
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsCobrowsesessionParticipantCommunicationWrapupInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsCobrowsesessionParticipantCommunicationWrapupInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCobrowsesessionParticipantCommunicationWrapupServiceUnavailable creates a GetConversationsCobrowsesessionParticipantCommunicationWrapupServiceUnavailable with default headers values
func NewGetConversationsCobrowsesessionParticipantCommunicationWrapupServiceUnavailable() *GetConversationsCobrowsesessionParticipantCommunicationWrapupServiceUnavailable {
	return &GetConversationsCobrowsesessionParticipantCommunicationWrapupServiceUnavailable{}
}

/*
GetConversationsCobrowsesessionParticipantCommunicationWrapupServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetConversationsCobrowsesessionParticipantCommunicationWrapupServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations cobrowsesession participant communication wrapup service unavailable response has a 2xx status code
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations cobrowsesession participant communication wrapup service unavailable response has a 3xx status code
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations cobrowsesession participant communication wrapup service unavailable response has a 4xx status code
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations cobrowsesession participant communication wrapup service unavailable response has a 5xx status code
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations cobrowsesession participant communication wrapup service unavailable response a status code equal to that given
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsCobrowsesessionParticipantCommunicationWrapupServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsCobrowsesessionParticipantCommunicationWrapupServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCobrowsesessionParticipantCommunicationWrapupGatewayTimeout creates a GetConversationsCobrowsesessionParticipantCommunicationWrapupGatewayTimeout with default headers values
func NewGetConversationsCobrowsesessionParticipantCommunicationWrapupGatewayTimeout() *GetConversationsCobrowsesessionParticipantCommunicationWrapupGatewayTimeout {
	return &GetConversationsCobrowsesessionParticipantCommunicationWrapupGatewayTimeout{}
}

/*
GetConversationsCobrowsesessionParticipantCommunicationWrapupGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetConversationsCobrowsesessionParticipantCommunicationWrapupGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations cobrowsesession participant communication wrapup gateway timeout response has a 2xx status code
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations cobrowsesession participant communication wrapup gateway timeout response has a 3xx status code
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations cobrowsesession participant communication wrapup gateway timeout response has a 4xx status code
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations cobrowsesession participant communication wrapup gateway timeout response has a 5xx status code
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations cobrowsesession participant communication wrapup gateway timeout response a status code equal to that given
func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsCobrowsesessionParticipantCommunicationWrapupGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsCobrowsesessionParticipantCommunicationWrapupGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCobrowsesessionParticipantCommunicationWrapupGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
