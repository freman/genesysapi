// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// NewPatchConversationsMessagingIntegrationsOpenIntegrationIDParams creates a new PatchConversationsMessagingIntegrationsOpenIntegrationIDParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPatchConversationsMessagingIntegrationsOpenIntegrationIDParams() *PatchConversationsMessagingIntegrationsOpenIntegrationIDParams {
	return &PatchConversationsMessagingIntegrationsOpenIntegrationIDParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPatchConversationsMessagingIntegrationsOpenIntegrationIDParamsWithTimeout creates a new PatchConversationsMessagingIntegrationsOpenIntegrationIDParams object
// with the ability to set a timeout on a request.
func NewPatchConversationsMessagingIntegrationsOpenIntegrationIDParamsWithTimeout(timeout time.Duration) *PatchConversationsMessagingIntegrationsOpenIntegrationIDParams {
	return &PatchConversationsMessagingIntegrationsOpenIntegrationIDParams{
		timeout: timeout,
	}
}

// NewPatchConversationsMessagingIntegrationsOpenIntegrationIDParamsWithContext creates a new PatchConversationsMessagingIntegrationsOpenIntegrationIDParams object
// with the ability to set a context for a request.
func NewPatchConversationsMessagingIntegrationsOpenIntegrationIDParamsWithContext(ctx context.Context) *PatchConversationsMessagingIntegrationsOpenIntegrationIDParams {
	return &PatchConversationsMessagingIntegrationsOpenIntegrationIDParams{
		Context: ctx,
	}
}

// NewPatchConversationsMessagingIntegrationsOpenIntegrationIDParamsWithHTTPClient creates a new PatchConversationsMessagingIntegrationsOpenIntegrationIDParams object
// with the ability to set a custom HTTPClient for a request.
func NewPatchConversationsMessagingIntegrationsOpenIntegrationIDParamsWithHTTPClient(client *http.Client) *PatchConversationsMessagingIntegrationsOpenIntegrationIDParams {
	return &PatchConversationsMessagingIntegrationsOpenIntegrationIDParams{
		HTTPClient: client,
	}
}

/*
PatchConversationsMessagingIntegrationsOpenIntegrationIDParams contains all the parameters to send to the API endpoint

	for the patch conversations messaging integrations open integration Id operation.

	Typically these are written to a http.Request.
*/
type PatchConversationsMessagingIntegrationsOpenIntegrationIDParams struct {

	/* Body.

	   OpenIntegrationUpdateRequest
	*/
	Body *models.OpenIntegrationUpdateRequest

	/* IntegrationID.

	   Integration ID
	*/
	IntegrationID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the patch conversations messaging integrations open integration Id params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PatchConversationsMessagingIntegrationsOpenIntegrationIDParams) WithDefaults() *PatchConversationsMessagingIntegrationsOpenIntegrationIDParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the patch conversations messaging integrations open integration Id params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PatchConversationsMessagingIntegrationsOpenIntegrationIDParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the patch conversations messaging integrations open integration Id params
func (o *PatchConversationsMessagingIntegrationsOpenIntegrationIDParams) WithTimeout(timeout time.Duration) *PatchConversationsMessagingIntegrationsOpenIntegrationIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the patch conversations messaging integrations open integration Id params
func (o *PatchConversationsMessagingIntegrationsOpenIntegrationIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the patch conversations messaging integrations open integration Id params
func (o *PatchConversationsMessagingIntegrationsOpenIntegrationIDParams) WithContext(ctx context.Context) *PatchConversationsMessagingIntegrationsOpenIntegrationIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the patch conversations messaging integrations open integration Id params
func (o *PatchConversationsMessagingIntegrationsOpenIntegrationIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the patch conversations messaging integrations open integration Id params
func (o *PatchConversationsMessagingIntegrationsOpenIntegrationIDParams) WithHTTPClient(client *http.Client) *PatchConversationsMessagingIntegrationsOpenIntegrationIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the patch conversations messaging integrations open integration Id params
func (o *PatchConversationsMessagingIntegrationsOpenIntegrationIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the patch conversations messaging integrations open integration Id params
func (o *PatchConversationsMessagingIntegrationsOpenIntegrationIDParams) WithBody(body *models.OpenIntegrationUpdateRequest) *PatchConversationsMessagingIntegrationsOpenIntegrationIDParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the patch conversations messaging integrations open integration Id params
func (o *PatchConversationsMessagingIntegrationsOpenIntegrationIDParams) SetBody(body *models.OpenIntegrationUpdateRequest) {
	o.Body = body
}

// WithIntegrationID adds the integrationID to the patch conversations messaging integrations open integration Id params
func (o *PatchConversationsMessagingIntegrationsOpenIntegrationIDParams) WithIntegrationID(integrationID string) *PatchConversationsMessagingIntegrationsOpenIntegrationIDParams {
	o.SetIntegrationID(integrationID)
	return o
}

// SetIntegrationID adds the integrationId to the patch conversations messaging integrations open integration Id params
func (o *PatchConversationsMessagingIntegrationsOpenIntegrationIDParams) SetIntegrationID(integrationID string) {
	o.IntegrationID = integrationID
}

// WriteToRequest writes these params to a swagger request
func (o *PatchConversationsMessagingIntegrationsOpenIntegrationIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param integrationId
	if err := r.SetPathParam("integrationId", o.IntegrationID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
