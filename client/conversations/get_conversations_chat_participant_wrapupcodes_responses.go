// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetConversationsChatParticipantWrapupcodesReader is a Reader for the GetConversationsChatParticipantWrapupcodes structure.
type GetConversationsChatParticipantWrapupcodesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConversationsChatParticipantWrapupcodesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConversationsChatParticipantWrapupcodesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetConversationsChatParticipantWrapupcodesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetConversationsChatParticipantWrapupcodesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetConversationsChatParticipantWrapupcodesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetConversationsChatParticipantWrapupcodesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetConversationsChatParticipantWrapupcodesRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetConversationsChatParticipantWrapupcodesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetConversationsChatParticipantWrapupcodesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetConversationsChatParticipantWrapupcodesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetConversationsChatParticipantWrapupcodesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetConversationsChatParticipantWrapupcodesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetConversationsChatParticipantWrapupcodesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetConversationsChatParticipantWrapupcodesOK creates a GetConversationsChatParticipantWrapupcodesOK with default headers values
func NewGetConversationsChatParticipantWrapupcodesOK() *GetConversationsChatParticipantWrapupcodesOK {
	return &GetConversationsChatParticipantWrapupcodesOK{}
}

/*GetConversationsChatParticipantWrapupcodesOK handles this case with default header values.

successful operation
*/
type GetConversationsChatParticipantWrapupcodesOK struct {
	Payload []*models.WrapupCode
}

func (o *GetConversationsChatParticipantWrapupcodesOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/chats/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsChatParticipantWrapupcodesOK  %+v", 200, o.Payload)
}

func (o *GetConversationsChatParticipantWrapupcodesOK) GetPayload() []*models.WrapupCode {
	return o.Payload
}

func (o *GetConversationsChatParticipantWrapupcodesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsChatParticipantWrapupcodesBadRequest creates a GetConversationsChatParticipantWrapupcodesBadRequest with default headers values
func NewGetConversationsChatParticipantWrapupcodesBadRequest() *GetConversationsChatParticipantWrapupcodesBadRequest {
	return &GetConversationsChatParticipantWrapupcodesBadRequest{}
}

/*GetConversationsChatParticipantWrapupcodesBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetConversationsChatParticipantWrapupcodesBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsChatParticipantWrapupcodesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/chats/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsChatParticipantWrapupcodesBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsChatParticipantWrapupcodesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsChatParticipantWrapupcodesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsChatParticipantWrapupcodesUnauthorized creates a GetConversationsChatParticipantWrapupcodesUnauthorized with default headers values
func NewGetConversationsChatParticipantWrapupcodesUnauthorized() *GetConversationsChatParticipantWrapupcodesUnauthorized {
	return &GetConversationsChatParticipantWrapupcodesUnauthorized{}
}

/*GetConversationsChatParticipantWrapupcodesUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetConversationsChatParticipantWrapupcodesUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsChatParticipantWrapupcodesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/chats/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsChatParticipantWrapupcodesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsChatParticipantWrapupcodesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsChatParticipantWrapupcodesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsChatParticipantWrapupcodesForbidden creates a GetConversationsChatParticipantWrapupcodesForbidden with default headers values
func NewGetConversationsChatParticipantWrapupcodesForbidden() *GetConversationsChatParticipantWrapupcodesForbidden {
	return &GetConversationsChatParticipantWrapupcodesForbidden{}
}

/*GetConversationsChatParticipantWrapupcodesForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetConversationsChatParticipantWrapupcodesForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsChatParticipantWrapupcodesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/chats/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsChatParticipantWrapupcodesForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsChatParticipantWrapupcodesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsChatParticipantWrapupcodesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsChatParticipantWrapupcodesNotFound creates a GetConversationsChatParticipantWrapupcodesNotFound with default headers values
func NewGetConversationsChatParticipantWrapupcodesNotFound() *GetConversationsChatParticipantWrapupcodesNotFound {
	return &GetConversationsChatParticipantWrapupcodesNotFound{}
}

/*GetConversationsChatParticipantWrapupcodesNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetConversationsChatParticipantWrapupcodesNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsChatParticipantWrapupcodesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/chats/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsChatParticipantWrapupcodesNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsChatParticipantWrapupcodesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsChatParticipantWrapupcodesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsChatParticipantWrapupcodesRequestTimeout creates a GetConversationsChatParticipantWrapupcodesRequestTimeout with default headers values
func NewGetConversationsChatParticipantWrapupcodesRequestTimeout() *GetConversationsChatParticipantWrapupcodesRequestTimeout {
	return &GetConversationsChatParticipantWrapupcodesRequestTimeout{}
}

/*GetConversationsChatParticipantWrapupcodesRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetConversationsChatParticipantWrapupcodesRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsChatParticipantWrapupcodesRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/chats/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsChatParticipantWrapupcodesRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationsChatParticipantWrapupcodesRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsChatParticipantWrapupcodesRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsChatParticipantWrapupcodesRequestEntityTooLarge creates a GetConversationsChatParticipantWrapupcodesRequestEntityTooLarge with default headers values
func NewGetConversationsChatParticipantWrapupcodesRequestEntityTooLarge() *GetConversationsChatParticipantWrapupcodesRequestEntityTooLarge {
	return &GetConversationsChatParticipantWrapupcodesRequestEntityTooLarge{}
}

/*GetConversationsChatParticipantWrapupcodesRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetConversationsChatParticipantWrapupcodesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsChatParticipantWrapupcodesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/chats/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsChatParticipantWrapupcodesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsChatParticipantWrapupcodesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsChatParticipantWrapupcodesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsChatParticipantWrapupcodesUnsupportedMediaType creates a GetConversationsChatParticipantWrapupcodesUnsupportedMediaType with default headers values
func NewGetConversationsChatParticipantWrapupcodesUnsupportedMediaType() *GetConversationsChatParticipantWrapupcodesUnsupportedMediaType {
	return &GetConversationsChatParticipantWrapupcodesUnsupportedMediaType{}
}

/*GetConversationsChatParticipantWrapupcodesUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetConversationsChatParticipantWrapupcodesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsChatParticipantWrapupcodesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/chats/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsChatParticipantWrapupcodesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsChatParticipantWrapupcodesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsChatParticipantWrapupcodesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsChatParticipantWrapupcodesTooManyRequests creates a GetConversationsChatParticipantWrapupcodesTooManyRequests with default headers values
func NewGetConversationsChatParticipantWrapupcodesTooManyRequests() *GetConversationsChatParticipantWrapupcodesTooManyRequests {
	return &GetConversationsChatParticipantWrapupcodesTooManyRequests{}
}

/*GetConversationsChatParticipantWrapupcodesTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetConversationsChatParticipantWrapupcodesTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsChatParticipantWrapupcodesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/chats/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsChatParticipantWrapupcodesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsChatParticipantWrapupcodesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsChatParticipantWrapupcodesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsChatParticipantWrapupcodesInternalServerError creates a GetConversationsChatParticipantWrapupcodesInternalServerError with default headers values
func NewGetConversationsChatParticipantWrapupcodesInternalServerError() *GetConversationsChatParticipantWrapupcodesInternalServerError {
	return &GetConversationsChatParticipantWrapupcodesInternalServerError{}
}

/*GetConversationsChatParticipantWrapupcodesInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetConversationsChatParticipantWrapupcodesInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsChatParticipantWrapupcodesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/chats/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsChatParticipantWrapupcodesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsChatParticipantWrapupcodesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsChatParticipantWrapupcodesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsChatParticipantWrapupcodesServiceUnavailable creates a GetConversationsChatParticipantWrapupcodesServiceUnavailable with default headers values
func NewGetConversationsChatParticipantWrapupcodesServiceUnavailable() *GetConversationsChatParticipantWrapupcodesServiceUnavailable {
	return &GetConversationsChatParticipantWrapupcodesServiceUnavailable{}
}

/*GetConversationsChatParticipantWrapupcodesServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetConversationsChatParticipantWrapupcodesServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsChatParticipantWrapupcodesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/chats/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsChatParticipantWrapupcodesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsChatParticipantWrapupcodesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsChatParticipantWrapupcodesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsChatParticipantWrapupcodesGatewayTimeout creates a GetConversationsChatParticipantWrapupcodesGatewayTimeout with default headers values
func NewGetConversationsChatParticipantWrapupcodesGatewayTimeout() *GetConversationsChatParticipantWrapupcodesGatewayTimeout {
	return &GetConversationsChatParticipantWrapupcodesGatewayTimeout{}
}

/*GetConversationsChatParticipantWrapupcodesGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetConversationsChatParticipantWrapupcodesGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsChatParticipantWrapupcodesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/chats/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsChatParticipantWrapupcodesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsChatParticipantWrapupcodesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsChatParticipantWrapupcodesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
