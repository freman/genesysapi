// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetConversationsSettingsReader is a Reader for the GetConversationsSettings structure.
type GetConversationsSettingsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConversationsSettingsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConversationsSettingsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetConversationsSettingsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetConversationsSettingsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetConversationsSettingsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetConversationsSettingsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetConversationsSettingsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetConversationsSettingsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetConversationsSettingsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetConversationsSettingsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetConversationsSettingsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetConversationsSettingsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetConversationsSettingsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetConversationsSettingsOK creates a GetConversationsSettingsOK with default headers values
func NewGetConversationsSettingsOK() *GetConversationsSettingsOK {
	return &GetConversationsSettingsOK{}
}

/*
GetConversationsSettingsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetConversationsSettingsOK struct {
	Payload *models.Settings
}

// IsSuccess returns true when this get conversations settings o k response has a 2xx status code
func (o *GetConversationsSettingsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get conversations settings o k response has a 3xx status code
func (o *GetConversationsSettingsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations settings o k response has a 4xx status code
func (o *GetConversationsSettingsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations settings o k response has a 5xx status code
func (o *GetConversationsSettingsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations settings o k response a status code equal to that given
func (o *GetConversationsSettingsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetConversationsSettingsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/settings][%d] getConversationsSettingsOK  %+v", 200, o.Payload)
}

func (o *GetConversationsSettingsOK) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/settings][%d] getConversationsSettingsOK  %+v", 200, o.Payload)
}

func (o *GetConversationsSettingsOK) GetPayload() *models.Settings {
	return o.Payload
}

func (o *GetConversationsSettingsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Settings)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsSettingsBadRequest creates a GetConversationsSettingsBadRequest with default headers values
func NewGetConversationsSettingsBadRequest() *GetConversationsSettingsBadRequest {
	return &GetConversationsSettingsBadRequest{}
}

/*
GetConversationsSettingsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetConversationsSettingsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations settings bad request response has a 2xx status code
func (o *GetConversationsSettingsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations settings bad request response has a 3xx status code
func (o *GetConversationsSettingsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations settings bad request response has a 4xx status code
func (o *GetConversationsSettingsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations settings bad request response has a 5xx status code
func (o *GetConversationsSettingsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations settings bad request response a status code equal to that given
func (o *GetConversationsSettingsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetConversationsSettingsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/settings][%d] getConversationsSettingsBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsSettingsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/settings][%d] getConversationsSettingsBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsSettingsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsSettingsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsSettingsUnauthorized creates a GetConversationsSettingsUnauthorized with default headers values
func NewGetConversationsSettingsUnauthorized() *GetConversationsSettingsUnauthorized {
	return &GetConversationsSettingsUnauthorized{}
}

/*
GetConversationsSettingsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetConversationsSettingsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations settings unauthorized response has a 2xx status code
func (o *GetConversationsSettingsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations settings unauthorized response has a 3xx status code
func (o *GetConversationsSettingsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations settings unauthorized response has a 4xx status code
func (o *GetConversationsSettingsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations settings unauthorized response has a 5xx status code
func (o *GetConversationsSettingsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations settings unauthorized response a status code equal to that given
func (o *GetConversationsSettingsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetConversationsSettingsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/settings][%d] getConversationsSettingsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsSettingsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/settings][%d] getConversationsSettingsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsSettingsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsSettingsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsSettingsForbidden creates a GetConversationsSettingsForbidden with default headers values
func NewGetConversationsSettingsForbidden() *GetConversationsSettingsForbidden {
	return &GetConversationsSettingsForbidden{}
}

/*
GetConversationsSettingsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetConversationsSettingsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations settings forbidden response has a 2xx status code
func (o *GetConversationsSettingsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations settings forbidden response has a 3xx status code
func (o *GetConversationsSettingsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations settings forbidden response has a 4xx status code
func (o *GetConversationsSettingsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations settings forbidden response has a 5xx status code
func (o *GetConversationsSettingsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations settings forbidden response a status code equal to that given
func (o *GetConversationsSettingsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetConversationsSettingsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/settings][%d] getConversationsSettingsForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsSettingsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/settings][%d] getConversationsSettingsForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsSettingsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsSettingsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsSettingsNotFound creates a GetConversationsSettingsNotFound with default headers values
func NewGetConversationsSettingsNotFound() *GetConversationsSettingsNotFound {
	return &GetConversationsSettingsNotFound{}
}

/*
GetConversationsSettingsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetConversationsSettingsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations settings not found response has a 2xx status code
func (o *GetConversationsSettingsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations settings not found response has a 3xx status code
func (o *GetConversationsSettingsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations settings not found response has a 4xx status code
func (o *GetConversationsSettingsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations settings not found response has a 5xx status code
func (o *GetConversationsSettingsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations settings not found response a status code equal to that given
func (o *GetConversationsSettingsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetConversationsSettingsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/settings][%d] getConversationsSettingsNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsSettingsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/settings][%d] getConversationsSettingsNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsSettingsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsSettingsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsSettingsRequestTimeout creates a GetConversationsSettingsRequestTimeout with default headers values
func NewGetConversationsSettingsRequestTimeout() *GetConversationsSettingsRequestTimeout {
	return &GetConversationsSettingsRequestTimeout{}
}

/*
GetConversationsSettingsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetConversationsSettingsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations settings request timeout response has a 2xx status code
func (o *GetConversationsSettingsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations settings request timeout response has a 3xx status code
func (o *GetConversationsSettingsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations settings request timeout response has a 4xx status code
func (o *GetConversationsSettingsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations settings request timeout response has a 5xx status code
func (o *GetConversationsSettingsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations settings request timeout response a status code equal to that given
func (o *GetConversationsSettingsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetConversationsSettingsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/settings][%d] getConversationsSettingsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationsSettingsRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/settings][%d] getConversationsSettingsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationsSettingsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsSettingsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsSettingsRequestEntityTooLarge creates a GetConversationsSettingsRequestEntityTooLarge with default headers values
func NewGetConversationsSettingsRequestEntityTooLarge() *GetConversationsSettingsRequestEntityTooLarge {
	return &GetConversationsSettingsRequestEntityTooLarge{}
}

/*
GetConversationsSettingsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetConversationsSettingsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations settings request entity too large response has a 2xx status code
func (o *GetConversationsSettingsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations settings request entity too large response has a 3xx status code
func (o *GetConversationsSettingsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations settings request entity too large response has a 4xx status code
func (o *GetConversationsSettingsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations settings request entity too large response has a 5xx status code
func (o *GetConversationsSettingsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations settings request entity too large response a status code equal to that given
func (o *GetConversationsSettingsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetConversationsSettingsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/settings][%d] getConversationsSettingsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsSettingsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/settings][%d] getConversationsSettingsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsSettingsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsSettingsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsSettingsUnsupportedMediaType creates a GetConversationsSettingsUnsupportedMediaType with default headers values
func NewGetConversationsSettingsUnsupportedMediaType() *GetConversationsSettingsUnsupportedMediaType {
	return &GetConversationsSettingsUnsupportedMediaType{}
}

/*
GetConversationsSettingsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetConversationsSettingsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations settings unsupported media type response has a 2xx status code
func (o *GetConversationsSettingsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations settings unsupported media type response has a 3xx status code
func (o *GetConversationsSettingsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations settings unsupported media type response has a 4xx status code
func (o *GetConversationsSettingsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations settings unsupported media type response has a 5xx status code
func (o *GetConversationsSettingsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations settings unsupported media type response a status code equal to that given
func (o *GetConversationsSettingsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetConversationsSettingsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/settings][%d] getConversationsSettingsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsSettingsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/settings][%d] getConversationsSettingsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsSettingsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsSettingsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsSettingsTooManyRequests creates a GetConversationsSettingsTooManyRequests with default headers values
func NewGetConversationsSettingsTooManyRequests() *GetConversationsSettingsTooManyRequests {
	return &GetConversationsSettingsTooManyRequests{}
}

/*
GetConversationsSettingsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetConversationsSettingsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations settings too many requests response has a 2xx status code
func (o *GetConversationsSettingsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations settings too many requests response has a 3xx status code
func (o *GetConversationsSettingsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations settings too many requests response has a 4xx status code
func (o *GetConversationsSettingsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations settings too many requests response has a 5xx status code
func (o *GetConversationsSettingsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations settings too many requests response a status code equal to that given
func (o *GetConversationsSettingsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetConversationsSettingsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/settings][%d] getConversationsSettingsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsSettingsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/settings][%d] getConversationsSettingsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsSettingsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsSettingsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsSettingsInternalServerError creates a GetConversationsSettingsInternalServerError with default headers values
func NewGetConversationsSettingsInternalServerError() *GetConversationsSettingsInternalServerError {
	return &GetConversationsSettingsInternalServerError{}
}

/*
GetConversationsSettingsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetConversationsSettingsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations settings internal server error response has a 2xx status code
func (o *GetConversationsSettingsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations settings internal server error response has a 3xx status code
func (o *GetConversationsSettingsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations settings internal server error response has a 4xx status code
func (o *GetConversationsSettingsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations settings internal server error response has a 5xx status code
func (o *GetConversationsSettingsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations settings internal server error response a status code equal to that given
func (o *GetConversationsSettingsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetConversationsSettingsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/settings][%d] getConversationsSettingsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsSettingsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/settings][%d] getConversationsSettingsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsSettingsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsSettingsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsSettingsServiceUnavailable creates a GetConversationsSettingsServiceUnavailable with default headers values
func NewGetConversationsSettingsServiceUnavailable() *GetConversationsSettingsServiceUnavailable {
	return &GetConversationsSettingsServiceUnavailable{}
}

/*
GetConversationsSettingsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetConversationsSettingsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations settings service unavailable response has a 2xx status code
func (o *GetConversationsSettingsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations settings service unavailable response has a 3xx status code
func (o *GetConversationsSettingsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations settings service unavailable response has a 4xx status code
func (o *GetConversationsSettingsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations settings service unavailable response has a 5xx status code
func (o *GetConversationsSettingsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations settings service unavailable response a status code equal to that given
func (o *GetConversationsSettingsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetConversationsSettingsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/settings][%d] getConversationsSettingsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsSettingsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/settings][%d] getConversationsSettingsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsSettingsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsSettingsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsSettingsGatewayTimeout creates a GetConversationsSettingsGatewayTimeout with default headers values
func NewGetConversationsSettingsGatewayTimeout() *GetConversationsSettingsGatewayTimeout {
	return &GetConversationsSettingsGatewayTimeout{}
}

/*
GetConversationsSettingsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetConversationsSettingsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations settings gateway timeout response has a 2xx status code
func (o *GetConversationsSettingsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations settings gateway timeout response has a 3xx status code
func (o *GetConversationsSettingsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations settings gateway timeout response has a 4xx status code
func (o *GetConversationsSettingsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations settings gateway timeout response has a 5xx status code
func (o *GetConversationsSettingsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations settings gateway timeout response a status code equal to that given
func (o *GetConversationsSettingsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetConversationsSettingsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/settings][%d] getConversationsSettingsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsSettingsGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/settings][%d] getConversationsSettingsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsSettingsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsSettingsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
