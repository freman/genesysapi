// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetConversationsReader is a Reader for the GetConversations structure.
type GetConversationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConversationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConversationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetConversationsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetConversationsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetConversationsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetConversationsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetConversationsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetConversationsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetConversationsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetConversationsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetConversationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetConversationsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetConversationsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetConversationsOK creates a GetConversationsOK with default headers values
func NewGetConversationsOK() *GetConversationsOK {
	return &GetConversationsOK{}
}

/*
GetConversationsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetConversationsOK struct {
	Payload *models.ConversationEntityListing
}

// IsSuccess returns true when this get conversations o k response has a 2xx status code
func (o *GetConversationsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get conversations o k response has a 3xx status code
func (o *GetConversationsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations o k response has a 4xx status code
func (o *GetConversationsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations o k response has a 5xx status code
func (o *GetConversationsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations o k response a status code equal to that given
func (o *GetConversationsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetConversationsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations][%d] getConversationsOK  %+v", 200, o.Payload)
}

func (o *GetConversationsOK) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations][%d] getConversationsOK  %+v", 200, o.Payload)
}

func (o *GetConversationsOK) GetPayload() *models.ConversationEntityListing {
	return o.Payload
}

func (o *GetConversationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConversationEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsBadRequest creates a GetConversationsBadRequest with default headers values
func NewGetConversationsBadRequest() *GetConversationsBadRequest {
	return &GetConversationsBadRequest{}
}

/*
GetConversationsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetConversationsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations bad request response has a 2xx status code
func (o *GetConversationsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations bad request response has a 3xx status code
func (o *GetConversationsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations bad request response has a 4xx status code
func (o *GetConversationsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations bad request response has a 5xx status code
func (o *GetConversationsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations bad request response a status code equal to that given
func (o *GetConversationsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetConversationsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations][%d] getConversationsBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations][%d] getConversationsBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsUnauthorized creates a GetConversationsUnauthorized with default headers values
func NewGetConversationsUnauthorized() *GetConversationsUnauthorized {
	return &GetConversationsUnauthorized{}
}

/*
GetConversationsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetConversationsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations unauthorized response has a 2xx status code
func (o *GetConversationsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations unauthorized response has a 3xx status code
func (o *GetConversationsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations unauthorized response has a 4xx status code
func (o *GetConversationsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations unauthorized response has a 5xx status code
func (o *GetConversationsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations unauthorized response a status code equal to that given
func (o *GetConversationsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetConversationsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations][%d] getConversationsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations][%d] getConversationsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsForbidden creates a GetConversationsForbidden with default headers values
func NewGetConversationsForbidden() *GetConversationsForbidden {
	return &GetConversationsForbidden{}
}

/*
GetConversationsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetConversationsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations forbidden response has a 2xx status code
func (o *GetConversationsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations forbidden response has a 3xx status code
func (o *GetConversationsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations forbidden response has a 4xx status code
func (o *GetConversationsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations forbidden response has a 5xx status code
func (o *GetConversationsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations forbidden response a status code equal to that given
func (o *GetConversationsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetConversationsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations][%d] getConversationsForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations][%d] getConversationsForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsNotFound creates a GetConversationsNotFound with default headers values
func NewGetConversationsNotFound() *GetConversationsNotFound {
	return &GetConversationsNotFound{}
}

/*
GetConversationsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetConversationsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations not found response has a 2xx status code
func (o *GetConversationsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations not found response has a 3xx status code
func (o *GetConversationsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations not found response has a 4xx status code
func (o *GetConversationsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations not found response has a 5xx status code
func (o *GetConversationsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations not found response a status code equal to that given
func (o *GetConversationsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetConversationsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations][%d] getConversationsNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations][%d] getConversationsNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsRequestTimeout creates a GetConversationsRequestTimeout with default headers values
func NewGetConversationsRequestTimeout() *GetConversationsRequestTimeout {
	return &GetConversationsRequestTimeout{}
}

/*
GetConversationsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetConversationsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations request timeout response has a 2xx status code
func (o *GetConversationsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations request timeout response has a 3xx status code
func (o *GetConversationsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations request timeout response has a 4xx status code
func (o *GetConversationsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations request timeout response has a 5xx status code
func (o *GetConversationsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations request timeout response a status code equal to that given
func (o *GetConversationsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetConversationsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations][%d] getConversationsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationsRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations][%d] getConversationsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsRequestEntityTooLarge creates a GetConversationsRequestEntityTooLarge with default headers values
func NewGetConversationsRequestEntityTooLarge() *GetConversationsRequestEntityTooLarge {
	return &GetConversationsRequestEntityTooLarge{}
}

/*
GetConversationsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetConversationsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations request entity too large response has a 2xx status code
func (o *GetConversationsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations request entity too large response has a 3xx status code
func (o *GetConversationsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations request entity too large response has a 4xx status code
func (o *GetConversationsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations request entity too large response has a 5xx status code
func (o *GetConversationsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations request entity too large response a status code equal to that given
func (o *GetConversationsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetConversationsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations][%d] getConversationsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations][%d] getConversationsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsUnsupportedMediaType creates a GetConversationsUnsupportedMediaType with default headers values
func NewGetConversationsUnsupportedMediaType() *GetConversationsUnsupportedMediaType {
	return &GetConversationsUnsupportedMediaType{}
}

/*
GetConversationsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetConversationsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations unsupported media type response has a 2xx status code
func (o *GetConversationsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations unsupported media type response has a 3xx status code
func (o *GetConversationsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations unsupported media type response has a 4xx status code
func (o *GetConversationsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations unsupported media type response has a 5xx status code
func (o *GetConversationsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations unsupported media type response a status code equal to that given
func (o *GetConversationsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetConversationsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations][%d] getConversationsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations][%d] getConversationsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsTooManyRequests creates a GetConversationsTooManyRequests with default headers values
func NewGetConversationsTooManyRequests() *GetConversationsTooManyRequests {
	return &GetConversationsTooManyRequests{}
}

/*
GetConversationsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetConversationsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations too many requests response has a 2xx status code
func (o *GetConversationsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations too many requests response has a 3xx status code
func (o *GetConversationsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations too many requests response has a 4xx status code
func (o *GetConversationsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations too many requests response has a 5xx status code
func (o *GetConversationsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations too many requests response a status code equal to that given
func (o *GetConversationsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetConversationsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations][%d] getConversationsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations][%d] getConversationsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsInternalServerError creates a GetConversationsInternalServerError with default headers values
func NewGetConversationsInternalServerError() *GetConversationsInternalServerError {
	return &GetConversationsInternalServerError{}
}

/*
GetConversationsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetConversationsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations internal server error response has a 2xx status code
func (o *GetConversationsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations internal server error response has a 3xx status code
func (o *GetConversationsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations internal server error response has a 4xx status code
func (o *GetConversationsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations internal server error response has a 5xx status code
func (o *GetConversationsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations internal server error response a status code equal to that given
func (o *GetConversationsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetConversationsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations][%d] getConversationsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations][%d] getConversationsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsServiceUnavailable creates a GetConversationsServiceUnavailable with default headers values
func NewGetConversationsServiceUnavailable() *GetConversationsServiceUnavailable {
	return &GetConversationsServiceUnavailable{}
}

/*
GetConversationsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetConversationsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations service unavailable response has a 2xx status code
func (o *GetConversationsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations service unavailable response has a 3xx status code
func (o *GetConversationsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations service unavailable response has a 4xx status code
func (o *GetConversationsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations service unavailable response has a 5xx status code
func (o *GetConversationsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations service unavailable response a status code equal to that given
func (o *GetConversationsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetConversationsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations][%d] getConversationsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations][%d] getConversationsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsGatewayTimeout creates a GetConversationsGatewayTimeout with default headers values
func NewGetConversationsGatewayTimeout() *GetConversationsGatewayTimeout {
	return &GetConversationsGatewayTimeout{}
}

/*
GetConversationsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetConversationsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations gateway timeout response has a 2xx status code
func (o *GetConversationsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations gateway timeout response has a 3xx status code
func (o *GetConversationsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations gateway timeout response has a 4xx status code
func (o *GetConversationsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations gateway timeout response has a 5xx status code
func (o *GetConversationsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations gateway timeout response a status code equal to that given
func (o *GetConversationsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetConversationsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations][%d] getConversationsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations][%d] getConversationsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
