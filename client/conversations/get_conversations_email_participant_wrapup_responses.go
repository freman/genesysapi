// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetConversationsEmailParticipantWrapupReader is a Reader for the GetConversationsEmailParticipantWrapup structure.
type GetConversationsEmailParticipantWrapupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConversationsEmailParticipantWrapupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConversationsEmailParticipantWrapupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetConversationsEmailParticipantWrapupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetConversationsEmailParticipantWrapupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetConversationsEmailParticipantWrapupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetConversationsEmailParticipantWrapupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetConversationsEmailParticipantWrapupRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetConversationsEmailParticipantWrapupRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetConversationsEmailParticipantWrapupUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetConversationsEmailParticipantWrapupTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetConversationsEmailParticipantWrapupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetConversationsEmailParticipantWrapupServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetConversationsEmailParticipantWrapupGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetConversationsEmailParticipantWrapupOK creates a GetConversationsEmailParticipantWrapupOK with default headers values
func NewGetConversationsEmailParticipantWrapupOK() *GetConversationsEmailParticipantWrapupOK {
	return &GetConversationsEmailParticipantWrapupOK{}
}

/*
GetConversationsEmailParticipantWrapupOK describes a response with status code 200, with default header values.

successful operation
*/
type GetConversationsEmailParticipantWrapupOK struct {
	Payload *models.AssignedWrapupCode
}

// IsSuccess returns true when this get conversations email participant wrapup o k response has a 2xx status code
func (o *GetConversationsEmailParticipantWrapupOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get conversations email participant wrapup o k response has a 3xx status code
func (o *GetConversationsEmailParticipantWrapupOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email participant wrapup o k response has a 4xx status code
func (o *GetConversationsEmailParticipantWrapupOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations email participant wrapup o k response has a 5xx status code
func (o *GetConversationsEmailParticipantWrapupOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations email participant wrapup o k response a status code equal to that given
func (o *GetConversationsEmailParticipantWrapupOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetConversationsEmailParticipantWrapupOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsEmailParticipantWrapupOK  %+v", 200, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupOK) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsEmailParticipantWrapupOK  %+v", 200, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupOK) GetPayload() *models.AssignedWrapupCode {
	return o.Payload
}

func (o *GetConversationsEmailParticipantWrapupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AssignedWrapupCode)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantWrapupBadRequest creates a GetConversationsEmailParticipantWrapupBadRequest with default headers values
func NewGetConversationsEmailParticipantWrapupBadRequest() *GetConversationsEmailParticipantWrapupBadRequest {
	return &GetConversationsEmailParticipantWrapupBadRequest{}
}

/*
GetConversationsEmailParticipantWrapupBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetConversationsEmailParticipantWrapupBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email participant wrapup bad request response has a 2xx status code
func (o *GetConversationsEmailParticipantWrapupBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email participant wrapup bad request response has a 3xx status code
func (o *GetConversationsEmailParticipantWrapupBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email participant wrapup bad request response has a 4xx status code
func (o *GetConversationsEmailParticipantWrapupBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations email participant wrapup bad request response has a 5xx status code
func (o *GetConversationsEmailParticipantWrapupBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations email participant wrapup bad request response a status code equal to that given
func (o *GetConversationsEmailParticipantWrapupBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetConversationsEmailParticipantWrapupBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsEmailParticipantWrapupBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsEmailParticipantWrapupBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantWrapupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantWrapupUnauthorized creates a GetConversationsEmailParticipantWrapupUnauthorized with default headers values
func NewGetConversationsEmailParticipantWrapupUnauthorized() *GetConversationsEmailParticipantWrapupUnauthorized {
	return &GetConversationsEmailParticipantWrapupUnauthorized{}
}

/*
GetConversationsEmailParticipantWrapupUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetConversationsEmailParticipantWrapupUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email participant wrapup unauthorized response has a 2xx status code
func (o *GetConversationsEmailParticipantWrapupUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email participant wrapup unauthorized response has a 3xx status code
func (o *GetConversationsEmailParticipantWrapupUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email participant wrapup unauthorized response has a 4xx status code
func (o *GetConversationsEmailParticipantWrapupUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations email participant wrapup unauthorized response has a 5xx status code
func (o *GetConversationsEmailParticipantWrapupUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations email participant wrapup unauthorized response a status code equal to that given
func (o *GetConversationsEmailParticipantWrapupUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetConversationsEmailParticipantWrapupUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsEmailParticipantWrapupUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsEmailParticipantWrapupUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantWrapupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantWrapupForbidden creates a GetConversationsEmailParticipantWrapupForbidden with default headers values
func NewGetConversationsEmailParticipantWrapupForbidden() *GetConversationsEmailParticipantWrapupForbidden {
	return &GetConversationsEmailParticipantWrapupForbidden{}
}

/*
GetConversationsEmailParticipantWrapupForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetConversationsEmailParticipantWrapupForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email participant wrapup forbidden response has a 2xx status code
func (o *GetConversationsEmailParticipantWrapupForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email participant wrapup forbidden response has a 3xx status code
func (o *GetConversationsEmailParticipantWrapupForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email participant wrapup forbidden response has a 4xx status code
func (o *GetConversationsEmailParticipantWrapupForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations email participant wrapup forbidden response has a 5xx status code
func (o *GetConversationsEmailParticipantWrapupForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations email participant wrapup forbidden response a status code equal to that given
func (o *GetConversationsEmailParticipantWrapupForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetConversationsEmailParticipantWrapupForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsEmailParticipantWrapupForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsEmailParticipantWrapupForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantWrapupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantWrapupNotFound creates a GetConversationsEmailParticipantWrapupNotFound with default headers values
func NewGetConversationsEmailParticipantWrapupNotFound() *GetConversationsEmailParticipantWrapupNotFound {
	return &GetConversationsEmailParticipantWrapupNotFound{}
}

/*
GetConversationsEmailParticipantWrapupNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetConversationsEmailParticipantWrapupNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email participant wrapup not found response has a 2xx status code
func (o *GetConversationsEmailParticipantWrapupNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email participant wrapup not found response has a 3xx status code
func (o *GetConversationsEmailParticipantWrapupNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email participant wrapup not found response has a 4xx status code
func (o *GetConversationsEmailParticipantWrapupNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations email participant wrapup not found response has a 5xx status code
func (o *GetConversationsEmailParticipantWrapupNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations email participant wrapup not found response a status code equal to that given
func (o *GetConversationsEmailParticipantWrapupNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetConversationsEmailParticipantWrapupNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsEmailParticipantWrapupNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsEmailParticipantWrapupNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantWrapupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantWrapupRequestTimeout creates a GetConversationsEmailParticipantWrapupRequestTimeout with default headers values
func NewGetConversationsEmailParticipantWrapupRequestTimeout() *GetConversationsEmailParticipantWrapupRequestTimeout {
	return &GetConversationsEmailParticipantWrapupRequestTimeout{}
}

/*
GetConversationsEmailParticipantWrapupRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetConversationsEmailParticipantWrapupRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email participant wrapup request timeout response has a 2xx status code
func (o *GetConversationsEmailParticipantWrapupRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email participant wrapup request timeout response has a 3xx status code
func (o *GetConversationsEmailParticipantWrapupRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email participant wrapup request timeout response has a 4xx status code
func (o *GetConversationsEmailParticipantWrapupRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations email participant wrapup request timeout response has a 5xx status code
func (o *GetConversationsEmailParticipantWrapupRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations email participant wrapup request timeout response a status code equal to that given
func (o *GetConversationsEmailParticipantWrapupRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetConversationsEmailParticipantWrapupRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsEmailParticipantWrapupRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsEmailParticipantWrapupRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantWrapupRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantWrapupRequestEntityTooLarge creates a GetConversationsEmailParticipantWrapupRequestEntityTooLarge with default headers values
func NewGetConversationsEmailParticipantWrapupRequestEntityTooLarge() *GetConversationsEmailParticipantWrapupRequestEntityTooLarge {
	return &GetConversationsEmailParticipantWrapupRequestEntityTooLarge{}
}

/*
GetConversationsEmailParticipantWrapupRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetConversationsEmailParticipantWrapupRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email participant wrapup request entity too large response has a 2xx status code
func (o *GetConversationsEmailParticipantWrapupRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email participant wrapup request entity too large response has a 3xx status code
func (o *GetConversationsEmailParticipantWrapupRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email participant wrapup request entity too large response has a 4xx status code
func (o *GetConversationsEmailParticipantWrapupRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations email participant wrapup request entity too large response has a 5xx status code
func (o *GetConversationsEmailParticipantWrapupRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations email participant wrapup request entity too large response a status code equal to that given
func (o *GetConversationsEmailParticipantWrapupRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetConversationsEmailParticipantWrapupRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsEmailParticipantWrapupRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsEmailParticipantWrapupRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantWrapupRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantWrapupUnsupportedMediaType creates a GetConversationsEmailParticipantWrapupUnsupportedMediaType with default headers values
func NewGetConversationsEmailParticipantWrapupUnsupportedMediaType() *GetConversationsEmailParticipantWrapupUnsupportedMediaType {
	return &GetConversationsEmailParticipantWrapupUnsupportedMediaType{}
}

/*
GetConversationsEmailParticipantWrapupUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetConversationsEmailParticipantWrapupUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email participant wrapup unsupported media type response has a 2xx status code
func (o *GetConversationsEmailParticipantWrapupUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email participant wrapup unsupported media type response has a 3xx status code
func (o *GetConversationsEmailParticipantWrapupUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email participant wrapup unsupported media type response has a 4xx status code
func (o *GetConversationsEmailParticipantWrapupUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations email participant wrapup unsupported media type response has a 5xx status code
func (o *GetConversationsEmailParticipantWrapupUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations email participant wrapup unsupported media type response a status code equal to that given
func (o *GetConversationsEmailParticipantWrapupUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetConversationsEmailParticipantWrapupUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsEmailParticipantWrapupUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsEmailParticipantWrapupUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantWrapupUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantWrapupTooManyRequests creates a GetConversationsEmailParticipantWrapupTooManyRequests with default headers values
func NewGetConversationsEmailParticipantWrapupTooManyRequests() *GetConversationsEmailParticipantWrapupTooManyRequests {
	return &GetConversationsEmailParticipantWrapupTooManyRequests{}
}

/*
GetConversationsEmailParticipantWrapupTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetConversationsEmailParticipantWrapupTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email participant wrapup too many requests response has a 2xx status code
func (o *GetConversationsEmailParticipantWrapupTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email participant wrapup too many requests response has a 3xx status code
func (o *GetConversationsEmailParticipantWrapupTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email participant wrapup too many requests response has a 4xx status code
func (o *GetConversationsEmailParticipantWrapupTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations email participant wrapup too many requests response has a 5xx status code
func (o *GetConversationsEmailParticipantWrapupTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations email participant wrapup too many requests response a status code equal to that given
func (o *GetConversationsEmailParticipantWrapupTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetConversationsEmailParticipantWrapupTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsEmailParticipantWrapupTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsEmailParticipantWrapupTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantWrapupTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantWrapupInternalServerError creates a GetConversationsEmailParticipantWrapupInternalServerError with default headers values
func NewGetConversationsEmailParticipantWrapupInternalServerError() *GetConversationsEmailParticipantWrapupInternalServerError {
	return &GetConversationsEmailParticipantWrapupInternalServerError{}
}

/*
GetConversationsEmailParticipantWrapupInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetConversationsEmailParticipantWrapupInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email participant wrapup internal server error response has a 2xx status code
func (o *GetConversationsEmailParticipantWrapupInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email participant wrapup internal server error response has a 3xx status code
func (o *GetConversationsEmailParticipantWrapupInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email participant wrapup internal server error response has a 4xx status code
func (o *GetConversationsEmailParticipantWrapupInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations email participant wrapup internal server error response has a 5xx status code
func (o *GetConversationsEmailParticipantWrapupInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations email participant wrapup internal server error response a status code equal to that given
func (o *GetConversationsEmailParticipantWrapupInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetConversationsEmailParticipantWrapupInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsEmailParticipantWrapupInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsEmailParticipantWrapupInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantWrapupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantWrapupServiceUnavailable creates a GetConversationsEmailParticipantWrapupServiceUnavailable with default headers values
func NewGetConversationsEmailParticipantWrapupServiceUnavailable() *GetConversationsEmailParticipantWrapupServiceUnavailable {
	return &GetConversationsEmailParticipantWrapupServiceUnavailable{}
}

/*
GetConversationsEmailParticipantWrapupServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetConversationsEmailParticipantWrapupServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email participant wrapup service unavailable response has a 2xx status code
func (o *GetConversationsEmailParticipantWrapupServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email participant wrapup service unavailable response has a 3xx status code
func (o *GetConversationsEmailParticipantWrapupServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email participant wrapup service unavailable response has a 4xx status code
func (o *GetConversationsEmailParticipantWrapupServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations email participant wrapup service unavailable response has a 5xx status code
func (o *GetConversationsEmailParticipantWrapupServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations email participant wrapup service unavailable response a status code equal to that given
func (o *GetConversationsEmailParticipantWrapupServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetConversationsEmailParticipantWrapupServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsEmailParticipantWrapupServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsEmailParticipantWrapupServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantWrapupServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantWrapupGatewayTimeout creates a GetConversationsEmailParticipantWrapupGatewayTimeout with default headers values
func NewGetConversationsEmailParticipantWrapupGatewayTimeout() *GetConversationsEmailParticipantWrapupGatewayTimeout {
	return &GetConversationsEmailParticipantWrapupGatewayTimeout{}
}

/*
GetConversationsEmailParticipantWrapupGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetConversationsEmailParticipantWrapupGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email participant wrapup gateway timeout response has a 2xx status code
func (o *GetConversationsEmailParticipantWrapupGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email participant wrapup gateway timeout response has a 3xx status code
func (o *GetConversationsEmailParticipantWrapupGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email participant wrapup gateway timeout response has a 4xx status code
func (o *GetConversationsEmailParticipantWrapupGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations email participant wrapup gateway timeout response has a 5xx status code
func (o *GetConversationsEmailParticipantWrapupGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations email participant wrapup gateway timeout response a status code equal to that given
func (o *GetConversationsEmailParticipantWrapupGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetConversationsEmailParticipantWrapupGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsEmailParticipantWrapupGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsEmailParticipantWrapupGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantWrapupGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
