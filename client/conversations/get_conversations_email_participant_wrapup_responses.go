// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetConversationsEmailParticipantWrapupReader is a Reader for the GetConversationsEmailParticipantWrapup structure.
type GetConversationsEmailParticipantWrapupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConversationsEmailParticipantWrapupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConversationsEmailParticipantWrapupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetConversationsEmailParticipantWrapupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetConversationsEmailParticipantWrapupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetConversationsEmailParticipantWrapupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetConversationsEmailParticipantWrapupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetConversationsEmailParticipantWrapupRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetConversationsEmailParticipantWrapupUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetConversationsEmailParticipantWrapupTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetConversationsEmailParticipantWrapupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetConversationsEmailParticipantWrapupServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetConversationsEmailParticipantWrapupGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetConversationsEmailParticipantWrapupOK creates a GetConversationsEmailParticipantWrapupOK with default headers values
func NewGetConversationsEmailParticipantWrapupOK() *GetConversationsEmailParticipantWrapupOK {
	return &GetConversationsEmailParticipantWrapupOK{}
}

/*GetConversationsEmailParticipantWrapupOK handles this case with default header values.

successful operation
*/
type GetConversationsEmailParticipantWrapupOK struct {
	Payload *models.AssignedWrapupCode
}

func (o *GetConversationsEmailParticipantWrapupOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsEmailParticipantWrapupOK  %+v", 200, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupOK) GetPayload() *models.AssignedWrapupCode {
	return o.Payload
}

func (o *GetConversationsEmailParticipantWrapupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AssignedWrapupCode)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantWrapupBadRequest creates a GetConversationsEmailParticipantWrapupBadRequest with default headers values
func NewGetConversationsEmailParticipantWrapupBadRequest() *GetConversationsEmailParticipantWrapupBadRequest {
	return &GetConversationsEmailParticipantWrapupBadRequest{}
}

/*GetConversationsEmailParticipantWrapupBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetConversationsEmailParticipantWrapupBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsEmailParticipantWrapupBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsEmailParticipantWrapupBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantWrapupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantWrapupUnauthorized creates a GetConversationsEmailParticipantWrapupUnauthorized with default headers values
func NewGetConversationsEmailParticipantWrapupUnauthorized() *GetConversationsEmailParticipantWrapupUnauthorized {
	return &GetConversationsEmailParticipantWrapupUnauthorized{}
}

/*GetConversationsEmailParticipantWrapupUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetConversationsEmailParticipantWrapupUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsEmailParticipantWrapupUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsEmailParticipantWrapupUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantWrapupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantWrapupForbidden creates a GetConversationsEmailParticipantWrapupForbidden with default headers values
func NewGetConversationsEmailParticipantWrapupForbidden() *GetConversationsEmailParticipantWrapupForbidden {
	return &GetConversationsEmailParticipantWrapupForbidden{}
}

/*GetConversationsEmailParticipantWrapupForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetConversationsEmailParticipantWrapupForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsEmailParticipantWrapupForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsEmailParticipantWrapupForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantWrapupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantWrapupNotFound creates a GetConversationsEmailParticipantWrapupNotFound with default headers values
func NewGetConversationsEmailParticipantWrapupNotFound() *GetConversationsEmailParticipantWrapupNotFound {
	return &GetConversationsEmailParticipantWrapupNotFound{}
}

/*GetConversationsEmailParticipantWrapupNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetConversationsEmailParticipantWrapupNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsEmailParticipantWrapupNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsEmailParticipantWrapupNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantWrapupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantWrapupRequestEntityTooLarge creates a GetConversationsEmailParticipantWrapupRequestEntityTooLarge with default headers values
func NewGetConversationsEmailParticipantWrapupRequestEntityTooLarge() *GetConversationsEmailParticipantWrapupRequestEntityTooLarge {
	return &GetConversationsEmailParticipantWrapupRequestEntityTooLarge{}
}

/*GetConversationsEmailParticipantWrapupRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetConversationsEmailParticipantWrapupRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsEmailParticipantWrapupRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsEmailParticipantWrapupRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantWrapupRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantWrapupUnsupportedMediaType creates a GetConversationsEmailParticipantWrapupUnsupportedMediaType with default headers values
func NewGetConversationsEmailParticipantWrapupUnsupportedMediaType() *GetConversationsEmailParticipantWrapupUnsupportedMediaType {
	return &GetConversationsEmailParticipantWrapupUnsupportedMediaType{}
}

/*GetConversationsEmailParticipantWrapupUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetConversationsEmailParticipantWrapupUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsEmailParticipantWrapupUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsEmailParticipantWrapupUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantWrapupUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantWrapupTooManyRequests creates a GetConversationsEmailParticipantWrapupTooManyRequests with default headers values
func NewGetConversationsEmailParticipantWrapupTooManyRequests() *GetConversationsEmailParticipantWrapupTooManyRequests {
	return &GetConversationsEmailParticipantWrapupTooManyRequests{}
}

/*GetConversationsEmailParticipantWrapupTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type GetConversationsEmailParticipantWrapupTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsEmailParticipantWrapupTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsEmailParticipantWrapupTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantWrapupTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantWrapupInternalServerError creates a GetConversationsEmailParticipantWrapupInternalServerError with default headers values
func NewGetConversationsEmailParticipantWrapupInternalServerError() *GetConversationsEmailParticipantWrapupInternalServerError {
	return &GetConversationsEmailParticipantWrapupInternalServerError{}
}

/*GetConversationsEmailParticipantWrapupInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetConversationsEmailParticipantWrapupInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsEmailParticipantWrapupInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsEmailParticipantWrapupInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantWrapupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantWrapupServiceUnavailable creates a GetConversationsEmailParticipantWrapupServiceUnavailable with default headers values
func NewGetConversationsEmailParticipantWrapupServiceUnavailable() *GetConversationsEmailParticipantWrapupServiceUnavailable {
	return &GetConversationsEmailParticipantWrapupServiceUnavailable{}
}

/*GetConversationsEmailParticipantWrapupServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetConversationsEmailParticipantWrapupServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsEmailParticipantWrapupServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsEmailParticipantWrapupServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantWrapupServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantWrapupGatewayTimeout creates a GetConversationsEmailParticipantWrapupGatewayTimeout with default headers values
func NewGetConversationsEmailParticipantWrapupGatewayTimeout() *GetConversationsEmailParticipantWrapupGatewayTimeout {
	return &GetConversationsEmailParticipantWrapupGatewayTimeout{}
}

/*GetConversationsEmailParticipantWrapupGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetConversationsEmailParticipantWrapupGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsEmailParticipantWrapupGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsEmailParticipantWrapupGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantWrapupGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
