// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutConversationsCallRecordingstateReader is a Reader for the PutConversationsCallRecordingstate structure.
type PutConversationsCallRecordingstateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutConversationsCallRecordingstateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutConversationsCallRecordingstateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewPutConversationsCallRecordingstateAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutConversationsCallRecordingstateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutConversationsCallRecordingstateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutConversationsCallRecordingstateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutConversationsCallRecordingstateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutConversationsCallRecordingstateRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutConversationsCallRecordingstateRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutConversationsCallRecordingstateUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutConversationsCallRecordingstateTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutConversationsCallRecordingstateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutConversationsCallRecordingstateServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutConversationsCallRecordingstateGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutConversationsCallRecordingstateOK creates a PutConversationsCallRecordingstateOK with default headers values
func NewPutConversationsCallRecordingstateOK() *PutConversationsCallRecordingstateOK {
	return &PutConversationsCallRecordingstateOK{}
}

/*
PutConversationsCallRecordingstateOK describes a response with status code 200, with default header values.

successful operation
*/
type PutConversationsCallRecordingstateOK struct {
	Payload string
}

// IsSuccess returns true when this put conversations call recordingstate o k response has a 2xx status code
func (o *PutConversationsCallRecordingstateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put conversations call recordingstate o k response has a 3xx status code
func (o *PutConversationsCallRecordingstateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversations call recordingstate o k response has a 4xx status code
func (o *PutConversationsCallRecordingstateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put conversations call recordingstate o k response has a 5xx status code
func (o *PutConversationsCallRecordingstateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put conversations call recordingstate o k response a status code equal to that given
func (o *PutConversationsCallRecordingstateOK) IsCode(code int) bool {
	return code == 200
}

func (o *PutConversationsCallRecordingstateOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/calls/{conversationId}/recordingstate][%d] putConversationsCallRecordingstateOK  %+v", 200, o.Payload)
}

func (o *PutConversationsCallRecordingstateOK) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/calls/{conversationId}/recordingstate][%d] putConversationsCallRecordingstateOK  %+v", 200, o.Payload)
}

func (o *PutConversationsCallRecordingstateOK) GetPayload() string {
	return o.Payload
}

func (o *PutConversationsCallRecordingstateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsCallRecordingstateAccepted creates a PutConversationsCallRecordingstateAccepted with default headers values
func NewPutConversationsCallRecordingstateAccepted() *PutConversationsCallRecordingstateAccepted {
	return &PutConversationsCallRecordingstateAccepted{}
}

/*
PutConversationsCallRecordingstateAccepted describes a response with status code 202, with default header values.

Accepted - when pausing or resuming recordings (Secure Pause)
*/
type PutConversationsCallRecordingstateAccepted struct {
	Payload string
}

// IsSuccess returns true when this put conversations call recordingstate accepted response has a 2xx status code
func (o *PutConversationsCallRecordingstateAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put conversations call recordingstate accepted response has a 3xx status code
func (o *PutConversationsCallRecordingstateAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversations call recordingstate accepted response has a 4xx status code
func (o *PutConversationsCallRecordingstateAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this put conversations call recordingstate accepted response has a 5xx status code
func (o *PutConversationsCallRecordingstateAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this put conversations call recordingstate accepted response a status code equal to that given
func (o *PutConversationsCallRecordingstateAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *PutConversationsCallRecordingstateAccepted) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/calls/{conversationId}/recordingstate][%d] putConversationsCallRecordingstateAccepted  %+v", 202, o.Payload)
}

func (o *PutConversationsCallRecordingstateAccepted) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/calls/{conversationId}/recordingstate][%d] putConversationsCallRecordingstateAccepted  %+v", 202, o.Payload)
}

func (o *PutConversationsCallRecordingstateAccepted) GetPayload() string {
	return o.Payload
}

func (o *PutConversationsCallRecordingstateAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsCallRecordingstateBadRequest creates a PutConversationsCallRecordingstateBadRequest with default headers values
func NewPutConversationsCallRecordingstateBadRequest() *PutConversationsCallRecordingstateBadRequest {
	return &PutConversationsCallRecordingstateBadRequest{}
}

/*
PutConversationsCallRecordingstateBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutConversationsCallRecordingstateBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put conversations call recordingstate bad request response has a 2xx status code
func (o *PutConversationsCallRecordingstateBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put conversations call recordingstate bad request response has a 3xx status code
func (o *PutConversationsCallRecordingstateBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversations call recordingstate bad request response has a 4xx status code
func (o *PutConversationsCallRecordingstateBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put conversations call recordingstate bad request response has a 5xx status code
func (o *PutConversationsCallRecordingstateBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put conversations call recordingstate bad request response a status code equal to that given
func (o *PutConversationsCallRecordingstateBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PutConversationsCallRecordingstateBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/calls/{conversationId}/recordingstate][%d] putConversationsCallRecordingstateBadRequest  %+v", 400, o.Payload)
}

func (o *PutConversationsCallRecordingstateBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/calls/{conversationId}/recordingstate][%d] putConversationsCallRecordingstateBadRequest  %+v", 400, o.Payload)
}

func (o *PutConversationsCallRecordingstateBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsCallRecordingstateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsCallRecordingstateUnauthorized creates a PutConversationsCallRecordingstateUnauthorized with default headers values
func NewPutConversationsCallRecordingstateUnauthorized() *PutConversationsCallRecordingstateUnauthorized {
	return &PutConversationsCallRecordingstateUnauthorized{}
}

/*
PutConversationsCallRecordingstateUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PutConversationsCallRecordingstateUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put conversations call recordingstate unauthorized response has a 2xx status code
func (o *PutConversationsCallRecordingstateUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put conversations call recordingstate unauthorized response has a 3xx status code
func (o *PutConversationsCallRecordingstateUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversations call recordingstate unauthorized response has a 4xx status code
func (o *PutConversationsCallRecordingstateUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put conversations call recordingstate unauthorized response has a 5xx status code
func (o *PutConversationsCallRecordingstateUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put conversations call recordingstate unauthorized response a status code equal to that given
func (o *PutConversationsCallRecordingstateUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PutConversationsCallRecordingstateUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/calls/{conversationId}/recordingstate][%d] putConversationsCallRecordingstateUnauthorized  %+v", 401, o.Payload)
}

func (o *PutConversationsCallRecordingstateUnauthorized) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/calls/{conversationId}/recordingstate][%d] putConversationsCallRecordingstateUnauthorized  %+v", 401, o.Payload)
}

func (o *PutConversationsCallRecordingstateUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsCallRecordingstateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsCallRecordingstateForbidden creates a PutConversationsCallRecordingstateForbidden with default headers values
func NewPutConversationsCallRecordingstateForbidden() *PutConversationsCallRecordingstateForbidden {
	return &PutConversationsCallRecordingstateForbidden{}
}

/*
PutConversationsCallRecordingstateForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PutConversationsCallRecordingstateForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put conversations call recordingstate forbidden response has a 2xx status code
func (o *PutConversationsCallRecordingstateForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put conversations call recordingstate forbidden response has a 3xx status code
func (o *PutConversationsCallRecordingstateForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversations call recordingstate forbidden response has a 4xx status code
func (o *PutConversationsCallRecordingstateForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put conversations call recordingstate forbidden response has a 5xx status code
func (o *PutConversationsCallRecordingstateForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put conversations call recordingstate forbidden response a status code equal to that given
func (o *PutConversationsCallRecordingstateForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PutConversationsCallRecordingstateForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/calls/{conversationId}/recordingstate][%d] putConversationsCallRecordingstateForbidden  %+v", 403, o.Payload)
}

func (o *PutConversationsCallRecordingstateForbidden) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/calls/{conversationId}/recordingstate][%d] putConversationsCallRecordingstateForbidden  %+v", 403, o.Payload)
}

func (o *PutConversationsCallRecordingstateForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsCallRecordingstateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsCallRecordingstateNotFound creates a PutConversationsCallRecordingstateNotFound with default headers values
func NewPutConversationsCallRecordingstateNotFound() *PutConversationsCallRecordingstateNotFound {
	return &PutConversationsCallRecordingstateNotFound{}
}

/*
PutConversationsCallRecordingstateNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PutConversationsCallRecordingstateNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put conversations call recordingstate not found response has a 2xx status code
func (o *PutConversationsCallRecordingstateNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put conversations call recordingstate not found response has a 3xx status code
func (o *PutConversationsCallRecordingstateNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversations call recordingstate not found response has a 4xx status code
func (o *PutConversationsCallRecordingstateNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put conversations call recordingstate not found response has a 5xx status code
func (o *PutConversationsCallRecordingstateNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put conversations call recordingstate not found response a status code equal to that given
func (o *PutConversationsCallRecordingstateNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PutConversationsCallRecordingstateNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/calls/{conversationId}/recordingstate][%d] putConversationsCallRecordingstateNotFound  %+v", 404, o.Payload)
}

func (o *PutConversationsCallRecordingstateNotFound) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/calls/{conversationId}/recordingstate][%d] putConversationsCallRecordingstateNotFound  %+v", 404, o.Payload)
}

func (o *PutConversationsCallRecordingstateNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsCallRecordingstateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsCallRecordingstateRequestTimeout creates a PutConversationsCallRecordingstateRequestTimeout with default headers values
func NewPutConversationsCallRecordingstateRequestTimeout() *PutConversationsCallRecordingstateRequestTimeout {
	return &PutConversationsCallRecordingstateRequestTimeout{}
}

/*
PutConversationsCallRecordingstateRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutConversationsCallRecordingstateRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put conversations call recordingstate request timeout response has a 2xx status code
func (o *PutConversationsCallRecordingstateRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put conversations call recordingstate request timeout response has a 3xx status code
func (o *PutConversationsCallRecordingstateRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversations call recordingstate request timeout response has a 4xx status code
func (o *PutConversationsCallRecordingstateRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this put conversations call recordingstate request timeout response has a 5xx status code
func (o *PutConversationsCallRecordingstateRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this put conversations call recordingstate request timeout response a status code equal to that given
func (o *PutConversationsCallRecordingstateRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PutConversationsCallRecordingstateRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/calls/{conversationId}/recordingstate][%d] putConversationsCallRecordingstateRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutConversationsCallRecordingstateRequestTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/calls/{conversationId}/recordingstate][%d] putConversationsCallRecordingstateRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutConversationsCallRecordingstateRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsCallRecordingstateRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsCallRecordingstateRequestEntityTooLarge creates a PutConversationsCallRecordingstateRequestEntityTooLarge with default headers values
func NewPutConversationsCallRecordingstateRequestEntityTooLarge() *PutConversationsCallRecordingstateRequestEntityTooLarge {
	return &PutConversationsCallRecordingstateRequestEntityTooLarge{}
}

/*
PutConversationsCallRecordingstateRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PutConversationsCallRecordingstateRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put conversations call recordingstate request entity too large response has a 2xx status code
func (o *PutConversationsCallRecordingstateRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put conversations call recordingstate request entity too large response has a 3xx status code
func (o *PutConversationsCallRecordingstateRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversations call recordingstate request entity too large response has a 4xx status code
func (o *PutConversationsCallRecordingstateRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this put conversations call recordingstate request entity too large response has a 5xx status code
func (o *PutConversationsCallRecordingstateRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this put conversations call recordingstate request entity too large response a status code equal to that given
func (o *PutConversationsCallRecordingstateRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PutConversationsCallRecordingstateRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/calls/{conversationId}/recordingstate][%d] putConversationsCallRecordingstateRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutConversationsCallRecordingstateRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/calls/{conversationId}/recordingstate][%d] putConversationsCallRecordingstateRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutConversationsCallRecordingstateRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsCallRecordingstateRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsCallRecordingstateUnsupportedMediaType creates a PutConversationsCallRecordingstateUnsupportedMediaType with default headers values
func NewPutConversationsCallRecordingstateUnsupportedMediaType() *PutConversationsCallRecordingstateUnsupportedMediaType {
	return &PutConversationsCallRecordingstateUnsupportedMediaType{}
}

/*
PutConversationsCallRecordingstateUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutConversationsCallRecordingstateUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put conversations call recordingstate unsupported media type response has a 2xx status code
func (o *PutConversationsCallRecordingstateUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put conversations call recordingstate unsupported media type response has a 3xx status code
func (o *PutConversationsCallRecordingstateUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversations call recordingstate unsupported media type response has a 4xx status code
func (o *PutConversationsCallRecordingstateUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this put conversations call recordingstate unsupported media type response has a 5xx status code
func (o *PutConversationsCallRecordingstateUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this put conversations call recordingstate unsupported media type response a status code equal to that given
func (o *PutConversationsCallRecordingstateUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PutConversationsCallRecordingstateUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/calls/{conversationId}/recordingstate][%d] putConversationsCallRecordingstateUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutConversationsCallRecordingstateUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/calls/{conversationId}/recordingstate][%d] putConversationsCallRecordingstateUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutConversationsCallRecordingstateUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsCallRecordingstateUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsCallRecordingstateTooManyRequests creates a PutConversationsCallRecordingstateTooManyRequests with default headers values
func NewPutConversationsCallRecordingstateTooManyRequests() *PutConversationsCallRecordingstateTooManyRequests {
	return &PutConversationsCallRecordingstateTooManyRequests{}
}

/*
PutConversationsCallRecordingstateTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutConversationsCallRecordingstateTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put conversations call recordingstate too many requests response has a 2xx status code
func (o *PutConversationsCallRecordingstateTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put conversations call recordingstate too many requests response has a 3xx status code
func (o *PutConversationsCallRecordingstateTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversations call recordingstate too many requests response has a 4xx status code
func (o *PutConversationsCallRecordingstateTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this put conversations call recordingstate too many requests response has a 5xx status code
func (o *PutConversationsCallRecordingstateTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this put conversations call recordingstate too many requests response a status code equal to that given
func (o *PutConversationsCallRecordingstateTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PutConversationsCallRecordingstateTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/calls/{conversationId}/recordingstate][%d] putConversationsCallRecordingstateTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutConversationsCallRecordingstateTooManyRequests) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/calls/{conversationId}/recordingstate][%d] putConversationsCallRecordingstateTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutConversationsCallRecordingstateTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsCallRecordingstateTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsCallRecordingstateInternalServerError creates a PutConversationsCallRecordingstateInternalServerError with default headers values
func NewPutConversationsCallRecordingstateInternalServerError() *PutConversationsCallRecordingstateInternalServerError {
	return &PutConversationsCallRecordingstateInternalServerError{}
}

/*
PutConversationsCallRecordingstateInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutConversationsCallRecordingstateInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put conversations call recordingstate internal server error response has a 2xx status code
func (o *PutConversationsCallRecordingstateInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put conversations call recordingstate internal server error response has a 3xx status code
func (o *PutConversationsCallRecordingstateInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversations call recordingstate internal server error response has a 4xx status code
func (o *PutConversationsCallRecordingstateInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this put conversations call recordingstate internal server error response has a 5xx status code
func (o *PutConversationsCallRecordingstateInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this put conversations call recordingstate internal server error response a status code equal to that given
func (o *PutConversationsCallRecordingstateInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PutConversationsCallRecordingstateInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/calls/{conversationId}/recordingstate][%d] putConversationsCallRecordingstateInternalServerError  %+v", 500, o.Payload)
}

func (o *PutConversationsCallRecordingstateInternalServerError) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/calls/{conversationId}/recordingstate][%d] putConversationsCallRecordingstateInternalServerError  %+v", 500, o.Payload)
}

func (o *PutConversationsCallRecordingstateInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsCallRecordingstateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsCallRecordingstateServiceUnavailable creates a PutConversationsCallRecordingstateServiceUnavailable with default headers values
func NewPutConversationsCallRecordingstateServiceUnavailable() *PutConversationsCallRecordingstateServiceUnavailable {
	return &PutConversationsCallRecordingstateServiceUnavailable{}
}

/*
PutConversationsCallRecordingstateServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutConversationsCallRecordingstateServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put conversations call recordingstate service unavailable response has a 2xx status code
func (o *PutConversationsCallRecordingstateServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put conversations call recordingstate service unavailable response has a 3xx status code
func (o *PutConversationsCallRecordingstateServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversations call recordingstate service unavailable response has a 4xx status code
func (o *PutConversationsCallRecordingstateServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this put conversations call recordingstate service unavailable response has a 5xx status code
func (o *PutConversationsCallRecordingstateServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this put conversations call recordingstate service unavailable response a status code equal to that given
func (o *PutConversationsCallRecordingstateServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PutConversationsCallRecordingstateServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/calls/{conversationId}/recordingstate][%d] putConversationsCallRecordingstateServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutConversationsCallRecordingstateServiceUnavailable) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/calls/{conversationId}/recordingstate][%d] putConversationsCallRecordingstateServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutConversationsCallRecordingstateServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsCallRecordingstateServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsCallRecordingstateGatewayTimeout creates a PutConversationsCallRecordingstateGatewayTimeout with default headers values
func NewPutConversationsCallRecordingstateGatewayTimeout() *PutConversationsCallRecordingstateGatewayTimeout {
	return &PutConversationsCallRecordingstateGatewayTimeout{}
}

/*
PutConversationsCallRecordingstateGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PutConversationsCallRecordingstateGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put conversations call recordingstate gateway timeout response has a 2xx status code
func (o *PutConversationsCallRecordingstateGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put conversations call recordingstate gateway timeout response has a 3xx status code
func (o *PutConversationsCallRecordingstateGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversations call recordingstate gateway timeout response has a 4xx status code
func (o *PutConversationsCallRecordingstateGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this put conversations call recordingstate gateway timeout response has a 5xx status code
func (o *PutConversationsCallRecordingstateGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this put conversations call recordingstate gateway timeout response a status code equal to that given
func (o *PutConversationsCallRecordingstateGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PutConversationsCallRecordingstateGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/calls/{conversationId}/recordingstate][%d] putConversationsCallRecordingstateGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutConversationsCallRecordingstateGatewayTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/calls/{conversationId}/recordingstate][%d] putConversationsCallRecordingstateGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutConversationsCallRecordingstateGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsCallRecordingstateGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
