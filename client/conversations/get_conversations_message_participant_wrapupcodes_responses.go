// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetConversationsMessageParticipantWrapupcodesReader is a Reader for the GetConversationsMessageParticipantWrapupcodes structure.
type GetConversationsMessageParticipantWrapupcodesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConversationsMessageParticipantWrapupcodesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConversationsMessageParticipantWrapupcodesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetConversationsMessageParticipantWrapupcodesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetConversationsMessageParticipantWrapupcodesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetConversationsMessageParticipantWrapupcodesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetConversationsMessageParticipantWrapupcodesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetConversationsMessageParticipantWrapupcodesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetConversationsMessageParticipantWrapupcodesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetConversationsMessageParticipantWrapupcodesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetConversationsMessageParticipantWrapupcodesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetConversationsMessageParticipantWrapupcodesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetConversationsMessageParticipantWrapupcodesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetConversationsMessageParticipantWrapupcodesOK creates a GetConversationsMessageParticipantWrapupcodesOK with default headers values
func NewGetConversationsMessageParticipantWrapupcodesOK() *GetConversationsMessageParticipantWrapupcodesOK {
	return &GetConversationsMessageParticipantWrapupcodesOK{}
}

/*GetConversationsMessageParticipantWrapupcodesOK handles this case with default header values.

successful operation
*/
type GetConversationsMessageParticipantWrapupcodesOK struct {
	Payload []*models.WrapupCode
}

func (o *GetConversationsMessageParticipantWrapupcodesOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsMessageParticipantWrapupcodesOK  %+v", 200, o.Payload)
}

func (o *GetConversationsMessageParticipantWrapupcodesOK) GetPayload() []*models.WrapupCode {
	return o.Payload
}

func (o *GetConversationsMessageParticipantWrapupcodesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageParticipantWrapupcodesBadRequest creates a GetConversationsMessageParticipantWrapupcodesBadRequest with default headers values
func NewGetConversationsMessageParticipantWrapupcodesBadRequest() *GetConversationsMessageParticipantWrapupcodesBadRequest {
	return &GetConversationsMessageParticipantWrapupcodesBadRequest{}
}

/*GetConversationsMessageParticipantWrapupcodesBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetConversationsMessageParticipantWrapupcodesBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsMessageParticipantWrapupcodesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsMessageParticipantWrapupcodesBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsMessageParticipantWrapupcodesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageParticipantWrapupcodesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageParticipantWrapupcodesUnauthorized creates a GetConversationsMessageParticipantWrapupcodesUnauthorized with default headers values
func NewGetConversationsMessageParticipantWrapupcodesUnauthorized() *GetConversationsMessageParticipantWrapupcodesUnauthorized {
	return &GetConversationsMessageParticipantWrapupcodesUnauthorized{}
}

/*GetConversationsMessageParticipantWrapupcodesUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetConversationsMessageParticipantWrapupcodesUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsMessageParticipantWrapupcodesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsMessageParticipantWrapupcodesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsMessageParticipantWrapupcodesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageParticipantWrapupcodesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageParticipantWrapupcodesForbidden creates a GetConversationsMessageParticipantWrapupcodesForbidden with default headers values
func NewGetConversationsMessageParticipantWrapupcodesForbidden() *GetConversationsMessageParticipantWrapupcodesForbidden {
	return &GetConversationsMessageParticipantWrapupcodesForbidden{}
}

/*GetConversationsMessageParticipantWrapupcodesForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetConversationsMessageParticipantWrapupcodesForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsMessageParticipantWrapupcodesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsMessageParticipantWrapupcodesForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsMessageParticipantWrapupcodesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageParticipantWrapupcodesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageParticipantWrapupcodesNotFound creates a GetConversationsMessageParticipantWrapupcodesNotFound with default headers values
func NewGetConversationsMessageParticipantWrapupcodesNotFound() *GetConversationsMessageParticipantWrapupcodesNotFound {
	return &GetConversationsMessageParticipantWrapupcodesNotFound{}
}

/*GetConversationsMessageParticipantWrapupcodesNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetConversationsMessageParticipantWrapupcodesNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsMessageParticipantWrapupcodesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsMessageParticipantWrapupcodesNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsMessageParticipantWrapupcodesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageParticipantWrapupcodesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageParticipantWrapupcodesRequestEntityTooLarge creates a GetConversationsMessageParticipantWrapupcodesRequestEntityTooLarge with default headers values
func NewGetConversationsMessageParticipantWrapupcodesRequestEntityTooLarge() *GetConversationsMessageParticipantWrapupcodesRequestEntityTooLarge {
	return &GetConversationsMessageParticipantWrapupcodesRequestEntityTooLarge{}
}

/*GetConversationsMessageParticipantWrapupcodesRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetConversationsMessageParticipantWrapupcodesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsMessageParticipantWrapupcodesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsMessageParticipantWrapupcodesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsMessageParticipantWrapupcodesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageParticipantWrapupcodesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageParticipantWrapupcodesUnsupportedMediaType creates a GetConversationsMessageParticipantWrapupcodesUnsupportedMediaType with default headers values
func NewGetConversationsMessageParticipantWrapupcodesUnsupportedMediaType() *GetConversationsMessageParticipantWrapupcodesUnsupportedMediaType {
	return &GetConversationsMessageParticipantWrapupcodesUnsupportedMediaType{}
}

/*GetConversationsMessageParticipantWrapupcodesUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetConversationsMessageParticipantWrapupcodesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsMessageParticipantWrapupcodesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsMessageParticipantWrapupcodesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsMessageParticipantWrapupcodesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageParticipantWrapupcodesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageParticipantWrapupcodesTooManyRequests creates a GetConversationsMessageParticipantWrapupcodesTooManyRequests with default headers values
func NewGetConversationsMessageParticipantWrapupcodesTooManyRequests() *GetConversationsMessageParticipantWrapupcodesTooManyRequests {
	return &GetConversationsMessageParticipantWrapupcodesTooManyRequests{}
}

/*GetConversationsMessageParticipantWrapupcodesTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type GetConversationsMessageParticipantWrapupcodesTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsMessageParticipantWrapupcodesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsMessageParticipantWrapupcodesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsMessageParticipantWrapupcodesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageParticipantWrapupcodesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageParticipantWrapupcodesInternalServerError creates a GetConversationsMessageParticipantWrapupcodesInternalServerError with default headers values
func NewGetConversationsMessageParticipantWrapupcodesInternalServerError() *GetConversationsMessageParticipantWrapupcodesInternalServerError {
	return &GetConversationsMessageParticipantWrapupcodesInternalServerError{}
}

/*GetConversationsMessageParticipantWrapupcodesInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetConversationsMessageParticipantWrapupcodesInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsMessageParticipantWrapupcodesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsMessageParticipantWrapupcodesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsMessageParticipantWrapupcodesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageParticipantWrapupcodesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageParticipantWrapupcodesServiceUnavailable creates a GetConversationsMessageParticipantWrapupcodesServiceUnavailable with default headers values
func NewGetConversationsMessageParticipantWrapupcodesServiceUnavailable() *GetConversationsMessageParticipantWrapupcodesServiceUnavailable {
	return &GetConversationsMessageParticipantWrapupcodesServiceUnavailable{}
}

/*GetConversationsMessageParticipantWrapupcodesServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetConversationsMessageParticipantWrapupcodesServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsMessageParticipantWrapupcodesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsMessageParticipantWrapupcodesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsMessageParticipantWrapupcodesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageParticipantWrapupcodesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageParticipantWrapupcodesGatewayTimeout creates a GetConversationsMessageParticipantWrapupcodesGatewayTimeout with default headers values
func NewGetConversationsMessageParticipantWrapupcodesGatewayTimeout() *GetConversationsMessageParticipantWrapupcodesGatewayTimeout {
	return &GetConversationsMessageParticipantWrapupcodesGatewayTimeout{}
}

/*GetConversationsMessageParticipantWrapupcodesGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetConversationsMessageParticipantWrapupcodesGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsMessageParticipantWrapupcodesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsMessageParticipantWrapupcodesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsMessageParticipantWrapupcodesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageParticipantWrapupcodesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
