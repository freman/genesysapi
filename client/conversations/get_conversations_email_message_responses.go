// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetConversationsEmailMessageReader is a Reader for the GetConversationsEmailMessage structure.
type GetConversationsEmailMessageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConversationsEmailMessageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConversationsEmailMessageOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetConversationsEmailMessageBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetConversationsEmailMessageUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetConversationsEmailMessageForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetConversationsEmailMessageNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetConversationsEmailMessageRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetConversationsEmailMessageRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetConversationsEmailMessageUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetConversationsEmailMessageTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetConversationsEmailMessageInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetConversationsEmailMessageServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetConversationsEmailMessageGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetConversationsEmailMessageOK creates a GetConversationsEmailMessageOK with default headers values
func NewGetConversationsEmailMessageOK() *GetConversationsEmailMessageOK {
	return &GetConversationsEmailMessageOK{}
}

/*
GetConversationsEmailMessageOK describes a response with status code 200, with default header values.

successful operation
*/
type GetConversationsEmailMessageOK struct {
	Payload *models.EmailMessage
}

// IsSuccess returns true when this get conversations email message o k response has a 2xx status code
func (o *GetConversationsEmailMessageOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get conversations email message o k response has a 3xx status code
func (o *GetConversationsEmailMessageOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email message o k response has a 4xx status code
func (o *GetConversationsEmailMessageOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations email message o k response has a 5xx status code
func (o *GetConversationsEmailMessageOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations email message o k response a status code equal to that given
func (o *GetConversationsEmailMessageOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetConversationsEmailMessageOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/messages/{messageId}][%d] getConversationsEmailMessageOK  %+v", 200, o.Payload)
}

func (o *GetConversationsEmailMessageOK) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/messages/{messageId}][%d] getConversationsEmailMessageOK  %+v", 200, o.Payload)
}

func (o *GetConversationsEmailMessageOK) GetPayload() *models.EmailMessage {
	return o.Payload
}

func (o *GetConversationsEmailMessageOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EmailMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailMessageBadRequest creates a GetConversationsEmailMessageBadRequest with default headers values
func NewGetConversationsEmailMessageBadRequest() *GetConversationsEmailMessageBadRequest {
	return &GetConversationsEmailMessageBadRequest{}
}

/*
GetConversationsEmailMessageBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetConversationsEmailMessageBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email message bad request response has a 2xx status code
func (o *GetConversationsEmailMessageBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email message bad request response has a 3xx status code
func (o *GetConversationsEmailMessageBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email message bad request response has a 4xx status code
func (o *GetConversationsEmailMessageBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations email message bad request response has a 5xx status code
func (o *GetConversationsEmailMessageBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations email message bad request response a status code equal to that given
func (o *GetConversationsEmailMessageBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetConversationsEmailMessageBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/messages/{messageId}][%d] getConversationsEmailMessageBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsEmailMessageBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/messages/{messageId}][%d] getConversationsEmailMessageBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsEmailMessageBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailMessageBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailMessageUnauthorized creates a GetConversationsEmailMessageUnauthorized with default headers values
func NewGetConversationsEmailMessageUnauthorized() *GetConversationsEmailMessageUnauthorized {
	return &GetConversationsEmailMessageUnauthorized{}
}

/*
GetConversationsEmailMessageUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetConversationsEmailMessageUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email message unauthorized response has a 2xx status code
func (o *GetConversationsEmailMessageUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email message unauthorized response has a 3xx status code
func (o *GetConversationsEmailMessageUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email message unauthorized response has a 4xx status code
func (o *GetConversationsEmailMessageUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations email message unauthorized response has a 5xx status code
func (o *GetConversationsEmailMessageUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations email message unauthorized response a status code equal to that given
func (o *GetConversationsEmailMessageUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetConversationsEmailMessageUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/messages/{messageId}][%d] getConversationsEmailMessageUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsEmailMessageUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/messages/{messageId}][%d] getConversationsEmailMessageUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsEmailMessageUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailMessageUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailMessageForbidden creates a GetConversationsEmailMessageForbidden with default headers values
func NewGetConversationsEmailMessageForbidden() *GetConversationsEmailMessageForbidden {
	return &GetConversationsEmailMessageForbidden{}
}

/*
GetConversationsEmailMessageForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetConversationsEmailMessageForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email message forbidden response has a 2xx status code
func (o *GetConversationsEmailMessageForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email message forbidden response has a 3xx status code
func (o *GetConversationsEmailMessageForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email message forbidden response has a 4xx status code
func (o *GetConversationsEmailMessageForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations email message forbidden response has a 5xx status code
func (o *GetConversationsEmailMessageForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations email message forbidden response a status code equal to that given
func (o *GetConversationsEmailMessageForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetConversationsEmailMessageForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/messages/{messageId}][%d] getConversationsEmailMessageForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsEmailMessageForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/messages/{messageId}][%d] getConversationsEmailMessageForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsEmailMessageForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailMessageForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailMessageNotFound creates a GetConversationsEmailMessageNotFound with default headers values
func NewGetConversationsEmailMessageNotFound() *GetConversationsEmailMessageNotFound {
	return &GetConversationsEmailMessageNotFound{}
}

/*
GetConversationsEmailMessageNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetConversationsEmailMessageNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email message not found response has a 2xx status code
func (o *GetConversationsEmailMessageNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email message not found response has a 3xx status code
func (o *GetConversationsEmailMessageNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email message not found response has a 4xx status code
func (o *GetConversationsEmailMessageNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations email message not found response has a 5xx status code
func (o *GetConversationsEmailMessageNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations email message not found response a status code equal to that given
func (o *GetConversationsEmailMessageNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetConversationsEmailMessageNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/messages/{messageId}][%d] getConversationsEmailMessageNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsEmailMessageNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/messages/{messageId}][%d] getConversationsEmailMessageNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsEmailMessageNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailMessageNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailMessageRequestTimeout creates a GetConversationsEmailMessageRequestTimeout with default headers values
func NewGetConversationsEmailMessageRequestTimeout() *GetConversationsEmailMessageRequestTimeout {
	return &GetConversationsEmailMessageRequestTimeout{}
}

/*
GetConversationsEmailMessageRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetConversationsEmailMessageRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email message request timeout response has a 2xx status code
func (o *GetConversationsEmailMessageRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email message request timeout response has a 3xx status code
func (o *GetConversationsEmailMessageRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email message request timeout response has a 4xx status code
func (o *GetConversationsEmailMessageRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations email message request timeout response has a 5xx status code
func (o *GetConversationsEmailMessageRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations email message request timeout response a status code equal to that given
func (o *GetConversationsEmailMessageRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetConversationsEmailMessageRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/messages/{messageId}][%d] getConversationsEmailMessageRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationsEmailMessageRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/messages/{messageId}][%d] getConversationsEmailMessageRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationsEmailMessageRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailMessageRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailMessageRequestEntityTooLarge creates a GetConversationsEmailMessageRequestEntityTooLarge with default headers values
func NewGetConversationsEmailMessageRequestEntityTooLarge() *GetConversationsEmailMessageRequestEntityTooLarge {
	return &GetConversationsEmailMessageRequestEntityTooLarge{}
}

/*
GetConversationsEmailMessageRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetConversationsEmailMessageRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email message request entity too large response has a 2xx status code
func (o *GetConversationsEmailMessageRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email message request entity too large response has a 3xx status code
func (o *GetConversationsEmailMessageRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email message request entity too large response has a 4xx status code
func (o *GetConversationsEmailMessageRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations email message request entity too large response has a 5xx status code
func (o *GetConversationsEmailMessageRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations email message request entity too large response a status code equal to that given
func (o *GetConversationsEmailMessageRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetConversationsEmailMessageRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/messages/{messageId}][%d] getConversationsEmailMessageRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsEmailMessageRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/messages/{messageId}][%d] getConversationsEmailMessageRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsEmailMessageRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailMessageRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailMessageUnsupportedMediaType creates a GetConversationsEmailMessageUnsupportedMediaType with default headers values
func NewGetConversationsEmailMessageUnsupportedMediaType() *GetConversationsEmailMessageUnsupportedMediaType {
	return &GetConversationsEmailMessageUnsupportedMediaType{}
}

/*
GetConversationsEmailMessageUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetConversationsEmailMessageUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email message unsupported media type response has a 2xx status code
func (o *GetConversationsEmailMessageUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email message unsupported media type response has a 3xx status code
func (o *GetConversationsEmailMessageUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email message unsupported media type response has a 4xx status code
func (o *GetConversationsEmailMessageUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations email message unsupported media type response has a 5xx status code
func (o *GetConversationsEmailMessageUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations email message unsupported media type response a status code equal to that given
func (o *GetConversationsEmailMessageUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetConversationsEmailMessageUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/messages/{messageId}][%d] getConversationsEmailMessageUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsEmailMessageUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/messages/{messageId}][%d] getConversationsEmailMessageUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsEmailMessageUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailMessageUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailMessageTooManyRequests creates a GetConversationsEmailMessageTooManyRequests with default headers values
func NewGetConversationsEmailMessageTooManyRequests() *GetConversationsEmailMessageTooManyRequests {
	return &GetConversationsEmailMessageTooManyRequests{}
}

/*
GetConversationsEmailMessageTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetConversationsEmailMessageTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email message too many requests response has a 2xx status code
func (o *GetConversationsEmailMessageTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email message too many requests response has a 3xx status code
func (o *GetConversationsEmailMessageTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email message too many requests response has a 4xx status code
func (o *GetConversationsEmailMessageTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations email message too many requests response has a 5xx status code
func (o *GetConversationsEmailMessageTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations email message too many requests response a status code equal to that given
func (o *GetConversationsEmailMessageTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetConversationsEmailMessageTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/messages/{messageId}][%d] getConversationsEmailMessageTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsEmailMessageTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/messages/{messageId}][%d] getConversationsEmailMessageTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsEmailMessageTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailMessageTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailMessageInternalServerError creates a GetConversationsEmailMessageInternalServerError with default headers values
func NewGetConversationsEmailMessageInternalServerError() *GetConversationsEmailMessageInternalServerError {
	return &GetConversationsEmailMessageInternalServerError{}
}

/*
GetConversationsEmailMessageInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetConversationsEmailMessageInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email message internal server error response has a 2xx status code
func (o *GetConversationsEmailMessageInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email message internal server error response has a 3xx status code
func (o *GetConversationsEmailMessageInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email message internal server error response has a 4xx status code
func (o *GetConversationsEmailMessageInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations email message internal server error response has a 5xx status code
func (o *GetConversationsEmailMessageInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations email message internal server error response a status code equal to that given
func (o *GetConversationsEmailMessageInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetConversationsEmailMessageInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/messages/{messageId}][%d] getConversationsEmailMessageInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsEmailMessageInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/messages/{messageId}][%d] getConversationsEmailMessageInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsEmailMessageInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailMessageInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailMessageServiceUnavailable creates a GetConversationsEmailMessageServiceUnavailable with default headers values
func NewGetConversationsEmailMessageServiceUnavailable() *GetConversationsEmailMessageServiceUnavailable {
	return &GetConversationsEmailMessageServiceUnavailable{}
}

/*
GetConversationsEmailMessageServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetConversationsEmailMessageServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email message service unavailable response has a 2xx status code
func (o *GetConversationsEmailMessageServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email message service unavailable response has a 3xx status code
func (o *GetConversationsEmailMessageServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email message service unavailable response has a 4xx status code
func (o *GetConversationsEmailMessageServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations email message service unavailable response has a 5xx status code
func (o *GetConversationsEmailMessageServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations email message service unavailable response a status code equal to that given
func (o *GetConversationsEmailMessageServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetConversationsEmailMessageServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/messages/{messageId}][%d] getConversationsEmailMessageServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsEmailMessageServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/messages/{messageId}][%d] getConversationsEmailMessageServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsEmailMessageServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailMessageServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailMessageGatewayTimeout creates a GetConversationsEmailMessageGatewayTimeout with default headers values
func NewGetConversationsEmailMessageGatewayTimeout() *GetConversationsEmailMessageGatewayTimeout {
	return &GetConversationsEmailMessageGatewayTimeout{}
}

/*
GetConversationsEmailMessageGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetConversationsEmailMessageGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email message gateway timeout response has a 2xx status code
func (o *GetConversationsEmailMessageGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email message gateway timeout response has a 3xx status code
func (o *GetConversationsEmailMessageGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email message gateway timeout response has a 4xx status code
func (o *GetConversationsEmailMessageGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations email message gateway timeout response has a 5xx status code
func (o *GetConversationsEmailMessageGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations email message gateway timeout response a status code equal to that given
func (o *GetConversationsEmailMessageGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetConversationsEmailMessageGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/messages/{messageId}][%d] getConversationsEmailMessageGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsEmailMessageGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/messages/{messageId}][%d] getConversationsEmailMessageGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsEmailMessageGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailMessageGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
