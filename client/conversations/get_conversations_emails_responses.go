// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetConversationsEmailsReader is a Reader for the GetConversationsEmails structure.
type GetConversationsEmailsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConversationsEmailsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConversationsEmailsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetConversationsEmailsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetConversationsEmailsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetConversationsEmailsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetConversationsEmailsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetConversationsEmailsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetConversationsEmailsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetConversationsEmailsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetConversationsEmailsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetConversationsEmailsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetConversationsEmailsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetConversationsEmailsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetConversationsEmailsOK creates a GetConversationsEmailsOK with default headers values
func NewGetConversationsEmailsOK() *GetConversationsEmailsOK {
	return &GetConversationsEmailsOK{}
}

/*
GetConversationsEmailsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetConversationsEmailsOK struct {
	Payload *models.EmailConversationEntityListing
}

// IsSuccess returns true when this get conversations emails o k response has a 2xx status code
func (o *GetConversationsEmailsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get conversations emails o k response has a 3xx status code
func (o *GetConversationsEmailsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations emails o k response has a 4xx status code
func (o *GetConversationsEmailsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations emails o k response has a 5xx status code
func (o *GetConversationsEmailsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations emails o k response a status code equal to that given
func (o *GetConversationsEmailsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetConversationsEmailsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails][%d] getConversationsEmailsOK  %+v", 200, o.Payload)
}

func (o *GetConversationsEmailsOK) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails][%d] getConversationsEmailsOK  %+v", 200, o.Payload)
}

func (o *GetConversationsEmailsOK) GetPayload() *models.EmailConversationEntityListing {
	return o.Payload
}

func (o *GetConversationsEmailsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EmailConversationEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailsBadRequest creates a GetConversationsEmailsBadRequest with default headers values
func NewGetConversationsEmailsBadRequest() *GetConversationsEmailsBadRequest {
	return &GetConversationsEmailsBadRequest{}
}

/*
GetConversationsEmailsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetConversationsEmailsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations emails bad request response has a 2xx status code
func (o *GetConversationsEmailsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations emails bad request response has a 3xx status code
func (o *GetConversationsEmailsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations emails bad request response has a 4xx status code
func (o *GetConversationsEmailsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations emails bad request response has a 5xx status code
func (o *GetConversationsEmailsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations emails bad request response a status code equal to that given
func (o *GetConversationsEmailsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetConversationsEmailsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails][%d] getConversationsEmailsBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsEmailsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails][%d] getConversationsEmailsBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsEmailsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailsUnauthorized creates a GetConversationsEmailsUnauthorized with default headers values
func NewGetConversationsEmailsUnauthorized() *GetConversationsEmailsUnauthorized {
	return &GetConversationsEmailsUnauthorized{}
}

/*
GetConversationsEmailsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetConversationsEmailsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations emails unauthorized response has a 2xx status code
func (o *GetConversationsEmailsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations emails unauthorized response has a 3xx status code
func (o *GetConversationsEmailsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations emails unauthorized response has a 4xx status code
func (o *GetConversationsEmailsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations emails unauthorized response has a 5xx status code
func (o *GetConversationsEmailsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations emails unauthorized response a status code equal to that given
func (o *GetConversationsEmailsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetConversationsEmailsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails][%d] getConversationsEmailsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsEmailsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails][%d] getConversationsEmailsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsEmailsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailsForbidden creates a GetConversationsEmailsForbidden with default headers values
func NewGetConversationsEmailsForbidden() *GetConversationsEmailsForbidden {
	return &GetConversationsEmailsForbidden{}
}

/*
GetConversationsEmailsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetConversationsEmailsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations emails forbidden response has a 2xx status code
func (o *GetConversationsEmailsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations emails forbidden response has a 3xx status code
func (o *GetConversationsEmailsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations emails forbidden response has a 4xx status code
func (o *GetConversationsEmailsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations emails forbidden response has a 5xx status code
func (o *GetConversationsEmailsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations emails forbidden response a status code equal to that given
func (o *GetConversationsEmailsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetConversationsEmailsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails][%d] getConversationsEmailsForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsEmailsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails][%d] getConversationsEmailsForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsEmailsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailsNotFound creates a GetConversationsEmailsNotFound with default headers values
func NewGetConversationsEmailsNotFound() *GetConversationsEmailsNotFound {
	return &GetConversationsEmailsNotFound{}
}

/*
GetConversationsEmailsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetConversationsEmailsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations emails not found response has a 2xx status code
func (o *GetConversationsEmailsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations emails not found response has a 3xx status code
func (o *GetConversationsEmailsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations emails not found response has a 4xx status code
func (o *GetConversationsEmailsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations emails not found response has a 5xx status code
func (o *GetConversationsEmailsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations emails not found response a status code equal to that given
func (o *GetConversationsEmailsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetConversationsEmailsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails][%d] getConversationsEmailsNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsEmailsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails][%d] getConversationsEmailsNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsEmailsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailsRequestTimeout creates a GetConversationsEmailsRequestTimeout with default headers values
func NewGetConversationsEmailsRequestTimeout() *GetConversationsEmailsRequestTimeout {
	return &GetConversationsEmailsRequestTimeout{}
}

/*
GetConversationsEmailsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetConversationsEmailsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations emails request timeout response has a 2xx status code
func (o *GetConversationsEmailsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations emails request timeout response has a 3xx status code
func (o *GetConversationsEmailsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations emails request timeout response has a 4xx status code
func (o *GetConversationsEmailsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations emails request timeout response has a 5xx status code
func (o *GetConversationsEmailsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations emails request timeout response a status code equal to that given
func (o *GetConversationsEmailsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetConversationsEmailsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails][%d] getConversationsEmailsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationsEmailsRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails][%d] getConversationsEmailsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationsEmailsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailsRequestEntityTooLarge creates a GetConversationsEmailsRequestEntityTooLarge with default headers values
func NewGetConversationsEmailsRequestEntityTooLarge() *GetConversationsEmailsRequestEntityTooLarge {
	return &GetConversationsEmailsRequestEntityTooLarge{}
}

/*
GetConversationsEmailsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetConversationsEmailsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations emails request entity too large response has a 2xx status code
func (o *GetConversationsEmailsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations emails request entity too large response has a 3xx status code
func (o *GetConversationsEmailsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations emails request entity too large response has a 4xx status code
func (o *GetConversationsEmailsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations emails request entity too large response has a 5xx status code
func (o *GetConversationsEmailsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations emails request entity too large response a status code equal to that given
func (o *GetConversationsEmailsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetConversationsEmailsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails][%d] getConversationsEmailsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsEmailsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails][%d] getConversationsEmailsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsEmailsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailsUnsupportedMediaType creates a GetConversationsEmailsUnsupportedMediaType with default headers values
func NewGetConversationsEmailsUnsupportedMediaType() *GetConversationsEmailsUnsupportedMediaType {
	return &GetConversationsEmailsUnsupportedMediaType{}
}

/*
GetConversationsEmailsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetConversationsEmailsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations emails unsupported media type response has a 2xx status code
func (o *GetConversationsEmailsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations emails unsupported media type response has a 3xx status code
func (o *GetConversationsEmailsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations emails unsupported media type response has a 4xx status code
func (o *GetConversationsEmailsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations emails unsupported media type response has a 5xx status code
func (o *GetConversationsEmailsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations emails unsupported media type response a status code equal to that given
func (o *GetConversationsEmailsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetConversationsEmailsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails][%d] getConversationsEmailsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsEmailsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails][%d] getConversationsEmailsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsEmailsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailsTooManyRequests creates a GetConversationsEmailsTooManyRequests with default headers values
func NewGetConversationsEmailsTooManyRequests() *GetConversationsEmailsTooManyRequests {
	return &GetConversationsEmailsTooManyRequests{}
}

/*
GetConversationsEmailsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetConversationsEmailsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations emails too many requests response has a 2xx status code
func (o *GetConversationsEmailsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations emails too many requests response has a 3xx status code
func (o *GetConversationsEmailsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations emails too many requests response has a 4xx status code
func (o *GetConversationsEmailsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations emails too many requests response has a 5xx status code
func (o *GetConversationsEmailsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations emails too many requests response a status code equal to that given
func (o *GetConversationsEmailsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetConversationsEmailsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails][%d] getConversationsEmailsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsEmailsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails][%d] getConversationsEmailsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsEmailsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailsInternalServerError creates a GetConversationsEmailsInternalServerError with default headers values
func NewGetConversationsEmailsInternalServerError() *GetConversationsEmailsInternalServerError {
	return &GetConversationsEmailsInternalServerError{}
}

/*
GetConversationsEmailsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetConversationsEmailsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations emails internal server error response has a 2xx status code
func (o *GetConversationsEmailsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations emails internal server error response has a 3xx status code
func (o *GetConversationsEmailsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations emails internal server error response has a 4xx status code
func (o *GetConversationsEmailsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations emails internal server error response has a 5xx status code
func (o *GetConversationsEmailsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations emails internal server error response a status code equal to that given
func (o *GetConversationsEmailsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetConversationsEmailsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails][%d] getConversationsEmailsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsEmailsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails][%d] getConversationsEmailsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsEmailsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailsServiceUnavailable creates a GetConversationsEmailsServiceUnavailable with default headers values
func NewGetConversationsEmailsServiceUnavailable() *GetConversationsEmailsServiceUnavailable {
	return &GetConversationsEmailsServiceUnavailable{}
}

/*
GetConversationsEmailsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetConversationsEmailsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations emails service unavailable response has a 2xx status code
func (o *GetConversationsEmailsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations emails service unavailable response has a 3xx status code
func (o *GetConversationsEmailsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations emails service unavailable response has a 4xx status code
func (o *GetConversationsEmailsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations emails service unavailable response has a 5xx status code
func (o *GetConversationsEmailsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations emails service unavailable response a status code equal to that given
func (o *GetConversationsEmailsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetConversationsEmailsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails][%d] getConversationsEmailsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsEmailsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails][%d] getConversationsEmailsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsEmailsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailsGatewayTimeout creates a GetConversationsEmailsGatewayTimeout with default headers values
func NewGetConversationsEmailsGatewayTimeout() *GetConversationsEmailsGatewayTimeout {
	return &GetConversationsEmailsGatewayTimeout{}
}

/*
GetConversationsEmailsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetConversationsEmailsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations emails gateway timeout response has a 2xx status code
func (o *GetConversationsEmailsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations emails gateway timeout response has a 3xx status code
func (o *GetConversationsEmailsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations emails gateway timeout response has a 4xx status code
func (o *GetConversationsEmailsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations emails gateway timeout response has a 5xx status code
func (o *GetConversationsEmailsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations emails gateway timeout response a status code equal to that given
func (o *GetConversationsEmailsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetConversationsEmailsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails][%d] getConversationsEmailsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsEmailsGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails][%d] getConversationsEmailsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsEmailsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
