// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostConversationsScreenshareParticipantCommunicationWrapupReader is a Reader for the PostConversationsScreenshareParticipantCommunicationWrapup structure.
type PostConversationsScreenshareParticipantCommunicationWrapupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostConversationsScreenshareParticipantCommunicationWrapupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewPostConversationsScreenshareParticipantCommunicationWrapupAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostConversationsScreenshareParticipantCommunicationWrapupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostConversationsScreenshareParticipantCommunicationWrapupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostConversationsScreenshareParticipantCommunicationWrapupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostConversationsScreenshareParticipantCommunicationWrapupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostConversationsScreenshareParticipantCommunicationWrapupRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostConversationsScreenshareParticipantCommunicationWrapupRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostConversationsScreenshareParticipantCommunicationWrapupUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostConversationsScreenshareParticipantCommunicationWrapupTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostConversationsScreenshareParticipantCommunicationWrapupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostConversationsScreenshareParticipantCommunicationWrapupServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostConversationsScreenshareParticipantCommunicationWrapupGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostConversationsScreenshareParticipantCommunicationWrapupAccepted creates a PostConversationsScreenshareParticipantCommunicationWrapupAccepted with default headers values
func NewPostConversationsScreenshareParticipantCommunicationWrapupAccepted() *PostConversationsScreenshareParticipantCommunicationWrapupAccepted {
	return &PostConversationsScreenshareParticipantCommunicationWrapupAccepted{}
}

/*
PostConversationsScreenshareParticipantCommunicationWrapupAccepted describes a response with status code 202, with default header values.

Accepted
*/
type PostConversationsScreenshareParticipantCommunicationWrapupAccepted struct {
}

// IsSuccess returns true when this post conversations screenshare participant communication wrapup accepted response has a 2xx status code
func (o *PostConversationsScreenshareParticipantCommunicationWrapupAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post conversations screenshare participant communication wrapup accepted response has a 3xx status code
func (o *PostConversationsScreenshareParticipantCommunicationWrapupAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations screenshare participant communication wrapup accepted response has a 4xx status code
func (o *PostConversationsScreenshareParticipantCommunicationWrapupAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations screenshare participant communication wrapup accepted response has a 5xx status code
func (o *PostConversationsScreenshareParticipantCommunicationWrapupAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations screenshare participant communication wrapup accepted response a status code equal to that given
func (o *PostConversationsScreenshareParticipantCommunicationWrapupAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *PostConversationsScreenshareParticipantCommunicationWrapupAccepted) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsScreenshareParticipantCommunicationWrapupAccepted ", 202)
}

func (o *PostConversationsScreenshareParticipantCommunicationWrapupAccepted) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsScreenshareParticipantCommunicationWrapupAccepted ", 202)
}

func (o *PostConversationsScreenshareParticipantCommunicationWrapupAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostConversationsScreenshareParticipantCommunicationWrapupBadRequest creates a PostConversationsScreenshareParticipantCommunicationWrapupBadRequest with default headers values
func NewPostConversationsScreenshareParticipantCommunicationWrapupBadRequest() *PostConversationsScreenshareParticipantCommunicationWrapupBadRequest {
	return &PostConversationsScreenshareParticipantCommunicationWrapupBadRequest{}
}

/*
PostConversationsScreenshareParticipantCommunicationWrapupBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostConversationsScreenshareParticipantCommunicationWrapupBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations screenshare participant communication wrapup bad request response has a 2xx status code
func (o *PostConversationsScreenshareParticipantCommunicationWrapupBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations screenshare participant communication wrapup bad request response has a 3xx status code
func (o *PostConversationsScreenshareParticipantCommunicationWrapupBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations screenshare participant communication wrapup bad request response has a 4xx status code
func (o *PostConversationsScreenshareParticipantCommunicationWrapupBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations screenshare participant communication wrapup bad request response has a 5xx status code
func (o *PostConversationsScreenshareParticipantCommunicationWrapupBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations screenshare participant communication wrapup bad request response a status code equal to that given
func (o *PostConversationsScreenshareParticipantCommunicationWrapupBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostConversationsScreenshareParticipantCommunicationWrapupBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsScreenshareParticipantCommunicationWrapupBadRequest  %+v", 400, o.Payload)
}

func (o *PostConversationsScreenshareParticipantCommunicationWrapupBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsScreenshareParticipantCommunicationWrapupBadRequest  %+v", 400, o.Payload)
}

func (o *PostConversationsScreenshareParticipantCommunicationWrapupBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsScreenshareParticipantCommunicationWrapupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsScreenshareParticipantCommunicationWrapupUnauthorized creates a PostConversationsScreenshareParticipantCommunicationWrapupUnauthorized with default headers values
func NewPostConversationsScreenshareParticipantCommunicationWrapupUnauthorized() *PostConversationsScreenshareParticipantCommunicationWrapupUnauthorized {
	return &PostConversationsScreenshareParticipantCommunicationWrapupUnauthorized{}
}

/*
PostConversationsScreenshareParticipantCommunicationWrapupUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostConversationsScreenshareParticipantCommunicationWrapupUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations screenshare participant communication wrapup unauthorized response has a 2xx status code
func (o *PostConversationsScreenshareParticipantCommunicationWrapupUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations screenshare participant communication wrapup unauthorized response has a 3xx status code
func (o *PostConversationsScreenshareParticipantCommunicationWrapupUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations screenshare participant communication wrapup unauthorized response has a 4xx status code
func (o *PostConversationsScreenshareParticipantCommunicationWrapupUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations screenshare participant communication wrapup unauthorized response has a 5xx status code
func (o *PostConversationsScreenshareParticipantCommunicationWrapupUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations screenshare participant communication wrapup unauthorized response a status code equal to that given
func (o *PostConversationsScreenshareParticipantCommunicationWrapupUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostConversationsScreenshareParticipantCommunicationWrapupUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsScreenshareParticipantCommunicationWrapupUnauthorized  %+v", 401, o.Payload)
}

func (o *PostConversationsScreenshareParticipantCommunicationWrapupUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsScreenshareParticipantCommunicationWrapupUnauthorized  %+v", 401, o.Payload)
}

func (o *PostConversationsScreenshareParticipantCommunicationWrapupUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsScreenshareParticipantCommunicationWrapupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsScreenshareParticipantCommunicationWrapupForbidden creates a PostConversationsScreenshareParticipantCommunicationWrapupForbidden with default headers values
func NewPostConversationsScreenshareParticipantCommunicationWrapupForbidden() *PostConversationsScreenshareParticipantCommunicationWrapupForbidden {
	return &PostConversationsScreenshareParticipantCommunicationWrapupForbidden{}
}

/*
PostConversationsScreenshareParticipantCommunicationWrapupForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostConversationsScreenshareParticipantCommunicationWrapupForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations screenshare participant communication wrapup forbidden response has a 2xx status code
func (o *PostConversationsScreenshareParticipantCommunicationWrapupForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations screenshare participant communication wrapup forbidden response has a 3xx status code
func (o *PostConversationsScreenshareParticipantCommunicationWrapupForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations screenshare participant communication wrapup forbidden response has a 4xx status code
func (o *PostConversationsScreenshareParticipantCommunicationWrapupForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations screenshare participant communication wrapup forbidden response has a 5xx status code
func (o *PostConversationsScreenshareParticipantCommunicationWrapupForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations screenshare participant communication wrapup forbidden response a status code equal to that given
func (o *PostConversationsScreenshareParticipantCommunicationWrapupForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostConversationsScreenshareParticipantCommunicationWrapupForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsScreenshareParticipantCommunicationWrapupForbidden  %+v", 403, o.Payload)
}

func (o *PostConversationsScreenshareParticipantCommunicationWrapupForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsScreenshareParticipantCommunicationWrapupForbidden  %+v", 403, o.Payload)
}

func (o *PostConversationsScreenshareParticipantCommunicationWrapupForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsScreenshareParticipantCommunicationWrapupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsScreenshareParticipantCommunicationWrapupNotFound creates a PostConversationsScreenshareParticipantCommunicationWrapupNotFound with default headers values
func NewPostConversationsScreenshareParticipantCommunicationWrapupNotFound() *PostConversationsScreenshareParticipantCommunicationWrapupNotFound {
	return &PostConversationsScreenshareParticipantCommunicationWrapupNotFound{}
}

/*
PostConversationsScreenshareParticipantCommunicationWrapupNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostConversationsScreenshareParticipantCommunicationWrapupNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations screenshare participant communication wrapup not found response has a 2xx status code
func (o *PostConversationsScreenshareParticipantCommunicationWrapupNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations screenshare participant communication wrapup not found response has a 3xx status code
func (o *PostConversationsScreenshareParticipantCommunicationWrapupNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations screenshare participant communication wrapup not found response has a 4xx status code
func (o *PostConversationsScreenshareParticipantCommunicationWrapupNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations screenshare participant communication wrapup not found response has a 5xx status code
func (o *PostConversationsScreenshareParticipantCommunicationWrapupNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations screenshare participant communication wrapup not found response a status code equal to that given
func (o *PostConversationsScreenshareParticipantCommunicationWrapupNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostConversationsScreenshareParticipantCommunicationWrapupNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsScreenshareParticipantCommunicationWrapupNotFound  %+v", 404, o.Payload)
}

func (o *PostConversationsScreenshareParticipantCommunicationWrapupNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsScreenshareParticipantCommunicationWrapupNotFound  %+v", 404, o.Payload)
}

func (o *PostConversationsScreenshareParticipantCommunicationWrapupNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsScreenshareParticipantCommunicationWrapupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsScreenshareParticipantCommunicationWrapupRequestTimeout creates a PostConversationsScreenshareParticipantCommunicationWrapupRequestTimeout with default headers values
func NewPostConversationsScreenshareParticipantCommunicationWrapupRequestTimeout() *PostConversationsScreenshareParticipantCommunicationWrapupRequestTimeout {
	return &PostConversationsScreenshareParticipantCommunicationWrapupRequestTimeout{}
}

/*
PostConversationsScreenshareParticipantCommunicationWrapupRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostConversationsScreenshareParticipantCommunicationWrapupRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations screenshare participant communication wrapup request timeout response has a 2xx status code
func (o *PostConversationsScreenshareParticipantCommunicationWrapupRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations screenshare participant communication wrapup request timeout response has a 3xx status code
func (o *PostConversationsScreenshareParticipantCommunicationWrapupRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations screenshare participant communication wrapup request timeout response has a 4xx status code
func (o *PostConversationsScreenshareParticipantCommunicationWrapupRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations screenshare participant communication wrapup request timeout response has a 5xx status code
func (o *PostConversationsScreenshareParticipantCommunicationWrapupRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations screenshare participant communication wrapup request timeout response a status code equal to that given
func (o *PostConversationsScreenshareParticipantCommunicationWrapupRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostConversationsScreenshareParticipantCommunicationWrapupRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsScreenshareParticipantCommunicationWrapupRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostConversationsScreenshareParticipantCommunicationWrapupRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsScreenshareParticipantCommunicationWrapupRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostConversationsScreenshareParticipantCommunicationWrapupRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsScreenshareParticipantCommunicationWrapupRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsScreenshareParticipantCommunicationWrapupRequestEntityTooLarge creates a PostConversationsScreenshareParticipantCommunicationWrapupRequestEntityTooLarge with default headers values
func NewPostConversationsScreenshareParticipantCommunicationWrapupRequestEntityTooLarge() *PostConversationsScreenshareParticipantCommunicationWrapupRequestEntityTooLarge {
	return &PostConversationsScreenshareParticipantCommunicationWrapupRequestEntityTooLarge{}
}

/*
PostConversationsScreenshareParticipantCommunicationWrapupRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PostConversationsScreenshareParticipantCommunicationWrapupRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations screenshare participant communication wrapup request entity too large response has a 2xx status code
func (o *PostConversationsScreenshareParticipantCommunicationWrapupRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations screenshare participant communication wrapup request entity too large response has a 3xx status code
func (o *PostConversationsScreenshareParticipantCommunicationWrapupRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations screenshare participant communication wrapup request entity too large response has a 4xx status code
func (o *PostConversationsScreenshareParticipantCommunicationWrapupRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations screenshare participant communication wrapup request entity too large response has a 5xx status code
func (o *PostConversationsScreenshareParticipantCommunicationWrapupRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations screenshare participant communication wrapup request entity too large response a status code equal to that given
func (o *PostConversationsScreenshareParticipantCommunicationWrapupRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostConversationsScreenshareParticipantCommunicationWrapupRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsScreenshareParticipantCommunicationWrapupRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostConversationsScreenshareParticipantCommunicationWrapupRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsScreenshareParticipantCommunicationWrapupRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostConversationsScreenshareParticipantCommunicationWrapupRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsScreenshareParticipantCommunicationWrapupRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsScreenshareParticipantCommunicationWrapupUnsupportedMediaType creates a PostConversationsScreenshareParticipantCommunicationWrapupUnsupportedMediaType with default headers values
func NewPostConversationsScreenshareParticipantCommunicationWrapupUnsupportedMediaType() *PostConversationsScreenshareParticipantCommunicationWrapupUnsupportedMediaType {
	return &PostConversationsScreenshareParticipantCommunicationWrapupUnsupportedMediaType{}
}

/*
PostConversationsScreenshareParticipantCommunicationWrapupUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostConversationsScreenshareParticipantCommunicationWrapupUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations screenshare participant communication wrapup unsupported media type response has a 2xx status code
func (o *PostConversationsScreenshareParticipantCommunicationWrapupUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations screenshare participant communication wrapup unsupported media type response has a 3xx status code
func (o *PostConversationsScreenshareParticipantCommunicationWrapupUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations screenshare participant communication wrapup unsupported media type response has a 4xx status code
func (o *PostConversationsScreenshareParticipantCommunicationWrapupUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations screenshare participant communication wrapup unsupported media type response has a 5xx status code
func (o *PostConversationsScreenshareParticipantCommunicationWrapupUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations screenshare participant communication wrapup unsupported media type response a status code equal to that given
func (o *PostConversationsScreenshareParticipantCommunicationWrapupUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostConversationsScreenshareParticipantCommunicationWrapupUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsScreenshareParticipantCommunicationWrapupUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostConversationsScreenshareParticipantCommunicationWrapupUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsScreenshareParticipantCommunicationWrapupUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostConversationsScreenshareParticipantCommunicationWrapupUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsScreenshareParticipantCommunicationWrapupUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsScreenshareParticipantCommunicationWrapupTooManyRequests creates a PostConversationsScreenshareParticipantCommunicationWrapupTooManyRequests with default headers values
func NewPostConversationsScreenshareParticipantCommunicationWrapupTooManyRequests() *PostConversationsScreenshareParticipantCommunicationWrapupTooManyRequests {
	return &PostConversationsScreenshareParticipantCommunicationWrapupTooManyRequests{}
}

/*
PostConversationsScreenshareParticipantCommunicationWrapupTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostConversationsScreenshareParticipantCommunicationWrapupTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations screenshare participant communication wrapup too many requests response has a 2xx status code
func (o *PostConversationsScreenshareParticipantCommunicationWrapupTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations screenshare participant communication wrapup too many requests response has a 3xx status code
func (o *PostConversationsScreenshareParticipantCommunicationWrapupTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations screenshare participant communication wrapup too many requests response has a 4xx status code
func (o *PostConversationsScreenshareParticipantCommunicationWrapupTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations screenshare participant communication wrapup too many requests response has a 5xx status code
func (o *PostConversationsScreenshareParticipantCommunicationWrapupTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations screenshare participant communication wrapup too many requests response a status code equal to that given
func (o *PostConversationsScreenshareParticipantCommunicationWrapupTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostConversationsScreenshareParticipantCommunicationWrapupTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsScreenshareParticipantCommunicationWrapupTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostConversationsScreenshareParticipantCommunicationWrapupTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsScreenshareParticipantCommunicationWrapupTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostConversationsScreenshareParticipantCommunicationWrapupTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsScreenshareParticipantCommunicationWrapupTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsScreenshareParticipantCommunicationWrapupInternalServerError creates a PostConversationsScreenshareParticipantCommunicationWrapupInternalServerError with default headers values
func NewPostConversationsScreenshareParticipantCommunicationWrapupInternalServerError() *PostConversationsScreenshareParticipantCommunicationWrapupInternalServerError {
	return &PostConversationsScreenshareParticipantCommunicationWrapupInternalServerError{}
}

/*
PostConversationsScreenshareParticipantCommunicationWrapupInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostConversationsScreenshareParticipantCommunicationWrapupInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations screenshare participant communication wrapup internal server error response has a 2xx status code
func (o *PostConversationsScreenshareParticipantCommunicationWrapupInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations screenshare participant communication wrapup internal server error response has a 3xx status code
func (o *PostConversationsScreenshareParticipantCommunicationWrapupInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations screenshare participant communication wrapup internal server error response has a 4xx status code
func (o *PostConversationsScreenshareParticipantCommunicationWrapupInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations screenshare participant communication wrapup internal server error response has a 5xx status code
func (o *PostConversationsScreenshareParticipantCommunicationWrapupInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversations screenshare participant communication wrapup internal server error response a status code equal to that given
func (o *PostConversationsScreenshareParticipantCommunicationWrapupInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostConversationsScreenshareParticipantCommunicationWrapupInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsScreenshareParticipantCommunicationWrapupInternalServerError  %+v", 500, o.Payload)
}

func (o *PostConversationsScreenshareParticipantCommunicationWrapupInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsScreenshareParticipantCommunicationWrapupInternalServerError  %+v", 500, o.Payload)
}

func (o *PostConversationsScreenshareParticipantCommunicationWrapupInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsScreenshareParticipantCommunicationWrapupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsScreenshareParticipantCommunicationWrapupServiceUnavailable creates a PostConversationsScreenshareParticipantCommunicationWrapupServiceUnavailable with default headers values
func NewPostConversationsScreenshareParticipantCommunicationWrapupServiceUnavailable() *PostConversationsScreenshareParticipantCommunicationWrapupServiceUnavailable {
	return &PostConversationsScreenshareParticipantCommunicationWrapupServiceUnavailable{}
}

/*
PostConversationsScreenshareParticipantCommunicationWrapupServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostConversationsScreenshareParticipantCommunicationWrapupServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations screenshare participant communication wrapup service unavailable response has a 2xx status code
func (o *PostConversationsScreenshareParticipantCommunicationWrapupServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations screenshare participant communication wrapup service unavailable response has a 3xx status code
func (o *PostConversationsScreenshareParticipantCommunicationWrapupServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations screenshare participant communication wrapup service unavailable response has a 4xx status code
func (o *PostConversationsScreenshareParticipantCommunicationWrapupServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations screenshare participant communication wrapup service unavailable response has a 5xx status code
func (o *PostConversationsScreenshareParticipantCommunicationWrapupServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversations screenshare participant communication wrapup service unavailable response a status code equal to that given
func (o *PostConversationsScreenshareParticipantCommunicationWrapupServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostConversationsScreenshareParticipantCommunicationWrapupServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsScreenshareParticipantCommunicationWrapupServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostConversationsScreenshareParticipantCommunicationWrapupServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsScreenshareParticipantCommunicationWrapupServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostConversationsScreenshareParticipantCommunicationWrapupServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsScreenshareParticipantCommunicationWrapupServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsScreenshareParticipantCommunicationWrapupGatewayTimeout creates a PostConversationsScreenshareParticipantCommunicationWrapupGatewayTimeout with default headers values
func NewPostConversationsScreenshareParticipantCommunicationWrapupGatewayTimeout() *PostConversationsScreenshareParticipantCommunicationWrapupGatewayTimeout {
	return &PostConversationsScreenshareParticipantCommunicationWrapupGatewayTimeout{}
}

/*
PostConversationsScreenshareParticipantCommunicationWrapupGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostConversationsScreenshareParticipantCommunicationWrapupGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations screenshare participant communication wrapup gateway timeout response has a 2xx status code
func (o *PostConversationsScreenshareParticipantCommunicationWrapupGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations screenshare participant communication wrapup gateway timeout response has a 3xx status code
func (o *PostConversationsScreenshareParticipantCommunicationWrapupGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations screenshare participant communication wrapup gateway timeout response has a 4xx status code
func (o *PostConversationsScreenshareParticipantCommunicationWrapupGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations screenshare participant communication wrapup gateway timeout response has a 5xx status code
func (o *PostConversationsScreenshareParticipantCommunicationWrapupGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversations screenshare participant communication wrapup gateway timeout response a status code equal to that given
func (o *PostConversationsScreenshareParticipantCommunicationWrapupGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostConversationsScreenshareParticipantCommunicationWrapupGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsScreenshareParticipantCommunicationWrapupGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostConversationsScreenshareParticipantCommunicationWrapupGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsScreenshareParticipantCommunicationWrapupGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostConversationsScreenshareParticipantCommunicationWrapupGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsScreenshareParticipantCommunicationWrapupGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
