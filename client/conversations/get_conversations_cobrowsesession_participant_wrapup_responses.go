// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetConversationsCobrowsesessionParticipantWrapupReader is a Reader for the GetConversationsCobrowsesessionParticipantWrapup structure.
type GetConversationsCobrowsesessionParticipantWrapupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConversationsCobrowsesessionParticipantWrapupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConversationsCobrowsesessionParticipantWrapupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetConversationsCobrowsesessionParticipantWrapupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetConversationsCobrowsesessionParticipantWrapupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetConversationsCobrowsesessionParticipantWrapupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetConversationsCobrowsesessionParticipantWrapupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetConversationsCobrowsesessionParticipantWrapupRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetConversationsCobrowsesessionParticipantWrapupRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetConversationsCobrowsesessionParticipantWrapupUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetConversationsCobrowsesessionParticipantWrapupTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetConversationsCobrowsesessionParticipantWrapupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetConversationsCobrowsesessionParticipantWrapupServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetConversationsCobrowsesessionParticipantWrapupGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetConversationsCobrowsesessionParticipantWrapupOK creates a GetConversationsCobrowsesessionParticipantWrapupOK with default headers values
func NewGetConversationsCobrowsesessionParticipantWrapupOK() *GetConversationsCobrowsesessionParticipantWrapupOK {
	return &GetConversationsCobrowsesessionParticipantWrapupOK{}
}

/*
GetConversationsCobrowsesessionParticipantWrapupOK describes a response with status code 200, with default header values.

successful operation
*/
type GetConversationsCobrowsesessionParticipantWrapupOK struct {
	Payload *models.AssignedWrapupCode
}

// IsSuccess returns true when this get conversations cobrowsesession participant wrapup o k response has a 2xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get conversations cobrowsesession participant wrapup o k response has a 3xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations cobrowsesession participant wrapup o k response has a 4xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations cobrowsesession participant wrapup o k response has a 5xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations cobrowsesession participant wrapup o k response a status code equal to that given
func (o *GetConversationsCobrowsesessionParticipantWrapupOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetConversationsCobrowsesessionParticipantWrapupOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsCobrowsesessionParticipantWrapupOK  %+v", 200, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantWrapupOK) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsCobrowsesessionParticipantWrapupOK  %+v", 200, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantWrapupOK) GetPayload() *models.AssignedWrapupCode {
	return o.Payload
}

func (o *GetConversationsCobrowsesessionParticipantWrapupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AssignedWrapupCode)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCobrowsesessionParticipantWrapupBadRequest creates a GetConversationsCobrowsesessionParticipantWrapupBadRequest with default headers values
func NewGetConversationsCobrowsesessionParticipantWrapupBadRequest() *GetConversationsCobrowsesessionParticipantWrapupBadRequest {
	return &GetConversationsCobrowsesessionParticipantWrapupBadRequest{}
}

/*
GetConversationsCobrowsesessionParticipantWrapupBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetConversationsCobrowsesessionParticipantWrapupBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations cobrowsesession participant wrapup bad request response has a 2xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations cobrowsesession participant wrapup bad request response has a 3xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations cobrowsesession participant wrapup bad request response has a 4xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations cobrowsesession participant wrapup bad request response has a 5xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations cobrowsesession participant wrapup bad request response a status code equal to that given
func (o *GetConversationsCobrowsesessionParticipantWrapupBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetConversationsCobrowsesessionParticipantWrapupBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsCobrowsesessionParticipantWrapupBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantWrapupBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsCobrowsesessionParticipantWrapupBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantWrapupBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCobrowsesessionParticipantWrapupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCobrowsesessionParticipantWrapupUnauthorized creates a GetConversationsCobrowsesessionParticipantWrapupUnauthorized with default headers values
func NewGetConversationsCobrowsesessionParticipantWrapupUnauthorized() *GetConversationsCobrowsesessionParticipantWrapupUnauthorized {
	return &GetConversationsCobrowsesessionParticipantWrapupUnauthorized{}
}

/*
GetConversationsCobrowsesessionParticipantWrapupUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetConversationsCobrowsesessionParticipantWrapupUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations cobrowsesession participant wrapup unauthorized response has a 2xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations cobrowsesession participant wrapup unauthorized response has a 3xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations cobrowsesession participant wrapup unauthorized response has a 4xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations cobrowsesession participant wrapup unauthorized response has a 5xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations cobrowsesession participant wrapup unauthorized response a status code equal to that given
func (o *GetConversationsCobrowsesessionParticipantWrapupUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetConversationsCobrowsesessionParticipantWrapupUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsCobrowsesessionParticipantWrapupUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantWrapupUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsCobrowsesessionParticipantWrapupUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantWrapupUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCobrowsesessionParticipantWrapupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCobrowsesessionParticipantWrapupForbidden creates a GetConversationsCobrowsesessionParticipantWrapupForbidden with default headers values
func NewGetConversationsCobrowsesessionParticipantWrapupForbidden() *GetConversationsCobrowsesessionParticipantWrapupForbidden {
	return &GetConversationsCobrowsesessionParticipantWrapupForbidden{}
}

/*
GetConversationsCobrowsesessionParticipantWrapupForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetConversationsCobrowsesessionParticipantWrapupForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations cobrowsesession participant wrapup forbidden response has a 2xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations cobrowsesession participant wrapup forbidden response has a 3xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations cobrowsesession participant wrapup forbidden response has a 4xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations cobrowsesession participant wrapup forbidden response has a 5xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations cobrowsesession participant wrapup forbidden response a status code equal to that given
func (o *GetConversationsCobrowsesessionParticipantWrapupForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetConversationsCobrowsesessionParticipantWrapupForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsCobrowsesessionParticipantWrapupForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantWrapupForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsCobrowsesessionParticipantWrapupForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantWrapupForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCobrowsesessionParticipantWrapupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCobrowsesessionParticipantWrapupNotFound creates a GetConversationsCobrowsesessionParticipantWrapupNotFound with default headers values
func NewGetConversationsCobrowsesessionParticipantWrapupNotFound() *GetConversationsCobrowsesessionParticipantWrapupNotFound {
	return &GetConversationsCobrowsesessionParticipantWrapupNotFound{}
}

/*
GetConversationsCobrowsesessionParticipantWrapupNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetConversationsCobrowsesessionParticipantWrapupNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations cobrowsesession participant wrapup not found response has a 2xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations cobrowsesession participant wrapup not found response has a 3xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations cobrowsesession participant wrapup not found response has a 4xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations cobrowsesession participant wrapup not found response has a 5xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations cobrowsesession participant wrapup not found response a status code equal to that given
func (o *GetConversationsCobrowsesessionParticipantWrapupNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetConversationsCobrowsesessionParticipantWrapupNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsCobrowsesessionParticipantWrapupNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantWrapupNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsCobrowsesessionParticipantWrapupNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantWrapupNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCobrowsesessionParticipantWrapupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCobrowsesessionParticipantWrapupRequestTimeout creates a GetConversationsCobrowsesessionParticipantWrapupRequestTimeout with default headers values
func NewGetConversationsCobrowsesessionParticipantWrapupRequestTimeout() *GetConversationsCobrowsesessionParticipantWrapupRequestTimeout {
	return &GetConversationsCobrowsesessionParticipantWrapupRequestTimeout{}
}

/*
GetConversationsCobrowsesessionParticipantWrapupRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetConversationsCobrowsesessionParticipantWrapupRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations cobrowsesession participant wrapup request timeout response has a 2xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations cobrowsesession participant wrapup request timeout response has a 3xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations cobrowsesession participant wrapup request timeout response has a 4xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations cobrowsesession participant wrapup request timeout response has a 5xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations cobrowsesession participant wrapup request timeout response a status code equal to that given
func (o *GetConversationsCobrowsesessionParticipantWrapupRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetConversationsCobrowsesessionParticipantWrapupRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsCobrowsesessionParticipantWrapupRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantWrapupRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsCobrowsesessionParticipantWrapupRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantWrapupRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCobrowsesessionParticipantWrapupRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCobrowsesessionParticipantWrapupRequestEntityTooLarge creates a GetConversationsCobrowsesessionParticipantWrapupRequestEntityTooLarge with default headers values
func NewGetConversationsCobrowsesessionParticipantWrapupRequestEntityTooLarge() *GetConversationsCobrowsesessionParticipantWrapupRequestEntityTooLarge {
	return &GetConversationsCobrowsesessionParticipantWrapupRequestEntityTooLarge{}
}

/*
GetConversationsCobrowsesessionParticipantWrapupRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetConversationsCobrowsesessionParticipantWrapupRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations cobrowsesession participant wrapup request entity too large response has a 2xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations cobrowsesession participant wrapup request entity too large response has a 3xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations cobrowsesession participant wrapup request entity too large response has a 4xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations cobrowsesession participant wrapup request entity too large response has a 5xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations cobrowsesession participant wrapup request entity too large response a status code equal to that given
func (o *GetConversationsCobrowsesessionParticipantWrapupRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetConversationsCobrowsesessionParticipantWrapupRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsCobrowsesessionParticipantWrapupRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantWrapupRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsCobrowsesessionParticipantWrapupRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantWrapupRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCobrowsesessionParticipantWrapupRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCobrowsesessionParticipantWrapupUnsupportedMediaType creates a GetConversationsCobrowsesessionParticipantWrapupUnsupportedMediaType with default headers values
func NewGetConversationsCobrowsesessionParticipantWrapupUnsupportedMediaType() *GetConversationsCobrowsesessionParticipantWrapupUnsupportedMediaType {
	return &GetConversationsCobrowsesessionParticipantWrapupUnsupportedMediaType{}
}

/*
GetConversationsCobrowsesessionParticipantWrapupUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetConversationsCobrowsesessionParticipantWrapupUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations cobrowsesession participant wrapup unsupported media type response has a 2xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations cobrowsesession participant wrapup unsupported media type response has a 3xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations cobrowsesession participant wrapup unsupported media type response has a 4xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations cobrowsesession participant wrapup unsupported media type response has a 5xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations cobrowsesession participant wrapup unsupported media type response a status code equal to that given
func (o *GetConversationsCobrowsesessionParticipantWrapupUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetConversationsCobrowsesessionParticipantWrapupUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsCobrowsesessionParticipantWrapupUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantWrapupUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsCobrowsesessionParticipantWrapupUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantWrapupUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCobrowsesessionParticipantWrapupUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCobrowsesessionParticipantWrapupTooManyRequests creates a GetConversationsCobrowsesessionParticipantWrapupTooManyRequests with default headers values
func NewGetConversationsCobrowsesessionParticipantWrapupTooManyRequests() *GetConversationsCobrowsesessionParticipantWrapupTooManyRequests {
	return &GetConversationsCobrowsesessionParticipantWrapupTooManyRequests{}
}

/*
GetConversationsCobrowsesessionParticipantWrapupTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetConversationsCobrowsesessionParticipantWrapupTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations cobrowsesession participant wrapup too many requests response has a 2xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations cobrowsesession participant wrapup too many requests response has a 3xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations cobrowsesession participant wrapup too many requests response has a 4xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations cobrowsesession participant wrapup too many requests response has a 5xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations cobrowsesession participant wrapup too many requests response a status code equal to that given
func (o *GetConversationsCobrowsesessionParticipantWrapupTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetConversationsCobrowsesessionParticipantWrapupTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsCobrowsesessionParticipantWrapupTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantWrapupTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsCobrowsesessionParticipantWrapupTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantWrapupTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCobrowsesessionParticipantWrapupTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCobrowsesessionParticipantWrapupInternalServerError creates a GetConversationsCobrowsesessionParticipantWrapupInternalServerError with default headers values
func NewGetConversationsCobrowsesessionParticipantWrapupInternalServerError() *GetConversationsCobrowsesessionParticipantWrapupInternalServerError {
	return &GetConversationsCobrowsesessionParticipantWrapupInternalServerError{}
}

/*
GetConversationsCobrowsesessionParticipantWrapupInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetConversationsCobrowsesessionParticipantWrapupInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations cobrowsesession participant wrapup internal server error response has a 2xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations cobrowsesession participant wrapup internal server error response has a 3xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations cobrowsesession participant wrapup internal server error response has a 4xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations cobrowsesession participant wrapup internal server error response has a 5xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations cobrowsesession participant wrapup internal server error response a status code equal to that given
func (o *GetConversationsCobrowsesessionParticipantWrapupInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetConversationsCobrowsesessionParticipantWrapupInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsCobrowsesessionParticipantWrapupInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantWrapupInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsCobrowsesessionParticipantWrapupInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantWrapupInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCobrowsesessionParticipantWrapupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCobrowsesessionParticipantWrapupServiceUnavailable creates a GetConversationsCobrowsesessionParticipantWrapupServiceUnavailable with default headers values
func NewGetConversationsCobrowsesessionParticipantWrapupServiceUnavailable() *GetConversationsCobrowsesessionParticipantWrapupServiceUnavailable {
	return &GetConversationsCobrowsesessionParticipantWrapupServiceUnavailable{}
}

/*
GetConversationsCobrowsesessionParticipantWrapupServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetConversationsCobrowsesessionParticipantWrapupServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations cobrowsesession participant wrapup service unavailable response has a 2xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations cobrowsesession participant wrapup service unavailable response has a 3xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations cobrowsesession participant wrapup service unavailable response has a 4xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations cobrowsesession participant wrapup service unavailable response has a 5xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations cobrowsesession participant wrapup service unavailable response a status code equal to that given
func (o *GetConversationsCobrowsesessionParticipantWrapupServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetConversationsCobrowsesessionParticipantWrapupServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsCobrowsesessionParticipantWrapupServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantWrapupServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsCobrowsesessionParticipantWrapupServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantWrapupServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCobrowsesessionParticipantWrapupServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCobrowsesessionParticipantWrapupGatewayTimeout creates a GetConversationsCobrowsesessionParticipantWrapupGatewayTimeout with default headers values
func NewGetConversationsCobrowsesessionParticipantWrapupGatewayTimeout() *GetConversationsCobrowsesessionParticipantWrapupGatewayTimeout {
	return &GetConversationsCobrowsesessionParticipantWrapupGatewayTimeout{}
}

/*
GetConversationsCobrowsesessionParticipantWrapupGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetConversationsCobrowsesessionParticipantWrapupGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations cobrowsesession participant wrapup gateway timeout response has a 2xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations cobrowsesession participant wrapup gateway timeout response has a 3xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations cobrowsesession participant wrapup gateway timeout response has a 4xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations cobrowsesession participant wrapup gateway timeout response has a 5xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations cobrowsesession participant wrapup gateway timeout response a status code equal to that given
func (o *GetConversationsCobrowsesessionParticipantWrapupGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetConversationsCobrowsesessionParticipantWrapupGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsCobrowsesessionParticipantWrapupGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantWrapupGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsCobrowsesessionParticipantWrapupGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantWrapupGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCobrowsesessionParticipantWrapupGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
