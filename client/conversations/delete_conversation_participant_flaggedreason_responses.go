// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// DeleteConversationParticipantFlaggedreasonReader is a Reader for the DeleteConversationParticipantFlaggedreason structure.
type DeleteConversationParticipantFlaggedreasonReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteConversationParticipantFlaggedreasonReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteConversationParticipantFlaggedreasonNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteConversationParticipantFlaggedreasonBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteConversationParticipantFlaggedreasonUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteConversationParticipantFlaggedreasonForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteConversationParticipantFlaggedreasonNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewDeleteConversationParticipantFlaggedreasonRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewDeleteConversationParticipantFlaggedreasonRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDeleteConversationParticipantFlaggedreasonUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteConversationParticipantFlaggedreasonTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteConversationParticipantFlaggedreasonInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteConversationParticipantFlaggedreasonServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteConversationParticipantFlaggedreasonGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteConversationParticipantFlaggedreasonNoContent creates a DeleteConversationParticipantFlaggedreasonNoContent with default headers values
func NewDeleteConversationParticipantFlaggedreasonNoContent() *DeleteConversationParticipantFlaggedreasonNoContent {
	return &DeleteConversationParticipantFlaggedreasonNoContent{}
}

/*
DeleteConversationParticipantFlaggedreasonNoContent describes a response with status code 204, with default header values.

The flagged reason was removed successfully.
*/
type DeleteConversationParticipantFlaggedreasonNoContent struct {
}

// IsSuccess returns true when this delete conversation participant flaggedreason no content response has a 2xx status code
func (o *DeleteConversationParticipantFlaggedreasonNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete conversation participant flaggedreason no content response has a 3xx status code
func (o *DeleteConversationParticipantFlaggedreasonNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete conversation participant flaggedreason no content response has a 4xx status code
func (o *DeleteConversationParticipantFlaggedreasonNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete conversation participant flaggedreason no content response has a 5xx status code
func (o *DeleteConversationParticipantFlaggedreasonNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete conversation participant flaggedreason no content response a status code equal to that given
func (o *DeleteConversationParticipantFlaggedreasonNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *DeleteConversationParticipantFlaggedreasonNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/conversations/{conversationId}/participants/{participantId}/flaggedreason][%d] deleteConversationParticipantFlaggedreasonNoContent ", 204)
}

func (o *DeleteConversationParticipantFlaggedreasonNoContent) String() string {
	return fmt.Sprintf("[DELETE /api/v2/conversations/{conversationId}/participants/{participantId}/flaggedreason][%d] deleteConversationParticipantFlaggedreasonNoContent ", 204)
}

func (o *DeleteConversationParticipantFlaggedreasonNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteConversationParticipantFlaggedreasonBadRequest creates a DeleteConversationParticipantFlaggedreasonBadRequest with default headers values
func NewDeleteConversationParticipantFlaggedreasonBadRequest() *DeleteConversationParticipantFlaggedreasonBadRequest {
	return &DeleteConversationParticipantFlaggedreasonBadRequest{}
}

/*
DeleteConversationParticipantFlaggedreasonBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type DeleteConversationParticipantFlaggedreasonBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete conversation participant flaggedreason bad request response has a 2xx status code
func (o *DeleteConversationParticipantFlaggedreasonBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete conversation participant flaggedreason bad request response has a 3xx status code
func (o *DeleteConversationParticipantFlaggedreasonBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete conversation participant flaggedreason bad request response has a 4xx status code
func (o *DeleteConversationParticipantFlaggedreasonBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete conversation participant flaggedreason bad request response has a 5xx status code
func (o *DeleteConversationParticipantFlaggedreasonBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete conversation participant flaggedreason bad request response a status code equal to that given
func (o *DeleteConversationParticipantFlaggedreasonBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteConversationParticipantFlaggedreasonBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/conversations/{conversationId}/participants/{participantId}/flaggedreason][%d] deleteConversationParticipantFlaggedreasonBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteConversationParticipantFlaggedreasonBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v2/conversations/{conversationId}/participants/{participantId}/flaggedreason][%d] deleteConversationParticipantFlaggedreasonBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteConversationParticipantFlaggedreasonBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteConversationParticipantFlaggedreasonBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteConversationParticipantFlaggedreasonUnauthorized creates a DeleteConversationParticipantFlaggedreasonUnauthorized with default headers values
func NewDeleteConversationParticipantFlaggedreasonUnauthorized() *DeleteConversationParticipantFlaggedreasonUnauthorized {
	return &DeleteConversationParticipantFlaggedreasonUnauthorized{}
}

/*
DeleteConversationParticipantFlaggedreasonUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type DeleteConversationParticipantFlaggedreasonUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete conversation participant flaggedreason unauthorized response has a 2xx status code
func (o *DeleteConversationParticipantFlaggedreasonUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete conversation participant flaggedreason unauthorized response has a 3xx status code
func (o *DeleteConversationParticipantFlaggedreasonUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete conversation participant flaggedreason unauthorized response has a 4xx status code
func (o *DeleteConversationParticipantFlaggedreasonUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete conversation participant flaggedreason unauthorized response has a 5xx status code
func (o *DeleteConversationParticipantFlaggedreasonUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete conversation participant flaggedreason unauthorized response a status code equal to that given
func (o *DeleteConversationParticipantFlaggedreasonUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteConversationParticipantFlaggedreasonUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/conversations/{conversationId}/participants/{participantId}/flaggedreason][%d] deleteConversationParticipantFlaggedreasonUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteConversationParticipantFlaggedreasonUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/v2/conversations/{conversationId}/participants/{participantId}/flaggedreason][%d] deleteConversationParticipantFlaggedreasonUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteConversationParticipantFlaggedreasonUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteConversationParticipantFlaggedreasonUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteConversationParticipantFlaggedreasonForbidden creates a DeleteConversationParticipantFlaggedreasonForbidden with default headers values
func NewDeleteConversationParticipantFlaggedreasonForbidden() *DeleteConversationParticipantFlaggedreasonForbidden {
	return &DeleteConversationParticipantFlaggedreasonForbidden{}
}

/*
DeleteConversationParticipantFlaggedreasonForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type DeleteConversationParticipantFlaggedreasonForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete conversation participant flaggedreason forbidden response has a 2xx status code
func (o *DeleteConversationParticipantFlaggedreasonForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete conversation participant flaggedreason forbidden response has a 3xx status code
func (o *DeleteConversationParticipantFlaggedreasonForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete conversation participant flaggedreason forbidden response has a 4xx status code
func (o *DeleteConversationParticipantFlaggedreasonForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete conversation participant flaggedreason forbidden response has a 5xx status code
func (o *DeleteConversationParticipantFlaggedreasonForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete conversation participant flaggedreason forbidden response a status code equal to that given
func (o *DeleteConversationParticipantFlaggedreasonForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteConversationParticipantFlaggedreasonForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/conversations/{conversationId}/participants/{participantId}/flaggedreason][%d] deleteConversationParticipantFlaggedreasonForbidden  %+v", 403, o.Payload)
}

func (o *DeleteConversationParticipantFlaggedreasonForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/v2/conversations/{conversationId}/participants/{participantId}/flaggedreason][%d] deleteConversationParticipantFlaggedreasonForbidden  %+v", 403, o.Payload)
}

func (o *DeleteConversationParticipantFlaggedreasonForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteConversationParticipantFlaggedreasonForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteConversationParticipantFlaggedreasonNotFound creates a DeleteConversationParticipantFlaggedreasonNotFound with default headers values
func NewDeleteConversationParticipantFlaggedreasonNotFound() *DeleteConversationParticipantFlaggedreasonNotFound {
	return &DeleteConversationParticipantFlaggedreasonNotFound{}
}

/*
DeleteConversationParticipantFlaggedreasonNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type DeleteConversationParticipantFlaggedreasonNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete conversation participant flaggedreason not found response has a 2xx status code
func (o *DeleteConversationParticipantFlaggedreasonNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete conversation participant flaggedreason not found response has a 3xx status code
func (o *DeleteConversationParticipantFlaggedreasonNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete conversation participant flaggedreason not found response has a 4xx status code
func (o *DeleteConversationParticipantFlaggedreasonNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete conversation participant flaggedreason not found response has a 5xx status code
func (o *DeleteConversationParticipantFlaggedreasonNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete conversation participant flaggedreason not found response a status code equal to that given
func (o *DeleteConversationParticipantFlaggedreasonNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteConversationParticipantFlaggedreasonNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/conversations/{conversationId}/participants/{participantId}/flaggedreason][%d] deleteConversationParticipantFlaggedreasonNotFound  %+v", 404, o.Payload)
}

func (o *DeleteConversationParticipantFlaggedreasonNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v2/conversations/{conversationId}/participants/{participantId}/flaggedreason][%d] deleteConversationParticipantFlaggedreasonNotFound  %+v", 404, o.Payload)
}

func (o *DeleteConversationParticipantFlaggedreasonNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteConversationParticipantFlaggedreasonNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteConversationParticipantFlaggedreasonRequestTimeout creates a DeleteConversationParticipantFlaggedreasonRequestTimeout with default headers values
func NewDeleteConversationParticipantFlaggedreasonRequestTimeout() *DeleteConversationParticipantFlaggedreasonRequestTimeout {
	return &DeleteConversationParticipantFlaggedreasonRequestTimeout{}
}

/*
DeleteConversationParticipantFlaggedreasonRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type DeleteConversationParticipantFlaggedreasonRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete conversation participant flaggedreason request timeout response has a 2xx status code
func (o *DeleteConversationParticipantFlaggedreasonRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete conversation participant flaggedreason request timeout response has a 3xx status code
func (o *DeleteConversationParticipantFlaggedreasonRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete conversation participant flaggedreason request timeout response has a 4xx status code
func (o *DeleteConversationParticipantFlaggedreasonRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete conversation participant flaggedreason request timeout response has a 5xx status code
func (o *DeleteConversationParticipantFlaggedreasonRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this delete conversation participant flaggedreason request timeout response a status code equal to that given
func (o *DeleteConversationParticipantFlaggedreasonRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *DeleteConversationParticipantFlaggedreasonRequestTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/conversations/{conversationId}/participants/{participantId}/flaggedreason][%d] deleteConversationParticipantFlaggedreasonRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteConversationParticipantFlaggedreasonRequestTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/conversations/{conversationId}/participants/{participantId}/flaggedreason][%d] deleteConversationParticipantFlaggedreasonRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteConversationParticipantFlaggedreasonRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteConversationParticipantFlaggedreasonRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteConversationParticipantFlaggedreasonRequestEntityTooLarge creates a DeleteConversationParticipantFlaggedreasonRequestEntityTooLarge with default headers values
func NewDeleteConversationParticipantFlaggedreasonRequestEntityTooLarge() *DeleteConversationParticipantFlaggedreasonRequestEntityTooLarge {
	return &DeleteConversationParticipantFlaggedreasonRequestEntityTooLarge{}
}

/*
DeleteConversationParticipantFlaggedreasonRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type DeleteConversationParticipantFlaggedreasonRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete conversation participant flaggedreason request entity too large response has a 2xx status code
func (o *DeleteConversationParticipantFlaggedreasonRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete conversation participant flaggedreason request entity too large response has a 3xx status code
func (o *DeleteConversationParticipantFlaggedreasonRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete conversation participant flaggedreason request entity too large response has a 4xx status code
func (o *DeleteConversationParticipantFlaggedreasonRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete conversation participant flaggedreason request entity too large response has a 5xx status code
func (o *DeleteConversationParticipantFlaggedreasonRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this delete conversation participant flaggedreason request entity too large response a status code equal to that given
func (o *DeleteConversationParticipantFlaggedreasonRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *DeleteConversationParticipantFlaggedreasonRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/conversations/{conversationId}/participants/{participantId}/flaggedreason][%d] deleteConversationParticipantFlaggedreasonRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteConversationParticipantFlaggedreasonRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[DELETE /api/v2/conversations/{conversationId}/participants/{participantId}/flaggedreason][%d] deleteConversationParticipantFlaggedreasonRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteConversationParticipantFlaggedreasonRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteConversationParticipantFlaggedreasonRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteConversationParticipantFlaggedreasonUnsupportedMediaType creates a DeleteConversationParticipantFlaggedreasonUnsupportedMediaType with default headers values
func NewDeleteConversationParticipantFlaggedreasonUnsupportedMediaType() *DeleteConversationParticipantFlaggedreasonUnsupportedMediaType {
	return &DeleteConversationParticipantFlaggedreasonUnsupportedMediaType{}
}

/*
DeleteConversationParticipantFlaggedreasonUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type DeleteConversationParticipantFlaggedreasonUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete conversation participant flaggedreason unsupported media type response has a 2xx status code
func (o *DeleteConversationParticipantFlaggedreasonUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete conversation participant flaggedreason unsupported media type response has a 3xx status code
func (o *DeleteConversationParticipantFlaggedreasonUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete conversation participant flaggedreason unsupported media type response has a 4xx status code
func (o *DeleteConversationParticipantFlaggedreasonUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete conversation participant flaggedreason unsupported media type response has a 5xx status code
func (o *DeleteConversationParticipantFlaggedreasonUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this delete conversation participant flaggedreason unsupported media type response a status code equal to that given
func (o *DeleteConversationParticipantFlaggedreasonUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *DeleteConversationParticipantFlaggedreasonUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/conversations/{conversationId}/participants/{participantId}/flaggedreason][%d] deleteConversationParticipantFlaggedreasonUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteConversationParticipantFlaggedreasonUnsupportedMediaType) String() string {
	return fmt.Sprintf("[DELETE /api/v2/conversations/{conversationId}/participants/{participantId}/flaggedreason][%d] deleteConversationParticipantFlaggedreasonUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteConversationParticipantFlaggedreasonUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteConversationParticipantFlaggedreasonUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteConversationParticipantFlaggedreasonTooManyRequests creates a DeleteConversationParticipantFlaggedreasonTooManyRequests with default headers values
func NewDeleteConversationParticipantFlaggedreasonTooManyRequests() *DeleteConversationParticipantFlaggedreasonTooManyRequests {
	return &DeleteConversationParticipantFlaggedreasonTooManyRequests{}
}

/*
DeleteConversationParticipantFlaggedreasonTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type DeleteConversationParticipantFlaggedreasonTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete conversation participant flaggedreason too many requests response has a 2xx status code
func (o *DeleteConversationParticipantFlaggedreasonTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete conversation participant flaggedreason too many requests response has a 3xx status code
func (o *DeleteConversationParticipantFlaggedreasonTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete conversation participant flaggedreason too many requests response has a 4xx status code
func (o *DeleteConversationParticipantFlaggedreasonTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete conversation participant flaggedreason too many requests response has a 5xx status code
func (o *DeleteConversationParticipantFlaggedreasonTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete conversation participant flaggedreason too many requests response a status code equal to that given
func (o *DeleteConversationParticipantFlaggedreasonTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *DeleteConversationParticipantFlaggedreasonTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/conversations/{conversationId}/participants/{participantId}/flaggedreason][%d] deleteConversationParticipantFlaggedreasonTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteConversationParticipantFlaggedreasonTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /api/v2/conversations/{conversationId}/participants/{participantId}/flaggedreason][%d] deleteConversationParticipantFlaggedreasonTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteConversationParticipantFlaggedreasonTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteConversationParticipantFlaggedreasonTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteConversationParticipantFlaggedreasonInternalServerError creates a DeleteConversationParticipantFlaggedreasonInternalServerError with default headers values
func NewDeleteConversationParticipantFlaggedreasonInternalServerError() *DeleteConversationParticipantFlaggedreasonInternalServerError {
	return &DeleteConversationParticipantFlaggedreasonInternalServerError{}
}

/*
DeleteConversationParticipantFlaggedreasonInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type DeleteConversationParticipantFlaggedreasonInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete conversation participant flaggedreason internal server error response has a 2xx status code
func (o *DeleteConversationParticipantFlaggedreasonInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete conversation participant flaggedreason internal server error response has a 3xx status code
func (o *DeleteConversationParticipantFlaggedreasonInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete conversation participant flaggedreason internal server error response has a 4xx status code
func (o *DeleteConversationParticipantFlaggedreasonInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete conversation participant flaggedreason internal server error response has a 5xx status code
func (o *DeleteConversationParticipantFlaggedreasonInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete conversation participant flaggedreason internal server error response a status code equal to that given
func (o *DeleteConversationParticipantFlaggedreasonInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteConversationParticipantFlaggedreasonInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/conversations/{conversationId}/participants/{participantId}/flaggedreason][%d] deleteConversationParticipantFlaggedreasonInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteConversationParticipantFlaggedreasonInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/v2/conversations/{conversationId}/participants/{participantId}/flaggedreason][%d] deleteConversationParticipantFlaggedreasonInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteConversationParticipantFlaggedreasonInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteConversationParticipantFlaggedreasonInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteConversationParticipantFlaggedreasonServiceUnavailable creates a DeleteConversationParticipantFlaggedreasonServiceUnavailable with default headers values
func NewDeleteConversationParticipantFlaggedreasonServiceUnavailable() *DeleteConversationParticipantFlaggedreasonServiceUnavailable {
	return &DeleteConversationParticipantFlaggedreasonServiceUnavailable{}
}

/*
DeleteConversationParticipantFlaggedreasonServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type DeleteConversationParticipantFlaggedreasonServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete conversation participant flaggedreason service unavailable response has a 2xx status code
func (o *DeleteConversationParticipantFlaggedreasonServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete conversation participant flaggedreason service unavailable response has a 3xx status code
func (o *DeleteConversationParticipantFlaggedreasonServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete conversation participant flaggedreason service unavailable response has a 4xx status code
func (o *DeleteConversationParticipantFlaggedreasonServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete conversation participant flaggedreason service unavailable response has a 5xx status code
func (o *DeleteConversationParticipantFlaggedreasonServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this delete conversation participant flaggedreason service unavailable response a status code equal to that given
func (o *DeleteConversationParticipantFlaggedreasonServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *DeleteConversationParticipantFlaggedreasonServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/conversations/{conversationId}/participants/{participantId}/flaggedreason][%d] deleteConversationParticipantFlaggedreasonServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteConversationParticipantFlaggedreasonServiceUnavailable) String() string {
	return fmt.Sprintf("[DELETE /api/v2/conversations/{conversationId}/participants/{participantId}/flaggedreason][%d] deleteConversationParticipantFlaggedreasonServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteConversationParticipantFlaggedreasonServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteConversationParticipantFlaggedreasonServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteConversationParticipantFlaggedreasonGatewayTimeout creates a DeleteConversationParticipantFlaggedreasonGatewayTimeout with default headers values
func NewDeleteConversationParticipantFlaggedreasonGatewayTimeout() *DeleteConversationParticipantFlaggedreasonGatewayTimeout {
	return &DeleteConversationParticipantFlaggedreasonGatewayTimeout{}
}

/*
DeleteConversationParticipantFlaggedreasonGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type DeleteConversationParticipantFlaggedreasonGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete conversation participant flaggedreason gateway timeout response has a 2xx status code
func (o *DeleteConversationParticipantFlaggedreasonGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete conversation participant flaggedreason gateway timeout response has a 3xx status code
func (o *DeleteConversationParticipantFlaggedreasonGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete conversation participant flaggedreason gateway timeout response has a 4xx status code
func (o *DeleteConversationParticipantFlaggedreasonGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete conversation participant flaggedreason gateway timeout response has a 5xx status code
func (o *DeleteConversationParticipantFlaggedreasonGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this delete conversation participant flaggedreason gateway timeout response a status code equal to that given
func (o *DeleteConversationParticipantFlaggedreasonGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *DeleteConversationParticipantFlaggedreasonGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/conversations/{conversationId}/participants/{participantId}/flaggedreason][%d] deleteConversationParticipantFlaggedreasonGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteConversationParticipantFlaggedreasonGatewayTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/conversations/{conversationId}/participants/{participantId}/flaggedreason][%d] deleteConversationParticipantFlaggedreasonGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteConversationParticipantFlaggedreasonGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteConversationParticipantFlaggedreasonGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
