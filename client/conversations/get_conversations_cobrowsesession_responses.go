// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetConversationsCobrowsesessionReader is a Reader for the GetConversationsCobrowsesession structure.
type GetConversationsCobrowsesessionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConversationsCobrowsesessionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConversationsCobrowsesessionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetConversationsCobrowsesessionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetConversationsCobrowsesessionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetConversationsCobrowsesessionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetConversationsCobrowsesessionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetConversationsCobrowsesessionRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetConversationsCobrowsesessionRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetConversationsCobrowsesessionUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetConversationsCobrowsesessionTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetConversationsCobrowsesessionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetConversationsCobrowsesessionServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetConversationsCobrowsesessionGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetConversationsCobrowsesessionOK creates a GetConversationsCobrowsesessionOK with default headers values
func NewGetConversationsCobrowsesessionOK() *GetConversationsCobrowsesessionOK {
	return &GetConversationsCobrowsesessionOK{}
}

/*
GetConversationsCobrowsesessionOK describes a response with status code 200, with default header values.

successful operation
*/
type GetConversationsCobrowsesessionOK struct {
	Payload *models.CobrowseConversation
}

// IsSuccess returns true when this get conversations cobrowsesession o k response has a 2xx status code
func (o *GetConversationsCobrowsesessionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get conversations cobrowsesession o k response has a 3xx status code
func (o *GetConversationsCobrowsesessionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations cobrowsesession o k response has a 4xx status code
func (o *GetConversationsCobrowsesessionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations cobrowsesession o k response has a 5xx status code
func (o *GetConversationsCobrowsesessionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations cobrowsesession o k response a status code equal to that given
func (o *GetConversationsCobrowsesessionOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetConversationsCobrowsesessionOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}][%d] getConversationsCobrowsesessionOK  %+v", 200, o.Payload)
}

func (o *GetConversationsCobrowsesessionOK) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}][%d] getConversationsCobrowsesessionOK  %+v", 200, o.Payload)
}

func (o *GetConversationsCobrowsesessionOK) GetPayload() *models.CobrowseConversation {
	return o.Payload
}

func (o *GetConversationsCobrowsesessionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CobrowseConversation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCobrowsesessionBadRequest creates a GetConversationsCobrowsesessionBadRequest with default headers values
func NewGetConversationsCobrowsesessionBadRequest() *GetConversationsCobrowsesessionBadRequest {
	return &GetConversationsCobrowsesessionBadRequest{}
}

/*
GetConversationsCobrowsesessionBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetConversationsCobrowsesessionBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations cobrowsesession bad request response has a 2xx status code
func (o *GetConversationsCobrowsesessionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations cobrowsesession bad request response has a 3xx status code
func (o *GetConversationsCobrowsesessionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations cobrowsesession bad request response has a 4xx status code
func (o *GetConversationsCobrowsesessionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations cobrowsesession bad request response has a 5xx status code
func (o *GetConversationsCobrowsesessionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations cobrowsesession bad request response a status code equal to that given
func (o *GetConversationsCobrowsesessionBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetConversationsCobrowsesessionBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}][%d] getConversationsCobrowsesessionBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsCobrowsesessionBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}][%d] getConversationsCobrowsesessionBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsCobrowsesessionBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCobrowsesessionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCobrowsesessionUnauthorized creates a GetConversationsCobrowsesessionUnauthorized with default headers values
func NewGetConversationsCobrowsesessionUnauthorized() *GetConversationsCobrowsesessionUnauthorized {
	return &GetConversationsCobrowsesessionUnauthorized{}
}

/*
GetConversationsCobrowsesessionUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetConversationsCobrowsesessionUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations cobrowsesession unauthorized response has a 2xx status code
func (o *GetConversationsCobrowsesessionUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations cobrowsesession unauthorized response has a 3xx status code
func (o *GetConversationsCobrowsesessionUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations cobrowsesession unauthorized response has a 4xx status code
func (o *GetConversationsCobrowsesessionUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations cobrowsesession unauthorized response has a 5xx status code
func (o *GetConversationsCobrowsesessionUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations cobrowsesession unauthorized response a status code equal to that given
func (o *GetConversationsCobrowsesessionUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetConversationsCobrowsesessionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}][%d] getConversationsCobrowsesessionUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsCobrowsesessionUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}][%d] getConversationsCobrowsesessionUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsCobrowsesessionUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCobrowsesessionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCobrowsesessionForbidden creates a GetConversationsCobrowsesessionForbidden with default headers values
func NewGetConversationsCobrowsesessionForbidden() *GetConversationsCobrowsesessionForbidden {
	return &GetConversationsCobrowsesessionForbidden{}
}

/*
GetConversationsCobrowsesessionForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetConversationsCobrowsesessionForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations cobrowsesession forbidden response has a 2xx status code
func (o *GetConversationsCobrowsesessionForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations cobrowsesession forbidden response has a 3xx status code
func (o *GetConversationsCobrowsesessionForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations cobrowsesession forbidden response has a 4xx status code
func (o *GetConversationsCobrowsesessionForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations cobrowsesession forbidden response has a 5xx status code
func (o *GetConversationsCobrowsesessionForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations cobrowsesession forbidden response a status code equal to that given
func (o *GetConversationsCobrowsesessionForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetConversationsCobrowsesessionForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}][%d] getConversationsCobrowsesessionForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsCobrowsesessionForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}][%d] getConversationsCobrowsesessionForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsCobrowsesessionForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCobrowsesessionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCobrowsesessionNotFound creates a GetConversationsCobrowsesessionNotFound with default headers values
func NewGetConversationsCobrowsesessionNotFound() *GetConversationsCobrowsesessionNotFound {
	return &GetConversationsCobrowsesessionNotFound{}
}

/*
GetConversationsCobrowsesessionNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetConversationsCobrowsesessionNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations cobrowsesession not found response has a 2xx status code
func (o *GetConversationsCobrowsesessionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations cobrowsesession not found response has a 3xx status code
func (o *GetConversationsCobrowsesessionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations cobrowsesession not found response has a 4xx status code
func (o *GetConversationsCobrowsesessionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations cobrowsesession not found response has a 5xx status code
func (o *GetConversationsCobrowsesessionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations cobrowsesession not found response a status code equal to that given
func (o *GetConversationsCobrowsesessionNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetConversationsCobrowsesessionNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}][%d] getConversationsCobrowsesessionNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsCobrowsesessionNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}][%d] getConversationsCobrowsesessionNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsCobrowsesessionNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCobrowsesessionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCobrowsesessionRequestTimeout creates a GetConversationsCobrowsesessionRequestTimeout with default headers values
func NewGetConversationsCobrowsesessionRequestTimeout() *GetConversationsCobrowsesessionRequestTimeout {
	return &GetConversationsCobrowsesessionRequestTimeout{}
}

/*
GetConversationsCobrowsesessionRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetConversationsCobrowsesessionRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations cobrowsesession request timeout response has a 2xx status code
func (o *GetConversationsCobrowsesessionRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations cobrowsesession request timeout response has a 3xx status code
func (o *GetConversationsCobrowsesessionRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations cobrowsesession request timeout response has a 4xx status code
func (o *GetConversationsCobrowsesessionRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations cobrowsesession request timeout response has a 5xx status code
func (o *GetConversationsCobrowsesessionRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations cobrowsesession request timeout response a status code equal to that given
func (o *GetConversationsCobrowsesessionRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetConversationsCobrowsesessionRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}][%d] getConversationsCobrowsesessionRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationsCobrowsesessionRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}][%d] getConversationsCobrowsesessionRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationsCobrowsesessionRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCobrowsesessionRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCobrowsesessionRequestEntityTooLarge creates a GetConversationsCobrowsesessionRequestEntityTooLarge with default headers values
func NewGetConversationsCobrowsesessionRequestEntityTooLarge() *GetConversationsCobrowsesessionRequestEntityTooLarge {
	return &GetConversationsCobrowsesessionRequestEntityTooLarge{}
}

/*
GetConversationsCobrowsesessionRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetConversationsCobrowsesessionRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations cobrowsesession request entity too large response has a 2xx status code
func (o *GetConversationsCobrowsesessionRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations cobrowsesession request entity too large response has a 3xx status code
func (o *GetConversationsCobrowsesessionRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations cobrowsesession request entity too large response has a 4xx status code
func (o *GetConversationsCobrowsesessionRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations cobrowsesession request entity too large response has a 5xx status code
func (o *GetConversationsCobrowsesessionRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations cobrowsesession request entity too large response a status code equal to that given
func (o *GetConversationsCobrowsesessionRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetConversationsCobrowsesessionRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}][%d] getConversationsCobrowsesessionRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsCobrowsesessionRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}][%d] getConversationsCobrowsesessionRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsCobrowsesessionRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCobrowsesessionRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCobrowsesessionUnsupportedMediaType creates a GetConversationsCobrowsesessionUnsupportedMediaType with default headers values
func NewGetConversationsCobrowsesessionUnsupportedMediaType() *GetConversationsCobrowsesessionUnsupportedMediaType {
	return &GetConversationsCobrowsesessionUnsupportedMediaType{}
}

/*
GetConversationsCobrowsesessionUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetConversationsCobrowsesessionUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations cobrowsesession unsupported media type response has a 2xx status code
func (o *GetConversationsCobrowsesessionUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations cobrowsesession unsupported media type response has a 3xx status code
func (o *GetConversationsCobrowsesessionUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations cobrowsesession unsupported media type response has a 4xx status code
func (o *GetConversationsCobrowsesessionUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations cobrowsesession unsupported media type response has a 5xx status code
func (o *GetConversationsCobrowsesessionUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations cobrowsesession unsupported media type response a status code equal to that given
func (o *GetConversationsCobrowsesessionUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetConversationsCobrowsesessionUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}][%d] getConversationsCobrowsesessionUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsCobrowsesessionUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}][%d] getConversationsCobrowsesessionUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsCobrowsesessionUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCobrowsesessionUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCobrowsesessionTooManyRequests creates a GetConversationsCobrowsesessionTooManyRequests with default headers values
func NewGetConversationsCobrowsesessionTooManyRequests() *GetConversationsCobrowsesessionTooManyRequests {
	return &GetConversationsCobrowsesessionTooManyRequests{}
}

/*
GetConversationsCobrowsesessionTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetConversationsCobrowsesessionTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations cobrowsesession too many requests response has a 2xx status code
func (o *GetConversationsCobrowsesessionTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations cobrowsesession too many requests response has a 3xx status code
func (o *GetConversationsCobrowsesessionTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations cobrowsesession too many requests response has a 4xx status code
func (o *GetConversationsCobrowsesessionTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations cobrowsesession too many requests response has a 5xx status code
func (o *GetConversationsCobrowsesessionTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations cobrowsesession too many requests response a status code equal to that given
func (o *GetConversationsCobrowsesessionTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetConversationsCobrowsesessionTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}][%d] getConversationsCobrowsesessionTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsCobrowsesessionTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}][%d] getConversationsCobrowsesessionTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsCobrowsesessionTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCobrowsesessionTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCobrowsesessionInternalServerError creates a GetConversationsCobrowsesessionInternalServerError with default headers values
func NewGetConversationsCobrowsesessionInternalServerError() *GetConversationsCobrowsesessionInternalServerError {
	return &GetConversationsCobrowsesessionInternalServerError{}
}

/*
GetConversationsCobrowsesessionInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetConversationsCobrowsesessionInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations cobrowsesession internal server error response has a 2xx status code
func (o *GetConversationsCobrowsesessionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations cobrowsesession internal server error response has a 3xx status code
func (o *GetConversationsCobrowsesessionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations cobrowsesession internal server error response has a 4xx status code
func (o *GetConversationsCobrowsesessionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations cobrowsesession internal server error response has a 5xx status code
func (o *GetConversationsCobrowsesessionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations cobrowsesession internal server error response a status code equal to that given
func (o *GetConversationsCobrowsesessionInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetConversationsCobrowsesessionInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}][%d] getConversationsCobrowsesessionInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsCobrowsesessionInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}][%d] getConversationsCobrowsesessionInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsCobrowsesessionInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCobrowsesessionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCobrowsesessionServiceUnavailable creates a GetConversationsCobrowsesessionServiceUnavailable with default headers values
func NewGetConversationsCobrowsesessionServiceUnavailable() *GetConversationsCobrowsesessionServiceUnavailable {
	return &GetConversationsCobrowsesessionServiceUnavailable{}
}

/*
GetConversationsCobrowsesessionServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetConversationsCobrowsesessionServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations cobrowsesession service unavailable response has a 2xx status code
func (o *GetConversationsCobrowsesessionServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations cobrowsesession service unavailable response has a 3xx status code
func (o *GetConversationsCobrowsesessionServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations cobrowsesession service unavailable response has a 4xx status code
func (o *GetConversationsCobrowsesessionServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations cobrowsesession service unavailable response has a 5xx status code
func (o *GetConversationsCobrowsesessionServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations cobrowsesession service unavailable response a status code equal to that given
func (o *GetConversationsCobrowsesessionServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetConversationsCobrowsesessionServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}][%d] getConversationsCobrowsesessionServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsCobrowsesessionServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}][%d] getConversationsCobrowsesessionServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsCobrowsesessionServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCobrowsesessionServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCobrowsesessionGatewayTimeout creates a GetConversationsCobrowsesessionGatewayTimeout with default headers values
func NewGetConversationsCobrowsesessionGatewayTimeout() *GetConversationsCobrowsesessionGatewayTimeout {
	return &GetConversationsCobrowsesessionGatewayTimeout{}
}

/*
GetConversationsCobrowsesessionGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetConversationsCobrowsesessionGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations cobrowsesession gateway timeout response has a 2xx status code
func (o *GetConversationsCobrowsesessionGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations cobrowsesession gateway timeout response has a 3xx status code
func (o *GetConversationsCobrowsesessionGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations cobrowsesession gateway timeout response has a 4xx status code
func (o *GetConversationsCobrowsesessionGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations cobrowsesession gateway timeout response has a 5xx status code
func (o *GetConversationsCobrowsesessionGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations cobrowsesession gateway timeout response a status code equal to that given
func (o *GetConversationsCobrowsesessionGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetConversationsCobrowsesessionGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}][%d] getConversationsCobrowsesessionGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsCobrowsesessionGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}][%d] getConversationsCobrowsesessionGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsCobrowsesessionGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCobrowsesessionGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
