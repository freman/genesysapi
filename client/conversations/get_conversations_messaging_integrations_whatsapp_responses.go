// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetConversationsMessagingIntegrationsWhatsappReader is a Reader for the GetConversationsMessagingIntegrationsWhatsapp structure.
type GetConversationsMessagingIntegrationsWhatsappReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConversationsMessagingIntegrationsWhatsappReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConversationsMessagingIntegrationsWhatsappOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetConversationsMessagingIntegrationsWhatsappBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetConversationsMessagingIntegrationsWhatsappUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetConversationsMessagingIntegrationsWhatsappForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetConversationsMessagingIntegrationsWhatsappNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetConversationsMessagingIntegrationsWhatsappRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetConversationsMessagingIntegrationsWhatsappRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetConversationsMessagingIntegrationsWhatsappUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetConversationsMessagingIntegrationsWhatsappTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetConversationsMessagingIntegrationsWhatsappInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetConversationsMessagingIntegrationsWhatsappServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetConversationsMessagingIntegrationsWhatsappGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetConversationsMessagingIntegrationsWhatsappOK creates a GetConversationsMessagingIntegrationsWhatsappOK with default headers values
func NewGetConversationsMessagingIntegrationsWhatsappOK() *GetConversationsMessagingIntegrationsWhatsappOK {
	return &GetConversationsMessagingIntegrationsWhatsappOK{}
}

/*
GetConversationsMessagingIntegrationsWhatsappOK describes a response with status code 200, with default header values.

successful operation
*/
type GetConversationsMessagingIntegrationsWhatsappOK struct {
	Payload *models.WhatsAppIntegrationEntityListing
}

// IsSuccess returns true when this get conversations messaging integrations whatsapp o k response has a 2xx status code
func (o *GetConversationsMessagingIntegrationsWhatsappOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get conversations messaging integrations whatsapp o k response has a 3xx status code
func (o *GetConversationsMessagingIntegrationsWhatsappOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations messaging integrations whatsapp o k response has a 4xx status code
func (o *GetConversationsMessagingIntegrationsWhatsappOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations messaging integrations whatsapp o k response has a 5xx status code
func (o *GetConversationsMessagingIntegrationsWhatsappOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations messaging integrations whatsapp o k response a status code equal to that given
func (o *GetConversationsMessagingIntegrationsWhatsappOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetConversationsMessagingIntegrationsWhatsappOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/integrations/whatsapp][%d] getConversationsMessagingIntegrationsWhatsappOK  %+v", 200, o.Payload)
}

func (o *GetConversationsMessagingIntegrationsWhatsappOK) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/integrations/whatsapp][%d] getConversationsMessagingIntegrationsWhatsappOK  %+v", 200, o.Payload)
}

func (o *GetConversationsMessagingIntegrationsWhatsappOK) GetPayload() *models.WhatsAppIntegrationEntityListing {
	return o.Payload
}

func (o *GetConversationsMessagingIntegrationsWhatsappOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WhatsAppIntegrationEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessagingIntegrationsWhatsappBadRequest creates a GetConversationsMessagingIntegrationsWhatsappBadRequest with default headers values
func NewGetConversationsMessagingIntegrationsWhatsappBadRequest() *GetConversationsMessagingIntegrationsWhatsappBadRequest {
	return &GetConversationsMessagingIntegrationsWhatsappBadRequest{}
}

/*
GetConversationsMessagingIntegrationsWhatsappBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetConversationsMessagingIntegrationsWhatsappBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations messaging integrations whatsapp bad request response has a 2xx status code
func (o *GetConversationsMessagingIntegrationsWhatsappBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations messaging integrations whatsapp bad request response has a 3xx status code
func (o *GetConversationsMessagingIntegrationsWhatsappBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations messaging integrations whatsapp bad request response has a 4xx status code
func (o *GetConversationsMessagingIntegrationsWhatsappBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations messaging integrations whatsapp bad request response has a 5xx status code
func (o *GetConversationsMessagingIntegrationsWhatsappBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations messaging integrations whatsapp bad request response a status code equal to that given
func (o *GetConversationsMessagingIntegrationsWhatsappBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetConversationsMessagingIntegrationsWhatsappBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/integrations/whatsapp][%d] getConversationsMessagingIntegrationsWhatsappBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsMessagingIntegrationsWhatsappBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/integrations/whatsapp][%d] getConversationsMessagingIntegrationsWhatsappBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsMessagingIntegrationsWhatsappBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessagingIntegrationsWhatsappBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessagingIntegrationsWhatsappUnauthorized creates a GetConversationsMessagingIntegrationsWhatsappUnauthorized with default headers values
func NewGetConversationsMessagingIntegrationsWhatsappUnauthorized() *GetConversationsMessagingIntegrationsWhatsappUnauthorized {
	return &GetConversationsMessagingIntegrationsWhatsappUnauthorized{}
}

/*
GetConversationsMessagingIntegrationsWhatsappUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetConversationsMessagingIntegrationsWhatsappUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations messaging integrations whatsapp unauthorized response has a 2xx status code
func (o *GetConversationsMessagingIntegrationsWhatsappUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations messaging integrations whatsapp unauthorized response has a 3xx status code
func (o *GetConversationsMessagingIntegrationsWhatsappUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations messaging integrations whatsapp unauthorized response has a 4xx status code
func (o *GetConversationsMessagingIntegrationsWhatsappUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations messaging integrations whatsapp unauthorized response has a 5xx status code
func (o *GetConversationsMessagingIntegrationsWhatsappUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations messaging integrations whatsapp unauthorized response a status code equal to that given
func (o *GetConversationsMessagingIntegrationsWhatsappUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetConversationsMessagingIntegrationsWhatsappUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/integrations/whatsapp][%d] getConversationsMessagingIntegrationsWhatsappUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsMessagingIntegrationsWhatsappUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/integrations/whatsapp][%d] getConversationsMessagingIntegrationsWhatsappUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsMessagingIntegrationsWhatsappUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessagingIntegrationsWhatsappUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessagingIntegrationsWhatsappForbidden creates a GetConversationsMessagingIntegrationsWhatsappForbidden with default headers values
func NewGetConversationsMessagingIntegrationsWhatsappForbidden() *GetConversationsMessagingIntegrationsWhatsappForbidden {
	return &GetConversationsMessagingIntegrationsWhatsappForbidden{}
}

/*
GetConversationsMessagingIntegrationsWhatsappForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetConversationsMessagingIntegrationsWhatsappForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations messaging integrations whatsapp forbidden response has a 2xx status code
func (o *GetConversationsMessagingIntegrationsWhatsappForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations messaging integrations whatsapp forbidden response has a 3xx status code
func (o *GetConversationsMessagingIntegrationsWhatsappForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations messaging integrations whatsapp forbidden response has a 4xx status code
func (o *GetConversationsMessagingIntegrationsWhatsappForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations messaging integrations whatsapp forbidden response has a 5xx status code
func (o *GetConversationsMessagingIntegrationsWhatsappForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations messaging integrations whatsapp forbidden response a status code equal to that given
func (o *GetConversationsMessagingIntegrationsWhatsappForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetConversationsMessagingIntegrationsWhatsappForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/integrations/whatsapp][%d] getConversationsMessagingIntegrationsWhatsappForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsMessagingIntegrationsWhatsappForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/integrations/whatsapp][%d] getConversationsMessagingIntegrationsWhatsappForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsMessagingIntegrationsWhatsappForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessagingIntegrationsWhatsappForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessagingIntegrationsWhatsappNotFound creates a GetConversationsMessagingIntegrationsWhatsappNotFound with default headers values
func NewGetConversationsMessagingIntegrationsWhatsappNotFound() *GetConversationsMessagingIntegrationsWhatsappNotFound {
	return &GetConversationsMessagingIntegrationsWhatsappNotFound{}
}

/*
GetConversationsMessagingIntegrationsWhatsappNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetConversationsMessagingIntegrationsWhatsappNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations messaging integrations whatsapp not found response has a 2xx status code
func (o *GetConversationsMessagingIntegrationsWhatsappNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations messaging integrations whatsapp not found response has a 3xx status code
func (o *GetConversationsMessagingIntegrationsWhatsappNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations messaging integrations whatsapp not found response has a 4xx status code
func (o *GetConversationsMessagingIntegrationsWhatsappNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations messaging integrations whatsapp not found response has a 5xx status code
func (o *GetConversationsMessagingIntegrationsWhatsappNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations messaging integrations whatsapp not found response a status code equal to that given
func (o *GetConversationsMessagingIntegrationsWhatsappNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetConversationsMessagingIntegrationsWhatsappNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/integrations/whatsapp][%d] getConversationsMessagingIntegrationsWhatsappNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsMessagingIntegrationsWhatsappNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/integrations/whatsapp][%d] getConversationsMessagingIntegrationsWhatsappNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsMessagingIntegrationsWhatsappNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessagingIntegrationsWhatsappNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessagingIntegrationsWhatsappRequestTimeout creates a GetConversationsMessagingIntegrationsWhatsappRequestTimeout with default headers values
func NewGetConversationsMessagingIntegrationsWhatsappRequestTimeout() *GetConversationsMessagingIntegrationsWhatsappRequestTimeout {
	return &GetConversationsMessagingIntegrationsWhatsappRequestTimeout{}
}

/*
GetConversationsMessagingIntegrationsWhatsappRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetConversationsMessagingIntegrationsWhatsappRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations messaging integrations whatsapp request timeout response has a 2xx status code
func (o *GetConversationsMessagingIntegrationsWhatsappRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations messaging integrations whatsapp request timeout response has a 3xx status code
func (o *GetConversationsMessagingIntegrationsWhatsappRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations messaging integrations whatsapp request timeout response has a 4xx status code
func (o *GetConversationsMessagingIntegrationsWhatsappRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations messaging integrations whatsapp request timeout response has a 5xx status code
func (o *GetConversationsMessagingIntegrationsWhatsappRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations messaging integrations whatsapp request timeout response a status code equal to that given
func (o *GetConversationsMessagingIntegrationsWhatsappRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetConversationsMessagingIntegrationsWhatsappRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/integrations/whatsapp][%d] getConversationsMessagingIntegrationsWhatsappRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationsMessagingIntegrationsWhatsappRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/integrations/whatsapp][%d] getConversationsMessagingIntegrationsWhatsappRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationsMessagingIntegrationsWhatsappRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessagingIntegrationsWhatsappRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessagingIntegrationsWhatsappRequestEntityTooLarge creates a GetConversationsMessagingIntegrationsWhatsappRequestEntityTooLarge with default headers values
func NewGetConversationsMessagingIntegrationsWhatsappRequestEntityTooLarge() *GetConversationsMessagingIntegrationsWhatsappRequestEntityTooLarge {
	return &GetConversationsMessagingIntegrationsWhatsappRequestEntityTooLarge{}
}

/*
GetConversationsMessagingIntegrationsWhatsappRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetConversationsMessagingIntegrationsWhatsappRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations messaging integrations whatsapp request entity too large response has a 2xx status code
func (o *GetConversationsMessagingIntegrationsWhatsappRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations messaging integrations whatsapp request entity too large response has a 3xx status code
func (o *GetConversationsMessagingIntegrationsWhatsappRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations messaging integrations whatsapp request entity too large response has a 4xx status code
func (o *GetConversationsMessagingIntegrationsWhatsappRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations messaging integrations whatsapp request entity too large response has a 5xx status code
func (o *GetConversationsMessagingIntegrationsWhatsappRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations messaging integrations whatsapp request entity too large response a status code equal to that given
func (o *GetConversationsMessagingIntegrationsWhatsappRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetConversationsMessagingIntegrationsWhatsappRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/integrations/whatsapp][%d] getConversationsMessagingIntegrationsWhatsappRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsMessagingIntegrationsWhatsappRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/integrations/whatsapp][%d] getConversationsMessagingIntegrationsWhatsappRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsMessagingIntegrationsWhatsappRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessagingIntegrationsWhatsappRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessagingIntegrationsWhatsappUnsupportedMediaType creates a GetConversationsMessagingIntegrationsWhatsappUnsupportedMediaType with default headers values
func NewGetConversationsMessagingIntegrationsWhatsappUnsupportedMediaType() *GetConversationsMessagingIntegrationsWhatsappUnsupportedMediaType {
	return &GetConversationsMessagingIntegrationsWhatsappUnsupportedMediaType{}
}

/*
GetConversationsMessagingIntegrationsWhatsappUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetConversationsMessagingIntegrationsWhatsappUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations messaging integrations whatsapp unsupported media type response has a 2xx status code
func (o *GetConversationsMessagingIntegrationsWhatsappUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations messaging integrations whatsapp unsupported media type response has a 3xx status code
func (o *GetConversationsMessagingIntegrationsWhatsappUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations messaging integrations whatsapp unsupported media type response has a 4xx status code
func (o *GetConversationsMessagingIntegrationsWhatsappUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations messaging integrations whatsapp unsupported media type response has a 5xx status code
func (o *GetConversationsMessagingIntegrationsWhatsappUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations messaging integrations whatsapp unsupported media type response a status code equal to that given
func (o *GetConversationsMessagingIntegrationsWhatsappUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetConversationsMessagingIntegrationsWhatsappUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/integrations/whatsapp][%d] getConversationsMessagingIntegrationsWhatsappUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsMessagingIntegrationsWhatsappUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/integrations/whatsapp][%d] getConversationsMessagingIntegrationsWhatsappUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsMessagingIntegrationsWhatsappUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessagingIntegrationsWhatsappUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessagingIntegrationsWhatsappTooManyRequests creates a GetConversationsMessagingIntegrationsWhatsappTooManyRequests with default headers values
func NewGetConversationsMessagingIntegrationsWhatsappTooManyRequests() *GetConversationsMessagingIntegrationsWhatsappTooManyRequests {
	return &GetConversationsMessagingIntegrationsWhatsappTooManyRequests{}
}

/*
GetConversationsMessagingIntegrationsWhatsappTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetConversationsMessagingIntegrationsWhatsappTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations messaging integrations whatsapp too many requests response has a 2xx status code
func (o *GetConversationsMessagingIntegrationsWhatsappTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations messaging integrations whatsapp too many requests response has a 3xx status code
func (o *GetConversationsMessagingIntegrationsWhatsappTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations messaging integrations whatsapp too many requests response has a 4xx status code
func (o *GetConversationsMessagingIntegrationsWhatsappTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations messaging integrations whatsapp too many requests response has a 5xx status code
func (o *GetConversationsMessagingIntegrationsWhatsappTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations messaging integrations whatsapp too many requests response a status code equal to that given
func (o *GetConversationsMessagingIntegrationsWhatsappTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetConversationsMessagingIntegrationsWhatsappTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/integrations/whatsapp][%d] getConversationsMessagingIntegrationsWhatsappTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsMessagingIntegrationsWhatsappTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/integrations/whatsapp][%d] getConversationsMessagingIntegrationsWhatsappTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsMessagingIntegrationsWhatsappTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessagingIntegrationsWhatsappTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessagingIntegrationsWhatsappInternalServerError creates a GetConversationsMessagingIntegrationsWhatsappInternalServerError with default headers values
func NewGetConversationsMessagingIntegrationsWhatsappInternalServerError() *GetConversationsMessagingIntegrationsWhatsappInternalServerError {
	return &GetConversationsMessagingIntegrationsWhatsappInternalServerError{}
}

/*
GetConversationsMessagingIntegrationsWhatsappInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetConversationsMessagingIntegrationsWhatsappInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations messaging integrations whatsapp internal server error response has a 2xx status code
func (o *GetConversationsMessagingIntegrationsWhatsappInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations messaging integrations whatsapp internal server error response has a 3xx status code
func (o *GetConversationsMessagingIntegrationsWhatsappInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations messaging integrations whatsapp internal server error response has a 4xx status code
func (o *GetConversationsMessagingIntegrationsWhatsappInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations messaging integrations whatsapp internal server error response has a 5xx status code
func (o *GetConversationsMessagingIntegrationsWhatsappInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations messaging integrations whatsapp internal server error response a status code equal to that given
func (o *GetConversationsMessagingIntegrationsWhatsappInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetConversationsMessagingIntegrationsWhatsappInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/integrations/whatsapp][%d] getConversationsMessagingIntegrationsWhatsappInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsMessagingIntegrationsWhatsappInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/integrations/whatsapp][%d] getConversationsMessagingIntegrationsWhatsappInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsMessagingIntegrationsWhatsappInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessagingIntegrationsWhatsappInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessagingIntegrationsWhatsappServiceUnavailable creates a GetConversationsMessagingIntegrationsWhatsappServiceUnavailable with default headers values
func NewGetConversationsMessagingIntegrationsWhatsappServiceUnavailable() *GetConversationsMessagingIntegrationsWhatsappServiceUnavailable {
	return &GetConversationsMessagingIntegrationsWhatsappServiceUnavailable{}
}

/*
GetConversationsMessagingIntegrationsWhatsappServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetConversationsMessagingIntegrationsWhatsappServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations messaging integrations whatsapp service unavailable response has a 2xx status code
func (o *GetConversationsMessagingIntegrationsWhatsappServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations messaging integrations whatsapp service unavailable response has a 3xx status code
func (o *GetConversationsMessagingIntegrationsWhatsappServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations messaging integrations whatsapp service unavailable response has a 4xx status code
func (o *GetConversationsMessagingIntegrationsWhatsappServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations messaging integrations whatsapp service unavailable response has a 5xx status code
func (o *GetConversationsMessagingIntegrationsWhatsappServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations messaging integrations whatsapp service unavailable response a status code equal to that given
func (o *GetConversationsMessagingIntegrationsWhatsappServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetConversationsMessagingIntegrationsWhatsappServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/integrations/whatsapp][%d] getConversationsMessagingIntegrationsWhatsappServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsMessagingIntegrationsWhatsappServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/integrations/whatsapp][%d] getConversationsMessagingIntegrationsWhatsappServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsMessagingIntegrationsWhatsappServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessagingIntegrationsWhatsappServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessagingIntegrationsWhatsappGatewayTimeout creates a GetConversationsMessagingIntegrationsWhatsappGatewayTimeout with default headers values
func NewGetConversationsMessagingIntegrationsWhatsappGatewayTimeout() *GetConversationsMessagingIntegrationsWhatsappGatewayTimeout {
	return &GetConversationsMessagingIntegrationsWhatsappGatewayTimeout{}
}

/*
GetConversationsMessagingIntegrationsWhatsappGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetConversationsMessagingIntegrationsWhatsappGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations messaging integrations whatsapp gateway timeout response has a 2xx status code
func (o *GetConversationsMessagingIntegrationsWhatsappGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations messaging integrations whatsapp gateway timeout response has a 3xx status code
func (o *GetConversationsMessagingIntegrationsWhatsappGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations messaging integrations whatsapp gateway timeout response has a 4xx status code
func (o *GetConversationsMessagingIntegrationsWhatsappGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations messaging integrations whatsapp gateway timeout response has a 5xx status code
func (o *GetConversationsMessagingIntegrationsWhatsappGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations messaging integrations whatsapp gateway timeout response a status code equal to that given
func (o *GetConversationsMessagingIntegrationsWhatsappGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetConversationsMessagingIntegrationsWhatsappGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/integrations/whatsapp][%d] getConversationsMessagingIntegrationsWhatsappGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsMessagingIntegrationsWhatsappGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/integrations/whatsapp][%d] getConversationsMessagingIntegrationsWhatsappGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsMessagingIntegrationsWhatsappGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessagingIntegrationsWhatsappGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
