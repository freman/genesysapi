// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutConversationsKeyconfigurationReader is a Reader for the PutConversationsKeyconfiguration structure.
type PutConversationsKeyconfigurationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutConversationsKeyconfigurationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutConversationsKeyconfigurationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutConversationsKeyconfigurationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutConversationsKeyconfigurationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutConversationsKeyconfigurationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutConversationsKeyconfigurationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutConversationsKeyconfigurationRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutConversationsKeyconfigurationRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutConversationsKeyconfigurationUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutConversationsKeyconfigurationTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutConversationsKeyconfigurationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutConversationsKeyconfigurationServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutConversationsKeyconfigurationGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutConversationsKeyconfigurationOK creates a PutConversationsKeyconfigurationOK with default headers values
func NewPutConversationsKeyconfigurationOK() *PutConversationsKeyconfigurationOK {
	return &PutConversationsKeyconfigurationOK{}
}

/*
PutConversationsKeyconfigurationOK describes a response with status code 200, with default header values.

successful operation
*/
type PutConversationsKeyconfigurationOK struct {
	Payload *models.ConversationEncryptionConfiguration
}

// IsSuccess returns true when this put conversations keyconfiguration o k response has a 2xx status code
func (o *PutConversationsKeyconfigurationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put conversations keyconfiguration o k response has a 3xx status code
func (o *PutConversationsKeyconfigurationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversations keyconfiguration o k response has a 4xx status code
func (o *PutConversationsKeyconfigurationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put conversations keyconfiguration o k response has a 5xx status code
func (o *PutConversationsKeyconfigurationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put conversations keyconfiguration o k response a status code equal to that given
func (o *PutConversationsKeyconfigurationOK) IsCode(code int) bool {
	return code == 200
}

func (o *PutConversationsKeyconfigurationOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/keyconfigurations/{keyconfigurationsId}][%d] putConversationsKeyconfigurationOK  %+v", 200, o.Payload)
}

func (o *PutConversationsKeyconfigurationOK) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/keyconfigurations/{keyconfigurationsId}][%d] putConversationsKeyconfigurationOK  %+v", 200, o.Payload)
}

func (o *PutConversationsKeyconfigurationOK) GetPayload() *models.ConversationEncryptionConfiguration {
	return o.Payload
}

func (o *PutConversationsKeyconfigurationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConversationEncryptionConfiguration)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsKeyconfigurationBadRequest creates a PutConversationsKeyconfigurationBadRequest with default headers values
func NewPutConversationsKeyconfigurationBadRequest() *PutConversationsKeyconfigurationBadRequest {
	return &PutConversationsKeyconfigurationBadRequest{}
}

/*
PutConversationsKeyconfigurationBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutConversationsKeyconfigurationBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put conversations keyconfiguration bad request response has a 2xx status code
func (o *PutConversationsKeyconfigurationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put conversations keyconfiguration bad request response has a 3xx status code
func (o *PutConversationsKeyconfigurationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversations keyconfiguration bad request response has a 4xx status code
func (o *PutConversationsKeyconfigurationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put conversations keyconfiguration bad request response has a 5xx status code
func (o *PutConversationsKeyconfigurationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put conversations keyconfiguration bad request response a status code equal to that given
func (o *PutConversationsKeyconfigurationBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PutConversationsKeyconfigurationBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/keyconfigurations/{keyconfigurationsId}][%d] putConversationsKeyconfigurationBadRequest  %+v", 400, o.Payload)
}

func (o *PutConversationsKeyconfigurationBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/keyconfigurations/{keyconfigurationsId}][%d] putConversationsKeyconfigurationBadRequest  %+v", 400, o.Payload)
}

func (o *PutConversationsKeyconfigurationBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsKeyconfigurationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsKeyconfigurationUnauthorized creates a PutConversationsKeyconfigurationUnauthorized with default headers values
func NewPutConversationsKeyconfigurationUnauthorized() *PutConversationsKeyconfigurationUnauthorized {
	return &PutConversationsKeyconfigurationUnauthorized{}
}

/*
PutConversationsKeyconfigurationUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PutConversationsKeyconfigurationUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put conversations keyconfiguration unauthorized response has a 2xx status code
func (o *PutConversationsKeyconfigurationUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put conversations keyconfiguration unauthorized response has a 3xx status code
func (o *PutConversationsKeyconfigurationUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversations keyconfiguration unauthorized response has a 4xx status code
func (o *PutConversationsKeyconfigurationUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put conversations keyconfiguration unauthorized response has a 5xx status code
func (o *PutConversationsKeyconfigurationUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put conversations keyconfiguration unauthorized response a status code equal to that given
func (o *PutConversationsKeyconfigurationUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PutConversationsKeyconfigurationUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/keyconfigurations/{keyconfigurationsId}][%d] putConversationsKeyconfigurationUnauthorized  %+v", 401, o.Payload)
}

func (o *PutConversationsKeyconfigurationUnauthorized) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/keyconfigurations/{keyconfigurationsId}][%d] putConversationsKeyconfigurationUnauthorized  %+v", 401, o.Payload)
}

func (o *PutConversationsKeyconfigurationUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsKeyconfigurationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsKeyconfigurationForbidden creates a PutConversationsKeyconfigurationForbidden with default headers values
func NewPutConversationsKeyconfigurationForbidden() *PutConversationsKeyconfigurationForbidden {
	return &PutConversationsKeyconfigurationForbidden{}
}

/*
PutConversationsKeyconfigurationForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PutConversationsKeyconfigurationForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put conversations keyconfiguration forbidden response has a 2xx status code
func (o *PutConversationsKeyconfigurationForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put conversations keyconfiguration forbidden response has a 3xx status code
func (o *PutConversationsKeyconfigurationForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversations keyconfiguration forbidden response has a 4xx status code
func (o *PutConversationsKeyconfigurationForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put conversations keyconfiguration forbidden response has a 5xx status code
func (o *PutConversationsKeyconfigurationForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put conversations keyconfiguration forbidden response a status code equal to that given
func (o *PutConversationsKeyconfigurationForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PutConversationsKeyconfigurationForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/keyconfigurations/{keyconfigurationsId}][%d] putConversationsKeyconfigurationForbidden  %+v", 403, o.Payload)
}

func (o *PutConversationsKeyconfigurationForbidden) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/keyconfigurations/{keyconfigurationsId}][%d] putConversationsKeyconfigurationForbidden  %+v", 403, o.Payload)
}

func (o *PutConversationsKeyconfigurationForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsKeyconfigurationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsKeyconfigurationNotFound creates a PutConversationsKeyconfigurationNotFound with default headers values
func NewPutConversationsKeyconfigurationNotFound() *PutConversationsKeyconfigurationNotFound {
	return &PutConversationsKeyconfigurationNotFound{}
}

/*
PutConversationsKeyconfigurationNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PutConversationsKeyconfigurationNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put conversations keyconfiguration not found response has a 2xx status code
func (o *PutConversationsKeyconfigurationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put conversations keyconfiguration not found response has a 3xx status code
func (o *PutConversationsKeyconfigurationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversations keyconfiguration not found response has a 4xx status code
func (o *PutConversationsKeyconfigurationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put conversations keyconfiguration not found response has a 5xx status code
func (o *PutConversationsKeyconfigurationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put conversations keyconfiguration not found response a status code equal to that given
func (o *PutConversationsKeyconfigurationNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PutConversationsKeyconfigurationNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/keyconfigurations/{keyconfigurationsId}][%d] putConversationsKeyconfigurationNotFound  %+v", 404, o.Payload)
}

func (o *PutConversationsKeyconfigurationNotFound) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/keyconfigurations/{keyconfigurationsId}][%d] putConversationsKeyconfigurationNotFound  %+v", 404, o.Payload)
}

func (o *PutConversationsKeyconfigurationNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsKeyconfigurationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsKeyconfigurationRequestTimeout creates a PutConversationsKeyconfigurationRequestTimeout with default headers values
func NewPutConversationsKeyconfigurationRequestTimeout() *PutConversationsKeyconfigurationRequestTimeout {
	return &PutConversationsKeyconfigurationRequestTimeout{}
}

/*
PutConversationsKeyconfigurationRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutConversationsKeyconfigurationRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put conversations keyconfiguration request timeout response has a 2xx status code
func (o *PutConversationsKeyconfigurationRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put conversations keyconfiguration request timeout response has a 3xx status code
func (o *PutConversationsKeyconfigurationRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversations keyconfiguration request timeout response has a 4xx status code
func (o *PutConversationsKeyconfigurationRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this put conversations keyconfiguration request timeout response has a 5xx status code
func (o *PutConversationsKeyconfigurationRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this put conversations keyconfiguration request timeout response a status code equal to that given
func (o *PutConversationsKeyconfigurationRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PutConversationsKeyconfigurationRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/keyconfigurations/{keyconfigurationsId}][%d] putConversationsKeyconfigurationRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutConversationsKeyconfigurationRequestTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/keyconfigurations/{keyconfigurationsId}][%d] putConversationsKeyconfigurationRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutConversationsKeyconfigurationRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsKeyconfigurationRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsKeyconfigurationRequestEntityTooLarge creates a PutConversationsKeyconfigurationRequestEntityTooLarge with default headers values
func NewPutConversationsKeyconfigurationRequestEntityTooLarge() *PutConversationsKeyconfigurationRequestEntityTooLarge {
	return &PutConversationsKeyconfigurationRequestEntityTooLarge{}
}

/*
PutConversationsKeyconfigurationRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PutConversationsKeyconfigurationRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put conversations keyconfiguration request entity too large response has a 2xx status code
func (o *PutConversationsKeyconfigurationRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put conversations keyconfiguration request entity too large response has a 3xx status code
func (o *PutConversationsKeyconfigurationRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversations keyconfiguration request entity too large response has a 4xx status code
func (o *PutConversationsKeyconfigurationRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this put conversations keyconfiguration request entity too large response has a 5xx status code
func (o *PutConversationsKeyconfigurationRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this put conversations keyconfiguration request entity too large response a status code equal to that given
func (o *PutConversationsKeyconfigurationRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PutConversationsKeyconfigurationRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/keyconfigurations/{keyconfigurationsId}][%d] putConversationsKeyconfigurationRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutConversationsKeyconfigurationRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/keyconfigurations/{keyconfigurationsId}][%d] putConversationsKeyconfigurationRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutConversationsKeyconfigurationRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsKeyconfigurationRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsKeyconfigurationUnsupportedMediaType creates a PutConversationsKeyconfigurationUnsupportedMediaType with default headers values
func NewPutConversationsKeyconfigurationUnsupportedMediaType() *PutConversationsKeyconfigurationUnsupportedMediaType {
	return &PutConversationsKeyconfigurationUnsupportedMediaType{}
}

/*
PutConversationsKeyconfigurationUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutConversationsKeyconfigurationUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put conversations keyconfiguration unsupported media type response has a 2xx status code
func (o *PutConversationsKeyconfigurationUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put conversations keyconfiguration unsupported media type response has a 3xx status code
func (o *PutConversationsKeyconfigurationUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversations keyconfiguration unsupported media type response has a 4xx status code
func (o *PutConversationsKeyconfigurationUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this put conversations keyconfiguration unsupported media type response has a 5xx status code
func (o *PutConversationsKeyconfigurationUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this put conversations keyconfiguration unsupported media type response a status code equal to that given
func (o *PutConversationsKeyconfigurationUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PutConversationsKeyconfigurationUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/keyconfigurations/{keyconfigurationsId}][%d] putConversationsKeyconfigurationUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutConversationsKeyconfigurationUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/keyconfigurations/{keyconfigurationsId}][%d] putConversationsKeyconfigurationUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutConversationsKeyconfigurationUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsKeyconfigurationUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsKeyconfigurationTooManyRequests creates a PutConversationsKeyconfigurationTooManyRequests with default headers values
func NewPutConversationsKeyconfigurationTooManyRequests() *PutConversationsKeyconfigurationTooManyRequests {
	return &PutConversationsKeyconfigurationTooManyRequests{}
}

/*
PutConversationsKeyconfigurationTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutConversationsKeyconfigurationTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put conversations keyconfiguration too many requests response has a 2xx status code
func (o *PutConversationsKeyconfigurationTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put conversations keyconfiguration too many requests response has a 3xx status code
func (o *PutConversationsKeyconfigurationTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversations keyconfiguration too many requests response has a 4xx status code
func (o *PutConversationsKeyconfigurationTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this put conversations keyconfiguration too many requests response has a 5xx status code
func (o *PutConversationsKeyconfigurationTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this put conversations keyconfiguration too many requests response a status code equal to that given
func (o *PutConversationsKeyconfigurationTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PutConversationsKeyconfigurationTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/keyconfigurations/{keyconfigurationsId}][%d] putConversationsKeyconfigurationTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutConversationsKeyconfigurationTooManyRequests) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/keyconfigurations/{keyconfigurationsId}][%d] putConversationsKeyconfigurationTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutConversationsKeyconfigurationTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsKeyconfigurationTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsKeyconfigurationInternalServerError creates a PutConversationsKeyconfigurationInternalServerError with default headers values
func NewPutConversationsKeyconfigurationInternalServerError() *PutConversationsKeyconfigurationInternalServerError {
	return &PutConversationsKeyconfigurationInternalServerError{}
}

/*
PutConversationsKeyconfigurationInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutConversationsKeyconfigurationInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put conversations keyconfiguration internal server error response has a 2xx status code
func (o *PutConversationsKeyconfigurationInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put conversations keyconfiguration internal server error response has a 3xx status code
func (o *PutConversationsKeyconfigurationInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversations keyconfiguration internal server error response has a 4xx status code
func (o *PutConversationsKeyconfigurationInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this put conversations keyconfiguration internal server error response has a 5xx status code
func (o *PutConversationsKeyconfigurationInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this put conversations keyconfiguration internal server error response a status code equal to that given
func (o *PutConversationsKeyconfigurationInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PutConversationsKeyconfigurationInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/keyconfigurations/{keyconfigurationsId}][%d] putConversationsKeyconfigurationInternalServerError  %+v", 500, o.Payload)
}

func (o *PutConversationsKeyconfigurationInternalServerError) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/keyconfigurations/{keyconfigurationsId}][%d] putConversationsKeyconfigurationInternalServerError  %+v", 500, o.Payload)
}

func (o *PutConversationsKeyconfigurationInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsKeyconfigurationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsKeyconfigurationServiceUnavailable creates a PutConversationsKeyconfigurationServiceUnavailable with default headers values
func NewPutConversationsKeyconfigurationServiceUnavailable() *PutConversationsKeyconfigurationServiceUnavailable {
	return &PutConversationsKeyconfigurationServiceUnavailable{}
}

/*
PutConversationsKeyconfigurationServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutConversationsKeyconfigurationServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put conversations keyconfiguration service unavailable response has a 2xx status code
func (o *PutConversationsKeyconfigurationServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put conversations keyconfiguration service unavailable response has a 3xx status code
func (o *PutConversationsKeyconfigurationServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversations keyconfiguration service unavailable response has a 4xx status code
func (o *PutConversationsKeyconfigurationServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this put conversations keyconfiguration service unavailable response has a 5xx status code
func (o *PutConversationsKeyconfigurationServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this put conversations keyconfiguration service unavailable response a status code equal to that given
func (o *PutConversationsKeyconfigurationServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PutConversationsKeyconfigurationServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/keyconfigurations/{keyconfigurationsId}][%d] putConversationsKeyconfigurationServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutConversationsKeyconfigurationServiceUnavailable) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/keyconfigurations/{keyconfigurationsId}][%d] putConversationsKeyconfigurationServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutConversationsKeyconfigurationServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsKeyconfigurationServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsKeyconfigurationGatewayTimeout creates a PutConversationsKeyconfigurationGatewayTimeout with default headers values
func NewPutConversationsKeyconfigurationGatewayTimeout() *PutConversationsKeyconfigurationGatewayTimeout {
	return &PutConversationsKeyconfigurationGatewayTimeout{}
}

/*
PutConversationsKeyconfigurationGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PutConversationsKeyconfigurationGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put conversations keyconfiguration gateway timeout response has a 2xx status code
func (o *PutConversationsKeyconfigurationGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put conversations keyconfiguration gateway timeout response has a 3xx status code
func (o *PutConversationsKeyconfigurationGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversations keyconfiguration gateway timeout response has a 4xx status code
func (o *PutConversationsKeyconfigurationGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this put conversations keyconfiguration gateway timeout response has a 5xx status code
func (o *PutConversationsKeyconfigurationGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this put conversations keyconfiguration gateway timeout response a status code equal to that given
func (o *PutConversationsKeyconfigurationGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PutConversationsKeyconfigurationGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/keyconfigurations/{keyconfigurationsId}][%d] putConversationsKeyconfigurationGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutConversationsKeyconfigurationGatewayTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/keyconfigurations/{keyconfigurationsId}][%d] putConversationsKeyconfigurationGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutConversationsKeyconfigurationGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsKeyconfigurationGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
