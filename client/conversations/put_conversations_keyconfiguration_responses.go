// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutConversationsKeyconfigurationReader is a Reader for the PutConversationsKeyconfiguration structure.
type PutConversationsKeyconfigurationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutConversationsKeyconfigurationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutConversationsKeyconfigurationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutConversationsKeyconfigurationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutConversationsKeyconfigurationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutConversationsKeyconfigurationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutConversationsKeyconfigurationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutConversationsKeyconfigurationRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutConversationsKeyconfigurationRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutConversationsKeyconfigurationUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutConversationsKeyconfigurationTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutConversationsKeyconfigurationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutConversationsKeyconfigurationServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutConversationsKeyconfigurationGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutConversationsKeyconfigurationOK creates a PutConversationsKeyconfigurationOK with default headers values
func NewPutConversationsKeyconfigurationOK() *PutConversationsKeyconfigurationOK {
	return &PutConversationsKeyconfigurationOK{}
}

/*PutConversationsKeyconfigurationOK handles this case with default header values.

successful operation
*/
type PutConversationsKeyconfigurationOK struct {
	Payload *models.ConversationEncryptionConfiguration
}

func (o *PutConversationsKeyconfigurationOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/keyconfigurations/{keyconfigurationsId}][%d] putConversationsKeyconfigurationOK  %+v", 200, o.Payload)
}

func (o *PutConversationsKeyconfigurationOK) GetPayload() *models.ConversationEncryptionConfiguration {
	return o.Payload
}

func (o *PutConversationsKeyconfigurationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConversationEncryptionConfiguration)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsKeyconfigurationBadRequest creates a PutConversationsKeyconfigurationBadRequest with default headers values
func NewPutConversationsKeyconfigurationBadRequest() *PutConversationsKeyconfigurationBadRequest {
	return &PutConversationsKeyconfigurationBadRequest{}
}

/*PutConversationsKeyconfigurationBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutConversationsKeyconfigurationBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PutConversationsKeyconfigurationBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/keyconfigurations/{keyconfigurationsId}][%d] putConversationsKeyconfigurationBadRequest  %+v", 400, o.Payload)
}

func (o *PutConversationsKeyconfigurationBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsKeyconfigurationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsKeyconfigurationUnauthorized creates a PutConversationsKeyconfigurationUnauthorized with default headers values
func NewPutConversationsKeyconfigurationUnauthorized() *PutConversationsKeyconfigurationUnauthorized {
	return &PutConversationsKeyconfigurationUnauthorized{}
}

/*PutConversationsKeyconfigurationUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PutConversationsKeyconfigurationUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PutConversationsKeyconfigurationUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/keyconfigurations/{keyconfigurationsId}][%d] putConversationsKeyconfigurationUnauthorized  %+v", 401, o.Payload)
}

func (o *PutConversationsKeyconfigurationUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsKeyconfigurationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsKeyconfigurationForbidden creates a PutConversationsKeyconfigurationForbidden with default headers values
func NewPutConversationsKeyconfigurationForbidden() *PutConversationsKeyconfigurationForbidden {
	return &PutConversationsKeyconfigurationForbidden{}
}

/*PutConversationsKeyconfigurationForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PutConversationsKeyconfigurationForbidden struct {
	Payload *models.ErrorBody
}

func (o *PutConversationsKeyconfigurationForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/keyconfigurations/{keyconfigurationsId}][%d] putConversationsKeyconfigurationForbidden  %+v", 403, o.Payload)
}

func (o *PutConversationsKeyconfigurationForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsKeyconfigurationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsKeyconfigurationNotFound creates a PutConversationsKeyconfigurationNotFound with default headers values
func NewPutConversationsKeyconfigurationNotFound() *PutConversationsKeyconfigurationNotFound {
	return &PutConversationsKeyconfigurationNotFound{}
}

/*PutConversationsKeyconfigurationNotFound handles this case with default header values.

The requested resource was not found.
*/
type PutConversationsKeyconfigurationNotFound struct {
	Payload *models.ErrorBody
}

func (o *PutConversationsKeyconfigurationNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/keyconfigurations/{keyconfigurationsId}][%d] putConversationsKeyconfigurationNotFound  %+v", 404, o.Payload)
}

func (o *PutConversationsKeyconfigurationNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsKeyconfigurationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsKeyconfigurationRequestTimeout creates a PutConversationsKeyconfigurationRequestTimeout with default headers values
func NewPutConversationsKeyconfigurationRequestTimeout() *PutConversationsKeyconfigurationRequestTimeout {
	return &PutConversationsKeyconfigurationRequestTimeout{}
}

/*PutConversationsKeyconfigurationRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutConversationsKeyconfigurationRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PutConversationsKeyconfigurationRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/keyconfigurations/{keyconfigurationsId}][%d] putConversationsKeyconfigurationRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutConversationsKeyconfigurationRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsKeyconfigurationRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsKeyconfigurationRequestEntityTooLarge creates a PutConversationsKeyconfigurationRequestEntityTooLarge with default headers values
func NewPutConversationsKeyconfigurationRequestEntityTooLarge() *PutConversationsKeyconfigurationRequestEntityTooLarge {
	return &PutConversationsKeyconfigurationRequestEntityTooLarge{}
}

/*PutConversationsKeyconfigurationRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PutConversationsKeyconfigurationRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PutConversationsKeyconfigurationRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/keyconfigurations/{keyconfigurationsId}][%d] putConversationsKeyconfigurationRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutConversationsKeyconfigurationRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsKeyconfigurationRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsKeyconfigurationUnsupportedMediaType creates a PutConversationsKeyconfigurationUnsupportedMediaType with default headers values
func NewPutConversationsKeyconfigurationUnsupportedMediaType() *PutConversationsKeyconfigurationUnsupportedMediaType {
	return &PutConversationsKeyconfigurationUnsupportedMediaType{}
}

/*PutConversationsKeyconfigurationUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutConversationsKeyconfigurationUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PutConversationsKeyconfigurationUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/keyconfigurations/{keyconfigurationsId}][%d] putConversationsKeyconfigurationUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutConversationsKeyconfigurationUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsKeyconfigurationUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsKeyconfigurationTooManyRequests creates a PutConversationsKeyconfigurationTooManyRequests with default headers values
func NewPutConversationsKeyconfigurationTooManyRequests() *PutConversationsKeyconfigurationTooManyRequests {
	return &PutConversationsKeyconfigurationTooManyRequests{}
}

/*PutConversationsKeyconfigurationTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutConversationsKeyconfigurationTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PutConversationsKeyconfigurationTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/keyconfigurations/{keyconfigurationsId}][%d] putConversationsKeyconfigurationTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutConversationsKeyconfigurationTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsKeyconfigurationTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsKeyconfigurationInternalServerError creates a PutConversationsKeyconfigurationInternalServerError with default headers values
func NewPutConversationsKeyconfigurationInternalServerError() *PutConversationsKeyconfigurationInternalServerError {
	return &PutConversationsKeyconfigurationInternalServerError{}
}

/*PutConversationsKeyconfigurationInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutConversationsKeyconfigurationInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PutConversationsKeyconfigurationInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/keyconfigurations/{keyconfigurationsId}][%d] putConversationsKeyconfigurationInternalServerError  %+v", 500, o.Payload)
}

func (o *PutConversationsKeyconfigurationInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsKeyconfigurationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsKeyconfigurationServiceUnavailable creates a PutConversationsKeyconfigurationServiceUnavailable with default headers values
func NewPutConversationsKeyconfigurationServiceUnavailable() *PutConversationsKeyconfigurationServiceUnavailable {
	return &PutConversationsKeyconfigurationServiceUnavailable{}
}

/*PutConversationsKeyconfigurationServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutConversationsKeyconfigurationServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PutConversationsKeyconfigurationServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/keyconfigurations/{keyconfigurationsId}][%d] putConversationsKeyconfigurationServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutConversationsKeyconfigurationServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsKeyconfigurationServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsKeyconfigurationGatewayTimeout creates a PutConversationsKeyconfigurationGatewayTimeout with default headers values
func NewPutConversationsKeyconfigurationGatewayTimeout() *PutConversationsKeyconfigurationGatewayTimeout {
	return &PutConversationsKeyconfigurationGatewayTimeout{}
}

/*PutConversationsKeyconfigurationGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PutConversationsKeyconfigurationGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PutConversationsKeyconfigurationGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/keyconfigurations/{keyconfigurationsId}][%d] putConversationsKeyconfigurationGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutConversationsKeyconfigurationGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsKeyconfigurationGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
