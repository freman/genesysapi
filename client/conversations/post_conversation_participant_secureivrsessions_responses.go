// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostConversationParticipantSecureivrsessionsReader is a Reader for the PostConversationParticipantSecureivrsessions structure.
type PostConversationParticipantSecureivrsessionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostConversationParticipantSecureivrsessionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostConversationParticipantSecureivrsessionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostConversationParticipantSecureivrsessionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostConversationParticipantSecureivrsessionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostConversationParticipantSecureivrsessionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostConversationParticipantSecureivrsessionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostConversationParticipantSecureivrsessionsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostConversationParticipantSecureivrsessionsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostConversationParticipantSecureivrsessionsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostConversationParticipantSecureivrsessionsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostConversationParticipantSecureivrsessionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostConversationParticipantSecureivrsessionsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostConversationParticipantSecureivrsessionsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostConversationParticipantSecureivrsessionsOK creates a PostConversationParticipantSecureivrsessionsOK with default headers values
func NewPostConversationParticipantSecureivrsessionsOK() *PostConversationParticipantSecureivrsessionsOK {
	return &PostConversationParticipantSecureivrsessionsOK{}
}

/*
PostConversationParticipantSecureivrsessionsOK describes a response with status code 200, with default header values.

successful operation
*/
type PostConversationParticipantSecureivrsessionsOK struct {
	Payload *models.SecureSession
}

// IsSuccess returns true when this post conversation participant secureivrsessions o k response has a 2xx status code
func (o *PostConversationParticipantSecureivrsessionsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post conversation participant secureivrsessions o k response has a 3xx status code
func (o *PostConversationParticipantSecureivrsessionsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversation participant secureivrsessions o k response has a 4xx status code
func (o *PostConversationParticipantSecureivrsessionsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversation participant secureivrsessions o k response has a 5xx status code
func (o *PostConversationParticipantSecureivrsessionsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversation participant secureivrsessions o k response a status code equal to that given
func (o *PostConversationParticipantSecureivrsessionsOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostConversationParticipantSecureivrsessionsOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/participants/{participantId}/secureivrsessions][%d] postConversationParticipantSecureivrsessionsOK  %+v", 200, o.Payload)
}

func (o *PostConversationParticipantSecureivrsessionsOK) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/participants/{participantId}/secureivrsessions][%d] postConversationParticipantSecureivrsessionsOK  %+v", 200, o.Payload)
}

func (o *PostConversationParticipantSecureivrsessionsOK) GetPayload() *models.SecureSession {
	return o.Payload
}

func (o *PostConversationParticipantSecureivrsessionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SecureSession)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationParticipantSecureivrsessionsBadRequest creates a PostConversationParticipantSecureivrsessionsBadRequest with default headers values
func NewPostConversationParticipantSecureivrsessionsBadRequest() *PostConversationParticipantSecureivrsessionsBadRequest {
	return &PostConversationParticipantSecureivrsessionsBadRequest{}
}

/*
PostConversationParticipantSecureivrsessionsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostConversationParticipantSecureivrsessionsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversation participant secureivrsessions bad request response has a 2xx status code
func (o *PostConversationParticipantSecureivrsessionsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversation participant secureivrsessions bad request response has a 3xx status code
func (o *PostConversationParticipantSecureivrsessionsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversation participant secureivrsessions bad request response has a 4xx status code
func (o *PostConversationParticipantSecureivrsessionsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversation participant secureivrsessions bad request response has a 5xx status code
func (o *PostConversationParticipantSecureivrsessionsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversation participant secureivrsessions bad request response a status code equal to that given
func (o *PostConversationParticipantSecureivrsessionsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostConversationParticipantSecureivrsessionsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/participants/{participantId}/secureivrsessions][%d] postConversationParticipantSecureivrsessionsBadRequest  %+v", 400, o.Payload)
}

func (o *PostConversationParticipantSecureivrsessionsBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/participants/{participantId}/secureivrsessions][%d] postConversationParticipantSecureivrsessionsBadRequest  %+v", 400, o.Payload)
}

func (o *PostConversationParticipantSecureivrsessionsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationParticipantSecureivrsessionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationParticipantSecureivrsessionsUnauthorized creates a PostConversationParticipantSecureivrsessionsUnauthorized with default headers values
func NewPostConversationParticipantSecureivrsessionsUnauthorized() *PostConversationParticipantSecureivrsessionsUnauthorized {
	return &PostConversationParticipantSecureivrsessionsUnauthorized{}
}

/*
PostConversationParticipantSecureivrsessionsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostConversationParticipantSecureivrsessionsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversation participant secureivrsessions unauthorized response has a 2xx status code
func (o *PostConversationParticipantSecureivrsessionsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversation participant secureivrsessions unauthorized response has a 3xx status code
func (o *PostConversationParticipantSecureivrsessionsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversation participant secureivrsessions unauthorized response has a 4xx status code
func (o *PostConversationParticipantSecureivrsessionsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversation participant secureivrsessions unauthorized response has a 5xx status code
func (o *PostConversationParticipantSecureivrsessionsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversation participant secureivrsessions unauthorized response a status code equal to that given
func (o *PostConversationParticipantSecureivrsessionsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostConversationParticipantSecureivrsessionsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/participants/{participantId}/secureivrsessions][%d] postConversationParticipantSecureivrsessionsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostConversationParticipantSecureivrsessionsUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/participants/{participantId}/secureivrsessions][%d] postConversationParticipantSecureivrsessionsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostConversationParticipantSecureivrsessionsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationParticipantSecureivrsessionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationParticipantSecureivrsessionsForbidden creates a PostConversationParticipantSecureivrsessionsForbidden with default headers values
func NewPostConversationParticipantSecureivrsessionsForbidden() *PostConversationParticipantSecureivrsessionsForbidden {
	return &PostConversationParticipantSecureivrsessionsForbidden{}
}

/*
PostConversationParticipantSecureivrsessionsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostConversationParticipantSecureivrsessionsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversation participant secureivrsessions forbidden response has a 2xx status code
func (o *PostConversationParticipantSecureivrsessionsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversation participant secureivrsessions forbidden response has a 3xx status code
func (o *PostConversationParticipantSecureivrsessionsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversation participant secureivrsessions forbidden response has a 4xx status code
func (o *PostConversationParticipantSecureivrsessionsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversation participant secureivrsessions forbidden response has a 5xx status code
func (o *PostConversationParticipantSecureivrsessionsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversation participant secureivrsessions forbidden response a status code equal to that given
func (o *PostConversationParticipantSecureivrsessionsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostConversationParticipantSecureivrsessionsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/participants/{participantId}/secureivrsessions][%d] postConversationParticipantSecureivrsessionsForbidden  %+v", 403, o.Payload)
}

func (o *PostConversationParticipantSecureivrsessionsForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/participants/{participantId}/secureivrsessions][%d] postConversationParticipantSecureivrsessionsForbidden  %+v", 403, o.Payload)
}

func (o *PostConversationParticipantSecureivrsessionsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationParticipantSecureivrsessionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationParticipantSecureivrsessionsNotFound creates a PostConversationParticipantSecureivrsessionsNotFound with default headers values
func NewPostConversationParticipantSecureivrsessionsNotFound() *PostConversationParticipantSecureivrsessionsNotFound {
	return &PostConversationParticipantSecureivrsessionsNotFound{}
}

/*
PostConversationParticipantSecureivrsessionsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostConversationParticipantSecureivrsessionsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversation participant secureivrsessions not found response has a 2xx status code
func (o *PostConversationParticipantSecureivrsessionsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversation participant secureivrsessions not found response has a 3xx status code
func (o *PostConversationParticipantSecureivrsessionsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversation participant secureivrsessions not found response has a 4xx status code
func (o *PostConversationParticipantSecureivrsessionsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversation participant secureivrsessions not found response has a 5xx status code
func (o *PostConversationParticipantSecureivrsessionsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversation participant secureivrsessions not found response a status code equal to that given
func (o *PostConversationParticipantSecureivrsessionsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostConversationParticipantSecureivrsessionsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/participants/{participantId}/secureivrsessions][%d] postConversationParticipantSecureivrsessionsNotFound  %+v", 404, o.Payload)
}

func (o *PostConversationParticipantSecureivrsessionsNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/participants/{participantId}/secureivrsessions][%d] postConversationParticipantSecureivrsessionsNotFound  %+v", 404, o.Payload)
}

func (o *PostConversationParticipantSecureivrsessionsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationParticipantSecureivrsessionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationParticipantSecureivrsessionsRequestTimeout creates a PostConversationParticipantSecureivrsessionsRequestTimeout with default headers values
func NewPostConversationParticipantSecureivrsessionsRequestTimeout() *PostConversationParticipantSecureivrsessionsRequestTimeout {
	return &PostConversationParticipantSecureivrsessionsRequestTimeout{}
}

/*
PostConversationParticipantSecureivrsessionsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostConversationParticipantSecureivrsessionsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversation participant secureivrsessions request timeout response has a 2xx status code
func (o *PostConversationParticipantSecureivrsessionsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversation participant secureivrsessions request timeout response has a 3xx status code
func (o *PostConversationParticipantSecureivrsessionsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversation participant secureivrsessions request timeout response has a 4xx status code
func (o *PostConversationParticipantSecureivrsessionsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversation participant secureivrsessions request timeout response has a 5xx status code
func (o *PostConversationParticipantSecureivrsessionsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversation participant secureivrsessions request timeout response a status code equal to that given
func (o *PostConversationParticipantSecureivrsessionsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostConversationParticipantSecureivrsessionsRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/participants/{participantId}/secureivrsessions][%d] postConversationParticipantSecureivrsessionsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostConversationParticipantSecureivrsessionsRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/participants/{participantId}/secureivrsessions][%d] postConversationParticipantSecureivrsessionsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostConversationParticipantSecureivrsessionsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationParticipantSecureivrsessionsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationParticipantSecureivrsessionsRequestEntityTooLarge creates a PostConversationParticipantSecureivrsessionsRequestEntityTooLarge with default headers values
func NewPostConversationParticipantSecureivrsessionsRequestEntityTooLarge() *PostConversationParticipantSecureivrsessionsRequestEntityTooLarge {
	return &PostConversationParticipantSecureivrsessionsRequestEntityTooLarge{}
}

/*
PostConversationParticipantSecureivrsessionsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PostConversationParticipantSecureivrsessionsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversation participant secureivrsessions request entity too large response has a 2xx status code
func (o *PostConversationParticipantSecureivrsessionsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversation participant secureivrsessions request entity too large response has a 3xx status code
func (o *PostConversationParticipantSecureivrsessionsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversation participant secureivrsessions request entity too large response has a 4xx status code
func (o *PostConversationParticipantSecureivrsessionsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversation participant secureivrsessions request entity too large response has a 5xx status code
func (o *PostConversationParticipantSecureivrsessionsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversation participant secureivrsessions request entity too large response a status code equal to that given
func (o *PostConversationParticipantSecureivrsessionsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostConversationParticipantSecureivrsessionsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/participants/{participantId}/secureivrsessions][%d] postConversationParticipantSecureivrsessionsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostConversationParticipantSecureivrsessionsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/participants/{participantId}/secureivrsessions][%d] postConversationParticipantSecureivrsessionsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostConversationParticipantSecureivrsessionsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationParticipantSecureivrsessionsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationParticipantSecureivrsessionsUnsupportedMediaType creates a PostConversationParticipantSecureivrsessionsUnsupportedMediaType with default headers values
func NewPostConversationParticipantSecureivrsessionsUnsupportedMediaType() *PostConversationParticipantSecureivrsessionsUnsupportedMediaType {
	return &PostConversationParticipantSecureivrsessionsUnsupportedMediaType{}
}

/*
PostConversationParticipantSecureivrsessionsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostConversationParticipantSecureivrsessionsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversation participant secureivrsessions unsupported media type response has a 2xx status code
func (o *PostConversationParticipantSecureivrsessionsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversation participant secureivrsessions unsupported media type response has a 3xx status code
func (o *PostConversationParticipantSecureivrsessionsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversation participant secureivrsessions unsupported media type response has a 4xx status code
func (o *PostConversationParticipantSecureivrsessionsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversation participant secureivrsessions unsupported media type response has a 5xx status code
func (o *PostConversationParticipantSecureivrsessionsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversation participant secureivrsessions unsupported media type response a status code equal to that given
func (o *PostConversationParticipantSecureivrsessionsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostConversationParticipantSecureivrsessionsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/participants/{participantId}/secureivrsessions][%d] postConversationParticipantSecureivrsessionsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostConversationParticipantSecureivrsessionsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/participants/{participantId}/secureivrsessions][%d] postConversationParticipantSecureivrsessionsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostConversationParticipantSecureivrsessionsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationParticipantSecureivrsessionsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationParticipantSecureivrsessionsTooManyRequests creates a PostConversationParticipantSecureivrsessionsTooManyRequests with default headers values
func NewPostConversationParticipantSecureivrsessionsTooManyRequests() *PostConversationParticipantSecureivrsessionsTooManyRequests {
	return &PostConversationParticipantSecureivrsessionsTooManyRequests{}
}

/*
PostConversationParticipantSecureivrsessionsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostConversationParticipantSecureivrsessionsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversation participant secureivrsessions too many requests response has a 2xx status code
func (o *PostConversationParticipantSecureivrsessionsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversation participant secureivrsessions too many requests response has a 3xx status code
func (o *PostConversationParticipantSecureivrsessionsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversation participant secureivrsessions too many requests response has a 4xx status code
func (o *PostConversationParticipantSecureivrsessionsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversation participant secureivrsessions too many requests response has a 5xx status code
func (o *PostConversationParticipantSecureivrsessionsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversation participant secureivrsessions too many requests response a status code equal to that given
func (o *PostConversationParticipantSecureivrsessionsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostConversationParticipantSecureivrsessionsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/participants/{participantId}/secureivrsessions][%d] postConversationParticipantSecureivrsessionsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostConversationParticipantSecureivrsessionsTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/participants/{participantId}/secureivrsessions][%d] postConversationParticipantSecureivrsessionsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostConversationParticipantSecureivrsessionsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationParticipantSecureivrsessionsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationParticipantSecureivrsessionsInternalServerError creates a PostConversationParticipantSecureivrsessionsInternalServerError with default headers values
func NewPostConversationParticipantSecureivrsessionsInternalServerError() *PostConversationParticipantSecureivrsessionsInternalServerError {
	return &PostConversationParticipantSecureivrsessionsInternalServerError{}
}

/*
PostConversationParticipantSecureivrsessionsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostConversationParticipantSecureivrsessionsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversation participant secureivrsessions internal server error response has a 2xx status code
func (o *PostConversationParticipantSecureivrsessionsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversation participant secureivrsessions internal server error response has a 3xx status code
func (o *PostConversationParticipantSecureivrsessionsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversation participant secureivrsessions internal server error response has a 4xx status code
func (o *PostConversationParticipantSecureivrsessionsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversation participant secureivrsessions internal server error response has a 5xx status code
func (o *PostConversationParticipantSecureivrsessionsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversation participant secureivrsessions internal server error response a status code equal to that given
func (o *PostConversationParticipantSecureivrsessionsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostConversationParticipantSecureivrsessionsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/participants/{participantId}/secureivrsessions][%d] postConversationParticipantSecureivrsessionsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostConversationParticipantSecureivrsessionsInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/participants/{participantId}/secureivrsessions][%d] postConversationParticipantSecureivrsessionsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostConversationParticipantSecureivrsessionsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationParticipantSecureivrsessionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationParticipantSecureivrsessionsServiceUnavailable creates a PostConversationParticipantSecureivrsessionsServiceUnavailable with default headers values
func NewPostConversationParticipantSecureivrsessionsServiceUnavailable() *PostConversationParticipantSecureivrsessionsServiceUnavailable {
	return &PostConversationParticipantSecureivrsessionsServiceUnavailable{}
}

/*
PostConversationParticipantSecureivrsessionsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostConversationParticipantSecureivrsessionsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversation participant secureivrsessions service unavailable response has a 2xx status code
func (o *PostConversationParticipantSecureivrsessionsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversation participant secureivrsessions service unavailable response has a 3xx status code
func (o *PostConversationParticipantSecureivrsessionsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversation participant secureivrsessions service unavailable response has a 4xx status code
func (o *PostConversationParticipantSecureivrsessionsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversation participant secureivrsessions service unavailable response has a 5xx status code
func (o *PostConversationParticipantSecureivrsessionsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversation participant secureivrsessions service unavailable response a status code equal to that given
func (o *PostConversationParticipantSecureivrsessionsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostConversationParticipantSecureivrsessionsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/participants/{participantId}/secureivrsessions][%d] postConversationParticipantSecureivrsessionsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostConversationParticipantSecureivrsessionsServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/participants/{participantId}/secureivrsessions][%d] postConversationParticipantSecureivrsessionsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostConversationParticipantSecureivrsessionsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationParticipantSecureivrsessionsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationParticipantSecureivrsessionsGatewayTimeout creates a PostConversationParticipantSecureivrsessionsGatewayTimeout with default headers values
func NewPostConversationParticipantSecureivrsessionsGatewayTimeout() *PostConversationParticipantSecureivrsessionsGatewayTimeout {
	return &PostConversationParticipantSecureivrsessionsGatewayTimeout{}
}

/*
PostConversationParticipantSecureivrsessionsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostConversationParticipantSecureivrsessionsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversation participant secureivrsessions gateway timeout response has a 2xx status code
func (o *PostConversationParticipantSecureivrsessionsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversation participant secureivrsessions gateway timeout response has a 3xx status code
func (o *PostConversationParticipantSecureivrsessionsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversation participant secureivrsessions gateway timeout response has a 4xx status code
func (o *PostConversationParticipantSecureivrsessionsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversation participant secureivrsessions gateway timeout response has a 5xx status code
func (o *PostConversationParticipantSecureivrsessionsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversation participant secureivrsessions gateway timeout response a status code equal to that given
func (o *PostConversationParticipantSecureivrsessionsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostConversationParticipantSecureivrsessionsGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/participants/{participantId}/secureivrsessions][%d] postConversationParticipantSecureivrsessionsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostConversationParticipantSecureivrsessionsGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/participants/{participantId}/secureivrsessions][%d] postConversationParticipantSecureivrsessionsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostConversationParticipantSecureivrsessionsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationParticipantSecureivrsessionsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
