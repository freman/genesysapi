// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutConversationSecureattributesReader is a Reader for the PutConversationSecureattributes structure.
type PutConversationSecureattributesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutConversationSecureattributesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewPutConversationSecureattributesAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutConversationSecureattributesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutConversationSecureattributesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutConversationSecureattributesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutConversationSecureattributesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutConversationSecureattributesRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPutConversationSecureattributesConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutConversationSecureattributesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutConversationSecureattributesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutConversationSecureattributesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutConversationSecureattributesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutConversationSecureattributesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutConversationSecureattributesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutConversationSecureattributesAccepted creates a PutConversationSecureattributesAccepted with default headers values
func NewPutConversationSecureattributesAccepted() *PutConversationSecureattributesAccepted {
	return &PutConversationSecureattributesAccepted{}
}

/*
PutConversationSecureattributesAccepted describes a response with status code 202, with default header values.

The secure attributes set request was accepted.
*/
type PutConversationSecureattributesAccepted struct {
	Payload string
}

// IsSuccess returns true when this put conversation secureattributes accepted response has a 2xx status code
func (o *PutConversationSecureattributesAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put conversation secureattributes accepted response has a 3xx status code
func (o *PutConversationSecureattributesAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversation secureattributes accepted response has a 4xx status code
func (o *PutConversationSecureattributesAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this put conversation secureattributes accepted response has a 5xx status code
func (o *PutConversationSecureattributesAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this put conversation secureattributes accepted response a status code equal to that given
func (o *PutConversationSecureattributesAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *PutConversationSecureattributesAccepted) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/{conversationId}/secureattributes][%d] putConversationSecureattributesAccepted  %+v", 202, o.Payload)
}

func (o *PutConversationSecureattributesAccepted) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/{conversationId}/secureattributes][%d] putConversationSecureattributesAccepted  %+v", 202, o.Payload)
}

func (o *PutConversationSecureattributesAccepted) GetPayload() string {
	return o.Payload
}

func (o *PutConversationSecureattributesAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationSecureattributesBadRequest creates a PutConversationSecureattributesBadRequest with default headers values
func NewPutConversationSecureattributesBadRequest() *PutConversationSecureattributesBadRequest {
	return &PutConversationSecureattributesBadRequest{}
}

/*
PutConversationSecureattributesBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutConversationSecureattributesBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put conversation secureattributes bad request response has a 2xx status code
func (o *PutConversationSecureattributesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put conversation secureattributes bad request response has a 3xx status code
func (o *PutConversationSecureattributesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversation secureattributes bad request response has a 4xx status code
func (o *PutConversationSecureattributesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put conversation secureattributes bad request response has a 5xx status code
func (o *PutConversationSecureattributesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put conversation secureattributes bad request response a status code equal to that given
func (o *PutConversationSecureattributesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PutConversationSecureattributesBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/{conversationId}/secureattributes][%d] putConversationSecureattributesBadRequest  %+v", 400, o.Payload)
}

func (o *PutConversationSecureattributesBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/{conversationId}/secureattributes][%d] putConversationSecureattributesBadRequest  %+v", 400, o.Payload)
}

func (o *PutConversationSecureattributesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationSecureattributesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationSecureattributesUnauthorized creates a PutConversationSecureattributesUnauthorized with default headers values
func NewPutConversationSecureattributesUnauthorized() *PutConversationSecureattributesUnauthorized {
	return &PutConversationSecureattributesUnauthorized{}
}

/*
PutConversationSecureattributesUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PutConversationSecureattributesUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put conversation secureattributes unauthorized response has a 2xx status code
func (o *PutConversationSecureattributesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put conversation secureattributes unauthorized response has a 3xx status code
func (o *PutConversationSecureattributesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversation secureattributes unauthorized response has a 4xx status code
func (o *PutConversationSecureattributesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put conversation secureattributes unauthorized response has a 5xx status code
func (o *PutConversationSecureattributesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put conversation secureattributes unauthorized response a status code equal to that given
func (o *PutConversationSecureattributesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PutConversationSecureattributesUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/{conversationId}/secureattributes][%d] putConversationSecureattributesUnauthorized  %+v", 401, o.Payload)
}

func (o *PutConversationSecureattributesUnauthorized) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/{conversationId}/secureattributes][%d] putConversationSecureattributesUnauthorized  %+v", 401, o.Payload)
}

func (o *PutConversationSecureattributesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationSecureattributesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationSecureattributesForbidden creates a PutConversationSecureattributesForbidden with default headers values
func NewPutConversationSecureattributesForbidden() *PutConversationSecureattributesForbidden {
	return &PutConversationSecureattributesForbidden{}
}

/*
PutConversationSecureattributesForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PutConversationSecureattributesForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put conversation secureattributes forbidden response has a 2xx status code
func (o *PutConversationSecureattributesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put conversation secureattributes forbidden response has a 3xx status code
func (o *PutConversationSecureattributesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversation secureattributes forbidden response has a 4xx status code
func (o *PutConversationSecureattributesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put conversation secureattributes forbidden response has a 5xx status code
func (o *PutConversationSecureattributesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put conversation secureattributes forbidden response a status code equal to that given
func (o *PutConversationSecureattributesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PutConversationSecureattributesForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/{conversationId}/secureattributes][%d] putConversationSecureattributesForbidden  %+v", 403, o.Payload)
}

func (o *PutConversationSecureattributesForbidden) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/{conversationId}/secureattributes][%d] putConversationSecureattributesForbidden  %+v", 403, o.Payload)
}

func (o *PutConversationSecureattributesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationSecureattributesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationSecureattributesNotFound creates a PutConversationSecureattributesNotFound with default headers values
func NewPutConversationSecureattributesNotFound() *PutConversationSecureattributesNotFound {
	return &PutConversationSecureattributesNotFound{}
}

/*
PutConversationSecureattributesNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PutConversationSecureattributesNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put conversation secureattributes not found response has a 2xx status code
func (o *PutConversationSecureattributesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put conversation secureattributes not found response has a 3xx status code
func (o *PutConversationSecureattributesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversation secureattributes not found response has a 4xx status code
func (o *PutConversationSecureattributesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put conversation secureattributes not found response has a 5xx status code
func (o *PutConversationSecureattributesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put conversation secureattributes not found response a status code equal to that given
func (o *PutConversationSecureattributesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PutConversationSecureattributesNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/{conversationId}/secureattributes][%d] putConversationSecureattributesNotFound  %+v", 404, o.Payload)
}

func (o *PutConversationSecureattributesNotFound) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/{conversationId}/secureattributes][%d] putConversationSecureattributesNotFound  %+v", 404, o.Payload)
}

func (o *PutConversationSecureattributesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationSecureattributesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationSecureattributesRequestTimeout creates a PutConversationSecureattributesRequestTimeout with default headers values
func NewPutConversationSecureattributesRequestTimeout() *PutConversationSecureattributesRequestTimeout {
	return &PutConversationSecureattributesRequestTimeout{}
}

/*
PutConversationSecureattributesRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutConversationSecureattributesRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put conversation secureattributes request timeout response has a 2xx status code
func (o *PutConversationSecureattributesRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put conversation secureattributes request timeout response has a 3xx status code
func (o *PutConversationSecureattributesRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversation secureattributes request timeout response has a 4xx status code
func (o *PutConversationSecureattributesRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this put conversation secureattributes request timeout response has a 5xx status code
func (o *PutConversationSecureattributesRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this put conversation secureattributes request timeout response a status code equal to that given
func (o *PutConversationSecureattributesRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PutConversationSecureattributesRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/{conversationId}/secureattributes][%d] putConversationSecureattributesRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutConversationSecureattributesRequestTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/{conversationId}/secureattributes][%d] putConversationSecureattributesRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutConversationSecureattributesRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationSecureattributesRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationSecureattributesConflict creates a PutConversationSecureattributesConflict with default headers values
func NewPutConversationSecureattributesConflict() *PutConversationSecureattributesConflict {
	return &PutConversationSecureattributesConflict{}
}

/*
PutConversationSecureattributesConflict describes a response with status code 409, with default header values.

Conflict
*/
type PutConversationSecureattributesConflict struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put conversation secureattributes conflict response has a 2xx status code
func (o *PutConversationSecureattributesConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put conversation secureattributes conflict response has a 3xx status code
func (o *PutConversationSecureattributesConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversation secureattributes conflict response has a 4xx status code
func (o *PutConversationSecureattributesConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this put conversation secureattributes conflict response has a 5xx status code
func (o *PutConversationSecureattributesConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this put conversation secureattributes conflict response a status code equal to that given
func (o *PutConversationSecureattributesConflict) IsCode(code int) bool {
	return code == 409
}

func (o *PutConversationSecureattributesConflict) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/{conversationId}/secureattributes][%d] putConversationSecureattributesConflict  %+v", 409, o.Payload)
}

func (o *PutConversationSecureattributesConflict) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/{conversationId}/secureattributes][%d] putConversationSecureattributesConflict  %+v", 409, o.Payload)
}

func (o *PutConversationSecureattributesConflict) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationSecureattributesConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationSecureattributesRequestEntityTooLarge creates a PutConversationSecureattributesRequestEntityTooLarge with default headers values
func NewPutConversationSecureattributesRequestEntityTooLarge() *PutConversationSecureattributesRequestEntityTooLarge {
	return &PutConversationSecureattributesRequestEntityTooLarge{}
}

/*
PutConversationSecureattributesRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PutConversationSecureattributesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put conversation secureattributes request entity too large response has a 2xx status code
func (o *PutConversationSecureattributesRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put conversation secureattributes request entity too large response has a 3xx status code
func (o *PutConversationSecureattributesRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversation secureattributes request entity too large response has a 4xx status code
func (o *PutConversationSecureattributesRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this put conversation secureattributes request entity too large response has a 5xx status code
func (o *PutConversationSecureattributesRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this put conversation secureattributes request entity too large response a status code equal to that given
func (o *PutConversationSecureattributesRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PutConversationSecureattributesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/{conversationId}/secureattributes][%d] putConversationSecureattributesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutConversationSecureattributesRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/{conversationId}/secureattributes][%d] putConversationSecureattributesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutConversationSecureattributesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationSecureattributesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationSecureattributesUnsupportedMediaType creates a PutConversationSecureattributesUnsupportedMediaType with default headers values
func NewPutConversationSecureattributesUnsupportedMediaType() *PutConversationSecureattributesUnsupportedMediaType {
	return &PutConversationSecureattributesUnsupportedMediaType{}
}

/*
PutConversationSecureattributesUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutConversationSecureattributesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put conversation secureattributes unsupported media type response has a 2xx status code
func (o *PutConversationSecureattributesUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put conversation secureattributes unsupported media type response has a 3xx status code
func (o *PutConversationSecureattributesUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversation secureattributes unsupported media type response has a 4xx status code
func (o *PutConversationSecureattributesUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this put conversation secureattributes unsupported media type response has a 5xx status code
func (o *PutConversationSecureattributesUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this put conversation secureattributes unsupported media type response a status code equal to that given
func (o *PutConversationSecureattributesUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PutConversationSecureattributesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/{conversationId}/secureattributes][%d] putConversationSecureattributesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutConversationSecureattributesUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/{conversationId}/secureattributes][%d] putConversationSecureattributesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutConversationSecureattributesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationSecureattributesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationSecureattributesTooManyRequests creates a PutConversationSecureattributesTooManyRequests with default headers values
func NewPutConversationSecureattributesTooManyRequests() *PutConversationSecureattributesTooManyRequests {
	return &PutConversationSecureattributesTooManyRequests{}
}

/*
PutConversationSecureattributesTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutConversationSecureattributesTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put conversation secureattributes too many requests response has a 2xx status code
func (o *PutConversationSecureattributesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put conversation secureattributes too many requests response has a 3xx status code
func (o *PutConversationSecureattributesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversation secureattributes too many requests response has a 4xx status code
func (o *PutConversationSecureattributesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this put conversation secureattributes too many requests response has a 5xx status code
func (o *PutConversationSecureattributesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this put conversation secureattributes too many requests response a status code equal to that given
func (o *PutConversationSecureattributesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PutConversationSecureattributesTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/{conversationId}/secureattributes][%d] putConversationSecureattributesTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutConversationSecureattributesTooManyRequests) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/{conversationId}/secureattributes][%d] putConversationSecureattributesTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutConversationSecureattributesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationSecureattributesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationSecureattributesInternalServerError creates a PutConversationSecureattributesInternalServerError with default headers values
func NewPutConversationSecureattributesInternalServerError() *PutConversationSecureattributesInternalServerError {
	return &PutConversationSecureattributesInternalServerError{}
}

/*
PutConversationSecureattributesInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutConversationSecureattributesInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put conversation secureattributes internal server error response has a 2xx status code
func (o *PutConversationSecureattributesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put conversation secureattributes internal server error response has a 3xx status code
func (o *PutConversationSecureattributesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversation secureattributes internal server error response has a 4xx status code
func (o *PutConversationSecureattributesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this put conversation secureattributes internal server error response has a 5xx status code
func (o *PutConversationSecureattributesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this put conversation secureattributes internal server error response a status code equal to that given
func (o *PutConversationSecureattributesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PutConversationSecureattributesInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/{conversationId}/secureattributes][%d] putConversationSecureattributesInternalServerError  %+v", 500, o.Payload)
}

func (o *PutConversationSecureattributesInternalServerError) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/{conversationId}/secureattributes][%d] putConversationSecureattributesInternalServerError  %+v", 500, o.Payload)
}

func (o *PutConversationSecureattributesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationSecureattributesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationSecureattributesServiceUnavailable creates a PutConversationSecureattributesServiceUnavailable with default headers values
func NewPutConversationSecureattributesServiceUnavailable() *PutConversationSecureattributesServiceUnavailable {
	return &PutConversationSecureattributesServiceUnavailable{}
}

/*
PutConversationSecureattributesServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutConversationSecureattributesServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put conversation secureattributes service unavailable response has a 2xx status code
func (o *PutConversationSecureattributesServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put conversation secureattributes service unavailable response has a 3xx status code
func (o *PutConversationSecureattributesServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversation secureattributes service unavailable response has a 4xx status code
func (o *PutConversationSecureattributesServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this put conversation secureattributes service unavailable response has a 5xx status code
func (o *PutConversationSecureattributesServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this put conversation secureattributes service unavailable response a status code equal to that given
func (o *PutConversationSecureattributesServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PutConversationSecureattributesServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/{conversationId}/secureattributes][%d] putConversationSecureattributesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutConversationSecureattributesServiceUnavailable) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/{conversationId}/secureattributes][%d] putConversationSecureattributesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutConversationSecureattributesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationSecureattributesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationSecureattributesGatewayTimeout creates a PutConversationSecureattributesGatewayTimeout with default headers values
func NewPutConversationSecureattributesGatewayTimeout() *PutConversationSecureattributesGatewayTimeout {
	return &PutConversationSecureattributesGatewayTimeout{}
}

/*
PutConversationSecureattributesGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PutConversationSecureattributesGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put conversation secureattributes gateway timeout response has a 2xx status code
func (o *PutConversationSecureattributesGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put conversation secureattributes gateway timeout response has a 3xx status code
func (o *PutConversationSecureattributesGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversation secureattributes gateway timeout response has a 4xx status code
func (o *PutConversationSecureattributesGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this put conversation secureattributes gateway timeout response has a 5xx status code
func (o *PutConversationSecureattributesGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this put conversation secureattributes gateway timeout response a status code equal to that given
func (o *PutConversationSecureattributesGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PutConversationSecureattributesGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/{conversationId}/secureattributes][%d] putConversationSecureattributesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutConversationSecureattributesGatewayTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/{conversationId}/secureattributes][%d] putConversationSecureattributesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutConversationSecureattributesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationSecureattributesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
