// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetConversationsMessagingIntegrationsTwitterIntegrationIDReader is a Reader for the GetConversationsMessagingIntegrationsTwitterIntegrationID structure.
type GetConversationsMessagingIntegrationsTwitterIntegrationIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConversationsMessagingIntegrationsTwitterIntegrationIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetConversationsMessagingIntegrationsTwitterIntegrationIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetConversationsMessagingIntegrationsTwitterIntegrationIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetConversationsMessagingIntegrationsTwitterIntegrationIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetConversationsMessagingIntegrationsTwitterIntegrationIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetConversationsMessagingIntegrationsTwitterIntegrationIDRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetConversationsMessagingIntegrationsTwitterIntegrationIDRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetConversationsMessagingIntegrationsTwitterIntegrationIDUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetConversationsMessagingIntegrationsTwitterIntegrationIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetConversationsMessagingIntegrationsTwitterIntegrationIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetConversationsMessagingIntegrationsTwitterIntegrationIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetConversationsMessagingIntegrationsTwitterIntegrationIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetConversationsMessagingIntegrationsTwitterIntegrationIDOK creates a GetConversationsMessagingIntegrationsTwitterIntegrationIDOK with default headers values
func NewGetConversationsMessagingIntegrationsTwitterIntegrationIDOK() *GetConversationsMessagingIntegrationsTwitterIntegrationIDOK {
	return &GetConversationsMessagingIntegrationsTwitterIntegrationIDOK{}
}

/*
GetConversationsMessagingIntegrationsTwitterIntegrationIDOK describes a response with status code 200, with default header values.

successful operation
*/
type GetConversationsMessagingIntegrationsTwitterIntegrationIDOK struct {
	Payload *models.TwitterIntegration
}

// IsSuccess returns true when this get conversations messaging integrations twitter integration Id o k response has a 2xx status code
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get conversations messaging integrations twitter integration Id o k response has a 3xx status code
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations messaging integrations twitter integration Id o k response has a 4xx status code
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations messaging integrations twitter integration Id o k response has a 5xx status code
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations messaging integrations twitter integration Id o k response a status code equal to that given
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/integrations/twitter/{integrationId}][%d] getConversationsMessagingIntegrationsTwitterIntegrationIdOK  %+v", 200, o.Payload)
}

func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDOK) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/integrations/twitter/{integrationId}][%d] getConversationsMessagingIntegrationsTwitterIntegrationIdOK  %+v", 200, o.Payload)
}

func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDOK) GetPayload() *models.TwitterIntegration {
	return o.Payload
}

func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TwitterIntegration)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessagingIntegrationsTwitterIntegrationIDBadRequest creates a GetConversationsMessagingIntegrationsTwitterIntegrationIDBadRequest with default headers values
func NewGetConversationsMessagingIntegrationsTwitterIntegrationIDBadRequest() *GetConversationsMessagingIntegrationsTwitterIntegrationIDBadRequest {
	return &GetConversationsMessagingIntegrationsTwitterIntegrationIDBadRequest{}
}

/*
GetConversationsMessagingIntegrationsTwitterIntegrationIDBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetConversationsMessagingIntegrationsTwitterIntegrationIDBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations messaging integrations twitter integration Id bad request response has a 2xx status code
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations messaging integrations twitter integration Id bad request response has a 3xx status code
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations messaging integrations twitter integration Id bad request response has a 4xx status code
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations messaging integrations twitter integration Id bad request response has a 5xx status code
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations messaging integrations twitter integration Id bad request response a status code equal to that given
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/integrations/twitter/{integrationId}][%d] getConversationsMessagingIntegrationsTwitterIntegrationIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/integrations/twitter/{integrationId}][%d] getConversationsMessagingIntegrationsTwitterIntegrationIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessagingIntegrationsTwitterIntegrationIDUnauthorized creates a GetConversationsMessagingIntegrationsTwitterIntegrationIDUnauthorized with default headers values
func NewGetConversationsMessagingIntegrationsTwitterIntegrationIDUnauthorized() *GetConversationsMessagingIntegrationsTwitterIntegrationIDUnauthorized {
	return &GetConversationsMessagingIntegrationsTwitterIntegrationIDUnauthorized{}
}

/*
GetConversationsMessagingIntegrationsTwitterIntegrationIDUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetConversationsMessagingIntegrationsTwitterIntegrationIDUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations messaging integrations twitter integration Id unauthorized response has a 2xx status code
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations messaging integrations twitter integration Id unauthorized response has a 3xx status code
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations messaging integrations twitter integration Id unauthorized response has a 4xx status code
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations messaging integrations twitter integration Id unauthorized response has a 5xx status code
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations messaging integrations twitter integration Id unauthorized response a status code equal to that given
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/integrations/twitter/{integrationId}][%d] getConversationsMessagingIntegrationsTwitterIntegrationIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/integrations/twitter/{integrationId}][%d] getConversationsMessagingIntegrationsTwitterIntegrationIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessagingIntegrationsTwitterIntegrationIDForbidden creates a GetConversationsMessagingIntegrationsTwitterIntegrationIDForbidden with default headers values
func NewGetConversationsMessagingIntegrationsTwitterIntegrationIDForbidden() *GetConversationsMessagingIntegrationsTwitterIntegrationIDForbidden {
	return &GetConversationsMessagingIntegrationsTwitterIntegrationIDForbidden{}
}

/*
GetConversationsMessagingIntegrationsTwitterIntegrationIDForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetConversationsMessagingIntegrationsTwitterIntegrationIDForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations messaging integrations twitter integration Id forbidden response has a 2xx status code
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations messaging integrations twitter integration Id forbidden response has a 3xx status code
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations messaging integrations twitter integration Id forbidden response has a 4xx status code
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations messaging integrations twitter integration Id forbidden response has a 5xx status code
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations messaging integrations twitter integration Id forbidden response a status code equal to that given
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/integrations/twitter/{integrationId}][%d] getConversationsMessagingIntegrationsTwitterIntegrationIdForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/integrations/twitter/{integrationId}][%d] getConversationsMessagingIntegrationsTwitterIntegrationIdForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessagingIntegrationsTwitterIntegrationIDNotFound creates a GetConversationsMessagingIntegrationsTwitterIntegrationIDNotFound with default headers values
func NewGetConversationsMessagingIntegrationsTwitterIntegrationIDNotFound() *GetConversationsMessagingIntegrationsTwitterIntegrationIDNotFound {
	return &GetConversationsMessagingIntegrationsTwitterIntegrationIDNotFound{}
}

/*
GetConversationsMessagingIntegrationsTwitterIntegrationIDNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetConversationsMessagingIntegrationsTwitterIntegrationIDNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations messaging integrations twitter integration Id not found response has a 2xx status code
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations messaging integrations twitter integration Id not found response has a 3xx status code
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations messaging integrations twitter integration Id not found response has a 4xx status code
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations messaging integrations twitter integration Id not found response has a 5xx status code
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations messaging integrations twitter integration Id not found response a status code equal to that given
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/integrations/twitter/{integrationId}][%d] getConversationsMessagingIntegrationsTwitterIntegrationIdNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/integrations/twitter/{integrationId}][%d] getConversationsMessagingIntegrationsTwitterIntegrationIdNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessagingIntegrationsTwitterIntegrationIDRequestTimeout creates a GetConversationsMessagingIntegrationsTwitterIntegrationIDRequestTimeout with default headers values
func NewGetConversationsMessagingIntegrationsTwitterIntegrationIDRequestTimeout() *GetConversationsMessagingIntegrationsTwitterIntegrationIDRequestTimeout {
	return &GetConversationsMessagingIntegrationsTwitterIntegrationIDRequestTimeout{}
}

/*
GetConversationsMessagingIntegrationsTwitterIntegrationIDRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetConversationsMessagingIntegrationsTwitterIntegrationIDRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations messaging integrations twitter integration Id request timeout response has a 2xx status code
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations messaging integrations twitter integration Id request timeout response has a 3xx status code
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations messaging integrations twitter integration Id request timeout response has a 4xx status code
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations messaging integrations twitter integration Id request timeout response has a 5xx status code
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations messaging integrations twitter integration Id request timeout response a status code equal to that given
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/integrations/twitter/{integrationId}][%d] getConversationsMessagingIntegrationsTwitterIntegrationIdRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/integrations/twitter/{integrationId}][%d] getConversationsMessagingIntegrationsTwitterIntegrationIdRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessagingIntegrationsTwitterIntegrationIDRequestEntityTooLarge creates a GetConversationsMessagingIntegrationsTwitterIntegrationIDRequestEntityTooLarge with default headers values
func NewGetConversationsMessagingIntegrationsTwitterIntegrationIDRequestEntityTooLarge() *GetConversationsMessagingIntegrationsTwitterIntegrationIDRequestEntityTooLarge {
	return &GetConversationsMessagingIntegrationsTwitterIntegrationIDRequestEntityTooLarge{}
}

/*
GetConversationsMessagingIntegrationsTwitterIntegrationIDRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetConversationsMessagingIntegrationsTwitterIntegrationIDRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations messaging integrations twitter integration Id request entity too large response has a 2xx status code
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations messaging integrations twitter integration Id request entity too large response has a 3xx status code
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations messaging integrations twitter integration Id request entity too large response has a 4xx status code
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations messaging integrations twitter integration Id request entity too large response has a 5xx status code
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations messaging integrations twitter integration Id request entity too large response a status code equal to that given
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/integrations/twitter/{integrationId}][%d] getConversationsMessagingIntegrationsTwitterIntegrationIdRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/integrations/twitter/{integrationId}][%d] getConversationsMessagingIntegrationsTwitterIntegrationIdRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessagingIntegrationsTwitterIntegrationIDUnsupportedMediaType creates a GetConversationsMessagingIntegrationsTwitterIntegrationIDUnsupportedMediaType with default headers values
func NewGetConversationsMessagingIntegrationsTwitterIntegrationIDUnsupportedMediaType() *GetConversationsMessagingIntegrationsTwitterIntegrationIDUnsupportedMediaType {
	return &GetConversationsMessagingIntegrationsTwitterIntegrationIDUnsupportedMediaType{}
}

/*
GetConversationsMessagingIntegrationsTwitterIntegrationIDUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetConversationsMessagingIntegrationsTwitterIntegrationIDUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations messaging integrations twitter integration Id unsupported media type response has a 2xx status code
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations messaging integrations twitter integration Id unsupported media type response has a 3xx status code
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations messaging integrations twitter integration Id unsupported media type response has a 4xx status code
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations messaging integrations twitter integration Id unsupported media type response has a 5xx status code
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations messaging integrations twitter integration Id unsupported media type response a status code equal to that given
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/integrations/twitter/{integrationId}][%d] getConversationsMessagingIntegrationsTwitterIntegrationIdUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/integrations/twitter/{integrationId}][%d] getConversationsMessagingIntegrationsTwitterIntegrationIdUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessagingIntegrationsTwitterIntegrationIDTooManyRequests creates a GetConversationsMessagingIntegrationsTwitterIntegrationIDTooManyRequests with default headers values
func NewGetConversationsMessagingIntegrationsTwitterIntegrationIDTooManyRequests() *GetConversationsMessagingIntegrationsTwitterIntegrationIDTooManyRequests {
	return &GetConversationsMessagingIntegrationsTwitterIntegrationIDTooManyRequests{}
}

/*
GetConversationsMessagingIntegrationsTwitterIntegrationIDTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetConversationsMessagingIntegrationsTwitterIntegrationIDTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations messaging integrations twitter integration Id too many requests response has a 2xx status code
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations messaging integrations twitter integration Id too many requests response has a 3xx status code
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations messaging integrations twitter integration Id too many requests response has a 4xx status code
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations messaging integrations twitter integration Id too many requests response has a 5xx status code
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations messaging integrations twitter integration Id too many requests response a status code equal to that given
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/integrations/twitter/{integrationId}][%d] getConversationsMessagingIntegrationsTwitterIntegrationIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/integrations/twitter/{integrationId}][%d] getConversationsMessagingIntegrationsTwitterIntegrationIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessagingIntegrationsTwitterIntegrationIDInternalServerError creates a GetConversationsMessagingIntegrationsTwitterIntegrationIDInternalServerError with default headers values
func NewGetConversationsMessagingIntegrationsTwitterIntegrationIDInternalServerError() *GetConversationsMessagingIntegrationsTwitterIntegrationIDInternalServerError {
	return &GetConversationsMessagingIntegrationsTwitterIntegrationIDInternalServerError{}
}

/*
GetConversationsMessagingIntegrationsTwitterIntegrationIDInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetConversationsMessagingIntegrationsTwitterIntegrationIDInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations messaging integrations twitter integration Id internal server error response has a 2xx status code
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations messaging integrations twitter integration Id internal server error response has a 3xx status code
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations messaging integrations twitter integration Id internal server error response has a 4xx status code
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations messaging integrations twitter integration Id internal server error response has a 5xx status code
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations messaging integrations twitter integration Id internal server error response a status code equal to that given
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/integrations/twitter/{integrationId}][%d] getConversationsMessagingIntegrationsTwitterIntegrationIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/integrations/twitter/{integrationId}][%d] getConversationsMessagingIntegrationsTwitterIntegrationIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessagingIntegrationsTwitterIntegrationIDServiceUnavailable creates a GetConversationsMessagingIntegrationsTwitterIntegrationIDServiceUnavailable with default headers values
func NewGetConversationsMessagingIntegrationsTwitterIntegrationIDServiceUnavailable() *GetConversationsMessagingIntegrationsTwitterIntegrationIDServiceUnavailable {
	return &GetConversationsMessagingIntegrationsTwitterIntegrationIDServiceUnavailable{}
}

/*
GetConversationsMessagingIntegrationsTwitterIntegrationIDServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetConversationsMessagingIntegrationsTwitterIntegrationIDServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations messaging integrations twitter integration Id service unavailable response has a 2xx status code
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations messaging integrations twitter integration Id service unavailable response has a 3xx status code
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations messaging integrations twitter integration Id service unavailable response has a 4xx status code
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations messaging integrations twitter integration Id service unavailable response has a 5xx status code
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations messaging integrations twitter integration Id service unavailable response a status code equal to that given
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/integrations/twitter/{integrationId}][%d] getConversationsMessagingIntegrationsTwitterIntegrationIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/integrations/twitter/{integrationId}][%d] getConversationsMessagingIntegrationsTwitterIntegrationIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessagingIntegrationsTwitterIntegrationIDGatewayTimeout creates a GetConversationsMessagingIntegrationsTwitterIntegrationIDGatewayTimeout with default headers values
func NewGetConversationsMessagingIntegrationsTwitterIntegrationIDGatewayTimeout() *GetConversationsMessagingIntegrationsTwitterIntegrationIDGatewayTimeout {
	return &GetConversationsMessagingIntegrationsTwitterIntegrationIDGatewayTimeout{}
}

/*
GetConversationsMessagingIntegrationsTwitterIntegrationIDGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetConversationsMessagingIntegrationsTwitterIntegrationIDGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations messaging integrations twitter integration Id gateway timeout response has a 2xx status code
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations messaging integrations twitter integration Id gateway timeout response has a 3xx status code
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations messaging integrations twitter integration Id gateway timeout response has a 4xx status code
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations messaging integrations twitter integration Id gateway timeout response has a 5xx status code
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations messaging integrations twitter integration Id gateway timeout response a status code equal to that given
func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/integrations/twitter/{integrationId}][%d] getConversationsMessagingIntegrationsTwitterIntegrationIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messaging/integrations/twitter/{integrationId}][%d] getConversationsMessagingIntegrationsTwitterIntegrationIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessagingIntegrationsTwitterIntegrationIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
