// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetConversationsEmailParticipantWrapupcodesReader is a Reader for the GetConversationsEmailParticipantWrapupcodes structure.
type GetConversationsEmailParticipantWrapupcodesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConversationsEmailParticipantWrapupcodesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConversationsEmailParticipantWrapupcodesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetConversationsEmailParticipantWrapupcodesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetConversationsEmailParticipantWrapupcodesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetConversationsEmailParticipantWrapupcodesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetConversationsEmailParticipantWrapupcodesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetConversationsEmailParticipantWrapupcodesRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetConversationsEmailParticipantWrapupcodesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetConversationsEmailParticipantWrapupcodesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetConversationsEmailParticipantWrapupcodesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetConversationsEmailParticipantWrapupcodesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetConversationsEmailParticipantWrapupcodesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetConversationsEmailParticipantWrapupcodesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetConversationsEmailParticipantWrapupcodesOK creates a GetConversationsEmailParticipantWrapupcodesOK with default headers values
func NewGetConversationsEmailParticipantWrapupcodesOK() *GetConversationsEmailParticipantWrapupcodesOK {
	return &GetConversationsEmailParticipantWrapupcodesOK{}
}

/*GetConversationsEmailParticipantWrapupcodesOK handles this case with default header values.

successful operation
*/
type GetConversationsEmailParticipantWrapupcodesOK struct {
	Payload []*models.WrapupCode
}

func (o *GetConversationsEmailParticipantWrapupcodesOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsEmailParticipantWrapupcodesOK  %+v", 200, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupcodesOK) GetPayload() []*models.WrapupCode {
	return o.Payload
}

func (o *GetConversationsEmailParticipantWrapupcodesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantWrapupcodesBadRequest creates a GetConversationsEmailParticipantWrapupcodesBadRequest with default headers values
func NewGetConversationsEmailParticipantWrapupcodesBadRequest() *GetConversationsEmailParticipantWrapupcodesBadRequest {
	return &GetConversationsEmailParticipantWrapupcodesBadRequest{}
}

/*GetConversationsEmailParticipantWrapupcodesBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetConversationsEmailParticipantWrapupcodesBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsEmailParticipantWrapupcodesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsEmailParticipantWrapupcodesBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupcodesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantWrapupcodesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantWrapupcodesUnauthorized creates a GetConversationsEmailParticipantWrapupcodesUnauthorized with default headers values
func NewGetConversationsEmailParticipantWrapupcodesUnauthorized() *GetConversationsEmailParticipantWrapupcodesUnauthorized {
	return &GetConversationsEmailParticipantWrapupcodesUnauthorized{}
}

/*GetConversationsEmailParticipantWrapupcodesUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetConversationsEmailParticipantWrapupcodesUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsEmailParticipantWrapupcodesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsEmailParticipantWrapupcodesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupcodesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantWrapupcodesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantWrapupcodesForbidden creates a GetConversationsEmailParticipantWrapupcodesForbidden with default headers values
func NewGetConversationsEmailParticipantWrapupcodesForbidden() *GetConversationsEmailParticipantWrapupcodesForbidden {
	return &GetConversationsEmailParticipantWrapupcodesForbidden{}
}

/*GetConversationsEmailParticipantWrapupcodesForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetConversationsEmailParticipantWrapupcodesForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsEmailParticipantWrapupcodesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsEmailParticipantWrapupcodesForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupcodesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantWrapupcodesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantWrapupcodesNotFound creates a GetConversationsEmailParticipantWrapupcodesNotFound with default headers values
func NewGetConversationsEmailParticipantWrapupcodesNotFound() *GetConversationsEmailParticipantWrapupcodesNotFound {
	return &GetConversationsEmailParticipantWrapupcodesNotFound{}
}

/*GetConversationsEmailParticipantWrapupcodesNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetConversationsEmailParticipantWrapupcodesNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsEmailParticipantWrapupcodesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsEmailParticipantWrapupcodesNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupcodesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantWrapupcodesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantWrapupcodesRequestTimeout creates a GetConversationsEmailParticipantWrapupcodesRequestTimeout with default headers values
func NewGetConversationsEmailParticipantWrapupcodesRequestTimeout() *GetConversationsEmailParticipantWrapupcodesRequestTimeout {
	return &GetConversationsEmailParticipantWrapupcodesRequestTimeout{}
}

/*GetConversationsEmailParticipantWrapupcodesRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetConversationsEmailParticipantWrapupcodesRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsEmailParticipantWrapupcodesRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsEmailParticipantWrapupcodesRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupcodesRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantWrapupcodesRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantWrapupcodesRequestEntityTooLarge creates a GetConversationsEmailParticipantWrapupcodesRequestEntityTooLarge with default headers values
func NewGetConversationsEmailParticipantWrapupcodesRequestEntityTooLarge() *GetConversationsEmailParticipantWrapupcodesRequestEntityTooLarge {
	return &GetConversationsEmailParticipantWrapupcodesRequestEntityTooLarge{}
}

/*GetConversationsEmailParticipantWrapupcodesRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetConversationsEmailParticipantWrapupcodesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsEmailParticipantWrapupcodesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsEmailParticipantWrapupcodesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupcodesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantWrapupcodesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantWrapupcodesUnsupportedMediaType creates a GetConversationsEmailParticipantWrapupcodesUnsupportedMediaType with default headers values
func NewGetConversationsEmailParticipantWrapupcodesUnsupportedMediaType() *GetConversationsEmailParticipantWrapupcodesUnsupportedMediaType {
	return &GetConversationsEmailParticipantWrapupcodesUnsupportedMediaType{}
}

/*GetConversationsEmailParticipantWrapupcodesUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetConversationsEmailParticipantWrapupcodesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsEmailParticipantWrapupcodesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsEmailParticipantWrapupcodesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupcodesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantWrapupcodesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantWrapupcodesTooManyRequests creates a GetConversationsEmailParticipantWrapupcodesTooManyRequests with default headers values
func NewGetConversationsEmailParticipantWrapupcodesTooManyRequests() *GetConversationsEmailParticipantWrapupcodesTooManyRequests {
	return &GetConversationsEmailParticipantWrapupcodesTooManyRequests{}
}

/*GetConversationsEmailParticipantWrapupcodesTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetConversationsEmailParticipantWrapupcodesTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsEmailParticipantWrapupcodesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsEmailParticipantWrapupcodesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupcodesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantWrapupcodesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantWrapupcodesInternalServerError creates a GetConversationsEmailParticipantWrapupcodesInternalServerError with default headers values
func NewGetConversationsEmailParticipantWrapupcodesInternalServerError() *GetConversationsEmailParticipantWrapupcodesInternalServerError {
	return &GetConversationsEmailParticipantWrapupcodesInternalServerError{}
}

/*GetConversationsEmailParticipantWrapupcodesInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetConversationsEmailParticipantWrapupcodesInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsEmailParticipantWrapupcodesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsEmailParticipantWrapupcodesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupcodesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantWrapupcodesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantWrapupcodesServiceUnavailable creates a GetConversationsEmailParticipantWrapupcodesServiceUnavailable with default headers values
func NewGetConversationsEmailParticipantWrapupcodesServiceUnavailable() *GetConversationsEmailParticipantWrapupcodesServiceUnavailable {
	return &GetConversationsEmailParticipantWrapupcodesServiceUnavailable{}
}

/*GetConversationsEmailParticipantWrapupcodesServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetConversationsEmailParticipantWrapupcodesServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsEmailParticipantWrapupcodesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsEmailParticipantWrapupcodesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupcodesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantWrapupcodesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantWrapupcodesGatewayTimeout creates a GetConversationsEmailParticipantWrapupcodesGatewayTimeout with default headers values
func NewGetConversationsEmailParticipantWrapupcodesGatewayTimeout() *GetConversationsEmailParticipantWrapupcodesGatewayTimeout {
	return &GetConversationsEmailParticipantWrapupcodesGatewayTimeout{}
}

/*GetConversationsEmailParticipantWrapupcodesGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetConversationsEmailParticipantWrapupcodesGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsEmailParticipantWrapupcodesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsEmailParticipantWrapupcodesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupcodesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantWrapupcodesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
