// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetConversationsEmailParticipantWrapupcodesReader is a Reader for the GetConversationsEmailParticipantWrapupcodes structure.
type GetConversationsEmailParticipantWrapupcodesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConversationsEmailParticipantWrapupcodesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConversationsEmailParticipantWrapupcodesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetConversationsEmailParticipantWrapupcodesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetConversationsEmailParticipantWrapupcodesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetConversationsEmailParticipantWrapupcodesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetConversationsEmailParticipantWrapupcodesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetConversationsEmailParticipantWrapupcodesRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetConversationsEmailParticipantWrapupcodesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetConversationsEmailParticipantWrapupcodesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetConversationsEmailParticipantWrapupcodesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetConversationsEmailParticipantWrapupcodesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetConversationsEmailParticipantWrapupcodesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetConversationsEmailParticipantWrapupcodesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetConversationsEmailParticipantWrapupcodesOK creates a GetConversationsEmailParticipantWrapupcodesOK with default headers values
func NewGetConversationsEmailParticipantWrapupcodesOK() *GetConversationsEmailParticipantWrapupcodesOK {
	return &GetConversationsEmailParticipantWrapupcodesOK{}
}

/*
GetConversationsEmailParticipantWrapupcodesOK describes a response with status code 200, with default header values.

successful operation
*/
type GetConversationsEmailParticipantWrapupcodesOK struct {
	Payload []*models.WrapupCode
}

// IsSuccess returns true when this get conversations email participant wrapupcodes o k response has a 2xx status code
func (o *GetConversationsEmailParticipantWrapupcodesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get conversations email participant wrapupcodes o k response has a 3xx status code
func (o *GetConversationsEmailParticipantWrapupcodesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email participant wrapupcodes o k response has a 4xx status code
func (o *GetConversationsEmailParticipantWrapupcodesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations email participant wrapupcodes o k response has a 5xx status code
func (o *GetConversationsEmailParticipantWrapupcodesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations email participant wrapupcodes o k response a status code equal to that given
func (o *GetConversationsEmailParticipantWrapupcodesOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetConversationsEmailParticipantWrapupcodesOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsEmailParticipantWrapupcodesOK  %+v", 200, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupcodesOK) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsEmailParticipantWrapupcodesOK  %+v", 200, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupcodesOK) GetPayload() []*models.WrapupCode {
	return o.Payload
}

func (o *GetConversationsEmailParticipantWrapupcodesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantWrapupcodesBadRequest creates a GetConversationsEmailParticipantWrapupcodesBadRequest with default headers values
func NewGetConversationsEmailParticipantWrapupcodesBadRequest() *GetConversationsEmailParticipantWrapupcodesBadRequest {
	return &GetConversationsEmailParticipantWrapupcodesBadRequest{}
}

/*
GetConversationsEmailParticipantWrapupcodesBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetConversationsEmailParticipantWrapupcodesBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email participant wrapupcodes bad request response has a 2xx status code
func (o *GetConversationsEmailParticipantWrapupcodesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email participant wrapupcodes bad request response has a 3xx status code
func (o *GetConversationsEmailParticipantWrapupcodesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email participant wrapupcodes bad request response has a 4xx status code
func (o *GetConversationsEmailParticipantWrapupcodesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations email participant wrapupcodes bad request response has a 5xx status code
func (o *GetConversationsEmailParticipantWrapupcodesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations email participant wrapupcodes bad request response a status code equal to that given
func (o *GetConversationsEmailParticipantWrapupcodesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetConversationsEmailParticipantWrapupcodesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsEmailParticipantWrapupcodesBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupcodesBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsEmailParticipantWrapupcodesBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupcodesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantWrapupcodesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantWrapupcodesUnauthorized creates a GetConversationsEmailParticipantWrapupcodesUnauthorized with default headers values
func NewGetConversationsEmailParticipantWrapupcodesUnauthorized() *GetConversationsEmailParticipantWrapupcodesUnauthorized {
	return &GetConversationsEmailParticipantWrapupcodesUnauthorized{}
}

/*
GetConversationsEmailParticipantWrapupcodesUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetConversationsEmailParticipantWrapupcodesUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email participant wrapupcodes unauthorized response has a 2xx status code
func (o *GetConversationsEmailParticipantWrapupcodesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email participant wrapupcodes unauthorized response has a 3xx status code
func (o *GetConversationsEmailParticipantWrapupcodesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email participant wrapupcodes unauthorized response has a 4xx status code
func (o *GetConversationsEmailParticipantWrapupcodesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations email participant wrapupcodes unauthorized response has a 5xx status code
func (o *GetConversationsEmailParticipantWrapupcodesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations email participant wrapupcodes unauthorized response a status code equal to that given
func (o *GetConversationsEmailParticipantWrapupcodesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetConversationsEmailParticipantWrapupcodesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsEmailParticipantWrapupcodesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupcodesUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsEmailParticipantWrapupcodesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupcodesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantWrapupcodesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantWrapupcodesForbidden creates a GetConversationsEmailParticipantWrapupcodesForbidden with default headers values
func NewGetConversationsEmailParticipantWrapupcodesForbidden() *GetConversationsEmailParticipantWrapupcodesForbidden {
	return &GetConversationsEmailParticipantWrapupcodesForbidden{}
}

/*
GetConversationsEmailParticipantWrapupcodesForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetConversationsEmailParticipantWrapupcodesForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email participant wrapupcodes forbidden response has a 2xx status code
func (o *GetConversationsEmailParticipantWrapupcodesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email participant wrapupcodes forbidden response has a 3xx status code
func (o *GetConversationsEmailParticipantWrapupcodesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email participant wrapupcodes forbidden response has a 4xx status code
func (o *GetConversationsEmailParticipantWrapupcodesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations email participant wrapupcodes forbidden response has a 5xx status code
func (o *GetConversationsEmailParticipantWrapupcodesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations email participant wrapupcodes forbidden response a status code equal to that given
func (o *GetConversationsEmailParticipantWrapupcodesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetConversationsEmailParticipantWrapupcodesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsEmailParticipantWrapupcodesForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupcodesForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsEmailParticipantWrapupcodesForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupcodesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantWrapupcodesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantWrapupcodesNotFound creates a GetConversationsEmailParticipantWrapupcodesNotFound with default headers values
func NewGetConversationsEmailParticipantWrapupcodesNotFound() *GetConversationsEmailParticipantWrapupcodesNotFound {
	return &GetConversationsEmailParticipantWrapupcodesNotFound{}
}

/*
GetConversationsEmailParticipantWrapupcodesNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetConversationsEmailParticipantWrapupcodesNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email participant wrapupcodes not found response has a 2xx status code
func (o *GetConversationsEmailParticipantWrapupcodesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email participant wrapupcodes not found response has a 3xx status code
func (o *GetConversationsEmailParticipantWrapupcodesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email participant wrapupcodes not found response has a 4xx status code
func (o *GetConversationsEmailParticipantWrapupcodesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations email participant wrapupcodes not found response has a 5xx status code
func (o *GetConversationsEmailParticipantWrapupcodesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations email participant wrapupcodes not found response a status code equal to that given
func (o *GetConversationsEmailParticipantWrapupcodesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetConversationsEmailParticipantWrapupcodesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsEmailParticipantWrapupcodesNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupcodesNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsEmailParticipantWrapupcodesNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupcodesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantWrapupcodesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantWrapupcodesRequestTimeout creates a GetConversationsEmailParticipantWrapupcodesRequestTimeout with default headers values
func NewGetConversationsEmailParticipantWrapupcodesRequestTimeout() *GetConversationsEmailParticipantWrapupcodesRequestTimeout {
	return &GetConversationsEmailParticipantWrapupcodesRequestTimeout{}
}

/*
GetConversationsEmailParticipantWrapupcodesRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetConversationsEmailParticipantWrapupcodesRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email participant wrapupcodes request timeout response has a 2xx status code
func (o *GetConversationsEmailParticipantWrapupcodesRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email participant wrapupcodes request timeout response has a 3xx status code
func (o *GetConversationsEmailParticipantWrapupcodesRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email participant wrapupcodes request timeout response has a 4xx status code
func (o *GetConversationsEmailParticipantWrapupcodesRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations email participant wrapupcodes request timeout response has a 5xx status code
func (o *GetConversationsEmailParticipantWrapupcodesRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations email participant wrapupcodes request timeout response a status code equal to that given
func (o *GetConversationsEmailParticipantWrapupcodesRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetConversationsEmailParticipantWrapupcodesRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsEmailParticipantWrapupcodesRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupcodesRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsEmailParticipantWrapupcodesRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupcodesRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantWrapupcodesRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantWrapupcodesRequestEntityTooLarge creates a GetConversationsEmailParticipantWrapupcodesRequestEntityTooLarge with default headers values
func NewGetConversationsEmailParticipantWrapupcodesRequestEntityTooLarge() *GetConversationsEmailParticipantWrapupcodesRequestEntityTooLarge {
	return &GetConversationsEmailParticipantWrapupcodesRequestEntityTooLarge{}
}

/*
GetConversationsEmailParticipantWrapupcodesRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetConversationsEmailParticipantWrapupcodesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email participant wrapupcodes request entity too large response has a 2xx status code
func (o *GetConversationsEmailParticipantWrapupcodesRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email participant wrapupcodes request entity too large response has a 3xx status code
func (o *GetConversationsEmailParticipantWrapupcodesRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email participant wrapupcodes request entity too large response has a 4xx status code
func (o *GetConversationsEmailParticipantWrapupcodesRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations email participant wrapupcodes request entity too large response has a 5xx status code
func (o *GetConversationsEmailParticipantWrapupcodesRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations email participant wrapupcodes request entity too large response a status code equal to that given
func (o *GetConversationsEmailParticipantWrapupcodesRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetConversationsEmailParticipantWrapupcodesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsEmailParticipantWrapupcodesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupcodesRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsEmailParticipantWrapupcodesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupcodesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantWrapupcodesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantWrapupcodesUnsupportedMediaType creates a GetConversationsEmailParticipantWrapupcodesUnsupportedMediaType with default headers values
func NewGetConversationsEmailParticipantWrapupcodesUnsupportedMediaType() *GetConversationsEmailParticipantWrapupcodesUnsupportedMediaType {
	return &GetConversationsEmailParticipantWrapupcodesUnsupportedMediaType{}
}

/*
GetConversationsEmailParticipantWrapupcodesUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetConversationsEmailParticipantWrapupcodesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email participant wrapupcodes unsupported media type response has a 2xx status code
func (o *GetConversationsEmailParticipantWrapupcodesUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email participant wrapupcodes unsupported media type response has a 3xx status code
func (o *GetConversationsEmailParticipantWrapupcodesUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email participant wrapupcodes unsupported media type response has a 4xx status code
func (o *GetConversationsEmailParticipantWrapupcodesUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations email participant wrapupcodes unsupported media type response has a 5xx status code
func (o *GetConversationsEmailParticipantWrapupcodesUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations email participant wrapupcodes unsupported media type response a status code equal to that given
func (o *GetConversationsEmailParticipantWrapupcodesUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetConversationsEmailParticipantWrapupcodesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsEmailParticipantWrapupcodesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupcodesUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsEmailParticipantWrapupcodesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupcodesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantWrapupcodesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantWrapupcodesTooManyRequests creates a GetConversationsEmailParticipantWrapupcodesTooManyRequests with default headers values
func NewGetConversationsEmailParticipantWrapupcodesTooManyRequests() *GetConversationsEmailParticipantWrapupcodesTooManyRequests {
	return &GetConversationsEmailParticipantWrapupcodesTooManyRequests{}
}

/*
GetConversationsEmailParticipantWrapupcodesTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetConversationsEmailParticipantWrapupcodesTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email participant wrapupcodes too many requests response has a 2xx status code
func (o *GetConversationsEmailParticipantWrapupcodesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email participant wrapupcodes too many requests response has a 3xx status code
func (o *GetConversationsEmailParticipantWrapupcodesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email participant wrapupcodes too many requests response has a 4xx status code
func (o *GetConversationsEmailParticipantWrapupcodesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations email participant wrapupcodes too many requests response has a 5xx status code
func (o *GetConversationsEmailParticipantWrapupcodesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations email participant wrapupcodes too many requests response a status code equal to that given
func (o *GetConversationsEmailParticipantWrapupcodesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetConversationsEmailParticipantWrapupcodesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsEmailParticipantWrapupcodesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupcodesTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsEmailParticipantWrapupcodesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupcodesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantWrapupcodesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantWrapupcodesInternalServerError creates a GetConversationsEmailParticipantWrapupcodesInternalServerError with default headers values
func NewGetConversationsEmailParticipantWrapupcodesInternalServerError() *GetConversationsEmailParticipantWrapupcodesInternalServerError {
	return &GetConversationsEmailParticipantWrapupcodesInternalServerError{}
}

/*
GetConversationsEmailParticipantWrapupcodesInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetConversationsEmailParticipantWrapupcodesInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email participant wrapupcodes internal server error response has a 2xx status code
func (o *GetConversationsEmailParticipantWrapupcodesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email participant wrapupcodes internal server error response has a 3xx status code
func (o *GetConversationsEmailParticipantWrapupcodesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email participant wrapupcodes internal server error response has a 4xx status code
func (o *GetConversationsEmailParticipantWrapupcodesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations email participant wrapupcodes internal server error response has a 5xx status code
func (o *GetConversationsEmailParticipantWrapupcodesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations email participant wrapupcodes internal server error response a status code equal to that given
func (o *GetConversationsEmailParticipantWrapupcodesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetConversationsEmailParticipantWrapupcodesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsEmailParticipantWrapupcodesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupcodesInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsEmailParticipantWrapupcodesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupcodesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantWrapupcodesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantWrapupcodesServiceUnavailable creates a GetConversationsEmailParticipantWrapupcodesServiceUnavailable with default headers values
func NewGetConversationsEmailParticipantWrapupcodesServiceUnavailable() *GetConversationsEmailParticipantWrapupcodesServiceUnavailable {
	return &GetConversationsEmailParticipantWrapupcodesServiceUnavailable{}
}

/*
GetConversationsEmailParticipantWrapupcodesServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetConversationsEmailParticipantWrapupcodesServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email participant wrapupcodes service unavailable response has a 2xx status code
func (o *GetConversationsEmailParticipantWrapupcodesServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email participant wrapupcodes service unavailable response has a 3xx status code
func (o *GetConversationsEmailParticipantWrapupcodesServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email participant wrapupcodes service unavailable response has a 4xx status code
func (o *GetConversationsEmailParticipantWrapupcodesServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations email participant wrapupcodes service unavailable response has a 5xx status code
func (o *GetConversationsEmailParticipantWrapupcodesServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations email participant wrapupcodes service unavailable response a status code equal to that given
func (o *GetConversationsEmailParticipantWrapupcodesServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetConversationsEmailParticipantWrapupcodesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsEmailParticipantWrapupcodesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupcodesServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsEmailParticipantWrapupcodesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupcodesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantWrapupcodesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantWrapupcodesGatewayTimeout creates a GetConversationsEmailParticipantWrapupcodesGatewayTimeout with default headers values
func NewGetConversationsEmailParticipantWrapupcodesGatewayTimeout() *GetConversationsEmailParticipantWrapupcodesGatewayTimeout {
	return &GetConversationsEmailParticipantWrapupcodesGatewayTimeout{}
}

/*
GetConversationsEmailParticipantWrapupcodesGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetConversationsEmailParticipantWrapupcodesGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email participant wrapupcodes gateway timeout response has a 2xx status code
func (o *GetConversationsEmailParticipantWrapupcodesGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email participant wrapupcodes gateway timeout response has a 3xx status code
func (o *GetConversationsEmailParticipantWrapupcodesGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email participant wrapupcodes gateway timeout response has a 4xx status code
func (o *GetConversationsEmailParticipantWrapupcodesGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations email participant wrapupcodes gateway timeout response has a 5xx status code
func (o *GetConversationsEmailParticipantWrapupcodesGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations email participant wrapupcodes gateway timeout response a status code equal to that given
func (o *GetConversationsEmailParticipantWrapupcodesGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetConversationsEmailParticipantWrapupcodesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsEmailParticipantWrapupcodesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupcodesGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsEmailParticipantWrapupcodesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsEmailParticipantWrapupcodesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantWrapupcodesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
