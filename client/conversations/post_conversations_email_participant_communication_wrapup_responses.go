// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostConversationsEmailParticipantCommunicationWrapupReader is a Reader for the PostConversationsEmailParticipantCommunicationWrapup structure.
type PostConversationsEmailParticipantCommunicationWrapupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostConversationsEmailParticipantCommunicationWrapupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewPostConversationsEmailParticipantCommunicationWrapupAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostConversationsEmailParticipantCommunicationWrapupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostConversationsEmailParticipantCommunicationWrapupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostConversationsEmailParticipantCommunicationWrapupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostConversationsEmailParticipantCommunicationWrapupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostConversationsEmailParticipantCommunicationWrapupRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostConversationsEmailParticipantCommunicationWrapupRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostConversationsEmailParticipantCommunicationWrapupUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostConversationsEmailParticipantCommunicationWrapupTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostConversationsEmailParticipantCommunicationWrapupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostConversationsEmailParticipantCommunicationWrapupServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostConversationsEmailParticipantCommunicationWrapupGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostConversationsEmailParticipantCommunicationWrapupAccepted creates a PostConversationsEmailParticipantCommunicationWrapupAccepted with default headers values
func NewPostConversationsEmailParticipantCommunicationWrapupAccepted() *PostConversationsEmailParticipantCommunicationWrapupAccepted {
	return &PostConversationsEmailParticipantCommunicationWrapupAccepted{}
}

/*
PostConversationsEmailParticipantCommunicationWrapupAccepted describes a response with status code 202, with default header values.

Accepted
*/
type PostConversationsEmailParticipantCommunicationWrapupAccepted struct {
}

// IsSuccess returns true when this post conversations email participant communication wrapup accepted response has a 2xx status code
func (o *PostConversationsEmailParticipantCommunicationWrapupAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post conversations email participant communication wrapup accepted response has a 3xx status code
func (o *PostConversationsEmailParticipantCommunicationWrapupAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations email participant communication wrapup accepted response has a 4xx status code
func (o *PostConversationsEmailParticipantCommunicationWrapupAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations email participant communication wrapup accepted response has a 5xx status code
func (o *PostConversationsEmailParticipantCommunicationWrapupAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations email participant communication wrapup accepted response a status code equal to that given
func (o *PostConversationsEmailParticipantCommunicationWrapupAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *PostConversationsEmailParticipantCommunicationWrapupAccepted) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsEmailParticipantCommunicationWrapupAccepted ", 202)
}

func (o *PostConversationsEmailParticipantCommunicationWrapupAccepted) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsEmailParticipantCommunicationWrapupAccepted ", 202)
}

func (o *PostConversationsEmailParticipantCommunicationWrapupAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostConversationsEmailParticipantCommunicationWrapupBadRequest creates a PostConversationsEmailParticipantCommunicationWrapupBadRequest with default headers values
func NewPostConversationsEmailParticipantCommunicationWrapupBadRequest() *PostConversationsEmailParticipantCommunicationWrapupBadRequest {
	return &PostConversationsEmailParticipantCommunicationWrapupBadRequest{}
}

/*
PostConversationsEmailParticipantCommunicationWrapupBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostConversationsEmailParticipantCommunicationWrapupBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations email participant communication wrapup bad request response has a 2xx status code
func (o *PostConversationsEmailParticipantCommunicationWrapupBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations email participant communication wrapup bad request response has a 3xx status code
func (o *PostConversationsEmailParticipantCommunicationWrapupBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations email participant communication wrapup bad request response has a 4xx status code
func (o *PostConversationsEmailParticipantCommunicationWrapupBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations email participant communication wrapup bad request response has a 5xx status code
func (o *PostConversationsEmailParticipantCommunicationWrapupBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations email participant communication wrapup bad request response a status code equal to that given
func (o *PostConversationsEmailParticipantCommunicationWrapupBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostConversationsEmailParticipantCommunicationWrapupBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsEmailParticipantCommunicationWrapupBadRequest  %+v", 400, o.Payload)
}

func (o *PostConversationsEmailParticipantCommunicationWrapupBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsEmailParticipantCommunicationWrapupBadRequest  %+v", 400, o.Payload)
}

func (o *PostConversationsEmailParticipantCommunicationWrapupBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsEmailParticipantCommunicationWrapupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsEmailParticipantCommunicationWrapupUnauthorized creates a PostConversationsEmailParticipantCommunicationWrapupUnauthorized with default headers values
func NewPostConversationsEmailParticipantCommunicationWrapupUnauthorized() *PostConversationsEmailParticipantCommunicationWrapupUnauthorized {
	return &PostConversationsEmailParticipantCommunicationWrapupUnauthorized{}
}

/*
PostConversationsEmailParticipantCommunicationWrapupUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostConversationsEmailParticipantCommunicationWrapupUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations email participant communication wrapup unauthorized response has a 2xx status code
func (o *PostConversationsEmailParticipantCommunicationWrapupUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations email participant communication wrapup unauthorized response has a 3xx status code
func (o *PostConversationsEmailParticipantCommunicationWrapupUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations email participant communication wrapup unauthorized response has a 4xx status code
func (o *PostConversationsEmailParticipantCommunicationWrapupUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations email participant communication wrapup unauthorized response has a 5xx status code
func (o *PostConversationsEmailParticipantCommunicationWrapupUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations email participant communication wrapup unauthorized response a status code equal to that given
func (o *PostConversationsEmailParticipantCommunicationWrapupUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostConversationsEmailParticipantCommunicationWrapupUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsEmailParticipantCommunicationWrapupUnauthorized  %+v", 401, o.Payload)
}

func (o *PostConversationsEmailParticipantCommunicationWrapupUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsEmailParticipantCommunicationWrapupUnauthorized  %+v", 401, o.Payload)
}

func (o *PostConversationsEmailParticipantCommunicationWrapupUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsEmailParticipantCommunicationWrapupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsEmailParticipantCommunicationWrapupForbidden creates a PostConversationsEmailParticipantCommunicationWrapupForbidden with default headers values
func NewPostConversationsEmailParticipantCommunicationWrapupForbidden() *PostConversationsEmailParticipantCommunicationWrapupForbidden {
	return &PostConversationsEmailParticipantCommunicationWrapupForbidden{}
}

/*
PostConversationsEmailParticipantCommunicationWrapupForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostConversationsEmailParticipantCommunicationWrapupForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations email participant communication wrapup forbidden response has a 2xx status code
func (o *PostConversationsEmailParticipantCommunicationWrapupForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations email participant communication wrapup forbidden response has a 3xx status code
func (o *PostConversationsEmailParticipantCommunicationWrapupForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations email participant communication wrapup forbidden response has a 4xx status code
func (o *PostConversationsEmailParticipantCommunicationWrapupForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations email participant communication wrapup forbidden response has a 5xx status code
func (o *PostConversationsEmailParticipantCommunicationWrapupForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations email participant communication wrapup forbidden response a status code equal to that given
func (o *PostConversationsEmailParticipantCommunicationWrapupForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostConversationsEmailParticipantCommunicationWrapupForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsEmailParticipantCommunicationWrapupForbidden  %+v", 403, o.Payload)
}

func (o *PostConversationsEmailParticipantCommunicationWrapupForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsEmailParticipantCommunicationWrapupForbidden  %+v", 403, o.Payload)
}

func (o *PostConversationsEmailParticipantCommunicationWrapupForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsEmailParticipantCommunicationWrapupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsEmailParticipantCommunicationWrapupNotFound creates a PostConversationsEmailParticipantCommunicationWrapupNotFound with default headers values
func NewPostConversationsEmailParticipantCommunicationWrapupNotFound() *PostConversationsEmailParticipantCommunicationWrapupNotFound {
	return &PostConversationsEmailParticipantCommunicationWrapupNotFound{}
}

/*
PostConversationsEmailParticipantCommunicationWrapupNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostConversationsEmailParticipantCommunicationWrapupNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations email participant communication wrapup not found response has a 2xx status code
func (o *PostConversationsEmailParticipantCommunicationWrapupNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations email participant communication wrapup not found response has a 3xx status code
func (o *PostConversationsEmailParticipantCommunicationWrapupNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations email participant communication wrapup not found response has a 4xx status code
func (o *PostConversationsEmailParticipantCommunicationWrapupNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations email participant communication wrapup not found response has a 5xx status code
func (o *PostConversationsEmailParticipantCommunicationWrapupNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations email participant communication wrapup not found response a status code equal to that given
func (o *PostConversationsEmailParticipantCommunicationWrapupNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostConversationsEmailParticipantCommunicationWrapupNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsEmailParticipantCommunicationWrapupNotFound  %+v", 404, o.Payload)
}

func (o *PostConversationsEmailParticipantCommunicationWrapupNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsEmailParticipantCommunicationWrapupNotFound  %+v", 404, o.Payload)
}

func (o *PostConversationsEmailParticipantCommunicationWrapupNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsEmailParticipantCommunicationWrapupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsEmailParticipantCommunicationWrapupRequestTimeout creates a PostConversationsEmailParticipantCommunicationWrapupRequestTimeout with default headers values
func NewPostConversationsEmailParticipantCommunicationWrapupRequestTimeout() *PostConversationsEmailParticipantCommunicationWrapupRequestTimeout {
	return &PostConversationsEmailParticipantCommunicationWrapupRequestTimeout{}
}

/*
PostConversationsEmailParticipantCommunicationWrapupRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostConversationsEmailParticipantCommunicationWrapupRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations email participant communication wrapup request timeout response has a 2xx status code
func (o *PostConversationsEmailParticipantCommunicationWrapupRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations email participant communication wrapup request timeout response has a 3xx status code
func (o *PostConversationsEmailParticipantCommunicationWrapupRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations email participant communication wrapup request timeout response has a 4xx status code
func (o *PostConversationsEmailParticipantCommunicationWrapupRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations email participant communication wrapup request timeout response has a 5xx status code
func (o *PostConversationsEmailParticipantCommunicationWrapupRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations email participant communication wrapup request timeout response a status code equal to that given
func (o *PostConversationsEmailParticipantCommunicationWrapupRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostConversationsEmailParticipantCommunicationWrapupRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsEmailParticipantCommunicationWrapupRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostConversationsEmailParticipantCommunicationWrapupRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsEmailParticipantCommunicationWrapupRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostConversationsEmailParticipantCommunicationWrapupRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsEmailParticipantCommunicationWrapupRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsEmailParticipantCommunicationWrapupRequestEntityTooLarge creates a PostConversationsEmailParticipantCommunicationWrapupRequestEntityTooLarge with default headers values
func NewPostConversationsEmailParticipantCommunicationWrapupRequestEntityTooLarge() *PostConversationsEmailParticipantCommunicationWrapupRequestEntityTooLarge {
	return &PostConversationsEmailParticipantCommunicationWrapupRequestEntityTooLarge{}
}

/*
PostConversationsEmailParticipantCommunicationWrapupRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PostConversationsEmailParticipantCommunicationWrapupRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations email participant communication wrapup request entity too large response has a 2xx status code
func (o *PostConversationsEmailParticipantCommunicationWrapupRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations email participant communication wrapup request entity too large response has a 3xx status code
func (o *PostConversationsEmailParticipantCommunicationWrapupRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations email participant communication wrapup request entity too large response has a 4xx status code
func (o *PostConversationsEmailParticipantCommunicationWrapupRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations email participant communication wrapup request entity too large response has a 5xx status code
func (o *PostConversationsEmailParticipantCommunicationWrapupRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations email participant communication wrapup request entity too large response a status code equal to that given
func (o *PostConversationsEmailParticipantCommunicationWrapupRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostConversationsEmailParticipantCommunicationWrapupRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsEmailParticipantCommunicationWrapupRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostConversationsEmailParticipantCommunicationWrapupRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsEmailParticipantCommunicationWrapupRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostConversationsEmailParticipantCommunicationWrapupRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsEmailParticipantCommunicationWrapupRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsEmailParticipantCommunicationWrapupUnsupportedMediaType creates a PostConversationsEmailParticipantCommunicationWrapupUnsupportedMediaType with default headers values
func NewPostConversationsEmailParticipantCommunicationWrapupUnsupportedMediaType() *PostConversationsEmailParticipantCommunicationWrapupUnsupportedMediaType {
	return &PostConversationsEmailParticipantCommunicationWrapupUnsupportedMediaType{}
}

/*
PostConversationsEmailParticipantCommunicationWrapupUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostConversationsEmailParticipantCommunicationWrapupUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations email participant communication wrapup unsupported media type response has a 2xx status code
func (o *PostConversationsEmailParticipantCommunicationWrapupUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations email participant communication wrapup unsupported media type response has a 3xx status code
func (o *PostConversationsEmailParticipantCommunicationWrapupUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations email participant communication wrapup unsupported media type response has a 4xx status code
func (o *PostConversationsEmailParticipantCommunicationWrapupUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations email participant communication wrapup unsupported media type response has a 5xx status code
func (o *PostConversationsEmailParticipantCommunicationWrapupUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations email participant communication wrapup unsupported media type response a status code equal to that given
func (o *PostConversationsEmailParticipantCommunicationWrapupUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostConversationsEmailParticipantCommunicationWrapupUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsEmailParticipantCommunicationWrapupUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostConversationsEmailParticipantCommunicationWrapupUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsEmailParticipantCommunicationWrapupUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostConversationsEmailParticipantCommunicationWrapupUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsEmailParticipantCommunicationWrapupUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsEmailParticipantCommunicationWrapupTooManyRequests creates a PostConversationsEmailParticipantCommunicationWrapupTooManyRequests with default headers values
func NewPostConversationsEmailParticipantCommunicationWrapupTooManyRequests() *PostConversationsEmailParticipantCommunicationWrapupTooManyRequests {
	return &PostConversationsEmailParticipantCommunicationWrapupTooManyRequests{}
}

/*
PostConversationsEmailParticipantCommunicationWrapupTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostConversationsEmailParticipantCommunicationWrapupTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations email participant communication wrapup too many requests response has a 2xx status code
func (o *PostConversationsEmailParticipantCommunicationWrapupTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations email participant communication wrapup too many requests response has a 3xx status code
func (o *PostConversationsEmailParticipantCommunicationWrapupTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations email participant communication wrapup too many requests response has a 4xx status code
func (o *PostConversationsEmailParticipantCommunicationWrapupTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations email participant communication wrapup too many requests response has a 5xx status code
func (o *PostConversationsEmailParticipantCommunicationWrapupTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations email participant communication wrapup too many requests response a status code equal to that given
func (o *PostConversationsEmailParticipantCommunicationWrapupTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostConversationsEmailParticipantCommunicationWrapupTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsEmailParticipantCommunicationWrapupTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostConversationsEmailParticipantCommunicationWrapupTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsEmailParticipantCommunicationWrapupTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostConversationsEmailParticipantCommunicationWrapupTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsEmailParticipantCommunicationWrapupTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsEmailParticipantCommunicationWrapupInternalServerError creates a PostConversationsEmailParticipantCommunicationWrapupInternalServerError with default headers values
func NewPostConversationsEmailParticipantCommunicationWrapupInternalServerError() *PostConversationsEmailParticipantCommunicationWrapupInternalServerError {
	return &PostConversationsEmailParticipantCommunicationWrapupInternalServerError{}
}

/*
PostConversationsEmailParticipantCommunicationWrapupInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostConversationsEmailParticipantCommunicationWrapupInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations email participant communication wrapup internal server error response has a 2xx status code
func (o *PostConversationsEmailParticipantCommunicationWrapupInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations email participant communication wrapup internal server error response has a 3xx status code
func (o *PostConversationsEmailParticipantCommunicationWrapupInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations email participant communication wrapup internal server error response has a 4xx status code
func (o *PostConversationsEmailParticipantCommunicationWrapupInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations email participant communication wrapup internal server error response has a 5xx status code
func (o *PostConversationsEmailParticipantCommunicationWrapupInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversations email participant communication wrapup internal server error response a status code equal to that given
func (o *PostConversationsEmailParticipantCommunicationWrapupInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostConversationsEmailParticipantCommunicationWrapupInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsEmailParticipantCommunicationWrapupInternalServerError  %+v", 500, o.Payload)
}

func (o *PostConversationsEmailParticipantCommunicationWrapupInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsEmailParticipantCommunicationWrapupInternalServerError  %+v", 500, o.Payload)
}

func (o *PostConversationsEmailParticipantCommunicationWrapupInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsEmailParticipantCommunicationWrapupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsEmailParticipantCommunicationWrapupServiceUnavailable creates a PostConversationsEmailParticipantCommunicationWrapupServiceUnavailable with default headers values
func NewPostConversationsEmailParticipantCommunicationWrapupServiceUnavailable() *PostConversationsEmailParticipantCommunicationWrapupServiceUnavailable {
	return &PostConversationsEmailParticipantCommunicationWrapupServiceUnavailable{}
}

/*
PostConversationsEmailParticipantCommunicationWrapupServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostConversationsEmailParticipantCommunicationWrapupServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations email participant communication wrapup service unavailable response has a 2xx status code
func (o *PostConversationsEmailParticipantCommunicationWrapupServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations email participant communication wrapup service unavailable response has a 3xx status code
func (o *PostConversationsEmailParticipantCommunicationWrapupServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations email participant communication wrapup service unavailable response has a 4xx status code
func (o *PostConversationsEmailParticipantCommunicationWrapupServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations email participant communication wrapup service unavailable response has a 5xx status code
func (o *PostConversationsEmailParticipantCommunicationWrapupServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversations email participant communication wrapup service unavailable response a status code equal to that given
func (o *PostConversationsEmailParticipantCommunicationWrapupServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostConversationsEmailParticipantCommunicationWrapupServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsEmailParticipantCommunicationWrapupServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostConversationsEmailParticipantCommunicationWrapupServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsEmailParticipantCommunicationWrapupServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostConversationsEmailParticipantCommunicationWrapupServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsEmailParticipantCommunicationWrapupServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsEmailParticipantCommunicationWrapupGatewayTimeout creates a PostConversationsEmailParticipantCommunicationWrapupGatewayTimeout with default headers values
func NewPostConversationsEmailParticipantCommunicationWrapupGatewayTimeout() *PostConversationsEmailParticipantCommunicationWrapupGatewayTimeout {
	return &PostConversationsEmailParticipantCommunicationWrapupGatewayTimeout{}
}

/*
PostConversationsEmailParticipantCommunicationWrapupGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostConversationsEmailParticipantCommunicationWrapupGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations email participant communication wrapup gateway timeout response has a 2xx status code
func (o *PostConversationsEmailParticipantCommunicationWrapupGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations email participant communication wrapup gateway timeout response has a 3xx status code
func (o *PostConversationsEmailParticipantCommunicationWrapupGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations email participant communication wrapup gateway timeout response has a 4xx status code
func (o *PostConversationsEmailParticipantCommunicationWrapupGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations email participant communication wrapup gateway timeout response has a 5xx status code
func (o *PostConversationsEmailParticipantCommunicationWrapupGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversations email participant communication wrapup gateway timeout response a status code equal to that given
func (o *PostConversationsEmailParticipantCommunicationWrapupGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostConversationsEmailParticipantCommunicationWrapupGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsEmailParticipantCommunicationWrapupGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostConversationsEmailParticipantCommunicationWrapupGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsEmailParticipantCommunicationWrapupGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostConversationsEmailParticipantCommunicationWrapupGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsEmailParticipantCommunicationWrapupGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
