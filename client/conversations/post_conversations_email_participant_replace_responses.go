// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostConversationsEmailParticipantReplaceReader is a Reader for the PostConversationsEmailParticipantReplace structure.
type PostConversationsEmailParticipantReplaceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostConversationsEmailParticipantReplaceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewPostConversationsEmailParticipantReplaceAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostConversationsEmailParticipantReplaceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostConversationsEmailParticipantReplaceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostConversationsEmailParticipantReplaceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostConversationsEmailParticipantReplaceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostConversationsEmailParticipantReplaceRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostConversationsEmailParticipantReplaceRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostConversationsEmailParticipantReplaceUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostConversationsEmailParticipantReplaceTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostConversationsEmailParticipantReplaceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostConversationsEmailParticipantReplaceServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostConversationsEmailParticipantReplaceGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostConversationsEmailParticipantReplaceAccepted creates a PostConversationsEmailParticipantReplaceAccepted with default headers values
func NewPostConversationsEmailParticipantReplaceAccepted() *PostConversationsEmailParticipantReplaceAccepted {
	return &PostConversationsEmailParticipantReplaceAccepted{}
}

/*
PostConversationsEmailParticipantReplaceAccepted describes a response with status code 202, with default header values.

Accepted
*/
type PostConversationsEmailParticipantReplaceAccepted struct {
}

// IsSuccess returns true when this post conversations email participant replace accepted response has a 2xx status code
func (o *PostConversationsEmailParticipantReplaceAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post conversations email participant replace accepted response has a 3xx status code
func (o *PostConversationsEmailParticipantReplaceAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations email participant replace accepted response has a 4xx status code
func (o *PostConversationsEmailParticipantReplaceAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations email participant replace accepted response has a 5xx status code
func (o *PostConversationsEmailParticipantReplaceAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations email participant replace accepted response a status code equal to that given
func (o *PostConversationsEmailParticipantReplaceAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *PostConversationsEmailParticipantReplaceAccepted) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/replace][%d] postConversationsEmailParticipantReplaceAccepted ", 202)
}

func (o *PostConversationsEmailParticipantReplaceAccepted) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/replace][%d] postConversationsEmailParticipantReplaceAccepted ", 202)
}

func (o *PostConversationsEmailParticipantReplaceAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostConversationsEmailParticipantReplaceBadRequest creates a PostConversationsEmailParticipantReplaceBadRequest with default headers values
func NewPostConversationsEmailParticipantReplaceBadRequest() *PostConversationsEmailParticipantReplaceBadRequest {
	return &PostConversationsEmailParticipantReplaceBadRequest{}
}

/*
PostConversationsEmailParticipantReplaceBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostConversationsEmailParticipantReplaceBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations email participant replace bad request response has a 2xx status code
func (o *PostConversationsEmailParticipantReplaceBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations email participant replace bad request response has a 3xx status code
func (o *PostConversationsEmailParticipantReplaceBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations email participant replace bad request response has a 4xx status code
func (o *PostConversationsEmailParticipantReplaceBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations email participant replace bad request response has a 5xx status code
func (o *PostConversationsEmailParticipantReplaceBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations email participant replace bad request response a status code equal to that given
func (o *PostConversationsEmailParticipantReplaceBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostConversationsEmailParticipantReplaceBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/replace][%d] postConversationsEmailParticipantReplaceBadRequest  %+v", 400, o.Payload)
}

func (o *PostConversationsEmailParticipantReplaceBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/replace][%d] postConversationsEmailParticipantReplaceBadRequest  %+v", 400, o.Payload)
}

func (o *PostConversationsEmailParticipantReplaceBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsEmailParticipantReplaceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsEmailParticipantReplaceUnauthorized creates a PostConversationsEmailParticipantReplaceUnauthorized with default headers values
func NewPostConversationsEmailParticipantReplaceUnauthorized() *PostConversationsEmailParticipantReplaceUnauthorized {
	return &PostConversationsEmailParticipantReplaceUnauthorized{}
}

/*
PostConversationsEmailParticipantReplaceUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostConversationsEmailParticipantReplaceUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations email participant replace unauthorized response has a 2xx status code
func (o *PostConversationsEmailParticipantReplaceUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations email participant replace unauthorized response has a 3xx status code
func (o *PostConversationsEmailParticipantReplaceUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations email participant replace unauthorized response has a 4xx status code
func (o *PostConversationsEmailParticipantReplaceUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations email participant replace unauthorized response has a 5xx status code
func (o *PostConversationsEmailParticipantReplaceUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations email participant replace unauthorized response a status code equal to that given
func (o *PostConversationsEmailParticipantReplaceUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostConversationsEmailParticipantReplaceUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/replace][%d] postConversationsEmailParticipantReplaceUnauthorized  %+v", 401, o.Payload)
}

func (o *PostConversationsEmailParticipantReplaceUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/replace][%d] postConversationsEmailParticipantReplaceUnauthorized  %+v", 401, o.Payload)
}

func (o *PostConversationsEmailParticipantReplaceUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsEmailParticipantReplaceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsEmailParticipantReplaceForbidden creates a PostConversationsEmailParticipantReplaceForbidden with default headers values
func NewPostConversationsEmailParticipantReplaceForbidden() *PostConversationsEmailParticipantReplaceForbidden {
	return &PostConversationsEmailParticipantReplaceForbidden{}
}

/*
PostConversationsEmailParticipantReplaceForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostConversationsEmailParticipantReplaceForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations email participant replace forbidden response has a 2xx status code
func (o *PostConversationsEmailParticipantReplaceForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations email participant replace forbidden response has a 3xx status code
func (o *PostConversationsEmailParticipantReplaceForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations email participant replace forbidden response has a 4xx status code
func (o *PostConversationsEmailParticipantReplaceForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations email participant replace forbidden response has a 5xx status code
func (o *PostConversationsEmailParticipantReplaceForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations email participant replace forbidden response a status code equal to that given
func (o *PostConversationsEmailParticipantReplaceForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostConversationsEmailParticipantReplaceForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/replace][%d] postConversationsEmailParticipantReplaceForbidden  %+v", 403, o.Payload)
}

func (o *PostConversationsEmailParticipantReplaceForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/replace][%d] postConversationsEmailParticipantReplaceForbidden  %+v", 403, o.Payload)
}

func (o *PostConversationsEmailParticipantReplaceForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsEmailParticipantReplaceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsEmailParticipantReplaceNotFound creates a PostConversationsEmailParticipantReplaceNotFound with default headers values
func NewPostConversationsEmailParticipantReplaceNotFound() *PostConversationsEmailParticipantReplaceNotFound {
	return &PostConversationsEmailParticipantReplaceNotFound{}
}

/*
PostConversationsEmailParticipantReplaceNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostConversationsEmailParticipantReplaceNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations email participant replace not found response has a 2xx status code
func (o *PostConversationsEmailParticipantReplaceNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations email participant replace not found response has a 3xx status code
func (o *PostConversationsEmailParticipantReplaceNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations email participant replace not found response has a 4xx status code
func (o *PostConversationsEmailParticipantReplaceNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations email participant replace not found response has a 5xx status code
func (o *PostConversationsEmailParticipantReplaceNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations email participant replace not found response a status code equal to that given
func (o *PostConversationsEmailParticipantReplaceNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostConversationsEmailParticipantReplaceNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/replace][%d] postConversationsEmailParticipantReplaceNotFound  %+v", 404, o.Payload)
}

func (o *PostConversationsEmailParticipantReplaceNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/replace][%d] postConversationsEmailParticipantReplaceNotFound  %+v", 404, o.Payload)
}

func (o *PostConversationsEmailParticipantReplaceNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsEmailParticipantReplaceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsEmailParticipantReplaceRequestTimeout creates a PostConversationsEmailParticipantReplaceRequestTimeout with default headers values
func NewPostConversationsEmailParticipantReplaceRequestTimeout() *PostConversationsEmailParticipantReplaceRequestTimeout {
	return &PostConversationsEmailParticipantReplaceRequestTimeout{}
}

/*
PostConversationsEmailParticipantReplaceRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostConversationsEmailParticipantReplaceRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations email participant replace request timeout response has a 2xx status code
func (o *PostConversationsEmailParticipantReplaceRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations email participant replace request timeout response has a 3xx status code
func (o *PostConversationsEmailParticipantReplaceRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations email participant replace request timeout response has a 4xx status code
func (o *PostConversationsEmailParticipantReplaceRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations email participant replace request timeout response has a 5xx status code
func (o *PostConversationsEmailParticipantReplaceRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations email participant replace request timeout response a status code equal to that given
func (o *PostConversationsEmailParticipantReplaceRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostConversationsEmailParticipantReplaceRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/replace][%d] postConversationsEmailParticipantReplaceRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostConversationsEmailParticipantReplaceRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/replace][%d] postConversationsEmailParticipantReplaceRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostConversationsEmailParticipantReplaceRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsEmailParticipantReplaceRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsEmailParticipantReplaceRequestEntityTooLarge creates a PostConversationsEmailParticipantReplaceRequestEntityTooLarge with default headers values
func NewPostConversationsEmailParticipantReplaceRequestEntityTooLarge() *PostConversationsEmailParticipantReplaceRequestEntityTooLarge {
	return &PostConversationsEmailParticipantReplaceRequestEntityTooLarge{}
}

/*
PostConversationsEmailParticipantReplaceRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PostConversationsEmailParticipantReplaceRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations email participant replace request entity too large response has a 2xx status code
func (o *PostConversationsEmailParticipantReplaceRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations email participant replace request entity too large response has a 3xx status code
func (o *PostConversationsEmailParticipantReplaceRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations email participant replace request entity too large response has a 4xx status code
func (o *PostConversationsEmailParticipantReplaceRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations email participant replace request entity too large response has a 5xx status code
func (o *PostConversationsEmailParticipantReplaceRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations email participant replace request entity too large response a status code equal to that given
func (o *PostConversationsEmailParticipantReplaceRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostConversationsEmailParticipantReplaceRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/replace][%d] postConversationsEmailParticipantReplaceRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostConversationsEmailParticipantReplaceRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/replace][%d] postConversationsEmailParticipantReplaceRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostConversationsEmailParticipantReplaceRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsEmailParticipantReplaceRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsEmailParticipantReplaceUnsupportedMediaType creates a PostConversationsEmailParticipantReplaceUnsupportedMediaType with default headers values
func NewPostConversationsEmailParticipantReplaceUnsupportedMediaType() *PostConversationsEmailParticipantReplaceUnsupportedMediaType {
	return &PostConversationsEmailParticipantReplaceUnsupportedMediaType{}
}

/*
PostConversationsEmailParticipantReplaceUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostConversationsEmailParticipantReplaceUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations email participant replace unsupported media type response has a 2xx status code
func (o *PostConversationsEmailParticipantReplaceUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations email participant replace unsupported media type response has a 3xx status code
func (o *PostConversationsEmailParticipantReplaceUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations email participant replace unsupported media type response has a 4xx status code
func (o *PostConversationsEmailParticipantReplaceUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations email participant replace unsupported media type response has a 5xx status code
func (o *PostConversationsEmailParticipantReplaceUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations email participant replace unsupported media type response a status code equal to that given
func (o *PostConversationsEmailParticipantReplaceUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostConversationsEmailParticipantReplaceUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/replace][%d] postConversationsEmailParticipantReplaceUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostConversationsEmailParticipantReplaceUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/replace][%d] postConversationsEmailParticipantReplaceUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostConversationsEmailParticipantReplaceUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsEmailParticipantReplaceUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsEmailParticipantReplaceTooManyRequests creates a PostConversationsEmailParticipantReplaceTooManyRequests with default headers values
func NewPostConversationsEmailParticipantReplaceTooManyRequests() *PostConversationsEmailParticipantReplaceTooManyRequests {
	return &PostConversationsEmailParticipantReplaceTooManyRequests{}
}

/*
PostConversationsEmailParticipantReplaceTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostConversationsEmailParticipantReplaceTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations email participant replace too many requests response has a 2xx status code
func (o *PostConversationsEmailParticipantReplaceTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations email participant replace too many requests response has a 3xx status code
func (o *PostConversationsEmailParticipantReplaceTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations email participant replace too many requests response has a 4xx status code
func (o *PostConversationsEmailParticipantReplaceTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations email participant replace too many requests response has a 5xx status code
func (o *PostConversationsEmailParticipantReplaceTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations email participant replace too many requests response a status code equal to that given
func (o *PostConversationsEmailParticipantReplaceTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostConversationsEmailParticipantReplaceTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/replace][%d] postConversationsEmailParticipantReplaceTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostConversationsEmailParticipantReplaceTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/replace][%d] postConversationsEmailParticipantReplaceTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostConversationsEmailParticipantReplaceTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsEmailParticipantReplaceTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsEmailParticipantReplaceInternalServerError creates a PostConversationsEmailParticipantReplaceInternalServerError with default headers values
func NewPostConversationsEmailParticipantReplaceInternalServerError() *PostConversationsEmailParticipantReplaceInternalServerError {
	return &PostConversationsEmailParticipantReplaceInternalServerError{}
}

/*
PostConversationsEmailParticipantReplaceInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostConversationsEmailParticipantReplaceInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations email participant replace internal server error response has a 2xx status code
func (o *PostConversationsEmailParticipantReplaceInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations email participant replace internal server error response has a 3xx status code
func (o *PostConversationsEmailParticipantReplaceInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations email participant replace internal server error response has a 4xx status code
func (o *PostConversationsEmailParticipantReplaceInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations email participant replace internal server error response has a 5xx status code
func (o *PostConversationsEmailParticipantReplaceInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversations email participant replace internal server error response a status code equal to that given
func (o *PostConversationsEmailParticipantReplaceInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostConversationsEmailParticipantReplaceInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/replace][%d] postConversationsEmailParticipantReplaceInternalServerError  %+v", 500, o.Payload)
}

func (o *PostConversationsEmailParticipantReplaceInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/replace][%d] postConversationsEmailParticipantReplaceInternalServerError  %+v", 500, o.Payload)
}

func (o *PostConversationsEmailParticipantReplaceInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsEmailParticipantReplaceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsEmailParticipantReplaceServiceUnavailable creates a PostConversationsEmailParticipantReplaceServiceUnavailable with default headers values
func NewPostConversationsEmailParticipantReplaceServiceUnavailable() *PostConversationsEmailParticipantReplaceServiceUnavailable {
	return &PostConversationsEmailParticipantReplaceServiceUnavailable{}
}

/*
PostConversationsEmailParticipantReplaceServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostConversationsEmailParticipantReplaceServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations email participant replace service unavailable response has a 2xx status code
func (o *PostConversationsEmailParticipantReplaceServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations email participant replace service unavailable response has a 3xx status code
func (o *PostConversationsEmailParticipantReplaceServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations email participant replace service unavailable response has a 4xx status code
func (o *PostConversationsEmailParticipantReplaceServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations email participant replace service unavailable response has a 5xx status code
func (o *PostConversationsEmailParticipantReplaceServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversations email participant replace service unavailable response a status code equal to that given
func (o *PostConversationsEmailParticipantReplaceServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostConversationsEmailParticipantReplaceServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/replace][%d] postConversationsEmailParticipantReplaceServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostConversationsEmailParticipantReplaceServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/replace][%d] postConversationsEmailParticipantReplaceServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostConversationsEmailParticipantReplaceServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsEmailParticipantReplaceServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsEmailParticipantReplaceGatewayTimeout creates a PostConversationsEmailParticipantReplaceGatewayTimeout with default headers values
func NewPostConversationsEmailParticipantReplaceGatewayTimeout() *PostConversationsEmailParticipantReplaceGatewayTimeout {
	return &PostConversationsEmailParticipantReplaceGatewayTimeout{}
}

/*
PostConversationsEmailParticipantReplaceGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostConversationsEmailParticipantReplaceGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations email participant replace gateway timeout response has a 2xx status code
func (o *PostConversationsEmailParticipantReplaceGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations email participant replace gateway timeout response has a 3xx status code
func (o *PostConversationsEmailParticipantReplaceGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations email participant replace gateway timeout response has a 4xx status code
func (o *PostConversationsEmailParticipantReplaceGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations email participant replace gateway timeout response has a 5xx status code
func (o *PostConversationsEmailParticipantReplaceGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversations email participant replace gateway timeout response a status code equal to that given
func (o *PostConversationsEmailParticipantReplaceGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostConversationsEmailParticipantReplaceGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/replace][%d] postConversationsEmailParticipantReplaceGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostConversationsEmailParticipantReplaceGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/replace][%d] postConversationsEmailParticipantReplaceGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostConversationsEmailParticipantReplaceGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsEmailParticipantReplaceGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
