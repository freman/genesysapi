// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostConversationsCallsReader is a Reader for the PostConversationsCalls structure.
type PostConversationsCallsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostConversationsCallsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostConversationsCallsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostConversationsCallsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostConversationsCallsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostConversationsCallsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostConversationsCallsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostConversationsCallsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPostConversationsCallsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostConversationsCallsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostConversationsCallsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostConversationsCallsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostConversationsCallsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostConversationsCallsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostConversationsCallsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostConversationsCallsOK creates a PostConversationsCallsOK with default headers values
func NewPostConversationsCallsOK() *PostConversationsCallsOK {
	return &PostConversationsCallsOK{}
}

/*
PostConversationsCallsOK describes a response with status code 200, with default header values.

successful operation
*/
type PostConversationsCallsOK struct {
	Payload *models.CreateCallResponse
}

// IsSuccess returns true when this post conversations calls o k response has a 2xx status code
func (o *PostConversationsCallsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post conversations calls o k response has a 3xx status code
func (o *PostConversationsCallsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations calls o k response has a 4xx status code
func (o *PostConversationsCallsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations calls o k response has a 5xx status code
func (o *PostConversationsCallsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations calls o k response a status code equal to that given
func (o *PostConversationsCallsOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostConversationsCallsOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls][%d] postConversationsCallsOK  %+v", 200, o.Payload)
}

func (o *PostConversationsCallsOK) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls][%d] postConversationsCallsOK  %+v", 200, o.Payload)
}

func (o *PostConversationsCallsOK) GetPayload() *models.CreateCallResponse {
	return o.Payload
}

func (o *PostConversationsCallsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CreateCallResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallsBadRequest creates a PostConversationsCallsBadRequest with default headers values
func NewPostConversationsCallsBadRequest() *PostConversationsCallsBadRequest {
	return &PostConversationsCallsBadRequest{}
}

/*
PostConversationsCallsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostConversationsCallsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations calls bad request response has a 2xx status code
func (o *PostConversationsCallsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations calls bad request response has a 3xx status code
func (o *PostConversationsCallsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations calls bad request response has a 4xx status code
func (o *PostConversationsCallsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations calls bad request response has a 5xx status code
func (o *PostConversationsCallsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations calls bad request response a status code equal to that given
func (o *PostConversationsCallsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostConversationsCallsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls][%d] postConversationsCallsBadRequest  %+v", 400, o.Payload)
}

func (o *PostConversationsCallsBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls][%d] postConversationsCallsBadRequest  %+v", 400, o.Payload)
}

func (o *PostConversationsCallsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallsUnauthorized creates a PostConversationsCallsUnauthorized with default headers values
func NewPostConversationsCallsUnauthorized() *PostConversationsCallsUnauthorized {
	return &PostConversationsCallsUnauthorized{}
}

/*
PostConversationsCallsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostConversationsCallsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations calls unauthorized response has a 2xx status code
func (o *PostConversationsCallsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations calls unauthorized response has a 3xx status code
func (o *PostConversationsCallsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations calls unauthorized response has a 4xx status code
func (o *PostConversationsCallsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations calls unauthorized response has a 5xx status code
func (o *PostConversationsCallsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations calls unauthorized response a status code equal to that given
func (o *PostConversationsCallsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostConversationsCallsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls][%d] postConversationsCallsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostConversationsCallsUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls][%d] postConversationsCallsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostConversationsCallsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallsForbidden creates a PostConversationsCallsForbidden with default headers values
func NewPostConversationsCallsForbidden() *PostConversationsCallsForbidden {
	return &PostConversationsCallsForbidden{}
}

/*
PostConversationsCallsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostConversationsCallsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations calls forbidden response has a 2xx status code
func (o *PostConversationsCallsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations calls forbidden response has a 3xx status code
func (o *PostConversationsCallsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations calls forbidden response has a 4xx status code
func (o *PostConversationsCallsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations calls forbidden response has a 5xx status code
func (o *PostConversationsCallsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations calls forbidden response a status code equal to that given
func (o *PostConversationsCallsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostConversationsCallsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls][%d] postConversationsCallsForbidden  %+v", 403, o.Payload)
}

func (o *PostConversationsCallsForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls][%d] postConversationsCallsForbidden  %+v", 403, o.Payload)
}

func (o *PostConversationsCallsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallsNotFound creates a PostConversationsCallsNotFound with default headers values
func NewPostConversationsCallsNotFound() *PostConversationsCallsNotFound {
	return &PostConversationsCallsNotFound{}
}

/*
PostConversationsCallsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostConversationsCallsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations calls not found response has a 2xx status code
func (o *PostConversationsCallsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations calls not found response has a 3xx status code
func (o *PostConversationsCallsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations calls not found response has a 4xx status code
func (o *PostConversationsCallsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations calls not found response has a 5xx status code
func (o *PostConversationsCallsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations calls not found response a status code equal to that given
func (o *PostConversationsCallsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostConversationsCallsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls][%d] postConversationsCallsNotFound  %+v", 404, o.Payload)
}

func (o *PostConversationsCallsNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls][%d] postConversationsCallsNotFound  %+v", 404, o.Payload)
}

func (o *PostConversationsCallsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallsRequestTimeout creates a PostConversationsCallsRequestTimeout with default headers values
func NewPostConversationsCallsRequestTimeout() *PostConversationsCallsRequestTimeout {
	return &PostConversationsCallsRequestTimeout{}
}

/*
PostConversationsCallsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostConversationsCallsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations calls request timeout response has a 2xx status code
func (o *PostConversationsCallsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations calls request timeout response has a 3xx status code
func (o *PostConversationsCallsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations calls request timeout response has a 4xx status code
func (o *PostConversationsCallsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations calls request timeout response has a 5xx status code
func (o *PostConversationsCallsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations calls request timeout response a status code equal to that given
func (o *PostConversationsCallsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostConversationsCallsRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls][%d] postConversationsCallsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostConversationsCallsRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls][%d] postConversationsCallsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostConversationsCallsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallsConflict creates a PostConversationsCallsConflict with default headers values
func NewPostConversationsCallsConflict() *PostConversationsCallsConflict {
	return &PostConversationsCallsConflict{}
}

/*
PostConversationsCallsConflict describes a response with status code 409, with default header values.

Conflict
*/
type PostConversationsCallsConflict struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations calls conflict response has a 2xx status code
func (o *PostConversationsCallsConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations calls conflict response has a 3xx status code
func (o *PostConversationsCallsConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations calls conflict response has a 4xx status code
func (o *PostConversationsCallsConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations calls conflict response has a 5xx status code
func (o *PostConversationsCallsConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations calls conflict response a status code equal to that given
func (o *PostConversationsCallsConflict) IsCode(code int) bool {
	return code == 409
}

func (o *PostConversationsCallsConflict) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls][%d] postConversationsCallsConflict  %+v", 409, o.Payload)
}

func (o *PostConversationsCallsConflict) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls][%d] postConversationsCallsConflict  %+v", 409, o.Payload)
}

func (o *PostConversationsCallsConflict) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallsRequestEntityTooLarge creates a PostConversationsCallsRequestEntityTooLarge with default headers values
func NewPostConversationsCallsRequestEntityTooLarge() *PostConversationsCallsRequestEntityTooLarge {
	return &PostConversationsCallsRequestEntityTooLarge{}
}

/*
PostConversationsCallsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PostConversationsCallsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations calls request entity too large response has a 2xx status code
func (o *PostConversationsCallsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations calls request entity too large response has a 3xx status code
func (o *PostConversationsCallsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations calls request entity too large response has a 4xx status code
func (o *PostConversationsCallsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations calls request entity too large response has a 5xx status code
func (o *PostConversationsCallsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations calls request entity too large response a status code equal to that given
func (o *PostConversationsCallsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostConversationsCallsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls][%d] postConversationsCallsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostConversationsCallsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls][%d] postConversationsCallsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostConversationsCallsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallsUnsupportedMediaType creates a PostConversationsCallsUnsupportedMediaType with default headers values
func NewPostConversationsCallsUnsupportedMediaType() *PostConversationsCallsUnsupportedMediaType {
	return &PostConversationsCallsUnsupportedMediaType{}
}

/*
PostConversationsCallsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostConversationsCallsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations calls unsupported media type response has a 2xx status code
func (o *PostConversationsCallsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations calls unsupported media type response has a 3xx status code
func (o *PostConversationsCallsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations calls unsupported media type response has a 4xx status code
func (o *PostConversationsCallsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations calls unsupported media type response has a 5xx status code
func (o *PostConversationsCallsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations calls unsupported media type response a status code equal to that given
func (o *PostConversationsCallsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostConversationsCallsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls][%d] postConversationsCallsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostConversationsCallsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls][%d] postConversationsCallsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostConversationsCallsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallsTooManyRequests creates a PostConversationsCallsTooManyRequests with default headers values
func NewPostConversationsCallsTooManyRequests() *PostConversationsCallsTooManyRequests {
	return &PostConversationsCallsTooManyRequests{}
}

/*
PostConversationsCallsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostConversationsCallsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations calls too many requests response has a 2xx status code
func (o *PostConversationsCallsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations calls too many requests response has a 3xx status code
func (o *PostConversationsCallsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations calls too many requests response has a 4xx status code
func (o *PostConversationsCallsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations calls too many requests response has a 5xx status code
func (o *PostConversationsCallsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations calls too many requests response a status code equal to that given
func (o *PostConversationsCallsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostConversationsCallsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls][%d] postConversationsCallsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostConversationsCallsTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls][%d] postConversationsCallsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostConversationsCallsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallsInternalServerError creates a PostConversationsCallsInternalServerError with default headers values
func NewPostConversationsCallsInternalServerError() *PostConversationsCallsInternalServerError {
	return &PostConversationsCallsInternalServerError{}
}

/*
PostConversationsCallsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostConversationsCallsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations calls internal server error response has a 2xx status code
func (o *PostConversationsCallsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations calls internal server error response has a 3xx status code
func (o *PostConversationsCallsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations calls internal server error response has a 4xx status code
func (o *PostConversationsCallsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations calls internal server error response has a 5xx status code
func (o *PostConversationsCallsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversations calls internal server error response a status code equal to that given
func (o *PostConversationsCallsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostConversationsCallsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls][%d] postConversationsCallsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostConversationsCallsInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls][%d] postConversationsCallsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostConversationsCallsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallsServiceUnavailable creates a PostConversationsCallsServiceUnavailable with default headers values
func NewPostConversationsCallsServiceUnavailable() *PostConversationsCallsServiceUnavailable {
	return &PostConversationsCallsServiceUnavailable{}
}

/*
PostConversationsCallsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostConversationsCallsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations calls service unavailable response has a 2xx status code
func (o *PostConversationsCallsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations calls service unavailable response has a 3xx status code
func (o *PostConversationsCallsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations calls service unavailable response has a 4xx status code
func (o *PostConversationsCallsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations calls service unavailable response has a 5xx status code
func (o *PostConversationsCallsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversations calls service unavailable response a status code equal to that given
func (o *PostConversationsCallsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostConversationsCallsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls][%d] postConversationsCallsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostConversationsCallsServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls][%d] postConversationsCallsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostConversationsCallsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallsGatewayTimeout creates a PostConversationsCallsGatewayTimeout with default headers values
func NewPostConversationsCallsGatewayTimeout() *PostConversationsCallsGatewayTimeout {
	return &PostConversationsCallsGatewayTimeout{}
}

/*
PostConversationsCallsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostConversationsCallsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations calls gateway timeout response has a 2xx status code
func (o *PostConversationsCallsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations calls gateway timeout response has a 3xx status code
func (o *PostConversationsCallsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations calls gateway timeout response has a 4xx status code
func (o *PostConversationsCallsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations calls gateway timeout response has a 5xx status code
func (o *PostConversationsCallsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversations calls gateway timeout response a status code equal to that given
func (o *PostConversationsCallsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostConversationsCallsGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls][%d] postConversationsCallsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostConversationsCallsGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls][%d] postConversationsCallsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostConversationsCallsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
