// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PatchConversationsEmailParticipantCommunicationReader is a Reader for the PatchConversationsEmailParticipantCommunication structure.
type PatchConversationsEmailParticipantCommunicationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchConversationsEmailParticipantCommunicationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchConversationsEmailParticipantCommunicationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchConversationsEmailParticipantCommunicationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPatchConversationsEmailParticipantCommunicationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchConversationsEmailParticipantCommunicationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchConversationsEmailParticipantCommunicationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPatchConversationsEmailParticipantCommunicationRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPatchConversationsEmailParticipantCommunicationRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPatchConversationsEmailParticipantCommunicationUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPatchConversationsEmailParticipantCommunicationTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchConversationsEmailParticipantCommunicationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPatchConversationsEmailParticipantCommunicationServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPatchConversationsEmailParticipantCommunicationGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchConversationsEmailParticipantCommunicationOK creates a PatchConversationsEmailParticipantCommunicationOK with default headers values
func NewPatchConversationsEmailParticipantCommunicationOK() *PatchConversationsEmailParticipantCommunicationOK {
	return &PatchConversationsEmailParticipantCommunicationOK{}
}

/*PatchConversationsEmailParticipantCommunicationOK handles this case with default header values.

successful operation
*/
type PatchConversationsEmailParticipantCommunicationOK struct {
	Payload models.Empty
}

func (o *PatchConversationsEmailParticipantCommunicationOK) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}][%d] patchConversationsEmailParticipantCommunicationOK  %+v", 200, o.Payload)
}

func (o *PatchConversationsEmailParticipantCommunicationOK) GetPayload() models.Empty {
	return o.Payload
}

func (o *PatchConversationsEmailParticipantCommunicationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsEmailParticipantCommunicationBadRequest creates a PatchConversationsEmailParticipantCommunicationBadRequest with default headers values
func NewPatchConversationsEmailParticipantCommunicationBadRequest() *PatchConversationsEmailParticipantCommunicationBadRequest {
	return &PatchConversationsEmailParticipantCommunicationBadRequest{}
}

/*PatchConversationsEmailParticipantCommunicationBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PatchConversationsEmailParticipantCommunicationBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationsEmailParticipantCommunicationBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}][%d] patchConversationsEmailParticipantCommunicationBadRequest  %+v", 400, o.Payload)
}

func (o *PatchConversationsEmailParticipantCommunicationBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsEmailParticipantCommunicationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsEmailParticipantCommunicationUnauthorized creates a PatchConversationsEmailParticipantCommunicationUnauthorized with default headers values
func NewPatchConversationsEmailParticipantCommunicationUnauthorized() *PatchConversationsEmailParticipantCommunicationUnauthorized {
	return &PatchConversationsEmailParticipantCommunicationUnauthorized{}
}

/*PatchConversationsEmailParticipantCommunicationUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PatchConversationsEmailParticipantCommunicationUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationsEmailParticipantCommunicationUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}][%d] patchConversationsEmailParticipantCommunicationUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchConversationsEmailParticipantCommunicationUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsEmailParticipantCommunicationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsEmailParticipantCommunicationForbidden creates a PatchConversationsEmailParticipantCommunicationForbidden with default headers values
func NewPatchConversationsEmailParticipantCommunicationForbidden() *PatchConversationsEmailParticipantCommunicationForbidden {
	return &PatchConversationsEmailParticipantCommunicationForbidden{}
}

/*PatchConversationsEmailParticipantCommunicationForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PatchConversationsEmailParticipantCommunicationForbidden struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationsEmailParticipantCommunicationForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}][%d] patchConversationsEmailParticipantCommunicationForbidden  %+v", 403, o.Payload)
}

func (o *PatchConversationsEmailParticipantCommunicationForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsEmailParticipantCommunicationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsEmailParticipantCommunicationNotFound creates a PatchConversationsEmailParticipantCommunicationNotFound with default headers values
func NewPatchConversationsEmailParticipantCommunicationNotFound() *PatchConversationsEmailParticipantCommunicationNotFound {
	return &PatchConversationsEmailParticipantCommunicationNotFound{}
}

/*PatchConversationsEmailParticipantCommunicationNotFound handles this case with default header values.

The requested resource was not found.
*/
type PatchConversationsEmailParticipantCommunicationNotFound struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationsEmailParticipantCommunicationNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}][%d] patchConversationsEmailParticipantCommunicationNotFound  %+v", 404, o.Payload)
}

func (o *PatchConversationsEmailParticipantCommunicationNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsEmailParticipantCommunicationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsEmailParticipantCommunicationRequestTimeout creates a PatchConversationsEmailParticipantCommunicationRequestTimeout with default headers values
func NewPatchConversationsEmailParticipantCommunicationRequestTimeout() *PatchConversationsEmailParticipantCommunicationRequestTimeout {
	return &PatchConversationsEmailParticipantCommunicationRequestTimeout{}
}

/*PatchConversationsEmailParticipantCommunicationRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PatchConversationsEmailParticipantCommunicationRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationsEmailParticipantCommunicationRequestTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}][%d] patchConversationsEmailParticipantCommunicationRequestTimeout  %+v", 408, o.Payload)
}

func (o *PatchConversationsEmailParticipantCommunicationRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsEmailParticipantCommunicationRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsEmailParticipantCommunicationRequestEntityTooLarge creates a PatchConversationsEmailParticipantCommunicationRequestEntityTooLarge with default headers values
func NewPatchConversationsEmailParticipantCommunicationRequestEntityTooLarge() *PatchConversationsEmailParticipantCommunicationRequestEntityTooLarge {
	return &PatchConversationsEmailParticipantCommunicationRequestEntityTooLarge{}
}

/*PatchConversationsEmailParticipantCommunicationRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PatchConversationsEmailParticipantCommunicationRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationsEmailParticipantCommunicationRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}][%d] patchConversationsEmailParticipantCommunicationRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PatchConversationsEmailParticipantCommunicationRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsEmailParticipantCommunicationRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsEmailParticipantCommunicationUnsupportedMediaType creates a PatchConversationsEmailParticipantCommunicationUnsupportedMediaType with default headers values
func NewPatchConversationsEmailParticipantCommunicationUnsupportedMediaType() *PatchConversationsEmailParticipantCommunicationUnsupportedMediaType {
	return &PatchConversationsEmailParticipantCommunicationUnsupportedMediaType{}
}

/*PatchConversationsEmailParticipantCommunicationUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PatchConversationsEmailParticipantCommunicationUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationsEmailParticipantCommunicationUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}][%d] patchConversationsEmailParticipantCommunicationUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchConversationsEmailParticipantCommunicationUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsEmailParticipantCommunicationUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsEmailParticipantCommunicationTooManyRequests creates a PatchConversationsEmailParticipantCommunicationTooManyRequests with default headers values
func NewPatchConversationsEmailParticipantCommunicationTooManyRequests() *PatchConversationsEmailParticipantCommunicationTooManyRequests {
	return &PatchConversationsEmailParticipantCommunicationTooManyRequests{}
}

/*PatchConversationsEmailParticipantCommunicationTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PatchConversationsEmailParticipantCommunicationTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationsEmailParticipantCommunicationTooManyRequests) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}][%d] patchConversationsEmailParticipantCommunicationTooManyRequests  %+v", 429, o.Payload)
}

func (o *PatchConversationsEmailParticipantCommunicationTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsEmailParticipantCommunicationTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsEmailParticipantCommunicationInternalServerError creates a PatchConversationsEmailParticipantCommunicationInternalServerError with default headers values
func NewPatchConversationsEmailParticipantCommunicationInternalServerError() *PatchConversationsEmailParticipantCommunicationInternalServerError {
	return &PatchConversationsEmailParticipantCommunicationInternalServerError{}
}

/*PatchConversationsEmailParticipantCommunicationInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PatchConversationsEmailParticipantCommunicationInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationsEmailParticipantCommunicationInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}][%d] patchConversationsEmailParticipantCommunicationInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchConversationsEmailParticipantCommunicationInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsEmailParticipantCommunicationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsEmailParticipantCommunicationServiceUnavailable creates a PatchConversationsEmailParticipantCommunicationServiceUnavailable with default headers values
func NewPatchConversationsEmailParticipantCommunicationServiceUnavailable() *PatchConversationsEmailParticipantCommunicationServiceUnavailable {
	return &PatchConversationsEmailParticipantCommunicationServiceUnavailable{}
}

/*PatchConversationsEmailParticipantCommunicationServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PatchConversationsEmailParticipantCommunicationServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationsEmailParticipantCommunicationServiceUnavailable) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}][%d] patchConversationsEmailParticipantCommunicationServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PatchConversationsEmailParticipantCommunicationServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsEmailParticipantCommunicationServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsEmailParticipantCommunicationGatewayTimeout creates a PatchConversationsEmailParticipantCommunicationGatewayTimeout with default headers values
func NewPatchConversationsEmailParticipantCommunicationGatewayTimeout() *PatchConversationsEmailParticipantCommunicationGatewayTimeout {
	return &PatchConversationsEmailParticipantCommunicationGatewayTimeout{}
}

/*PatchConversationsEmailParticipantCommunicationGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PatchConversationsEmailParticipantCommunicationGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationsEmailParticipantCommunicationGatewayTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}][%d] patchConversationsEmailParticipantCommunicationGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PatchConversationsEmailParticipantCommunicationGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsEmailParticipantCommunicationGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
