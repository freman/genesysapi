// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PatchConversationsCallParticipantAttributesReader is a Reader for the PatchConversationsCallParticipantAttributes structure.
type PatchConversationsCallParticipantAttributesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchConversationsCallParticipantAttributesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewPatchConversationsCallParticipantAttributesAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchConversationsCallParticipantAttributesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPatchConversationsCallParticipantAttributesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchConversationsCallParticipantAttributesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchConversationsCallParticipantAttributesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPatchConversationsCallParticipantAttributesRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPatchConversationsCallParticipantAttributesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPatchConversationsCallParticipantAttributesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPatchConversationsCallParticipantAttributesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchConversationsCallParticipantAttributesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPatchConversationsCallParticipantAttributesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPatchConversationsCallParticipantAttributesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchConversationsCallParticipantAttributesAccepted creates a PatchConversationsCallParticipantAttributesAccepted with default headers values
func NewPatchConversationsCallParticipantAttributesAccepted() *PatchConversationsCallParticipantAttributesAccepted {
	return &PatchConversationsCallParticipantAttributesAccepted{}
}

/*
PatchConversationsCallParticipantAttributesAccepted describes a response with status code 202, with default header values.

Accepted
*/
type PatchConversationsCallParticipantAttributesAccepted struct {
}

// IsSuccess returns true when this patch conversations call participant attributes accepted response has a 2xx status code
func (o *PatchConversationsCallParticipantAttributesAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this patch conversations call participant attributes accepted response has a 3xx status code
func (o *PatchConversationsCallParticipantAttributesAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch conversations call participant attributes accepted response has a 4xx status code
func (o *PatchConversationsCallParticipantAttributesAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch conversations call participant attributes accepted response has a 5xx status code
func (o *PatchConversationsCallParticipantAttributesAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this patch conversations call participant attributes accepted response a status code equal to that given
func (o *PatchConversationsCallParticipantAttributesAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *PatchConversationsCallParticipantAttributesAccepted) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/calls/{conversationId}/participants/{participantId}/attributes][%d] patchConversationsCallParticipantAttributesAccepted ", 202)
}

func (o *PatchConversationsCallParticipantAttributesAccepted) String() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/calls/{conversationId}/participants/{participantId}/attributes][%d] patchConversationsCallParticipantAttributesAccepted ", 202)
}

func (o *PatchConversationsCallParticipantAttributesAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchConversationsCallParticipantAttributesBadRequest creates a PatchConversationsCallParticipantAttributesBadRequest with default headers values
func NewPatchConversationsCallParticipantAttributesBadRequest() *PatchConversationsCallParticipantAttributesBadRequest {
	return &PatchConversationsCallParticipantAttributesBadRequest{}
}

/*
PatchConversationsCallParticipantAttributesBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PatchConversationsCallParticipantAttributesBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch conversations call participant attributes bad request response has a 2xx status code
func (o *PatchConversationsCallParticipantAttributesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch conversations call participant attributes bad request response has a 3xx status code
func (o *PatchConversationsCallParticipantAttributesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch conversations call participant attributes bad request response has a 4xx status code
func (o *PatchConversationsCallParticipantAttributesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch conversations call participant attributes bad request response has a 5xx status code
func (o *PatchConversationsCallParticipantAttributesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this patch conversations call participant attributes bad request response a status code equal to that given
func (o *PatchConversationsCallParticipantAttributesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PatchConversationsCallParticipantAttributesBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/calls/{conversationId}/participants/{participantId}/attributes][%d] patchConversationsCallParticipantAttributesBadRequest  %+v", 400, o.Payload)
}

func (o *PatchConversationsCallParticipantAttributesBadRequest) String() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/calls/{conversationId}/participants/{participantId}/attributes][%d] patchConversationsCallParticipantAttributesBadRequest  %+v", 400, o.Payload)
}

func (o *PatchConversationsCallParticipantAttributesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsCallParticipantAttributesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsCallParticipantAttributesUnauthorized creates a PatchConversationsCallParticipantAttributesUnauthorized with default headers values
func NewPatchConversationsCallParticipantAttributesUnauthorized() *PatchConversationsCallParticipantAttributesUnauthorized {
	return &PatchConversationsCallParticipantAttributesUnauthorized{}
}

/*
PatchConversationsCallParticipantAttributesUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PatchConversationsCallParticipantAttributesUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch conversations call participant attributes unauthorized response has a 2xx status code
func (o *PatchConversationsCallParticipantAttributesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch conversations call participant attributes unauthorized response has a 3xx status code
func (o *PatchConversationsCallParticipantAttributesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch conversations call participant attributes unauthorized response has a 4xx status code
func (o *PatchConversationsCallParticipantAttributesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch conversations call participant attributes unauthorized response has a 5xx status code
func (o *PatchConversationsCallParticipantAttributesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this patch conversations call participant attributes unauthorized response a status code equal to that given
func (o *PatchConversationsCallParticipantAttributesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PatchConversationsCallParticipantAttributesUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/calls/{conversationId}/participants/{participantId}/attributes][%d] patchConversationsCallParticipantAttributesUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchConversationsCallParticipantAttributesUnauthorized) String() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/calls/{conversationId}/participants/{participantId}/attributes][%d] patchConversationsCallParticipantAttributesUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchConversationsCallParticipantAttributesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsCallParticipantAttributesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsCallParticipantAttributesForbidden creates a PatchConversationsCallParticipantAttributesForbidden with default headers values
func NewPatchConversationsCallParticipantAttributesForbidden() *PatchConversationsCallParticipantAttributesForbidden {
	return &PatchConversationsCallParticipantAttributesForbidden{}
}

/*
PatchConversationsCallParticipantAttributesForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PatchConversationsCallParticipantAttributesForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch conversations call participant attributes forbidden response has a 2xx status code
func (o *PatchConversationsCallParticipantAttributesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch conversations call participant attributes forbidden response has a 3xx status code
func (o *PatchConversationsCallParticipantAttributesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch conversations call participant attributes forbidden response has a 4xx status code
func (o *PatchConversationsCallParticipantAttributesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch conversations call participant attributes forbidden response has a 5xx status code
func (o *PatchConversationsCallParticipantAttributesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this patch conversations call participant attributes forbidden response a status code equal to that given
func (o *PatchConversationsCallParticipantAttributesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PatchConversationsCallParticipantAttributesForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/calls/{conversationId}/participants/{participantId}/attributes][%d] patchConversationsCallParticipantAttributesForbidden  %+v", 403, o.Payload)
}

func (o *PatchConversationsCallParticipantAttributesForbidden) String() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/calls/{conversationId}/participants/{participantId}/attributes][%d] patchConversationsCallParticipantAttributesForbidden  %+v", 403, o.Payload)
}

func (o *PatchConversationsCallParticipantAttributesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsCallParticipantAttributesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsCallParticipantAttributesNotFound creates a PatchConversationsCallParticipantAttributesNotFound with default headers values
func NewPatchConversationsCallParticipantAttributesNotFound() *PatchConversationsCallParticipantAttributesNotFound {
	return &PatchConversationsCallParticipantAttributesNotFound{}
}

/*
PatchConversationsCallParticipantAttributesNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PatchConversationsCallParticipantAttributesNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch conversations call participant attributes not found response has a 2xx status code
func (o *PatchConversationsCallParticipantAttributesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch conversations call participant attributes not found response has a 3xx status code
func (o *PatchConversationsCallParticipantAttributesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch conversations call participant attributes not found response has a 4xx status code
func (o *PatchConversationsCallParticipantAttributesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch conversations call participant attributes not found response has a 5xx status code
func (o *PatchConversationsCallParticipantAttributesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this patch conversations call participant attributes not found response a status code equal to that given
func (o *PatchConversationsCallParticipantAttributesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PatchConversationsCallParticipantAttributesNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/calls/{conversationId}/participants/{participantId}/attributes][%d] patchConversationsCallParticipantAttributesNotFound  %+v", 404, o.Payload)
}

func (o *PatchConversationsCallParticipantAttributesNotFound) String() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/calls/{conversationId}/participants/{participantId}/attributes][%d] patchConversationsCallParticipantAttributesNotFound  %+v", 404, o.Payload)
}

func (o *PatchConversationsCallParticipantAttributesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsCallParticipantAttributesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsCallParticipantAttributesRequestTimeout creates a PatchConversationsCallParticipantAttributesRequestTimeout with default headers values
func NewPatchConversationsCallParticipantAttributesRequestTimeout() *PatchConversationsCallParticipantAttributesRequestTimeout {
	return &PatchConversationsCallParticipantAttributesRequestTimeout{}
}

/*
PatchConversationsCallParticipantAttributesRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PatchConversationsCallParticipantAttributesRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch conversations call participant attributes request timeout response has a 2xx status code
func (o *PatchConversationsCallParticipantAttributesRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch conversations call participant attributes request timeout response has a 3xx status code
func (o *PatchConversationsCallParticipantAttributesRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch conversations call participant attributes request timeout response has a 4xx status code
func (o *PatchConversationsCallParticipantAttributesRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch conversations call participant attributes request timeout response has a 5xx status code
func (o *PatchConversationsCallParticipantAttributesRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this patch conversations call participant attributes request timeout response a status code equal to that given
func (o *PatchConversationsCallParticipantAttributesRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PatchConversationsCallParticipantAttributesRequestTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/calls/{conversationId}/participants/{participantId}/attributes][%d] patchConversationsCallParticipantAttributesRequestTimeout  %+v", 408, o.Payload)
}

func (o *PatchConversationsCallParticipantAttributesRequestTimeout) String() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/calls/{conversationId}/participants/{participantId}/attributes][%d] patchConversationsCallParticipantAttributesRequestTimeout  %+v", 408, o.Payload)
}

func (o *PatchConversationsCallParticipantAttributesRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsCallParticipantAttributesRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsCallParticipantAttributesRequestEntityTooLarge creates a PatchConversationsCallParticipantAttributesRequestEntityTooLarge with default headers values
func NewPatchConversationsCallParticipantAttributesRequestEntityTooLarge() *PatchConversationsCallParticipantAttributesRequestEntityTooLarge {
	return &PatchConversationsCallParticipantAttributesRequestEntityTooLarge{}
}

/*
PatchConversationsCallParticipantAttributesRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PatchConversationsCallParticipantAttributesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch conversations call participant attributes request entity too large response has a 2xx status code
func (o *PatchConversationsCallParticipantAttributesRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch conversations call participant attributes request entity too large response has a 3xx status code
func (o *PatchConversationsCallParticipantAttributesRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch conversations call participant attributes request entity too large response has a 4xx status code
func (o *PatchConversationsCallParticipantAttributesRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch conversations call participant attributes request entity too large response has a 5xx status code
func (o *PatchConversationsCallParticipantAttributesRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this patch conversations call participant attributes request entity too large response a status code equal to that given
func (o *PatchConversationsCallParticipantAttributesRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PatchConversationsCallParticipantAttributesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/calls/{conversationId}/participants/{participantId}/attributes][%d] patchConversationsCallParticipantAttributesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PatchConversationsCallParticipantAttributesRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/calls/{conversationId}/participants/{participantId}/attributes][%d] patchConversationsCallParticipantAttributesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PatchConversationsCallParticipantAttributesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsCallParticipantAttributesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsCallParticipantAttributesUnsupportedMediaType creates a PatchConversationsCallParticipantAttributesUnsupportedMediaType with default headers values
func NewPatchConversationsCallParticipantAttributesUnsupportedMediaType() *PatchConversationsCallParticipantAttributesUnsupportedMediaType {
	return &PatchConversationsCallParticipantAttributesUnsupportedMediaType{}
}

/*
PatchConversationsCallParticipantAttributesUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PatchConversationsCallParticipantAttributesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch conversations call participant attributes unsupported media type response has a 2xx status code
func (o *PatchConversationsCallParticipantAttributesUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch conversations call participant attributes unsupported media type response has a 3xx status code
func (o *PatchConversationsCallParticipantAttributesUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch conversations call participant attributes unsupported media type response has a 4xx status code
func (o *PatchConversationsCallParticipantAttributesUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch conversations call participant attributes unsupported media type response has a 5xx status code
func (o *PatchConversationsCallParticipantAttributesUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this patch conversations call participant attributes unsupported media type response a status code equal to that given
func (o *PatchConversationsCallParticipantAttributesUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PatchConversationsCallParticipantAttributesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/calls/{conversationId}/participants/{participantId}/attributes][%d] patchConversationsCallParticipantAttributesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchConversationsCallParticipantAttributesUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/calls/{conversationId}/participants/{participantId}/attributes][%d] patchConversationsCallParticipantAttributesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchConversationsCallParticipantAttributesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsCallParticipantAttributesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsCallParticipantAttributesTooManyRequests creates a PatchConversationsCallParticipantAttributesTooManyRequests with default headers values
func NewPatchConversationsCallParticipantAttributesTooManyRequests() *PatchConversationsCallParticipantAttributesTooManyRequests {
	return &PatchConversationsCallParticipantAttributesTooManyRequests{}
}

/*
PatchConversationsCallParticipantAttributesTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PatchConversationsCallParticipantAttributesTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch conversations call participant attributes too many requests response has a 2xx status code
func (o *PatchConversationsCallParticipantAttributesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch conversations call participant attributes too many requests response has a 3xx status code
func (o *PatchConversationsCallParticipantAttributesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch conversations call participant attributes too many requests response has a 4xx status code
func (o *PatchConversationsCallParticipantAttributesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch conversations call participant attributes too many requests response has a 5xx status code
func (o *PatchConversationsCallParticipantAttributesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this patch conversations call participant attributes too many requests response a status code equal to that given
func (o *PatchConversationsCallParticipantAttributesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PatchConversationsCallParticipantAttributesTooManyRequests) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/calls/{conversationId}/participants/{participantId}/attributes][%d] patchConversationsCallParticipantAttributesTooManyRequests  %+v", 429, o.Payload)
}

func (o *PatchConversationsCallParticipantAttributesTooManyRequests) String() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/calls/{conversationId}/participants/{participantId}/attributes][%d] patchConversationsCallParticipantAttributesTooManyRequests  %+v", 429, o.Payload)
}

func (o *PatchConversationsCallParticipantAttributesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsCallParticipantAttributesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsCallParticipantAttributesInternalServerError creates a PatchConversationsCallParticipantAttributesInternalServerError with default headers values
func NewPatchConversationsCallParticipantAttributesInternalServerError() *PatchConversationsCallParticipantAttributesInternalServerError {
	return &PatchConversationsCallParticipantAttributesInternalServerError{}
}

/*
PatchConversationsCallParticipantAttributesInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PatchConversationsCallParticipantAttributesInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch conversations call participant attributes internal server error response has a 2xx status code
func (o *PatchConversationsCallParticipantAttributesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch conversations call participant attributes internal server error response has a 3xx status code
func (o *PatchConversationsCallParticipantAttributesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch conversations call participant attributes internal server error response has a 4xx status code
func (o *PatchConversationsCallParticipantAttributesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch conversations call participant attributes internal server error response has a 5xx status code
func (o *PatchConversationsCallParticipantAttributesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this patch conversations call participant attributes internal server error response a status code equal to that given
func (o *PatchConversationsCallParticipantAttributesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PatchConversationsCallParticipantAttributesInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/calls/{conversationId}/participants/{participantId}/attributes][%d] patchConversationsCallParticipantAttributesInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchConversationsCallParticipantAttributesInternalServerError) String() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/calls/{conversationId}/participants/{participantId}/attributes][%d] patchConversationsCallParticipantAttributesInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchConversationsCallParticipantAttributesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsCallParticipantAttributesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsCallParticipantAttributesServiceUnavailable creates a PatchConversationsCallParticipantAttributesServiceUnavailable with default headers values
func NewPatchConversationsCallParticipantAttributesServiceUnavailable() *PatchConversationsCallParticipantAttributesServiceUnavailable {
	return &PatchConversationsCallParticipantAttributesServiceUnavailable{}
}

/*
PatchConversationsCallParticipantAttributesServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PatchConversationsCallParticipantAttributesServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch conversations call participant attributes service unavailable response has a 2xx status code
func (o *PatchConversationsCallParticipantAttributesServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch conversations call participant attributes service unavailable response has a 3xx status code
func (o *PatchConversationsCallParticipantAttributesServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch conversations call participant attributes service unavailable response has a 4xx status code
func (o *PatchConversationsCallParticipantAttributesServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch conversations call participant attributes service unavailable response has a 5xx status code
func (o *PatchConversationsCallParticipantAttributesServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this patch conversations call participant attributes service unavailable response a status code equal to that given
func (o *PatchConversationsCallParticipantAttributesServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PatchConversationsCallParticipantAttributesServiceUnavailable) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/calls/{conversationId}/participants/{participantId}/attributes][%d] patchConversationsCallParticipantAttributesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PatchConversationsCallParticipantAttributesServiceUnavailable) String() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/calls/{conversationId}/participants/{participantId}/attributes][%d] patchConversationsCallParticipantAttributesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PatchConversationsCallParticipantAttributesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsCallParticipantAttributesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsCallParticipantAttributesGatewayTimeout creates a PatchConversationsCallParticipantAttributesGatewayTimeout with default headers values
func NewPatchConversationsCallParticipantAttributesGatewayTimeout() *PatchConversationsCallParticipantAttributesGatewayTimeout {
	return &PatchConversationsCallParticipantAttributesGatewayTimeout{}
}

/*
PatchConversationsCallParticipantAttributesGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PatchConversationsCallParticipantAttributesGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch conversations call participant attributes gateway timeout response has a 2xx status code
func (o *PatchConversationsCallParticipantAttributesGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch conversations call participant attributes gateway timeout response has a 3xx status code
func (o *PatchConversationsCallParticipantAttributesGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch conversations call participant attributes gateway timeout response has a 4xx status code
func (o *PatchConversationsCallParticipantAttributesGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch conversations call participant attributes gateway timeout response has a 5xx status code
func (o *PatchConversationsCallParticipantAttributesGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this patch conversations call participant attributes gateway timeout response a status code equal to that given
func (o *PatchConversationsCallParticipantAttributesGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PatchConversationsCallParticipantAttributesGatewayTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/calls/{conversationId}/participants/{participantId}/attributes][%d] patchConversationsCallParticipantAttributesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PatchConversationsCallParticipantAttributesGatewayTimeout) String() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/calls/{conversationId}/participants/{participantId}/attributes][%d] patchConversationsCallParticipantAttributesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PatchConversationsCallParticipantAttributesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsCallParticipantAttributesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
