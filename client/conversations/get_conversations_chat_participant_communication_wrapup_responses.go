// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetConversationsChatParticipantCommunicationWrapupReader is a Reader for the GetConversationsChatParticipantCommunicationWrapup structure.
type GetConversationsChatParticipantCommunicationWrapupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConversationsChatParticipantCommunicationWrapupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConversationsChatParticipantCommunicationWrapupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetConversationsChatParticipantCommunicationWrapupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetConversationsChatParticipantCommunicationWrapupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetConversationsChatParticipantCommunicationWrapupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetConversationsChatParticipantCommunicationWrapupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetConversationsChatParticipantCommunicationWrapupRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetConversationsChatParticipantCommunicationWrapupRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetConversationsChatParticipantCommunicationWrapupUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetConversationsChatParticipantCommunicationWrapupTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetConversationsChatParticipantCommunicationWrapupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetConversationsChatParticipantCommunicationWrapupServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetConversationsChatParticipantCommunicationWrapupGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetConversationsChatParticipantCommunicationWrapupOK creates a GetConversationsChatParticipantCommunicationWrapupOK with default headers values
func NewGetConversationsChatParticipantCommunicationWrapupOK() *GetConversationsChatParticipantCommunicationWrapupOK {
	return &GetConversationsChatParticipantCommunicationWrapupOK{}
}

/*
GetConversationsChatParticipantCommunicationWrapupOK describes a response with status code 200, with default header values.

successful operation
*/
type GetConversationsChatParticipantCommunicationWrapupOK struct {
	Payload *models.AssignedWrapupCode
}

// IsSuccess returns true when this get conversations chat participant communication wrapup o k response has a 2xx status code
func (o *GetConversationsChatParticipantCommunicationWrapupOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get conversations chat participant communication wrapup o k response has a 3xx status code
func (o *GetConversationsChatParticipantCommunicationWrapupOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations chat participant communication wrapup o k response has a 4xx status code
func (o *GetConversationsChatParticipantCommunicationWrapupOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations chat participant communication wrapup o k response has a 5xx status code
func (o *GetConversationsChatParticipantCommunicationWrapupOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations chat participant communication wrapup o k response a status code equal to that given
func (o *GetConversationsChatParticipantCommunicationWrapupOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetConversationsChatParticipantCommunicationWrapupOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/chats/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsChatParticipantCommunicationWrapupOK  %+v", 200, o.Payload)
}

func (o *GetConversationsChatParticipantCommunicationWrapupOK) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/chats/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsChatParticipantCommunicationWrapupOK  %+v", 200, o.Payload)
}

func (o *GetConversationsChatParticipantCommunicationWrapupOK) GetPayload() *models.AssignedWrapupCode {
	return o.Payload
}

func (o *GetConversationsChatParticipantCommunicationWrapupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AssignedWrapupCode)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsChatParticipantCommunicationWrapupBadRequest creates a GetConversationsChatParticipantCommunicationWrapupBadRequest with default headers values
func NewGetConversationsChatParticipantCommunicationWrapupBadRequest() *GetConversationsChatParticipantCommunicationWrapupBadRequest {
	return &GetConversationsChatParticipantCommunicationWrapupBadRequest{}
}

/*
GetConversationsChatParticipantCommunicationWrapupBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetConversationsChatParticipantCommunicationWrapupBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations chat participant communication wrapup bad request response has a 2xx status code
func (o *GetConversationsChatParticipantCommunicationWrapupBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations chat participant communication wrapup bad request response has a 3xx status code
func (o *GetConversationsChatParticipantCommunicationWrapupBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations chat participant communication wrapup bad request response has a 4xx status code
func (o *GetConversationsChatParticipantCommunicationWrapupBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations chat participant communication wrapup bad request response has a 5xx status code
func (o *GetConversationsChatParticipantCommunicationWrapupBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations chat participant communication wrapup bad request response a status code equal to that given
func (o *GetConversationsChatParticipantCommunicationWrapupBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetConversationsChatParticipantCommunicationWrapupBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/chats/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsChatParticipantCommunicationWrapupBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsChatParticipantCommunicationWrapupBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/chats/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsChatParticipantCommunicationWrapupBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsChatParticipantCommunicationWrapupBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsChatParticipantCommunicationWrapupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsChatParticipantCommunicationWrapupUnauthorized creates a GetConversationsChatParticipantCommunicationWrapupUnauthorized with default headers values
func NewGetConversationsChatParticipantCommunicationWrapupUnauthorized() *GetConversationsChatParticipantCommunicationWrapupUnauthorized {
	return &GetConversationsChatParticipantCommunicationWrapupUnauthorized{}
}

/*
GetConversationsChatParticipantCommunicationWrapupUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetConversationsChatParticipantCommunicationWrapupUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations chat participant communication wrapup unauthorized response has a 2xx status code
func (o *GetConversationsChatParticipantCommunicationWrapupUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations chat participant communication wrapup unauthorized response has a 3xx status code
func (o *GetConversationsChatParticipantCommunicationWrapupUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations chat participant communication wrapup unauthorized response has a 4xx status code
func (o *GetConversationsChatParticipantCommunicationWrapupUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations chat participant communication wrapup unauthorized response has a 5xx status code
func (o *GetConversationsChatParticipantCommunicationWrapupUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations chat participant communication wrapup unauthorized response a status code equal to that given
func (o *GetConversationsChatParticipantCommunicationWrapupUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetConversationsChatParticipantCommunicationWrapupUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/chats/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsChatParticipantCommunicationWrapupUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsChatParticipantCommunicationWrapupUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/chats/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsChatParticipantCommunicationWrapupUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsChatParticipantCommunicationWrapupUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsChatParticipantCommunicationWrapupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsChatParticipantCommunicationWrapupForbidden creates a GetConversationsChatParticipantCommunicationWrapupForbidden with default headers values
func NewGetConversationsChatParticipantCommunicationWrapupForbidden() *GetConversationsChatParticipantCommunicationWrapupForbidden {
	return &GetConversationsChatParticipantCommunicationWrapupForbidden{}
}

/*
GetConversationsChatParticipantCommunicationWrapupForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetConversationsChatParticipantCommunicationWrapupForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations chat participant communication wrapup forbidden response has a 2xx status code
func (o *GetConversationsChatParticipantCommunicationWrapupForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations chat participant communication wrapup forbidden response has a 3xx status code
func (o *GetConversationsChatParticipantCommunicationWrapupForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations chat participant communication wrapup forbidden response has a 4xx status code
func (o *GetConversationsChatParticipantCommunicationWrapupForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations chat participant communication wrapup forbidden response has a 5xx status code
func (o *GetConversationsChatParticipantCommunicationWrapupForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations chat participant communication wrapup forbidden response a status code equal to that given
func (o *GetConversationsChatParticipantCommunicationWrapupForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetConversationsChatParticipantCommunicationWrapupForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/chats/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsChatParticipantCommunicationWrapupForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsChatParticipantCommunicationWrapupForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/chats/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsChatParticipantCommunicationWrapupForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsChatParticipantCommunicationWrapupForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsChatParticipantCommunicationWrapupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsChatParticipantCommunicationWrapupNotFound creates a GetConversationsChatParticipantCommunicationWrapupNotFound with default headers values
func NewGetConversationsChatParticipantCommunicationWrapupNotFound() *GetConversationsChatParticipantCommunicationWrapupNotFound {
	return &GetConversationsChatParticipantCommunicationWrapupNotFound{}
}

/*
GetConversationsChatParticipantCommunicationWrapupNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetConversationsChatParticipantCommunicationWrapupNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations chat participant communication wrapup not found response has a 2xx status code
func (o *GetConversationsChatParticipantCommunicationWrapupNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations chat participant communication wrapup not found response has a 3xx status code
func (o *GetConversationsChatParticipantCommunicationWrapupNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations chat participant communication wrapup not found response has a 4xx status code
func (o *GetConversationsChatParticipantCommunicationWrapupNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations chat participant communication wrapup not found response has a 5xx status code
func (o *GetConversationsChatParticipantCommunicationWrapupNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations chat participant communication wrapup not found response a status code equal to that given
func (o *GetConversationsChatParticipantCommunicationWrapupNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetConversationsChatParticipantCommunicationWrapupNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/chats/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsChatParticipantCommunicationWrapupNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsChatParticipantCommunicationWrapupNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/chats/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsChatParticipantCommunicationWrapupNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsChatParticipantCommunicationWrapupNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsChatParticipantCommunicationWrapupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsChatParticipantCommunicationWrapupRequestTimeout creates a GetConversationsChatParticipantCommunicationWrapupRequestTimeout with default headers values
func NewGetConversationsChatParticipantCommunicationWrapupRequestTimeout() *GetConversationsChatParticipantCommunicationWrapupRequestTimeout {
	return &GetConversationsChatParticipantCommunicationWrapupRequestTimeout{}
}

/*
GetConversationsChatParticipantCommunicationWrapupRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetConversationsChatParticipantCommunicationWrapupRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations chat participant communication wrapup request timeout response has a 2xx status code
func (o *GetConversationsChatParticipantCommunicationWrapupRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations chat participant communication wrapup request timeout response has a 3xx status code
func (o *GetConversationsChatParticipantCommunicationWrapupRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations chat participant communication wrapup request timeout response has a 4xx status code
func (o *GetConversationsChatParticipantCommunicationWrapupRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations chat participant communication wrapup request timeout response has a 5xx status code
func (o *GetConversationsChatParticipantCommunicationWrapupRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations chat participant communication wrapup request timeout response a status code equal to that given
func (o *GetConversationsChatParticipantCommunicationWrapupRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetConversationsChatParticipantCommunicationWrapupRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/chats/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsChatParticipantCommunicationWrapupRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationsChatParticipantCommunicationWrapupRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/chats/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsChatParticipantCommunicationWrapupRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationsChatParticipantCommunicationWrapupRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsChatParticipantCommunicationWrapupRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsChatParticipantCommunicationWrapupRequestEntityTooLarge creates a GetConversationsChatParticipantCommunicationWrapupRequestEntityTooLarge with default headers values
func NewGetConversationsChatParticipantCommunicationWrapupRequestEntityTooLarge() *GetConversationsChatParticipantCommunicationWrapupRequestEntityTooLarge {
	return &GetConversationsChatParticipantCommunicationWrapupRequestEntityTooLarge{}
}

/*
GetConversationsChatParticipantCommunicationWrapupRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetConversationsChatParticipantCommunicationWrapupRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations chat participant communication wrapup request entity too large response has a 2xx status code
func (o *GetConversationsChatParticipantCommunicationWrapupRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations chat participant communication wrapup request entity too large response has a 3xx status code
func (o *GetConversationsChatParticipantCommunicationWrapupRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations chat participant communication wrapup request entity too large response has a 4xx status code
func (o *GetConversationsChatParticipantCommunicationWrapupRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations chat participant communication wrapup request entity too large response has a 5xx status code
func (o *GetConversationsChatParticipantCommunicationWrapupRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations chat participant communication wrapup request entity too large response a status code equal to that given
func (o *GetConversationsChatParticipantCommunicationWrapupRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetConversationsChatParticipantCommunicationWrapupRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/chats/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsChatParticipantCommunicationWrapupRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsChatParticipantCommunicationWrapupRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/chats/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsChatParticipantCommunicationWrapupRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsChatParticipantCommunicationWrapupRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsChatParticipantCommunicationWrapupRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsChatParticipantCommunicationWrapupUnsupportedMediaType creates a GetConversationsChatParticipantCommunicationWrapupUnsupportedMediaType with default headers values
func NewGetConversationsChatParticipantCommunicationWrapupUnsupportedMediaType() *GetConversationsChatParticipantCommunicationWrapupUnsupportedMediaType {
	return &GetConversationsChatParticipantCommunicationWrapupUnsupportedMediaType{}
}

/*
GetConversationsChatParticipantCommunicationWrapupUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetConversationsChatParticipantCommunicationWrapupUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations chat participant communication wrapup unsupported media type response has a 2xx status code
func (o *GetConversationsChatParticipantCommunicationWrapupUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations chat participant communication wrapup unsupported media type response has a 3xx status code
func (o *GetConversationsChatParticipantCommunicationWrapupUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations chat participant communication wrapup unsupported media type response has a 4xx status code
func (o *GetConversationsChatParticipantCommunicationWrapupUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations chat participant communication wrapup unsupported media type response has a 5xx status code
func (o *GetConversationsChatParticipantCommunicationWrapupUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations chat participant communication wrapup unsupported media type response a status code equal to that given
func (o *GetConversationsChatParticipantCommunicationWrapupUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetConversationsChatParticipantCommunicationWrapupUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/chats/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsChatParticipantCommunicationWrapupUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsChatParticipantCommunicationWrapupUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/chats/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsChatParticipantCommunicationWrapupUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsChatParticipantCommunicationWrapupUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsChatParticipantCommunicationWrapupUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsChatParticipantCommunicationWrapupTooManyRequests creates a GetConversationsChatParticipantCommunicationWrapupTooManyRequests with default headers values
func NewGetConversationsChatParticipantCommunicationWrapupTooManyRequests() *GetConversationsChatParticipantCommunicationWrapupTooManyRequests {
	return &GetConversationsChatParticipantCommunicationWrapupTooManyRequests{}
}

/*
GetConversationsChatParticipantCommunicationWrapupTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetConversationsChatParticipantCommunicationWrapupTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations chat participant communication wrapup too many requests response has a 2xx status code
func (o *GetConversationsChatParticipantCommunicationWrapupTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations chat participant communication wrapup too many requests response has a 3xx status code
func (o *GetConversationsChatParticipantCommunicationWrapupTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations chat participant communication wrapup too many requests response has a 4xx status code
func (o *GetConversationsChatParticipantCommunicationWrapupTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations chat participant communication wrapup too many requests response has a 5xx status code
func (o *GetConversationsChatParticipantCommunicationWrapupTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations chat participant communication wrapup too many requests response a status code equal to that given
func (o *GetConversationsChatParticipantCommunicationWrapupTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetConversationsChatParticipantCommunicationWrapupTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/chats/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsChatParticipantCommunicationWrapupTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsChatParticipantCommunicationWrapupTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/chats/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsChatParticipantCommunicationWrapupTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsChatParticipantCommunicationWrapupTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsChatParticipantCommunicationWrapupTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsChatParticipantCommunicationWrapupInternalServerError creates a GetConversationsChatParticipantCommunicationWrapupInternalServerError with default headers values
func NewGetConversationsChatParticipantCommunicationWrapupInternalServerError() *GetConversationsChatParticipantCommunicationWrapupInternalServerError {
	return &GetConversationsChatParticipantCommunicationWrapupInternalServerError{}
}

/*
GetConversationsChatParticipantCommunicationWrapupInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetConversationsChatParticipantCommunicationWrapupInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations chat participant communication wrapup internal server error response has a 2xx status code
func (o *GetConversationsChatParticipantCommunicationWrapupInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations chat participant communication wrapup internal server error response has a 3xx status code
func (o *GetConversationsChatParticipantCommunicationWrapupInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations chat participant communication wrapup internal server error response has a 4xx status code
func (o *GetConversationsChatParticipantCommunicationWrapupInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations chat participant communication wrapup internal server error response has a 5xx status code
func (o *GetConversationsChatParticipantCommunicationWrapupInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations chat participant communication wrapup internal server error response a status code equal to that given
func (o *GetConversationsChatParticipantCommunicationWrapupInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetConversationsChatParticipantCommunicationWrapupInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/chats/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsChatParticipantCommunicationWrapupInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsChatParticipantCommunicationWrapupInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/chats/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsChatParticipantCommunicationWrapupInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsChatParticipantCommunicationWrapupInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsChatParticipantCommunicationWrapupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsChatParticipantCommunicationWrapupServiceUnavailable creates a GetConversationsChatParticipantCommunicationWrapupServiceUnavailable with default headers values
func NewGetConversationsChatParticipantCommunicationWrapupServiceUnavailable() *GetConversationsChatParticipantCommunicationWrapupServiceUnavailable {
	return &GetConversationsChatParticipantCommunicationWrapupServiceUnavailable{}
}

/*
GetConversationsChatParticipantCommunicationWrapupServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetConversationsChatParticipantCommunicationWrapupServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations chat participant communication wrapup service unavailable response has a 2xx status code
func (o *GetConversationsChatParticipantCommunicationWrapupServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations chat participant communication wrapup service unavailable response has a 3xx status code
func (o *GetConversationsChatParticipantCommunicationWrapupServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations chat participant communication wrapup service unavailable response has a 4xx status code
func (o *GetConversationsChatParticipantCommunicationWrapupServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations chat participant communication wrapup service unavailable response has a 5xx status code
func (o *GetConversationsChatParticipantCommunicationWrapupServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations chat participant communication wrapup service unavailable response a status code equal to that given
func (o *GetConversationsChatParticipantCommunicationWrapupServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetConversationsChatParticipantCommunicationWrapupServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/chats/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsChatParticipantCommunicationWrapupServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsChatParticipantCommunicationWrapupServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/chats/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsChatParticipantCommunicationWrapupServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsChatParticipantCommunicationWrapupServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsChatParticipantCommunicationWrapupServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsChatParticipantCommunicationWrapupGatewayTimeout creates a GetConversationsChatParticipantCommunicationWrapupGatewayTimeout with default headers values
func NewGetConversationsChatParticipantCommunicationWrapupGatewayTimeout() *GetConversationsChatParticipantCommunicationWrapupGatewayTimeout {
	return &GetConversationsChatParticipantCommunicationWrapupGatewayTimeout{}
}

/*
GetConversationsChatParticipantCommunicationWrapupGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetConversationsChatParticipantCommunicationWrapupGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations chat participant communication wrapup gateway timeout response has a 2xx status code
func (o *GetConversationsChatParticipantCommunicationWrapupGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations chat participant communication wrapup gateway timeout response has a 3xx status code
func (o *GetConversationsChatParticipantCommunicationWrapupGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations chat participant communication wrapup gateway timeout response has a 4xx status code
func (o *GetConversationsChatParticipantCommunicationWrapupGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations chat participant communication wrapup gateway timeout response has a 5xx status code
func (o *GetConversationsChatParticipantCommunicationWrapupGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations chat participant communication wrapup gateway timeout response a status code equal to that given
func (o *GetConversationsChatParticipantCommunicationWrapupGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetConversationsChatParticipantCommunicationWrapupGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/chats/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsChatParticipantCommunicationWrapupGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsChatParticipantCommunicationWrapupGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/chats/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsChatParticipantCommunicationWrapupGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsChatParticipantCommunicationWrapupGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsChatParticipantCommunicationWrapupGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
