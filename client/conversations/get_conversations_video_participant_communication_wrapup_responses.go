// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetConversationsVideoParticipantCommunicationWrapupReader is a Reader for the GetConversationsVideoParticipantCommunicationWrapup structure.
type GetConversationsVideoParticipantCommunicationWrapupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConversationsVideoParticipantCommunicationWrapupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConversationsVideoParticipantCommunicationWrapupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetConversationsVideoParticipantCommunicationWrapupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetConversationsVideoParticipantCommunicationWrapupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetConversationsVideoParticipantCommunicationWrapupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetConversationsVideoParticipantCommunicationWrapupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetConversationsVideoParticipantCommunicationWrapupRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetConversationsVideoParticipantCommunicationWrapupRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetConversationsVideoParticipantCommunicationWrapupUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetConversationsVideoParticipantCommunicationWrapupTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetConversationsVideoParticipantCommunicationWrapupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetConversationsVideoParticipantCommunicationWrapupServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetConversationsVideoParticipantCommunicationWrapupGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetConversationsVideoParticipantCommunicationWrapupOK creates a GetConversationsVideoParticipantCommunicationWrapupOK with default headers values
func NewGetConversationsVideoParticipantCommunicationWrapupOK() *GetConversationsVideoParticipantCommunicationWrapupOK {
	return &GetConversationsVideoParticipantCommunicationWrapupOK{}
}

/*
GetConversationsVideoParticipantCommunicationWrapupOK describes a response with status code 200, with default header values.

successful operation
*/
type GetConversationsVideoParticipantCommunicationWrapupOK struct {
	Payload *models.AssignedWrapupCode
}

// IsSuccess returns true when this get conversations video participant communication wrapup o k response has a 2xx status code
func (o *GetConversationsVideoParticipantCommunicationWrapupOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get conversations video participant communication wrapup o k response has a 3xx status code
func (o *GetConversationsVideoParticipantCommunicationWrapupOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations video participant communication wrapup o k response has a 4xx status code
func (o *GetConversationsVideoParticipantCommunicationWrapupOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations video participant communication wrapup o k response has a 5xx status code
func (o *GetConversationsVideoParticipantCommunicationWrapupOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations video participant communication wrapup o k response a status code equal to that given
func (o *GetConversationsVideoParticipantCommunicationWrapupOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetConversationsVideoParticipantCommunicationWrapupOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsVideoParticipantCommunicationWrapupOK  %+v", 200, o.Payload)
}

func (o *GetConversationsVideoParticipantCommunicationWrapupOK) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsVideoParticipantCommunicationWrapupOK  %+v", 200, o.Payload)
}

func (o *GetConversationsVideoParticipantCommunicationWrapupOK) GetPayload() *models.AssignedWrapupCode {
	return o.Payload
}

func (o *GetConversationsVideoParticipantCommunicationWrapupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AssignedWrapupCode)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsVideoParticipantCommunicationWrapupBadRequest creates a GetConversationsVideoParticipantCommunicationWrapupBadRequest with default headers values
func NewGetConversationsVideoParticipantCommunicationWrapupBadRequest() *GetConversationsVideoParticipantCommunicationWrapupBadRequest {
	return &GetConversationsVideoParticipantCommunicationWrapupBadRequest{}
}

/*
GetConversationsVideoParticipantCommunicationWrapupBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetConversationsVideoParticipantCommunicationWrapupBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations video participant communication wrapup bad request response has a 2xx status code
func (o *GetConversationsVideoParticipantCommunicationWrapupBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations video participant communication wrapup bad request response has a 3xx status code
func (o *GetConversationsVideoParticipantCommunicationWrapupBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations video participant communication wrapup bad request response has a 4xx status code
func (o *GetConversationsVideoParticipantCommunicationWrapupBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations video participant communication wrapup bad request response has a 5xx status code
func (o *GetConversationsVideoParticipantCommunicationWrapupBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations video participant communication wrapup bad request response a status code equal to that given
func (o *GetConversationsVideoParticipantCommunicationWrapupBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetConversationsVideoParticipantCommunicationWrapupBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsVideoParticipantCommunicationWrapupBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsVideoParticipantCommunicationWrapupBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsVideoParticipantCommunicationWrapupBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsVideoParticipantCommunicationWrapupBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsVideoParticipantCommunicationWrapupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsVideoParticipantCommunicationWrapupUnauthorized creates a GetConversationsVideoParticipantCommunicationWrapupUnauthorized with default headers values
func NewGetConversationsVideoParticipantCommunicationWrapupUnauthorized() *GetConversationsVideoParticipantCommunicationWrapupUnauthorized {
	return &GetConversationsVideoParticipantCommunicationWrapupUnauthorized{}
}

/*
GetConversationsVideoParticipantCommunicationWrapupUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetConversationsVideoParticipantCommunicationWrapupUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations video participant communication wrapup unauthorized response has a 2xx status code
func (o *GetConversationsVideoParticipantCommunicationWrapupUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations video participant communication wrapup unauthorized response has a 3xx status code
func (o *GetConversationsVideoParticipantCommunicationWrapupUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations video participant communication wrapup unauthorized response has a 4xx status code
func (o *GetConversationsVideoParticipantCommunicationWrapupUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations video participant communication wrapup unauthorized response has a 5xx status code
func (o *GetConversationsVideoParticipantCommunicationWrapupUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations video participant communication wrapup unauthorized response a status code equal to that given
func (o *GetConversationsVideoParticipantCommunicationWrapupUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetConversationsVideoParticipantCommunicationWrapupUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsVideoParticipantCommunicationWrapupUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsVideoParticipantCommunicationWrapupUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsVideoParticipantCommunicationWrapupUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsVideoParticipantCommunicationWrapupUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsVideoParticipantCommunicationWrapupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsVideoParticipantCommunicationWrapupForbidden creates a GetConversationsVideoParticipantCommunicationWrapupForbidden with default headers values
func NewGetConversationsVideoParticipantCommunicationWrapupForbidden() *GetConversationsVideoParticipantCommunicationWrapupForbidden {
	return &GetConversationsVideoParticipantCommunicationWrapupForbidden{}
}

/*
GetConversationsVideoParticipantCommunicationWrapupForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetConversationsVideoParticipantCommunicationWrapupForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations video participant communication wrapup forbidden response has a 2xx status code
func (o *GetConversationsVideoParticipantCommunicationWrapupForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations video participant communication wrapup forbidden response has a 3xx status code
func (o *GetConversationsVideoParticipantCommunicationWrapupForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations video participant communication wrapup forbidden response has a 4xx status code
func (o *GetConversationsVideoParticipantCommunicationWrapupForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations video participant communication wrapup forbidden response has a 5xx status code
func (o *GetConversationsVideoParticipantCommunicationWrapupForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations video participant communication wrapup forbidden response a status code equal to that given
func (o *GetConversationsVideoParticipantCommunicationWrapupForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetConversationsVideoParticipantCommunicationWrapupForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsVideoParticipantCommunicationWrapupForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsVideoParticipantCommunicationWrapupForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsVideoParticipantCommunicationWrapupForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsVideoParticipantCommunicationWrapupForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsVideoParticipantCommunicationWrapupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsVideoParticipantCommunicationWrapupNotFound creates a GetConversationsVideoParticipantCommunicationWrapupNotFound with default headers values
func NewGetConversationsVideoParticipantCommunicationWrapupNotFound() *GetConversationsVideoParticipantCommunicationWrapupNotFound {
	return &GetConversationsVideoParticipantCommunicationWrapupNotFound{}
}

/*
GetConversationsVideoParticipantCommunicationWrapupNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetConversationsVideoParticipantCommunicationWrapupNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations video participant communication wrapup not found response has a 2xx status code
func (o *GetConversationsVideoParticipantCommunicationWrapupNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations video participant communication wrapup not found response has a 3xx status code
func (o *GetConversationsVideoParticipantCommunicationWrapupNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations video participant communication wrapup not found response has a 4xx status code
func (o *GetConversationsVideoParticipantCommunicationWrapupNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations video participant communication wrapup not found response has a 5xx status code
func (o *GetConversationsVideoParticipantCommunicationWrapupNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations video participant communication wrapup not found response a status code equal to that given
func (o *GetConversationsVideoParticipantCommunicationWrapupNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetConversationsVideoParticipantCommunicationWrapupNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsVideoParticipantCommunicationWrapupNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsVideoParticipantCommunicationWrapupNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsVideoParticipantCommunicationWrapupNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsVideoParticipantCommunicationWrapupNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsVideoParticipantCommunicationWrapupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsVideoParticipantCommunicationWrapupRequestTimeout creates a GetConversationsVideoParticipantCommunicationWrapupRequestTimeout with default headers values
func NewGetConversationsVideoParticipantCommunicationWrapupRequestTimeout() *GetConversationsVideoParticipantCommunicationWrapupRequestTimeout {
	return &GetConversationsVideoParticipantCommunicationWrapupRequestTimeout{}
}

/*
GetConversationsVideoParticipantCommunicationWrapupRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetConversationsVideoParticipantCommunicationWrapupRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations video participant communication wrapup request timeout response has a 2xx status code
func (o *GetConversationsVideoParticipantCommunicationWrapupRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations video participant communication wrapup request timeout response has a 3xx status code
func (o *GetConversationsVideoParticipantCommunicationWrapupRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations video participant communication wrapup request timeout response has a 4xx status code
func (o *GetConversationsVideoParticipantCommunicationWrapupRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations video participant communication wrapup request timeout response has a 5xx status code
func (o *GetConversationsVideoParticipantCommunicationWrapupRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations video participant communication wrapup request timeout response a status code equal to that given
func (o *GetConversationsVideoParticipantCommunicationWrapupRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetConversationsVideoParticipantCommunicationWrapupRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsVideoParticipantCommunicationWrapupRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationsVideoParticipantCommunicationWrapupRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsVideoParticipantCommunicationWrapupRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationsVideoParticipantCommunicationWrapupRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsVideoParticipantCommunicationWrapupRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsVideoParticipantCommunicationWrapupRequestEntityTooLarge creates a GetConversationsVideoParticipantCommunicationWrapupRequestEntityTooLarge with default headers values
func NewGetConversationsVideoParticipantCommunicationWrapupRequestEntityTooLarge() *GetConversationsVideoParticipantCommunicationWrapupRequestEntityTooLarge {
	return &GetConversationsVideoParticipantCommunicationWrapupRequestEntityTooLarge{}
}

/*
GetConversationsVideoParticipantCommunicationWrapupRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetConversationsVideoParticipantCommunicationWrapupRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations video participant communication wrapup request entity too large response has a 2xx status code
func (o *GetConversationsVideoParticipantCommunicationWrapupRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations video participant communication wrapup request entity too large response has a 3xx status code
func (o *GetConversationsVideoParticipantCommunicationWrapupRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations video participant communication wrapup request entity too large response has a 4xx status code
func (o *GetConversationsVideoParticipantCommunicationWrapupRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations video participant communication wrapup request entity too large response has a 5xx status code
func (o *GetConversationsVideoParticipantCommunicationWrapupRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations video participant communication wrapup request entity too large response a status code equal to that given
func (o *GetConversationsVideoParticipantCommunicationWrapupRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetConversationsVideoParticipantCommunicationWrapupRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsVideoParticipantCommunicationWrapupRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsVideoParticipantCommunicationWrapupRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsVideoParticipantCommunicationWrapupRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsVideoParticipantCommunicationWrapupRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsVideoParticipantCommunicationWrapupRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsVideoParticipantCommunicationWrapupUnsupportedMediaType creates a GetConversationsVideoParticipantCommunicationWrapupUnsupportedMediaType with default headers values
func NewGetConversationsVideoParticipantCommunicationWrapupUnsupportedMediaType() *GetConversationsVideoParticipantCommunicationWrapupUnsupportedMediaType {
	return &GetConversationsVideoParticipantCommunicationWrapupUnsupportedMediaType{}
}

/*
GetConversationsVideoParticipantCommunicationWrapupUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetConversationsVideoParticipantCommunicationWrapupUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations video participant communication wrapup unsupported media type response has a 2xx status code
func (o *GetConversationsVideoParticipantCommunicationWrapupUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations video participant communication wrapup unsupported media type response has a 3xx status code
func (o *GetConversationsVideoParticipantCommunicationWrapupUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations video participant communication wrapup unsupported media type response has a 4xx status code
func (o *GetConversationsVideoParticipantCommunicationWrapupUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations video participant communication wrapup unsupported media type response has a 5xx status code
func (o *GetConversationsVideoParticipantCommunicationWrapupUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations video participant communication wrapup unsupported media type response a status code equal to that given
func (o *GetConversationsVideoParticipantCommunicationWrapupUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetConversationsVideoParticipantCommunicationWrapupUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsVideoParticipantCommunicationWrapupUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsVideoParticipantCommunicationWrapupUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsVideoParticipantCommunicationWrapupUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsVideoParticipantCommunicationWrapupUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsVideoParticipantCommunicationWrapupUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsVideoParticipantCommunicationWrapupTooManyRequests creates a GetConversationsVideoParticipantCommunicationWrapupTooManyRequests with default headers values
func NewGetConversationsVideoParticipantCommunicationWrapupTooManyRequests() *GetConversationsVideoParticipantCommunicationWrapupTooManyRequests {
	return &GetConversationsVideoParticipantCommunicationWrapupTooManyRequests{}
}

/*
GetConversationsVideoParticipantCommunicationWrapupTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetConversationsVideoParticipantCommunicationWrapupTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations video participant communication wrapup too many requests response has a 2xx status code
func (o *GetConversationsVideoParticipantCommunicationWrapupTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations video participant communication wrapup too many requests response has a 3xx status code
func (o *GetConversationsVideoParticipantCommunicationWrapupTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations video participant communication wrapup too many requests response has a 4xx status code
func (o *GetConversationsVideoParticipantCommunicationWrapupTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations video participant communication wrapup too many requests response has a 5xx status code
func (o *GetConversationsVideoParticipantCommunicationWrapupTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations video participant communication wrapup too many requests response a status code equal to that given
func (o *GetConversationsVideoParticipantCommunicationWrapupTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetConversationsVideoParticipantCommunicationWrapupTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsVideoParticipantCommunicationWrapupTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsVideoParticipantCommunicationWrapupTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsVideoParticipantCommunicationWrapupTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsVideoParticipantCommunicationWrapupTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsVideoParticipantCommunicationWrapupTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsVideoParticipantCommunicationWrapupInternalServerError creates a GetConversationsVideoParticipantCommunicationWrapupInternalServerError with default headers values
func NewGetConversationsVideoParticipantCommunicationWrapupInternalServerError() *GetConversationsVideoParticipantCommunicationWrapupInternalServerError {
	return &GetConversationsVideoParticipantCommunicationWrapupInternalServerError{}
}

/*
GetConversationsVideoParticipantCommunicationWrapupInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetConversationsVideoParticipantCommunicationWrapupInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations video participant communication wrapup internal server error response has a 2xx status code
func (o *GetConversationsVideoParticipantCommunicationWrapupInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations video participant communication wrapup internal server error response has a 3xx status code
func (o *GetConversationsVideoParticipantCommunicationWrapupInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations video participant communication wrapup internal server error response has a 4xx status code
func (o *GetConversationsVideoParticipantCommunicationWrapupInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations video participant communication wrapup internal server error response has a 5xx status code
func (o *GetConversationsVideoParticipantCommunicationWrapupInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations video participant communication wrapup internal server error response a status code equal to that given
func (o *GetConversationsVideoParticipantCommunicationWrapupInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetConversationsVideoParticipantCommunicationWrapupInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsVideoParticipantCommunicationWrapupInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsVideoParticipantCommunicationWrapupInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsVideoParticipantCommunicationWrapupInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsVideoParticipantCommunicationWrapupInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsVideoParticipantCommunicationWrapupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsVideoParticipantCommunicationWrapupServiceUnavailable creates a GetConversationsVideoParticipantCommunicationWrapupServiceUnavailable with default headers values
func NewGetConversationsVideoParticipantCommunicationWrapupServiceUnavailable() *GetConversationsVideoParticipantCommunicationWrapupServiceUnavailable {
	return &GetConversationsVideoParticipantCommunicationWrapupServiceUnavailable{}
}

/*
GetConversationsVideoParticipantCommunicationWrapupServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetConversationsVideoParticipantCommunicationWrapupServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations video participant communication wrapup service unavailable response has a 2xx status code
func (o *GetConversationsVideoParticipantCommunicationWrapupServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations video participant communication wrapup service unavailable response has a 3xx status code
func (o *GetConversationsVideoParticipantCommunicationWrapupServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations video participant communication wrapup service unavailable response has a 4xx status code
func (o *GetConversationsVideoParticipantCommunicationWrapupServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations video participant communication wrapup service unavailable response has a 5xx status code
func (o *GetConversationsVideoParticipantCommunicationWrapupServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations video participant communication wrapup service unavailable response a status code equal to that given
func (o *GetConversationsVideoParticipantCommunicationWrapupServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetConversationsVideoParticipantCommunicationWrapupServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsVideoParticipantCommunicationWrapupServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsVideoParticipantCommunicationWrapupServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsVideoParticipantCommunicationWrapupServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsVideoParticipantCommunicationWrapupServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsVideoParticipantCommunicationWrapupServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsVideoParticipantCommunicationWrapupGatewayTimeout creates a GetConversationsVideoParticipantCommunicationWrapupGatewayTimeout with default headers values
func NewGetConversationsVideoParticipantCommunicationWrapupGatewayTimeout() *GetConversationsVideoParticipantCommunicationWrapupGatewayTimeout {
	return &GetConversationsVideoParticipantCommunicationWrapupGatewayTimeout{}
}

/*
GetConversationsVideoParticipantCommunicationWrapupGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetConversationsVideoParticipantCommunicationWrapupGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations video participant communication wrapup gateway timeout response has a 2xx status code
func (o *GetConversationsVideoParticipantCommunicationWrapupGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations video participant communication wrapup gateway timeout response has a 3xx status code
func (o *GetConversationsVideoParticipantCommunicationWrapupGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations video participant communication wrapup gateway timeout response has a 4xx status code
func (o *GetConversationsVideoParticipantCommunicationWrapupGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations video participant communication wrapup gateway timeout response has a 5xx status code
func (o *GetConversationsVideoParticipantCommunicationWrapupGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations video participant communication wrapup gateway timeout response a status code equal to that given
func (o *GetConversationsVideoParticipantCommunicationWrapupGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetConversationsVideoParticipantCommunicationWrapupGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsVideoParticipantCommunicationWrapupGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsVideoParticipantCommunicationWrapupGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsVideoParticipantCommunicationWrapupGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsVideoParticipantCommunicationWrapupGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsVideoParticipantCommunicationWrapupGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
