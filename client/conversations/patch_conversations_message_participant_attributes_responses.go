// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PatchConversationsMessageParticipantAttributesReader is a Reader for the PatchConversationsMessageParticipantAttributes structure.
type PatchConversationsMessageParticipantAttributesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchConversationsMessageParticipantAttributesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewPatchConversationsMessageParticipantAttributesAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchConversationsMessageParticipantAttributesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPatchConversationsMessageParticipantAttributesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchConversationsMessageParticipantAttributesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchConversationsMessageParticipantAttributesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPatchConversationsMessageParticipantAttributesRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPatchConversationsMessageParticipantAttributesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPatchConversationsMessageParticipantAttributesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPatchConversationsMessageParticipantAttributesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchConversationsMessageParticipantAttributesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPatchConversationsMessageParticipantAttributesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPatchConversationsMessageParticipantAttributesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchConversationsMessageParticipantAttributesAccepted creates a PatchConversationsMessageParticipantAttributesAccepted with default headers values
func NewPatchConversationsMessageParticipantAttributesAccepted() *PatchConversationsMessageParticipantAttributesAccepted {
	return &PatchConversationsMessageParticipantAttributesAccepted{}
}

/*PatchConversationsMessageParticipantAttributesAccepted handles this case with default header values.

Accepted
*/
type PatchConversationsMessageParticipantAttributesAccepted struct {
}

func (o *PatchConversationsMessageParticipantAttributesAccepted) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/messages/{conversationId}/participants/{participantId}/attributes][%d] patchConversationsMessageParticipantAttributesAccepted ", 202)
}

func (o *PatchConversationsMessageParticipantAttributesAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchConversationsMessageParticipantAttributesBadRequest creates a PatchConversationsMessageParticipantAttributesBadRequest with default headers values
func NewPatchConversationsMessageParticipantAttributesBadRequest() *PatchConversationsMessageParticipantAttributesBadRequest {
	return &PatchConversationsMessageParticipantAttributesBadRequest{}
}

/*PatchConversationsMessageParticipantAttributesBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PatchConversationsMessageParticipantAttributesBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationsMessageParticipantAttributesBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/messages/{conversationId}/participants/{participantId}/attributes][%d] patchConversationsMessageParticipantAttributesBadRequest  %+v", 400, o.Payload)
}

func (o *PatchConversationsMessageParticipantAttributesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsMessageParticipantAttributesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsMessageParticipantAttributesUnauthorized creates a PatchConversationsMessageParticipantAttributesUnauthorized with default headers values
func NewPatchConversationsMessageParticipantAttributesUnauthorized() *PatchConversationsMessageParticipantAttributesUnauthorized {
	return &PatchConversationsMessageParticipantAttributesUnauthorized{}
}

/*PatchConversationsMessageParticipantAttributesUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PatchConversationsMessageParticipantAttributesUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationsMessageParticipantAttributesUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/messages/{conversationId}/participants/{participantId}/attributes][%d] patchConversationsMessageParticipantAttributesUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchConversationsMessageParticipantAttributesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsMessageParticipantAttributesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsMessageParticipantAttributesForbidden creates a PatchConversationsMessageParticipantAttributesForbidden with default headers values
func NewPatchConversationsMessageParticipantAttributesForbidden() *PatchConversationsMessageParticipantAttributesForbidden {
	return &PatchConversationsMessageParticipantAttributesForbidden{}
}

/*PatchConversationsMessageParticipantAttributesForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PatchConversationsMessageParticipantAttributesForbidden struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationsMessageParticipantAttributesForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/messages/{conversationId}/participants/{participantId}/attributes][%d] patchConversationsMessageParticipantAttributesForbidden  %+v", 403, o.Payload)
}

func (o *PatchConversationsMessageParticipantAttributesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsMessageParticipantAttributesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsMessageParticipantAttributesNotFound creates a PatchConversationsMessageParticipantAttributesNotFound with default headers values
func NewPatchConversationsMessageParticipantAttributesNotFound() *PatchConversationsMessageParticipantAttributesNotFound {
	return &PatchConversationsMessageParticipantAttributesNotFound{}
}

/*PatchConversationsMessageParticipantAttributesNotFound handles this case with default header values.

The requested resource was not found.
*/
type PatchConversationsMessageParticipantAttributesNotFound struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationsMessageParticipantAttributesNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/messages/{conversationId}/participants/{participantId}/attributes][%d] patchConversationsMessageParticipantAttributesNotFound  %+v", 404, o.Payload)
}

func (o *PatchConversationsMessageParticipantAttributesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsMessageParticipantAttributesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsMessageParticipantAttributesRequestTimeout creates a PatchConversationsMessageParticipantAttributesRequestTimeout with default headers values
func NewPatchConversationsMessageParticipantAttributesRequestTimeout() *PatchConversationsMessageParticipantAttributesRequestTimeout {
	return &PatchConversationsMessageParticipantAttributesRequestTimeout{}
}

/*PatchConversationsMessageParticipantAttributesRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PatchConversationsMessageParticipantAttributesRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationsMessageParticipantAttributesRequestTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/messages/{conversationId}/participants/{participantId}/attributes][%d] patchConversationsMessageParticipantAttributesRequestTimeout  %+v", 408, o.Payload)
}

func (o *PatchConversationsMessageParticipantAttributesRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsMessageParticipantAttributesRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsMessageParticipantAttributesRequestEntityTooLarge creates a PatchConversationsMessageParticipantAttributesRequestEntityTooLarge with default headers values
func NewPatchConversationsMessageParticipantAttributesRequestEntityTooLarge() *PatchConversationsMessageParticipantAttributesRequestEntityTooLarge {
	return &PatchConversationsMessageParticipantAttributesRequestEntityTooLarge{}
}

/*PatchConversationsMessageParticipantAttributesRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PatchConversationsMessageParticipantAttributesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationsMessageParticipantAttributesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/messages/{conversationId}/participants/{participantId}/attributes][%d] patchConversationsMessageParticipantAttributesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PatchConversationsMessageParticipantAttributesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsMessageParticipantAttributesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsMessageParticipantAttributesUnsupportedMediaType creates a PatchConversationsMessageParticipantAttributesUnsupportedMediaType with default headers values
func NewPatchConversationsMessageParticipantAttributesUnsupportedMediaType() *PatchConversationsMessageParticipantAttributesUnsupportedMediaType {
	return &PatchConversationsMessageParticipantAttributesUnsupportedMediaType{}
}

/*PatchConversationsMessageParticipantAttributesUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PatchConversationsMessageParticipantAttributesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationsMessageParticipantAttributesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/messages/{conversationId}/participants/{participantId}/attributes][%d] patchConversationsMessageParticipantAttributesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchConversationsMessageParticipantAttributesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsMessageParticipantAttributesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsMessageParticipantAttributesTooManyRequests creates a PatchConversationsMessageParticipantAttributesTooManyRequests with default headers values
func NewPatchConversationsMessageParticipantAttributesTooManyRequests() *PatchConversationsMessageParticipantAttributesTooManyRequests {
	return &PatchConversationsMessageParticipantAttributesTooManyRequests{}
}

/*PatchConversationsMessageParticipantAttributesTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PatchConversationsMessageParticipantAttributesTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationsMessageParticipantAttributesTooManyRequests) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/messages/{conversationId}/participants/{participantId}/attributes][%d] patchConversationsMessageParticipantAttributesTooManyRequests  %+v", 429, o.Payload)
}

func (o *PatchConversationsMessageParticipantAttributesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsMessageParticipantAttributesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsMessageParticipantAttributesInternalServerError creates a PatchConversationsMessageParticipantAttributesInternalServerError with default headers values
func NewPatchConversationsMessageParticipantAttributesInternalServerError() *PatchConversationsMessageParticipantAttributesInternalServerError {
	return &PatchConversationsMessageParticipantAttributesInternalServerError{}
}

/*PatchConversationsMessageParticipantAttributesInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PatchConversationsMessageParticipantAttributesInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationsMessageParticipantAttributesInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/messages/{conversationId}/participants/{participantId}/attributes][%d] patchConversationsMessageParticipantAttributesInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchConversationsMessageParticipantAttributesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsMessageParticipantAttributesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsMessageParticipantAttributesServiceUnavailable creates a PatchConversationsMessageParticipantAttributesServiceUnavailable with default headers values
func NewPatchConversationsMessageParticipantAttributesServiceUnavailable() *PatchConversationsMessageParticipantAttributesServiceUnavailable {
	return &PatchConversationsMessageParticipantAttributesServiceUnavailable{}
}

/*PatchConversationsMessageParticipantAttributesServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PatchConversationsMessageParticipantAttributesServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationsMessageParticipantAttributesServiceUnavailable) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/messages/{conversationId}/participants/{participantId}/attributes][%d] patchConversationsMessageParticipantAttributesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PatchConversationsMessageParticipantAttributesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsMessageParticipantAttributesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsMessageParticipantAttributesGatewayTimeout creates a PatchConversationsMessageParticipantAttributesGatewayTimeout with default headers values
func NewPatchConversationsMessageParticipantAttributesGatewayTimeout() *PatchConversationsMessageParticipantAttributesGatewayTimeout {
	return &PatchConversationsMessageParticipantAttributesGatewayTimeout{}
}

/*PatchConversationsMessageParticipantAttributesGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PatchConversationsMessageParticipantAttributesGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationsMessageParticipantAttributesGatewayTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/messages/{conversationId}/participants/{participantId}/attributes][%d] patchConversationsMessageParticipantAttributesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PatchConversationsMessageParticipantAttributesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsMessageParticipantAttributesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
