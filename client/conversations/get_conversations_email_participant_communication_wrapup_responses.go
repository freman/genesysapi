// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetConversationsEmailParticipantCommunicationWrapupReader is a Reader for the GetConversationsEmailParticipantCommunicationWrapup structure.
type GetConversationsEmailParticipantCommunicationWrapupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConversationsEmailParticipantCommunicationWrapupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConversationsEmailParticipantCommunicationWrapupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetConversationsEmailParticipantCommunicationWrapupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetConversationsEmailParticipantCommunicationWrapupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetConversationsEmailParticipantCommunicationWrapupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetConversationsEmailParticipantCommunicationWrapupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetConversationsEmailParticipantCommunicationWrapupRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetConversationsEmailParticipantCommunicationWrapupRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetConversationsEmailParticipantCommunicationWrapupUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetConversationsEmailParticipantCommunicationWrapupTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetConversationsEmailParticipantCommunicationWrapupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetConversationsEmailParticipantCommunicationWrapupServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetConversationsEmailParticipantCommunicationWrapupGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetConversationsEmailParticipantCommunicationWrapupOK creates a GetConversationsEmailParticipantCommunicationWrapupOK with default headers values
func NewGetConversationsEmailParticipantCommunicationWrapupOK() *GetConversationsEmailParticipantCommunicationWrapupOK {
	return &GetConversationsEmailParticipantCommunicationWrapupOK{}
}

/*
GetConversationsEmailParticipantCommunicationWrapupOK describes a response with status code 200, with default header values.

successful operation
*/
type GetConversationsEmailParticipantCommunicationWrapupOK struct {
	Payload *models.AssignedWrapupCode
}

// IsSuccess returns true when this get conversations email participant communication wrapup o k response has a 2xx status code
func (o *GetConversationsEmailParticipantCommunicationWrapupOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get conversations email participant communication wrapup o k response has a 3xx status code
func (o *GetConversationsEmailParticipantCommunicationWrapupOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email participant communication wrapup o k response has a 4xx status code
func (o *GetConversationsEmailParticipantCommunicationWrapupOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations email participant communication wrapup o k response has a 5xx status code
func (o *GetConversationsEmailParticipantCommunicationWrapupOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations email participant communication wrapup o k response a status code equal to that given
func (o *GetConversationsEmailParticipantCommunicationWrapupOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetConversationsEmailParticipantCommunicationWrapupOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsEmailParticipantCommunicationWrapupOK  %+v", 200, o.Payload)
}

func (o *GetConversationsEmailParticipantCommunicationWrapupOK) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsEmailParticipantCommunicationWrapupOK  %+v", 200, o.Payload)
}

func (o *GetConversationsEmailParticipantCommunicationWrapupOK) GetPayload() *models.AssignedWrapupCode {
	return o.Payload
}

func (o *GetConversationsEmailParticipantCommunicationWrapupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AssignedWrapupCode)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantCommunicationWrapupBadRequest creates a GetConversationsEmailParticipantCommunicationWrapupBadRequest with default headers values
func NewGetConversationsEmailParticipantCommunicationWrapupBadRequest() *GetConversationsEmailParticipantCommunicationWrapupBadRequest {
	return &GetConversationsEmailParticipantCommunicationWrapupBadRequest{}
}

/*
GetConversationsEmailParticipantCommunicationWrapupBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetConversationsEmailParticipantCommunicationWrapupBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email participant communication wrapup bad request response has a 2xx status code
func (o *GetConversationsEmailParticipantCommunicationWrapupBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email participant communication wrapup bad request response has a 3xx status code
func (o *GetConversationsEmailParticipantCommunicationWrapupBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email participant communication wrapup bad request response has a 4xx status code
func (o *GetConversationsEmailParticipantCommunicationWrapupBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations email participant communication wrapup bad request response has a 5xx status code
func (o *GetConversationsEmailParticipantCommunicationWrapupBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations email participant communication wrapup bad request response a status code equal to that given
func (o *GetConversationsEmailParticipantCommunicationWrapupBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetConversationsEmailParticipantCommunicationWrapupBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsEmailParticipantCommunicationWrapupBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsEmailParticipantCommunicationWrapupBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsEmailParticipantCommunicationWrapupBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsEmailParticipantCommunicationWrapupBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantCommunicationWrapupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantCommunicationWrapupUnauthorized creates a GetConversationsEmailParticipantCommunicationWrapupUnauthorized with default headers values
func NewGetConversationsEmailParticipantCommunicationWrapupUnauthorized() *GetConversationsEmailParticipantCommunicationWrapupUnauthorized {
	return &GetConversationsEmailParticipantCommunicationWrapupUnauthorized{}
}

/*
GetConversationsEmailParticipantCommunicationWrapupUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetConversationsEmailParticipantCommunicationWrapupUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email participant communication wrapup unauthorized response has a 2xx status code
func (o *GetConversationsEmailParticipantCommunicationWrapupUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email participant communication wrapup unauthorized response has a 3xx status code
func (o *GetConversationsEmailParticipantCommunicationWrapupUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email participant communication wrapup unauthorized response has a 4xx status code
func (o *GetConversationsEmailParticipantCommunicationWrapupUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations email participant communication wrapup unauthorized response has a 5xx status code
func (o *GetConversationsEmailParticipantCommunicationWrapupUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations email participant communication wrapup unauthorized response a status code equal to that given
func (o *GetConversationsEmailParticipantCommunicationWrapupUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetConversationsEmailParticipantCommunicationWrapupUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsEmailParticipantCommunicationWrapupUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsEmailParticipantCommunicationWrapupUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsEmailParticipantCommunicationWrapupUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsEmailParticipantCommunicationWrapupUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantCommunicationWrapupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantCommunicationWrapupForbidden creates a GetConversationsEmailParticipantCommunicationWrapupForbidden with default headers values
func NewGetConversationsEmailParticipantCommunicationWrapupForbidden() *GetConversationsEmailParticipantCommunicationWrapupForbidden {
	return &GetConversationsEmailParticipantCommunicationWrapupForbidden{}
}

/*
GetConversationsEmailParticipantCommunicationWrapupForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetConversationsEmailParticipantCommunicationWrapupForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email participant communication wrapup forbidden response has a 2xx status code
func (o *GetConversationsEmailParticipantCommunicationWrapupForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email participant communication wrapup forbidden response has a 3xx status code
func (o *GetConversationsEmailParticipantCommunicationWrapupForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email participant communication wrapup forbidden response has a 4xx status code
func (o *GetConversationsEmailParticipantCommunicationWrapupForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations email participant communication wrapup forbidden response has a 5xx status code
func (o *GetConversationsEmailParticipantCommunicationWrapupForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations email participant communication wrapup forbidden response a status code equal to that given
func (o *GetConversationsEmailParticipantCommunicationWrapupForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetConversationsEmailParticipantCommunicationWrapupForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsEmailParticipantCommunicationWrapupForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsEmailParticipantCommunicationWrapupForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsEmailParticipantCommunicationWrapupForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsEmailParticipantCommunicationWrapupForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantCommunicationWrapupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantCommunicationWrapupNotFound creates a GetConversationsEmailParticipantCommunicationWrapupNotFound with default headers values
func NewGetConversationsEmailParticipantCommunicationWrapupNotFound() *GetConversationsEmailParticipantCommunicationWrapupNotFound {
	return &GetConversationsEmailParticipantCommunicationWrapupNotFound{}
}

/*
GetConversationsEmailParticipantCommunicationWrapupNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetConversationsEmailParticipantCommunicationWrapupNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email participant communication wrapup not found response has a 2xx status code
func (o *GetConversationsEmailParticipantCommunicationWrapupNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email participant communication wrapup not found response has a 3xx status code
func (o *GetConversationsEmailParticipantCommunicationWrapupNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email participant communication wrapup not found response has a 4xx status code
func (o *GetConversationsEmailParticipantCommunicationWrapupNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations email participant communication wrapup not found response has a 5xx status code
func (o *GetConversationsEmailParticipantCommunicationWrapupNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations email participant communication wrapup not found response a status code equal to that given
func (o *GetConversationsEmailParticipantCommunicationWrapupNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetConversationsEmailParticipantCommunicationWrapupNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsEmailParticipantCommunicationWrapupNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsEmailParticipantCommunicationWrapupNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsEmailParticipantCommunicationWrapupNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsEmailParticipantCommunicationWrapupNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantCommunicationWrapupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantCommunicationWrapupRequestTimeout creates a GetConversationsEmailParticipantCommunicationWrapupRequestTimeout with default headers values
func NewGetConversationsEmailParticipantCommunicationWrapupRequestTimeout() *GetConversationsEmailParticipantCommunicationWrapupRequestTimeout {
	return &GetConversationsEmailParticipantCommunicationWrapupRequestTimeout{}
}

/*
GetConversationsEmailParticipantCommunicationWrapupRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetConversationsEmailParticipantCommunicationWrapupRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email participant communication wrapup request timeout response has a 2xx status code
func (o *GetConversationsEmailParticipantCommunicationWrapupRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email participant communication wrapup request timeout response has a 3xx status code
func (o *GetConversationsEmailParticipantCommunicationWrapupRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email participant communication wrapup request timeout response has a 4xx status code
func (o *GetConversationsEmailParticipantCommunicationWrapupRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations email participant communication wrapup request timeout response has a 5xx status code
func (o *GetConversationsEmailParticipantCommunicationWrapupRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations email participant communication wrapup request timeout response a status code equal to that given
func (o *GetConversationsEmailParticipantCommunicationWrapupRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetConversationsEmailParticipantCommunicationWrapupRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsEmailParticipantCommunicationWrapupRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationsEmailParticipantCommunicationWrapupRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsEmailParticipantCommunicationWrapupRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationsEmailParticipantCommunicationWrapupRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantCommunicationWrapupRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantCommunicationWrapupRequestEntityTooLarge creates a GetConversationsEmailParticipantCommunicationWrapupRequestEntityTooLarge with default headers values
func NewGetConversationsEmailParticipantCommunicationWrapupRequestEntityTooLarge() *GetConversationsEmailParticipantCommunicationWrapupRequestEntityTooLarge {
	return &GetConversationsEmailParticipantCommunicationWrapupRequestEntityTooLarge{}
}

/*
GetConversationsEmailParticipantCommunicationWrapupRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetConversationsEmailParticipantCommunicationWrapupRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email participant communication wrapup request entity too large response has a 2xx status code
func (o *GetConversationsEmailParticipantCommunicationWrapupRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email participant communication wrapup request entity too large response has a 3xx status code
func (o *GetConversationsEmailParticipantCommunicationWrapupRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email participant communication wrapup request entity too large response has a 4xx status code
func (o *GetConversationsEmailParticipantCommunicationWrapupRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations email participant communication wrapup request entity too large response has a 5xx status code
func (o *GetConversationsEmailParticipantCommunicationWrapupRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations email participant communication wrapup request entity too large response a status code equal to that given
func (o *GetConversationsEmailParticipantCommunicationWrapupRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetConversationsEmailParticipantCommunicationWrapupRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsEmailParticipantCommunicationWrapupRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsEmailParticipantCommunicationWrapupRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsEmailParticipantCommunicationWrapupRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsEmailParticipantCommunicationWrapupRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantCommunicationWrapupRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantCommunicationWrapupUnsupportedMediaType creates a GetConversationsEmailParticipantCommunicationWrapupUnsupportedMediaType with default headers values
func NewGetConversationsEmailParticipantCommunicationWrapupUnsupportedMediaType() *GetConversationsEmailParticipantCommunicationWrapupUnsupportedMediaType {
	return &GetConversationsEmailParticipantCommunicationWrapupUnsupportedMediaType{}
}

/*
GetConversationsEmailParticipantCommunicationWrapupUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetConversationsEmailParticipantCommunicationWrapupUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email participant communication wrapup unsupported media type response has a 2xx status code
func (o *GetConversationsEmailParticipantCommunicationWrapupUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email participant communication wrapup unsupported media type response has a 3xx status code
func (o *GetConversationsEmailParticipantCommunicationWrapupUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email participant communication wrapup unsupported media type response has a 4xx status code
func (o *GetConversationsEmailParticipantCommunicationWrapupUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations email participant communication wrapup unsupported media type response has a 5xx status code
func (o *GetConversationsEmailParticipantCommunicationWrapupUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations email participant communication wrapup unsupported media type response a status code equal to that given
func (o *GetConversationsEmailParticipantCommunicationWrapupUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetConversationsEmailParticipantCommunicationWrapupUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsEmailParticipantCommunicationWrapupUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsEmailParticipantCommunicationWrapupUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsEmailParticipantCommunicationWrapupUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsEmailParticipantCommunicationWrapupUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantCommunicationWrapupUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantCommunicationWrapupTooManyRequests creates a GetConversationsEmailParticipantCommunicationWrapupTooManyRequests with default headers values
func NewGetConversationsEmailParticipantCommunicationWrapupTooManyRequests() *GetConversationsEmailParticipantCommunicationWrapupTooManyRequests {
	return &GetConversationsEmailParticipantCommunicationWrapupTooManyRequests{}
}

/*
GetConversationsEmailParticipantCommunicationWrapupTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetConversationsEmailParticipantCommunicationWrapupTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email participant communication wrapup too many requests response has a 2xx status code
func (o *GetConversationsEmailParticipantCommunicationWrapupTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email participant communication wrapup too many requests response has a 3xx status code
func (o *GetConversationsEmailParticipantCommunicationWrapupTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email participant communication wrapup too many requests response has a 4xx status code
func (o *GetConversationsEmailParticipantCommunicationWrapupTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations email participant communication wrapup too many requests response has a 5xx status code
func (o *GetConversationsEmailParticipantCommunicationWrapupTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations email participant communication wrapup too many requests response a status code equal to that given
func (o *GetConversationsEmailParticipantCommunicationWrapupTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetConversationsEmailParticipantCommunicationWrapupTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsEmailParticipantCommunicationWrapupTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsEmailParticipantCommunicationWrapupTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsEmailParticipantCommunicationWrapupTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsEmailParticipantCommunicationWrapupTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantCommunicationWrapupTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantCommunicationWrapupInternalServerError creates a GetConversationsEmailParticipantCommunicationWrapupInternalServerError with default headers values
func NewGetConversationsEmailParticipantCommunicationWrapupInternalServerError() *GetConversationsEmailParticipantCommunicationWrapupInternalServerError {
	return &GetConversationsEmailParticipantCommunicationWrapupInternalServerError{}
}

/*
GetConversationsEmailParticipantCommunicationWrapupInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetConversationsEmailParticipantCommunicationWrapupInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email participant communication wrapup internal server error response has a 2xx status code
func (o *GetConversationsEmailParticipantCommunicationWrapupInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email participant communication wrapup internal server error response has a 3xx status code
func (o *GetConversationsEmailParticipantCommunicationWrapupInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email participant communication wrapup internal server error response has a 4xx status code
func (o *GetConversationsEmailParticipantCommunicationWrapupInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations email participant communication wrapup internal server error response has a 5xx status code
func (o *GetConversationsEmailParticipantCommunicationWrapupInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations email participant communication wrapup internal server error response a status code equal to that given
func (o *GetConversationsEmailParticipantCommunicationWrapupInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetConversationsEmailParticipantCommunicationWrapupInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsEmailParticipantCommunicationWrapupInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsEmailParticipantCommunicationWrapupInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsEmailParticipantCommunicationWrapupInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsEmailParticipantCommunicationWrapupInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantCommunicationWrapupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantCommunicationWrapupServiceUnavailable creates a GetConversationsEmailParticipantCommunicationWrapupServiceUnavailable with default headers values
func NewGetConversationsEmailParticipantCommunicationWrapupServiceUnavailable() *GetConversationsEmailParticipantCommunicationWrapupServiceUnavailable {
	return &GetConversationsEmailParticipantCommunicationWrapupServiceUnavailable{}
}

/*
GetConversationsEmailParticipantCommunicationWrapupServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetConversationsEmailParticipantCommunicationWrapupServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email participant communication wrapup service unavailable response has a 2xx status code
func (o *GetConversationsEmailParticipantCommunicationWrapupServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email participant communication wrapup service unavailable response has a 3xx status code
func (o *GetConversationsEmailParticipantCommunicationWrapupServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email participant communication wrapup service unavailable response has a 4xx status code
func (o *GetConversationsEmailParticipantCommunicationWrapupServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations email participant communication wrapup service unavailable response has a 5xx status code
func (o *GetConversationsEmailParticipantCommunicationWrapupServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations email participant communication wrapup service unavailable response a status code equal to that given
func (o *GetConversationsEmailParticipantCommunicationWrapupServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetConversationsEmailParticipantCommunicationWrapupServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsEmailParticipantCommunicationWrapupServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsEmailParticipantCommunicationWrapupServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsEmailParticipantCommunicationWrapupServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsEmailParticipantCommunicationWrapupServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantCommunicationWrapupServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailParticipantCommunicationWrapupGatewayTimeout creates a GetConversationsEmailParticipantCommunicationWrapupGatewayTimeout with default headers values
func NewGetConversationsEmailParticipantCommunicationWrapupGatewayTimeout() *GetConversationsEmailParticipantCommunicationWrapupGatewayTimeout {
	return &GetConversationsEmailParticipantCommunicationWrapupGatewayTimeout{}
}

/*
GetConversationsEmailParticipantCommunicationWrapupGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetConversationsEmailParticipantCommunicationWrapupGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations email participant communication wrapup gateway timeout response has a 2xx status code
func (o *GetConversationsEmailParticipantCommunicationWrapupGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations email participant communication wrapup gateway timeout response has a 3xx status code
func (o *GetConversationsEmailParticipantCommunicationWrapupGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations email participant communication wrapup gateway timeout response has a 4xx status code
func (o *GetConversationsEmailParticipantCommunicationWrapupGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations email participant communication wrapup gateway timeout response has a 5xx status code
func (o *GetConversationsEmailParticipantCommunicationWrapupGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations email participant communication wrapup gateway timeout response a status code equal to that given
func (o *GetConversationsEmailParticipantCommunicationWrapupGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetConversationsEmailParticipantCommunicationWrapupGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsEmailParticipantCommunicationWrapupGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsEmailParticipantCommunicationWrapupGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] getConversationsEmailParticipantCommunicationWrapupGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsEmailParticipantCommunicationWrapupGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailParticipantCommunicationWrapupGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
