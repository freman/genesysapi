// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostConversationsCallbackParticipantReplaceReader is a Reader for the PostConversationsCallbackParticipantReplace structure.
type PostConversationsCallbackParticipantReplaceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostConversationsCallbackParticipantReplaceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewPostConversationsCallbackParticipantReplaceAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostConversationsCallbackParticipantReplaceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostConversationsCallbackParticipantReplaceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostConversationsCallbackParticipantReplaceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostConversationsCallbackParticipantReplaceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostConversationsCallbackParticipantReplaceRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostConversationsCallbackParticipantReplaceRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostConversationsCallbackParticipantReplaceUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostConversationsCallbackParticipantReplaceTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostConversationsCallbackParticipantReplaceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostConversationsCallbackParticipantReplaceServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostConversationsCallbackParticipantReplaceGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostConversationsCallbackParticipantReplaceAccepted creates a PostConversationsCallbackParticipantReplaceAccepted with default headers values
func NewPostConversationsCallbackParticipantReplaceAccepted() *PostConversationsCallbackParticipantReplaceAccepted {
	return &PostConversationsCallbackParticipantReplaceAccepted{}
}

/*
PostConversationsCallbackParticipantReplaceAccepted describes a response with status code 202, with default header values.

Accepted
*/
type PostConversationsCallbackParticipantReplaceAccepted struct {
}

// IsSuccess returns true when this post conversations callback participant replace accepted response has a 2xx status code
func (o *PostConversationsCallbackParticipantReplaceAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post conversations callback participant replace accepted response has a 3xx status code
func (o *PostConversationsCallbackParticipantReplaceAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations callback participant replace accepted response has a 4xx status code
func (o *PostConversationsCallbackParticipantReplaceAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations callback participant replace accepted response has a 5xx status code
func (o *PostConversationsCallbackParticipantReplaceAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations callback participant replace accepted response a status code equal to that given
func (o *PostConversationsCallbackParticipantReplaceAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *PostConversationsCallbackParticipantReplaceAccepted) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/replace][%d] postConversationsCallbackParticipantReplaceAccepted ", 202)
}

func (o *PostConversationsCallbackParticipantReplaceAccepted) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/replace][%d] postConversationsCallbackParticipantReplaceAccepted ", 202)
}

func (o *PostConversationsCallbackParticipantReplaceAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostConversationsCallbackParticipantReplaceBadRequest creates a PostConversationsCallbackParticipantReplaceBadRequest with default headers values
func NewPostConversationsCallbackParticipantReplaceBadRequest() *PostConversationsCallbackParticipantReplaceBadRequest {
	return &PostConversationsCallbackParticipantReplaceBadRequest{}
}

/*
PostConversationsCallbackParticipantReplaceBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostConversationsCallbackParticipantReplaceBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations callback participant replace bad request response has a 2xx status code
func (o *PostConversationsCallbackParticipantReplaceBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations callback participant replace bad request response has a 3xx status code
func (o *PostConversationsCallbackParticipantReplaceBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations callback participant replace bad request response has a 4xx status code
func (o *PostConversationsCallbackParticipantReplaceBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations callback participant replace bad request response has a 5xx status code
func (o *PostConversationsCallbackParticipantReplaceBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations callback participant replace bad request response a status code equal to that given
func (o *PostConversationsCallbackParticipantReplaceBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostConversationsCallbackParticipantReplaceBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/replace][%d] postConversationsCallbackParticipantReplaceBadRequest  %+v", 400, o.Payload)
}

func (o *PostConversationsCallbackParticipantReplaceBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/replace][%d] postConversationsCallbackParticipantReplaceBadRequest  %+v", 400, o.Payload)
}

func (o *PostConversationsCallbackParticipantReplaceBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallbackParticipantReplaceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallbackParticipantReplaceUnauthorized creates a PostConversationsCallbackParticipantReplaceUnauthorized with default headers values
func NewPostConversationsCallbackParticipantReplaceUnauthorized() *PostConversationsCallbackParticipantReplaceUnauthorized {
	return &PostConversationsCallbackParticipantReplaceUnauthorized{}
}

/*
PostConversationsCallbackParticipantReplaceUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostConversationsCallbackParticipantReplaceUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations callback participant replace unauthorized response has a 2xx status code
func (o *PostConversationsCallbackParticipantReplaceUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations callback participant replace unauthorized response has a 3xx status code
func (o *PostConversationsCallbackParticipantReplaceUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations callback participant replace unauthorized response has a 4xx status code
func (o *PostConversationsCallbackParticipantReplaceUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations callback participant replace unauthorized response has a 5xx status code
func (o *PostConversationsCallbackParticipantReplaceUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations callback participant replace unauthorized response a status code equal to that given
func (o *PostConversationsCallbackParticipantReplaceUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostConversationsCallbackParticipantReplaceUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/replace][%d] postConversationsCallbackParticipantReplaceUnauthorized  %+v", 401, o.Payload)
}

func (o *PostConversationsCallbackParticipantReplaceUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/replace][%d] postConversationsCallbackParticipantReplaceUnauthorized  %+v", 401, o.Payload)
}

func (o *PostConversationsCallbackParticipantReplaceUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallbackParticipantReplaceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallbackParticipantReplaceForbidden creates a PostConversationsCallbackParticipantReplaceForbidden with default headers values
func NewPostConversationsCallbackParticipantReplaceForbidden() *PostConversationsCallbackParticipantReplaceForbidden {
	return &PostConversationsCallbackParticipantReplaceForbidden{}
}

/*
PostConversationsCallbackParticipantReplaceForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostConversationsCallbackParticipantReplaceForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations callback participant replace forbidden response has a 2xx status code
func (o *PostConversationsCallbackParticipantReplaceForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations callback participant replace forbidden response has a 3xx status code
func (o *PostConversationsCallbackParticipantReplaceForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations callback participant replace forbidden response has a 4xx status code
func (o *PostConversationsCallbackParticipantReplaceForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations callback participant replace forbidden response has a 5xx status code
func (o *PostConversationsCallbackParticipantReplaceForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations callback participant replace forbidden response a status code equal to that given
func (o *PostConversationsCallbackParticipantReplaceForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostConversationsCallbackParticipantReplaceForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/replace][%d] postConversationsCallbackParticipantReplaceForbidden  %+v", 403, o.Payload)
}

func (o *PostConversationsCallbackParticipantReplaceForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/replace][%d] postConversationsCallbackParticipantReplaceForbidden  %+v", 403, o.Payload)
}

func (o *PostConversationsCallbackParticipantReplaceForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallbackParticipantReplaceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallbackParticipantReplaceNotFound creates a PostConversationsCallbackParticipantReplaceNotFound with default headers values
func NewPostConversationsCallbackParticipantReplaceNotFound() *PostConversationsCallbackParticipantReplaceNotFound {
	return &PostConversationsCallbackParticipantReplaceNotFound{}
}

/*
PostConversationsCallbackParticipantReplaceNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostConversationsCallbackParticipantReplaceNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations callback participant replace not found response has a 2xx status code
func (o *PostConversationsCallbackParticipantReplaceNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations callback participant replace not found response has a 3xx status code
func (o *PostConversationsCallbackParticipantReplaceNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations callback participant replace not found response has a 4xx status code
func (o *PostConversationsCallbackParticipantReplaceNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations callback participant replace not found response has a 5xx status code
func (o *PostConversationsCallbackParticipantReplaceNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations callback participant replace not found response a status code equal to that given
func (o *PostConversationsCallbackParticipantReplaceNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostConversationsCallbackParticipantReplaceNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/replace][%d] postConversationsCallbackParticipantReplaceNotFound  %+v", 404, o.Payload)
}

func (o *PostConversationsCallbackParticipantReplaceNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/replace][%d] postConversationsCallbackParticipantReplaceNotFound  %+v", 404, o.Payload)
}

func (o *PostConversationsCallbackParticipantReplaceNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallbackParticipantReplaceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallbackParticipantReplaceRequestTimeout creates a PostConversationsCallbackParticipantReplaceRequestTimeout with default headers values
func NewPostConversationsCallbackParticipantReplaceRequestTimeout() *PostConversationsCallbackParticipantReplaceRequestTimeout {
	return &PostConversationsCallbackParticipantReplaceRequestTimeout{}
}

/*
PostConversationsCallbackParticipantReplaceRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostConversationsCallbackParticipantReplaceRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations callback participant replace request timeout response has a 2xx status code
func (o *PostConversationsCallbackParticipantReplaceRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations callback participant replace request timeout response has a 3xx status code
func (o *PostConversationsCallbackParticipantReplaceRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations callback participant replace request timeout response has a 4xx status code
func (o *PostConversationsCallbackParticipantReplaceRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations callback participant replace request timeout response has a 5xx status code
func (o *PostConversationsCallbackParticipantReplaceRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations callback participant replace request timeout response a status code equal to that given
func (o *PostConversationsCallbackParticipantReplaceRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostConversationsCallbackParticipantReplaceRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/replace][%d] postConversationsCallbackParticipantReplaceRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostConversationsCallbackParticipantReplaceRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/replace][%d] postConversationsCallbackParticipantReplaceRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostConversationsCallbackParticipantReplaceRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallbackParticipantReplaceRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallbackParticipantReplaceRequestEntityTooLarge creates a PostConversationsCallbackParticipantReplaceRequestEntityTooLarge with default headers values
func NewPostConversationsCallbackParticipantReplaceRequestEntityTooLarge() *PostConversationsCallbackParticipantReplaceRequestEntityTooLarge {
	return &PostConversationsCallbackParticipantReplaceRequestEntityTooLarge{}
}

/*
PostConversationsCallbackParticipantReplaceRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PostConversationsCallbackParticipantReplaceRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations callback participant replace request entity too large response has a 2xx status code
func (o *PostConversationsCallbackParticipantReplaceRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations callback participant replace request entity too large response has a 3xx status code
func (o *PostConversationsCallbackParticipantReplaceRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations callback participant replace request entity too large response has a 4xx status code
func (o *PostConversationsCallbackParticipantReplaceRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations callback participant replace request entity too large response has a 5xx status code
func (o *PostConversationsCallbackParticipantReplaceRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations callback participant replace request entity too large response a status code equal to that given
func (o *PostConversationsCallbackParticipantReplaceRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostConversationsCallbackParticipantReplaceRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/replace][%d] postConversationsCallbackParticipantReplaceRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostConversationsCallbackParticipantReplaceRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/replace][%d] postConversationsCallbackParticipantReplaceRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostConversationsCallbackParticipantReplaceRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallbackParticipantReplaceRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallbackParticipantReplaceUnsupportedMediaType creates a PostConversationsCallbackParticipantReplaceUnsupportedMediaType with default headers values
func NewPostConversationsCallbackParticipantReplaceUnsupportedMediaType() *PostConversationsCallbackParticipantReplaceUnsupportedMediaType {
	return &PostConversationsCallbackParticipantReplaceUnsupportedMediaType{}
}

/*
PostConversationsCallbackParticipantReplaceUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostConversationsCallbackParticipantReplaceUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations callback participant replace unsupported media type response has a 2xx status code
func (o *PostConversationsCallbackParticipantReplaceUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations callback participant replace unsupported media type response has a 3xx status code
func (o *PostConversationsCallbackParticipantReplaceUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations callback participant replace unsupported media type response has a 4xx status code
func (o *PostConversationsCallbackParticipantReplaceUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations callback participant replace unsupported media type response has a 5xx status code
func (o *PostConversationsCallbackParticipantReplaceUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations callback participant replace unsupported media type response a status code equal to that given
func (o *PostConversationsCallbackParticipantReplaceUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostConversationsCallbackParticipantReplaceUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/replace][%d] postConversationsCallbackParticipantReplaceUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostConversationsCallbackParticipantReplaceUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/replace][%d] postConversationsCallbackParticipantReplaceUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostConversationsCallbackParticipantReplaceUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallbackParticipantReplaceUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallbackParticipantReplaceTooManyRequests creates a PostConversationsCallbackParticipantReplaceTooManyRequests with default headers values
func NewPostConversationsCallbackParticipantReplaceTooManyRequests() *PostConversationsCallbackParticipantReplaceTooManyRequests {
	return &PostConversationsCallbackParticipantReplaceTooManyRequests{}
}

/*
PostConversationsCallbackParticipantReplaceTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostConversationsCallbackParticipantReplaceTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations callback participant replace too many requests response has a 2xx status code
func (o *PostConversationsCallbackParticipantReplaceTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations callback participant replace too many requests response has a 3xx status code
func (o *PostConversationsCallbackParticipantReplaceTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations callback participant replace too many requests response has a 4xx status code
func (o *PostConversationsCallbackParticipantReplaceTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations callback participant replace too many requests response has a 5xx status code
func (o *PostConversationsCallbackParticipantReplaceTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations callback participant replace too many requests response a status code equal to that given
func (o *PostConversationsCallbackParticipantReplaceTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostConversationsCallbackParticipantReplaceTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/replace][%d] postConversationsCallbackParticipantReplaceTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostConversationsCallbackParticipantReplaceTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/replace][%d] postConversationsCallbackParticipantReplaceTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostConversationsCallbackParticipantReplaceTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallbackParticipantReplaceTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallbackParticipantReplaceInternalServerError creates a PostConversationsCallbackParticipantReplaceInternalServerError with default headers values
func NewPostConversationsCallbackParticipantReplaceInternalServerError() *PostConversationsCallbackParticipantReplaceInternalServerError {
	return &PostConversationsCallbackParticipantReplaceInternalServerError{}
}

/*
PostConversationsCallbackParticipantReplaceInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostConversationsCallbackParticipantReplaceInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations callback participant replace internal server error response has a 2xx status code
func (o *PostConversationsCallbackParticipantReplaceInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations callback participant replace internal server error response has a 3xx status code
func (o *PostConversationsCallbackParticipantReplaceInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations callback participant replace internal server error response has a 4xx status code
func (o *PostConversationsCallbackParticipantReplaceInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations callback participant replace internal server error response has a 5xx status code
func (o *PostConversationsCallbackParticipantReplaceInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversations callback participant replace internal server error response a status code equal to that given
func (o *PostConversationsCallbackParticipantReplaceInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostConversationsCallbackParticipantReplaceInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/replace][%d] postConversationsCallbackParticipantReplaceInternalServerError  %+v", 500, o.Payload)
}

func (o *PostConversationsCallbackParticipantReplaceInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/replace][%d] postConversationsCallbackParticipantReplaceInternalServerError  %+v", 500, o.Payload)
}

func (o *PostConversationsCallbackParticipantReplaceInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallbackParticipantReplaceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallbackParticipantReplaceServiceUnavailable creates a PostConversationsCallbackParticipantReplaceServiceUnavailable with default headers values
func NewPostConversationsCallbackParticipantReplaceServiceUnavailable() *PostConversationsCallbackParticipantReplaceServiceUnavailable {
	return &PostConversationsCallbackParticipantReplaceServiceUnavailable{}
}

/*
PostConversationsCallbackParticipantReplaceServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostConversationsCallbackParticipantReplaceServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations callback participant replace service unavailable response has a 2xx status code
func (o *PostConversationsCallbackParticipantReplaceServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations callback participant replace service unavailable response has a 3xx status code
func (o *PostConversationsCallbackParticipantReplaceServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations callback participant replace service unavailable response has a 4xx status code
func (o *PostConversationsCallbackParticipantReplaceServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations callback participant replace service unavailable response has a 5xx status code
func (o *PostConversationsCallbackParticipantReplaceServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversations callback participant replace service unavailable response a status code equal to that given
func (o *PostConversationsCallbackParticipantReplaceServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostConversationsCallbackParticipantReplaceServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/replace][%d] postConversationsCallbackParticipantReplaceServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostConversationsCallbackParticipantReplaceServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/replace][%d] postConversationsCallbackParticipantReplaceServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostConversationsCallbackParticipantReplaceServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallbackParticipantReplaceServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallbackParticipantReplaceGatewayTimeout creates a PostConversationsCallbackParticipantReplaceGatewayTimeout with default headers values
func NewPostConversationsCallbackParticipantReplaceGatewayTimeout() *PostConversationsCallbackParticipantReplaceGatewayTimeout {
	return &PostConversationsCallbackParticipantReplaceGatewayTimeout{}
}

/*
PostConversationsCallbackParticipantReplaceGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostConversationsCallbackParticipantReplaceGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations callback participant replace gateway timeout response has a 2xx status code
func (o *PostConversationsCallbackParticipantReplaceGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations callback participant replace gateway timeout response has a 3xx status code
func (o *PostConversationsCallbackParticipantReplaceGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations callback participant replace gateway timeout response has a 4xx status code
func (o *PostConversationsCallbackParticipantReplaceGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations callback participant replace gateway timeout response has a 5xx status code
func (o *PostConversationsCallbackParticipantReplaceGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversations callback participant replace gateway timeout response a status code equal to that given
func (o *PostConversationsCallbackParticipantReplaceGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostConversationsCallbackParticipantReplaceGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/replace][%d] postConversationsCallbackParticipantReplaceGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostConversationsCallbackParticipantReplaceGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/replace][%d] postConversationsCallbackParticipantReplaceGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostConversationsCallbackParticipantReplaceGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallbackParticipantReplaceGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
