// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetConversationParticipantSecureivrsessionReader is a Reader for the GetConversationParticipantSecureivrsession structure.
type GetConversationParticipantSecureivrsessionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConversationParticipantSecureivrsessionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConversationParticipantSecureivrsessionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetConversationParticipantSecureivrsessionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetConversationParticipantSecureivrsessionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetConversationParticipantSecureivrsessionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetConversationParticipantSecureivrsessionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetConversationParticipantSecureivrsessionRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetConversationParticipantSecureivrsessionUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetConversationParticipantSecureivrsessionTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetConversationParticipantSecureivrsessionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetConversationParticipantSecureivrsessionServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetConversationParticipantSecureivrsessionGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetConversationParticipantSecureivrsessionOK creates a GetConversationParticipantSecureivrsessionOK with default headers values
func NewGetConversationParticipantSecureivrsessionOK() *GetConversationParticipantSecureivrsessionOK {
	return &GetConversationParticipantSecureivrsessionOK{}
}

/*GetConversationParticipantSecureivrsessionOK handles this case with default header values.

successful operation
*/
type GetConversationParticipantSecureivrsessionOK struct {
	Payload *models.SecureSession
}

func (o *GetConversationParticipantSecureivrsessionOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/participants/{participantId}/secureivrsessions/{secureSessionId}][%d] getConversationParticipantSecureivrsessionOK  %+v", 200, o.Payload)
}

func (o *GetConversationParticipantSecureivrsessionOK) GetPayload() *models.SecureSession {
	return o.Payload
}

func (o *GetConversationParticipantSecureivrsessionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SecureSession)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationParticipantSecureivrsessionBadRequest creates a GetConversationParticipantSecureivrsessionBadRequest with default headers values
func NewGetConversationParticipantSecureivrsessionBadRequest() *GetConversationParticipantSecureivrsessionBadRequest {
	return &GetConversationParticipantSecureivrsessionBadRequest{}
}

/*GetConversationParticipantSecureivrsessionBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetConversationParticipantSecureivrsessionBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetConversationParticipantSecureivrsessionBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/participants/{participantId}/secureivrsessions/{secureSessionId}][%d] getConversationParticipantSecureivrsessionBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationParticipantSecureivrsessionBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationParticipantSecureivrsessionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationParticipantSecureivrsessionUnauthorized creates a GetConversationParticipantSecureivrsessionUnauthorized with default headers values
func NewGetConversationParticipantSecureivrsessionUnauthorized() *GetConversationParticipantSecureivrsessionUnauthorized {
	return &GetConversationParticipantSecureivrsessionUnauthorized{}
}

/*GetConversationParticipantSecureivrsessionUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetConversationParticipantSecureivrsessionUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetConversationParticipantSecureivrsessionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/participants/{participantId}/secureivrsessions/{secureSessionId}][%d] getConversationParticipantSecureivrsessionUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationParticipantSecureivrsessionUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationParticipantSecureivrsessionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationParticipantSecureivrsessionForbidden creates a GetConversationParticipantSecureivrsessionForbidden with default headers values
func NewGetConversationParticipantSecureivrsessionForbidden() *GetConversationParticipantSecureivrsessionForbidden {
	return &GetConversationParticipantSecureivrsessionForbidden{}
}

/*GetConversationParticipantSecureivrsessionForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetConversationParticipantSecureivrsessionForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetConversationParticipantSecureivrsessionForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/participants/{participantId}/secureivrsessions/{secureSessionId}][%d] getConversationParticipantSecureivrsessionForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationParticipantSecureivrsessionForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationParticipantSecureivrsessionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationParticipantSecureivrsessionNotFound creates a GetConversationParticipantSecureivrsessionNotFound with default headers values
func NewGetConversationParticipantSecureivrsessionNotFound() *GetConversationParticipantSecureivrsessionNotFound {
	return &GetConversationParticipantSecureivrsessionNotFound{}
}

/*GetConversationParticipantSecureivrsessionNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetConversationParticipantSecureivrsessionNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetConversationParticipantSecureivrsessionNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/participants/{participantId}/secureivrsessions/{secureSessionId}][%d] getConversationParticipantSecureivrsessionNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationParticipantSecureivrsessionNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationParticipantSecureivrsessionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationParticipantSecureivrsessionRequestEntityTooLarge creates a GetConversationParticipantSecureivrsessionRequestEntityTooLarge with default headers values
func NewGetConversationParticipantSecureivrsessionRequestEntityTooLarge() *GetConversationParticipantSecureivrsessionRequestEntityTooLarge {
	return &GetConversationParticipantSecureivrsessionRequestEntityTooLarge{}
}

/*GetConversationParticipantSecureivrsessionRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetConversationParticipantSecureivrsessionRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetConversationParticipantSecureivrsessionRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/participants/{participantId}/secureivrsessions/{secureSessionId}][%d] getConversationParticipantSecureivrsessionRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationParticipantSecureivrsessionRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationParticipantSecureivrsessionRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationParticipantSecureivrsessionUnsupportedMediaType creates a GetConversationParticipantSecureivrsessionUnsupportedMediaType with default headers values
func NewGetConversationParticipantSecureivrsessionUnsupportedMediaType() *GetConversationParticipantSecureivrsessionUnsupportedMediaType {
	return &GetConversationParticipantSecureivrsessionUnsupportedMediaType{}
}

/*GetConversationParticipantSecureivrsessionUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetConversationParticipantSecureivrsessionUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetConversationParticipantSecureivrsessionUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/participants/{participantId}/secureivrsessions/{secureSessionId}][%d] getConversationParticipantSecureivrsessionUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationParticipantSecureivrsessionUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationParticipantSecureivrsessionUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationParticipantSecureivrsessionTooManyRequests creates a GetConversationParticipantSecureivrsessionTooManyRequests with default headers values
func NewGetConversationParticipantSecureivrsessionTooManyRequests() *GetConversationParticipantSecureivrsessionTooManyRequests {
	return &GetConversationParticipantSecureivrsessionTooManyRequests{}
}

/*GetConversationParticipantSecureivrsessionTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type GetConversationParticipantSecureivrsessionTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetConversationParticipantSecureivrsessionTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/participants/{participantId}/secureivrsessions/{secureSessionId}][%d] getConversationParticipantSecureivrsessionTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationParticipantSecureivrsessionTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationParticipantSecureivrsessionTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationParticipantSecureivrsessionInternalServerError creates a GetConversationParticipantSecureivrsessionInternalServerError with default headers values
func NewGetConversationParticipantSecureivrsessionInternalServerError() *GetConversationParticipantSecureivrsessionInternalServerError {
	return &GetConversationParticipantSecureivrsessionInternalServerError{}
}

/*GetConversationParticipantSecureivrsessionInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetConversationParticipantSecureivrsessionInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetConversationParticipantSecureivrsessionInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/participants/{participantId}/secureivrsessions/{secureSessionId}][%d] getConversationParticipantSecureivrsessionInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationParticipantSecureivrsessionInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationParticipantSecureivrsessionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationParticipantSecureivrsessionServiceUnavailable creates a GetConversationParticipantSecureivrsessionServiceUnavailable with default headers values
func NewGetConversationParticipantSecureivrsessionServiceUnavailable() *GetConversationParticipantSecureivrsessionServiceUnavailable {
	return &GetConversationParticipantSecureivrsessionServiceUnavailable{}
}

/*GetConversationParticipantSecureivrsessionServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetConversationParticipantSecureivrsessionServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetConversationParticipantSecureivrsessionServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/participants/{participantId}/secureivrsessions/{secureSessionId}][%d] getConversationParticipantSecureivrsessionServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationParticipantSecureivrsessionServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationParticipantSecureivrsessionServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationParticipantSecureivrsessionGatewayTimeout creates a GetConversationParticipantSecureivrsessionGatewayTimeout with default headers values
func NewGetConversationParticipantSecureivrsessionGatewayTimeout() *GetConversationParticipantSecureivrsessionGatewayTimeout {
	return &GetConversationParticipantSecureivrsessionGatewayTimeout{}
}

/*GetConversationParticipantSecureivrsessionGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetConversationParticipantSecureivrsessionGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetConversationParticipantSecureivrsessionGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/participants/{participantId}/secureivrsessions/{secureSessionId}][%d] getConversationParticipantSecureivrsessionGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationParticipantSecureivrsessionGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationParticipantSecureivrsessionGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
