// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostConversationsCallbackParticipantCommunicationWrapupReader is a Reader for the PostConversationsCallbackParticipantCommunicationWrapup structure.
type PostConversationsCallbackParticipantCommunicationWrapupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostConversationsCallbackParticipantCommunicationWrapupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewPostConversationsCallbackParticipantCommunicationWrapupAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostConversationsCallbackParticipantCommunicationWrapupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostConversationsCallbackParticipantCommunicationWrapupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostConversationsCallbackParticipantCommunicationWrapupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostConversationsCallbackParticipantCommunicationWrapupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostConversationsCallbackParticipantCommunicationWrapupRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostConversationsCallbackParticipantCommunicationWrapupRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostConversationsCallbackParticipantCommunicationWrapupUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostConversationsCallbackParticipantCommunicationWrapupTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostConversationsCallbackParticipantCommunicationWrapupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostConversationsCallbackParticipantCommunicationWrapupServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostConversationsCallbackParticipantCommunicationWrapupGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostConversationsCallbackParticipantCommunicationWrapupAccepted creates a PostConversationsCallbackParticipantCommunicationWrapupAccepted with default headers values
func NewPostConversationsCallbackParticipantCommunicationWrapupAccepted() *PostConversationsCallbackParticipantCommunicationWrapupAccepted {
	return &PostConversationsCallbackParticipantCommunicationWrapupAccepted{}
}

/*
PostConversationsCallbackParticipantCommunicationWrapupAccepted describes a response with status code 202, with default header values.

Accepted
*/
type PostConversationsCallbackParticipantCommunicationWrapupAccepted struct {
}

// IsSuccess returns true when this post conversations callback participant communication wrapup accepted response has a 2xx status code
func (o *PostConversationsCallbackParticipantCommunicationWrapupAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post conversations callback participant communication wrapup accepted response has a 3xx status code
func (o *PostConversationsCallbackParticipantCommunicationWrapupAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations callback participant communication wrapup accepted response has a 4xx status code
func (o *PostConversationsCallbackParticipantCommunicationWrapupAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations callback participant communication wrapup accepted response has a 5xx status code
func (o *PostConversationsCallbackParticipantCommunicationWrapupAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations callback participant communication wrapup accepted response a status code equal to that given
func (o *PostConversationsCallbackParticipantCommunicationWrapupAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *PostConversationsCallbackParticipantCommunicationWrapupAccepted) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsCallbackParticipantCommunicationWrapupAccepted ", 202)
}

func (o *PostConversationsCallbackParticipantCommunicationWrapupAccepted) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsCallbackParticipantCommunicationWrapupAccepted ", 202)
}

func (o *PostConversationsCallbackParticipantCommunicationWrapupAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostConversationsCallbackParticipantCommunicationWrapupBadRequest creates a PostConversationsCallbackParticipantCommunicationWrapupBadRequest with default headers values
func NewPostConversationsCallbackParticipantCommunicationWrapupBadRequest() *PostConversationsCallbackParticipantCommunicationWrapupBadRequest {
	return &PostConversationsCallbackParticipantCommunicationWrapupBadRequest{}
}

/*
PostConversationsCallbackParticipantCommunicationWrapupBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostConversationsCallbackParticipantCommunicationWrapupBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations callback participant communication wrapup bad request response has a 2xx status code
func (o *PostConversationsCallbackParticipantCommunicationWrapupBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations callback participant communication wrapup bad request response has a 3xx status code
func (o *PostConversationsCallbackParticipantCommunicationWrapupBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations callback participant communication wrapup bad request response has a 4xx status code
func (o *PostConversationsCallbackParticipantCommunicationWrapupBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations callback participant communication wrapup bad request response has a 5xx status code
func (o *PostConversationsCallbackParticipantCommunicationWrapupBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations callback participant communication wrapup bad request response a status code equal to that given
func (o *PostConversationsCallbackParticipantCommunicationWrapupBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostConversationsCallbackParticipantCommunicationWrapupBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsCallbackParticipantCommunicationWrapupBadRequest  %+v", 400, o.Payload)
}

func (o *PostConversationsCallbackParticipantCommunicationWrapupBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsCallbackParticipantCommunicationWrapupBadRequest  %+v", 400, o.Payload)
}

func (o *PostConversationsCallbackParticipantCommunicationWrapupBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallbackParticipantCommunicationWrapupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallbackParticipantCommunicationWrapupUnauthorized creates a PostConversationsCallbackParticipantCommunicationWrapupUnauthorized with default headers values
func NewPostConversationsCallbackParticipantCommunicationWrapupUnauthorized() *PostConversationsCallbackParticipantCommunicationWrapupUnauthorized {
	return &PostConversationsCallbackParticipantCommunicationWrapupUnauthorized{}
}

/*
PostConversationsCallbackParticipantCommunicationWrapupUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostConversationsCallbackParticipantCommunicationWrapupUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations callback participant communication wrapup unauthorized response has a 2xx status code
func (o *PostConversationsCallbackParticipantCommunicationWrapupUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations callback participant communication wrapup unauthorized response has a 3xx status code
func (o *PostConversationsCallbackParticipantCommunicationWrapupUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations callback participant communication wrapup unauthorized response has a 4xx status code
func (o *PostConversationsCallbackParticipantCommunicationWrapupUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations callback participant communication wrapup unauthorized response has a 5xx status code
func (o *PostConversationsCallbackParticipantCommunicationWrapupUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations callback participant communication wrapup unauthorized response a status code equal to that given
func (o *PostConversationsCallbackParticipantCommunicationWrapupUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostConversationsCallbackParticipantCommunicationWrapupUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsCallbackParticipantCommunicationWrapupUnauthorized  %+v", 401, o.Payload)
}

func (o *PostConversationsCallbackParticipantCommunicationWrapupUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsCallbackParticipantCommunicationWrapupUnauthorized  %+v", 401, o.Payload)
}

func (o *PostConversationsCallbackParticipantCommunicationWrapupUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallbackParticipantCommunicationWrapupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallbackParticipantCommunicationWrapupForbidden creates a PostConversationsCallbackParticipantCommunicationWrapupForbidden with default headers values
func NewPostConversationsCallbackParticipantCommunicationWrapupForbidden() *PostConversationsCallbackParticipantCommunicationWrapupForbidden {
	return &PostConversationsCallbackParticipantCommunicationWrapupForbidden{}
}

/*
PostConversationsCallbackParticipantCommunicationWrapupForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostConversationsCallbackParticipantCommunicationWrapupForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations callback participant communication wrapup forbidden response has a 2xx status code
func (o *PostConversationsCallbackParticipantCommunicationWrapupForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations callback participant communication wrapup forbidden response has a 3xx status code
func (o *PostConversationsCallbackParticipantCommunicationWrapupForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations callback participant communication wrapup forbidden response has a 4xx status code
func (o *PostConversationsCallbackParticipantCommunicationWrapupForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations callback participant communication wrapup forbidden response has a 5xx status code
func (o *PostConversationsCallbackParticipantCommunicationWrapupForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations callback participant communication wrapup forbidden response a status code equal to that given
func (o *PostConversationsCallbackParticipantCommunicationWrapupForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostConversationsCallbackParticipantCommunicationWrapupForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsCallbackParticipantCommunicationWrapupForbidden  %+v", 403, o.Payload)
}

func (o *PostConversationsCallbackParticipantCommunicationWrapupForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsCallbackParticipantCommunicationWrapupForbidden  %+v", 403, o.Payload)
}

func (o *PostConversationsCallbackParticipantCommunicationWrapupForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallbackParticipantCommunicationWrapupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallbackParticipantCommunicationWrapupNotFound creates a PostConversationsCallbackParticipantCommunicationWrapupNotFound with default headers values
func NewPostConversationsCallbackParticipantCommunicationWrapupNotFound() *PostConversationsCallbackParticipantCommunicationWrapupNotFound {
	return &PostConversationsCallbackParticipantCommunicationWrapupNotFound{}
}

/*
PostConversationsCallbackParticipantCommunicationWrapupNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostConversationsCallbackParticipantCommunicationWrapupNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations callback participant communication wrapup not found response has a 2xx status code
func (o *PostConversationsCallbackParticipantCommunicationWrapupNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations callback participant communication wrapup not found response has a 3xx status code
func (o *PostConversationsCallbackParticipantCommunicationWrapupNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations callback participant communication wrapup not found response has a 4xx status code
func (o *PostConversationsCallbackParticipantCommunicationWrapupNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations callback participant communication wrapup not found response has a 5xx status code
func (o *PostConversationsCallbackParticipantCommunicationWrapupNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations callback participant communication wrapup not found response a status code equal to that given
func (o *PostConversationsCallbackParticipantCommunicationWrapupNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostConversationsCallbackParticipantCommunicationWrapupNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsCallbackParticipantCommunicationWrapupNotFound  %+v", 404, o.Payload)
}

func (o *PostConversationsCallbackParticipantCommunicationWrapupNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsCallbackParticipantCommunicationWrapupNotFound  %+v", 404, o.Payload)
}

func (o *PostConversationsCallbackParticipantCommunicationWrapupNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallbackParticipantCommunicationWrapupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallbackParticipantCommunicationWrapupRequestTimeout creates a PostConversationsCallbackParticipantCommunicationWrapupRequestTimeout with default headers values
func NewPostConversationsCallbackParticipantCommunicationWrapupRequestTimeout() *PostConversationsCallbackParticipantCommunicationWrapupRequestTimeout {
	return &PostConversationsCallbackParticipantCommunicationWrapupRequestTimeout{}
}

/*
PostConversationsCallbackParticipantCommunicationWrapupRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostConversationsCallbackParticipantCommunicationWrapupRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations callback participant communication wrapup request timeout response has a 2xx status code
func (o *PostConversationsCallbackParticipantCommunicationWrapupRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations callback participant communication wrapup request timeout response has a 3xx status code
func (o *PostConversationsCallbackParticipantCommunicationWrapupRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations callback participant communication wrapup request timeout response has a 4xx status code
func (o *PostConversationsCallbackParticipantCommunicationWrapupRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations callback participant communication wrapup request timeout response has a 5xx status code
func (o *PostConversationsCallbackParticipantCommunicationWrapupRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations callback participant communication wrapup request timeout response a status code equal to that given
func (o *PostConversationsCallbackParticipantCommunicationWrapupRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostConversationsCallbackParticipantCommunicationWrapupRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsCallbackParticipantCommunicationWrapupRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostConversationsCallbackParticipantCommunicationWrapupRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsCallbackParticipantCommunicationWrapupRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostConversationsCallbackParticipantCommunicationWrapupRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallbackParticipantCommunicationWrapupRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallbackParticipantCommunicationWrapupRequestEntityTooLarge creates a PostConversationsCallbackParticipantCommunicationWrapupRequestEntityTooLarge with default headers values
func NewPostConversationsCallbackParticipantCommunicationWrapupRequestEntityTooLarge() *PostConversationsCallbackParticipantCommunicationWrapupRequestEntityTooLarge {
	return &PostConversationsCallbackParticipantCommunicationWrapupRequestEntityTooLarge{}
}

/*
PostConversationsCallbackParticipantCommunicationWrapupRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PostConversationsCallbackParticipantCommunicationWrapupRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations callback participant communication wrapup request entity too large response has a 2xx status code
func (o *PostConversationsCallbackParticipantCommunicationWrapupRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations callback participant communication wrapup request entity too large response has a 3xx status code
func (o *PostConversationsCallbackParticipantCommunicationWrapupRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations callback participant communication wrapup request entity too large response has a 4xx status code
func (o *PostConversationsCallbackParticipantCommunicationWrapupRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations callback participant communication wrapup request entity too large response has a 5xx status code
func (o *PostConversationsCallbackParticipantCommunicationWrapupRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations callback participant communication wrapup request entity too large response a status code equal to that given
func (o *PostConversationsCallbackParticipantCommunicationWrapupRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostConversationsCallbackParticipantCommunicationWrapupRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsCallbackParticipantCommunicationWrapupRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostConversationsCallbackParticipantCommunicationWrapupRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsCallbackParticipantCommunicationWrapupRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostConversationsCallbackParticipantCommunicationWrapupRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallbackParticipantCommunicationWrapupRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallbackParticipantCommunicationWrapupUnsupportedMediaType creates a PostConversationsCallbackParticipantCommunicationWrapupUnsupportedMediaType with default headers values
func NewPostConversationsCallbackParticipantCommunicationWrapupUnsupportedMediaType() *PostConversationsCallbackParticipantCommunicationWrapupUnsupportedMediaType {
	return &PostConversationsCallbackParticipantCommunicationWrapupUnsupportedMediaType{}
}

/*
PostConversationsCallbackParticipantCommunicationWrapupUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostConversationsCallbackParticipantCommunicationWrapupUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations callback participant communication wrapup unsupported media type response has a 2xx status code
func (o *PostConversationsCallbackParticipantCommunicationWrapupUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations callback participant communication wrapup unsupported media type response has a 3xx status code
func (o *PostConversationsCallbackParticipantCommunicationWrapupUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations callback participant communication wrapup unsupported media type response has a 4xx status code
func (o *PostConversationsCallbackParticipantCommunicationWrapupUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations callback participant communication wrapup unsupported media type response has a 5xx status code
func (o *PostConversationsCallbackParticipantCommunicationWrapupUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations callback participant communication wrapup unsupported media type response a status code equal to that given
func (o *PostConversationsCallbackParticipantCommunicationWrapupUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostConversationsCallbackParticipantCommunicationWrapupUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsCallbackParticipantCommunicationWrapupUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostConversationsCallbackParticipantCommunicationWrapupUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsCallbackParticipantCommunicationWrapupUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostConversationsCallbackParticipantCommunicationWrapupUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallbackParticipantCommunicationWrapupUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallbackParticipantCommunicationWrapupTooManyRequests creates a PostConversationsCallbackParticipantCommunicationWrapupTooManyRequests with default headers values
func NewPostConversationsCallbackParticipantCommunicationWrapupTooManyRequests() *PostConversationsCallbackParticipantCommunicationWrapupTooManyRequests {
	return &PostConversationsCallbackParticipantCommunicationWrapupTooManyRequests{}
}

/*
PostConversationsCallbackParticipantCommunicationWrapupTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostConversationsCallbackParticipantCommunicationWrapupTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations callback participant communication wrapup too many requests response has a 2xx status code
func (o *PostConversationsCallbackParticipantCommunicationWrapupTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations callback participant communication wrapup too many requests response has a 3xx status code
func (o *PostConversationsCallbackParticipantCommunicationWrapupTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations callback participant communication wrapup too many requests response has a 4xx status code
func (o *PostConversationsCallbackParticipantCommunicationWrapupTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations callback participant communication wrapup too many requests response has a 5xx status code
func (o *PostConversationsCallbackParticipantCommunicationWrapupTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations callback participant communication wrapup too many requests response a status code equal to that given
func (o *PostConversationsCallbackParticipantCommunicationWrapupTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostConversationsCallbackParticipantCommunicationWrapupTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsCallbackParticipantCommunicationWrapupTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostConversationsCallbackParticipantCommunicationWrapupTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsCallbackParticipantCommunicationWrapupTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostConversationsCallbackParticipantCommunicationWrapupTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallbackParticipantCommunicationWrapupTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallbackParticipantCommunicationWrapupInternalServerError creates a PostConversationsCallbackParticipantCommunicationWrapupInternalServerError with default headers values
func NewPostConversationsCallbackParticipantCommunicationWrapupInternalServerError() *PostConversationsCallbackParticipantCommunicationWrapupInternalServerError {
	return &PostConversationsCallbackParticipantCommunicationWrapupInternalServerError{}
}

/*
PostConversationsCallbackParticipantCommunicationWrapupInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostConversationsCallbackParticipantCommunicationWrapupInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations callback participant communication wrapup internal server error response has a 2xx status code
func (o *PostConversationsCallbackParticipantCommunicationWrapupInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations callback participant communication wrapup internal server error response has a 3xx status code
func (o *PostConversationsCallbackParticipantCommunicationWrapupInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations callback participant communication wrapup internal server error response has a 4xx status code
func (o *PostConversationsCallbackParticipantCommunicationWrapupInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations callback participant communication wrapup internal server error response has a 5xx status code
func (o *PostConversationsCallbackParticipantCommunicationWrapupInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversations callback participant communication wrapup internal server error response a status code equal to that given
func (o *PostConversationsCallbackParticipantCommunicationWrapupInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostConversationsCallbackParticipantCommunicationWrapupInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsCallbackParticipantCommunicationWrapupInternalServerError  %+v", 500, o.Payload)
}

func (o *PostConversationsCallbackParticipantCommunicationWrapupInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsCallbackParticipantCommunicationWrapupInternalServerError  %+v", 500, o.Payload)
}

func (o *PostConversationsCallbackParticipantCommunicationWrapupInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallbackParticipantCommunicationWrapupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallbackParticipantCommunicationWrapupServiceUnavailable creates a PostConversationsCallbackParticipantCommunicationWrapupServiceUnavailable with default headers values
func NewPostConversationsCallbackParticipantCommunicationWrapupServiceUnavailable() *PostConversationsCallbackParticipantCommunicationWrapupServiceUnavailable {
	return &PostConversationsCallbackParticipantCommunicationWrapupServiceUnavailable{}
}

/*
PostConversationsCallbackParticipantCommunicationWrapupServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostConversationsCallbackParticipantCommunicationWrapupServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations callback participant communication wrapup service unavailable response has a 2xx status code
func (o *PostConversationsCallbackParticipantCommunicationWrapupServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations callback participant communication wrapup service unavailable response has a 3xx status code
func (o *PostConversationsCallbackParticipantCommunicationWrapupServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations callback participant communication wrapup service unavailable response has a 4xx status code
func (o *PostConversationsCallbackParticipantCommunicationWrapupServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations callback participant communication wrapup service unavailable response has a 5xx status code
func (o *PostConversationsCallbackParticipantCommunicationWrapupServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversations callback participant communication wrapup service unavailable response a status code equal to that given
func (o *PostConversationsCallbackParticipantCommunicationWrapupServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostConversationsCallbackParticipantCommunicationWrapupServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsCallbackParticipantCommunicationWrapupServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostConversationsCallbackParticipantCommunicationWrapupServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsCallbackParticipantCommunicationWrapupServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostConversationsCallbackParticipantCommunicationWrapupServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallbackParticipantCommunicationWrapupServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallbackParticipantCommunicationWrapupGatewayTimeout creates a PostConversationsCallbackParticipantCommunicationWrapupGatewayTimeout with default headers values
func NewPostConversationsCallbackParticipantCommunicationWrapupGatewayTimeout() *PostConversationsCallbackParticipantCommunicationWrapupGatewayTimeout {
	return &PostConversationsCallbackParticipantCommunicationWrapupGatewayTimeout{}
}

/*
PostConversationsCallbackParticipantCommunicationWrapupGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostConversationsCallbackParticipantCommunicationWrapupGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations callback participant communication wrapup gateway timeout response has a 2xx status code
func (o *PostConversationsCallbackParticipantCommunicationWrapupGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations callback participant communication wrapup gateway timeout response has a 3xx status code
func (o *PostConversationsCallbackParticipantCommunicationWrapupGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations callback participant communication wrapup gateway timeout response has a 4xx status code
func (o *PostConversationsCallbackParticipantCommunicationWrapupGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations callback participant communication wrapup gateway timeout response has a 5xx status code
func (o *PostConversationsCallbackParticipantCommunicationWrapupGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversations callback participant communication wrapup gateway timeout response a status code equal to that given
func (o *PostConversationsCallbackParticipantCommunicationWrapupGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostConversationsCallbackParticipantCommunicationWrapupGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsCallbackParticipantCommunicationWrapupGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostConversationsCallbackParticipantCommunicationWrapupGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsCallbackParticipantCommunicationWrapupGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostConversationsCallbackParticipantCommunicationWrapupGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallbackParticipantCommunicationWrapupGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
