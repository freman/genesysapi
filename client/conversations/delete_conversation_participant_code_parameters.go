// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewDeleteConversationParticipantCodeParams creates a new DeleteConversationParticipantCodeParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDeleteConversationParticipantCodeParams() *DeleteConversationParticipantCodeParams {
	return &DeleteConversationParticipantCodeParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteConversationParticipantCodeParamsWithTimeout creates a new DeleteConversationParticipantCodeParams object
// with the ability to set a timeout on a request.
func NewDeleteConversationParticipantCodeParamsWithTimeout(timeout time.Duration) *DeleteConversationParticipantCodeParams {
	return &DeleteConversationParticipantCodeParams{
		timeout: timeout,
	}
}

// NewDeleteConversationParticipantCodeParamsWithContext creates a new DeleteConversationParticipantCodeParams object
// with the ability to set a context for a request.
func NewDeleteConversationParticipantCodeParamsWithContext(ctx context.Context) *DeleteConversationParticipantCodeParams {
	return &DeleteConversationParticipantCodeParams{
		Context: ctx,
	}
}

// NewDeleteConversationParticipantCodeParamsWithHTTPClient creates a new DeleteConversationParticipantCodeParams object
// with the ability to set a custom HTTPClient for a request.
func NewDeleteConversationParticipantCodeParamsWithHTTPClient(client *http.Client) *DeleteConversationParticipantCodeParams {
	return &DeleteConversationParticipantCodeParams{
		HTTPClient: client,
	}
}

/*
DeleteConversationParticipantCodeParams contains all the parameters to send to the API endpoint

	for the delete conversation participant code operation.

	Typically these are written to a http.Request.
*/
type DeleteConversationParticipantCodeParams struct {

	/* AddCommunicationCode.

	   addCommunicationCode
	*/
	AddCommunicationCode string

	/* ConversationID.

	   conversation ID
	*/
	ConversationID string

	/* ParticipantID.

	   participant ID
	*/
	ParticipantID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the delete conversation participant code params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteConversationParticipantCodeParams) WithDefaults() *DeleteConversationParticipantCodeParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the delete conversation participant code params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteConversationParticipantCodeParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the delete conversation participant code params
func (o *DeleteConversationParticipantCodeParams) WithTimeout(timeout time.Duration) *DeleteConversationParticipantCodeParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete conversation participant code params
func (o *DeleteConversationParticipantCodeParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete conversation participant code params
func (o *DeleteConversationParticipantCodeParams) WithContext(ctx context.Context) *DeleteConversationParticipantCodeParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete conversation participant code params
func (o *DeleteConversationParticipantCodeParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete conversation participant code params
func (o *DeleteConversationParticipantCodeParams) WithHTTPClient(client *http.Client) *DeleteConversationParticipantCodeParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete conversation participant code params
func (o *DeleteConversationParticipantCodeParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAddCommunicationCode adds the addCommunicationCode to the delete conversation participant code params
func (o *DeleteConversationParticipantCodeParams) WithAddCommunicationCode(addCommunicationCode string) *DeleteConversationParticipantCodeParams {
	o.SetAddCommunicationCode(addCommunicationCode)
	return o
}

// SetAddCommunicationCode adds the addCommunicationCode to the delete conversation participant code params
func (o *DeleteConversationParticipantCodeParams) SetAddCommunicationCode(addCommunicationCode string) {
	o.AddCommunicationCode = addCommunicationCode
}

// WithConversationID adds the conversationID to the delete conversation participant code params
func (o *DeleteConversationParticipantCodeParams) WithConversationID(conversationID string) *DeleteConversationParticipantCodeParams {
	o.SetConversationID(conversationID)
	return o
}

// SetConversationID adds the conversationId to the delete conversation participant code params
func (o *DeleteConversationParticipantCodeParams) SetConversationID(conversationID string) {
	o.ConversationID = conversationID
}

// WithParticipantID adds the participantID to the delete conversation participant code params
func (o *DeleteConversationParticipantCodeParams) WithParticipantID(participantID string) *DeleteConversationParticipantCodeParams {
	o.SetParticipantID(participantID)
	return o
}

// SetParticipantID adds the participantId to the delete conversation participant code params
func (o *DeleteConversationParticipantCodeParams) SetParticipantID(participantID string) {
	o.ParticipantID = participantID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteConversationParticipantCodeParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param addCommunicationCode
	if err := r.SetPathParam("addCommunicationCode", o.AddCommunicationCode); err != nil {
		return err
	}

	// path param conversationId
	if err := r.SetPathParam("conversationId", o.ConversationID); err != nil {
		return err
	}

	// path param participantId
	if err := r.SetPathParam("participantId", o.ParticipantID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
