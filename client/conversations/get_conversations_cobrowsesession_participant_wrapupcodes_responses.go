// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetConversationsCobrowsesessionParticipantWrapupcodesReader is a Reader for the GetConversationsCobrowsesessionParticipantWrapupcodes structure.
type GetConversationsCobrowsesessionParticipantWrapupcodesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConversationsCobrowsesessionParticipantWrapupcodesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetConversationsCobrowsesessionParticipantWrapupcodesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetConversationsCobrowsesessionParticipantWrapupcodesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetConversationsCobrowsesessionParticipantWrapupcodesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetConversationsCobrowsesessionParticipantWrapupcodesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetConversationsCobrowsesessionParticipantWrapupcodesRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetConversationsCobrowsesessionParticipantWrapupcodesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetConversationsCobrowsesessionParticipantWrapupcodesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetConversationsCobrowsesessionParticipantWrapupcodesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetConversationsCobrowsesessionParticipantWrapupcodesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetConversationsCobrowsesessionParticipantWrapupcodesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetConversationsCobrowsesessionParticipantWrapupcodesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetConversationsCobrowsesessionParticipantWrapupcodesOK creates a GetConversationsCobrowsesessionParticipantWrapupcodesOK with default headers values
func NewGetConversationsCobrowsesessionParticipantWrapupcodesOK() *GetConversationsCobrowsesessionParticipantWrapupcodesOK {
	return &GetConversationsCobrowsesessionParticipantWrapupcodesOK{}
}

/*
GetConversationsCobrowsesessionParticipantWrapupcodesOK describes a response with status code 200, with default header values.

successful operation
*/
type GetConversationsCobrowsesessionParticipantWrapupcodesOK struct {
	Payload []*models.WrapupCode
}

// IsSuccess returns true when this get conversations cobrowsesession participant wrapupcodes o k response has a 2xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get conversations cobrowsesession participant wrapupcodes o k response has a 3xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations cobrowsesession participant wrapupcodes o k response has a 4xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations cobrowsesession participant wrapupcodes o k response has a 5xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations cobrowsesession participant wrapupcodes o k response a status code equal to that given
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetConversationsCobrowsesessionParticipantWrapupcodesOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsCobrowsesessionParticipantWrapupcodesOK  %+v", 200, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantWrapupcodesOK) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsCobrowsesessionParticipantWrapupcodesOK  %+v", 200, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantWrapupcodesOK) GetPayload() []*models.WrapupCode {
	return o.Payload
}

func (o *GetConversationsCobrowsesessionParticipantWrapupcodesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCobrowsesessionParticipantWrapupcodesBadRequest creates a GetConversationsCobrowsesessionParticipantWrapupcodesBadRequest with default headers values
func NewGetConversationsCobrowsesessionParticipantWrapupcodesBadRequest() *GetConversationsCobrowsesessionParticipantWrapupcodesBadRequest {
	return &GetConversationsCobrowsesessionParticipantWrapupcodesBadRequest{}
}

/*
GetConversationsCobrowsesessionParticipantWrapupcodesBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetConversationsCobrowsesessionParticipantWrapupcodesBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations cobrowsesession participant wrapupcodes bad request response has a 2xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations cobrowsesession participant wrapupcodes bad request response has a 3xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations cobrowsesession participant wrapupcodes bad request response has a 4xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations cobrowsesession participant wrapupcodes bad request response has a 5xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations cobrowsesession participant wrapupcodes bad request response a status code equal to that given
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetConversationsCobrowsesessionParticipantWrapupcodesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsCobrowsesessionParticipantWrapupcodesBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantWrapupcodesBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsCobrowsesessionParticipantWrapupcodesBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantWrapupcodesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCobrowsesessionParticipantWrapupcodesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCobrowsesessionParticipantWrapupcodesUnauthorized creates a GetConversationsCobrowsesessionParticipantWrapupcodesUnauthorized with default headers values
func NewGetConversationsCobrowsesessionParticipantWrapupcodesUnauthorized() *GetConversationsCobrowsesessionParticipantWrapupcodesUnauthorized {
	return &GetConversationsCobrowsesessionParticipantWrapupcodesUnauthorized{}
}

/*
GetConversationsCobrowsesessionParticipantWrapupcodesUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetConversationsCobrowsesessionParticipantWrapupcodesUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations cobrowsesession participant wrapupcodes unauthorized response has a 2xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations cobrowsesession participant wrapupcodes unauthorized response has a 3xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations cobrowsesession participant wrapupcodes unauthorized response has a 4xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations cobrowsesession participant wrapupcodes unauthorized response has a 5xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations cobrowsesession participant wrapupcodes unauthorized response a status code equal to that given
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetConversationsCobrowsesessionParticipantWrapupcodesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsCobrowsesessionParticipantWrapupcodesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantWrapupcodesUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsCobrowsesessionParticipantWrapupcodesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantWrapupcodesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCobrowsesessionParticipantWrapupcodesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCobrowsesessionParticipantWrapupcodesForbidden creates a GetConversationsCobrowsesessionParticipantWrapupcodesForbidden with default headers values
func NewGetConversationsCobrowsesessionParticipantWrapupcodesForbidden() *GetConversationsCobrowsesessionParticipantWrapupcodesForbidden {
	return &GetConversationsCobrowsesessionParticipantWrapupcodesForbidden{}
}

/*
GetConversationsCobrowsesessionParticipantWrapupcodesForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetConversationsCobrowsesessionParticipantWrapupcodesForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations cobrowsesession participant wrapupcodes forbidden response has a 2xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations cobrowsesession participant wrapupcodes forbidden response has a 3xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations cobrowsesession participant wrapupcodes forbidden response has a 4xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations cobrowsesession participant wrapupcodes forbidden response has a 5xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations cobrowsesession participant wrapupcodes forbidden response a status code equal to that given
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetConversationsCobrowsesessionParticipantWrapupcodesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsCobrowsesessionParticipantWrapupcodesForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantWrapupcodesForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsCobrowsesessionParticipantWrapupcodesForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantWrapupcodesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCobrowsesessionParticipantWrapupcodesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCobrowsesessionParticipantWrapupcodesNotFound creates a GetConversationsCobrowsesessionParticipantWrapupcodesNotFound with default headers values
func NewGetConversationsCobrowsesessionParticipantWrapupcodesNotFound() *GetConversationsCobrowsesessionParticipantWrapupcodesNotFound {
	return &GetConversationsCobrowsesessionParticipantWrapupcodesNotFound{}
}

/*
GetConversationsCobrowsesessionParticipantWrapupcodesNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetConversationsCobrowsesessionParticipantWrapupcodesNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations cobrowsesession participant wrapupcodes not found response has a 2xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations cobrowsesession participant wrapupcodes not found response has a 3xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations cobrowsesession participant wrapupcodes not found response has a 4xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations cobrowsesession participant wrapupcodes not found response has a 5xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations cobrowsesession participant wrapupcodes not found response a status code equal to that given
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetConversationsCobrowsesessionParticipantWrapupcodesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsCobrowsesessionParticipantWrapupcodesNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantWrapupcodesNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsCobrowsesessionParticipantWrapupcodesNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantWrapupcodesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCobrowsesessionParticipantWrapupcodesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCobrowsesessionParticipantWrapupcodesRequestTimeout creates a GetConversationsCobrowsesessionParticipantWrapupcodesRequestTimeout with default headers values
func NewGetConversationsCobrowsesessionParticipantWrapupcodesRequestTimeout() *GetConversationsCobrowsesessionParticipantWrapupcodesRequestTimeout {
	return &GetConversationsCobrowsesessionParticipantWrapupcodesRequestTimeout{}
}

/*
GetConversationsCobrowsesessionParticipantWrapupcodesRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetConversationsCobrowsesessionParticipantWrapupcodesRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations cobrowsesession participant wrapupcodes request timeout response has a 2xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations cobrowsesession participant wrapupcodes request timeout response has a 3xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations cobrowsesession participant wrapupcodes request timeout response has a 4xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations cobrowsesession participant wrapupcodes request timeout response has a 5xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations cobrowsesession participant wrapupcodes request timeout response a status code equal to that given
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetConversationsCobrowsesessionParticipantWrapupcodesRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsCobrowsesessionParticipantWrapupcodesRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantWrapupcodesRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsCobrowsesessionParticipantWrapupcodesRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantWrapupcodesRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCobrowsesessionParticipantWrapupcodesRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCobrowsesessionParticipantWrapupcodesRequestEntityTooLarge creates a GetConversationsCobrowsesessionParticipantWrapupcodesRequestEntityTooLarge with default headers values
func NewGetConversationsCobrowsesessionParticipantWrapupcodesRequestEntityTooLarge() *GetConversationsCobrowsesessionParticipantWrapupcodesRequestEntityTooLarge {
	return &GetConversationsCobrowsesessionParticipantWrapupcodesRequestEntityTooLarge{}
}

/*
GetConversationsCobrowsesessionParticipantWrapupcodesRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetConversationsCobrowsesessionParticipantWrapupcodesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations cobrowsesession participant wrapupcodes request entity too large response has a 2xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations cobrowsesession participant wrapupcodes request entity too large response has a 3xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations cobrowsesession participant wrapupcodes request entity too large response has a 4xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations cobrowsesession participant wrapupcodes request entity too large response has a 5xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations cobrowsesession participant wrapupcodes request entity too large response a status code equal to that given
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetConversationsCobrowsesessionParticipantWrapupcodesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsCobrowsesessionParticipantWrapupcodesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantWrapupcodesRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsCobrowsesessionParticipantWrapupcodesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantWrapupcodesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCobrowsesessionParticipantWrapupcodesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCobrowsesessionParticipantWrapupcodesUnsupportedMediaType creates a GetConversationsCobrowsesessionParticipantWrapupcodesUnsupportedMediaType with default headers values
func NewGetConversationsCobrowsesessionParticipantWrapupcodesUnsupportedMediaType() *GetConversationsCobrowsesessionParticipantWrapupcodesUnsupportedMediaType {
	return &GetConversationsCobrowsesessionParticipantWrapupcodesUnsupportedMediaType{}
}

/*
GetConversationsCobrowsesessionParticipantWrapupcodesUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetConversationsCobrowsesessionParticipantWrapupcodesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations cobrowsesession participant wrapupcodes unsupported media type response has a 2xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations cobrowsesession participant wrapupcodes unsupported media type response has a 3xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations cobrowsesession participant wrapupcodes unsupported media type response has a 4xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations cobrowsesession participant wrapupcodes unsupported media type response has a 5xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations cobrowsesession participant wrapupcodes unsupported media type response a status code equal to that given
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetConversationsCobrowsesessionParticipantWrapupcodesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsCobrowsesessionParticipantWrapupcodesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantWrapupcodesUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsCobrowsesessionParticipantWrapupcodesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantWrapupcodesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCobrowsesessionParticipantWrapupcodesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCobrowsesessionParticipantWrapupcodesTooManyRequests creates a GetConversationsCobrowsesessionParticipantWrapupcodesTooManyRequests with default headers values
func NewGetConversationsCobrowsesessionParticipantWrapupcodesTooManyRequests() *GetConversationsCobrowsesessionParticipantWrapupcodesTooManyRequests {
	return &GetConversationsCobrowsesessionParticipantWrapupcodesTooManyRequests{}
}

/*
GetConversationsCobrowsesessionParticipantWrapupcodesTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetConversationsCobrowsesessionParticipantWrapupcodesTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations cobrowsesession participant wrapupcodes too many requests response has a 2xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations cobrowsesession participant wrapupcodes too many requests response has a 3xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations cobrowsesession participant wrapupcodes too many requests response has a 4xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations cobrowsesession participant wrapupcodes too many requests response has a 5xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations cobrowsesession participant wrapupcodes too many requests response a status code equal to that given
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetConversationsCobrowsesessionParticipantWrapupcodesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsCobrowsesessionParticipantWrapupcodesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantWrapupcodesTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsCobrowsesessionParticipantWrapupcodesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantWrapupcodesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCobrowsesessionParticipantWrapupcodesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCobrowsesessionParticipantWrapupcodesInternalServerError creates a GetConversationsCobrowsesessionParticipantWrapupcodesInternalServerError with default headers values
func NewGetConversationsCobrowsesessionParticipantWrapupcodesInternalServerError() *GetConversationsCobrowsesessionParticipantWrapupcodesInternalServerError {
	return &GetConversationsCobrowsesessionParticipantWrapupcodesInternalServerError{}
}

/*
GetConversationsCobrowsesessionParticipantWrapupcodesInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetConversationsCobrowsesessionParticipantWrapupcodesInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations cobrowsesession participant wrapupcodes internal server error response has a 2xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations cobrowsesession participant wrapupcodes internal server error response has a 3xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations cobrowsesession participant wrapupcodes internal server error response has a 4xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations cobrowsesession participant wrapupcodes internal server error response has a 5xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations cobrowsesession participant wrapupcodes internal server error response a status code equal to that given
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetConversationsCobrowsesessionParticipantWrapupcodesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsCobrowsesessionParticipantWrapupcodesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantWrapupcodesInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsCobrowsesessionParticipantWrapupcodesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantWrapupcodesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCobrowsesessionParticipantWrapupcodesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCobrowsesessionParticipantWrapupcodesServiceUnavailable creates a GetConversationsCobrowsesessionParticipantWrapupcodesServiceUnavailable with default headers values
func NewGetConversationsCobrowsesessionParticipantWrapupcodesServiceUnavailable() *GetConversationsCobrowsesessionParticipantWrapupcodesServiceUnavailable {
	return &GetConversationsCobrowsesessionParticipantWrapupcodesServiceUnavailable{}
}

/*
GetConversationsCobrowsesessionParticipantWrapupcodesServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetConversationsCobrowsesessionParticipantWrapupcodesServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations cobrowsesession participant wrapupcodes service unavailable response has a 2xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations cobrowsesession participant wrapupcodes service unavailable response has a 3xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations cobrowsesession participant wrapupcodes service unavailable response has a 4xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations cobrowsesession participant wrapupcodes service unavailable response has a 5xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations cobrowsesession participant wrapupcodes service unavailable response a status code equal to that given
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetConversationsCobrowsesessionParticipantWrapupcodesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsCobrowsesessionParticipantWrapupcodesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantWrapupcodesServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsCobrowsesessionParticipantWrapupcodesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantWrapupcodesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCobrowsesessionParticipantWrapupcodesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCobrowsesessionParticipantWrapupcodesGatewayTimeout creates a GetConversationsCobrowsesessionParticipantWrapupcodesGatewayTimeout with default headers values
func NewGetConversationsCobrowsesessionParticipantWrapupcodesGatewayTimeout() *GetConversationsCobrowsesessionParticipantWrapupcodesGatewayTimeout {
	return &GetConversationsCobrowsesessionParticipantWrapupcodesGatewayTimeout{}
}

/*
GetConversationsCobrowsesessionParticipantWrapupcodesGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetConversationsCobrowsesessionParticipantWrapupcodesGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations cobrowsesession participant wrapupcodes gateway timeout response has a 2xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations cobrowsesession participant wrapupcodes gateway timeout response has a 3xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations cobrowsesession participant wrapupcodes gateway timeout response has a 4xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations cobrowsesession participant wrapupcodes gateway timeout response has a 5xx status code
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations cobrowsesession participant wrapupcodes gateway timeout response a status code equal to that given
func (o *GetConversationsCobrowsesessionParticipantWrapupcodesGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetConversationsCobrowsesessionParticipantWrapupcodesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsCobrowsesessionParticipantWrapupcodesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantWrapupcodesGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsCobrowsesessionParticipantWrapupcodesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsCobrowsesessionParticipantWrapupcodesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCobrowsesessionParticipantWrapupcodesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
