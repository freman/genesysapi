// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetConversationsMessageReader is a Reader for the GetConversationsMessage structure.
type GetConversationsMessageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConversationsMessageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConversationsMessageOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetConversationsMessageBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetConversationsMessageUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetConversationsMessageForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetConversationsMessageNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetConversationsMessageRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetConversationsMessageUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetConversationsMessageTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetConversationsMessageInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetConversationsMessageServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetConversationsMessageGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetConversationsMessageOK creates a GetConversationsMessageOK with default headers values
func NewGetConversationsMessageOK() *GetConversationsMessageOK {
	return &GetConversationsMessageOK{}
}

/*GetConversationsMessageOK handles this case with default header values.

successful operation
*/
type GetConversationsMessageOK struct {
	Payload *models.MessageConversation
}

func (o *GetConversationsMessageOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}][%d] getConversationsMessageOK  %+v", 200, o.Payload)
}

func (o *GetConversationsMessageOK) GetPayload() *models.MessageConversation {
	return o.Payload
}

func (o *GetConversationsMessageOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageConversation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageBadRequest creates a GetConversationsMessageBadRequest with default headers values
func NewGetConversationsMessageBadRequest() *GetConversationsMessageBadRequest {
	return &GetConversationsMessageBadRequest{}
}

/*GetConversationsMessageBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetConversationsMessageBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsMessageBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}][%d] getConversationsMessageBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsMessageBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageUnauthorized creates a GetConversationsMessageUnauthorized with default headers values
func NewGetConversationsMessageUnauthorized() *GetConversationsMessageUnauthorized {
	return &GetConversationsMessageUnauthorized{}
}

/*GetConversationsMessageUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetConversationsMessageUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsMessageUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}][%d] getConversationsMessageUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsMessageUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageForbidden creates a GetConversationsMessageForbidden with default headers values
func NewGetConversationsMessageForbidden() *GetConversationsMessageForbidden {
	return &GetConversationsMessageForbidden{}
}

/*GetConversationsMessageForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetConversationsMessageForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsMessageForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}][%d] getConversationsMessageForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsMessageForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageNotFound creates a GetConversationsMessageNotFound with default headers values
func NewGetConversationsMessageNotFound() *GetConversationsMessageNotFound {
	return &GetConversationsMessageNotFound{}
}

/*GetConversationsMessageNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetConversationsMessageNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsMessageNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}][%d] getConversationsMessageNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsMessageNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageRequestEntityTooLarge creates a GetConversationsMessageRequestEntityTooLarge with default headers values
func NewGetConversationsMessageRequestEntityTooLarge() *GetConversationsMessageRequestEntityTooLarge {
	return &GetConversationsMessageRequestEntityTooLarge{}
}

/*GetConversationsMessageRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetConversationsMessageRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsMessageRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}][%d] getConversationsMessageRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsMessageRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageUnsupportedMediaType creates a GetConversationsMessageUnsupportedMediaType with default headers values
func NewGetConversationsMessageUnsupportedMediaType() *GetConversationsMessageUnsupportedMediaType {
	return &GetConversationsMessageUnsupportedMediaType{}
}

/*GetConversationsMessageUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetConversationsMessageUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsMessageUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}][%d] getConversationsMessageUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsMessageUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageTooManyRequests creates a GetConversationsMessageTooManyRequests with default headers values
func NewGetConversationsMessageTooManyRequests() *GetConversationsMessageTooManyRequests {
	return &GetConversationsMessageTooManyRequests{}
}

/*GetConversationsMessageTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type GetConversationsMessageTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsMessageTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}][%d] getConversationsMessageTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsMessageTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageInternalServerError creates a GetConversationsMessageInternalServerError with default headers values
func NewGetConversationsMessageInternalServerError() *GetConversationsMessageInternalServerError {
	return &GetConversationsMessageInternalServerError{}
}

/*GetConversationsMessageInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetConversationsMessageInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsMessageInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}][%d] getConversationsMessageInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsMessageInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageServiceUnavailable creates a GetConversationsMessageServiceUnavailable with default headers values
func NewGetConversationsMessageServiceUnavailable() *GetConversationsMessageServiceUnavailable {
	return &GetConversationsMessageServiceUnavailable{}
}

/*GetConversationsMessageServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetConversationsMessageServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsMessageServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}][%d] getConversationsMessageServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsMessageServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageGatewayTimeout creates a GetConversationsMessageGatewayTimeout with default headers values
func NewGetConversationsMessageGatewayTimeout() *GetConversationsMessageGatewayTimeout {
	return &GetConversationsMessageGatewayTimeout{}
}

/*GetConversationsMessageGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetConversationsMessageGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsMessageGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}][%d] getConversationsMessageGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsMessageGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
