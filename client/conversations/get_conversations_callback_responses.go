// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetConversationsCallbackReader is a Reader for the GetConversationsCallback structure.
type GetConversationsCallbackReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConversationsCallbackReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConversationsCallbackOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetConversationsCallbackBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetConversationsCallbackUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetConversationsCallbackForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetConversationsCallbackNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetConversationsCallbackRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetConversationsCallbackRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetConversationsCallbackUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetConversationsCallbackTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetConversationsCallbackInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetConversationsCallbackServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetConversationsCallbackGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetConversationsCallbackOK creates a GetConversationsCallbackOK with default headers values
func NewGetConversationsCallbackOK() *GetConversationsCallbackOK {
	return &GetConversationsCallbackOK{}
}

/*GetConversationsCallbackOK handles this case with default header values.

successful operation
*/
type GetConversationsCallbackOK struct {
	Payload *models.CallbackConversation
}

func (o *GetConversationsCallbackOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/callbacks/{conversationId}][%d] getConversationsCallbackOK  %+v", 200, o.Payload)
}

func (o *GetConversationsCallbackOK) GetPayload() *models.CallbackConversation {
	return o.Payload
}

func (o *GetConversationsCallbackOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CallbackConversation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCallbackBadRequest creates a GetConversationsCallbackBadRequest with default headers values
func NewGetConversationsCallbackBadRequest() *GetConversationsCallbackBadRequest {
	return &GetConversationsCallbackBadRequest{}
}

/*GetConversationsCallbackBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetConversationsCallbackBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsCallbackBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/callbacks/{conversationId}][%d] getConversationsCallbackBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsCallbackBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCallbackBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCallbackUnauthorized creates a GetConversationsCallbackUnauthorized with default headers values
func NewGetConversationsCallbackUnauthorized() *GetConversationsCallbackUnauthorized {
	return &GetConversationsCallbackUnauthorized{}
}

/*GetConversationsCallbackUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetConversationsCallbackUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsCallbackUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/callbacks/{conversationId}][%d] getConversationsCallbackUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsCallbackUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCallbackUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCallbackForbidden creates a GetConversationsCallbackForbidden with default headers values
func NewGetConversationsCallbackForbidden() *GetConversationsCallbackForbidden {
	return &GetConversationsCallbackForbidden{}
}

/*GetConversationsCallbackForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetConversationsCallbackForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsCallbackForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/callbacks/{conversationId}][%d] getConversationsCallbackForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsCallbackForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCallbackForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCallbackNotFound creates a GetConversationsCallbackNotFound with default headers values
func NewGetConversationsCallbackNotFound() *GetConversationsCallbackNotFound {
	return &GetConversationsCallbackNotFound{}
}

/*GetConversationsCallbackNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetConversationsCallbackNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsCallbackNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/callbacks/{conversationId}][%d] getConversationsCallbackNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsCallbackNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCallbackNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCallbackRequestTimeout creates a GetConversationsCallbackRequestTimeout with default headers values
func NewGetConversationsCallbackRequestTimeout() *GetConversationsCallbackRequestTimeout {
	return &GetConversationsCallbackRequestTimeout{}
}

/*GetConversationsCallbackRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetConversationsCallbackRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsCallbackRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/callbacks/{conversationId}][%d] getConversationsCallbackRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationsCallbackRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCallbackRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCallbackRequestEntityTooLarge creates a GetConversationsCallbackRequestEntityTooLarge with default headers values
func NewGetConversationsCallbackRequestEntityTooLarge() *GetConversationsCallbackRequestEntityTooLarge {
	return &GetConversationsCallbackRequestEntityTooLarge{}
}

/*GetConversationsCallbackRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetConversationsCallbackRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsCallbackRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/callbacks/{conversationId}][%d] getConversationsCallbackRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsCallbackRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCallbackRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCallbackUnsupportedMediaType creates a GetConversationsCallbackUnsupportedMediaType with default headers values
func NewGetConversationsCallbackUnsupportedMediaType() *GetConversationsCallbackUnsupportedMediaType {
	return &GetConversationsCallbackUnsupportedMediaType{}
}

/*GetConversationsCallbackUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetConversationsCallbackUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsCallbackUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/callbacks/{conversationId}][%d] getConversationsCallbackUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsCallbackUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCallbackUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCallbackTooManyRequests creates a GetConversationsCallbackTooManyRequests with default headers values
func NewGetConversationsCallbackTooManyRequests() *GetConversationsCallbackTooManyRequests {
	return &GetConversationsCallbackTooManyRequests{}
}

/*GetConversationsCallbackTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetConversationsCallbackTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsCallbackTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/callbacks/{conversationId}][%d] getConversationsCallbackTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsCallbackTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCallbackTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCallbackInternalServerError creates a GetConversationsCallbackInternalServerError with default headers values
func NewGetConversationsCallbackInternalServerError() *GetConversationsCallbackInternalServerError {
	return &GetConversationsCallbackInternalServerError{}
}

/*GetConversationsCallbackInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetConversationsCallbackInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsCallbackInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/callbacks/{conversationId}][%d] getConversationsCallbackInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsCallbackInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCallbackInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCallbackServiceUnavailable creates a GetConversationsCallbackServiceUnavailable with default headers values
func NewGetConversationsCallbackServiceUnavailable() *GetConversationsCallbackServiceUnavailable {
	return &GetConversationsCallbackServiceUnavailable{}
}

/*GetConversationsCallbackServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetConversationsCallbackServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsCallbackServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/callbacks/{conversationId}][%d] getConversationsCallbackServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsCallbackServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCallbackServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCallbackGatewayTimeout creates a GetConversationsCallbackGatewayTimeout with default headers values
func NewGetConversationsCallbackGatewayTimeout() *GetConversationsCallbackGatewayTimeout {
	return &GetConversationsCallbackGatewayTimeout{}
}

/*GetConversationsCallbackGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetConversationsCallbackGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsCallbackGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/callbacks/{conversationId}][%d] getConversationsCallbackGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsCallbackGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCallbackGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
