// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostConversationsEmailsReader is a Reader for the PostConversationsEmails structure.
type PostConversationsEmailsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostConversationsEmailsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostConversationsEmailsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostConversationsEmailsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostConversationsEmailsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostConversationsEmailsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostConversationsEmailsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostConversationsEmailsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostConversationsEmailsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostConversationsEmailsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostConversationsEmailsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostConversationsEmailsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostConversationsEmailsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostConversationsEmailsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostConversationsEmailsOK creates a PostConversationsEmailsOK with default headers values
func NewPostConversationsEmailsOK() *PostConversationsEmailsOK {
	return &PostConversationsEmailsOK{}
}

/*
PostConversationsEmailsOK describes a response with status code 200, with default header values.

successful operation
*/
type PostConversationsEmailsOK struct {
	Payload *models.EmailConversation
}

// IsSuccess returns true when this post conversations emails o k response has a 2xx status code
func (o *PostConversationsEmailsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post conversations emails o k response has a 3xx status code
func (o *PostConversationsEmailsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations emails o k response has a 4xx status code
func (o *PostConversationsEmailsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations emails o k response has a 5xx status code
func (o *PostConversationsEmailsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations emails o k response a status code equal to that given
func (o *PostConversationsEmailsOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostConversationsEmailsOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails][%d] postConversationsEmailsOK  %+v", 200, o.Payload)
}

func (o *PostConversationsEmailsOK) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails][%d] postConversationsEmailsOK  %+v", 200, o.Payload)
}

func (o *PostConversationsEmailsOK) GetPayload() *models.EmailConversation {
	return o.Payload
}

func (o *PostConversationsEmailsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EmailConversation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsEmailsBadRequest creates a PostConversationsEmailsBadRequest with default headers values
func NewPostConversationsEmailsBadRequest() *PostConversationsEmailsBadRequest {
	return &PostConversationsEmailsBadRequest{}
}

/*
PostConversationsEmailsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostConversationsEmailsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations emails bad request response has a 2xx status code
func (o *PostConversationsEmailsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations emails bad request response has a 3xx status code
func (o *PostConversationsEmailsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations emails bad request response has a 4xx status code
func (o *PostConversationsEmailsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations emails bad request response has a 5xx status code
func (o *PostConversationsEmailsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations emails bad request response a status code equal to that given
func (o *PostConversationsEmailsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostConversationsEmailsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails][%d] postConversationsEmailsBadRequest  %+v", 400, o.Payload)
}

func (o *PostConversationsEmailsBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails][%d] postConversationsEmailsBadRequest  %+v", 400, o.Payload)
}

func (o *PostConversationsEmailsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsEmailsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsEmailsUnauthorized creates a PostConversationsEmailsUnauthorized with default headers values
func NewPostConversationsEmailsUnauthorized() *PostConversationsEmailsUnauthorized {
	return &PostConversationsEmailsUnauthorized{}
}

/*
PostConversationsEmailsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostConversationsEmailsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations emails unauthorized response has a 2xx status code
func (o *PostConversationsEmailsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations emails unauthorized response has a 3xx status code
func (o *PostConversationsEmailsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations emails unauthorized response has a 4xx status code
func (o *PostConversationsEmailsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations emails unauthorized response has a 5xx status code
func (o *PostConversationsEmailsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations emails unauthorized response a status code equal to that given
func (o *PostConversationsEmailsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostConversationsEmailsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails][%d] postConversationsEmailsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostConversationsEmailsUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails][%d] postConversationsEmailsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostConversationsEmailsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsEmailsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsEmailsForbidden creates a PostConversationsEmailsForbidden with default headers values
func NewPostConversationsEmailsForbidden() *PostConversationsEmailsForbidden {
	return &PostConversationsEmailsForbidden{}
}

/*
PostConversationsEmailsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostConversationsEmailsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations emails forbidden response has a 2xx status code
func (o *PostConversationsEmailsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations emails forbidden response has a 3xx status code
func (o *PostConversationsEmailsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations emails forbidden response has a 4xx status code
func (o *PostConversationsEmailsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations emails forbidden response has a 5xx status code
func (o *PostConversationsEmailsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations emails forbidden response a status code equal to that given
func (o *PostConversationsEmailsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostConversationsEmailsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails][%d] postConversationsEmailsForbidden  %+v", 403, o.Payload)
}

func (o *PostConversationsEmailsForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails][%d] postConversationsEmailsForbidden  %+v", 403, o.Payload)
}

func (o *PostConversationsEmailsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsEmailsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsEmailsNotFound creates a PostConversationsEmailsNotFound with default headers values
func NewPostConversationsEmailsNotFound() *PostConversationsEmailsNotFound {
	return &PostConversationsEmailsNotFound{}
}

/*
PostConversationsEmailsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostConversationsEmailsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations emails not found response has a 2xx status code
func (o *PostConversationsEmailsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations emails not found response has a 3xx status code
func (o *PostConversationsEmailsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations emails not found response has a 4xx status code
func (o *PostConversationsEmailsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations emails not found response has a 5xx status code
func (o *PostConversationsEmailsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations emails not found response a status code equal to that given
func (o *PostConversationsEmailsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostConversationsEmailsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails][%d] postConversationsEmailsNotFound  %+v", 404, o.Payload)
}

func (o *PostConversationsEmailsNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails][%d] postConversationsEmailsNotFound  %+v", 404, o.Payload)
}

func (o *PostConversationsEmailsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsEmailsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsEmailsRequestTimeout creates a PostConversationsEmailsRequestTimeout with default headers values
func NewPostConversationsEmailsRequestTimeout() *PostConversationsEmailsRequestTimeout {
	return &PostConversationsEmailsRequestTimeout{}
}

/*
PostConversationsEmailsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostConversationsEmailsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations emails request timeout response has a 2xx status code
func (o *PostConversationsEmailsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations emails request timeout response has a 3xx status code
func (o *PostConversationsEmailsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations emails request timeout response has a 4xx status code
func (o *PostConversationsEmailsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations emails request timeout response has a 5xx status code
func (o *PostConversationsEmailsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations emails request timeout response a status code equal to that given
func (o *PostConversationsEmailsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostConversationsEmailsRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails][%d] postConversationsEmailsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostConversationsEmailsRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails][%d] postConversationsEmailsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostConversationsEmailsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsEmailsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsEmailsRequestEntityTooLarge creates a PostConversationsEmailsRequestEntityTooLarge with default headers values
func NewPostConversationsEmailsRequestEntityTooLarge() *PostConversationsEmailsRequestEntityTooLarge {
	return &PostConversationsEmailsRequestEntityTooLarge{}
}

/*
PostConversationsEmailsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PostConversationsEmailsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations emails request entity too large response has a 2xx status code
func (o *PostConversationsEmailsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations emails request entity too large response has a 3xx status code
func (o *PostConversationsEmailsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations emails request entity too large response has a 4xx status code
func (o *PostConversationsEmailsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations emails request entity too large response has a 5xx status code
func (o *PostConversationsEmailsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations emails request entity too large response a status code equal to that given
func (o *PostConversationsEmailsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostConversationsEmailsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails][%d] postConversationsEmailsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostConversationsEmailsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails][%d] postConversationsEmailsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostConversationsEmailsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsEmailsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsEmailsUnsupportedMediaType creates a PostConversationsEmailsUnsupportedMediaType with default headers values
func NewPostConversationsEmailsUnsupportedMediaType() *PostConversationsEmailsUnsupportedMediaType {
	return &PostConversationsEmailsUnsupportedMediaType{}
}

/*
PostConversationsEmailsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostConversationsEmailsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations emails unsupported media type response has a 2xx status code
func (o *PostConversationsEmailsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations emails unsupported media type response has a 3xx status code
func (o *PostConversationsEmailsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations emails unsupported media type response has a 4xx status code
func (o *PostConversationsEmailsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations emails unsupported media type response has a 5xx status code
func (o *PostConversationsEmailsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations emails unsupported media type response a status code equal to that given
func (o *PostConversationsEmailsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostConversationsEmailsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails][%d] postConversationsEmailsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostConversationsEmailsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails][%d] postConversationsEmailsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostConversationsEmailsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsEmailsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsEmailsTooManyRequests creates a PostConversationsEmailsTooManyRequests with default headers values
func NewPostConversationsEmailsTooManyRequests() *PostConversationsEmailsTooManyRequests {
	return &PostConversationsEmailsTooManyRequests{}
}

/*
PostConversationsEmailsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostConversationsEmailsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations emails too many requests response has a 2xx status code
func (o *PostConversationsEmailsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations emails too many requests response has a 3xx status code
func (o *PostConversationsEmailsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations emails too many requests response has a 4xx status code
func (o *PostConversationsEmailsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations emails too many requests response has a 5xx status code
func (o *PostConversationsEmailsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations emails too many requests response a status code equal to that given
func (o *PostConversationsEmailsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostConversationsEmailsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails][%d] postConversationsEmailsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostConversationsEmailsTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails][%d] postConversationsEmailsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostConversationsEmailsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsEmailsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsEmailsInternalServerError creates a PostConversationsEmailsInternalServerError with default headers values
func NewPostConversationsEmailsInternalServerError() *PostConversationsEmailsInternalServerError {
	return &PostConversationsEmailsInternalServerError{}
}

/*
PostConversationsEmailsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostConversationsEmailsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations emails internal server error response has a 2xx status code
func (o *PostConversationsEmailsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations emails internal server error response has a 3xx status code
func (o *PostConversationsEmailsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations emails internal server error response has a 4xx status code
func (o *PostConversationsEmailsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations emails internal server error response has a 5xx status code
func (o *PostConversationsEmailsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversations emails internal server error response a status code equal to that given
func (o *PostConversationsEmailsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostConversationsEmailsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails][%d] postConversationsEmailsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostConversationsEmailsInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails][%d] postConversationsEmailsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostConversationsEmailsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsEmailsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsEmailsServiceUnavailable creates a PostConversationsEmailsServiceUnavailable with default headers values
func NewPostConversationsEmailsServiceUnavailable() *PostConversationsEmailsServiceUnavailable {
	return &PostConversationsEmailsServiceUnavailable{}
}

/*
PostConversationsEmailsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostConversationsEmailsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations emails service unavailable response has a 2xx status code
func (o *PostConversationsEmailsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations emails service unavailable response has a 3xx status code
func (o *PostConversationsEmailsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations emails service unavailable response has a 4xx status code
func (o *PostConversationsEmailsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations emails service unavailable response has a 5xx status code
func (o *PostConversationsEmailsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversations emails service unavailable response a status code equal to that given
func (o *PostConversationsEmailsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostConversationsEmailsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails][%d] postConversationsEmailsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostConversationsEmailsServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails][%d] postConversationsEmailsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostConversationsEmailsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsEmailsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsEmailsGatewayTimeout creates a PostConversationsEmailsGatewayTimeout with default headers values
func NewPostConversationsEmailsGatewayTimeout() *PostConversationsEmailsGatewayTimeout {
	return &PostConversationsEmailsGatewayTimeout{}
}

/*
PostConversationsEmailsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostConversationsEmailsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations emails gateway timeout response has a 2xx status code
func (o *PostConversationsEmailsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations emails gateway timeout response has a 3xx status code
func (o *PostConversationsEmailsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations emails gateway timeout response has a 4xx status code
func (o *PostConversationsEmailsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations emails gateway timeout response has a 5xx status code
func (o *PostConversationsEmailsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversations emails gateway timeout response a status code equal to that given
func (o *PostConversationsEmailsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostConversationsEmailsGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails][%d] postConversationsEmailsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostConversationsEmailsGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/emails][%d] postConversationsEmailsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostConversationsEmailsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsEmailsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
