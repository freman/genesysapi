// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostConversationsCallParticipantMonitorReader is a Reader for the PostConversationsCallParticipantMonitor structure.
type PostConversationsCallParticipantMonitorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostConversationsCallParticipantMonitorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostConversationsCallParticipantMonitorCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostConversationsCallParticipantMonitorBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostConversationsCallParticipantMonitorUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostConversationsCallParticipantMonitorForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostConversationsCallParticipantMonitorNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostConversationsCallParticipantMonitorRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostConversationsCallParticipantMonitorRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostConversationsCallParticipantMonitorUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostConversationsCallParticipantMonitorTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostConversationsCallParticipantMonitorInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostConversationsCallParticipantMonitorServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostConversationsCallParticipantMonitorGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostConversationsCallParticipantMonitorCreated creates a PostConversationsCallParticipantMonitorCreated with default headers values
func NewPostConversationsCallParticipantMonitorCreated() *PostConversationsCallParticipantMonitorCreated {
	return &PostConversationsCallParticipantMonitorCreated{}
}

/*PostConversationsCallParticipantMonitorCreated handles this case with default header values.

Created
*/
type PostConversationsCallParticipantMonitorCreated struct {
}

func (o *PostConversationsCallParticipantMonitorCreated) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls/{conversationId}/participants/{participantId}/monitor][%d] postConversationsCallParticipantMonitorCreated ", 201)
}

func (o *PostConversationsCallParticipantMonitorCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostConversationsCallParticipantMonitorBadRequest creates a PostConversationsCallParticipantMonitorBadRequest with default headers values
func NewPostConversationsCallParticipantMonitorBadRequest() *PostConversationsCallParticipantMonitorBadRequest {
	return &PostConversationsCallParticipantMonitorBadRequest{}
}

/*PostConversationsCallParticipantMonitorBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostConversationsCallParticipantMonitorBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PostConversationsCallParticipantMonitorBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls/{conversationId}/participants/{participantId}/monitor][%d] postConversationsCallParticipantMonitorBadRequest  %+v", 400, o.Payload)
}

func (o *PostConversationsCallParticipantMonitorBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallParticipantMonitorBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallParticipantMonitorUnauthorized creates a PostConversationsCallParticipantMonitorUnauthorized with default headers values
func NewPostConversationsCallParticipantMonitorUnauthorized() *PostConversationsCallParticipantMonitorUnauthorized {
	return &PostConversationsCallParticipantMonitorUnauthorized{}
}

/*PostConversationsCallParticipantMonitorUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PostConversationsCallParticipantMonitorUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PostConversationsCallParticipantMonitorUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls/{conversationId}/participants/{participantId}/monitor][%d] postConversationsCallParticipantMonitorUnauthorized  %+v", 401, o.Payload)
}

func (o *PostConversationsCallParticipantMonitorUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallParticipantMonitorUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallParticipantMonitorForbidden creates a PostConversationsCallParticipantMonitorForbidden with default headers values
func NewPostConversationsCallParticipantMonitorForbidden() *PostConversationsCallParticipantMonitorForbidden {
	return &PostConversationsCallParticipantMonitorForbidden{}
}

/*PostConversationsCallParticipantMonitorForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PostConversationsCallParticipantMonitorForbidden struct {
	Payload *models.ErrorBody
}

func (o *PostConversationsCallParticipantMonitorForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls/{conversationId}/participants/{participantId}/monitor][%d] postConversationsCallParticipantMonitorForbidden  %+v", 403, o.Payload)
}

func (o *PostConversationsCallParticipantMonitorForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallParticipantMonitorForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallParticipantMonitorNotFound creates a PostConversationsCallParticipantMonitorNotFound with default headers values
func NewPostConversationsCallParticipantMonitorNotFound() *PostConversationsCallParticipantMonitorNotFound {
	return &PostConversationsCallParticipantMonitorNotFound{}
}

/*PostConversationsCallParticipantMonitorNotFound handles this case with default header values.

The requested resource was not found.
*/
type PostConversationsCallParticipantMonitorNotFound struct {
	Payload *models.ErrorBody
}

func (o *PostConversationsCallParticipantMonitorNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls/{conversationId}/participants/{participantId}/monitor][%d] postConversationsCallParticipantMonitorNotFound  %+v", 404, o.Payload)
}

func (o *PostConversationsCallParticipantMonitorNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallParticipantMonitorNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallParticipantMonitorRequestTimeout creates a PostConversationsCallParticipantMonitorRequestTimeout with default headers values
func NewPostConversationsCallParticipantMonitorRequestTimeout() *PostConversationsCallParticipantMonitorRequestTimeout {
	return &PostConversationsCallParticipantMonitorRequestTimeout{}
}

/*PostConversationsCallParticipantMonitorRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostConversationsCallParticipantMonitorRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostConversationsCallParticipantMonitorRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls/{conversationId}/participants/{participantId}/monitor][%d] postConversationsCallParticipantMonitorRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostConversationsCallParticipantMonitorRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallParticipantMonitorRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallParticipantMonitorRequestEntityTooLarge creates a PostConversationsCallParticipantMonitorRequestEntityTooLarge with default headers values
func NewPostConversationsCallParticipantMonitorRequestEntityTooLarge() *PostConversationsCallParticipantMonitorRequestEntityTooLarge {
	return &PostConversationsCallParticipantMonitorRequestEntityTooLarge{}
}

/*PostConversationsCallParticipantMonitorRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type PostConversationsCallParticipantMonitorRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PostConversationsCallParticipantMonitorRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls/{conversationId}/participants/{participantId}/monitor][%d] postConversationsCallParticipantMonitorRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostConversationsCallParticipantMonitorRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallParticipantMonitorRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallParticipantMonitorUnsupportedMediaType creates a PostConversationsCallParticipantMonitorUnsupportedMediaType with default headers values
func NewPostConversationsCallParticipantMonitorUnsupportedMediaType() *PostConversationsCallParticipantMonitorUnsupportedMediaType {
	return &PostConversationsCallParticipantMonitorUnsupportedMediaType{}
}

/*PostConversationsCallParticipantMonitorUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostConversationsCallParticipantMonitorUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PostConversationsCallParticipantMonitorUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls/{conversationId}/participants/{participantId}/monitor][%d] postConversationsCallParticipantMonitorUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostConversationsCallParticipantMonitorUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallParticipantMonitorUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallParticipantMonitorTooManyRequests creates a PostConversationsCallParticipantMonitorTooManyRequests with default headers values
func NewPostConversationsCallParticipantMonitorTooManyRequests() *PostConversationsCallParticipantMonitorTooManyRequests {
	return &PostConversationsCallParticipantMonitorTooManyRequests{}
}

/*PostConversationsCallParticipantMonitorTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostConversationsCallParticipantMonitorTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PostConversationsCallParticipantMonitorTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls/{conversationId}/participants/{participantId}/monitor][%d] postConversationsCallParticipantMonitorTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostConversationsCallParticipantMonitorTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallParticipantMonitorTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallParticipantMonitorInternalServerError creates a PostConversationsCallParticipantMonitorInternalServerError with default headers values
func NewPostConversationsCallParticipantMonitorInternalServerError() *PostConversationsCallParticipantMonitorInternalServerError {
	return &PostConversationsCallParticipantMonitorInternalServerError{}
}

/*PostConversationsCallParticipantMonitorInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostConversationsCallParticipantMonitorInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PostConversationsCallParticipantMonitorInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls/{conversationId}/participants/{participantId}/monitor][%d] postConversationsCallParticipantMonitorInternalServerError  %+v", 500, o.Payload)
}

func (o *PostConversationsCallParticipantMonitorInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallParticipantMonitorInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallParticipantMonitorServiceUnavailable creates a PostConversationsCallParticipantMonitorServiceUnavailable with default headers values
func NewPostConversationsCallParticipantMonitorServiceUnavailable() *PostConversationsCallParticipantMonitorServiceUnavailable {
	return &PostConversationsCallParticipantMonitorServiceUnavailable{}
}

/*PostConversationsCallParticipantMonitorServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostConversationsCallParticipantMonitorServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PostConversationsCallParticipantMonitorServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls/{conversationId}/participants/{participantId}/monitor][%d] postConversationsCallParticipantMonitorServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostConversationsCallParticipantMonitorServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallParticipantMonitorServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallParticipantMonitorGatewayTimeout creates a PostConversationsCallParticipantMonitorGatewayTimeout with default headers values
func NewPostConversationsCallParticipantMonitorGatewayTimeout() *PostConversationsCallParticipantMonitorGatewayTimeout {
	return &PostConversationsCallParticipantMonitorGatewayTimeout{}
}

/*PostConversationsCallParticipantMonitorGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PostConversationsCallParticipantMonitorGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostConversationsCallParticipantMonitorGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls/{conversationId}/participants/{participantId}/monitor][%d] postConversationsCallParticipantMonitorGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostConversationsCallParticipantMonitorGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallParticipantMonitorGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
