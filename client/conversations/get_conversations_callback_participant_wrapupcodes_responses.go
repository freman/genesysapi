// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetConversationsCallbackParticipantWrapupcodesReader is a Reader for the GetConversationsCallbackParticipantWrapupcodes structure.
type GetConversationsCallbackParticipantWrapupcodesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConversationsCallbackParticipantWrapupcodesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConversationsCallbackParticipantWrapupcodesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetConversationsCallbackParticipantWrapupcodesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetConversationsCallbackParticipantWrapupcodesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetConversationsCallbackParticipantWrapupcodesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetConversationsCallbackParticipantWrapupcodesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetConversationsCallbackParticipantWrapupcodesRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetConversationsCallbackParticipantWrapupcodesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetConversationsCallbackParticipantWrapupcodesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetConversationsCallbackParticipantWrapupcodesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetConversationsCallbackParticipantWrapupcodesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetConversationsCallbackParticipantWrapupcodesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetConversationsCallbackParticipantWrapupcodesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetConversationsCallbackParticipantWrapupcodesOK creates a GetConversationsCallbackParticipantWrapupcodesOK with default headers values
func NewGetConversationsCallbackParticipantWrapupcodesOK() *GetConversationsCallbackParticipantWrapupcodesOK {
	return &GetConversationsCallbackParticipantWrapupcodesOK{}
}

/*
GetConversationsCallbackParticipantWrapupcodesOK describes a response with status code 200, with default header values.

successful operation
*/
type GetConversationsCallbackParticipantWrapupcodesOK struct {
	Payload []*models.WrapupCode
}

// IsSuccess returns true when this get conversations callback participant wrapupcodes o k response has a 2xx status code
func (o *GetConversationsCallbackParticipantWrapupcodesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get conversations callback participant wrapupcodes o k response has a 3xx status code
func (o *GetConversationsCallbackParticipantWrapupcodesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations callback participant wrapupcodes o k response has a 4xx status code
func (o *GetConversationsCallbackParticipantWrapupcodesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations callback participant wrapupcodes o k response has a 5xx status code
func (o *GetConversationsCallbackParticipantWrapupcodesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations callback participant wrapupcodes o k response a status code equal to that given
func (o *GetConversationsCallbackParticipantWrapupcodesOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetConversationsCallbackParticipantWrapupcodesOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsCallbackParticipantWrapupcodesOK  %+v", 200, o.Payload)
}

func (o *GetConversationsCallbackParticipantWrapupcodesOK) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsCallbackParticipantWrapupcodesOK  %+v", 200, o.Payload)
}

func (o *GetConversationsCallbackParticipantWrapupcodesOK) GetPayload() []*models.WrapupCode {
	return o.Payload
}

func (o *GetConversationsCallbackParticipantWrapupcodesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCallbackParticipantWrapupcodesBadRequest creates a GetConversationsCallbackParticipantWrapupcodesBadRequest with default headers values
func NewGetConversationsCallbackParticipantWrapupcodesBadRequest() *GetConversationsCallbackParticipantWrapupcodesBadRequest {
	return &GetConversationsCallbackParticipantWrapupcodesBadRequest{}
}

/*
GetConversationsCallbackParticipantWrapupcodesBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetConversationsCallbackParticipantWrapupcodesBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations callback participant wrapupcodes bad request response has a 2xx status code
func (o *GetConversationsCallbackParticipantWrapupcodesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations callback participant wrapupcodes bad request response has a 3xx status code
func (o *GetConversationsCallbackParticipantWrapupcodesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations callback participant wrapupcodes bad request response has a 4xx status code
func (o *GetConversationsCallbackParticipantWrapupcodesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations callback participant wrapupcodes bad request response has a 5xx status code
func (o *GetConversationsCallbackParticipantWrapupcodesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations callback participant wrapupcodes bad request response a status code equal to that given
func (o *GetConversationsCallbackParticipantWrapupcodesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetConversationsCallbackParticipantWrapupcodesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsCallbackParticipantWrapupcodesBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsCallbackParticipantWrapupcodesBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsCallbackParticipantWrapupcodesBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsCallbackParticipantWrapupcodesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCallbackParticipantWrapupcodesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCallbackParticipantWrapupcodesUnauthorized creates a GetConversationsCallbackParticipantWrapupcodesUnauthorized with default headers values
func NewGetConversationsCallbackParticipantWrapupcodesUnauthorized() *GetConversationsCallbackParticipantWrapupcodesUnauthorized {
	return &GetConversationsCallbackParticipantWrapupcodesUnauthorized{}
}

/*
GetConversationsCallbackParticipantWrapupcodesUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetConversationsCallbackParticipantWrapupcodesUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations callback participant wrapupcodes unauthorized response has a 2xx status code
func (o *GetConversationsCallbackParticipantWrapupcodesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations callback participant wrapupcodes unauthorized response has a 3xx status code
func (o *GetConversationsCallbackParticipantWrapupcodesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations callback participant wrapupcodes unauthorized response has a 4xx status code
func (o *GetConversationsCallbackParticipantWrapupcodesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations callback participant wrapupcodes unauthorized response has a 5xx status code
func (o *GetConversationsCallbackParticipantWrapupcodesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations callback participant wrapupcodes unauthorized response a status code equal to that given
func (o *GetConversationsCallbackParticipantWrapupcodesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetConversationsCallbackParticipantWrapupcodesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsCallbackParticipantWrapupcodesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsCallbackParticipantWrapupcodesUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsCallbackParticipantWrapupcodesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsCallbackParticipantWrapupcodesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCallbackParticipantWrapupcodesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCallbackParticipantWrapupcodesForbidden creates a GetConversationsCallbackParticipantWrapupcodesForbidden with default headers values
func NewGetConversationsCallbackParticipantWrapupcodesForbidden() *GetConversationsCallbackParticipantWrapupcodesForbidden {
	return &GetConversationsCallbackParticipantWrapupcodesForbidden{}
}

/*
GetConversationsCallbackParticipantWrapupcodesForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetConversationsCallbackParticipantWrapupcodesForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations callback participant wrapupcodes forbidden response has a 2xx status code
func (o *GetConversationsCallbackParticipantWrapupcodesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations callback participant wrapupcodes forbidden response has a 3xx status code
func (o *GetConversationsCallbackParticipantWrapupcodesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations callback participant wrapupcodes forbidden response has a 4xx status code
func (o *GetConversationsCallbackParticipantWrapupcodesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations callback participant wrapupcodes forbidden response has a 5xx status code
func (o *GetConversationsCallbackParticipantWrapupcodesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations callback participant wrapupcodes forbidden response a status code equal to that given
func (o *GetConversationsCallbackParticipantWrapupcodesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetConversationsCallbackParticipantWrapupcodesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsCallbackParticipantWrapupcodesForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsCallbackParticipantWrapupcodesForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsCallbackParticipantWrapupcodesForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsCallbackParticipantWrapupcodesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCallbackParticipantWrapupcodesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCallbackParticipantWrapupcodesNotFound creates a GetConversationsCallbackParticipantWrapupcodesNotFound with default headers values
func NewGetConversationsCallbackParticipantWrapupcodesNotFound() *GetConversationsCallbackParticipantWrapupcodesNotFound {
	return &GetConversationsCallbackParticipantWrapupcodesNotFound{}
}

/*
GetConversationsCallbackParticipantWrapupcodesNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetConversationsCallbackParticipantWrapupcodesNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations callback participant wrapupcodes not found response has a 2xx status code
func (o *GetConversationsCallbackParticipantWrapupcodesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations callback participant wrapupcodes not found response has a 3xx status code
func (o *GetConversationsCallbackParticipantWrapupcodesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations callback participant wrapupcodes not found response has a 4xx status code
func (o *GetConversationsCallbackParticipantWrapupcodesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations callback participant wrapupcodes not found response has a 5xx status code
func (o *GetConversationsCallbackParticipantWrapupcodesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations callback participant wrapupcodes not found response a status code equal to that given
func (o *GetConversationsCallbackParticipantWrapupcodesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetConversationsCallbackParticipantWrapupcodesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsCallbackParticipantWrapupcodesNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsCallbackParticipantWrapupcodesNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsCallbackParticipantWrapupcodesNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsCallbackParticipantWrapupcodesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCallbackParticipantWrapupcodesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCallbackParticipantWrapupcodesRequestTimeout creates a GetConversationsCallbackParticipantWrapupcodesRequestTimeout with default headers values
func NewGetConversationsCallbackParticipantWrapupcodesRequestTimeout() *GetConversationsCallbackParticipantWrapupcodesRequestTimeout {
	return &GetConversationsCallbackParticipantWrapupcodesRequestTimeout{}
}

/*
GetConversationsCallbackParticipantWrapupcodesRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetConversationsCallbackParticipantWrapupcodesRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations callback participant wrapupcodes request timeout response has a 2xx status code
func (o *GetConversationsCallbackParticipantWrapupcodesRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations callback participant wrapupcodes request timeout response has a 3xx status code
func (o *GetConversationsCallbackParticipantWrapupcodesRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations callback participant wrapupcodes request timeout response has a 4xx status code
func (o *GetConversationsCallbackParticipantWrapupcodesRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations callback participant wrapupcodes request timeout response has a 5xx status code
func (o *GetConversationsCallbackParticipantWrapupcodesRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations callback participant wrapupcodes request timeout response a status code equal to that given
func (o *GetConversationsCallbackParticipantWrapupcodesRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetConversationsCallbackParticipantWrapupcodesRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsCallbackParticipantWrapupcodesRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationsCallbackParticipantWrapupcodesRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsCallbackParticipantWrapupcodesRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationsCallbackParticipantWrapupcodesRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCallbackParticipantWrapupcodesRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCallbackParticipantWrapupcodesRequestEntityTooLarge creates a GetConversationsCallbackParticipantWrapupcodesRequestEntityTooLarge with default headers values
func NewGetConversationsCallbackParticipantWrapupcodesRequestEntityTooLarge() *GetConversationsCallbackParticipantWrapupcodesRequestEntityTooLarge {
	return &GetConversationsCallbackParticipantWrapupcodesRequestEntityTooLarge{}
}

/*
GetConversationsCallbackParticipantWrapupcodesRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetConversationsCallbackParticipantWrapupcodesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations callback participant wrapupcodes request entity too large response has a 2xx status code
func (o *GetConversationsCallbackParticipantWrapupcodesRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations callback participant wrapupcodes request entity too large response has a 3xx status code
func (o *GetConversationsCallbackParticipantWrapupcodesRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations callback participant wrapupcodes request entity too large response has a 4xx status code
func (o *GetConversationsCallbackParticipantWrapupcodesRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations callback participant wrapupcodes request entity too large response has a 5xx status code
func (o *GetConversationsCallbackParticipantWrapupcodesRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations callback participant wrapupcodes request entity too large response a status code equal to that given
func (o *GetConversationsCallbackParticipantWrapupcodesRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetConversationsCallbackParticipantWrapupcodesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsCallbackParticipantWrapupcodesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsCallbackParticipantWrapupcodesRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsCallbackParticipantWrapupcodesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsCallbackParticipantWrapupcodesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCallbackParticipantWrapupcodesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCallbackParticipantWrapupcodesUnsupportedMediaType creates a GetConversationsCallbackParticipantWrapupcodesUnsupportedMediaType with default headers values
func NewGetConversationsCallbackParticipantWrapupcodesUnsupportedMediaType() *GetConversationsCallbackParticipantWrapupcodesUnsupportedMediaType {
	return &GetConversationsCallbackParticipantWrapupcodesUnsupportedMediaType{}
}

/*
GetConversationsCallbackParticipantWrapupcodesUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetConversationsCallbackParticipantWrapupcodesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations callback participant wrapupcodes unsupported media type response has a 2xx status code
func (o *GetConversationsCallbackParticipantWrapupcodesUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations callback participant wrapupcodes unsupported media type response has a 3xx status code
func (o *GetConversationsCallbackParticipantWrapupcodesUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations callback participant wrapupcodes unsupported media type response has a 4xx status code
func (o *GetConversationsCallbackParticipantWrapupcodesUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations callback participant wrapupcodes unsupported media type response has a 5xx status code
func (o *GetConversationsCallbackParticipantWrapupcodesUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations callback participant wrapupcodes unsupported media type response a status code equal to that given
func (o *GetConversationsCallbackParticipantWrapupcodesUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetConversationsCallbackParticipantWrapupcodesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsCallbackParticipantWrapupcodesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsCallbackParticipantWrapupcodesUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsCallbackParticipantWrapupcodesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsCallbackParticipantWrapupcodesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCallbackParticipantWrapupcodesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCallbackParticipantWrapupcodesTooManyRequests creates a GetConversationsCallbackParticipantWrapupcodesTooManyRequests with default headers values
func NewGetConversationsCallbackParticipantWrapupcodesTooManyRequests() *GetConversationsCallbackParticipantWrapupcodesTooManyRequests {
	return &GetConversationsCallbackParticipantWrapupcodesTooManyRequests{}
}

/*
GetConversationsCallbackParticipantWrapupcodesTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetConversationsCallbackParticipantWrapupcodesTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations callback participant wrapupcodes too many requests response has a 2xx status code
func (o *GetConversationsCallbackParticipantWrapupcodesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations callback participant wrapupcodes too many requests response has a 3xx status code
func (o *GetConversationsCallbackParticipantWrapupcodesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations callback participant wrapupcodes too many requests response has a 4xx status code
func (o *GetConversationsCallbackParticipantWrapupcodesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations callback participant wrapupcodes too many requests response has a 5xx status code
func (o *GetConversationsCallbackParticipantWrapupcodesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations callback participant wrapupcodes too many requests response a status code equal to that given
func (o *GetConversationsCallbackParticipantWrapupcodesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetConversationsCallbackParticipantWrapupcodesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsCallbackParticipantWrapupcodesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsCallbackParticipantWrapupcodesTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsCallbackParticipantWrapupcodesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsCallbackParticipantWrapupcodesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCallbackParticipantWrapupcodesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCallbackParticipantWrapupcodesInternalServerError creates a GetConversationsCallbackParticipantWrapupcodesInternalServerError with default headers values
func NewGetConversationsCallbackParticipantWrapupcodesInternalServerError() *GetConversationsCallbackParticipantWrapupcodesInternalServerError {
	return &GetConversationsCallbackParticipantWrapupcodesInternalServerError{}
}

/*
GetConversationsCallbackParticipantWrapupcodesInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetConversationsCallbackParticipantWrapupcodesInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations callback participant wrapupcodes internal server error response has a 2xx status code
func (o *GetConversationsCallbackParticipantWrapupcodesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations callback participant wrapupcodes internal server error response has a 3xx status code
func (o *GetConversationsCallbackParticipantWrapupcodesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations callback participant wrapupcodes internal server error response has a 4xx status code
func (o *GetConversationsCallbackParticipantWrapupcodesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations callback participant wrapupcodes internal server error response has a 5xx status code
func (o *GetConversationsCallbackParticipantWrapupcodesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations callback participant wrapupcodes internal server error response a status code equal to that given
func (o *GetConversationsCallbackParticipantWrapupcodesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetConversationsCallbackParticipantWrapupcodesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsCallbackParticipantWrapupcodesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsCallbackParticipantWrapupcodesInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsCallbackParticipantWrapupcodesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsCallbackParticipantWrapupcodesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCallbackParticipantWrapupcodesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCallbackParticipantWrapupcodesServiceUnavailable creates a GetConversationsCallbackParticipantWrapupcodesServiceUnavailable with default headers values
func NewGetConversationsCallbackParticipantWrapupcodesServiceUnavailable() *GetConversationsCallbackParticipantWrapupcodesServiceUnavailable {
	return &GetConversationsCallbackParticipantWrapupcodesServiceUnavailable{}
}

/*
GetConversationsCallbackParticipantWrapupcodesServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetConversationsCallbackParticipantWrapupcodesServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations callback participant wrapupcodes service unavailable response has a 2xx status code
func (o *GetConversationsCallbackParticipantWrapupcodesServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations callback participant wrapupcodes service unavailable response has a 3xx status code
func (o *GetConversationsCallbackParticipantWrapupcodesServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations callback participant wrapupcodes service unavailable response has a 4xx status code
func (o *GetConversationsCallbackParticipantWrapupcodesServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations callback participant wrapupcodes service unavailable response has a 5xx status code
func (o *GetConversationsCallbackParticipantWrapupcodesServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations callback participant wrapupcodes service unavailable response a status code equal to that given
func (o *GetConversationsCallbackParticipantWrapupcodesServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetConversationsCallbackParticipantWrapupcodesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsCallbackParticipantWrapupcodesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsCallbackParticipantWrapupcodesServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsCallbackParticipantWrapupcodesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsCallbackParticipantWrapupcodesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCallbackParticipantWrapupcodesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCallbackParticipantWrapupcodesGatewayTimeout creates a GetConversationsCallbackParticipantWrapupcodesGatewayTimeout with default headers values
func NewGetConversationsCallbackParticipantWrapupcodesGatewayTimeout() *GetConversationsCallbackParticipantWrapupcodesGatewayTimeout {
	return &GetConversationsCallbackParticipantWrapupcodesGatewayTimeout{}
}

/*
GetConversationsCallbackParticipantWrapupcodesGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetConversationsCallbackParticipantWrapupcodesGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations callback participant wrapupcodes gateway timeout response has a 2xx status code
func (o *GetConversationsCallbackParticipantWrapupcodesGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations callback participant wrapupcodes gateway timeout response has a 3xx status code
func (o *GetConversationsCallbackParticipantWrapupcodesGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations callback participant wrapupcodes gateway timeout response has a 4xx status code
func (o *GetConversationsCallbackParticipantWrapupcodesGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations callback participant wrapupcodes gateway timeout response has a 5xx status code
func (o *GetConversationsCallbackParticipantWrapupcodesGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations callback participant wrapupcodes gateway timeout response a status code equal to that given
func (o *GetConversationsCallbackParticipantWrapupcodesGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetConversationsCallbackParticipantWrapupcodesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsCallbackParticipantWrapupcodesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsCallbackParticipantWrapupcodesGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/wrapupcodes][%d] getConversationsCallbackParticipantWrapupcodesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsCallbackParticipantWrapupcodesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCallbackParticipantWrapupcodesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
