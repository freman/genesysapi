// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetConversationsMessageParticipantWrapupReader is a Reader for the GetConversationsMessageParticipantWrapup structure.
type GetConversationsMessageParticipantWrapupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConversationsMessageParticipantWrapupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConversationsMessageParticipantWrapupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetConversationsMessageParticipantWrapupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetConversationsMessageParticipantWrapupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetConversationsMessageParticipantWrapupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetConversationsMessageParticipantWrapupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetConversationsMessageParticipantWrapupRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetConversationsMessageParticipantWrapupRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetConversationsMessageParticipantWrapupUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetConversationsMessageParticipantWrapupTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetConversationsMessageParticipantWrapupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetConversationsMessageParticipantWrapupServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetConversationsMessageParticipantWrapupGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetConversationsMessageParticipantWrapupOK creates a GetConversationsMessageParticipantWrapupOK with default headers values
func NewGetConversationsMessageParticipantWrapupOK() *GetConversationsMessageParticipantWrapupOK {
	return &GetConversationsMessageParticipantWrapupOK{}
}

/*GetConversationsMessageParticipantWrapupOK handles this case with default header values.

successful operation
*/
type GetConversationsMessageParticipantWrapupOK struct {
	Payload *models.AssignedWrapupCode
}

func (o *GetConversationsMessageParticipantWrapupOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsMessageParticipantWrapupOK  %+v", 200, o.Payload)
}

func (o *GetConversationsMessageParticipantWrapupOK) GetPayload() *models.AssignedWrapupCode {
	return o.Payload
}

func (o *GetConversationsMessageParticipantWrapupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AssignedWrapupCode)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageParticipantWrapupBadRequest creates a GetConversationsMessageParticipantWrapupBadRequest with default headers values
func NewGetConversationsMessageParticipantWrapupBadRequest() *GetConversationsMessageParticipantWrapupBadRequest {
	return &GetConversationsMessageParticipantWrapupBadRequest{}
}

/*GetConversationsMessageParticipantWrapupBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetConversationsMessageParticipantWrapupBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsMessageParticipantWrapupBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsMessageParticipantWrapupBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsMessageParticipantWrapupBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageParticipantWrapupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageParticipantWrapupUnauthorized creates a GetConversationsMessageParticipantWrapupUnauthorized with default headers values
func NewGetConversationsMessageParticipantWrapupUnauthorized() *GetConversationsMessageParticipantWrapupUnauthorized {
	return &GetConversationsMessageParticipantWrapupUnauthorized{}
}

/*GetConversationsMessageParticipantWrapupUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetConversationsMessageParticipantWrapupUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsMessageParticipantWrapupUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsMessageParticipantWrapupUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsMessageParticipantWrapupUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageParticipantWrapupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageParticipantWrapupForbidden creates a GetConversationsMessageParticipantWrapupForbidden with default headers values
func NewGetConversationsMessageParticipantWrapupForbidden() *GetConversationsMessageParticipantWrapupForbidden {
	return &GetConversationsMessageParticipantWrapupForbidden{}
}

/*GetConversationsMessageParticipantWrapupForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetConversationsMessageParticipantWrapupForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsMessageParticipantWrapupForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsMessageParticipantWrapupForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsMessageParticipantWrapupForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageParticipantWrapupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageParticipantWrapupNotFound creates a GetConversationsMessageParticipantWrapupNotFound with default headers values
func NewGetConversationsMessageParticipantWrapupNotFound() *GetConversationsMessageParticipantWrapupNotFound {
	return &GetConversationsMessageParticipantWrapupNotFound{}
}

/*GetConversationsMessageParticipantWrapupNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetConversationsMessageParticipantWrapupNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsMessageParticipantWrapupNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsMessageParticipantWrapupNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsMessageParticipantWrapupNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageParticipantWrapupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageParticipantWrapupRequestTimeout creates a GetConversationsMessageParticipantWrapupRequestTimeout with default headers values
func NewGetConversationsMessageParticipantWrapupRequestTimeout() *GetConversationsMessageParticipantWrapupRequestTimeout {
	return &GetConversationsMessageParticipantWrapupRequestTimeout{}
}

/*GetConversationsMessageParticipantWrapupRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetConversationsMessageParticipantWrapupRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsMessageParticipantWrapupRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsMessageParticipantWrapupRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationsMessageParticipantWrapupRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageParticipantWrapupRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageParticipantWrapupRequestEntityTooLarge creates a GetConversationsMessageParticipantWrapupRequestEntityTooLarge with default headers values
func NewGetConversationsMessageParticipantWrapupRequestEntityTooLarge() *GetConversationsMessageParticipantWrapupRequestEntityTooLarge {
	return &GetConversationsMessageParticipantWrapupRequestEntityTooLarge{}
}

/*GetConversationsMessageParticipantWrapupRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetConversationsMessageParticipantWrapupRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsMessageParticipantWrapupRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsMessageParticipantWrapupRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsMessageParticipantWrapupRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageParticipantWrapupRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageParticipantWrapupUnsupportedMediaType creates a GetConversationsMessageParticipantWrapupUnsupportedMediaType with default headers values
func NewGetConversationsMessageParticipantWrapupUnsupportedMediaType() *GetConversationsMessageParticipantWrapupUnsupportedMediaType {
	return &GetConversationsMessageParticipantWrapupUnsupportedMediaType{}
}

/*GetConversationsMessageParticipantWrapupUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetConversationsMessageParticipantWrapupUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsMessageParticipantWrapupUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsMessageParticipantWrapupUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsMessageParticipantWrapupUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageParticipantWrapupUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageParticipantWrapupTooManyRequests creates a GetConversationsMessageParticipantWrapupTooManyRequests with default headers values
func NewGetConversationsMessageParticipantWrapupTooManyRequests() *GetConversationsMessageParticipantWrapupTooManyRequests {
	return &GetConversationsMessageParticipantWrapupTooManyRequests{}
}

/*GetConversationsMessageParticipantWrapupTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetConversationsMessageParticipantWrapupTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsMessageParticipantWrapupTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsMessageParticipantWrapupTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsMessageParticipantWrapupTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageParticipantWrapupTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageParticipantWrapupInternalServerError creates a GetConversationsMessageParticipantWrapupInternalServerError with default headers values
func NewGetConversationsMessageParticipantWrapupInternalServerError() *GetConversationsMessageParticipantWrapupInternalServerError {
	return &GetConversationsMessageParticipantWrapupInternalServerError{}
}

/*GetConversationsMessageParticipantWrapupInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetConversationsMessageParticipantWrapupInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsMessageParticipantWrapupInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsMessageParticipantWrapupInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsMessageParticipantWrapupInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageParticipantWrapupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageParticipantWrapupServiceUnavailable creates a GetConversationsMessageParticipantWrapupServiceUnavailable with default headers values
func NewGetConversationsMessageParticipantWrapupServiceUnavailable() *GetConversationsMessageParticipantWrapupServiceUnavailable {
	return &GetConversationsMessageParticipantWrapupServiceUnavailable{}
}

/*GetConversationsMessageParticipantWrapupServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetConversationsMessageParticipantWrapupServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsMessageParticipantWrapupServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsMessageParticipantWrapupServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsMessageParticipantWrapupServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageParticipantWrapupServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageParticipantWrapupGatewayTimeout creates a GetConversationsMessageParticipantWrapupGatewayTimeout with default headers values
func NewGetConversationsMessageParticipantWrapupGatewayTimeout() *GetConversationsMessageParticipantWrapupGatewayTimeout {
	return &GetConversationsMessageParticipantWrapupGatewayTimeout{}
}

/*GetConversationsMessageParticipantWrapupGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetConversationsMessageParticipantWrapupGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsMessageParticipantWrapupGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsMessageParticipantWrapupGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsMessageParticipantWrapupGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageParticipantWrapupGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
