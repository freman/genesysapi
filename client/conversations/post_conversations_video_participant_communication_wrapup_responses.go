// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostConversationsVideoParticipantCommunicationWrapupReader is a Reader for the PostConversationsVideoParticipantCommunicationWrapup structure.
type PostConversationsVideoParticipantCommunicationWrapupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostConversationsVideoParticipantCommunicationWrapupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewPostConversationsVideoParticipantCommunicationWrapupAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostConversationsVideoParticipantCommunicationWrapupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostConversationsVideoParticipantCommunicationWrapupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostConversationsVideoParticipantCommunicationWrapupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostConversationsVideoParticipantCommunicationWrapupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostConversationsVideoParticipantCommunicationWrapupRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostConversationsVideoParticipantCommunicationWrapupRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostConversationsVideoParticipantCommunicationWrapupUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostConversationsVideoParticipantCommunicationWrapupTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostConversationsVideoParticipantCommunicationWrapupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostConversationsVideoParticipantCommunicationWrapupServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostConversationsVideoParticipantCommunicationWrapupGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostConversationsVideoParticipantCommunicationWrapupAccepted creates a PostConversationsVideoParticipantCommunicationWrapupAccepted with default headers values
func NewPostConversationsVideoParticipantCommunicationWrapupAccepted() *PostConversationsVideoParticipantCommunicationWrapupAccepted {
	return &PostConversationsVideoParticipantCommunicationWrapupAccepted{}
}

/*
PostConversationsVideoParticipantCommunicationWrapupAccepted describes a response with status code 202, with default header values.

Accepted
*/
type PostConversationsVideoParticipantCommunicationWrapupAccepted struct {
}

// IsSuccess returns true when this post conversations video participant communication wrapup accepted response has a 2xx status code
func (o *PostConversationsVideoParticipantCommunicationWrapupAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post conversations video participant communication wrapup accepted response has a 3xx status code
func (o *PostConversationsVideoParticipantCommunicationWrapupAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations video participant communication wrapup accepted response has a 4xx status code
func (o *PostConversationsVideoParticipantCommunicationWrapupAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations video participant communication wrapup accepted response has a 5xx status code
func (o *PostConversationsVideoParticipantCommunicationWrapupAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations video participant communication wrapup accepted response a status code equal to that given
func (o *PostConversationsVideoParticipantCommunicationWrapupAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *PostConversationsVideoParticipantCommunicationWrapupAccepted) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsVideoParticipantCommunicationWrapupAccepted ", 202)
}

func (o *PostConversationsVideoParticipantCommunicationWrapupAccepted) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsVideoParticipantCommunicationWrapupAccepted ", 202)
}

func (o *PostConversationsVideoParticipantCommunicationWrapupAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostConversationsVideoParticipantCommunicationWrapupBadRequest creates a PostConversationsVideoParticipantCommunicationWrapupBadRequest with default headers values
func NewPostConversationsVideoParticipantCommunicationWrapupBadRequest() *PostConversationsVideoParticipantCommunicationWrapupBadRequest {
	return &PostConversationsVideoParticipantCommunicationWrapupBadRequest{}
}

/*
PostConversationsVideoParticipantCommunicationWrapupBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostConversationsVideoParticipantCommunicationWrapupBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations video participant communication wrapup bad request response has a 2xx status code
func (o *PostConversationsVideoParticipantCommunicationWrapupBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations video participant communication wrapup bad request response has a 3xx status code
func (o *PostConversationsVideoParticipantCommunicationWrapupBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations video participant communication wrapup bad request response has a 4xx status code
func (o *PostConversationsVideoParticipantCommunicationWrapupBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations video participant communication wrapup bad request response has a 5xx status code
func (o *PostConversationsVideoParticipantCommunicationWrapupBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations video participant communication wrapup bad request response a status code equal to that given
func (o *PostConversationsVideoParticipantCommunicationWrapupBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostConversationsVideoParticipantCommunicationWrapupBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsVideoParticipantCommunicationWrapupBadRequest  %+v", 400, o.Payload)
}

func (o *PostConversationsVideoParticipantCommunicationWrapupBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsVideoParticipantCommunicationWrapupBadRequest  %+v", 400, o.Payload)
}

func (o *PostConversationsVideoParticipantCommunicationWrapupBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsVideoParticipantCommunicationWrapupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsVideoParticipantCommunicationWrapupUnauthorized creates a PostConversationsVideoParticipantCommunicationWrapupUnauthorized with default headers values
func NewPostConversationsVideoParticipantCommunicationWrapupUnauthorized() *PostConversationsVideoParticipantCommunicationWrapupUnauthorized {
	return &PostConversationsVideoParticipantCommunicationWrapupUnauthorized{}
}

/*
PostConversationsVideoParticipantCommunicationWrapupUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostConversationsVideoParticipantCommunicationWrapupUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations video participant communication wrapup unauthorized response has a 2xx status code
func (o *PostConversationsVideoParticipantCommunicationWrapupUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations video participant communication wrapup unauthorized response has a 3xx status code
func (o *PostConversationsVideoParticipantCommunicationWrapupUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations video participant communication wrapup unauthorized response has a 4xx status code
func (o *PostConversationsVideoParticipantCommunicationWrapupUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations video participant communication wrapup unauthorized response has a 5xx status code
func (o *PostConversationsVideoParticipantCommunicationWrapupUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations video participant communication wrapup unauthorized response a status code equal to that given
func (o *PostConversationsVideoParticipantCommunicationWrapupUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostConversationsVideoParticipantCommunicationWrapupUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsVideoParticipantCommunicationWrapupUnauthorized  %+v", 401, o.Payload)
}

func (o *PostConversationsVideoParticipantCommunicationWrapupUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsVideoParticipantCommunicationWrapupUnauthorized  %+v", 401, o.Payload)
}

func (o *PostConversationsVideoParticipantCommunicationWrapupUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsVideoParticipantCommunicationWrapupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsVideoParticipantCommunicationWrapupForbidden creates a PostConversationsVideoParticipantCommunicationWrapupForbidden with default headers values
func NewPostConversationsVideoParticipantCommunicationWrapupForbidden() *PostConversationsVideoParticipantCommunicationWrapupForbidden {
	return &PostConversationsVideoParticipantCommunicationWrapupForbidden{}
}

/*
PostConversationsVideoParticipantCommunicationWrapupForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostConversationsVideoParticipantCommunicationWrapupForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations video participant communication wrapup forbidden response has a 2xx status code
func (o *PostConversationsVideoParticipantCommunicationWrapupForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations video participant communication wrapup forbidden response has a 3xx status code
func (o *PostConversationsVideoParticipantCommunicationWrapupForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations video participant communication wrapup forbidden response has a 4xx status code
func (o *PostConversationsVideoParticipantCommunicationWrapupForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations video participant communication wrapup forbidden response has a 5xx status code
func (o *PostConversationsVideoParticipantCommunicationWrapupForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations video participant communication wrapup forbidden response a status code equal to that given
func (o *PostConversationsVideoParticipantCommunicationWrapupForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostConversationsVideoParticipantCommunicationWrapupForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsVideoParticipantCommunicationWrapupForbidden  %+v", 403, o.Payload)
}

func (o *PostConversationsVideoParticipantCommunicationWrapupForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsVideoParticipantCommunicationWrapupForbidden  %+v", 403, o.Payload)
}

func (o *PostConversationsVideoParticipantCommunicationWrapupForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsVideoParticipantCommunicationWrapupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsVideoParticipantCommunicationWrapupNotFound creates a PostConversationsVideoParticipantCommunicationWrapupNotFound with default headers values
func NewPostConversationsVideoParticipantCommunicationWrapupNotFound() *PostConversationsVideoParticipantCommunicationWrapupNotFound {
	return &PostConversationsVideoParticipantCommunicationWrapupNotFound{}
}

/*
PostConversationsVideoParticipantCommunicationWrapupNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostConversationsVideoParticipantCommunicationWrapupNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations video participant communication wrapup not found response has a 2xx status code
func (o *PostConversationsVideoParticipantCommunicationWrapupNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations video participant communication wrapup not found response has a 3xx status code
func (o *PostConversationsVideoParticipantCommunicationWrapupNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations video participant communication wrapup not found response has a 4xx status code
func (o *PostConversationsVideoParticipantCommunicationWrapupNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations video participant communication wrapup not found response has a 5xx status code
func (o *PostConversationsVideoParticipantCommunicationWrapupNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations video participant communication wrapup not found response a status code equal to that given
func (o *PostConversationsVideoParticipantCommunicationWrapupNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostConversationsVideoParticipantCommunicationWrapupNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsVideoParticipantCommunicationWrapupNotFound  %+v", 404, o.Payload)
}

func (o *PostConversationsVideoParticipantCommunicationWrapupNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsVideoParticipantCommunicationWrapupNotFound  %+v", 404, o.Payload)
}

func (o *PostConversationsVideoParticipantCommunicationWrapupNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsVideoParticipantCommunicationWrapupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsVideoParticipantCommunicationWrapupRequestTimeout creates a PostConversationsVideoParticipantCommunicationWrapupRequestTimeout with default headers values
func NewPostConversationsVideoParticipantCommunicationWrapupRequestTimeout() *PostConversationsVideoParticipantCommunicationWrapupRequestTimeout {
	return &PostConversationsVideoParticipantCommunicationWrapupRequestTimeout{}
}

/*
PostConversationsVideoParticipantCommunicationWrapupRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostConversationsVideoParticipantCommunicationWrapupRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations video participant communication wrapup request timeout response has a 2xx status code
func (o *PostConversationsVideoParticipantCommunicationWrapupRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations video participant communication wrapup request timeout response has a 3xx status code
func (o *PostConversationsVideoParticipantCommunicationWrapupRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations video participant communication wrapup request timeout response has a 4xx status code
func (o *PostConversationsVideoParticipantCommunicationWrapupRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations video participant communication wrapup request timeout response has a 5xx status code
func (o *PostConversationsVideoParticipantCommunicationWrapupRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations video participant communication wrapup request timeout response a status code equal to that given
func (o *PostConversationsVideoParticipantCommunicationWrapupRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostConversationsVideoParticipantCommunicationWrapupRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsVideoParticipantCommunicationWrapupRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostConversationsVideoParticipantCommunicationWrapupRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsVideoParticipantCommunicationWrapupRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostConversationsVideoParticipantCommunicationWrapupRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsVideoParticipantCommunicationWrapupRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsVideoParticipantCommunicationWrapupRequestEntityTooLarge creates a PostConversationsVideoParticipantCommunicationWrapupRequestEntityTooLarge with default headers values
func NewPostConversationsVideoParticipantCommunicationWrapupRequestEntityTooLarge() *PostConversationsVideoParticipantCommunicationWrapupRequestEntityTooLarge {
	return &PostConversationsVideoParticipantCommunicationWrapupRequestEntityTooLarge{}
}

/*
PostConversationsVideoParticipantCommunicationWrapupRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PostConversationsVideoParticipantCommunicationWrapupRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations video participant communication wrapup request entity too large response has a 2xx status code
func (o *PostConversationsVideoParticipantCommunicationWrapupRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations video participant communication wrapup request entity too large response has a 3xx status code
func (o *PostConversationsVideoParticipantCommunicationWrapupRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations video participant communication wrapup request entity too large response has a 4xx status code
func (o *PostConversationsVideoParticipantCommunicationWrapupRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations video participant communication wrapup request entity too large response has a 5xx status code
func (o *PostConversationsVideoParticipantCommunicationWrapupRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations video participant communication wrapup request entity too large response a status code equal to that given
func (o *PostConversationsVideoParticipantCommunicationWrapupRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostConversationsVideoParticipantCommunicationWrapupRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsVideoParticipantCommunicationWrapupRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostConversationsVideoParticipantCommunicationWrapupRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsVideoParticipantCommunicationWrapupRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostConversationsVideoParticipantCommunicationWrapupRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsVideoParticipantCommunicationWrapupRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsVideoParticipantCommunicationWrapupUnsupportedMediaType creates a PostConversationsVideoParticipantCommunicationWrapupUnsupportedMediaType with default headers values
func NewPostConversationsVideoParticipantCommunicationWrapupUnsupportedMediaType() *PostConversationsVideoParticipantCommunicationWrapupUnsupportedMediaType {
	return &PostConversationsVideoParticipantCommunicationWrapupUnsupportedMediaType{}
}

/*
PostConversationsVideoParticipantCommunicationWrapupUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostConversationsVideoParticipantCommunicationWrapupUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations video participant communication wrapup unsupported media type response has a 2xx status code
func (o *PostConversationsVideoParticipantCommunicationWrapupUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations video participant communication wrapup unsupported media type response has a 3xx status code
func (o *PostConversationsVideoParticipantCommunicationWrapupUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations video participant communication wrapup unsupported media type response has a 4xx status code
func (o *PostConversationsVideoParticipantCommunicationWrapupUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations video participant communication wrapup unsupported media type response has a 5xx status code
func (o *PostConversationsVideoParticipantCommunicationWrapupUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations video participant communication wrapup unsupported media type response a status code equal to that given
func (o *PostConversationsVideoParticipantCommunicationWrapupUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostConversationsVideoParticipantCommunicationWrapupUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsVideoParticipantCommunicationWrapupUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostConversationsVideoParticipantCommunicationWrapupUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsVideoParticipantCommunicationWrapupUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostConversationsVideoParticipantCommunicationWrapupUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsVideoParticipantCommunicationWrapupUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsVideoParticipantCommunicationWrapupTooManyRequests creates a PostConversationsVideoParticipantCommunicationWrapupTooManyRequests with default headers values
func NewPostConversationsVideoParticipantCommunicationWrapupTooManyRequests() *PostConversationsVideoParticipantCommunicationWrapupTooManyRequests {
	return &PostConversationsVideoParticipantCommunicationWrapupTooManyRequests{}
}

/*
PostConversationsVideoParticipantCommunicationWrapupTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostConversationsVideoParticipantCommunicationWrapupTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations video participant communication wrapup too many requests response has a 2xx status code
func (o *PostConversationsVideoParticipantCommunicationWrapupTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations video participant communication wrapup too many requests response has a 3xx status code
func (o *PostConversationsVideoParticipantCommunicationWrapupTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations video participant communication wrapup too many requests response has a 4xx status code
func (o *PostConversationsVideoParticipantCommunicationWrapupTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations video participant communication wrapup too many requests response has a 5xx status code
func (o *PostConversationsVideoParticipantCommunicationWrapupTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations video participant communication wrapup too many requests response a status code equal to that given
func (o *PostConversationsVideoParticipantCommunicationWrapupTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostConversationsVideoParticipantCommunicationWrapupTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsVideoParticipantCommunicationWrapupTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostConversationsVideoParticipantCommunicationWrapupTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsVideoParticipantCommunicationWrapupTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostConversationsVideoParticipantCommunicationWrapupTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsVideoParticipantCommunicationWrapupTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsVideoParticipantCommunicationWrapupInternalServerError creates a PostConversationsVideoParticipantCommunicationWrapupInternalServerError with default headers values
func NewPostConversationsVideoParticipantCommunicationWrapupInternalServerError() *PostConversationsVideoParticipantCommunicationWrapupInternalServerError {
	return &PostConversationsVideoParticipantCommunicationWrapupInternalServerError{}
}

/*
PostConversationsVideoParticipantCommunicationWrapupInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostConversationsVideoParticipantCommunicationWrapupInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations video participant communication wrapup internal server error response has a 2xx status code
func (o *PostConversationsVideoParticipantCommunicationWrapupInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations video participant communication wrapup internal server error response has a 3xx status code
func (o *PostConversationsVideoParticipantCommunicationWrapupInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations video participant communication wrapup internal server error response has a 4xx status code
func (o *PostConversationsVideoParticipantCommunicationWrapupInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations video participant communication wrapup internal server error response has a 5xx status code
func (o *PostConversationsVideoParticipantCommunicationWrapupInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversations video participant communication wrapup internal server error response a status code equal to that given
func (o *PostConversationsVideoParticipantCommunicationWrapupInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostConversationsVideoParticipantCommunicationWrapupInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsVideoParticipantCommunicationWrapupInternalServerError  %+v", 500, o.Payload)
}

func (o *PostConversationsVideoParticipantCommunicationWrapupInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsVideoParticipantCommunicationWrapupInternalServerError  %+v", 500, o.Payload)
}

func (o *PostConversationsVideoParticipantCommunicationWrapupInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsVideoParticipantCommunicationWrapupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsVideoParticipantCommunicationWrapupServiceUnavailable creates a PostConversationsVideoParticipantCommunicationWrapupServiceUnavailable with default headers values
func NewPostConversationsVideoParticipantCommunicationWrapupServiceUnavailable() *PostConversationsVideoParticipantCommunicationWrapupServiceUnavailable {
	return &PostConversationsVideoParticipantCommunicationWrapupServiceUnavailable{}
}

/*
PostConversationsVideoParticipantCommunicationWrapupServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostConversationsVideoParticipantCommunicationWrapupServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations video participant communication wrapup service unavailable response has a 2xx status code
func (o *PostConversationsVideoParticipantCommunicationWrapupServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations video participant communication wrapup service unavailable response has a 3xx status code
func (o *PostConversationsVideoParticipantCommunicationWrapupServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations video participant communication wrapup service unavailable response has a 4xx status code
func (o *PostConversationsVideoParticipantCommunicationWrapupServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations video participant communication wrapup service unavailable response has a 5xx status code
func (o *PostConversationsVideoParticipantCommunicationWrapupServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversations video participant communication wrapup service unavailable response a status code equal to that given
func (o *PostConversationsVideoParticipantCommunicationWrapupServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostConversationsVideoParticipantCommunicationWrapupServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsVideoParticipantCommunicationWrapupServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostConversationsVideoParticipantCommunicationWrapupServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsVideoParticipantCommunicationWrapupServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostConversationsVideoParticipantCommunicationWrapupServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsVideoParticipantCommunicationWrapupServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsVideoParticipantCommunicationWrapupGatewayTimeout creates a PostConversationsVideoParticipantCommunicationWrapupGatewayTimeout with default headers values
func NewPostConversationsVideoParticipantCommunicationWrapupGatewayTimeout() *PostConversationsVideoParticipantCommunicationWrapupGatewayTimeout {
	return &PostConversationsVideoParticipantCommunicationWrapupGatewayTimeout{}
}

/*
PostConversationsVideoParticipantCommunicationWrapupGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostConversationsVideoParticipantCommunicationWrapupGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations video participant communication wrapup gateway timeout response has a 2xx status code
func (o *PostConversationsVideoParticipantCommunicationWrapupGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations video participant communication wrapup gateway timeout response has a 3xx status code
func (o *PostConversationsVideoParticipantCommunicationWrapupGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations video participant communication wrapup gateway timeout response has a 4xx status code
func (o *PostConversationsVideoParticipantCommunicationWrapupGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations video participant communication wrapup gateway timeout response has a 5xx status code
func (o *PostConversationsVideoParticipantCommunicationWrapupGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversations video participant communication wrapup gateway timeout response a status code equal to that given
func (o *PostConversationsVideoParticipantCommunicationWrapupGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostConversationsVideoParticipantCommunicationWrapupGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsVideoParticipantCommunicationWrapupGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostConversationsVideoParticipantCommunicationWrapupGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsVideoParticipantCommunicationWrapupGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostConversationsVideoParticipantCommunicationWrapupGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsVideoParticipantCommunicationWrapupGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
