// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostConversationParticipantCallbacksReader is a Reader for the PostConversationParticipantCallbacks structure.
type PostConversationParticipantCallbacksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostConversationParticipantCallbacksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostConversationParticipantCallbacksCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostConversationParticipantCallbacksBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostConversationParticipantCallbacksUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostConversationParticipantCallbacksForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostConversationParticipantCallbacksNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostConversationParticipantCallbacksRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostConversationParticipantCallbacksRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostConversationParticipantCallbacksUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostConversationParticipantCallbacksTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostConversationParticipantCallbacksInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostConversationParticipantCallbacksServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostConversationParticipantCallbacksGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostConversationParticipantCallbacksCreated creates a PostConversationParticipantCallbacksCreated with default headers values
func NewPostConversationParticipantCallbacksCreated() *PostConversationParticipantCallbacksCreated {
	return &PostConversationParticipantCallbacksCreated{}
}

/*
PostConversationParticipantCallbacksCreated describes a response with status code 201, with default header values.

Created
*/
type PostConversationParticipantCallbacksCreated struct {
}

// IsSuccess returns true when this post conversation participant callbacks created response has a 2xx status code
func (o *PostConversationParticipantCallbacksCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post conversation participant callbacks created response has a 3xx status code
func (o *PostConversationParticipantCallbacksCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversation participant callbacks created response has a 4xx status code
func (o *PostConversationParticipantCallbacksCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversation participant callbacks created response has a 5xx status code
func (o *PostConversationParticipantCallbacksCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversation participant callbacks created response a status code equal to that given
func (o *PostConversationParticipantCallbacksCreated) IsCode(code int) bool {
	return code == 201
}

func (o *PostConversationParticipantCallbacksCreated) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/participants/{participantId}/callbacks][%d] postConversationParticipantCallbacksCreated ", 201)
}

func (o *PostConversationParticipantCallbacksCreated) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/participants/{participantId}/callbacks][%d] postConversationParticipantCallbacksCreated ", 201)
}

func (o *PostConversationParticipantCallbacksCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostConversationParticipantCallbacksBadRequest creates a PostConversationParticipantCallbacksBadRequest with default headers values
func NewPostConversationParticipantCallbacksBadRequest() *PostConversationParticipantCallbacksBadRequest {
	return &PostConversationParticipantCallbacksBadRequest{}
}

/*
PostConversationParticipantCallbacksBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostConversationParticipantCallbacksBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversation participant callbacks bad request response has a 2xx status code
func (o *PostConversationParticipantCallbacksBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversation participant callbacks bad request response has a 3xx status code
func (o *PostConversationParticipantCallbacksBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversation participant callbacks bad request response has a 4xx status code
func (o *PostConversationParticipantCallbacksBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversation participant callbacks bad request response has a 5xx status code
func (o *PostConversationParticipantCallbacksBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversation participant callbacks bad request response a status code equal to that given
func (o *PostConversationParticipantCallbacksBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostConversationParticipantCallbacksBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/participants/{participantId}/callbacks][%d] postConversationParticipantCallbacksBadRequest  %+v", 400, o.Payload)
}

func (o *PostConversationParticipantCallbacksBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/participants/{participantId}/callbacks][%d] postConversationParticipantCallbacksBadRequest  %+v", 400, o.Payload)
}

func (o *PostConversationParticipantCallbacksBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationParticipantCallbacksBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationParticipantCallbacksUnauthorized creates a PostConversationParticipantCallbacksUnauthorized with default headers values
func NewPostConversationParticipantCallbacksUnauthorized() *PostConversationParticipantCallbacksUnauthorized {
	return &PostConversationParticipantCallbacksUnauthorized{}
}

/*
PostConversationParticipantCallbacksUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostConversationParticipantCallbacksUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversation participant callbacks unauthorized response has a 2xx status code
func (o *PostConversationParticipantCallbacksUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversation participant callbacks unauthorized response has a 3xx status code
func (o *PostConversationParticipantCallbacksUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversation participant callbacks unauthorized response has a 4xx status code
func (o *PostConversationParticipantCallbacksUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversation participant callbacks unauthorized response has a 5xx status code
func (o *PostConversationParticipantCallbacksUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversation participant callbacks unauthorized response a status code equal to that given
func (o *PostConversationParticipantCallbacksUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostConversationParticipantCallbacksUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/participants/{participantId}/callbacks][%d] postConversationParticipantCallbacksUnauthorized  %+v", 401, o.Payload)
}

func (o *PostConversationParticipantCallbacksUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/participants/{participantId}/callbacks][%d] postConversationParticipantCallbacksUnauthorized  %+v", 401, o.Payload)
}

func (o *PostConversationParticipantCallbacksUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationParticipantCallbacksUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationParticipantCallbacksForbidden creates a PostConversationParticipantCallbacksForbidden with default headers values
func NewPostConversationParticipantCallbacksForbidden() *PostConversationParticipantCallbacksForbidden {
	return &PostConversationParticipantCallbacksForbidden{}
}

/*
PostConversationParticipantCallbacksForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostConversationParticipantCallbacksForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversation participant callbacks forbidden response has a 2xx status code
func (o *PostConversationParticipantCallbacksForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversation participant callbacks forbidden response has a 3xx status code
func (o *PostConversationParticipantCallbacksForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversation participant callbacks forbidden response has a 4xx status code
func (o *PostConversationParticipantCallbacksForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversation participant callbacks forbidden response has a 5xx status code
func (o *PostConversationParticipantCallbacksForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversation participant callbacks forbidden response a status code equal to that given
func (o *PostConversationParticipantCallbacksForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostConversationParticipantCallbacksForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/participants/{participantId}/callbacks][%d] postConversationParticipantCallbacksForbidden  %+v", 403, o.Payload)
}

func (o *PostConversationParticipantCallbacksForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/participants/{participantId}/callbacks][%d] postConversationParticipantCallbacksForbidden  %+v", 403, o.Payload)
}

func (o *PostConversationParticipantCallbacksForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationParticipantCallbacksForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationParticipantCallbacksNotFound creates a PostConversationParticipantCallbacksNotFound with default headers values
func NewPostConversationParticipantCallbacksNotFound() *PostConversationParticipantCallbacksNotFound {
	return &PostConversationParticipantCallbacksNotFound{}
}

/*
PostConversationParticipantCallbacksNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostConversationParticipantCallbacksNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversation participant callbacks not found response has a 2xx status code
func (o *PostConversationParticipantCallbacksNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversation participant callbacks not found response has a 3xx status code
func (o *PostConversationParticipantCallbacksNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversation participant callbacks not found response has a 4xx status code
func (o *PostConversationParticipantCallbacksNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversation participant callbacks not found response has a 5xx status code
func (o *PostConversationParticipantCallbacksNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversation participant callbacks not found response a status code equal to that given
func (o *PostConversationParticipantCallbacksNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostConversationParticipantCallbacksNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/participants/{participantId}/callbacks][%d] postConversationParticipantCallbacksNotFound  %+v", 404, o.Payload)
}

func (o *PostConversationParticipantCallbacksNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/participants/{participantId}/callbacks][%d] postConversationParticipantCallbacksNotFound  %+v", 404, o.Payload)
}

func (o *PostConversationParticipantCallbacksNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationParticipantCallbacksNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationParticipantCallbacksRequestTimeout creates a PostConversationParticipantCallbacksRequestTimeout with default headers values
func NewPostConversationParticipantCallbacksRequestTimeout() *PostConversationParticipantCallbacksRequestTimeout {
	return &PostConversationParticipantCallbacksRequestTimeout{}
}

/*
PostConversationParticipantCallbacksRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostConversationParticipantCallbacksRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversation participant callbacks request timeout response has a 2xx status code
func (o *PostConversationParticipantCallbacksRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversation participant callbacks request timeout response has a 3xx status code
func (o *PostConversationParticipantCallbacksRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversation participant callbacks request timeout response has a 4xx status code
func (o *PostConversationParticipantCallbacksRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversation participant callbacks request timeout response has a 5xx status code
func (o *PostConversationParticipantCallbacksRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversation participant callbacks request timeout response a status code equal to that given
func (o *PostConversationParticipantCallbacksRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostConversationParticipantCallbacksRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/participants/{participantId}/callbacks][%d] postConversationParticipantCallbacksRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostConversationParticipantCallbacksRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/participants/{participantId}/callbacks][%d] postConversationParticipantCallbacksRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostConversationParticipantCallbacksRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationParticipantCallbacksRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationParticipantCallbacksRequestEntityTooLarge creates a PostConversationParticipantCallbacksRequestEntityTooLarge with default headers values
func NewPostConversationParticipantCallbacksRequestEntityTooLarge() *PostConversationParticipantCallbacksRequestEntityTooLarge {
	return &PostConversationParticipantCallbacksRequestEntityTooLarge{}
}

/*
PostConversationParticipantCallbacksRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PostConversationParticipantCallbacksRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversation participant callbacks request entity too large response has a 2xx status code
func (o *PostConversationParticipantCallbacksRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversation participant callbacks request entity too large response has a 3xx status code
func (o *PostConversationParticipantCallbacksRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversation participant callbacks request entity too large response has a 4xx status code
func (o *PostConversationParticipantCallbacksRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversation participant callbacks request entity too large response has a 5xx status code
func (o *PostConversationParticipantCallbacksRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversation participant callbacks request entity too large response a status code equal to that given
func (o *PostConversationParticipantCallbacksRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostConversationParticipantCallbacksRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/participants/{participantId}/callbacks][%d] postConversationParticipantCallbacksRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostConversationParticipantCallbacksRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/participants/{participantId}/callbacks][%d] postConversationParticipantCallbacksRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostConversationParticipantCallbacksRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationParticipantCallbacksRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationParticipantCallbacksUnsupportedMediaType creates a PostConversationParticipantCallbacksUnsupportedMediaType with default headers values
func NewPostConversationParticipantCallbacksUnsupportedMediaType() *PostConversationParticipantCallbacksUnsupportedMediaType {
	return &PostConversationParticipantCallbacksUnsupportedMediaType{}
}

/*
PostConversationParticipantCallbacksUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostConversationParticipantCallbacksUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversation participant callbacks unsupported media type response has a 2xx status code
func (o *PostConversationParticipantCallbacksUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversation participant callbacks unsupported media type response has a 3xx status code
func (o *PostConversationParticipantCallbacksUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversation participant callbacks unsupported media type response has a 4xx status code
func (o *PostConversationParticipantCallbacksUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversation participant callbacks unsupported media type response has a 5xx status code
func (o *PostConversationParticipantCallbacksUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversation participant callbacks unsupported media type response a status code equal to that given
func (o *PostConversationParticipantCallbacksUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostConversationParticipantCallbacksUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/participants/{participantId}/callbacks][%d] postConversationParticipantCallbacksUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostConversationParticipantCallbacksUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/participants/{participantId}/callbacks][%d] postConversationParticipantCallbacksUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostConversationParticipantCallbacksUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationParticipantCallbacksUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationParticipantCallbacksTooManyRequests creates a PostConversationParticipantCallbacksTooManyRequests with default headers values
func NewPostConversationParticipantCallbacksTooManyRequests() *PostConversationParticipantCallbacksTooManyRequests {
	return &PostConversationParticipantCallbacksTooManyRequests{}
}

/*
PostConversationParticipantCallbacksTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostConversationParticipantCallbacksTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversation participant callbacks too many requests response has a 2xx status code
func (o *PostConversationParticipantCallbacksTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversation participant callbacks too many requests response has a 3xx status code
func (o *PostConversationParticipantCallbacksTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversation participant callbacks too many requests response has a 4xx status code
func (o *PostConversationParticipantCallbacksTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversation participant callbacks too many requests response has a 5xx status code
func (o *PostConversationParticipantCallbacksTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversation participant callbacks too many requests response a status code equal to that given
func (o *PostConversationParticipantCallbacksTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostConversationParticipantCallbacksTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/participants/{participantId}/callbacks][%d] postConversationParticipantCallbacksTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostConversationParticipantCallbacksTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/participants/{participantId}/callbacks][%d] postConversationParticipantCallbacksTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostConversationParticipantCallbacksTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationParticipantCallbacksTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationParticipantCallbacksInternalServerError creates a PostConversationParticipantCallbacksInternalServerError with default headers values
func NewPostConversationParticipantCallbacksInternalServerError() *PostConversationParticipantCallbacksInternalServerError {
	return &PostConversationParticipantCallbacksInternalServerError{}
}

/*
PostConversationParticipantCallbacksInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostConversationParticipantCallbacksInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversation participant callbacks internal server error response has a 2xx status code
func (o *PostConversationParticipantCallbacksInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversation participant callbacks internal server error response has a 3xx status code
func (o *PostConversationParticipantCallbacksInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversation participant callbacks internal server error response has a 4xx status code
func (o *PostConversationParticipantCallbacksInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversation participant callbacks internal server error response has a 5xx status code
func (o *PostConversationParticipantCallbacksInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversation participant callbacks internal server error response a status code equal to that given
func (o *PostConversationParticipantCallbacksInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostConversationParticipantCallbacksInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/participants/{participantId}/callbacks][%d] postConversationParticipantCallbacksInternalServerError  %+v", 500, o.Payload)
}

func (o *PostConversationParticipantCallbacksInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/participants/{participantId}/callbacks][%d] postConversationParticipantCallbacksInternalServerError  %+v", 500, o.Payload)
}

func (o *PostConversationParticipantCallbacksInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationParticipantCallbacksInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationParticipantCallbacksServiceUnavailable creates a PostConversationParticipantCallbacksServiceUnavailable with default headers values
func NewPostConversationParticipantCallbacksServiceUnavailable() *PostConversationParticipantCallbacksServiceUnavailable {
	return &PostConversationParticipantCallbacksServiceUnavailable{}
}

/*
PostConversationParticipantCallbacksServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostConversationParticipantCallbacksServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversation participant callbacks service unavailable response has a 2xx status code
func (o *PostConversationParticipantCallbacksServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversation participant callbacks service unavailable response has a 3xx status code
func (o *PostConversationParticipantCallbacksServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversation participant callbacks service unavailable response has a 4xx status code
func (o *PostConversationParticipantCallbacksServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversation participant callbacks service unavailable response has a 5xx status code
func (o *PostConversationParticipantCallbacksServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversation participant callbacks service unavailable response a status code equal to that given
func (o *PostConversationParticipantCallbacksServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostConversationParticipantCallbacksServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/participants/{participantId}/callbacks][%d] postConversationParticipantCallbacksServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostConversationParticipantCallbacksServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/participants/{participantId}/callbacks][%d] postConversationParticipantCallbacksServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostConversationParticipantCallbacksServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationParticipantCallbacksServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationParticipantCallbacksGatewayTimeout creates a PostConversationParticipantCallbacksGatewayTimeout with default headers values
func NewPostConversationParticipantCallbacksGatewayTimeout() *PostConversationParticipantCallbacksGatewayTimeout {
	return &PostConversationParticipantCallbacksGatewayTimeout{}
}

/*
PostConversationParticipantCallbacksGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostConversationParticipantCallbacksGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversation participant callbacks gateway timeout response has a 2xx status code
func (o *PostConversationParticipantCallbacksGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversation participant callbacks gateway timeout response has a 3xx status code
func (o *PostConversationParticipantCallbacksGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversation participant callbacks gateway timeout response has a 4xx status code
func (o *PostConversationParticipantCallbacksGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversation participant callbacks gateway timeout response has a 5xx status code
func (o *PostConversationParticipantCallbacksGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversation participant callbacks gateway timeout response a status code equal to that given
func (o *PostConversationParticipantCallbacksGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostConversationParticipantCallbacksGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/participants/{participantId}/callbacks][%d] postConversationParticipantCallbacksGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostConversationParticipantCallbacksGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/participants/{participantId}/callbacks][%d] postConversationParticipantCallbacksGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostConversationParticipantCallbacksGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationParticipantCallbacksGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
