// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutConversationsEmailMessagesDraftReader is a Reader for the PutConversationsEmailMessagesDraft structure.
type PutConversationsEmailMessagesDraftReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutConversationsEmailMessagesDraftReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutConversationsEmailMessagesDraftOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutConversationsEmailMessagesDraftBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutConversationsEmailMessagesDraftUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutConversationsEmailMessagesDraftForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutConversationsEmailMessagesDraftNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutConversationsEmailMessagesDraftRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutConversationsEmailMessagesDraftRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutConversationsEmailMessagesDraftUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutConversationsEmailMessagesDraftTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutConversationsEmailMessagesDraftInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutConversationsEmailMessagesDraftServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutConversationsEmailMessagesDraftGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutConversationsEmailMessagesDraftOK creates a PutConversationsEmailMessagesDraftOK with default headers values
func NewPutConversationsEmailMessagesDraftOK() *PutConversationsEmailMessagesDraftOK {
	return &PutConversationsEmailMessagesDraftOK{}
}

/*PutConversationsEmailMessagesDraftOK handles this case with default header values.

successful operation
*/
type PutConversationsEmailMessagesDraftOK struct {
	Payload *models.EmailMessage
}

func (o *PutConversationsEmailMessagesDraftOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/emails/{conversationId}/messages/draft][%d] putConversationsEmailMessagesDraftOK  %+v", 200, o.Payload)
}

func (o *PutConversationsEmailMessagesDraftOK) GetPayload() *models.EmailMessage {
	return o.Payload
}

func (o *PutConversationsEmailMessagesDraftOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EmailMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsEmailMessagesDraftBadRequest creates a PutConversationsEmailMessagesDraftBadRequest with default headers values
func NewPutConversationsEmailMessagesDraftBadRequest() *PutConversationsEmailMessagesDraftBadRequest {
	return &PutConversationsEmailMessagesDraftBadRequest{}
}

/*PutConversationsEmailMessagesDraftBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutConversationsEmailMessagesDraftBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PutConversationsEmailMessagesDraftBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/emails/{conversationId}/messages/draft][%d] putConversationsEmailMessagesDraftBadRequest  %+v", 400, o.Payload)
}

func (o *PutConversationsEmailMessagesDraftBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsEmailMessagesDraftBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsEmailMessagesDraftUnauthorized creates a PutConversationsEmailMessagesDraftUnauthorized with default headers values
func NewPutConversationsEmailMessagesDraftUnauthorized() *PutConversationsEmailMessagesDraftUnauthorized {
	return &PutConversationsEmailMessagesDraftUnauthorized{}
}

/*PutConversationsEmailMessagesDraftUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PutConversationsEmailMessagesDraftUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PutConversationsEmailMessagesDraftUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/emails/{conversationId}/messages/draft][%d] putConversationsEmailMessagesDraftUnauthorized  %+v", 401, o.Payload)
}

func (o *PutConversationsEmailMessagesDraftUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsEmailMessagesDraftUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsEmailMessagesDraftForbidden creates a PutConversationsEmailMessagesDraftForbidden with default headers values
func NewPutConversationsEmailMessagesDraftForbidden() *PutConversationsEmailMessagesDraftForbidden {
	return &PutConversationsEmailMessagesDraftForbidden{}
}

/*PutConversationsEmailMessagesDraftForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PutConversationsEmailMessagesDraftForbidden struct {
	Payload *models.ErrorBody
}

func (o *PutConversationsEmailMessagesDraftForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/emails/{conversationId}/messages/draft][%d] putConversationsEmailMessagesDraftForbidden  %+v", 403, o.Payload)
}

func (o *PutConversationsEmailMessagesDraftForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsEmailMessagesDraftForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsEmailMessagesDraftNotFound creates a PutConversationsEmailMessagesDraftNotFound with default headers values
func NewPutConversationsEmailMessagesDraftNotFound() *PutConversationsEmailMessagesDraftNotFound {
	return &PutConversationsEmailMessagesDraftNotFound{}
}

/*PutConversationsEmailMessagesDraftNotFound handles this case with default header values.

The requested resource was not found.
*/
type PutConversationsEmailMessagesDraftNotFound struct {
	Payload *models.ErrorBody
}

func (o *PutConversationsEmailMessagesDraftNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/emails/{conversationId}/messages/draft][%d] putConversationsEmailMessagesDraftNotFound  %+v", 404, o.Payload)
}

func (o *PutConversationsEmailMessagesDraftNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsEmailMessagesDraftNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsEmailMessagesDraftRequestTimeout creates a PutConversationsEmailMessagesDraftRequestTimeout with default headers values
func NewPutConversationsEmailMessagesDraftRequestTimeout() *PutConversationsEmailMessagesDraftRequestTimeout {
	return &PutConversationsEmailMessagesDraftRequestTimeout{}
}

/*PutConversationsEmailMessagesDraftRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutConversationsEmailMessagesDraftRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PutConversationsEmailMessagesDraftRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/emails/{conversationId}/messages/draft][%d] putConversationsEmailMessagesDraftRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutConversationsEmailMessagesDraftRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsEmailMessagesDraftRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsEmailMessagesDraftRequestEntityTooLarge creates a PutConversationsEmailMessagesDraftRequestEntityTooLarge with default headers values
func NewPutConversationsEmailMessagesDraftRequestEntityTooLarge() *PutConversationsEmailMessagesDraftRequestEntityTooLarge {
	return &PutConversationsEmailMessagesDraftRequestEntityTooLarge{}
}

/*PutConversationsEmailMessagesDraftRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PutConversationsEmailMessagesDraftRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PutConversationsEmailMessagesDraftRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/emails/{conversationId}/messages/draft][%d] putConversationsEmailMessagesDraftRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutConversationsEmailMessagesDraftRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsEmailMessagesDraftRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsEmailMessagesDraftUnsupportedMediaType creates a PutConversationsEmailMessagesDraftUnsupportedMediaType with default headers values
func NewPutConversationsEmailMessagesDraftUnsupportedMediaType() *PutConversationsEmailMessagesDraftUnsupportedMediaType {
	return &PutConversationsEmailMessagesDraftUnsupportedMediaType{}
}

/*PutConversationsEmailMessagesDraftUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutConversationsEmailMessagesDraftUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PutConversationsEmailMessagesDraftUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/emails/{conversationId}/messages/draft][%d] putConversationsEmailMessagesDraftUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutConversationsEmailMessagesDraftUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsEmailMessagesDraftUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsEmailMessagesDraftTooManyRequests creates a PutConversationsEmailMessagesDraftTooManyRequests with default headers values
func NewPutConversationsEmailMessagesDraftTooManyRequests() *PutConversationsEmailMessagesDraftTooManyRequests {
	return &PutConversationsEmailMessagesDraftTooManyRequests{}
}

/*PutConversationsEmailMessagesDraftTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutConversationsEmailMessagesDraftTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PutConversationsEmailMessagesDraftTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/emails/{conversationId}/messages/draft][%d] putConversationsEmailMessagesDraftTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutConversationsEmailMessagesDraftTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsEmailMessagesDraftTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsEmailMessagesDraftInternalServerError creates a PutConversationsEmailMessagesDraftInternalServerError with default headers values
func NewPutConversationsEmailMessagesDraftInternalServerError() *PutConversationsEmailMessagesDraftInternalServerError {
	return &PutConversationsEmailMessagesDraftInternalServerError{}
}

/*PutConversationsEmailMessagesDraftInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutConversationsEmailMessagesDraftInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PutConversationsEmailMessagesDraftInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/emails/{conversationId}/messages/draft][%d] putConversationsEmailMessagesDraftInternalServerError  %+v", 500, o.Payload)
}

func (o *PutConversationsEmailMessagesDraftInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsEmailMessagesDraftInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsEmailMessagesDraftServiceUnavailable creates a PutConversationsEmailMessagesDraftServiceUnavailable with default headers values
func NewPutConversationsEmailMessagesDraftServiceUnavailable() *PutConversationsEmailMessagesDraftServiceUnavailable {
	return &PutConversationsEmailMessagesDraftServiceUnavailable{}
}

/*PutConversationsEmailMessagesDraftServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutConversationsEmailMessagesDraftServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PutConversationsEmailMessagesDraftServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/emails/{conversationId}/messages/draft][%d] putConversationsEmailMessagesDraftServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutConversationsEmailMessagesDraftServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsEmailMessagesDraftServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsEmailMessagesDraftGatewayTimeout creates a PutConversationsEmailMessagesDraftGatewayTimeout with default headers values
func NewPutConversationsEmailMessagesDraftGatewayTimeout() *PutConversationsEmailMessagesDraftGatewayTimeout {
	return &PutConversationsEmailMessagesDraftGatewayTimeout{}
}

/*PutConversationsEmailMessagesDraftGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PutConversationsEmailMessagesDraftGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PutConversationsEmailMessagesDraftGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/emails/{conversationId}/messages/draft][%d] putConversationsEmailMessagesDraftGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutConversationsEmailMessagesDraftGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsEmailMessagesDraftGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
