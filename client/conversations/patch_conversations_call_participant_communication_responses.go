// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PatchConversationsCallParticipantCommunicationReader is a Reader for the PatchConversationsCallParticipantCommunication structure.
type PatchConversationsCallParticipantCommunicationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchConversationsCallParticipantCommunicationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchConversationsCallParticipantCommunicationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchConversationsCallParticipantCommunicationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPatchConversationsCallParticipantCommunicationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchConversationsCallParticipantCommunicationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchConversationsCallParticipantCommunicationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPatchConversationsCallParticipantCommunicationRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPatchConversationsCallParticipantCommunicationRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPatchConversationsCallParticipantCommunicationUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPatchConversationsCallParticipantCommunicationTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchConversationsCallParticipantCommunicationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPatchConversationsCallParticipantCommunicationServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPatchConversationsCallParticipantCommunicationGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchConversationsCallParticipantCommunicationOK creates a PatchConversationsCallParticipantCommunicationOK with default headers values
func NewPatchConversationsCallParticipantCommunicationOK() *PatchConversationsCallParticipantCommunicationOK {
	return &PatchConversationsCallParticipantCommunicationOK{}
}

/*PatchConversationsCallParticipantCommunicationOK handles this case with default header values.

successful operation
*/
type PatchConversationsCallParticipantCommunicationOK struct {
	Payload models.Empty
}

func (o *PatchConversationsCallParticipantCommunicationOK) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/calls/{conversationId}/participants/{participantId}/communications/{communicationId}][%d] patchConversationsCallParticipantCommunicationOK  %+v", 200, o.Payload)
}

func (o *PatchConversationsCallParticipantCommunicationOK) GetPayload() models.Empty {
	return o.Payload
}

func (o *PatchConversationsCallParticipantCommunicationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsCallParticipantCommunicationBadRequest creates a PatchConversationsCallParticipantCommunicationBadRequest with default headers values
func NewPatchConversationsCallParticipantCommunicationBadRequest() *PatchConversationsCallParticipantCommunicationBadRequest {
	return &PatchConversationsCallParticipantCommunicationBadRequest{}
}

/*PatchConversationsCallParticipantCommunicationBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PatchConversationsCallParticipantCommunicationBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationsCallParticipantCommunicationBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/calls/{conversationId}/participants/{participantId}/communications/{communicationId}][%d] patchConversationsCallParticipantCommunicationBadRequest  %+v", 400, o.Payload)
}

func (o *PatchConversationsCallParticipantCommunicationBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsCallParticipantCommunicationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsCallParticipantCommunicationUnauthorized creates a PatchConversationsCallParticipantCommunicationUnauthorized with default headers values
func NewPatchConversationsCallParticipantCommunicationUnauthorized() *PatchConversationsCallParticipantCommunicationUnauthorized {
	return &PatchConversationsCallParticipantCommunicationUnauthorized{}
}

/*PatchConversationsCallParticipantCommunicationUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PatchConversationsCallParticipantCommunicationUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationsCallParticipantCommunicationUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/calls/{conversationId}/participants/{participantId}/communications/{communicationId}][%d] patchConversationsCallParticipantCommunicationUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchConversationsCallParticipantCommunicationUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsCallParticipantCommunicationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsCallParticipantCommunicationForbidden creates a PatchConversationsCallParticipantCommunicationForbidden with default headers values
func NewPatchConversationsCallParticipantCommunicationForbidden() *PatchConversationsCallParticipantCommunicationForbidden {
	return &PatchConversationsCallParticipantCommunicationForbidden{}
}

/*PatchConversationsCallParticipantCommunicationForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PatchConversationsCallParticipantCommunicationForbidden struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationsCallParticipantCommunicationForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/calls/{conversationId}/participants/{participantId}/communications/{communicationId}][%d] patchConversationsCallParticipantCommunicationForbidden  %+v", 403, o.Payload)
}

func (o *PatchConversationsCallParticipantCommunicationForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsCallParticipantCommunicationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsCallParticipantCommunicationNotFound creates a PatchConversationsCallParticipantCommunicationNotFound with default headers values
func NewPatchConversationsCallParticipantCommunicationNotFound() *PatchConversationsCallParticipantCommunicationNotFound {
	return &PatchConversationsCallParticipantCommunicationNotFound{}
}

/*PatchConversationsCallParticipantCommunicationNotFound handles this case with default header values.

The requested resource was not found.
*/
type PatchConversationsCallParticipantCommunicationNotFound struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationsCallParticipantCommunicationNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/calls/{conversationId}/participants/{participantId}/communications/{communicationId}][%d] patchConversationsCallParticipantCommunicationNotFound  %+v", 404, o.Payload)
}

func (o *PatchConversationsCallParticipantCommunicationNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsCallParticipantCommunicationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsCallParticipantCommunicationRequestTimeout creates a PatchConversationsCallParticipantCommunicationRequestTimeout with default headers values
func NewPatchConversationsCallParticipantCommunicationRequestTimeout() *PatchConversationsCallParticipantCommunicationRequestTimeout {
	return &PatchConversationsCallParticipantCommunicationRequestTimeout{}
}

/*PatchConversationsCallParticipantCommunicationRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PatchConversationsCallParticipantCommunicationRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationsCallParticipantCommunicationRequestTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/calls/{conversationId}/participants/{participantId}/communications/{communicationId}][%d] patchConversationsCallParticipantCommunicationRequestTimeout  %+v", 408, o.Payload)
}

func (o *PatchConversationsCallParticipantCommunicationRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsCallParticipantCommunicationRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsCallParticipantCommunicationRequestEntityTooLarge creates a PatchConversationsCallParticipantCommunicationRequestEntityTooLarge with default headers values
func NewPatchConversationsCallParticipantCommunicationRequestEntityTooLarge() *PatchConversationsCallParticipantCommunicationRequestEntityTooLarge {
	return &PatchConversationsCallParticipantCommunicationRequestEntityTooLarge{}
}

/*PatchConversationsCallParticipantCommunicationRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PatchConversationsCallParticipantCommunicationRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationsCallParticipantCommunicationRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/calls/{conversationId}/participants/{participantId}/communications/{communicationId}][%d] patchConversationsCallParticipantCommunicationRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PatchConversationsCallParticipantCommunicationRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsCallParticipantCommunicationRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsCallParticipantCommunicationUnsupportedMediaType creates a PatchConversationsCallParticipantCommunicationUnsupportedMediaType with default headers values
func NewPatchConversationsCallParticipantCommunicationUnsupportedMediaType() *PatchConversationsCallParticipantCommunicationUnsupportedMediaType {
	return &PatchConversationsCallParticipantCommunicationUnsupportedMediaType{}
}

/*PatchConversationsCallParticipantCommunicationUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PatchConversationsCallParticipantCommunicationUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationsCallParticipantCommunicationUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/calls/{conversationId}/participants/{participantId}/communications/{communicationId}][%d] patchConversationsCallParticipantCommunicationUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchConversationsCallParticipantCommunicationUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsCallParticipantCommunicationUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsCallParticipantCommunicationTooManyRequests creates a PatchConversationsCallParticipantCommunicationTooManyRequests with default headers values
func NewPatchConversationsCallParticipantCommunicationTooManyRequests() *PatchConversationsCallParticipantCommunicationTooManyRequests {
	return &PatchConversationsCallParticipantCommunicationTooManyRequests{}
}

/*PatchConversationsCallParticipantCommunicationTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PatchConversationsCallParticipantCommunicationTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationsCallParticipantCommunicationTooManyRequests) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/calls/{conversationId}/participants/{participantId}/communications/{communicationId}][%d] patchConversationsCallParticipantCommunicationTooManyRequests  %+v", 429, o.Payload)
}

func (o *PatchConversationsCallParticipantCommunicationTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsCallParticipantCommunicationTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsCallParticipantCommunicationInternalServerError creates a PatchConversationsCallParticipantCommunicationInternalServerError with default headers values
func NewPatchConversationsCallParticipantCommunicationInternalServerError() *PatchConversationsCallParticipantCommunicationInternalServerError {
	return &PatchConversationsCallParticipantCommunicationInternalServerError{}
}

/*PatchConversationsCallParticipantCommunicationInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PatchConversationsCallParticipantCommunicationInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationsCallParticipantCommunicationInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/calls/{conversationId}/participants/{participantId}/communications/{communicationId}][%d] patchConversationsCallParticipantCommunicationInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchConversationsCallParticipantCommunicationInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsCallParticipantCommunicationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsCallParticipantCommunicationServiceUnavailable creates a PatchConversationsCallParticipantCommunicationServiceUnavailable with default headers values
func NewPatchConversationsCallParticipantCommunicationServiceUnavailable() *PatchConversationsCallParticipantCommunicationServiceUnavailable {
	return &PatchConversationsCallParticipantCommunicationServiceUnavailable{}
}

/*PatchConversationsCallParticipantCommunicationServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PatchConversationsCallParticipantCommunicationServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationsCallParticipantCommunicationServiceUnavailable) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/calls/{conversationId}/participants/{participantId}/communications/{communicationId}][%d] patchConversationsCallParticipantCommunicationServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PatchConversationsCallParticipantCommunicationServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsCallParticipantCommunicationServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsCallParticipantCommunicationGatewayTimeout creates a PatchConversationsCallParticipantCommunicationGatewayTimeout with default headers values
func NewPatchConversationsCallParticipantCommunicationGatewayTimeout() *PatchConversationsCallParticipantCommunicationGatewayTimeout {
	return &PatchConversationsCallParticipantCommunicationGatewayTimeout{}
}

/*PatchConversationsCallParticipantCommunicationGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PatchConversationsCallParticipantCommunicationGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationsCallParticipantCommunicationGatewayTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/calls/{conversationId}/participants/{participantId}/communications/{communicationId}][%d] patchConversationsCallParticipantCommunicationGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PatchConversationsCallParticipantCommunicationGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsCallParticipantCommunicationGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
