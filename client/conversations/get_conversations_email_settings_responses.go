// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetConversationsEmailSettingsReader is a Reader for the GetConversationsEmailSettings structure.
type GetConversationsEmailSettingsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConversationsEmailSettingsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConversationsEmailSettingsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetConversationsEmailSettingsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetConversationsEmailSettingsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetConversationsEmailSettingsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetConversationsEmailSettingsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetConversationsEmailSettingsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetConversationsEmailSettingsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetConversationsEmailSettingsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetConversationsEmailSettingsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetConversationsEmailSettingsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetConversationsEmailSettingsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetConversationsEmailSettingsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetConversationsEmailSettingsOK creates a GetConversationsEmailSettingsOK with default headers values
func NewGetConversationsEmailSettingsOK() *GetConversationsEmailSettingsOK {
	return &GetConversationsEmailSettingsOK{}
}

/*GetConversationsEmailSettingsOK handles this case with default header values.

successful operation
*/
type GetConversationsEmailSettingsOK struct {
	Payload *models.EmailsSettings
}

func (o *GetConversationsEmailSettingsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/settings][%d] getConversationsEmailSettingsOK  %+v", 200, o.Payload)
}

func (o *GetConversationsEmailSettingsOK) GetPayload() *models.EmailsSettings {
	return o.Payload
}

func (o *GetConversationsEmailSettingsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EmailsSettings)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailSettingsBadRequest creates a GetConversationsEmailSettingsBadRequest with default headers values
func NewGetConversationsEmailSettingsBadRequest() *GetConversationsEmailSettingsBadRequest {
	return &GetConversationsEmailSettingsBadRequest{}
}

/*GetConversationsEmailSettingsBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetConversationsEmailSettingsBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsEmailSettingsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/settings][%d] getConversationsEmailSettingsBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsEmailSettingsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailSettingsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailSettingsUnauthorized creates a GetConversationsEmailSettingsUnauthorized with default headers values
func NewGetConversationsEmailSettingsUnauthorized() *GetConversationsEmailSettingsUnauthorized {
	return &GetConversationsEmailSettingsUnauthorized{}
}

/*GetConversationsEmailSettingsUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetConversationsEmailSettingsUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsEmailSettingsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/settings][%d] getConversationsEmailSettingsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsEmailSettingsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailSettingsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailSettingsForbidden creates a GetConversationsEmailSettingsForbidden with default headers values
func NewGetConversationsEmailSettingsForbidden() *GetConversationsEmailSettingsForbidden {
	return &GetConversationsEmailSettingsForbidden{}
}

/*GetConversationsEmailSettingsForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetConversationsEmailSettingsForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsEmailSettingsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/settings][%d] getConversationsEmailSettingsForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsEmailSettingsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailSettingsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailSettingsNotFound creates a GetConversationsEmailSettingsNotFound with default headers values
func NewGetConversationsEmailSettingsNotFound() *GetConversationsEmailSettingsNotFound {
	return &GetConversationsEmailSettingsNotFound{}
}

/*GetConversationsEmailSettingsNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetConversationsEmailSettingsNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsEmailSettingsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/settings][%d] getConversationsEmailSettingsNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsEmailSettingsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailSettingsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailSettingsRequestTimeout creates a GetConversationsEmailSettingsRequestTimeout with default headers values
func NewGetConversationsEmailSettingsRequestTimeout() *GetConversationsEmailSettingsRequestTimeout {
	return &GetConversationsEmailSettingsRequestTimeout{}
}

/*GetConversationsEmailSettingsRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetConversationsEmailSettingsRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsEmailSettingsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/settings][%d] getConversationsEmailSettingsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationsEmailSettingsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailSettingsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailSettingsRequestEntityTooLarge creates a GetConversationsEmailSettingsRequestEntityTooLarge with default headers values
func NewGetConversationsEmailSettingsRequestEntityTooLarge() *GetConversationsEmailSettingsRequestEntityTooLarge {
	return &GetConversationsEmailSettingsRequestEntityTooLarge{}
}

/*GetConversationsEmailSettingsRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetConversationsEmailSettingsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsEmailSettingsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/settings][%d] getConversationsEmailSettingsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsEmailSettingsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailSettingsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailSettingsUnsupportedMediaType creates a GetConversationsEmailSettingsUnsupportedMediaType with default headers values
func NewGetConversationsEmailSettingsUnsupportedMediaType() *GetConversationsEmailSettingsUnsupportedMediaType {
	return &GetConversationsEmailSettingsUnsupportedMediaType{}
}

/*GetConversationsEmailSettingsUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetConversationsEmailSettingsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsEmailSettingsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/settings][%d] getConversationsEmailSettingsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsEmailSettingsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailSettingsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailSettingsTooManyRequests creates a GetConversationsEmailSettingsTooManyRequests with default headers values
func NewGetConversationsEmailSettingsTooManyRequests() *GetConversationsEmailSettingsTooManyRequests {
	return &GetConversationsEmailSettingsTooManyRequests{}
}

/*GetConversationsEmailSettingsTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetConversationsEmailSettingsTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsEmailSettingsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/settings][%d] getConversationsEmailSettingsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsEmailSettingsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailSettingsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailSettingsInternalServerError creates a GetConversationsEmailSettingsInternalServerError with default headers values
func NewGetConversationsEmailSettingsInternalServerError() *GetConversationsEmailSettingsInternalServerError {
	return &GetConversationsEmailSettingsInternalServerError{}
}

/*GetConversationsEmailSettingsInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetConversationsEmailSettingsInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsEmailSettingsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/settings][%d] getConversationsEmailSettingsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsEmailSettingsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailSettingsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailSettingsServiceUnavailable creates a GetConversationsEmailSettingsServiceUnavailable with default headers values
func NewGetConversationsEmailSettingsServiceUnavailable() *GetConversationsEmailSettingsServiceUnavailable {
	return &GetConversationsEmailSettingsServiceUnavailable{}
}

/*GetConversationsEmailSettingsServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetConversationsEmailSettingsServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsEmailSettingsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/settings][%d] getConversationsEmailSettingsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsEmailSettingsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailSettingsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsEmailSettingsGatewayTimeout creates a GetConversationsEmailSettingsGatewayTimeout with default headers values
func NewGetConversationsEmailSettingsGatewayTimeout() *GetConversationsEmailSettingsGatewayTimeout {
	return &GetConversationsEmailSettingsGatewayTimeout{}
}

/*GetConversationsEmailSettingsGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetConversationsEmailSettingsGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsEmailSettingsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/emails/{conversationId}/settings][%d] getConversationsEmailSettingsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsEmailSettingsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsEmailSettingsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
