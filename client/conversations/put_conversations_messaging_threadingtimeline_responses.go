// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutConversationsMessagingThreadingtimelineReader is a Reader for the PutConversationsMessagingThreadingtimeline structure.
type PutConversationsMessagingThreadingtimelineReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutConversationsMessagingThreadingtimelineReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutConversationsMessagingThreadingtimelineOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutConversationsMessagingThreadingtimelineBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutConversationsMessagingThreadingtimelineUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutConversationsMessagingThreadingtimelineForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutConversationsMessagingThreadingtimelineNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutConversationsMessagingThreadingtimelineRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutConversationsMessagingThreadingtimelineRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutConversationsMessagingThreadingtimelineUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutConversationsMessagingThreadingtimelineTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutConversationsMessagingThreadingtimelineInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutConversationsMessagingThreadingtimelineServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutConversationsMessagingThreadingtimelineGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutConversationsMessagingThreadingtimelineOK creates a PutConversationsMessagingThreadingtimelineOK with default headers values
func NewPutConversationsMessagingThreadingtimelineOK() *PutConversationsMessagingThreadingtimelineOK {
	return &PutConversationsMessagingThreadingtimelineOK{}
}

/*
PutConversationsMessagingThreadingtimelineOK describes a response with status code 200, with default header values.

successful operation
*/
type PutConversationsMessagingThreadingtimelineOK struct {
	Payload *models.ConversationThreadingWindow
}

// IsSuccess returns true when this put conversations messaging threadingtimeline o k response has a 2xx status code
func (o *PutConversationsMessagingThreadingtimelineOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put conversations messaging threadingtimeline o k response has a 3xx status code
func (o *PutConversationsMessagingThreadingtimelineOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversations messaging threadingtimeline o k response has a 4xx status code
func (o *PutConversationsMessagingThreadingtimelineOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put conversations messaging threadingtimeline o k response has a 5xx status code
func (o *PutConversationsMessagingThreadingtimelineOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put conversations messaging threadingtimeline o k response a status code equal to that given
func (o *PutConversationsMessagingThreadingtimelineOK) IsCode(code int) bool {
	return code == 200
}

func (o *PutConversationsMessagingThreadingtimelineOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/messaging/threadingtimeline][%d] putConversationsMessagingThreadingtimelineOK  %+v", 200, o.Payload)
}

func (o *PutConversationsMessagingThreadingtimelineOK) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/messaging/threadingtimeline][%d] putConversationsMessagingThreadingtimelineOK  %+v", 200, o.Payload)
}

func (o *PutConversationsMessagingThreadingtimelineOK) GetPayload() *models.ConversationThreadingWindow {
	return o.Payload
}

func (o *PutConversationsMessagingThreadingtimelineOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConversationThreadingWindow)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsMessagingThreadingtimelineBadRequest creates a PutConversationsMessagingThreadingtimelineBadRequest with default headers values
func NewPutConversationsMessagingThreadingtimelineBadRequest() *PutConversationsMessagingThreadingtimelineBadRequest {
	return &PutConversationsMessagingThreadingtimelineBadRequest{}
}

/*
PutConversationsMessagingThreadingtimelineBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutConversationsMessagingThreadingtimelineBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put conversations messaging threadingtimeline bad request response has a 2xx status code
func (o *PutConversationsMessagingThreadingtimelineBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put conversations messaging threadingtimeline bad request response has a 3xx status code
func (o *PutConversationsMessagingThreadingtimelineBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversations messaging threadingtimeline bad request response has a 4xx status code
func (o *PutConversationsMessagingThreadingtimelineBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put conversations messaging threadingtimeline bad request response has a 5xx status code
func (o *PutConversationsMessagingThreadingtimelineBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put conversations messaging threadingtimeline bad request response a status code equal to that given
func (o *PutConversationsMessagingThreadingtimelineBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PutConversationsMessagingThreadingtimelineBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/messaging/threadingtimeline][%d] putConversationsMessagingThreadingtimelineBadRequest  %+v", 400, o.Payload)
}

func (o *PutConversationsMessagingThreadingtimelineBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/messaging/threadingtimeline][%d] putConversationsMessagingThreadingtimelineBadRequest  %+v", 400, o.Payload)
}

func (o *PutConversationsMessagingThreadingtimelineBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsMessagingThreadingtimelineBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsMessagingThreadingtimelineUnauthorized creates a PutConversationsMessagingThreadingtimelineUnauthorized with default headers values
func NewPutConversationsMessagingThreadingtimelineUnauthorized() *PutConversationsMessagingThreadingtimelineUnauthorized {
	return &PutConversationsMessagingThreadingtimelineUnauthorized{}
}

/*
PutConversationsMessagingThreadingtimelineUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PutConversationsMessagingThreadingtimelineUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put conversations messaging threadingtimeline unauthorized response has a 2xx status code
func (o *PutConversationsMessagingThreadingtimelineUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put conversations messaging threadingtimeline unauthorized response has a 3xx status code
func (o *PutConversationsMessagingThreadingtimelineUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversations messaging threadingtimeline unauthorized response has a 4xx status code
func (o *PutConversationsMessagingThreadingtimelineUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put conversations messaging threadingtimeline unauthorized response has a 5xx status code
func (o *PutConversationsMessagingThreadingtimelineUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put conversations messaging threadingtimeline unauthorized response a status code equal to that given
func (o *PutConversationsMessagingThreadingtimelineUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PutConversationsMessagingThreadingtimelineUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/messaging/threadingtimeline][%d] putConversationsMessagingThreadingtimelineUnauthorized  %+v", 401, o.Payload)
}

func (o *PutConversationsMessagingThreadingtimelineUnauthorized) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/messaging/threadingtimeline][%d] putConversationsMessagingThreadingtimelineUnauthorized  %+v", 401, o.Payload)
}

func (o *PutConversationsMessagingThreadingtimelineUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsMessagingThreadingtimelineUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsMessagingThreadingtimelineForbidden creates a PutConversationsMessagingThreadingtimelineForbidden with default headers values
func NewPutConversationsMessagingThreadingtimelineForbidden() *PutConversationsMessagingThreadingtimelineForbidden {
	return &PutConversationsMessagingThreadingtimelineForbidden{}
}

/*
PutConversationsMessagingThreadingtimelineForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PutConversationsMessagingThreadingtimelineForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put conversations messaging threadingtimeline forbidden response has a 2xx status code
func (o *PutConversationsMessagingThreadingtimelineForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put conversations messaging threadingtimeline forbidden response has a 3xx status code
func (o *PutConversationsMessagingThreadingtimelineForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversations messaging threadingtimeline forbidden response has a 4xx status code
func (o *PutConversationsMessagingThreadingtimelineForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put conversations messaging threadingtimeline forbidden response has a 5xx status code
func (o *PutConversationsMessagingThreadingtimelineForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put conversations messaging threadingtimeline forbidden response a status code equal to that given
func (o *PutConversationsMessagingThreadingtimelineForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PutConversationsMessagingThreadingtimelineForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/messaging/threadingtimeline][%d] putConversationsMessagingThreadingtimelineForbidden  %+v", 403, o.Payload)
}

func (o *PutConversationsMessagingThreadingtimelineForbidden) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/messaging/threadingtimeline][%d] putConversationsMessagingThreadingtimelineForbidden  %+v", 403, o.Payload)
}

func (o *PutConversationsMessagingThreadingtimelineForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsMessagingThreadingtimelineForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsMessagingThreadingtimelineNotFound creates a PutConversationsMessagingThreadingtimelineNotFound with default headers values
func NewPutConversationsMessagingThreadingtimelineNotFound() *PutConversationsMessagingThreadingtimelineNotFound {
	return &PutConversationsMessagingThreadingtimelineNotFound{}
}

/*
PutConversationsMessagingThreadingtimelineNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PutConversationsMessagingThreadingtimelineNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put conversations messaging threadingtimeline not found response has a 2xx status code
func (o *PutConversationsMessagingThreadingtimelineNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put conversations messaging threadingtimeline not found response has a 3xx status code
func (o *PutConversationsMessagingThreadingtimelineNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversations messaging threadingtimeline not found response has a 4xx status code
func (o *PutConversationsMessagingThreadingtimelineNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put conversations messaging threadingtimeline not found response has a 5xx status code
func (o *PutConversationsMessagingThreadingtimelineNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put conversations messaging threadingtimeline not found response a status code equal to that given
func (o *PutConversationsMessagingThreadingtimelineNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PutConversationsMessagingThreadingtimelineNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/messaging/threadingtimeline][%d] putConversationsMessagingThreadingtimelineNotFound  %+v", 404, o.Payload)
}

func (o *PutConversationsMessagingThreadingtimelineNotFound) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/messaging/threadingtimeline][%d] putConversationsMessagingThreadingtimelineNotFound  %+v", 404, o.Payload)
}

func (o *PutConversationsMessagingThreadingtimelineNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsMessagingThreadingtimelineNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsMessagingThreadingtimelineRequestTimeout creates a PutConversationsMessagingThreadingtimelineRequestTimeout with default headers values
func NewPutConversationsMessagingThreadingtimelineRequestTimeout() *PutConversationsMessagingThreadingtimelineRequestTimeout {
	return &PutConversationsMessagingThreadingtimelineRequestTimeout{}
}

/*
PutConversationsMessagingThreadingtimelineRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutConversationsMessagingThreadingtimelineRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put conversations messaging threadingtimeline request timeout response has a 2xx status code
func (o *PutConversationsMessagingThreadingtimelineRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put conversations messaging threadingtimeline request timeout response has a 3xx status code
func (o *PutConversationsMessagingThreadingtimelineRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversations messaging threadingtimeline request timeout response has a 4xx status code
func (o *PutConversationsMessagingThreadingtimelineRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this put conversations messaging threadingtimeline request timeout response has a 5xx status code
func (o *PutConversationsMessagingThreadingtimelineRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this put conversations messaging threadingtimeline request timeout response a status code equal to that given
func (o *PutConversationsMessagingThreadingtimelineRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PutConversationsMessagingThreadingtimelineRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/messaging/threadingtimeline][%d] putConversationsMessagingThreadingtimelineRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutConversationsMessagingThreadingtimelineRequestTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/messaging/threadingtimeline][%d] putConversationsMessagingThreadingtimelineRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutConversationsMessagingThreadingtimelineRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsMessagingThreadingtimelineRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsMessagingThreadingtimelineRequestEntityTooLarge creates a PutConversationsMessagingThreadingtimelineRequestEntityTooLarge with default headers values
func NewPutConversationsMessagingThreadingtimelineRequestEntityTooLarge() *PutConversationsMessagingThreadingtimelineRequestEntityTooLarge {
	return &PutConversationsMessagingThreadingtimelineRequestEntityTooLarge{}
}

/*
PutConversationsMessagingThreadingtimelineRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PutConversationsMessagingThreadingtimelineRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put conversations messaging threadingtimeline request entity too large response has a 2xx status code
func (o *PutConversationsMessagingThreadingtimelineRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put conversations messaging threadingtimeline request entity too large response has a 3xx status code
func (o *PutConversationsMessagingThreadingtimelineRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversations messaging threadingtimeline request entity too large response has a 4xx status code
func (o *PutConversationsMessagingThreadingtimelineRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this put conversations messaging threadingtimeline request entity too large response has a 5xx status code
func (o *PutConversationsMessagingThreadingtimelineRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this put conversations messaging threadingtimeline request entity too large response a status code equal to that given
func (o *PutConversationsMessagingThreadingtimelineRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PutConversationsMessagingThreadingtimelineRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/messaging/threadingtimeline][%d] putConversationsMessagingThreadingtimelineRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutConversationsMessagingThreadingtimelineRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/messaging/threadingtimeline][%d] putConversationsMessagingThreadingtimelineRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutConversationsMessagingThreadingtimelineRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsMessagingThreadingtimelineRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsMessagingThreadingtimelineUnsupportedMediaType creates a PutConversationsMessagingThreadingtimelineUnsupportedMediaType with default headers values
func NewPutConversationsMessagingThreadingtimelineUnsupportedMediaType() *PutConversationsMessagingThreadingtimelineUnsupportedMediaType {
	return &PutConversationsMessagingThreadingtimelineUnsupportedMediaType{}
}

/*
PutConversationsMessagingThreadingtimelineUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutConversationsMessagingThreadingtimelineUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put conversations messaging threadingtimeline unsupported media type response has a 2xx status code
func (o *PutConversationsMessagingThreadingtimelineUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put conversations messaging threadingtimeline unsupported media type response has a 3xx status code
func (o *PutConversationsMessagingThreadingtimelineUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversations messaging threadingtimeline unsupported media type response has a 4xx status code
func (o *PutConversationsMessagingThreadingtimelineUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this put conversations messaging threadingtimeline unsupported media type response has a 5xx status code
func (o *PutConversationsMessagingThreadingtimelineUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this put conversations messaging threadingtimeline unsupported media type response a status code equal to that given
func (o *PutConversationsMessagingThreadingtimelineUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PutConversationsMessagingThreadingtimelineUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/messaging/threadingtimeline][%d] putConversationsMessagingThreadingtimelineUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutConversationsMessagingThreadingtimelineUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/messaging/threadingtimeline][%d] putConversationsMessagingThreadingtimelineUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutConversationsMessagingThreadingtimelineUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsMessagingThreadingtimelineUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsMessagingThreadingtimelineTooManyRequests creates a PutConversationsMessagingThreadingtimelineTooManyRequests with default headers values
func NewPutConversationsMessagingThreadingtimelineTooManyRequests() *PutConversationsMessagingThreadingtimelineTooManyRequests {
	return &PutConversationsMessagingThreadingtimelineTooManyRequests{}
}

/*
PutConversationsMessagingThreadingtimelineTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutConversationsMessagingThreadingtimelineTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put conversations messaging threadingtimeline too many requests response has a 2xx status code
func (o *PutConversationsMessagingThreadingtimelineTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put conversations messaging threadingtimeline too many requests response has a 3xx status code
func (o *PutConversationsMessagingThreadingtimelineTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversations messaging threadingtimeline too many requests response has a 4xx status code
func (o *PutConversationsMessagingThreadingtimelineTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this put conversations messaging threadingtimeline too many requests response has a 5xx status code
func (o *PutConversationsMessagingThreadingtimelineTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this put conversations messaging threadingtimeline too many requests response a status code equal to that given
func (o *PutConversationsMessagingThreadingtimelineTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PutConversationsMessagingThreadingtimelineTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/messaging/threadingtimeline][%d] putConversationsMessagingThreadingtimelineTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutConversationsMessagingThreadingtimelineTooManyRequests) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/messaging/threadingtimeline][%d] putConversationsMessagingThreadingtimelineTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutConversationsMessagingThreadingtimelineTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsMessagingThreadingtimelineTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsMessagingThreadingtimelineInternalServerError creates a PutConversationsMessagingThreadingtimelineInternalServerError with default headers values
func NewPutConversationsMessagingThreadingtimelineInternalServerError() *PutConversationsMessagingThreadingtimelineInternalServerError {
	return &PutConversationsMessagingThreadingtimelineInternalServerError{}
}

/*
PutConversationsMessagingThreadingtimelineInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutConversationsMessagingThreadingtimelineInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put conversations messaging threadingtimeline internal server error response has a 2xx status code
func (o *PutConversationsMessagingThreadingtimelineInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put conversations messaging threadingtimeline internal server error response has a 3xx status code
func (o *PutConversationsMessagingThreadingtimelineInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversations messaging threadingtimeline internal server error response has a 4xx status code
func (o *PutConversationsMessagingThreadingtimelineInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this put conversations messaging threadingtimeline internal server error response has a 5xx status code
func (o *PutConversationsMessagingThreadingtimelineInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this put conversations messaging threadingtimeline internal server error response a status code equal to that given
func (o *PutConversationsMessagingThreadingtimelineInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PutConversationsMessagingThreadingtimelineInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/messaging/threadingtimeline][%d] putConversationsMessagingThreadingtimelineInternalServerError  %+v", 500, o.Payload)
}

func (o *PutConversationsMessagingThreadingtimelineInternalServerError) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/messaging/threadingtimeline][%d] putConversationsMessagingThreadingtimelineInternalServerError  %+v", 500, o.Payload)
}

func (o *PutConversationsMessagingThreadingtimelineInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsMessagingThreadingtimelineInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsMessagingThreadingtimelineServiceUnavailable creates a PutConversationsMessagingThreadingtimelineServiceUnavailable with default headers values
func NewPutConversationsMessagingThreadingtimelineServiceUnavailable() *PutConversationsMessagingThreadingtimelineServiceUnavailable {
	return &PutConversationsMessagingThreadingtimelineServiceUnavailable{}
}

/*
PutConversationsMessagingThreadingtimelineServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutConversationsMessagingThreadingtimelineServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put conversations messaging threadingtimeline service unavailable response has a 2xx status code
func (o *PutConversationsMessagingThreadingtimelineServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put conversations messaging threadingtimeline service unavailable response has a 3xx status code
func (o *PutConversationsMessagingThreadingtimelineServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversations messaging threadingtimeline service unavailable response has a 4xx status code
func (o *PutConversationsMessagingThreadingtimelineServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this put conversations messaging threadingtimeline service unavailable response has a 5xx status code
func (o *PutConversationsMessagingThreadingtimelineServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this put conversations messaging threadingtimeline service unavailable response a status code equal to that given
func (o *PutConversationsMessagingThreadingtimelineServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PutConversationsMessagingThreadingtimelineServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/messaging/threadingtimeline][%d] putConversationsMessagingThreadingtimelineServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutConversationsMessagingThreadingtimelineServiceUnavailable) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/messaging/threadingtimeline][%d] putConversationsMessagingThreadingtimelineServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutConversationsMessagingThreadingtimelineServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsMessagingThreadingtimelineServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsMessagingThreadingtimelineGatewayTimeout creates a PutConversationsMessagingThreadingtimelineGatewayTimeout with default headers values
func NewPutConversationsMessagingThreadingtimelineGatewayTimeout() *PutConversationsMessagingThreadingtimelineGatewayTimeout {
	return &PutConversationsMessagingThreadingtimelineGatewayTimeout{}
}

/*
PutConversationsMessagingThreadingtimelineGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PutConversationsMessagingThreadingtimelineGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put conversations messaging threadingtimeline gateway timeout response has a 2xx status code
func (o *PutConversationsMessagingThreadingtimelineGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put conversations messaging threadingtimeline gateway timeout response has a 3xx status code
func (o *PutConversationsMessagingThreadingtimelineGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put conversations messaging threadingtimeline gateway timeout response has a 4xx status code
func (o *PutConversationsMessagingThreadingtimelineGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this put conversations messaging threadingtimeline gateway timeout response has a 5xx status code
func (o *PutConversationsMessagingThreadingtimelineGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this put conversations messaging threadingtimeline gateway timeout response a status code equal to that given
func (o *PutConversationsMessagingThreadingtimelineGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PutConversationsMessagingThreadingtimelineGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/messaging/threadingtimeline][%d] putConversationsMessagingThreadingtimelineGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutConversationsMessagingThreadingtimelineGatewayTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/messaging/threadingtimeline][%d] putConversationsMessagingThreadingtimelineGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutConversationsMessagingThreadingtimelineGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsMessagingThreadingtimelineGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
