// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetConversationsCallbackParticipantWrapupReader is a Reader for the GetConversationsCallbackParticipantWrapup structure.
type GetConversationsCallbackParticipantWrapupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConversationsCallbackParticipantWrapupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConversationsCallbackParticipantWrapupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetConversationsCallbackParticipantWrapupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetConversationsCallbackParticipantWrapupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetConversationsCallbackParticipantWrapupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetConversationsCallbackParticipantWrapupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetConversationsCallbackParticipantWrapupRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetConversationsCallbackParticipantWrapupUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetConversationsCallbackParticipantWrapupTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetConversationsCallbackParticipantWrapupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetConversationsCallbackParticipantWrapupServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetConversationsCallbackParticipantWrapupGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetConversationsCallbackParticipantWrapupOK creates a GetConversationsCallbackParticipantWrapupOK with default headers values
func NewGetConversationsCallbackParticipantWrapupOK() *GetConversationsCallbackParticipantWrapupOK {
	return &GetConversationsCallbackParticipantWrapupOK{}
}

/*GetConversationsCallbackParticipantWrapupOK handles this case with default header values.

successful operation
*/
type GetConversationsCallbackParticipantWrapupOK struct {
	Payload *models.AssignedWrapupCode
}

func (o *GetConversationsCallbackParticipantWrapupOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsCallbackParticipantWrapupOK  %+v", 200, o.Payload)
}

func (o *GetConversationsCallbackParticipantWrapupOK) GetPayload() *models.AssignedWrapupCode {
	return o.Payload
}

func (o *GetConversationsCallbackParticipantWrapupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AssignedWrapupCode)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCallbackParticipantWrapupBadRequest creates a GetConversationsCallbackParticipantWrapupBadRequest with default headers values
func NewGetConversationsCallbackParticipantWrapupBadRequest() *GetConversationsCallbackParticipantWrapupBadRequest {
	return &GetConversationsCallbackParticipantWrapupBadRequest{}
}

/*GetConversationsCallbackParticipantWrapupBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetConversationsCallbackParticipantWrapupBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsCallbackParticipantWrapupBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsCallbackParticipantWrapupBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsCallbackParticipantWrapupBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCallbackParticipantWrapupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCallbackParticipantWrapupUnauthorized creates a GetConversationsCallbackParticipantWrapupUnauthorized with default headers values
func NewGetConversationsCallbackParticipantWrapupUnauthorized() *GetConversationsCallbackParticipantWrapupUnauthorized {
	return &GetConversationsCallbackParticipantWrapupUnauthorized{}
}

/*GetConversationsCallbackParticipantWrapupUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetConversationsCallbackParticipantWrapupUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsCallbackParticipantWrapupUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsCallbackParticipantWrapupUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsCallbackParticipantWrapupUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCallbackParticipantWrapupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCallbackParticipantWrapupForbidden creates a GetConversationsCallbackParticipantWrapupForbidden with default headers values
func NewGetConversationsCallbackParticipantWrapupForbidden() *GetConversationsCallbackParticipantWrapupForbidden {
	return &GetConversationsCallbackParticipantWrapupForbidden{}
}

/*GetConversationsCallbackParticipantWrapupForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetConversationsCallbackParticipantWrapupForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsCallbackParticipantWrapupForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsCallbackParticipantWrapupForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsCallbackParticipantWrapupForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCallbackParticipantWrapupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCallbackParticipantWrapupNotFound creates a GetConversationsCallbackParticipantWrapupNotFound with default headers values
func NewGetConversationsCallbackParticipantWrapupNotFound() *GetConversationsCallbackParticipantWrapupNotFound {
	return &GetConversationsCallbackParticipantWrapupNotFound{}
}

/*GetConversationsCallbackParticipantWrapupNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetConversationsCallbackParticipantWrapupNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsCallbackParticipantWrapupNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsCallbackParticipantWrapupNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsCallbackParticipantWrapupNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCallbackParticipantWrapupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCallbackParticipantWrapupRequestEntityTooLarge creates a GetConversationsCallbackParticipantWrapupRequestEntityTooLarge with default headers values
func NewGetConversationsCallbackParticipantWrapupRequestEntityTooLarge() *GetConversationsCallbackParticipantWrapupRequestEntityTooLarge {
	return &GetConversationsCallbackParticipantWrapupRequestEntityTooLarge{}
}

/*GetConversationsCallbackParticipantWrapupRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetConversationsCallbackParticipantWrapupRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsCallbackParticipantWrapupRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsCallbackParticipantWrapupRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsCallbackParticipantWrapupRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCallbackParticipantWrapupRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCallbackParticipantWrapupUnsupportedMediaType creates a GetConversationsCallbackParticipantWrapupUnsupportedMediaType with default headers values
func NewGetConversationsCallbackParticipantWrapupUnsupportedMediaType() *GetConversationsCallbackParticipantWrapupUnsupportedMediaType {
	return &GetConversationsCallbackParticipantWrapupUnsupportedMediaType{}
}

/*GetConversationsCallbackParticipantWrapupUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetConversationsCallbackParticipantWrapupUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsCallbackParticipantWrapupUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsCallbackParticipantWrapupUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsCallbackParticipantWrapupUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCallbackParticipantWrapupUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCallbackParticipantWrapupTooManyRequests creates a GetConversationsCallbackParticipantWrapupTooManyRequests with default headers values
func NewGetConversationsCallbackParticipantWrapupTooManyRequests() *GetConversationsCallbackParticipantWrapupTooManyRequests {
	return &GetConversationsCallbackParticipantWrapupTooManyRequests{}
}

/*GetConversationsCallbackParticipantWrapupTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type GetConversationsCallbackParticipantWrapupTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsCallbackParticipantWrapupTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsCallbackParticipantWrapupTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsCallbackParticipantWrapupTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCallbackParticipantWrapupTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCallbackParticipantWrapupInternalServerError creates a GetConversationsCallbackParticipantWrapupInternalServerError with default headers values
func NewGetConversationsCallbackParticipantWrapupInternalServerError() *GetConversationsCallbackParticipantWrapupInternalServerError {
	return &GetConversationsCallbackParticipantWrapupInternalServerError{}
}

/*GetConversationsCallbackParticipantWrapupInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetConversationsCallbackParticipantWrapupInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsCallbackParticipantWrapupInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsCallbackParticipantWrapupInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsCallbackParticipantWrapupInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCallbackParticipantWrapupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCallbackParticipantWrapupServiceUnavailable creates a GetConversationsCallbackParticipantWrapupServiceUnavailable with default headers values
func NewGetConversationsCallbackParticipantWrapupServiceUnavailable() *GetConversationsCallbackParticipantWrapupServiceUnavailable {
	return &GetConversationsCallbackParticipantWrapupServiceUnavailable{}
}

/*GetConversationsCallbackParticipantWrapupServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetConversationsCallbackParticipantWrapupServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsCallbackParticipantWrapupServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsCallbackParticipantWrapupServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsCallbackParticipantWrapupServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCallbackParticipantWrapupServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsCallbackParticipantWrapupGatewayTimeout creates a GetConversationsCallbackParticipantWrapupGatewayTimeout with default headers values
func NewGetConversationsCallbackParticipantWrapupGatewayTimeout() *GetConversationsCallbackParticipantWrapupGatewayTimeout {
	return &GetConversationsCallbackParticipantWrapupGatewayTimeout{}
}

/*GetConversationsCallbackParticipantWrapupGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetConversationsCallbackParticipantWrapupGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetConversationsCallbackParticipantWrapupGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/wrapup][%d] getConversationsCallbackParticipantWrapupGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsCallbackParticipantWrapupGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsCallbackParticipantWrapupGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
