// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutConversationsSocialRecordingstateReader is a Reader for the PutConversationsSocialRecordingstate structure.
type PutConversationsSocialRecordingstateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutConversationsSocialRecordingstateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutConversationsSocialRecordingstateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewPutConversationsSocialRecordingstateAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutConversationsSocialRecordingstateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutConversationsSocialRecordingstateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutConversationsSocialRecordingstateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutConversationsSocialRecordingstateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutConversationsSocialRecordingstateRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutConversationsSocialRecordingstateRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutConversationsSocialRecordingstateUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutConversationsSocialRecordingstateTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutConversationsSocialRecordingstateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutConversationsSocialRecordingstateServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutConversationsSocialRecordingstateGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutConversationsSocialRecordingstateOK creates a PutConversationsSocialRecordingstateOK with default headers values
func NewPutConversationsSocialRecordingstateOK() *PutConversationsSocialRecordingstateOK {
	return &PutConversationsSocialRecordingstateOK{}
}

/*PutConversationsSocialRecordingstateOK handles this case with default header values.

successful operation
*/
type PutConversationsSocialRecordingstateOK struct {
	Payload string
}

func (o *PutConversationsSocialRecordingstateOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/socials/{conversationId}/recordingstate][%d] putConversationsSocialRecordingstateOK  %+v", 200, o.Payload)
}

func (o *PutConversationsSocialRecordingstateOK) GetPayload() string {
	return o.Payload
}

func (o *PutConversationsSocialRecordingstateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsSocialRecordingstateAccepted creates a PutConversationsSocialRecordingstateAccepted with default headers values
func NewPutConversationsSocialRecordingstateAccepted() *PutConversationsSocialRecordingstateAccepted {
	return &PutConversationsSocialRecordingstateAccepted{}
}

/*PutConversationsSocialRecordingstateAccepted handles this case with default header values.

Accepted - when pausing or resuming recordings (Secure Pause)
*/
type PutConversationsSocialRecordingstateAccepted struct {
	Payload string
}

func (o *PutConversationsSocialRecordingstateAccepted) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/socials/{conversationId}/recordingstate][%d] putConversationsSocialRecordingstateAccepted  %+v", 202, o.Payload)
}

func (o *PutConversationsSocialRecordingstateAccepted) GetPayload() string {
	return o.Payload
}

func (o *PutConversationsSocialRecordingstateAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsSocialRecordingstateBadRequest creates a PutConversationsSocialRecordingstateBadRequest with default headers values
func NewPutConversationsSocialRecordingstateBadRequest() *PutConversationsSocialRecordingstateBadRequest {
	return &PutConversationsSocialRecordingstateBadRequest{}
}

/*PutConversationsSocialRecordingstateBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutConversationsSocialRecordingstateBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PutConversationsSocialRecordingstateBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/socials/{conversationId}/recordingstate][%d] putConversationsSocialRecordingstateBadRequest  %+v", 400, o.Payload)
}

func (o *PutConversationsSocialRecordingstateBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsSocialRecordingstateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsSocialRecordingstateUnauthorized creates a PutConversationsSocialRecordingstateUnauthorized with default headers values
func NewPutConversationsSocialRecordingstateUnauthorized() *PutConversationsSocialRecordingstateUnauthorized {
	return &PutConversationsSocialRecordingstateUnauthorized{}
}

/*PutConversationsSocialRecordingstateUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PutConversationsSocialRecordingstateUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PutConversationsSocialRecordingstateUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/socials/{conversationId}/recordingstate][%d] putConversationsSocialRecordingstateUnauthorized  %+v", 401, o.Payload)
}

func (o *PutConversationsSocialRecordingstateUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsSocialRecordingstateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsSocialRecordingstateForbidden creates a PutConversationsSocialRecordingstateForbidden with default headers values
func NewPutConversationsSocialRecordingstateForbidden() *PutConversationsSocialRecordingstateForbidden {
	return &PutConversationsSocialRecordingstateForbidden{}
}

/*PutConversationsSocialRecordingstateForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PutConversationsSocialRecordingstateForbidden struct {
	Payload *models.ErrorBody
}

func (o *PutConversationsSocialRecordingstateForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/socials/{conversationId}/recordingstate][%d] putConversationsSocialRecordingstateForbidden  %+v", 403, o.Payload)
}

func (o *PutConversationsSocialRecordingstateForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsSocialRecordingstateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsSocialRecordingstateNotFound creates a PutConversationsSocialRecordingstateNotFound with default headers values
func NewPutConversationsSocialRecordingstateNotFound() *PutConversationsSocialRecordingstateNotFound {
	return &PutConversationsSocialRecordingstateNotFound{}
}

/*PutConversationsSocialRecordingstateNotFound handles this case with default header values.

The requested resource was not found.
*/
type PutConversationsSocialRecordingstateNotFound struct {
	Payload *models.ErrorBody
}

func (o *PutConversationsSocialRecordingstateNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/socials/{conversationId}/recordingstate][%d] putConversationsSocialRecordingstateNotFound  %+v", 404, o.Payload)
}

func (o *PutConversationsSocialRecordingstateNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsSocialRecordingstateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsSocialRecordingstateRequestTimeout creates a PutConversationsSocialRecordingstateRequestTimeout with default headers values
func NewPutConversationsSocialRecordingstateRequestTimeout() *PutConversationsSocialRecordingstateRequestTimeout {
	return &PutConversationsSocialRecordingstateRequestTimeout{}
}

/*PutConversationsSocialRecordingstateRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutConversationsSocialRecordingstateRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PutConversationsSocialRecordingstateRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/socials/{conversationId}/recordingstate][%d] putConversationsSocialRecordingstateRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutConversationsSocialRecordingstateRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsSocialRecordingstateRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsSocialRecordingstateRequestEntityTooLarge creates a PutConversationsSocialRecordingstateRequestEntityTooLarge with default headers values
func NewPutConversationsSocialRecordingstateRequestEntityTooLarge() *PutConversationsSocialRecordingstateRequestEntityTooLarge {
	return &PutConversationsSocialRecordingstateRequestEntityTooLarge{}
}

/*PutConversationsSocialRecordingstateRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PutConversationsSocialRecordingstateRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PutConversationsSocialRecordingstateRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/socials/{conversationId}/recordingstate][%d] putConversationsSocialRecordingstateRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutConversationsSocialRecordingstateRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsSocialRecordingstateRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsSocialRecordingstateUnsupportedMediaType creates a PutConversationsSocialRecordingstateUnsupportedMediaType with default headers values
func NewPutConversationsSocialRecordingstateUnsupportedMediaType() *PutConversationsSocialRecordingstateUnsupportedMediaType {
	return &PutConversationsSocialRecordingstateUnsupportedMediaType{}
}

/*PutConversationsSocialRecordingstateUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutConversationsSocialRecordingstateUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PutConversationsSocialRecordingstateUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/socials/{conversationId}/recordingstate][%d] putConversationsSocialRecordingstateUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutConversationsSocialRecordingstateUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsSocialRecordingstateUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsSocialRecordingstateTooManyRequests creates a PutConversationsSocialRecordingstateTooManyRequests with default headers values
func NewPutConversationsSocialRecordingstateTooManyRequests() *PutConversationsSocialRecordingstateTooManyRequests {
	return &PutConversationsSocialRecordingstateTooManyRequests{}
}

/*PutConversationsSocialRecordingstateTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutConversationsSocialRecordingstateTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PutConversationsSocialRecordingstateTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/socials/{conversationId}/recordingstate][%d] putConversationsSocialRecordingstateTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutConversationsSocialRecordingstateTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsSocialRecordingstateTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsSocialRecordingstateInternalServerError creates a PutConversationsSocialRecordingstateInternalServerError with default headers values
func NewPutConversationsSocialRecordingstateInternalServerError() *PutConversationsSocialRecordingstateInternalServerError {
	return &PutConversationsSocialRecordingstateInternalServerError{}
}

/*PutConversationsSocialRecordingstateInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutConversationsSocialRecordingstateInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PutConversationsSocialRecordingstateInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/socials/{conversationId}/recordingstate][%d] putConversationsSocialRecordingstateInternalServerError  %+v", 500, o.Payload)
}

func (o *PutConversationsSocialRecordingstateInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsSocialRecordingstateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsSocialRecordingstateServiceUnavailable creates a PutConversationsSocialRecordingstateServiceUnavailable with default headers values
func NewPutConversationsSocialRecordingstateServiceUnavailable() *PutConversationsSocialRecordingstateServiceUnavailable {
	return &PutConversationsSocialRecordingstateServiceUnavailable{}
}

/*PutConversationsSocialRecordingstateServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutConversationsSocialRecordingstateServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PutConversationsSocialRecordingstateServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/socials/{conversationId}/recordingstate][%d] putConversationsSocialRecordingstateServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutConversationsSocialRecordingstateServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsSocialRecordingstateServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConversationsSocialRecordingstateGatewayTimeout creates a PutConversationsSocialRecordingstateGatewayTimeout with default headers values
func NewPutConversationsSocialRecordingstateGatewayTimeout() *PutConversationsSocialRecordingstateGatewayTimeout {
	return &PutConversationsSocialRecordingstateGatewayTimeout{}
}

/*PutConversationsSocialRecordingstateGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PutConversationsSocialRecordingstateGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PutConversationsSocialRecordingstateGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/conversations/socials/{conversationId}/recordingstate][%d] putConversationsSocialRecordingstateGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutConversationsSocialRecordingstateGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutConversationsSocialRecordingstateGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
