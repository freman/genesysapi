// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostConversationsMessageParticipantCommunicationWrapupReader is a Reader for the PostConversationsMessageParticipantCommunicationWrapup structure.
type PostConversationsMessageParticipantCommunicationWrapupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostConversationsMessageParticipantCommunicationWrapupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewPostConversationsMessageParticipantCommunicationWrapupAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostConversationsMessageParticipantCommunicationWrapupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostConversationsMessageParticipantCommunicationWrapupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostConversationsMessageParticipantCommunicationWrapupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostConversationsMessageParticipantCommunicationWrapupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostConversationsMessageParticipantCommunicationWrapupRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostConversationsMessageParticipantCommunicationWrapupRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostConversationsMessageParticipantCommunicationWrapupUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostConversationsMessageParticipantCommunicationWrapupTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostConversationsMessageParticipantCommunicationWrapupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostConversationsMessageParticipantCommunicationWrapupServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostConversationsMessageParticipantCommunicationWrapupGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostConversationsMessageParticipantCommunicationWrapupAccepted creates a PostConversationsMessageParticipantCommunicationWrapupAccepted with default headers values
func NewPostConversationsMessageParticipantCommunicationWrapupAccepted() *PostConversationsMessageParticipantCommunicationWrapupAccepted {
	return &PostConversationsMessageParticipantCommunicationWrapupAccepted{}
}

/*
PostConversationsMessageParticipantCommunicationWrapupAccepted describes a response with status code 202, with default header values.

Accepted
*/
type PostConversationsMessageParticipantCommunicationWrapupAccepted struct {
}

// IsSuccess returns true when this post conversations message participant communication wrapup accepted response has a 2xx status code
func (o *PostConversationsMessageParticipantCommunicationWrapupAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post conversations message participant communication wrapup accepted response has a 3xx status code
func (o *PostConversationsMessageParticipantCommunicationWrapupAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations message participant communication wrapup accepted response has a 4xx status code
func (o *PostConversationsMessageParticipantCommunicationWrapupAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations message participant communication wrapup accepted response has a 5xx status code
func (o *PostConversationsMessageParticipantCommunicationWrapupAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations message participant communication wrapup accepted response a status code equal to that given
func (o *PostConversationsMessageParticipantCommunicationWrapupAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *PostConversationsMessageParticipantCommunicationWrapupAccepted) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsMessageParticipantCommunicationWrapupAccepted ", 202)
}

func (o *PostConversationsMessageParticipantCommunicationWrapupAccepted) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsMessageParticipantCommunicationWrapupAccepted ", 202)
}

func (o *PostConversationsMessageParticipantCommunicationWrapupAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostConversationsMessageParticipantCommunicationWrapupBadRequest creates a PostConversationsMessageParticipantCommunicationWrapupBadRequest with default headers values
func NewPostConversationsMessageParticipantCommunicationWrapupBadRequest() *PostConversationsMessageParticipantCommunicationWrapupBadRequest {
	return &PostConversationsMessageParticipantCommunicationWrapupBadRequest{}
}

/*
PostConversationsMessageParticipantCommunicationWrapupBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostConversationsMessageParticipantCommunicationWrapupBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations message participant communication wrapup bad request response has a 2xx status code
func (o *PostConversationsMessageParticipantCommunicationWrapupBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations message participant communication wrapup bad request response has a 3xx status code
func (o *PostConversationsMessageParticipantCommunicationWrapupBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations message participant communication wrapup bad request response has a 4xx status code
func (o *PostConversationsMessageParticipantCommunicationWrapupBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations message participant communication wrapup bad request response has a 5xx status code
func (o *PostConversationsMessageParticipantCommunicationWrapupBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations message participant communication wrapup bad request response a status code equal to that given
func (o *PostConversationsMessageParticipantCommunicationWrapupBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostConversationsMessageParticipantCommunicationWrapupBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsMessageParticipantCommunicationWrapupBadRequest  %+v", 400, o.Payload)
}

func (o *PostConversationsMessageParticipantCommunicationWrapupBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsMessageParticipantCommunicationWrapupBadRequest  %+v", 400, o.Payload)
}

func (o *PostConversationsMessageParticipantCommunicationWrapupBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsMessageParticipantCommunicationWrapupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsMessageParticipantCommunicationWrapupUnauthorized creates a PostConversationsMessageParticipantCommunicationWrapupUnauthorized with default headers values
func NewPostConversationsMessageParticipantCommunicationWrapupUnauthorized() *PostConversationsMessageParticipantCommunicationWrapupUnauthorized {
	return &PostConversationsMessageParticipantCommunicationWrapupUnauthorized{}
}

/*
PostConversationsMessageParticipantCommunicationWrapupUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostConversationsMessageParticipantCommunicationWrapupUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations message participant communication wrapup unauthorized response has a 2xx status code
func (o *PostConversationsMessageParticipantCommunicationWrapupUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations message participant communication wrapup unauthorized response has a 3xx status code
func (o *PostConversationsMessageParticipantCommunicationWrapupUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations message participant communication wrapup unauthorized response has a 4xx status code
func (o *PostConversationsMessageParticipantCommunicationWrapupUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations message participant communication wrapup unauthorized response has a 5xx status code
func (o *PostConversationsMessageParticipantCommunicationWrapupUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations message participant communication wrapup unauthorized response a status code equal to that given
func (o *PostConversationsMessageParticipantCommunicationWrapupUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostConversationsMessageParticipantCommunicationWrapupUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsMessageParticipantCommunicationWrapupUnauthorized  %+v", 401, o.Payload)
}

func (o *PostConversationsMessageParticipantCommunicationWrapupUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsMessageParticipantCommunicationWrapupUnauthorized  %+v", 401, o.Payload)
}

func (o *PostConversationsMessageParticipantCommunicationWrapupUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsMessageParticipantCommunicationWrapupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsMessageParticipantCommunicationWrapupForbidden creates a PostConversationsMessageParticipantCommunicationWrapupForbidden with default headers values
func NewPostConversationsMessageParticipantCommunicationWrapupForbidden() *PostConversationsMessageParticipantCommunicationWrapupForbidden {
	return &PostConversationsMessageParticipantCommunicationWrapupForbidden{}
}

/*
PostConversationsMessageParticipantCommunicationWrapupForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostConversationsMessageParticipantCommunicationWrapupForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations message participant communication wrapup forbidden response has a 2xx status code
func (o *PostConversationsMessageParticipantCommunicationWrapupForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations message participant communication wrapup forbidden response has a 3xx status code
func (o *PostConversationsMessageParticipantCommunicationWrapupForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations message participant communication wrapup forbidden response has a 4xx status code
func (o *PostConversationsMessageParticipantCommunicationWrapupForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations message participant communication wrapup forbidden response has a 5xx status code
func (o *PostConversationsMessageParticipantCommunicationWrapupForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations message participant communication wrapup forbidden response a status code equal to that given
func (o *PostConversationsMessageParticipantCommunicationWrapupForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostConversationsMessageParticipantCommunicationWrapupForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsMessageParticipantCommunicationWrapupForbidden  %+v", 403, o.Payload)
}

func (o *PostConversationsMessageParticipantCommunicationWrapupForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsMessageParticipantCommunicationWrapupForbidden  %+v", 403, o.Payload)
}

func (o *PostConversationsMessageParticipantCommunicationWrapupForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsMessageParticipantCommunicationWrapupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsMessageParticipantCommunicationWrapupNotFound creates a PostConversationsMessageParticipantCommunicationWrapupNotFound with default headers values
func NewPostConversationsMessageParticipantCommunicationWrapupNotFound() *PostConversationsMessageParticipantCommunicationWrapupNotFound {
	return &PostConversationsMessageParticipantCommunicationWrapupNotFound{}
}

/*
PostConversationsMessageParticipantCommunicationWrapupNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostConversationsMessageParticipantCommunicationWrapupNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations message participant communication wrapup not found response has a 2xx status code
func (o *PostConversationsMessageParticipantCommunicationWrapupNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations message participant communication wrapup not found response has a 3xx status code
func (o *PostConversationsMessageParticipantCommunicationWrapupNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations message participant communication wrapup not found response has a 4xx status code
func (o *PostConversationsMessageParticipantCommunicationWrapupNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations message participant communication wrapup not found response has a 5xx status code
func (o *PostConversationsMessageParticipantCommunicationWrapupNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations message participant communication wrapup not found response a status code equal to that given
func (o *PostConversationsMessageParticipantCommunicationWrapupNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostConversationsMessageParticipantCommunicationWrapupNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsMessageParticipantCommunicationWrapupNotFound  %+v", 404, o.Payload)
}

func (o *PostConversationsMessageParticipantCommunicationWrapupNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsMessageParticipantCommunicationWrapupNotFound  %+v", 404, o.Payload)
}

func (o *PostConversationsMessageParticipantCommunicationWrapupNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsMessageParticipantCommunicationWrapupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsMessageParticipantCommunicationWrapupRequestTimeout creates a PostConversationsMessageParticipantCommunicationWrapupRequestTimeout with default headers values
func NewPostConversationsMessageParticipantCommunicationWrapupRequestTimeout() *PostConversationsMessageParticipantCommunicationWrapupRequestTimeout {
	return &PostConversationsMessageParticipantCommunicationWrapupRequestTimeout{}
}

/*
PostConversationsMessageParticipantCommunicationWrapupRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostConversationsMessageParticipantCommunicationWrapupRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations message participant communication wrapup request timeout response has a 2xx status code
func (o *PostConversationsMessageParticipantCommunicationWrapupRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations message participant communication wrapup request timeout response has a 3xx status code
func (o *PostConversationsMessageParticipantCommunicationWrapupRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations message participant communication wrapup request timeout response has a 4xx status code
func (o *PostConversationsMessageParticipantCommunicationWrapupRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations message participant communication wrapup request timeout response has a 5xx status code
func (o *PostConversationsMessageParticipantCommunicationWrapupRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations message participant communication wrapup request timeout response a status code equal to that given
func (o *PostConversationsMessageParticipantCommunicationWrapupRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostConversationsMessageParticipantCommunicationWrapupRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsMessageParticipantCommunicationWrapupRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostConversationsMessageParticipantCommunicationWrapupRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsMessageParticipantCommunicationWrapupRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostConversationsMessageParticipantCommunicationWrapupRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsMessageParticipantCommunicationWrapupRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsMessageParticipantCommunicationWrapupRequestEntityTooLarge creates a PostConversationsMessageParticipantCommunicationWrapupRequestEntityTooLarge with default headers values
func NewPostConversationsMessageParticipantCommunicationWrapupRequestEntityTooLarge() *PostConversationsMessageParticipantCommunicationWrapupRequestEntityTooLarge {
	return &PostConversationsMessageParticipantCommunicationWrapupRequestEntityTooLarge{}
}

/*
PostConversationsMessageParticipantCommunicationWrapupRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PostConversationsMessageParticipantCommunicationWrapupRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations message participant communication wrapup request entity too large response has a 2xx status code
func (o *PostConversationsMessageParticipantCommunicationWrapupRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations message participant communication wrapup request entity too large response has a 3xx status code
func (o *PostConversationsMessageParticipantCommunicationWrapupRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations message participant communication wrapup request entity too large response has a 4xx status code
func (o *PostConversationsMessageParticipantCommunicationWrapupRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations message participant communication wrapup request entity too large response has a 5xx status code
func (o *PostConversationsMessageParticipantCommunicationWrapupRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations message participant communication wrapup request entity too large response a status code equal to that given
func (o *PostConversationsMessageParticipantCommunicationWrapupRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostConversationsMessageParticipantCommunicationWrapupRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsMessageParticipantCommunicationWrapupRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostConversationsMessageParticipantCommunicationWrapupRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsMessageParticipantCommunicationWrapupRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostConversationsMessageParticipantCommunicationWrapupRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsMessageParticipantCommunicationWrapupRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsMessageParticipantCommunicationWrapupUnsupportedMediaType creates a PostConversationsMessageParticipantCommunicationWrapupUnsupportedMediaType with default headers values
func NewPostConversationsMessageParticipantCommunicationWrapupUnsupportedMediaType() *PostConversationsMessageParticipantCommunicationWrapupUnsupportedMediaType {
	return &PostConversationsMessageParticipantCommunicationWrapupUnsupportedMediaType{}
}

/*
PostConversationsMessageParticipantCommunicationWrapupUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostConversationsMessageParticipantCommunicationWrapupUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations message participant communication wrapup unsupported media type response has a 2xx status code
func (o *PostConversationsMessageParticipantCommunicationWrapupUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations message participant communication wrapup unsupported media type response has a 3xx status code
func (o *PostConversationsMessageParticipantCommunicationWrapupUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations message participant communication wrapup unsupported media type response has a 4xx status code
func (o *PostConversationsMessageParticipantCommunicationWrapupUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations message participant communication wrapup unsupported media type response has a 5xx status code
func (o *PostConversationsMessageParticipantCommunicationWrapupUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations message participant communication wrapup unsupported media type response a status code equal to that given
func (o *PostConversationsMessageParticipantCommunicationWrapupUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostConversationsMessageParticipantCommunicationWrapupUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsMessageParticipantCommunicationWrapupUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostConversationsMessageParticipantCommunicationWrapupUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsMessageParticipantCommunicationWrapupUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostConversationsMessageParticipantCommunicationWrapupUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsMessageParticipantCommunicationWrapupUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsMessageParticipantCommunicationWrapupTooManyRequests creates a PostConversationsMessageParticipantCommunicationWrapupTooManyRequests with default headers values
func NewPostConversationsMessageParticipantCommunicationWrapupTooManyRequests() *PostConversationsMessageParticipantCommunicationWrapupTooManyRequests {
	return &PostConversationsMessageParticipantCommunicationWrapupTooManyRequests{}
}

/*
PostConversationsMessageParticipantCommunicationWrapupTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostConversationsMessageParticipantCommunicationWrapupTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations message participant communication wrapup too many requests response has a 2xx status code
func (o *PostConversationsMessageParticipantCommunicationWrapupTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations message participant communication wrapup too many requests response has a 3xx status code
func (o *PostConversationsMessageParticipantCommunicationWrapupTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations message participant communication wrapup too many requests response has a 4xx status code
func (o *PostConversationsMessageParticipantCommunicationWrapupTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations message participant communication wrapup too many requests response has a 5xx status code
func (o *PostConversationsMessageParticipantCommunicationWrapupTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations message participant communication wrapup too many requests response a status code equal to that given
func (o *PostConversationsMessageParticipantCommunicationWrapupTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostConversationsMessageParticipantCommunicationWrapupTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsMessageParticipantCommunicationWrapupTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostConversationsMessageParticipantCommunicationWrapupTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsMessageParticipantCommunicationWrapupTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostConversationsMessageParticipantCommunicationWrapupTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsMessageParticipantCommunicationWrapupTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsMessageParticipantCommunicationWrapupInternalServerError creates a PostConversationsMessageParticipantCommunicationWrapupInternalServerError with default headers values
func NewPostConversationsMessageParticipantCommunicationWrapupInternalServerError() *PostConversationsMessageParticipantCommunicationWrapupInternalServerError {
	return &PostConversationsMessageParticipantCommunicationWrapupInternalServerError{}
}

/*
PostConversationsMessageParticipantCommunicationWrapupInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostConversationsMessageParticipantCommunicationWrapupInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations message participant communication wrapup internal server error response has a 2xx status code
func (o *PostConversationsMessageParticipantCommunicationWrapupInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations message participant communication wrapup internal server error response has a 3xx status code
func (o *PostConversationsMessageParticipantCommunicationWrapupInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations message participant communication wrapup internal server error response has a 4xx status code
func (o *PostConversationsMessageParticipantCommunicationWrapupInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations message participant communication wrapup internal server error response has a 5xx status code
func (o *PostConversationsMessageParticipantCommunicationWrapupInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversations message participant communication wrapup internal server error response a status code equal to that given
func (o *PostConversationsMessageParticipantCommunicationWrapupInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostConversationsMessageParticipantCommunicationWrapupInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsMessageParticipantCommunicationWrapupInternalServerError  %+v", 500, o.Payload)
}

func (o *PostConversationsMessageParticipantCommunicationWrapupInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsMessageParticipantCommunicationWrapupInternalServerError  %+v", 500, o.Payload)
}

func (o *PostConversationsMessageParticipantCommunicationWrapupInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsMessageParticipantCommunicationWrapupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsMessageParticipantCommunicationWrapupServiceUnavailable creates a PostConversationsMessageParticipantCommunicationWrapupServiceUnavailable with default headers values
func NewPostConversationsMessageParticipantCommunicationWrapupServiceUnavailable() *PostConversationsMessageParticipantCommunicationWrapupServiceUnavailable {
	return &PostConversationsMessageParticipantCommunicationWrapupServiceUnavailable{}
}

/*
PostConversationsMessageParticipantCommunicationWrapupServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostConversationsMessageParticipantCommunicationWrapupServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations message participant communication wrapup service unavailable response has a 2xx status code
func (o *PostConversationsMessageParticipantCommunicationWrapupServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations message participant communication wrapup service unavailable response has a 3xx status code
func (o *PostConversationsMessageParticipantCommunicationWrapupServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations message participant communication wrapup service unavailable response has a 4xx status code
func (o *PostConversationsMessageParticipantCommunicationWrapupServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations message participant communication wrapup service unavailable response has a 5xx status code
func (o *PostConversationsMessageParticipantCommunicationWrapupServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversations message participant communication wrapup service unavailable response a status code equal to that given
func (o *PostConversationsMessageParticipantCommunicationWrapupServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostConversationsMessageParticipantCommunicationWrapupServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsMessageParticipantCommunicationWrapupServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostConversationsMessageParticipantCommunicationWrapupServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsMessageParticipantCommunicationWrapupServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostConversationsMessageParticipantCommunicationWrapupServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsMessageParticipantCommunicationWrapupServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsMessageParticipantCommunicationWrapupGatewayTimeout creates a PostConversationsMessageParticipantCommunicationWrapupGatewayTimeout with default headers values
func NewPostConversationsMessageParticipantCommunicationWrapupGatewayTimeout() *PostConversationsMessageParticipantCommunicationWrapupGatewayTimeout {
	return &PostConversationsMessageParticipantCommunicationWrapupGatewayTimeout{}
}

/*
PostConversationsMessageParticipantCommunicationWrapupGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostConversationsMessageParticipantCommunicationWrapupGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations message participant communication wrapup gateway timeout response has a 2xx status code
func (o *PostConversationsMessageParticipantCommunicationWrapupGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations message participant communication wrapup gateway timeout response has a 3xx status code
func (o *PostConversationsMessageParticipantCommunicationWrapupGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations message participant communication wrapup gateway timeout response has a 4xx status code
func (o *PostConversationsMessageParticipantCommunicationWrapupGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations message participant communication wrapup gateway timeout response has a 5xx status code
func (o *PostConversationsMessageParticipantCommunicationWrapupGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversations message participant communication wrapup gateway timeout response a status code equal to that given
func (o *PostConversationsMessageParticipantCommunicationWrapupGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostConversationsMessageParticipantCommunicationWrapupGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsMessageParticipantCommunicationWrapupGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostConversationsMessageParticipantCommunicationWrapupGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsMessageParticipantCommunicationWrapupGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostConversationsMessageParticipantCommunicationWrapupGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsMessageParticipantCommunicationWrapupGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
