// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostConversationsMessageCommunicationTypingReader is a Reader for the PostConversationsMessageCommunicationTyping structure.
type PostConversationsMessageCommunicationTypingReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostConversationsMessageCommunicationTypingReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPostConversationsMessageCommunicationTypingNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostConversationsMessageCommunicationTypingBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostConversationsMessageCommunicationTypingUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostConversationsMessageCommunicationTypingForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostConversationsMessageCommunicationTypingNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostConversationsMessageCommunicationTypingRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostConversationsMessageCommunicationTypingRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostConversationsMessageCommunicationTypingUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostConversationsMessageCommunicationTypingTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostConversationsMessageCommunicationTypingInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostConversationsMessageCommunicationTypingServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostConversationsMessageCommunicationTypingGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostConversationsMessageCommunicationTypingNoContent creates a PostConversationsMessageCommunicationTypingNoContent with default headers values
func NewPostConversationsMessageCommunicationTypingNoContent() *PostConversationsMessageCommunicationTypingNoContent {
	return &PostConversationsMessageCommunicationTypingNoContent{}
}

/*
PostConversationsMessageCommunicationTypingNoContent describes a response with status code 204, with default header values.

Message typing event sent
*/
type PostConversationsMessageCommunicationTypingNoContent struct {
}

// IsSuccess returns true when this post conversations message communication typing no content response has a 2xx status code
func (o *PostConversationsMessageCommunicationTypingNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post conversations message communication typing no content response has a 3xx status code
func (o *PostConversationsMessageCommunicationTypingNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations message communication typing no content response has a 4xx status code
func (o *PostConversationsMessageCommunicationTypingNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations message communication typing no content response has a 5xx status code
func (o *PostConversationsMessageCommunicationTypingNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations message communication typing no content response a status code equal to that given
func (o *PostConversationsMessageCommunicationTypingNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *PostConversationsMessageCommunicationTypingNoContent) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/typing][%d] postConversationsMessageCommunicationTypingNoContent ", 204)
}

func (o *PostConversationsMessageCommunicationTypingNoContent) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/typing][%d] postConversationsMessageCommunicationTypingNoContent ", 204)
}

func (o *PostConversationsMessageCommunicationTypingNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostConversationsMessageCommunicationTypingBadRequest creates a PostConversationsMessageCommunicationTypingBadRequest with default headers values
func NewPostConversationsMessageCommunicationTypingBadRequest() *PostConversationsMessageCommunicationTypingBadRequest {
	return &PostConversationsMessageCommunicationTypingBadRequest{}
}

/*
PostConversationsMessageCommunicationTypingBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostConversationsMessageCommunicationTypingBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations message communication typing bad request response has a 2xx status code
func (o *PostConversationsMessageCommunicationTypingBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations message communication typing bad request response has a 3xx status code
func (o *PostConversationsMessageCommunicationTypingBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations message communication typing bad request response has a 4xx status code
func (o *PostConversationsMessageCommunicationTypingBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations message communication typing bad request response has a 5xx status code
func (o *PostConversationsMessageCommunicationTypingBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations message communication typing bad request response a status code equal to that given
func (o *PostConversationsMessageCommunicationTypingBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostConversationsMessageCommunicationTypingBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/typing][%d] postConversationsMessageCommunicationTypingBadRequest  %+v", 400, o.Payload)
}

func (o *PostConversationsMessageCommunicationTypingBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/typing][%d] postConversationsMessageCommunicationTypingBadRequest  %+v", 400, o.Payload)
}

func (o *PostConversationsMessageCommunicationTypingBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsMessageCommunicationTypingBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsMessageCommunicationTypingUnauthorized creates a PostConversationsMessageCommunicationTypingUnauthorized with default headers values
func NewPostConversationsMessageCommunicationTypingUnauthorized() *PostConversationsMessageCommunicationTypingUnauthorized {
	return &PostConversationsMessageCommunicationTypingUnauthorized{}
}

/*
PostConversationsMessageCommunicationTypingUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostConversationsMessageCommunicationTypingUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations message communication typing unauthorized response has a 2xx status code
func (o *PostConversationsMessageCommunicationTypingUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations message communication typing unauthorized response has a 3xx status code
func (o *PostConversationsMessageCommunicationTypingUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations message communication typing unauthorized response has a 4xx status code
func (o *PostConversationsMessageCommunicationTypingUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations message communication typing unauthorized response has a 5xx status code
func (o *PostConversationsMessageCommunicationTypingUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations message communication typing unauthorized response a status code equal to that given
func (o *PostConversationsMessageCommunicationTypingUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostConversationsMessageCommunicationTypingUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/typing][%d] postConversationsMessageCommunicationTypingUnauthorized  %+v", 401, o.Payload)
}

func (o *PostConversationsMessageCommunicationTypingUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/typing][%d] postConversationsMessageCommunicationTypingUnauthorized  %+v", 401, o.Payload)
}

func (o *PostConversationsMessageCommunicationTypingUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsMessageCommunicationTypingUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsMessageCommunicationTypingForbidden creates a PostConversationsMessageCommunicationTypingForbidden with default headers values
func NewPostConversationsMessageCommunicationTypingForbidden() *PostConversationsMessageCommunicationTypingForbidden {
	return &PostConversationsMessageCommunicationTypingForbidden{}
}

/*
PostConversationsMessageCommunicationTypingForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostConversationsMessageCommunicationTypingForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations message communication typing forbidden response has a 2xx status code
func (o *PostConversationsMessageCommunicationTypingForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations message communication typing forbidden response has a 3xx status code
func (o *PostConversationsMessageCommunicationTypingForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations message communication typing forbidden response has a 4xx status code
func (o *PostConversationsMessageCommunicationTypingForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations message communication typing forbidden response has a 5xx status code
func (o *PostConversationsMessageCommunicationTypingForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations message communication typing forbidden response a status code equal to that given
func (o *PostConversationsMessageCommunicationTypingForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostConversationsMessageCommunicationTypingForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/typing][%d] postConversationsMessageCommunicationTypingForbidden  %+v", 403, o.Payload)
}

func (o *PostConversationsMessageCommunicationTypingForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/typing][%d] postConversationsMessageCommunicationTypingForbidden  %+v", 403, o.Payload)
}

func (o *PostConversationsMessageCommunicationTypingForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsMessageCommunicationTypingForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsMessageCommunicationTypingNotFound creates a PostConversationsMessageCommunicationTypingNotFound with default headers values
func NewPostConversationsMessageCommunicationTypingNotFound() *PostConversationsMessageCommunicationTypingNotFound {
	return &PostConversationsMessageCommunicationTypingNotFound{}
}

/*
PostConversationsMessageCommunicationTypingNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostConversationsMessageCommunicationTypingNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations message communication typing not found response has a 2xx status code
func (o *PostConversationsMessageCommunicationTypingNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations message communication typing not found response has a 3xx status code
func (o *PostConversationsMessageCommunicationTypingNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations message communication typing not found response has a 4xx status code
func (o *PostConversationsMessageCommunicationTypingNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations message communication typing not found response has a 5xx status code
func (o *PostConversationsMessageCommunicationTypingNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations message communication typing not found response a status code equal to that given
func (o *PostConversationsMessageCommunicationTypingNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostConversationsMessageCommunicationTypingNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/typing][%d] postConversationsMessageCommunicationTypingNotFound  %+v", 404, o.Payload)
}

func (o *PostConversationsMessageCommunicationTypingNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/typing][%d] postConversationsMessageCommunicationTypingNotFound  %+v", 404, o.Payload)
}

func (o *PostConversationsMessageCommunicationTypingNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsMessageCommunicationTypingNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsMessageCommunicationTypingRequestTimeout creates a PostConversationsMessageCommunicationTypingRequestTimeout with default headers values
func NewPostConversationsMessageCommunicationTypingRequestTimeout() *PostConversationsMessageCommunicationTypingRequestTimeout {
	return &PostConversationsMessageCommunicationTypingRequestTimeout{}
}

/*
PostConversationsMessageCommunicationTypingRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostConversationsMessageCommunicationTypingRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations message communication typing request timeout response has a 2xx status code
func (o *PostConversationsMessageCommunicationTypingRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations message communication typing request timeout response has a 3xx status code
func (o *PostConversationsMessageCommunicationTypingRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations message communication typing request timeout response has a 4xx status code
func (o *PostConversationsMessageCommunicationTypingRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations message communication typing request timeout response has a 5xx status code
func (o *PostConversationsMessageCommunicationTypingRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations message communication typing request timeout response a status code equal to that given
func (o *PostConversationsMessageCommunicationTypingRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostConversationsMessageCommunicationTypingRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/typing][%d] postConversationsMessageCommunicationTypingRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostConversationsMessageCommunicationTypingRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/typing][%d] postConversationsMessageCommunicationTypingRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostConversationsMessageCommunicationTypingRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsMessageCommunicationTypingRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsMessageCommunicationTypingRequestEntityTooLarge creates a PostConversationsMessageCommunicationTypingRequestEntityTooLarge with default headers values
func NewPostConversationsMessageCommunicationTypingRequestEntityTooLarge() *PostConversationsMessageCommunicationTypingRequestEntityTooLarge {
	return &PostConversationsMessageCommunicationTypingRequestEntityTooLarge{}
}

/*
PostConversationsMessageCommunicationTypingRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PostConversationsMessageCommunicationTypingRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations message communication typing request entity too large response has a 2xx status code
func (o *PostConversationsMessageCommunicationTypingRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations message communication typing request entity too large response has a 3xx status code
func (o *PostConversationsMessageCommunicationTypingRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations message communication typing request entity too large response has a 4xx status code
func (o *PostConversationsMessageCommunicationTypingRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations message communication typing request entity too large response has a 5xx status code
func (o *PostConversationsMessageCommunicationTypingRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations message communication typing request entity too large response a status code equal to that given
func (o *PostConversationsMessageCommunicationTypingRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostConversationsMessageCommunicationTypingRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/typing][%d] postConversationsMessageCommunicationTypingRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostConversationsMessageCommunicationTypingRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/typing][%d] postConversationsMessageCommunicationTypingRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostConversationsMessageCommunicationTypingRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsMessageCommunicationTypingRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsMessageCommunicationTypingUnsupportedMediaType creates a PostConversationsMessageCommunicationTypingUnsupportedMediaType with default headers values
func NewPostConversationsMessageCommunicationTypingUnsupportedMediaType() *PostConversationsMessageCommunicationTypingUnsupportedMediaType {
	return &PostConversationsMessageCommunicationTypingUnsupportedMediaType{}
}

/*
PostConversationsMessageCommunicationTypingUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostConversationsMessageCommunicationTypingUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations message communication typing unsupported media type response has a 2xx status code
func (o *PostConversationsMessageCommunicationTypingUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations message communication typing unsupported media type response has a 3xx status code
func (o *PostConversationsMessageCommunicationTypingUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations message communication typing unsupported media type response has a 4xx status code
func (o *PostConversationsMessageCommunicationTypingUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations message communication typing unsupported media type response has a 5xx status code
func (o *PostConversationsMessageCommunicationTypingUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations message communication typing unsupported media type response a status code equal to that given
func (o *PostConversationsMessageCommunicationTypingUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostConversationsMessageCommunicationTypingUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/typing][%d] postConversationsMessageCommunicationTypingUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostConversationsMessageCommunicationTypingUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/typing][%d] postConversationsMessageCommunicationTypingUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostConversationsMessageCommunicationTypingUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsMessageCommunicationTypingUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsMessageCommunicationTypingTooManyRequests creates a PostConversationsMessageCommunicationTypingTooManyRequests with default headers values
func NewPostConversationsMessageCommunicationTypingTooManyRequests() *PostConversationsMessageCommunicationTypingTooManyRequests {
	return &PostConversationsMessageCommunicationTypingTooManyRequests{}
}

/*
PostConversationsMessageCommunicationTypingTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostConversationsMessageCommunicationTypingTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations message communication typing too many requests response has a 2xx status code
func (o *PostConversationsMessageCommunicationTypingTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations message communication typing too many requests response has a 3xx status code
func (o *PostConversationsMessageCommunicationTypingTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations message communication typing too many requests response has a 4xx status code
func (o *PostConversationsMessageCommunicationTypingTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations message communication typing too many requests response has a 5xx status code
func (o *PostConversationsMessageCommunicationTypingTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations message communication typing too many requests response a status code equal to that given
func (o *PostConversationsMessageCommunicationTypingTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostConversationsMessageCommunicationTypingTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/typing][%d] postConversationsMessageCommunicationTypingTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostConversationsMessageCommunicationTypingTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/typing][%d] postConversationsMessageCommunicationTypingTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostConversationsMessageCommunicationTypingTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsMessageCommunicationTypingTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsMessageCommunicationTypingInternalServerError creates a PostConversationsMessageCommunicationTypingInternalServerError with default headers values
func NewPostConversationsMessageCommunicationTypingInternalServerError() *PostConversationsMessageCommunicationTypingInternalServerError {
	return &PostConversationsMessageCommunicationTypingInternalServerError{}
}

/*
PostConversationsMessageCommunicationTypingInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostConversationsMessageCommunicationTypingInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations message communication typing internal server error response has a 2xx status code
func (o *PostConversationsMessageCommunicationTypingInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations message communication typing internal server error response has a 3xx status code
func (o *PostConversationsMessageCommunicationTypingInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations message communication typing internal server error response has a 4xx status code
func (o *PostConversationsMessageCommunicationTypingInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations message communication typing internal server error response has a 5xx status code
func (o *PostConversationsMessageCommunicationTypingInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversations message communication typing internal server error response a status code equal to that given
func (o *PostConversationsMessageCommunicationTypingInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostConversationsMessageCommunicationTypingInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/typing][%d] postConversationsMessageCommunicationTypingInternalServerError  %+v", 500, o.Payload)
}

func (o *PostConversationsMessageCommunicationTypingInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/typing][%d] postConversationsMessageCommunicationTypingInternalServerError  %+v", 500, o.Payload)
}

func (o *PostConversationsMessageCommunicationTypingInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsMessageCommunicationTypingInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsMessageCommunicationTypingServiceUnavailable creates a PostConversationsMessageCommunicationTypingServiceUnavailable with default headers values
func NewPostConversationsMessageCommunicationTypingServiceUnavailable() *PostConversationsMessageCommunicationTypingServiceUnavailable {
	return &PostConversationsMessageCommunicationTypingServiceUnavailable{}
}

/*
PostConversationsMessageCommunicationTypingServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostConversationsMessageCommunicationTypingServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations message communication typing service unavailable response has a 2xx status code
func (o *PostConversationsMessageCommunicationTypingServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations message communication typing service unavailable response has a 3xx status code
func (o *PostConversationsMessageCommunicationTypingServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations message communication typing service unavailable response has a 4xx status code
func (o *PostConversationsMessageCommunicationTypingServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations message communication typing service unavailable response has a 5xx status code
func (o *PostConversationsMessageCommunicationTypingServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversations message communication typing service unavailable response a status code equal to that given
func (o *PostConversationsMessageCommunicationTypingServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostConversationsMessageCommunicationTypingServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/typing][%d] postConversationsMessageCommunicationTypingServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostConversationsMessageCommunicationTypingServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/typing][%d] postConversationsMessageCommunicationTypingServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostConversationsMessageCommunicationTypingServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsMessageCommunicationTypingServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsMessageCommunicationTypingGatewayTimeout creates a PostConversationsMessageCommunicationTypingGatewayTimeout with default headers values
func NewPostConversationsMessageCommunicationTypingGatewayTimeout() *PostConversationsMessageCommunicationTypingGatewayTimeout {
	return &PostConversationsMessageCommunicationTypingGatewayTimeout{}
}

/*
PostConversationsMessageCommunicationTypingGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostConversationsMessageCommunicationTypingGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations message communication typing gateway timeout response has a 2xx status code
func (o *PostConversationsMessageCommunicationTypingGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations message communication typing gateway timeout response has a 3xx status code
func (o *PostConversationsMessageCommunicationTypingGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations message communication typing gateway timeout response has a 4xx status code
func (o *PostConversationsMessageCommunicationTypingGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations message communication typing gateway timeout response has a 5xx status code
func (o *PostConversationsMessageCommunicationTypingGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversations message communication typing gateway timeout response a status code equal to that given
func (o *PostConversationsMessageCommunicationTypingGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostConversationsMessageCommunicationTypingGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/typing][%d] postConversationsMessageCommunicationTypingGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostConversationsMessageCommunicationTypingGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/typing][%d] postConversationsMessageCommunicationTypingGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostConversationsMessageCommunicationTypingGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsMessageCommunicationTypingGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
