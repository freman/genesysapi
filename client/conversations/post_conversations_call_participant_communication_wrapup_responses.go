// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostConversationsCallParticipantCommunicationWrapupReader is a Reader for the PostConversationsCallParticipantCommunicationWrapup structure.
type PostConversationsCallParticipantCommunicationWrapupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostConversationsCallParticipantCommunicationWrapupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewPostConversationsCallParticipantCommunicationWrapupAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostConversationsCallParticipantCommunicationWrapupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostConversationsCallParticipantCommunicationWrapupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostConversationsCallParticipantCommunicationWrapupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostConversationsCallParticipantCommunicationWrapupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostConversationsCallParticipantCommunicationWrapupRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostConversationsCallParticipantCommunicationWrapupRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostConversationsCallParticipantCommunicationWrapupUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostConversationsCallParticipantCommunicationWrapupTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostConversationsCallParticipantCommunicationWrapupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostConversationsCallParticipantCommunicationWrapupServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostConversationsCallParticipantCommunicationWrapupGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostConversationsCallParticipantCommunicationWrapupAccepted creates a PostConversationsCallParticipantCommunicationWrapupAccepted with default headers values
func NewPostConversationsCallParticipantCommunicationWrapupAccepted() *PostConversationsCallParticipantCommunicationWrapupAccepted {
	return &PostConversationsCallParticipantCommunicationWrapupAccepted{}
}

/*
PostConversationsCallParticipantCommunicationWrapupAccepted describes a response with status code 202, with default header values.

Accepted
*/
type PostConversationsCallParticipantCommunicationWrapupAccepted struct {
}

// IsSuccess returns true when this post conversations call participant communication wrapup accepted response has a 2xx status code
func (o *PostConversationsCallParticipantCommunicationWrapupAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post conversations call participant communication wrapup accepted response has a 3xx status code
func (o *PostConversationsCallParticipantCommunicationWrapupAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations call participant communication wrapup accepted response has a 4xx status code
func (o *PostConversationsCallParticipantCommunicationWrapupAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations call participant communication wrapup accepted response has a 5xx status code
func (o *PostConversationsCallParticipantCommunicationWrapupAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations call participant communication wrapup accepted response a status code equal to that given
func (o *PostConversationsCallParticipantCommunicationWrapupAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *PostConversationsCallParticipantCommunicationWrapupAccepted) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsCallParticipantCommunicationWrapupAccepted ", 202)
}

func (o *PostConversationsCallParticipantCommunicationWrapupAccepted) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsCallParticipantCommunicationWrapupAccepted ", 202)
}

func (o *PostConversationsCallParticipantCommunicationWrapupAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostConversationsCallParticipantCommunicationWrapupBadRequest creates a PostConversationsCallParticipantCommunicationWrapupBadRequest with default headers values
func NewPostConversationsCallParticipantCommunicationWrapupBadRequest() *PostConversationsCallParticipantCommunicationWrapupBadRequest {
	return &PostConversationsCallParticipantCommunicationWrapupBadRequest{}
}

/*
PostConversationsCallParticipantCommunicationWrapupBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostConversationsCallParticipantCommunicationWrapupBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations call participant communication wrapup bad request response has a 2xx status code
func (o *PostConversationsCallParticipantCommunicationWrapupBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations call participant communication wrapup bad request response has a 3xx status code
func (o *PostConversationsCallParticipantCommunicationWrapupBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations call participant communication wrapup bad request response has a 4xx status code
func (o *PostConversationsCallParticipantCommunicationWrapupBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations call participant communication wrapup bad request response has a 5xx status code
func (o *PostConversationsCallParticipantCommunicationWrapupBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations call participant communication wrapup bad request response a status code equal to that given
func (o *PostConversationsCallParticipantCommunicationWrapupBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostConversationsCallParticipantCommunicationWrapupBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsCallParticipantCommunicationWrapupBadRequest  %+v", 400, o.Payload)
}

func (o *PostConversationsCallParticipantCommunicationWrapupBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsCallParticipantCommunicationWrapupBadRequest  %+v", 400, o.Payload)
}

func (o *PostConversationsCallParticipantCommunicationWrapupBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallParticipantCommunicationWrapupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallParticipantCommunicationWrapupUnauthorized creates a PostConversationsCallParticipantCommunicationWrapupUnauthorized with default headers values
func NewPostConversationsCallParticipantCommunicationWrapupUnauthorized() *PostConversationsCallParticipantCommunicationWrapupUnauthorized {
	return &PostConversationsCallParticipantCommunicationWrapupUnauthorized{}
}

/*
PostConversationsCallParticipantCommunicationWrapupUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostConversationsCallParticipantCommunicationWrapupUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations call participant communication wrapup unauthorized response has a 2xx status code
func (o *PostConversationsCallParticipantCommunicationWrapupUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations call participant communication wrapup unauthorized response has a 3xx status code
func (o *PostConversationsCallParticipantCommunicationWrapupUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations call participant communication wrapup unauthorized response has a 4xx status code
func (o *PostConversationsCallParticipantCommunicationWrapupUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations call participant communication wrapup unauthorized response has a 5xx status code
func (o *PostConversationsCallParticipantCommunicationWrapupUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations call participant communication wrapup unauthorized response a status code equal to that given
func (o *PostConversationsCallParticipantCommunicationWrapupUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostConversationsCallParticipantCommunicationWrapupUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsCallParticipantCommunicationWrapupUnauthorized  %+v", 401, o.Payload)
}

func (o *PostConversationsCallParticipantCommunicationWrapupUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsCallParticipantCommunicationWrapupUnauthorized  %+v", 401, o.Payload)
}

func (o *PostConversationsCallParticipantCommunicationWrapupUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallParticipantCommunicationWrapupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallParticipantCommunicationWrapupForbidden creates a PostConversationsCallParticipantCommunicationWrapupForbidden with default headers values
func NewPostConversationsCallParticipantCommunicationWrapupForbidden() *PostConversationsCallParticipantCommunicationWrapupForbidden {
	return &PostConversationsCallParticipantCommunicationWrapupForbidden{}
}

/*
PostConversationsCallParticipantCommunicationWrapupForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostConversationsCallParticipantCommunicationWrapupForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations call participant communication wrapup forbidden response has a 2xx status code
func (o *PostConversationsCallParticipantCommunicationWrapupForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations call participant communication wrapup forbidden response has a 3xx status code
func (o *PostConversationsCallParticipantCommunicationWrapupForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations call participant communication wrapup forbidden response has a 4xx status code
func (o *PostConversationsCallParticipantCommunicationWrapupForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations call participant communication wrapup forbidden response has a 5xx status code
func (o *PostConversationsCallParticipantCommunicationWrapupForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations call participant communication wrapup forbidden response a status code equal to that given
func (o *PostConversationsCallParticipantCommunicationWrapupForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostConversationsCallParticipantCommunicationWrapupForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsCallParticipantCommunicationWrapupForbidden  %+v", 403, o.Payload)
}

func (o *PostConversationsCallParticipantCommunicationWrapupForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsCallParticipantCommunicationWrapupForbidden  %+v", 403, o.Payload)
}

func (o *PostConversationsCallParticipantCommunicationWrapupForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallParticipantCommunicationWrapupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallParticipantCommunicationWrapupNotFound creates a PostConversationsCallParticipantCommunicationWrapupNotFound with default headers values
func NewPostConversationsCallParticipantCommunicationWrapupNotFound() *PostConversationsCallParticipantCommunicationWrapupNotFound {
	return &PostConversationsCallParticipantCommunicationWrapupNotFound{}
}

/*
PostConversationsCallParticipantCommunicationWrapupNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostConversationsCallParticipantCommunicationWrapupNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations call participant communication wrapup not found response has a 2xx status code
func (o *PostConversationsCallParticipantCommunicationWrapupNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations call participant communication wrapup not found response has a 3xx status code
func (o *PostConversationsCallParticipantCommunicationWrapupNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations call participant communication wrapup not found response has a 4xx status code
func (o *PostConversationsCallParticipantCommunicationWrapupNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations call participant communication wrapup not found response has a 5xx status code
func (o *PostConversationsCallParticipantCommunicationWrapupNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations call participant communication wrapup not found response a status code equal to that given
func (o *PostConversationsCallParticipantCommunicationWrapupNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostConversationsCallParticipantCommunicationWrapupNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsCallParticipantCommunicationWrapupNotFound  %+v", 404, o.Payload)
}

func (o *PostConversationsCallParticipantCommunicationWrapupNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsCallParticipantCommunicationWrapupNotFound  %+v", 404, o.Payload)
}

func (o *PostConversationsCallParticipantCommunicationWrapupNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallParticipantCommunicationWrapupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallParticipantCommunicationWrapupRequestTimeout creates a PostConversationsCallParticipantCommunicationWrapupRequestTimeout with default headers values
func NewPostConversationsCallParticipantCommunicationWrapupRequestTimeout() *PostConversationsCallParticipantCommunicationWrapupRequestTimeout {
	return &PostConversationsCallParticipantCommunicationWrapupRequestTimeout{}
}

/*
PostConversationsCallParticipantCommunicationWrapupRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostConversationsCallParticipantCommunicationWrapupRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations call participant communication wrapup request timeout response has a 2xx status code
func (o *PostConversationsCallParticipantCommunicationWrapupRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations call participant communication wrapup request timeout response has a 3xx status code
func (o *PostConversationsCallParticipantCommunicationWrapupRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations call participant communication wrapup request timeout response has a 4xx status code
func (o *PostConversationsCallParticipantCommunicationWrapupRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations call participant communication wrapup request timeout response has a 5xx status code
func (o *PostConversationsCallParticipantCommunicationWrapupRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations call participant communication wrapup request timeout response a status code equal to that given
func (o *PostConversationsCallParticipantCommunicationWrapupRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostConversationsCallParticipantCommunicationWrapupRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsCallParticipantCommunicationWrapupRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostConversationsCallParticipantCommunicationWrapupRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsCallParticipantCommunicationWrapupRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostConversationsCallParticipantCommunicationWrapupRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallParticipantCommunicationWrapupRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallParticipantCommunicationWrapupRequestEntityTooLarge creates a PostConversationsCallParticipantCommunicationWrapupRequestEntityTooLarge with default headers values
func NewPostConversationsCallParticipantCommunicationWrapupRequestEntityTooLarge() *PostConversationsCallParticipantCommunicationWrapupRequestEntityTooLarge {
	return &PostConversationsCallParticipantCommunicationWrapupRequestEntityTooLarge{}
}

/*
PostConversationsCallParticipantCommunicationWrapupRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PostConversationsCallParticipantCommunicationWrapupRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations call participant communication wrapup request entity too large response has a 2xx status code
func (o *PostConversationsCallParticipantCommunicationWrapupRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations call participant communication wrapup request entity too large response has a 3xx status code
func (o *PostConversationsCallParticipantCommunicationWrapupRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations call participant communication wrapup request entity too large response has a 4xx status code
func (o *PostConversationsCallParticipantCommunicationWrapupRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations call participant communication wrapup request entity too large response has a 5xx status code
func (o *PostConversationsCallParticipantCommunicationWrapupRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations call participant communication wrapup request entity too large response a status code equal to that given
func (o *PostConversationsCallParticipantCommunicationWrapupRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostConversationsCallParticipantCommunicationWrapupRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsCallParticipantCommunicationWrapupRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostConversationsCallParticipantCommunicationWrapupRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsCallParticipantCommunicationWrapupRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostConversationsCallParticipantCommunicationWrapupRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallParticipantCommunicationWrapupRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallParticipantCommunicationWrapupUnsupportedMediaType creates a PostConversationsCallParticipantCommunicationWrapupUnsupportedMediaType with default headers values
func NewPostConversationsCallParticipantCommunicationWrapupUnsupportedMediaType() *PostConversationsCallParticipantCommunicationWrapupUnsupportedMediaType {
	return &PostConversationsCallParticipantCommunicationWrapupUnsupportedMediaType{}
}

/*
PostConversationsCallParticipantCommunicationWrapupUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostConversationsCallParticipantCommunicationWrapupUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations call participant communication wrapup unsupported media type response has a 2xx status code
func (o *PostConversationsCallParticipantCommunicationWrapupUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations call participant communication wrapup unsupported media type response has a 3xx status code
func (o *PostConversationsCallParticipantCommunicationWrapupUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations call participant communication wrapup unsupported media type response has a 4xx status code
func (o *PostConversationsCallParticipantCommunicationWrapupUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations call participant communication wrapup unsupported media type response has a 5xx status code
func (o *PostConversationsCallParticipantCommunicationWrapupUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations call participant communication wrapup unsupported media type response a status code equal to that given
func (o *PostConversationsCallParticipantCommunicationWrapupUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostConversationsCallParticipantCommunicationWrapupUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsCallParticipantCommunicationWrapupUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostConversationsCallParticipantCommunicationWrapupUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsCallParticipantCommunicationWrapupUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostConversationsCallParticipantCommunicationWrapupUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallParticipantCommunicationWrapupUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallParticipantCommunicationWrapupTooManyRequests creates a PostConversationsCallParticipantCommunicationWrapupTooManyRequests with default headers values
func NewPostConversationsCallParticipantCommunicationWrapupTooManyRequests() *PostConversationsCallParticipantCommunicationWrapupTooManyRequests {
	return &PostConversationsCallParticipantCommunicationWrapupTooManyRequests{}
}

/*
PostConversationsCallParticipantCommunicationWrapupTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostConversationsCallParticipantCommunicationWrapupTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations call participant communication wrapup too many requests response has a 2xx status code
func (o *PostConversationsCallParticipantCommunicationWrapupTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations call participant communication wrapup too many requests response has a 3xx status code
func (o *PostConversationsCallParticipantCommunicationWrapupTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations call participant communication wrapup too many requests response has a 4xx status code
func (o *PostConversationsCallParticipantCommunicationWrapupTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations call participant communication wrapup too many requests response has a 5xx status code
func (o *PostConversationsCallParticipantCommunicationWrapupTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations call participant communication wrapup too many requests response a status code equal to that given
func (o *PostConversationsCallParticipantCommunicationWrapupTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostConversationsCallParticipantCommunicationWrapupTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsCallParticipantCommunicationWrapupTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostConversationsCallParticipantCommunicationWrapupTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsCallParticipantCommunicationWrapupTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostConversationsCallParticipantCommunicationWrapupTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallParticipantCommunicationWrapupTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallParticipantCommunicationWrapupInternalServerError creates a PostConversationsCallParticipantCommunicationWrapupInternalServerError with default headers values
func NewPostConversationsCallParticipantCommunicationWrapupInternalServerError() *PostConversationsCallParticipantCommunicationWrapupInternalServerError {
	return &PostConversationsCallParticipantCommunicationWrapupInternalServerError{}
}

/*
PostConversationsCallParticipantCommunicationWrapupInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostConversationsCallParticipantCommunicationWrapupInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations call participant communication wrapup internal server error response has a 2xx status code
func (o *PostConversationsCallParticipantCommunicationWrapupInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations call participant communication wrapup internal server error response has a 3xx status code
func (o *PostConversationsCallParticipantCommunicationWrapupInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations call participant communication wrapup internal server error response has a 4xx status code
func (o *PostConversationsCallParticipantCommunicationWrapupInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations call participant communication wrapup internal server error response has a 5xx status code
func (o *PostConversationsCallParticipantCommunicationWrapupInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversations call participant communication wrapup internal server error response a status code equal to that given
func (o *PostConversationsCallParticipantCommunicationWrapupInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostConversationsCallParticipantCommunicationWrapupInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsCallParticipantCommunicationWrapupInternalServerError  %+v", 500, o.Payload)
}

func (o *PostConversationsCallParticipantCommunicationWrapupInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsCallParticipantCommunicationWrapupInternalServerError  %+v", 500, o.Payload)
}

func (o *PostConversationsCallParticipantCommunicationWrapupInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallParticipantCommunicationWrapupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallParticipantCommunicationWrapupServiceUnavailable creates a PostConversationsCallParticipantCommunicationWrapupServiceUnavailable with default headers values
func NewPostConversationsCallParticipantCommunicationWrapupServiceUnavailable() *PostConversationsCallParticipantCommunicationWrapupServiceUnavailable {
	return &PostConversationsCallParticipantCommunicationWrapupServiceUnavailable{}
}

/*
PostConversationsCallParticipantCommunicationWrapupServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostConversationsCallParticipantCommunicationWrapupServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations call participant communication wrapup service unavailable response has a 2xx status code
func (o *PostConversationsCallParticipantCommunicationWrapupServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations call participant communication wrapup service unavailable response has a 3xx status code
func (o *PostConversationsCallParticipantCommunicationWrapupServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations call participant communication wrapup service unavailable response has a 4xx status code
func (o *PostConversationsCallParticipantCommunicationWrapupServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations call participant communication wrapup service unavailable response has a 5xx status code
func (o *PostConversationsCallParticipantCommunicationWrapupServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversations call participant communication wrapup service unavailable response a status code equal to that given
func (o *PostConversationsCallParticipantCommunicationWrapupServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostConversationsCallParticipantCommunicationWrapupServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsCallParticipantCommunicationWrapupServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostConversationsCallParticipantCommunicationWrapupServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsCallParticipantCommunicationWrapupServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostConversationsCallParticipantCommunicationWrapupServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallParticipantCommunicationWrapupServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsCallParticipantCommunicationWrapupGatewayTimeout creates a PostConversationsCallParticipantCommunicationWrapupGatewayTimeout with default headers values
func NewPostConversationsCallParticipantCommunicationWrapupGatewayTimeout() *PostConversationsCallParticipantCommunicationWrapupGatewayTimeout {
	return &PostConversationsCallParticipantCommunicationWrapupGatewayTimeout{}
}

/*
PostConversationsCallParticipantCommunicationWrapupGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostConversationsCallParticipantCommunicationWrapupGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations call participant communication wrapup gateway timeout response has a 2xx status code
func (o *PostConversationsCallParticipantCommunicationWrapupGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations call participant communication wrapup gateway timeout response has a 3xx status code
func (o *PostConversationsCallParticipantCommunicationWrapupGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations call participant communication wrapup gateway timeout response has a 4xx status code
func (o *PostConversationsCallParticipantCommunicationWrapupGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations call participant communication wrapup gateway timeout response has a 5xx status code
func (o *PostConversationsCallParticipantCommunicationWrapupGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversations call participant communication wrapup gateway timeout response a status code equal to that given
func (o *PostConversationsCallParticipantCommunicationWrapupGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostConversationsCallParticipantCommunicationWrapupGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsCallParticipantCommunicationWrapupGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostConversationsCallParticipantCommunicationWrapupGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/calls/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup][%d] postConversationsCallParticipantCommunicationWrapupGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostConversationsCallParticipantCommunicationWrapupGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsCallParticipantCommunicationWrapupGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
