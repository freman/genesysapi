// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PatchConversationsCallbackParticipantAttributesReader is a Reader for the PatchConversationsCallbackParticipantAttributes structure.
type PatchConversationsCallbackParticipantAttributesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchConversationsCallbackParticipantAttributesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewPatchConversationsCallbackParticipantAttributesAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchConversationsCallbackParticipantAttributesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPatchConversationsCallbackParticipantAttributesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchConversationsCallbackParticipantAttributesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchConversationsCallbackParticipantAttributesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPatchConversationsCallbackParticipantAttributesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPatchConversationsCallbackParticipantAttributesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPatchConversationsCallbackParticipantAttributesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchConversationsCallbackParticipantAttributesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPatchConversationsCallbackParticipantAttributesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPatchConversationsCallbackParticipantAttributesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchConversationsCallbackParticipantAttributesAccepted creates a PatchConversationsCallbackParticipantAttributesAccepted with default headers values
func NewPatchConversationsCallbackParticipantAttributesAccepted() *PatchConversationsCallbackParticipantAttributesAccepted {
	return &PatchConversationsCallbackParticipantAttributesAccepted{}
}

/*PatchConversationsCallbackParticipantAttributesAccepted handles this case with default header values.

Accepted
*/
type PatchConversationsCallbackParticipantAttributesAccepted struct {
}

func (o *PatchConversationsCallbackParticipantAttributesAccepted) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/attributes][%d] patchConversationsCallbackParticipantAttributesAccepted ", 202)
}

func (o *PatchConversationsCallbackParticipantAttributesAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchConversationsCallbackParticipantAttributesBadRequest creates a PatchConversationsCallbackParticipantAttributesBadRequest with default headers values
func NewPatchConversationsCallbackParticipantAttributesBadRequest() *PatchConversationsCallbackParticipantAttributesBadRequest {
	return &PatchConversationsCallbackParticipantAttributesBadRequest{}
}

/*PatchConversationsCallbackParticipantAttributesBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PatchConversationsCallbackParticipantAttributesBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationsCallbackParticipantAttributesBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/attributes][%d] patchConversationsCallbackParticipantAttributesBadRequest  %+v", 400, o.Payload)
}

func (o *PatchConversationsCallbackParticipantAttributesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsCallbackParticipantAttributesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsCallbackParticipantAttributesUnauthorized creates a PatchConversationsCallbackParticipantAttributesUnauthorized with default headers values
func NewPatchConversationsCallbackParticipantAttributesUnauthorized() *PatchConversationsCallbackParticipantAttributesUnauthorized {
	return &PatchConversationsCallbackParticipantAttributesUnauthorized{}
}

/*PatchConversationsCallbackParticipantAttributesUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PatchConversationsCallbackParticipantAttributesUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationsCallbackParticipantAttributesUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/attributes][%d] patchConversationsCallbackParticipantAttributesUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchConversationsCallbackParticipantAttributesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsCallbackParticipantAttributesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsCallbackParticipantAttributesForbidden creates a PatchConversationsCallbackParticipantAttributesForbidden with default headers values
func NewPatchConversationsCallbackParticipantAttributesForbidden() *PatchConversationsCallbackParticipantAttributesForbidden {
	return &PatchConversationsCallbackParticipantAttributesForbidden{}
}

/*PatchConversationsCallbackParticipantAttributesForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PatchConversationsCallbackParticipantAttributesForbidden struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationsCallbackParticipantAttributesForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/attributes][%d] patchConversationsCallbackParticipantAttributesForbidden  %+v", 403, o.Payload)
}

func (o *PatchConversationsCallbackParticipantAttributesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsCallbackParticipantAttributesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsCallbackParticipantAttributesNotFound creates a PatchConversationsCallbackParticipantAttributesNotFound with default headers values
func NewPatchConversationsCallbackParticipantAttributesNotFound() *PatchConversationsCallbackParticipantAttributesNotFound {
	return &PatchConversationsCallbackParticipantAttributesNotFound{}
}

/*PatchConversationsCallbackParticipantAttributesNotFound handles this case with default header values.

The requested resource was not found.
*/
type PatchConversationsCallbackParticipantAttributesNotFound struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationsCallbackParticipantAttributesNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/attributes][%d] patchConversationsCallbackParticipantAttributesNotFound  %+v", 404, o.Payload)
}

func (o *PatchConversationsCallbackParticipantAttributesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsCallbackParticipantAttributesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsCallbackParticipantAttributesRequestEntityTooLarge creates a PatchConversationsCallbackParticipantAttributesRequestEntityTooLarge with default headers values
func NewPatchConversationsCallbackParticipantAttributesRequestEntityTooLarge() *PatchConversationsCallbackParticipantAttributesRequestEntityTooLarge {
	return &PatchConversationsCallbackParticipantAttributesRequestEntityTooLarge{}
}

/*PatchConversationsCallbackParticipantAttributesRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type PatchConversationsCallbackParticipantAttributesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationsCallbackParticipantAttributesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/attributes][%d] patchConversationsCallbackParticipantAttributesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PatchConversationsCallbackParticipantAttributesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsCallbackParticipantAttributesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsCallbackParticipantAttributesUnsupportedMediaType creates a PatchConversationsCallbackParticipantAttributesUnsupportedMediaType with default headers values
func NewPatchConversationsCallbackParticipantAttributesUnsupportedMediaType() *PatchConversationsCallbackParticipantAttributesUnsupportedMediaType {
	return &PatchConversationsCallbackParticipantAttributesUnsupportedMediaType{}
}

/*PatchConversationsCallbackParticipantAttributesUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PatchConversationsCallbackParticipantAttributesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationsCallbackParticipantAttributesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/attributes][%d] patchConversationsCallbackParticipantAttributesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchConversationsCallbackParticipantAttributesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsCallbackParticipantAttributesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsCallbackParticipantAttributesTooManyRequests creates a PatchConversationsCallbackParticipantAttributesTooManyRequests with default headers values
func NewPatchConversationsCallbackParticipantAttributesTooManyRequests() *PatchConversationsCallbackParticipantAttributesTooManyRequests {
	return &PatchConversationsCallbackParticipantAttributesTooManyRequests{}
}

/*PatchConversationsCallbackParticipantAttributesTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type PatchConversationsCallbackParticipantAttributesTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationsCallbackParticipantAttributesTooManyRequests) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/attributes][%d] patchConversationsCallbackParticipantAttributesTooManyRequests  %+v", 429, o.Payload)
}

func (o *PatchConversationsCallbackParticipantAttributesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsCallbackParticipantAttributesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsCallbackParticipantAttributesInternalServerError creates a PatchConversationsCallbackParticipantAttributesInternalServerError with default headers values
func NewPatchConversationsCallbackParticipantAttributesInternalServerError() *PatchConversationsCallbackParticipantAttributesInternalServerError {
	return &PatchConversationsCallbackParticipantAttributesInternalServerError{}
}

/*PatchConversationsCallbackParticipantAttributesInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PatchConversationsCallbackParticipantAttributesInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationsCallbackParticipantAttributesInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/attributes][%d] patchConversationsCallbackParticipantAttributesInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchConversationsCallbackParticipantAttributesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsCallbackParticipantAttributesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsCallbackParticipantAttributesServiceUnavailable creates a PatchConversationsCallbackParticipantAttributesServiceUnavailable with default headers values
func NewPatchConversationsCallbackParticipantAttributesServiceUnavailable() *PatchConversationsCallbackParticipantAttributesServiceUnavailable {
	return &PatchConversationsCallbackParticipantAttributesServiceUnavailable{}
}

/*PatchConversationsCallbackParticipantAttributesServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PatchConversationsCallbackParticipantAttributesServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationsCallbackParticipantAttributesServiceUnavailable) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/attributes][%d] patchConversationsCallbackParticipantAttributesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PatchConversationsCallbackParticipantAttributesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsCallbackParticipantAttributesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationsCallbackParticipantAttributesGatewayTimeout creates a PatchConversationsCallbackParticipantAttributesGatewayTimeout with default headers values
func NewPatchConversationsCallbackParticipantAttributesGatewayTimeout() *PatchConversationsCallbackParticipantAttributesGatewayTimeout {
	return &PatchConversationsCallbackParticipantAttributesGatewayTimeout{}
}

/*PatchConversationsCallbackParticipantAttributesGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PatchConversationsCallbackParticipantAttributesGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationsCallbackParticipantAttributesGatewayTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/attributes][%d] patchConversationsCallbackParticipantAttributesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PatchConversationsCallbackParticipantAttributesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationsCallbackParticipantAttributesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
