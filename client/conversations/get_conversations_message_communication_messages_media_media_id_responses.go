// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetConversationsMessageCommunicationMessagesMediaMediaIDReader is a Reader for the GetConversationsMessageCommunicationMessagesMediaMediaID structure.
type GetConversationsMessageCommunicationMessagesMediaMediaIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConversationsMessageCommunicationMessagesMediaMediaIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetConversationsMessageCommunicationMessagesMediaMediaIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetConversationsMessageCommunicationMessagesMediaMediaIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetConversationsMessageCommunicationMessagesMediaMediaIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetConversationsMessageCommunicationMessagesMediaMediaIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetConversationsMessageCommunicationMessagesMediaMediaIDRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetConversationsMessageCommunicationMessagesMediaMediaIDRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetConversationsMessageCommunicationMessagesMediaMediaIDUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetConversationsMessageCommunicationMessagesMediaMediaIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetConversationsMessageCommunicationMessagesMediaMediaIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetConversationsMessageCommunicationMessagesMediaMediaIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetConversationsMessageCommunicationMessagesMediaMediaIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetConversationsMessageCommunicationMessagesMediaMediaIDOK creates a GetConversationsMessageCommunicationMessagesMediaMediaIDOK with default headers values
func NewGetConversationsMessageCommunicationMessagesMediaMediaIDOK() *GetConversationsMessageCommunicationMessagesMediaMediaIDOK {
	return &GetConversationsMessageCommunicationMessagesMediaMediaIDOK{}
}

/*
GetConversationsMessageCommunicationMessagesMediaMediaIDOK describes a response with status code 200, with default header values.

successful operation
*/
type GetConversationsMessageCommunicationMessagesMediaMediaIDOK struct {
	Payload *models.MessageMediaData
}

// IsSuccess returns true when this get conversations message communication messages media media Id o k response has a 2xx status code
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get conversations message communication messages media media Id o k response has a 3xx status code
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations message communication messages media media Id o k response has a 4xx status code
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations message communication messages media media Id o k response has a 5xx status code
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations message communication messages media media Id o k response a status code equal to that given
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/messages/media/{mediaId}][%d] getConversationsMessageCommunicationMessagesMediaMediaIdOK  %+v", 200, o.Payload)
}

func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDOK) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/messages/media/{mediaId}][%d] getConversationsMessageCommunicationMessagesMediaMediaIdOK  %+v", 200, o.Payload)
}

func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDOK) GetPayload() *models.MessageMediaData {
	return o.Payload
}

func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageMediaData)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageCommunicationMessagesMediaMediaIDBadRequest creates a GetConversationsMessageCommunicationMessagesMediaMediaIDBadRequest with default headers values
func NewGetConversationsMessageCommunicationMessagesMediaMediaIDBadRequest() *GetConversationsMessageCommunicationMessagesMediaMediaIDBadRequest {
	return &GetConversationsMessageCommunicationMessagesMediaMediaIDBadRequest{}
}

/*
GetConversationsMessageCommunicationMessagesMediaMediaIDBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetConversationsMessageCommunicationMessagesMediaMediaIDBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations message communication messages media media Id bad request response has a 2xx status code
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations message communication messages media media Id bad request response has a 3xx status code
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations message communication messages media media Id bad request response has a 4xx status code
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations message communication messages media media Id bad request response has a 5xx status code
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations message communication messages media media Id bad request response a status code equal to that given
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/messages/media/{mediaId}][%d] getConversationsMessageCommunicationMessagesMediaMediaIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/messages/media/{mediaId}][%d] getConversationsMessageCommunicationMessagesMediaMediaIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageCommunicationMessagesMediaMediaIDUnauthorized creates a GetConversationsMessageCommunicationMessagesMediaMediaIDUnauthorized with default headers values
func NewGetConversationsMessageCommunicationMessagesMediaMediaIDUnauthorized() *GetConversationsMessageCommunicationMessagesMediaMediaIDUnauthorized {
	return &GetConversationsMessageCommunicationMessagesMediaMediaIDUnauthorized{}
}

/*
GetConversationsMessageCommunicationMessagesMediaMediaIDUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetConversationsMessageCommunicationMessagesMediaMediaIDUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations message communication messages media media Id unauthorized response has a 2xx status code
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations message communication messages media media Id unauthorized response has a 3xx status code
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations message communication messages media media Id unauthorized response has a 4xx status code
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations message communication messages media media Id unauthorized response has a 5xx status code
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations message communication messages media media Id unauthorized response a status code equal to that given
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/messages/media/{mediaId}][%d] getConversationsMessageCommunicationMessagesMediaMediaIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/messages/media/{mediaId}][%d] getConversationsMessageCommunicationMessagesMediaMediaIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageCommunicationMessagesMediaMediaIDForbidden creates a GetConversationsMessageCommunicationMessagesMediaMediaIDForbidden with default headers values
func NewGetConversationsMessageCommunicationMessagesMediaMediaIDForbidden() *GetConversationsMessageCommunicationMessagesMediaMediaIDForbidden {
	return &GetConversationsMessageCommunicationMessagesMediaMediaIDForbidden{}
}

/*
GetConversationsMessageCommunicationMessagesMediaMediaIDForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetConversationsMessageCommunicationMessagesMediaMediaIDForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations message communication messages media media Id forbidden response has a 2xx status code
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations message communication messages media media Id forbidden response has a 3xx status code
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations message communication messages media media Id forbidden response has a 4xx status code
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations message communication messages media media Id forbidden response has a 5xx status code
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations message communication messages media media Id forbidden response a status code equal to that given
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/messages/media/{mediaId}][%d] getConversationsMessageCommunicationMessagesMediaMediaIdForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/messages/media/{mediaId}][%d] getConversationsMessageCommunicationMessagesMediaMediaIdForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageCommunicationMessagesMediaMediaIDNotFound creates a GetConversationsMessageCommunicationMessagesMediaMediaIDNotFound with default headers values
func NewGetConversationsMessageCommunicationMessagesMediaMediaIDNotFound() *GetConversationsMessageCommunicationMessagesMediaMediaIDNotFound {
	return &GetConversationsMessageCommunicationMessagesMediaMediaIDNotFound{}
}

/*
GetConversationsMessageCommunicationMessagesMediaMediaIDNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetConversationsMessageCommunicationMessagesMediaMediaIDNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations message communication messages media media Id not found response has a 2xx status code
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations message communication messages media media Id not found response has a 3xx status code
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations message communication messages media media Id not found response has a 4xx status code
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations message communication messages media media Id not found response has a 5xx status code
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations message communication messages media media Id not found response a status code equal to that given
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/messages/media/{mediaId}][%d] getConversationsMessageCommunicationMessagesMediaMediaIdNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/messages/media/{mediaId}][%d] getConversationsMessageCommunicationMessagesMediaMediaIdNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageCommunicationMessagesMediaMediaIDRequestTimeout creates a GetConversationsMessageCommunicationMessagesMediaMediaIDRequestTimeout with default headers values
func NewGetConversationsMessageCommunicationMessagesMediaMediaIDRequestTimeout() *GetConversationsMessageCommunicationMessagesMediaMediaIDRequestTimeout {
	return &GetConversationsMessageCommunicationMessagesMediaMediaIDRequestTimeout{}
}

/*
GetConversationsMessageCommunicationMessagesMediaMediaIDRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetConversationsMessageCommunicationMessagesMediaMediaIDRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations message communication messages media media Id request timeout response has a 2xx status code
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations message communication messages media media Id request timeout response has a 3xx status code
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations message communication messages media media Id request timeout response has a 4xx status code
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations message communication messages media media Id request timeout response has a 5xx status code
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations message communication messages media media Id request timeout response a status code equal to that given
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/messages/media/{mediaId}][%d] getConversationsMessageCommunicationMessagesMediaMediaIdRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/messages/media/{mediaId}][%d] getConversationsMessageCommunicationMessagesMediaMediaIdRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageCommunicationMessagesMediaMediaIDRequestEntityTooLarge creates a GetConversationsMessageCommunicationMessagesMediaMediaIDRequestEntityTooLarge with default headers values
func NewGetConversationsMessageCommunicationMessagesMediaMediaIDRequestEntityTooLarge() *GetConversationsMessageCommunicationMessagesMediaMediaIDRequestEntityTooLarge {
	return &GetConversationsMessageCommunicationMessagesMediaMediaIDRequestEntityTooLarge{}
}

/*
GetConversationsMessageCommunicationMessagesMediaMediaIDRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetConversationsMessageCommunicationMessagesMediaMediaIDRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations message communication messages media media Id request entity too large response has a 2xx status code
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations message communication messages media media Id request entity too large response has a 3xx status code
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations message communication messages media media Id request entity too large response has a 4xx status code
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations message communication messages media media Id request entity too large response has a 5xx status code
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations message communication messages media media Id request entity too large response a status code equal to that given
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/messages/media/{mediaId}][%d] getConversationsMessageCommunicationMessagesMediaMediaIdRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/messages/media/{mediaId}][%d] getConversationsMessageCommunicationMessagesMediaMediaIdRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageCommunicationMessagesMediaMediaIDUnsupportedMediaType creates a GetConversationsMessageCommunicationMessagesMediaMediaIDUnsupportedMediaType with default headers values
func NewGetConversationsMessageCommunicationMessagesMediaMediaIDUnsupportedMediaType() *GetConversationsMessageCommunicationMessagesMediaMediaIDUnsupportedMediaType {
	return &GetConversationsMessageCommunicationMessagesMediaMediaIDUnsupportedMediaType{}
}

/*
GetConversationsMessageCommunicationMessagesMediaMediaIDUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetConversationsMessageCommunicationMessagesMediaMediaIDUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations message communication messages media media Id unsupported media type response has a 2xx status code
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations message communication messages media media Id unsupported media type response has a 3xx status code
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations message communication messages media media Id unsupported media type response has a 4xx status code
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations message communication messages media media Id unsupported media type response has a 5xx status code
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations message communication messages media media Id unsupported media type response a status code equal to that given
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/messages/media/{mediaId}][%d] getConversationsMessageCommunicationMessagesMediaMediaIdUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/messages/media/{mediaId}][%d] getConversationsMessageCommunicationMessagesMediaMediaIdUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageCommunicationMessagesMediaMediaIDTooManyRequests creates a GetConversationsMessageCommunicationMessagesMediaMediaIDTooManyRequests with default headers values
func NewGetConversationsMessageCommunicationMessagesMediaMediaIDTooManyRequests() *GetConversationsMessageCommunicationMessagesMediaMediaIDTooManyRequests {
	return &GetConversationsMessageCommunicationMessagesMediaMediaIDTooManyRequests{}
}

/*
GetConversationsMessageCommunicationMessagesMediaMediaIDTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetConversationsMessageCommunicationMessagesMediaMediaIDTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations message communication messages media media Id too many requests response has a 2xx status code
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations message communication messages media media Id too many requests response has a 3xx status code
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations message communication messages media media Id too many requests response has a 4xx status code
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversations message communication messages media media Id too many requests response has a 5xx status code
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversations message communication messages media media Id too many requests response a status code equal to that given
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/messages/media/{mediaId}][%d] getConversationsMessageCommunicationMessagesMediaMediaIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/messages/media/{mediaId}][%d] getConversationsMessageCommunicationMessagesMediaMediaIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageCommunicationMessagesMediaMediaIDInternalServerError creates a GetConversationsMessageCommunicationMessagesMediaMediaIDInternalServerError with default headers values
func NewGetConversationsMessageCommunicationMessagesMediaMediaIDInternalServerError() *GetConversationsMessageCommunicationMessagesMediaMediaIDInternalServerError {
	return &GetConversationsMessageCommunicationMessagesMediaMediaIDInternalServerError{}
}

/*
GetConversationsMessageCommunicationMessagesMediaMediaIDInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetConversationsMessageCommunicationMessagesMediaMediaIDInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations message communication messages media media Id internal server error response has a 2xx status code
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations message communication messages media media Id internal server error response has a 3xx status code
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations message communication messages media media Id internal server error response has a 4xx status code
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations message communication messages media media Id internal server error response has a 5xx status code
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations message communication messages media media Id internal server error response a status code equal to that given
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/messages/media/{mediaId}][%d] getConversationsMessageCommunicationMessagesMediaMediaIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/messages/media/{mediaId}][%d] getConversationsMessageCommunicationMessagesMediaMediaIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageCommunicationMessagesMediaMediaIDServiceUnavailable creates a GetConversationsMessageCommunicationMessagesMediaMediaIDServiceUnavailable with default headers values
func NewGetConversationsMessageCommunicationMessagesMediaMediaIDServiceUnavailable() *GetConversationsMessageCommunicationMessagesMediaMediaIDServiceUnavailable {
	return &GetConversationsMessageCommunicationMessagesMediaMediaIDServiceUnavailable{}
}

/*
GetConversationsMessageCommunicationMessagesMediaMediaIDServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetConversationsMessageCommunicationMessagesMediaMediaIDServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations message communication messages media media Id service unavailable response has a 2xx status code
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations message communication messages media media Id service unavailable response has a 3xx status code
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations message communication messages media media Id service unavailable response has a 4xx status code
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations message communication messages media media Id service unavailable response has a 5xx status code
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations message communication messages media media Id service unavailable response a status code equal to that given
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/messages/media/{mediaId}][%d] getConversationsMessageCommunicationMessagesMediaMediaIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/messages/media/{mediaId}][%d] getConversationsMessageCommunicationMessagesMediaMediaIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationsMessageCommunicationMessagesMediaMediaIDGatewayTimeout creates a GetConversationsMessageCommunicationMessagesMediaMediaIDGatewayTimeout with default headers values
func NewGetConversationsMessageCommunicationMessagesMediaMediaIDGatewayTimeout() *GetConversationsMessageCommunicationMessagesMediaMediaIDGatewayTimeout {
	return &GetConversationsMessageCommunicationMessagesMediaMediaIDGatewayTimeout{}
}

/*
GetConversationsMessageCommunicationMessagesMediaMediaIDGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetConversationsMessageCommunicationMessagesMediaMediaIDGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversations message communication messages media media Id gateway timeout response has a 2xx status code
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversations message communication messages media media Id gateway timeout response has a 3xx status code
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversations message communication messages media media Id gateway timeout response has a 4xx status code
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversations message communication messages media media Id gateway timeout response has a 5xx status code
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversations message communication messages media media Id gateway timeout response a status code equal to that given
func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/messages/media/{mediaId}][%d] getConversationsMessageCommunicationMessagesMediaMediaIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/messages/media/{mediaId}][%d] getConversationsMessageCommunicationMessagesMediaMediaIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationsMessageCommunicationMessagesMediaMediaIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
