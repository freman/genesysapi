// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostConversationsMessagingIntegrationsWhatsappReader is a Reader for the PostConversationsMessagingIntegrationsWhatsapp structure.
type PostConversationsMessagingIntegrationsWhatsappReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostConversationsMessagingIntegrationsWhatsappReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostConversationsMessagingIntegrationsWhatsappOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewPostConversationsMessagingIntegrationsWhatsappAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostConversationsMessagingIntegrationsWhatsappBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostConversationsMessagingIntegrationsWhatsappUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostConversationsMessagingIntegrationsWhatsappForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostConversationsMessagingIntegrationsWhatsappNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostConversationsMessagingIntegrationsWhatsappRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPostConversationsMessagingIntegrationsWhatsappConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostConversationsMessagingIntegrationsWhatsappRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostConversationsMessagingIntegrationsWhatsappUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostConversationsMessagingIntegrationsWhatsappTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostConversationsMessagingIntegrationsWhatsappInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostConversationsMessagingIntegrationsWhatsappServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostConversationsMessagingIntegrationsWhatsappGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostConversationsMessagingIntegrationsWhatsappOK creates a PostConversationsMessagingIntegrationsWhatsappOK with default headers values
func NewPostConversationsMessagingIntegrationsWhatsappOK() *PostConversationsMessagingIntegrationsWhatsappOK {
	return &PostConversationsMessagingIntegrationsWhatsappOK{}
}

/*
PostConversationsMessagingIntegrationsWhatsappOK describes a response with status code 200, with default header values.

successful operation
*/
type PostConversationsMessagingIntegrationsWhatsappOK struct {
	Payload *models.WhatsAppIntegration
}

// IsSuccess returns true when this post conversations messaging integrations whatsapp o k response has a 2xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post conversations messaging integrations whatsapp o k response has a 3xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations messaging integrations whatsapp o k response has a 4xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations messaging integrations whatsapp o k response has a 5xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations messaging integrations whatsapp o k response a status code equal to that given
func (o *PostConversationsMessagingIntegrationsWhatsappOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostConversationsMessagingIntegrationsWhatsappOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/integrations/whatsapp][%d] postConversationsMessagingIntegrationsWhatsappOK  %+v", 200, o.Payload)
}

func (o *PostConversationsMessagingIntegrationsWhatsappOK) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/integrations/whatsapp][%d] postConversationsMessagingIntegrationsWhatsappOK  %+v", 200, o.Payload)
}

func (o *PostConversationsMessagingIntegrationsWhatsappOK) GetPayload() *models.WhatsAppIntegration {
	return o.Payload
}

func (o *PostConversationsMessagingIntegrationsWhatsappOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WhatsAppIntegration)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsMessagingIntegrationsWhatsappAccepted creates a PostConversationsMessagingIntegrationsWhatsappAccepted with default headers values
func NewPostConversationsMessagingIntegrationsWhatsappAccepted() *PostConversationsMessagingIntegrationsWhatsappAccepted {
	return &PostConversationsMessagingIntegrationsWhatsappAccepted{}
}

/*
PostConversationsMessagingIntegrationsWhatsappAccepted describes a response with status code 202, with default header values.

Accepted - The integration creation in progress.
*/
type PostConversationsMessagingIntegrationsWhatsappAccepted struct {
	Payload *models.WhatsAppIntegration
}

// IsSuccess returns true when this post conversations messaging integrations whatsapp accepted response has a 2xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post conversations messaging integrations whatsapp accepted response has a 3xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations messaging integrations whatsapp accepted response has a 4xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations messaging integrations whatsapp accepted response has a 5xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations messaging integrations whatsapp accepted response a status code equal to that given
func (o *PostConversationsMessagingIntegrationsWhatsappAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *PostConversationsMessagingIntegrationsWhatsappAccepted) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/integrations/whatsapp][%d] postConversationsMessagingIntegrationsWhatsappAccepted  %+v", 202, o.Payload)
}

func (o *PostConversationsMessagingIntegrationsWhatsappAccepted) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/integrations/whatsapp][%d] postConversationsMessagingIntegrationsWhatsappAccepted  %+v", 202, o.Payload)
}

func (o *PostConversationsMessagingIntegrationsWhatsappAccepted) GetPayload() *models.WhatsAppIntegration {
	return o.Payload
}

func (o *PostConversationsMessagingIntegrationsWhatsappAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WhatsAppIntegration)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsMessagingIntegrationsWhatsappBadRequest creates a PostConversationsMessagingIntegrationsWhatsappBadRequest with default headers values
func NewPostConversationsMessagingIntegrationsWhatsappBadRequest() *PostConversationsMessagingIntegrationsWhatsappBadRequest {
	return &PostConversationsMessagingIntegrationsWhatsappBadRequest{}
}

/*
PostConversationsMessagingIntegrationsWhatsappBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostConversationsMessagingIntegrationsWhatsappBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations messaging integrations whatsapp bad request response has a 2xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations messaging integrations whatsapp bad request response has a 3xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations messaging integrations whatsapp bad request response has a 4xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations messaging integrations whatsapp bad request response has a 5xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations messaging integrations whatsapp bad request response a status code equal to that given
func (o *PostConversationsMessagingIntegrationsWhatsappBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostConversationsMessagingIntegrationsWhatsappBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/integrations/whatsapp][%d] postConversationsMessagingIntegrationsWhatsappBadRequest  %+v", 400, o.Payload)
}

func (o *PostConversationsMessagingIntegrationsWhatsappBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/integrations/whatsapp][%d] postConversationsMessagingIntegrationsWhatsappBadRequest  %+v", 400, o.Payload)
}

func (o *PostConversationsMessagingIntegrationsWhatsappBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsMessagingIntegrationsWhatsappBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsMessagingIntegrationsWhatsappUnauthorized creates a PostConversationsMessagingIntegrationsWhatsappUnauthorized with default headers values
func NewPostConversationsMessagingIntegrationsWhatsappUnauthorized() *PostConversationsMessagingIntegrationsWhatsappUnauthorized {
	return &PostConversationsMessagingIntegrationsWhatsappUnauthorized{}
}

/*
PostConversationsMessagingIntegrationsWhatsappUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostConversationsMessagingIntegrationsWhatsappUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations messaging integrations whatsapp unauthorized response has a 2xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations messaging integrations whatsapp unauthorized response has a 3xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations messaging integrations whatsapp unauthorized response has a 4xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations messaging integrations whatsapp unauthorized response has a 5xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations messaging integrations whatsapp unauthorized response a status code equal to that given
func (o *PostConversationsMessagingIntegrationsWhatsappUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostConversationsMessagingIntegrationsWhatsappUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/integrations/whatsapp][%d] postConversationsMessagingIntegrationsWhatsappUnauthorized  %+v", 401, o.Payload)
}

func (o *PostConversationsMessagingIntegrationsWhatsappUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/integrations/whatsapp][%d] postConversationsMessagingIntegrationsWhatsappUnauthorized  %+v", 401, o.Payload)
}

func (o *PostConversationsMessagingIntegrationsWhatsappUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsMessagingIntegrationsWhatsappUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsMessagingIntegrationsWhatsappForbidden creates a PostConversationsMessagingIntegrationsWhatsappForbidden with default headers values
func NewPostConversationsMessagingIntegrationsWhatsappForbidden() *PostConversationsMessagingIntegrationsWhatsappForbidden {
	return &PostConversationsMessagingIntegrationsWhatsappForbidden{}
}

/*
PostConversationsMessagingIntegrationsWhatsappForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostConversationsMessagingIntegrationsWhatsappForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations messaging integrations whatsapp forbidden response has a 2xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations messaging integrations whatsapp forbidden response has a 3xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations messaging integrations whatsapp forbidden response has a 4xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations messaging integrations whatsapp forbidden response has a 5xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations messaging integrations whatsapp forbidden response a status code equal to that given
func (o *PostConversationsMessagingIntegrationsWhatsappForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostConversationsMessagingIntegrationsWhatsappForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/integrations/whatsapp][%d] postConversationsMessagingIntegrationsWhatsappForbidden  %+v", 403, o.Payload)
}

func (o *PostConversationsMessagingIntegrationsWhatsappForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/integrations/whatsapp][%d] postConversationsMessagingIntegrationsWhatsappForbidden  %+v", 403, o.Payload)
}

func (o *PostConversationsMessagingIntegrationsWhatsappForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsMessagingIntegrationsWhatsappForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsMessagingIntegrationsWhatsappNotFound creates a PostConversationsMessagingIntegrationsWhatsappNotFound with default headers values
func NewPostConversationsMessagingIntegrationsWhatsappNotFound() *PostConversationsMessagingIntegrationsWhatsappNotFound {
	return &PostConversationsMessagingIntegrationsWhatsappNotFound{}
}

/*
PostConversationsMessagingIntegrationsWhatsappNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostConversationsMessagingIntegrationsWhatsappNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations messaging integrations whatsapp not found response has a 2xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations messaging integrations whatsapp not found response has a 3xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations messaging integrations whatsapp not found response has a 4xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations messaging integrations whatsapp not found response has a 5xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations messaging integrations whatsapp not found response a status code equal to that given
func (o *PostConversationsMessagingIntegrationsWhatsappNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostConversationsMessagingIntegrationsWhatsappNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/integrations/whatsapp][%d] postConversationsMessagingIntegrationsWhatsappNotFound  %+v", 404, o.Payload)
}

func (o *PostConversationsMessagingIntegrationsWhatsappNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/integrations/whatsapp][%d] postConversationsMessagingIntegrationsWhatsappNotFound  %+v", 404, o.Payload)
}

func (o *PostConversationsMessagingIntegrationsWhatsappNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsMessagingIntegrationsWhatsappNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsMessagingIntegrationsWhatsappRequestTimeout creates a PostConversationsMessagingIntegrationsWhatsappRequestTimeout with default headers values
func NewPostConversationsMessagingIntegrationsWhatsappRequestTimeout() *PostConversationsMessagingIntegrationsWhatsappRequestTimeout {
	return &PostConversationsMessagingIntegrationsWhatsappRequestTimeout{}
}

/*
PostConversationsMessagingIntegrationsWhatsappRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostConversationsMessagingIntegrationsWhatsappRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations messaging integrations whatsapp request timeout response has a 2xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations messaging integrations whatsapp request timeout response has a 3xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations messaging integrations whatsapp request timeout response has a 4xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations messaging integrations whatsapp request timeout response has a 5xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations messaging integrations whatsapp request timeout response a status code equal to that given
func (o *PostConversationsMessagingIntegrationsWhatsappRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostConversationsMessagingIntegrationsWhatsappRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/integrations/whatsapp][%d] postConversationsMessagingIntegrationsWhatsappRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostConversationsMessagingIntegrationsWhatsappRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/integrations/whatsapp][%d] postConversationsMessagingIntegrationsWhatsappRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostConversationsMessagingIntegrationsWhatsappRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsMessagingIntegrationsWhatsappRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsMessagingIntegrationsWhatsappConflict creates a PostConversationsMessagingIntegrationsWhatsappConflict with default headers values
func NewPostConversationsMessagingIntegrationsWhatsappConflict() *PostConversationsMessagingIntegrationsWhatsappConflict {
	return &PostConversationsMessagingIntegrationsWhatsappConflict{}
}

/*
PostConversationsMessagingIntegrationsWhatsappConflict describes a response with status code 409, with default header values.

Conflict
*/
type PostConversationsMessagingIntegrationsWhatsappConflict struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations messaging integrations whatsapp conflict response has a 2xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations messaging integrations whatsapp conflict response has a 3xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations messaging integrations whatsapp conflict response has a 4xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations messaging integrations whatsapp conflict response has a 5xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations messaging integrations whatsapp conflict response a status code equal to that given
func (o *PostConversationsMessagingIntegrationsWhatsappConflict) IsCode(code int) bool {
	return code == 409
}

func (o *PostConversationsMessagingIntegrationsWhatsappConflict) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/integrations/whatsapp][%d] postConversationsMessagingIntegrationsWhatsappConflict  %+v", 409, o.Payload)
}

func (o *PostConversationsMessagingIntegrationsWhatsappConflict) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/integrations/whatsapp][%d] postConversationsMessagingIntegrationsWhatsappConflict  %+v", 409, o.Payload)
}

func (o *PostConversationsMessagingIntegrationsWhatsappConflict) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsMessagingIntegrationsWhatsappConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsMessagingIntegrationsWhatsappRequestEntityTooLarge creates a PostConversationsMessagingIntegrationsWhatsappRequestEntityTooLarge with default headers values
func NewPostConversationsMessagingIntegrationsWhatsappRequestEntityTooLarge() *PostConversationsMessagingIntegrationsWhatsappRequestEntityTooLarge {
	return &PostConversationsMessagingIntegrationsWhatsappRequestEntityTooLarge{}
}

/*
PostConversationsMessagingIntegrationsWhatsappRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PostConversationsMessagingIntegrationsWhatsappRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations messaging integrations whatsapp request entity too large response has a 2xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations messaging integrations whatsapp request entity too large response has a 3xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations messaging integrations whatsapp request entity too large response has a 4xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations messaging integrations whatsapp request entity too large response has a 5xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations messaging integrations whatsapp request entity too large response a status code equal to that given
func (o *PostConversationsMessagingIntegrationsWhatsappRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostConversationsMessagingIntegrationsWhatsappRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/integrations/whatsapp][%d] postConversationsMessagingIntegrationsWhatsappRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostConversationsMessagingIntegrationsWhatsappRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/integrations/whatsapp][%d] postConversationsMessagingIntegrationsWhatsappRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostConversationsMessagingIntegrationsWhatsappRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsMessagingIntegrationsWhatsappRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsMessagingIntegrationsWhatsappUnsupportedMediaType creates a PostConversationsMessagingIntegrationsWhatsappUnsupportedMediaType with default headers values
func NewPostConversationsMessagingIntegrationsWhatsappUnsupportedMediaType() *PostConversationsMessagingIntegrationsWhatsappUnsupportedMediaType {
	return &PostConversationsMessagingIntegrationsWhatsappUnsupportedMediaType{}
}

/*
PostConversationsMessagingIntegrationsWhatsappUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostConversationsMessagingIntegrationsWhatsappUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations messaging integrations whatsapp unsupported media type response has a 2xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations messaging integrations whatsapp unsupported media type response has a 3xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations messaging integrations whatsapp unsupported media type response has a 4xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations messaging integrations whatsapp unsupported media type response has a 5xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations messaging integrations whatsapp unsupported media type response a status code equal to that given
func (o *PostConversationsMessagingIntegrationsWhatsappUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostConversationsMessagingIntegrationsWhatsappUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/integrations/whatsapp][%d] postConversationsMessagingIntegrationsWhatsappUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostConversationsMessagingIntegrationsWhatsappUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/integrations/whatsapp][%d] postConversationsMessagingIntegrationsWhatsappUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostConversationsMessagingIntegrationsWhatsappUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsMessagingIntegrationsWhatsappUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsMessagingIntegrationsWhatsappTooManyRequests creates a PostConversationsMessagingIntegrationsWhatsappTooManyRequests with default headers values
func NewPostConversationsMessagingIntegrationsWhatsappTooManyRequests() *PostConversationsMessagingIntegrationsWhatsappTooManyRequests {
	return &PostConversationsMessagingIntegrationsWhatsappTooManyRequests{}
}

/*
PostConversationsMessagingIntegrationsWhatsappTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostConversationsMessagingIntegrationsWhatsappTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations messaging integrations whatsapp too many requests response has a 2xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations messaging integrations whatsapp too many requests response has a 3xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations messaging integrations whatsapp too many requests response has a 4xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations messaging integrations whatsapp too many requests response has a 5xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations messaging integrations whatsapp too many requests response a status code equal to that given
func (o *PostConversationsMessagingIntegrationsWhatsappTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostConversationsMessagingIntegrationsWhatsappTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/integrations/whatsapp][%d] postConversationsMessagingIntegrationsWhatsappTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostConversationsMessagingIntegrationsWhatsappTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/integrations/whatsapp][%d] postConversationsMessagingIntegrationsWhatsappTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostConversationsMessagingIntegrationsWhatsappTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsMessagingIntegrationsWhatsappTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsMessagingIntegrationsWhatsappInternalServerError creates a PostConversationsMessagingIntegrationsWhatsappInternalServerError with default headers values
func NewPostConversationsMessagingIntegrationsWhatsappInternalServerError() *PostConversationsMessagingIntegrationsWhatsappInternalServerError {
	return &PostConversationsMessagingIntegrationsWhatsappInternalServerError{}
}

/*
PostConversationsMessagingIntegrationsWhatsappInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostConversationsMessagingIntegrationsWhatsappInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations messaging integrations whatsapp internal server error response has a 2xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations messaging integrations whatsapp internal server error response has a 3xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations messaging integrations whatsapp internal server error response has a 4xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations messaging integrations whatsapp internal server error response has a 5xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversations messaging integrations whatsapp internal server error response a status code equal to that given
func (o *PostConversationsMessagingIntegrationsWhatsappInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostConversationsMessagingIntegrationsWhatsappInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/integrations/whatsapp][%d] postConversationsMessagingIntegrationsWhatsappInternalServerError  %+v", 500, o.Payload)
}

func (o *PostConversationsMessagingIntegrationsWhatsappInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/integrations/whatsapp][%d] postConversationsMessagingIntegrationsWhatsappInternalServerError  %+v", 500, o.Payload)
}

func (o *PostConversationsMessagingIntegrationsWhatsappInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsMessagingIntegrationsWhatsappInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsMessagingIntegrationsWhatsappServiceUnavailable creates a PostConversationsMessagingIntegrationsWhatsappServiceUnavailable with default headers values
func NewPostConversationsMessagingIntegrationsWhatsappServiceUnavailable() *PostConversationsMessagingIntegrationsWhatsappServiceUnavailable {
	return &PostConversationsMessagingIntegrationsWhatsappServiceUnavailable{}
}

/*
PostConversationsMessagingIntegrationsWhatsappServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostConversationsMessagingIntegrationsWhatsappServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations messaging integrations whatsapp service unavailable response has a 2xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations messaging integrations whatsapp service unavailable response has a 3xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations messaging integrations whatsapp service unavailable response has a 4xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations messaging integrations whatsapp service unavailable response has a 5xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversations messaging integrations whatsapp service unavailable response a status code equal to that given
func (o *PostConversationsMessagingIntegrationsWhatsappServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostConversationsMessagingIntegrationsWhatsappServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/integrations/whatsapp][%d] postConversationsMessagingIntegrationsWhatsappServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostConversationsMessagingIntegrationsWhatsappServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/integrations/whatsapp][%d] postConversationsMessagingIntegrationsWhatsappServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostConversationsMessagingIntegrationsWhatsappServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsMessagingIntegrationsWhatsappServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsMessagingIntegrationsWhatsappGatewayTimeout creates a PostConversationsMessagingIntegrationsWhatsappGatewayTimeout with default headers values
func NewPostConversationsMessagingIntegrationsWhatsappGatewayTimeout() *PostConversationsMessagingIntegrationsWhatsappGatewayTimeout {
	return &PostConversationsMessagingIntegrationsWhatsappGatewayTimeout{}
}

/*
PostConversationsMessagingIntegrationsWhatsappGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostConversationsMessagingIntegrationsWhatsappGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations messaging integrations whatsapp gateway timeout response has a 2xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations messaging integrations whatsapp gateway timeout response has a 3xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations messaging integrations whatsapp gateway timeout response has a 4xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations messaging integrations whatsapp gateway timeout response has a 5xx status code
func (o *PostConversationsMessagingIntegrationsWhatsappGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversations messaging integrations whatsapp gateway timeout response a status code equal to that given
func (o *PostConversationsMessagingIntegrationsWhatsappGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostConversationsMessagingIntegrationsWhatsappGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/integrations/whatsapp][%d] postConversationsMessagingIntegrationsWhatsappGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostConversationsMessagingIntegrationsWhatsappGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/integrations/whatsapp][%d] postConversationsMessagingIntegrationsWhatsappGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostConversationsMessagingIntegrationsWhatsappGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsMessagingIntegrationsWhatsappGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
