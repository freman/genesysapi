// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PatchConversationParticipantAttributesReader is a Reader for the PatchConversationParticipantAttributes structure.
type PatchConversationParticipantAttributesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchConversationParticipantAttributesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewPatchConversationParticipantAttributesAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchConversationParticipantAttributesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPatchConversationParticipantAttributesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchConversationParticipantAttributesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchConversationParticipantAttributesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPatchConversationParticipantAttributesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPatchConversationParticipantAttributesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPatchConversationParticipantAttributesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchConversationParticipantAttributesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPatchConversationParticipantAttributesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPatchConversationParticipantAttributesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchConversationParticipantAttributesAccepted creates a PatchConversationParticipantAttributesAccepted with default headers values
func NewPatchConversationParticipantAttributesAccepted() *PatchConversationParticipantAttributesAccepted {
	return &PatchConversationParticipantAttributesAccepted{}
}

/*PatchConversationParticipantAttributesAccepted handles this case with default header values.

Accepted
*/
type PatchConversationParticipantAttributesAccepted struct {
}

func (o *PatchConversationParticipantAttributesAccepted) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/{conversationId}/participants/{participantId}/attributes][%d] patchConversationParticipantAttributesAccepted ", 202)
}

func (o *PatchConversationParticipantAttributesAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchConversationParticipantAttributesBadRequest creates a PatchConversationParticipantAttributesBadRequest with default headers values
func NewPatchConversationParticipantAttributesBadRequest() *PatchConversationParticipantAttributesBadRequest {
	return &PatchConversationParticipantAttributesBadRequest{}
}

/*PatchConversationParticipantAttributesBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PatchConversationParticipantAttributesBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationParticipantAttributesBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/{conversationId}/participants/{participantId}/attributes][%d] patchConversationParticipantAttributesBadRequest  %+v", 400, o.Payload)
}

func (o *PatchConversationParticipantAttributesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationParticipantAttributesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationParticipantAttributesUnauthorized creates a PatchConversationParticipantAttributesUnauthorized with default headers values
func NewPatchConversationParticipantAttributesUnauthorized() *PatchConversationParticipantAttributesUnauthorized {
	return &PatchConversationParticipantAttributesUnauthorized{}
}

/*PatchConversationParticipantAttributesUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PatchConversationParticipantAttributesUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationParticipantAttributesUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/{conversationId}/participants/{participantId}/attributes][%d] patchConversationParticipantAttributesUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchConversationParticipantAttributesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationParticipantAttributesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationParticipantAttributesForbidden creates a PatchConversationParticipantAttributesForbidden with default headers values
func NewPatchConversationParticipantAttributesForbidden() *PatchConversationParticipantAttributesForbidden {
	return &PatchConversationParticipantAttributesForbidden{}
}

/*PatchConversationParticipantAttributesForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PatchConversationParticipantAttributesForbidden struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationParticipantAttributesForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/{conversationId}/participants/{participantId}/attributes][%d] patchConversationParticipantAttributesForbidden  %+v", 403, o.Payload)
}

func (o *PatchConversationParticipantAttributesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationParticipantAttributesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationParticipantAttributesNotFound creates a PatchConversationParticipantAttributesNotFound with default headers values
func NewPatchConversationParticipantAttributesNotFound() *PatchConversationParticipantAttributesNotFound {
	return &PatchConversationParticipantAttributesNotFound{}
}

/*PatchConversationParticipantAttributesNotFound handles this case with default header values.

The requested resource was not found.
*/
type PatchConversationParticipantAttributesNotFound struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationParticipantAttributesNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/{conversationId}/participants/{participantId}/attributes][%d] patchConversationParticipantAttributesNotFound  %+v", 404, o.Payload)
}

func (o *PatchConversationParticipantAttributesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationParticipantAttributesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationParticipantAttributesRequestEntityTooLarge creates a PatchConversationParticipantAttributesRequestEntityTooLarge with default headers values
func NewPatchConversationParticipantAttributesRequestEntityTooLarge() *PatchConversationParticipantAttributesRequestEntityTooLarge {
	return &PatchConversationParticipantAttributesRequestEntityTooLarge{}
}

/*PatchConversationParticipantAttributesRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type PatchConversationParticipantAttributesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationParticipantAttributesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/{conversationId}/participants/{participantId}/attributes][%d] patchConversationParticipantAttributesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PatchConversationParticipantAttributesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationParticipantAttributesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationParticipantAttributesUnsupportedMediaType creates a PatchConversationParticipantAttributesUnsupportedMediaType with default headers values
func NewPatchConversationParticipantAttributesUnsupportedMediaType() *PatchConversationParticipantAttributesUnsupportedMediaType {
	return &PatchConversationParticipantAttributesUnsupportedMediaType{}
}

/*PatchConversationParticipantAttributesUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PatchConversationParticipantAttributesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationParticipantAttributesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/{conversationId}/participants/{participantId}/attributes][%d] patchConversationParticipantAttributesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchConversationParticipantAttributesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationParticipantAttributesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationParticipantAttributesTooManyRequests creates a PatchConversationParticipantAttributesTooManyRequests with default headers values
func NewPatchConversationParticipantAttributesTooManyRequests() *PatchConversationParticipantAttributesTooManyRequests {
	return &PatchConversationParticipantAttributesTooManyRequests{}
}

/*PatchConversationParticipantAttributesTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type PatchConversationParticipantAttributesTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationParticipantAttributesTooManyRequests) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/{conversationId}/participants/{participantId}/attributes][%d] patchConversationParticipantAttributesTooManyRequests  %+v", 429, o.Payload)
}

func (o *PatchConversationParticipantAttributesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationParticipantAttributesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationParticipantAttributesInternalServerError creates a PatchConversationParticipantAttributesInternalServerError with default headers values
func NewPatchConversationParticipantAttributesInternalServerError() *PatchConversationParticipantAttributesInternalServerError {
	return &PatchConversationParticipantAttributesInternalServerError{}
}

/*PatchConversationParticipantAttributesInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PatchConversationParticipantAttributesInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationParticipantAttributesInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/{conversationId}/participants/{participantId}/attributes][%d] patchConversationParticipantAttributesInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchConversationParticipantAttributesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationParticipantAttributesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationParticipantAttributesServiceUnavailable creates a PatchConversationParticipantAttributesServiceUnavailable with default headers values
func NewPatchConversationParticipantAttributesServiceUnavailable() *PatchConversationParticipantAttributesServiceUnavailable {
	return &PatchConversationParticipantAttributesServiceUnavailable{}
}

/*PatchConversationParticipantAttributesServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PatchConversationParticipantAttributesServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationParticipantAttributesServiceUnavailable) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/{conversationId}/participants/{participantId}/attributes][%d] patchConversationParticipantAttributesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PatchConversationParticipantAttributesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationParticipantAttributesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConversationParticipantAttributesGatewayTimeout creates a PatchConversationParticipantAttributesGatewayTimeout with default headers values
func NewPatchConversationParticipantAttributesGatewayTimeout() *PatchConversationParticipantAttributesGatewayTimeout {
	return &PatchConversationParticipantAttributesGatewayTimeout{}
}

/*PatchConversationParticipantAttributesGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PatchConversationParticipantAttributesGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PatchConversationParticipantAttributesGatewayTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/conversations/{conversationId}/participants/{participantId}/attributes][%d] patchConversationParticipantAttributesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PatchConversationParticipantAttributesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchConversationParticipantAttributesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
