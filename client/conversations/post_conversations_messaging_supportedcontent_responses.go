// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostConversationsMessagingSupportedcontentReader is a Reader for the PostConversationsMessagingSupportedcontent structure.
type PostConversationsMessagingSupportedcontentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostConversationsMessagingSupportedcontentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostConversationsMessagingSupportedcontentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewPostConversationsMessagingSupportedcontentCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostConversationsMessagingSupportedcontentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostConversationsMessagingSupportedcontentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostConversationsMessagingSupportedcontentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostConversationsMessagingSupportedcontentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostConversationsMessagingSupportedcontentRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostConversationsMessagingSupportedcontentRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostConversationsMessagingSupportedcontentUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostConversationsMessagingSupportedcontentTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostConversationsMessagingSupportedcontentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostConversationsMessagingSupportedcontentServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostConversationsMessagingSupportedcontentGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostConversationsMessagingSupportedcontentOK creates a PostConversationsMessagingSupportedcontentOK with default headers values
func NewPostConversationsMessagingSupportedcontentOK() *PostConversationsMessagingSupportedcontentOK {
	return &PostConversationsMessagingSupportedcontentOK{}
}

/*
PostConversationsMessagingSupportedcontentOK describes a response with status code 200, with default header values.

successful operation
*/
type PostConversationsMessagingSupportedcontentOK struct {
	Payload *models.SupportedContent
}

// IsSuccess returns true when this post conversations messaging supportedcontent o k response has a 2xx status code
func (o *PostConversationsMessagingSupportedcontentOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post conversations messaging supportedcontent o k response has a 3xx status code
func (o *PostConversationsMessagingSupportedcontentOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations messaging supportedcontent o k response has a 4xx status code
func (o *PostConversationsMessagingSupportedcontentOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations messaging supportedcontent o k response has a 5xx status code
func (o *PostConversationsMessagingSupportedcontentOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations messaging supportedcontent o k response a status code equal to that given
func (o *PostConversationsMessagingSupportedcontentOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostConversationsMessagingSupportedcontentOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/supportedcontent][%d] postConversationsMessagingSupportedcontentOK  %+v", 200, o.Payload)
}

func (o *PostConversationsMessagingSupportedcontentOK) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/supportedcontent][%d] postConversationsMessagingSupportedcontentOK  %+v", 200, o.Payload)
}

func (o *PostConversationsMessagingSupportedcontentOK) GetPayload() *models.SupportedContent {
	return o.Payload
}

func (o *PostConversationsMessagingSupportedcontentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SupportedContent)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsMessagingSupportedcontentCreated creates a PostConversationsMessagingSupportedcontentCreated with default headers values
func NewPostConversationsMessagingSupportedcontentCreated() *PostConversationsMessagingSupportedcontentCreated {
	return &PostConversationsMessagingSupportedcontentCreated{}
}

/*
PostConversationsMessagingSupportedcontentCreated describes a response with status code 201, with default header values.

Operation was successful
*/
type PostConversationsMessagingSupportedcontentCreated struct {
	Payload *models.SupportedContent
}

// IsSuccess returns true when this post conversations messaging supportedcontent created response has a 2xx status code
func (o *PostConversationsMessagingSupportedcontentCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post conversations messaging supportedcontent created response has a 3xx status code
func (o *PostConversationsMessagingSupportedcontentCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations messaging supportedcontent created response has a 4xx status code
func (o *PostConversationsMessagingSupportedcontentCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations messaging supportedcontent created response has a 5xx status code
func (o *PostConversationsMessagingSupportedcontentCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations messaging supportedcontent created response a status code equal to that given
func (o *PostConversationsMessagingSupportedcontentCreated) IsCode(code int) bool {
	return code == 201
}

func (o *PostConversationsMessagingSupportedcontentCreated) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/supportedcontent][%d] postConversationsMessagingSupportedcontentCreated  %+v", 201, o.Payload)
}

func (o *PostConversationsMessagingSupportedcontentCreated) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/supportedcontent][%d] postConversationsMessagingSupportedcontentCreated  %+v", 201, o.Payload)
}

func (o *PostConversationsMessagingSupportedcontentCreated) GetPayload() *models.SupportedContent {
	return o.Payload
}

func (o *PostConversationsMessagingSupportedcontentCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SupportedContent)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsMessagingSupportedcontentBadRequest creates a PostConversationsMessagingSupportedcontentBadRequest with default headers values
func NewPostConversationsMessagingSupportedcontentBadRequest() *PostConversationsMessagingSupportedcontentBadRequest {
	return &PostConversationsMessagingSupportedcontentBadRequest{}
}

/*
PostConversationsMessagingSupportedcontentBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostConversationsMessagingSupportedcontentBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations messaging supportedcontent bad request response has a 2xx status code
func (o *PostConversationsMessagingSupportedcontentBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations messaging supportedcontent bad request response has a 3xx status code
func (o *PostConversationsMessagingSupportedcontentBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations messaging supportedcontent bad request response has a 4xx status code
func (o *PostConversationsMessagingSupportedcontentBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations messaging supportedcontent bad request response has a 5xx status code
func (o *PostConversationsMessagingSupportedcontentBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations messaging supportedcontent bad request response a status code equal to that given
func (o *PostConversationsMessagingSupportedcontentBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostConversationsMessagingSupportedcontentBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/supportedcontent][%d] postConversationsMessagingSupportedcontentBadRequest  %+v", 400, o.Payload)
}

func (o *PostConversationsMessagingSupportedcontentBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/supportedcontent][%d] postConversationsMessagingSupportedcontentBadRequest  %+v", 400, o.Payload)
}

func (o *PostConversationsMessagingSupportedcontentBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsMessagingSupportedcontentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsMessagingSupportedcontentUnauthorized creates a PostConversationsMessagingSupportedcontentUnauthorized with default headers values
func NewPostConversationsMessagingSupportedcontentUnauthorized() *PostConversationsMessagingSupportedcontentUnauthorized {
	return &PostConversationsMessagingSupportedcontentUnauthorized{}
}

/*
PostConversationsMessagingSupportedcontentUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostConversationsMessagingSupportedcontentUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations messaging supportedcontent unauthorized response has a 2xx status code
func (o *PostConversationsMessagingSupportedcontentUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations messaging supportedcontent unauthorized response has a 3xx status code
func (o *PostConversationsMessagingSupportedcontentUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations messaging supportedcontent unauthorized response has a 4xx status code
func (o *PostConversationsMessagingSupportedcontentUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations messaging supportedcontent unauthorized response has a 5xx status code
func (o *PostConversationsMessagingSupportedcontentUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations messaging supportedcontent unauthorized response a status code equal to that given
func (o *PostConversationsMessagingSupportedcontentUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostConversationsMessagingSupportedcontentUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/supportedcontent][%d] postConversationsMessagingSupportedcontentUnauthorized  %+v", 401, o.Payload)
}

func (o *PostConversationsMessagingSupportedcontentUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/supportedcontent][%d] postConversationsMessagingSupportedcontentUnauthorized  %+v", 401, o.Payload)
}

func (o *PostConversationsMessagingSupportedcontentUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsMessagingSupportedcontentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsMessagingSupportedcontentForbidden creates a PostConversationsMessagingSupportedcontentForbidden with default headers values
func NewPostConversationsMessagingSupportedcontentForbidden() *PostConversationsMessagingSupportedcontentForbidden {
	return &PostConversationsMessagingSupportedcontentForbidden{}
}

/*
PostConversationsMessagingSupportedcontentForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostConversationsMessagingSupportedcontentForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations messaging supportedcontent forbidden response has a 2xx status code
func (o *PostConversationsMessagingSupportedcontentForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations messaging supportedcontent forbidden response has a 3xx status code
func (o *PostConversationsMessagingSupportedcontentForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations messaging supportedcontent forbidden response has a 4xx status code
func (o *PostConversationsMessagingSupportedcontentForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations messaging supportedcontent forbidden response has a 5xx status code
func (o *PostConversationsMessagingSupportedcontentForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations messaging supportedcontent forbidden response a status code equal to that given
func (o *PostConversationsMessagingSupportedcontentForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostConversationsMessagingSupportedcontentForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/supportedcontent][%d] postConversationsMessagingSupportedcontentForbidden  %+v", 403, o.Payload)
}

func (o *PostConversationsMessagingSupportedcontentForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/supportedcontent][%d] postConversationsMessagingSupportedcontentForbidden  %+v", 403, o.Payload)
}

func (o *PostConversationsMessagingSupportedcontentForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsMessagingSupportedcontentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsMessagingSupportedcontentNotFound creates a PostConversationsMessagingSupportedcontentNotFound with default headers values
func NewPostConversationsMessagingSupportedcontentNotFound() *PostConversationsMessagingSupportedcontentNotFound {
	return &PostConversationsMessagingSupportedcontentNotFound{}
}

/*
PostConversationsMessagingSupportedcontentNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostConversationsMessagingSupportedcontentNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations messaging supportedcontent not found response has a 2xx status code
func (o *PostConversationsMessagingSupportedcontentNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations messaging supportedcontent not found response has a 3xx status code
func (o *PostConversationsMessagingSupportedcontentNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations messaging supportedcontent not found response has a 4xx status code
func (o *PostConversationsMessagingSupportedcontentNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations messaging supportedcontent not found response has a 5xx status code
func (o *PostConversationsMessagingSupportedcontentNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations messaging supportedcontent not found response a status code equal to that given
func (o *PostConversationsMessagingSupportedcontentNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostConversationsMessagingSupportedcontentNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/supportedcontent][%d] postConversationsMessagingSupportedcontentNotFound  %+v", 404, o.Payload)
}

func (o *PostConversationsMessagingSupportedcontentNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/supportedcontent][%d] postConversationsMessagingSupportedcontentNotFound  %+v", 404, o.Payload)
}

func (o *PostConversationsMessagingSupportedcontentNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsMessagingSupportedcontentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsMessagingSupportedcontentRequestTimeout creates a PostConversationsMessagingSupportedcontentRequestTimeout with default headers values
func NewPostConversationsMessagingSupportedcontentRequestTimeout() *PostConversationsMessagingSupportedcontentRequestTimeout {
	return &PostConversationsMessagingSupportedcontentRequestTimeout{}
}

/*
PostConversationsMessagingSupportedcontentRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostConversationsMessagingSupportedcontentRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations messaging supportedcontent request timeout response has a 2xx status code
func (o *PostConversationsMessagingSupportedcontentRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations messaging supportedcontent request timeout response has a 3xx status code
func (o *PostConversationsMessagingSupportedcontentRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations messaging supportedcontent request timeout response has a 4xx status code
func (o *PostConversationsMessagingSupportedcontentRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations messaging supportedcontent request timeout response has a 5xx status code
func (o *PostConversationsMessagingSupportedcontentRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations messaging supportedcontent request timeout response a status code equal to that given
func (o *PostConversationsMessagingSupportedcontentRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostConversationsMessagingSupportedcontentRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/supportedcontent][%d] postConversationsMessagingSupportedcontentRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostConversationsMessagingSupportedcontentRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/supportedcontent][%d] postConversationsMessagingSupportedcontentRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostConversationsMessagingSupportedcontentRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsMessagingSupportedcontentRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsMessagingSupportedcontentRequestEntityTooLarge creates a PostConversationsMessagingSupportedcontentRequestEntityTooLarge with default headers values
func NewPostConversationsMessagingSupportedcontentRequestEntityTooLarge() *PostConversationsMessagingSupportedcontentRequestEntityTooLarge {
	return &PostConversationsMessagingSupportedcontentRequestEntityTooLarge{}
}

/*
PostConversationsMessagingSupportedcontentRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PostConversationsMessagingSupportedcontentRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations messaging supportedcontent request entity too large response has a 2xx status code
func (o *PostConversationsMessagingSupportedcontentRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations messaging supportedcontent request entity too large response has a 3xx status code
func (o *PostConversationsMessagingSupportedcontentRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations messaging supportedcontent request entity too large response has a 4xx status code
func (o *PostConversationsMessagingSupportedcontentRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations messaging supportedcontent request entity too large response has a 5xx status code
func (o *PostConversationsMessagingSupportedcontentRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations messaging supportedcontent request entity too large response a status code equal to that given
func (o *PostConversationsMessagingSupportedcontentRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostConversationsMessagingSupportedcontentRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/supportedcontent][%d] postConversationsMessagingSupportedcontentRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostConversationsMessagingSupportedcontentRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/supportedcontent][%d] postConversationsMessagingSupportedcontentRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostConversationsMessagingSupportedcontentRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsMessagingSupportedcontentRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsMessagingSupportedcontentUnsupportedMediaType creates a PostConversationsMessagingSupportedcontentUnsupportedMediaType with default headers values
func NewPostConversationsMessagingSupportedcontentUnsupportedMediaType() *PostConversationsMessagingSupportedcontentUnsupportedMediaType {
	return &PostConversationsMessagingSupportedcontentUnsupportedMediaType{}
}

/*
PostConversationsMessagingSupportedcontentUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostConversationsMessagingSupportedcontentUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations messaging supportedcontent unsupported media type response has a 2xx status code
func (o *PostConversationsMessagingSupportedcontentUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations messaging supportedcontent unsupported media type response has a 3xx status code
func (o *PostConversationsMessagingSupportedcontentUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations messaging supportedcontent unsupported media type response has a 4xx status code
func (o *PostConversationsMessagingSupportedcontentUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations messaging supportedcontent unsupported media type response has a 5xx status code
func (o *PostConversationsMessagingSupportedcontentUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations messaging supportedcontent unsupported media type response a status code equal to that given
func (o *PostConversationsMessagingSupportedcontentUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostConversationsMessagingSupportedcontentUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/supportedcontent][%d] postConversationsMessagingSupportedcontentUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostConversationsMessagingSupportedcontentUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/supportedcontent][%d] postConversationsMessagingSupportedcontentUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostConversationsMessagingSupportedcontentUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsMessagingSupportedcontentUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsMessagingSupportedcontentTooManyRequests creates a PostConversationsMessagingSupportedcontentTooManyRequests with default headers values
func NewPostConversationsMessagingSupportedcontentTooManyRequests() *PostConversationsMessagingSupportedcontentTooManyRequests {
	return &PostConversationsMessagingSupportedcontentTooManyRequests{}
}

/*
PostConversationsMessagingSupportedcontentTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostConversationsMessagingSupportedcontentTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations messaging supportedcontent too many requests response has a 2xx status code
func (o *PostConversationsMessagingSupportedcontentTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations messaging supportedcontent too many requests response has a 3xx status code
func (o *PostConversationsMessagingSupportedcontentTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations messaging supportedcontent too many requests response has a 4xx status code
func (o *PostConversationsMessagingSupportedcontentTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversations messaging supportedcontent too many requests response has a 5xx status code
func (o *PostConversationsMessagingSupportedcontentTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversations messaging supportedcontent too many requests response a status code equal to that given
func (o *PostConversationsMessagingSupportedcontentTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostConversationsMessagingSupportedcontentTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/supportedcontent][%d] postConversationsMessagingSupportedcontentTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostConversationsMessagingSupportedcontentTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/supportedcontent][%d] postConversationsMessagingSupportedcontentTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostConversationsMessagingSupportedcontentTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsMessagingSupportedcontentTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsMessagingSupportedcontentInternalServerError creates a PostConversationsMessagingSupportedcontentInternalServerError with default headers values
func NewPostConversationsMessagingSupportedcontentInternalServerError() *PostConversationsMessagingSupportedcontentInternalServerError {
	return &PostConversationsMessagingSupportedcontentInternalServerError{}
}

/*
PostConversationsMessagingSupportedcontentInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostConversationsMessagingSupportedcontentInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations messaging supportedcontent internal server error response has a 2xx status code
func (o *PostConversationsMessagingSupportedcontentInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations messaging supportedcontent internal server error response has a 3xx status code
func (o *PostConversationsMessagingSupportedcontentInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations messaging supportedcontent internal server error response has a 4xx status code
func (o *PostConversationsMessagingSupportedcontentInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations messaging supportedcontent internal server error response has a 5xx status code
func (o *PostConversationsMessagingSupportedcontentInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversations messaging supportedcontent internal server error response a status code equal to that given
func (o *PostConversationsMessagingSupportedcontentInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostConversationsMessagingSupportedcontentInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/supportedcontent][%d] postConversationsMessagingSupportedcontentInternalServerError  %+v", 500, o.Payload)
}

func (o *PostConversationsMessagingSupportedcontentInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/supportedcontent][%d] postConversationsMessagingSupportedcontentInternalServerError  %+v", 500, o.Payload)
}

func (o *PostConversationsMessagingSupportedcontentInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsMessagingSupportedcontentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsMessagingSupportedcontentServiceUnavailable creates a PostConversationsMessagingSupportedcontentServiceUnavailable with default headers values
func NewPostConversationsMessagingSupportedcontentServiceUnavailable() *PostConversationsMessagingSupportedcontentServiceUnavailable {
	return &PostConversationsMessagingSupportedcontentServiceUnavailable{}
}

/*
PostConversationsMessagingSupportedcontentServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostConversationsMessagingSupportedcontentServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations messaging supportedcontent service unavailable response has a 2xx status code
func (o *PostConversationsMessagingSupportedcontentServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations messaging supportedcontent service unavailable response has a 3xx status code
func (o *PostConversationsMessagingSupportedcontentServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations messaging supportedcontent service unavailable response has a 4xx status code
func (o *PostConversationsMessagingSupportedcontentServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations messaging supportedcontent service unavailable response has a 5xx status code
func (o *PostConversationsMessagingSupportedcontentServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversations messaging supportedcontent service unavailable response a status code equal to that given
func (o *PostConversationsMessagingSupportedcontentServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostConversationsMessagingSupportedcontentServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/supportedcontent][%d] postConversationsMessagingSupportedcontentServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostConversationsMessagingSupportedcontentServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/supportedcontent][%d] postConversationsMessagingSupportedcontentServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostConversationsMessagingSupportedcontentServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsMessagingSupportedcontentServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationsMessagingSupportedcontentGatewayTimeout creates a PostConversationsMessagingSupportedcontentGatewayTimeout with default headers values
func NewPostConversationsMessagingSupportedcontentGatewayTimeout() *PostConversationsMessagingSupportedcontentGatewayTimeout {
	return &PostConversationsMessagingSupportedcontentGatewayTimeout{}
}

/*
PostConversationsMessagingSupportedcontentGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostConversationsMessagingSupportedcontentGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversations messaging supportedcontent gateway timeout response has a 2xx status code
func (o *PostConversationsMessagingSupportedcontentGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversations messaging supportedcontent gateway timeout response has a 3xx status code
func (o *PostConversationsMessagingSupportedcontentGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversations messaging supportedcontent gateway timeout response has a 4xx status code
func (o *PostConversationsMessagingSupportedcontentGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversations messaging supportedcontent gateway timeout response has a 5xx status code
func (o *PostConversationsMessagingSupportedcontentGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversations messaging supportedcontent gateway timeout response a status code equal to that given
func (o *PostConversationsMessagingSupportedcontentGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostConversationsMessagingSupportedcontentGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/supportedcontent][%d] postConversationsMessagingSupportedcontentGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostConversationsMessagingSupportedcontentGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/messaging/supportedcontent][%d] postConversationsMessagingSupportedcontentGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostConversationsMessagingSupportedcontentGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationsMessagingSupportedcontentGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
