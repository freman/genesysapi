// Code generated by go-swagger; DO NOT EDIT.

package web_deployments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// DeleteWebdeploymentsDeploymentCobrowseSessionIDReader is a Reader for the DeleteWebdeploymentsDeploymentCobrowseSessionID structure.
type DeleteWebdeploymentsDeploymentCobrowseSessionIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteWebdeploymentsDeploymentCobrowseSessionIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewDeleteWebdeploymentsDeploymentCobrowseSessionIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteWebdeploymentsDeploymentCobrowseSessionIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteWebdeploymentsDeploymentCobrowseSessionIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteWebdeploymentsDeploymentCobrowseSessionIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteWebdeploymentsDeploymentCobrowseSessionIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewDeleteWebdeploymentsDeploymentCobrowseSessionIDRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewDeleteWebdeploymentsDeploymentCobrowseSessionIDRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDeleteWebdeploymentsDeploymentCobrowseSessionIDUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteWebdeploymentsDeploymentCobrowseSessionIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteWebdeploymentsDeploymentCobrowseSessionIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteWebdeploymentsDeploymentCobrowseSessionIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteWebdeploymentsDeploymentCobrowseSessionIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteWebdeploymentsDeploymentCobrowseSessionIDOK creates a DeleteWebdeploymentsDeploymentCobrowseSessionIDOK with default headers values
func NewDeleteWebdeploymentsDeploymentCobrowseSessionIDOK() *DeleteWebdeploymentsDeploymentCobrowseSessionIDOK {
	return &DeleteWebdeploymentsDeploymentCobrowseSessionIDOK{}
}

/*
DeleteWebdeploymentsDeploymentCobrowseSessionIDOK describes a response with status code 200, with default header values.

successful operation
*/
type DeleteWebdeploymentsDeploymentCobrowseSessionIDOK struct {
	Payload models.Empty
}

// IsSuccess returns true when this delete webdeployments deployment cobrowse session Id o k response has a 2xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete webdeployments deployment cobrowse session Id o k response has a 3xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete webdeployments deployment cobrowse session Id o k response has a 4xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete webdeployments deployment cobrowse session Id o k response has a 5xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete webdeployments deployment cobrowse session Id o k response a status code equal to that given
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDOK) IsCode(code int) bool {
	return code == 200
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] deleteWebdeploymentsDeploymentCobrowseSessionIdOK  %+v", 200, o.Payload)
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDOK) String() string {
	return fmt.Sprintf("[DELETE /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] deleteWebdeploymentsDeploymentCobrowseSessionIdOK  %+v", 200, o.Payload)
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDOK) GetPayload() models.Empty {
	return o.Payload
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteWebdeploymentsDeploymentCobrowseSessionIDNoContent creates a DeleteWebdeploymentsDeploymentCobrowseSessionIDNoContent with default headers values
func NewDeleteWebdeploymentsDeploymentCobrowseSessionIDNoContent() *DeleteWebdeploymentsDeploymentCobrowseSessionIDNoContent {
	return &DeleteWebdeploymentsDeploymentCobrowseSessionIDNoContent{}
}

/*
DeleteWebdeploymentsDeploymentCobrowseSessionIDNoContent describes a response with status code 204, with default header values.

No Content
*/
type DeleteWebdeploymentsDeploymentCobrowseSessionIDNoContent struct {
}

// IsSuccess returns true when this delete webdeployments deployment cobrowse session Id no content response has a 2xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete webdeployments deployment cobrowse session Id no content response has a 3xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete webdeployments deployment cobrowse session Id no content response has a 4xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete webdeployments deployment cobrowse session Id no content response has a 5xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete webdeployments deployment cobrowse session Id no content response a status code equal to that given
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] deleteWebdeploymentsDeploymentCobrowseSessionIdNoContent ", 204)
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDNoContent) String() string {
	return fmt.Sprintf("[DELETE /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] deleteWebdeploymentsDeploymentCobrowseSessionIdNoContent ", 204)
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteWebdeploymentsDeploymentCobrowseSessionIDBadRequest creates a DeleteWebdeploymentsDeploymentCobrowseSessionIDBadRequest with default headers values
func NewDeleteWebdeploymentsDeploymentCobrowseSessionIDBadRequest() *DeleteWebdeploymentsDeploymentCobrowseSessionIDBadRequest {
	return &DeleteWebdeploymentsDeploymentCobrowseSessionIDBadRequest{}
}

/*
DeleteWebdeploymentsDeploymentCobrowseSessionIDBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type DeleteWebdeploymentsDeploymentCobrowseSessionIDBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete webdeployments deployment cobrowse session Id bad request response has a 2xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete webdeployments deployment cobrowse session Id bad request response has a 3xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete webdeployments deployment cobrowse session Id bad request response has a 4xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete webdeployments deployment cobrowse session Id bad request response has a 5xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete webdeployments deployment cobrowse session Id bad request response a status code equal to that given
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] deleteWebdeploymentsDeploymentCobrowseSessionIdBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] deleteWebdeploymentsDeploymentCobrowseSessionIdBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteWebdeploymentsDeploymentCobrowseSessionIDUnauthorized creates a DeleteWebdeploymentsDeploymentCobrowseSessionIDUnauthorized with default headers values
func NewDeleteWebdeploymentsDeploymentCobrowseSessionIDUnauthorized() *DeleteWebdeploymentsDeploymentCobrowseSessionIDUnauthorized {
	return &DeleteWebdeploymentsDeploymentCobrowseSessionIDUnauthorized{}
}

/*
DeleteWebdeploymentsDeploymentCobrowseSessionIDUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type DeleteWebdeploymentsDeploymentCobrowseSessionIDUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete webdeployments deployment cobrowse session Id unauthorized response has a 2xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete webdeployments deployment cobrowse session Id unauthorized response has a 3xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete webdeployments deployment cobrowse session Id unauthorized response has a 4xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete webdeployments deployment cobrowse session Id unauthorized response has a 5xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete webdeployments deployment cobrowse session Id unauthorized response a status code equal to that given
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] deleteWebdeploymentsDeploymentCobrowseSessionIdUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] deleteWebdeploymentsDeploymentCobrowseSessionIdUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteWebdeploymentsDeploymentCobrowseSessionIDForbidden creates a DeleteWebdeploymentsDeploymentCobrowseSessionIDForbidden with default headers values
func NewDeleteWebdeploymentsDeploymentCobrowseSessionIDForbidden() *DeleteWebdeploymentsDeploymentCobrowseSessionIDForbidden {
	return &DeleteWebdeploymentsDeploymentCobrowseSessionIDForbidden{}
}

/*
DeleteWebdeploymentsDeploymentCobrowseSessionIDForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type DeleteWebdeploymentsDeploymentCobrowseSessionIDForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete webdeployments deployment cobrowse session Id forbidden response has a 2xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete webdeployments deployment cobrowse session Id forbidden response has a 3xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete webdeployments deployment cobrowse session Id forbidden response has a 4xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete webdeployments deployment cobrowse session Id forbidden response has a 5xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete webdeployments deployment cobrowse session Id forbidden response a status code equal to that given
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] deleteWebdeploymentsDeploymentCobrowseSessionIdForbidden  %+v", 403, o.Payload)
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] deleteWebdeploymentsDeploymentCobrowseSessionIdForbidden  %+v", 403, o.Payload)
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteWebdeploymentsDeploymentCobrowseSessionIDNotFound creates a DeleteWebdeploymentsDeploymentCobrowseSessionIDNotFound with default headers values
func NewDeleteWebdeploymentsDeploymentCobrowseSessionIDNotFound() *DeleteWebdeploymentsDeploymentCobrowseSessionIDNotFound {
	return &DeleteWebdeploymentsDeploymentCobrowseSessionIDNotFound{}
}

/*
DeleteWebdeploymentsDeploymentCobrowseSessionIDNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type DeleteWebdeploymentsDeploymentCobrowseSessionIDNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete webdeployments deployment cobrowse session Id not found response has a 2xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete webdeployments deployment cobrowse session Id not found response has a 3xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete webdeployments deployment cobrowse session Id not found response has a 4xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete webdeployments deployment cobrowse session Id not found response has a 5xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete webdeployments deployment cobrowse session Id not found response a status code equal to that given
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] deleteWebdeploymentsDeploymentCobrowseSessionIdNotFound  %+v", 404, o.Payload)
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] deleteWebdeploymentsDeploymentCobrowseSessionIdNotFound  %+v", 404, o.Payload)
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteWebdeploymentsDeploymentCobrowseSessionIDRequestTimeout creates a DeleteWebdeploymentsDeploymentCobrowseSessionIDRequestTimeout with default headers values
func NewDeleteWebdeploymentsDeploymentCobrowseSessionIDRequestTimeout() *DeleteWebdeploymentsDeploymentCobrowseSessionIDRequestTimeout {
	return &DeleteWebdeploymentsDeploymentCobrowseSessionIDRequestTimeout{}
}

/*
DeleteWebdeploymentsDeploymentCobrowseSessionIDRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type DeleteWebdeploymentsDeploymentCobrowseSessionIDRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete webdeployments deployment cobrowse session Id request timeout response has a 2xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete webdeployments deployment cobrowse session Id request timeout response has a 3xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete webdeployments deployment cobrowse session Id request timeout response has a 4xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete webdeployments deployment cobrowse session Id request timeout response has a 5xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this delete webdeployments deployment cobrowse session Id request timeout response a status code equal to that given
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDRequestTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] deleteWebdeploymentsDeploymentCobrowseSessionIdRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDRequestTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] deleteWebdeploymentsDeploymentCobrowseSessionIdRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteWebdeploymentsDeploymentCobrowseSessionIDRequestEntityTooLarge creates a DeleteWebdeploymentsDeploymentCobrowseSessionIDRequestEntityTooLarge with default headers values
func NewDeleteWebdeploymentsDeploymentCobrowseSessionIDRequestEntityTooLarge() *DeleteWebdeploymentsDeploymentCobrowseSessionIDRequestEntityTooLarge {
	return &DeleteWebdeploymentsDeploymentCobrowseSessionIDRequestEntityTooLarge{}
}

/*
DeleteWebdeploymentsDeploymentCobrowseSessionIDRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type DeleteWebdeploymentsDeploymentCobrowseSessionIDRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete webdeployments deployment cobrowse session Id request entity too large response has a 2xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete webdeployments deployment cobrowse session Id request entity too large response has a 3xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete webdeployments deployment cobrowse session Id request entity too large response has a 4xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete webdeployments deployment cobrowse session Id request entity too large response has a 5xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this delete webdeployments deployment cobrowse session Id request entity too large response a status code equal to that given
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] deleteWebdeploymentsDeploymentCobrowseSessionIdRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[DELETE /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] deleteWebdeploymentsDeploymentCobrowseSessionIdRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteWebdeploymentsDeploymentCobrowseSessionIDUnsupportedMediaType creates a DeleteWebdeploymentsDeploymentCobrowseSessionIDUnsupportedMediaType with default headers values
func NewDeleteWebdeploymentsDeploymentCobrowseSessionIDUnsupportedMediaType() *DeleteWebdeploymentsDeploymentCobrowseSessionIDUnsupportedMediaType {
	return &DeleteWebdeploymentsDeploymentCobrowseSessionIDUnsupportedMediaType{}
}

/*
DeleteWebdeploymentsDeploymentCobrowseSessionIDUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type DeleteWebdeploymentsDeploymentCobrowseSessionIDUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete webdeployments deployment cobrowse session Id unsupported media type response has a 2xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete webdeployments deployment cobrowse session Id unsupported media type response has a 3xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete webdeployments deployment cobrowse session Id unsupported media type response has a 4xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete webdeployments deployment cobrowse session Id unsupported media type response has a 5xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this delete webdeployments deployment cobrowse session Id unsupported media type response a status code equal to that given
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] deleteWebdeploymentsDeploymentCobrowseSessionIdUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDUnsupportedMediaType) String() string {
	return fmt.Sprintf("[DELETE /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] deleteWebdeploymentsDeploymentCobrowseSessionIdUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteWebdeploymentsDeploymentCobrowseSessionIDTooManyRequests creates a DeleteWebdeploymentsDeploymentCobrowseSessionIDTooManyRequests with default headers values
func NewDeleteWebdeploymentsDeploymentCobrowseSessionIDTooManyRequests() *DeleteWebdeploymentsDeploymentCobrowseSessionIDTooManyRequests {
	return &DeleteWebdeploymentsDeploymentCobrowseSessionIDTooManyRequests{}
}

/*
DeleteWebdeploymentsDeploymentCobrowseSessionIDTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type DeleteWebdeploymentsDeploymentCobrowseSessionIDTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete webdeployments deployment cobrowse session Id too many requests response has a 2xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete webdeployments deployment cobrowse session Id too many requests response has a 3xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete webdeployments deployment cobrowse session Id too many requests response has a 4xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete webdeployments deployment cobrowse session Id too many requests response has a 5xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete webdeployments deployment cobrowse session Id too many requests response a status code equal to that given
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] deleteWebdeploymentsDeploymentCobrowseSessionIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] deleteWebdeploymentsDeploymentCobrowseSessionIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteWebdeploymentsDeploymentCobrowseSessionIDInternalServerError creates a DeleteWebdeploymentsDeploymentCobrowseSessionIDInternalServerError with default headers values
func NewDeleteWebdeploymentsDeploymentCobrowseSessionIDInternalServerError() *DeleteWebdeploymentsDeploymentCobrowseSessionIDInternalServerError {
	return &DeleteWebdeploymentsDeploymentCobrowseSessionIDInternalServerError{}
}

/*
DeleteWebdeploymentsDeploymentCobrowseSessionIDInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type DeleteWebdeploymentsDeploymentCobrowseSessionIDInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete webdeployments deployment cobrowse session Id internal server error response has a 2xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete webdeployments deployment cobrowse session Id internal server error response has a 3xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete webdeployments deployment cobrowse session Id internal server error response has a 4xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete webdeployments deployment cobrowse session Id internal server error response has a 5xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete webdeployments deployment cobrowse session Id internal server error response a status code equal to that given
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] deleteWebdeploymentsDeploymentCobrowseSessionIdInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] deleteWebdeploymentsDeploymentCobrowseSessionIdInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteWebdeploymentsDeploymentCobrowseSessionIDServiceUnavailable creates a DeleteWebdeploymentsDeploymentCobrowseSessionIDServiceUnavailable with default headers values
func NewDeleteWebdeploymentsDeploymentCobrowseSessionIDServiceUnavailable() *DeleteWebdeploymentsDeploymentCobrowseSessionIDServiceUnavailable {
	return &DeleteWebdeploymentsDeploymentCobrowseSessionIDServiceUnavailable{}
}

/*
DeleteWebdeploymentsDeploymentCobrowseSessionIDServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type DeleteWebdeploymentsDeploymentCobrowseSessionIDServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete webdeployments deployment cobrowse session Id service unavailable response has a 2xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete webdeployments deployment cobrowse session Id service unavailable response has a 3xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete webdeployments deployment cobrowse session Id service unavailable response has a 4xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete webdeployments deployment cobrowse session Id service unavailable response has a 5xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this delete webdeployments deployment cobrowse session Id service unavailable response a status code equal to that given
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] deleteWebdeploymentsDeploymentCobrowseSessionIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDServiceUnavailable) String() string {
	return fmt.Sprintf("[DELETE /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] deleteWebdeploymentsDeploymentCobrowseSessionIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteWebdeploymentsDeploymentCobrowseSessionIDGatewayTimeout creates a DeleteWebdeploymentsDeploymentCobrowseSessionIDGatewayTimeout with default headers values
func NewDeleteWebdeploymentsDeploymentCobrowseSessionIDGatewayTimeout() *DeleteWebdeploymentsDeploymentCobrowseSessionIDGatewayTimeout {
	return &DeleteWebdeploymentsDeploymentCobrowseSessionIDGatewayTimeout{}
}

/*
DeleteWebdeploymentsDeploymentCobrowseSessionIDGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type DeleteWebdeploymentsDeploymentCobrowseSessionIDGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete webdeployments deployment cobrowse session Id gateway timeout response has a 2xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete webdeployments deployment cobrowse session Id gateway timeout response has a 3xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete webdeployments deployment cobrowse session Id gateway timeout response has a 4xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete webdeployments deployment cobrowse session Id gateway timeout response has a 5xx status code
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this delete webdeployments deployment cobrowse session Id gateway timeout response a status code equal to that given
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] deleteWebdeploymentsDeploymentCobrowseSessionIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDGatewayTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] deleteWebdeploymentsDeploymentCobrowseSessionIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
