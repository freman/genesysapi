// Code generated by go-swagger; DO NOT EDIT.

package web_deployments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewDeleteWebdeploymentsTokenRevokeParams creates a new DeleteWebdeploymentsTokenRevokeParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDeleteWebdeploymentsTokenRevokeParams() *DeleteWebdeploymentsTokenRevokeParams {
	return &DeleteWebdeploymentsTokenRevokeParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteWebdeploymentsTokenRevokeParamsWithTimeout creates a new DeleteWebdeploymentsTokenRevokeParams object
// with the ability to set a timeout on a request.
func NewDeleteWebdeploymentsTokenRevokeParamsWithTimeout(timeout time.Duration) *DeleteWebdeploymentsTokenRevokeParams {
	return &DeleteWebdeploymentsTokenRevokeParams{
		timeout: timeout,
	}
}

// NewDeleteWebdeploymentsTokenRevokeParamsWithContext creates a new DeleteWebdeploymentsTokenRevokeParams object
// with the ability to set a context for a request.
func NewDeleteWebdeploymentsTokenRevokeParamsWithContext(ctx context.Context) *DeleteWebdeploymentsTokenRevokeParams {
	return &DeleteWebdeploymentsTokenRevokeParams{
		Context: ctx,
	}
}

// NewDeleteWebdeploymentsTokenRevokeParamsWithHTTPClient creates a new DeleteWebdeploymentsTokenRevokeParams object
// with the ability to set a custom HTTPClient for a request.
func NewDeleteWebdeploymentsTokenRevokeParamsWithHTTPClient(client *http.Client) *DeleteWebdeploymentsTokenRevokeParams {
	return &DeleteWebdeploymentsTokenRevokeParams{
		HTTPClient: client,
	}
}

/*
DeleteWebdeploymentsTokenRevokeParams contains all the parameters to send to the API endpoint

	for the delete webdeployments token revoke operation.

	Typically these are written to a http.Request.
*/
type DeleteWebdeploymentsTokenRevokeParams struct {

	/* XJourneySessionID.

	   The Customer's journey sessionId.
	*/
	XJourneySessionID *string

	/* XJourneySessionType.

	   The Customer's journey session type.
	*/
	XJourneySessionType *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the delete webdeployments token revoke params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteWebdeploymentsTokenRevokeParams) WithDefaults() *DeleteWebdeploymentsTokenRevokeParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the delete webdeployments token revoke params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteWebdeploymentsTokenRevokeParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the delete webdeployments token revoke params
func (o *DeleteWebdeploymentsTokenRevokeParams) WithTimeout(timeout time.Duration) *DeleteWebdeploymentsTokenRevokeParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete webdeployments token revoke params
func (o *DeleteWebdeploymentsTokenRevokeParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete webdeployments token revoke params
func (o *DeleteWebdeploymentsTokenRevokeParams) WithContext(ctx context.Context) *DeleteWebdeploymentsTokenRevokeParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete webdeployments token revoke params
func (o *DeleteWebdeploymentsTokenRevokeParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete webdeployments token revoke params
func (o *DeleteWebdeploymentsTokenRevokeParams) WithHTTPClient(client *http.Client) *DeleteWebdeploymentsTokenRevokeParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete webdeployments token revoke params
func (o *DeleteWebdeploymentsTokenRevokeParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithXJourneySessionID adds the xJourneySessionID to the delete webdeployments token revoke params
func (o *DeleteWebdeploymentsTokenRevokeParams) WithXJourneySessionID(xJourneySessionID *string) *DeleteWebdeploymentsTokenRevokeParams {
	o.SetXJourneySessionID(xJourneySessionID)
	return o
}

// SetXJourneySessionID adds the xJourneySessionId to the delete webdeployments token revoke params
func (o *DeleteWebdeploymentsTokenRevokeParams) SetXJourneySessionID(xJourneySessionID *string) {
	o.XJourneySessionID = xJourneySessionID
}

// WithXJourneySessionType adds the xJourneySessionType to the delete webdeployments token revoke params
func (o *DeleteWebdeploymentsTokenRevokeParams) WithXJourneySessionType(xJourneySessionType *string) *DeleteWebdeploymentsTokenRevokeParams {
	o.SetXJourneySessionType(xJourneySessionType)
	return o
}

// SetXJourneySessionType adds the xJourneySessionType to the delete webdeployments token revoke params
func (o *DeleteWebdeploymentsTokenRevokeParams) SetXJourneySessionType(xJourneySessionType *string) {
	o.XJourneySessionType = xJourneySessionType
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteWebdeploymentsTokenRevokeParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.XJourneySessionID != nil {

		// header param X-Journey-Session-Id
		if err := r.SetHeaderParam("X-Journey-Session-Id", *o.XJourneySessionID); err != nil {
			return err
		}
	}

	if o.XJourneySessionType != nil {

		// header param X-Journey-Session-Type
		if err := r.SetHeaderParam("X-Journey-Session-Type", *o.XJourneySessionType); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
