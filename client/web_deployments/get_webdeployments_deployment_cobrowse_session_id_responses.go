// Code generated by go-swagger; DO NOT EDIT.

package web_deployments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetWebdeploymentsDeploymentCobrowseSessionIDReader is a Reader for the GetWebdeploymentsDeploymentCobrowseSessionID structure.
type GetWebdeploymentsDeploymentCobrowseSessionIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetWebdeploymentsDeploymentCobrowseSessionIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetWebdeploymentsDeploymentCobrowseSessionIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetWebdeploymentsDeploymentCobrowseSessionIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetWebdeploymentsDeploymentCobrowseSessionIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetWebdeploymentsDeploymentCobrowseSessionIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetWebdeploymentsDeploymentCobrowseSessionIDRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetWebdeploymentsDeploymentCobrowseSessionIDRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetWebdeploymentsDeploymentCobrowseSessionIDUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetWebdeploymentsDeploymentCobrowseSessionIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetWebdeploymentsDeploymentCobrowseSessionIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetWebdeploymentsDeploymentCobrowseSessionIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetWebdeploymentsDeploymentCobrowseSessionIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetWebdeploymentsDeploymentCobrowseSessionIDOK creates a GetWebdeploymentsDeploymentCobrowseSessionIDOK with default headers values
func NewGetWebdeploymentsDeploymentCobrowseSessionIDOK() *GetWebdeploymentsDeploymentCobrowseSessionIDOK {
	return &GetWebdeploymentsDeploymentCobrowseSessionIDOK{}
}

/*
GetWebdeploymentsDeploymentCobrowseSessionIDOK describes a response with status code 200, with default header values.

successful operation
*/
type GetWebdeploymentsDeploymentCobrowseSessionIDOK struct {
	Payload *models.CobrowseWebMessagingSession
}

// IsSuccess returns true when this get webdeployments deployment cobrowse session Id o k response has a 2xx status code
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get webdeployments deployment cobrowse session Id o k response has a 3xx status code
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get webdeployments deployment cobrowse session Id o k response has a 4xx status code
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get webdeployments deployment cobrowse session Id o k response has a 5xx status code
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get webdeployments deployment cobrowse session Id o k response a status code equal to that given
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetWebdeploymentsDeploymentCobrowseSessionIDOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] getWebdeploymentsDeploymentCobrowseSessionIdOK  %+v", 200, o.Payload)
}

func (o *GetWebdeploymentsDeploymentCobrowseSessionIDOK) String() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] getWebdeploymentsDeploymentCobrowseSessionIdOK  %+v", 200, o.Payload)
}

func (o *GetWebdeploymentsDeploymentCobrowseSessionIDOK) GetPayload() *models.CobrowseWebMessagingSession {
	return o.Payload
}

func (o *GetWebdeploymentsDeploymentCobrowseSessionIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CobrowseWebMessagingSession)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebdeploymentsDeploymentCobrowseSessionIDBadRequest creates a GetWebdeploymentsDeploymentCobrowseSessionIDBadRequest with default headers values
func NewGetWebdeploymentsDeploymentCobrowseSessionIDBadRequest() *GetWebdeploymentsDeploymentCobrowseSessionIDBadRequest {
	return &GetWebdeploymentsDeploymentCobrowseSessionIDBadRequest{}
}

/*
GetWebdeploymentsDeploymentCobrowseSessionIDBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetWebdeploymentsDeploymentCobrowseSessionIDBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get webdeployments deployment cobrowse session Id bad request response has a 2xx status code
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get webdeployments deployment cobrowse session Id bad request response has a 3xx status code
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get webdeployments deployment cobrowse session Id bad request response has a 4xx status code
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get webdeployments deployment cobrowse session Id bad request response has a 5xx status code
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get webdeployments deployment cobrowse session Id bad request response a status code equal to that given
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetWebdeploymentsDeploymentCobrowseSessionIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] getWebdeploymentsDeploymentCobrowseSessionIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetWebdeploymentsDeploymentCobrowseSessionIDBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] getWebdeploymentsDeploymentCobrowseSessionIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetWebdeploymentsDeploymentCobrowseSessionIDBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebdeploymentsDeploymentCobrowseSessionIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebdeploymentsDeploymentCobrowseSessionIDUnauthorized creates a GetWebdeploymentsDeploymentCobrowseSessionIDUnauthorized with default headers values
func NewGetWebdeploymentsDeploymentCobrowseSessionIDUnauthorized() *GetWebdeploymentsDeploymentCobrowseSessionIDUnauthorized {
	return &GetWebdeploymentsDeploymentCobrowseSessionIDUnauthorized{}
}

/*
GetWebdeploymentsDeploymentCobrowseSessionIDUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetWebdeploymentsDeploymentCobrowseSessionIDUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get webdeployments deployment cobrowse session Id unauthorized response has a 2xx status code
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get webdeployments deployment cobrowse session Id unauthorized response has a 3xx status code
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get webdeployments deployment cobrowse session Id unauthorized response has a 4xx status code
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get webdeployments deployment cobrowse session Id unauthorized response has a 5xx status code
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get webdeployments deployment cobrowse session Id unauthorized response a status code equal to that given
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetWebdeploymentsDeploymentCobrowseSessionIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] getWebdeploymentsDeploymentCobrowseSessionIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetWebdeploymentsDeploymentCobrowseSessionIDUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] getWebdeploymentsDeploymentCobrowseSessionIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetWebdeploymentsDeploymentCobrowseSessionIDUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebdeploymentsDeploymentCobrowseSessionIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebdeploymentsDeploymentCobrowseSessionIDForbidden creates a GetWebdeploymentsDeploymentCobrowseSessionIDForbidden with default headers values
func NewGetWebdeploymentsDeploymentCobrowseSessionIDForbidden() *GetWebdeploymentsDeploymentCobrowseSessionIDForbidden {
	return &GetWebdeploymentsDeploymentCobrowseSessionIDForbidden{}
}

/*
GetWebdeploymentsDeploymentCobrowseSessionIDForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetWebdeploymentsDeploymentCobrowseSessionIDForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get webdeployments deployment cobrowse session Id forbidden response has a 2xx status code
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get webdeployments deployment cobrowse session Id forbidden response has a 3xx status code
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get webdeployments deployment cobrowse session Id forbidden response has a 4xx status code
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get webdeployments deployment cobrowse session Id forbidden response has a 5xx status code
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get webdeployments deployment cobrowse session Id forbidden response a status code equal to that given
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetWebdeploymentsDeploymentCobrowseSessionIDForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] getWebdeploymentsDeploymentCobrowseSessionIdForbidden  %+v", 403, o.Payload)
}

func (o *GetWebdeploymentsDeploymentCobrowseSessionIDForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] getWebdeploymentsDeploymentCobrowseSessionIdForbidden  %+v", 403, o.Payload)
}

func (o *GetWebdeploymentsDeploymentCobrowseSessionIDForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebdeploymentsDeploymentCobrowseSessionIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebdeploymentsDeploymentCobrowseSessionIDNotFound creates a GetWebdeploymentsDeploymentCobrowseSessionIDNotFound with default headers values
func NewGetWebdeploymentsDeploymentCobrowseSessionIDNotFound() *GetWebdeploymentsDeploymentCobrowseSessionIDNotFound {
	return &GetWebdeploymentsDeploymentCobrowseSessionIDNotFound{}
}

/*
GetWebdeploymentsDeploymentCobrowseSessionIDNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetWebdeploymentsDeploymentCobrowseSessionIDNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get webdeployments deployment cobrowse session Id not found response has a 2xx status code
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get webdeployments deployment cobrowse session Id not found response has a 3xx status code
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get webdeployments deployment cobrowse session Id not found response has a 4xx status code
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get webdeployments deployment cobrowse session Id not found response has a 5xx status code
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get webdeployments deployment cobrowse session Id not found response a status code equal to that given
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetWebdeploymentsDeploymentCobrowseSessionIDNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] getWebdeploymentsDeploymentCobrowseSessionIdNotFound  %+v", 404, o.Payload)
}

func (o *GetWebdeploymentsDeploymentCobrowseSessionIDNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] getWebdeploymentsDeploymentCobrowseSessionIdNotFound  %+v", 404, o.Payload)
}

func (o *GetWebdeploymentsDeploymentCobrowseSessionIDNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebdeploymentsDeploymentCobrowseSessionIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebdeploymentsDeploymentCobrowseSessionIDRequestTimeout creates a GetWebdeploymentsDeploymentCobrowseSessionIDRequestTimeout with default headers values
func NewGetWebdeploymentsDeploymentCobrowseSessionIDRequestTimeout() *GetWebdeploymentsDeploymentCobrowseSessionIDRequestTimeout {
	return &GetWebdeploymentsDeploymentCobrowseSessionIDRequestTimeout{}
}

/*
GetWebdeploymentsDeploymentCobrowseSessionIDRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetWebdeploymentsDeploymentCobrowseSessionIDRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get webdeployments deployment cobrowse session Id request timeout response has a 2xx status code
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get webdeployments deployment cobrowse session Id request timeout response has a 3xx status code
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get webdeployments deployment cobrowse session Id request timeout response has a 4xx status code
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get webdeployments deployment cobrowse session Id request timeout response has a 5xx status code
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get webdeployments deployment cobrowse session Id request timeout response a status code equal to that given
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetWebdeploymentsDeploymentCobrowseSessionIDRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] getWebdeploymentsDeploymentCobrowseSessionIdRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetWebdeploymentsDeploymentCobrowseSessionIDRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] getWebdeploymentsDeploymentCobrowseSessionIdRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetWebdeploymentsDeploymentCobrowseSessionIDRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebdeploymentsDeploymentCobrowseSessionIDRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebdeploymentsDeploymentCobrowseSessionIDRequestEntityTooLarge creates a GetWebdeploymentsDeploymentCobrowseSessionIDRequestEntityTooLarge with default headers values
func NewGetWebdeploymentsDeploymentCobrowseSessionIDRequestEntityTooLarge() *GetWebdeploymentsDeploymentCobrowseSessionIDRequestEntityTooLarge {
	return &GetWebdeploymentsDeploymentCobrowseSessionIDRequestEntityTooLarge{}
}

/*
GetWebdeploymentsDeploymentCobrowseSessionIDRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetWebdeploymentsDeploymentCobrowseSessionIDRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get webdeployments deployment cobrowse session Id request entity too large response has a 2xx status code
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get webdeployments deployment cobrowse session Id request entity too large response has a 3xx status code
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get webdeployments deployment cobrowse session Id request entity too large response has a 4xx status code
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get webdeployments deployment cobrowse session Id request entity too large response has a 5xx status code
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get webdeployments deployment cobrowse session Id request entity too large response a status code equal to that given
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetWebdeploymentsDeploymentCobrowseSessionIDRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] getWebdeploymentsDeploymentCobrowseSessionIdRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetWebdeploymentsDeploymentCobrowseSessionIDRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] getWebdeploymentsDeploymentCobrowseSessionIdRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetWebdeploymentsDeploymentCobrowseSessionIDRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebdeploymentsDeploymentCobrowseSessionIDRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebdeploymentsDeploymentCobrowseSessionIDUnsupportedMediaType creates a GetWebdeploymentsDeploymentCobrowseSessionIDUnsupportedMediaType with default headers values
func NewGetWebdeploymentsDeploymentCobrowseSessionIDUnsupportedMediaType() *GetWebdeploymentsDeploymentCobrowseSessionIDUnsupportedMediaType {
	return &GetWebdeploymentsDeploymentCobrowseSessionIDUnsupportedMediaType{}
}

/*
GetWebdeploymentsDeploymentCobrowseSessionIDUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetWebdeploymentsDeploymentCobrowseSessionIDUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get webdeployments deployment cobrowse session Id unsupported media type response has a 2xx status code
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get webdeployments deployment cobrowse session Id unsupported media type response has a 3xx status code
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get webdeployments deployment cobrowse session Id unsupported media type response has a 4xx status code
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get webdeployments deployment cobrowse session Id unsupported media type response has a 5xx status code
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get webdeployments deployment cobrowse session Id unsupported media type response a status code equal to that given
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetWebdeploymentsDeploymentCobrowseSessionIDUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] getWebdeploymentsDeploymentCobrowseSessionIdUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetWebdeploymentsDeploymentCobrowseSessionIDUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] getWebdeploymentsDeploymentCobrowseSessionIdUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetWebdeploymentsDeploymentCobrowseSessionIDUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebdeploymentsDeploymentCobrowseSessionIDUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebdeploymentsDeploymentCobrowseSessionIDTooManyRequests creates a GetWebdeploymentsDeploymentCobrowseSessionIDTooManyRequests with default headers values
func NewGetWebdeploymentsDeploymentCobrowseSessionIDTooManyRequests() *GetWebdeploymentsDeploymentCobrowseSessionIDTooManyRequests {
	return &GetWebdeploymentsDeploymentCobrowseSessionIDTooManyRequests{}
}

/*
GetWebdeploymentsDeploymentCobrowseSessionIDTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetWebdeploymentsDeploymentCobrowseSessionIDTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get webdeployments deployment cobrowse session Id too many requests response has a 2xx status code
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get webdeployments deployment cobrowse session Id too many requests response has a 3xx status code
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get webdeployments deployment cobrowse session Id too many requests response has a 4xx status code
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get webdeployments deployment cobrowse session Id too many requests response has a 5xx status code
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get webdeployments deployment cobrowse session Id too many requests response a status code equal to that given
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetWebdeploymentsDeploymentCobrowseSessionIDTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] getWebdeploymentsDeploymentCobrowseSessionIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetWebdeploymentsDeploymentCobrowseSessionIDTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] getWebdeploymentsDeploymentCobrowseSessionIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetWebdeploymentsDeploymentCobrowseSessionIDTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebdeploymentsDeploymentCobrowseSessionIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebdeploymentsDeploymentCobrowseSessionIDInternalServerError creates a GetWebdeploymentsDeploymentCobrowseSessionIDInternalServerError with default headers values
func NewGetWebdeploymentsDeploymentCobrowseSessionIDInternalServerError() *GetWebdeploymentsDeploymentCobrowseSessionIDInternalServerError {
	return &GetWebdeploymentsDeploymentCobrowseSessionIDInternalServerError{}
}

/*
GetWebdeploymentsDeploymentCobrowseSessionIDInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetWebdeploymentsDeploymentCobrowseSessionIDInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get webdeployments deployment cobrowse session Id internal server error response has a 2xx status code
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get webdeployments deployment cobrowse session Id internal server error response has a 3xx status code
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get webdeployments deployment cobrowse session Id internal server error response has a 4xx status code
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get webdeployments deployment cobrowse session Id internal server error response has a 5xx status code
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get webdeployments deployment cobrowse session Id internal server error response a status code equal to that given
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetWebdeploymentsDeploymentCobrowseSessionIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] getWebdeploymentsDeploymentCobrowseSessionIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetWebdeploymentsDeploymentCobrowseSessionIDInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] getWebdeploymentsDeploymentCobrowseSessionIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetWebdeploymentsDeploymentCobrowseSessionIDInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebdeploymentsDeploymentCobrowseSessionIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebdeploymentsDeploymentCobrowseSessionIDServiceUnavailable creates a GetWebdeploymentsDeploymentCobrowseSessionIDServiceUnavailable with default headers values
func NewGetWebdeploymentsDeploymentCobrowseSessionIDServiceUnavailable() *GetWebdeploymentsDeploymentCobrowseSessionIDServiceUnavailable {
	return &GetWebdeploymentsDeploymentCobrowseSessionIDServiceUnavailable{}
}

/*
GetWebdeploymentsDeploymentCobrowseSessionIDServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetWebdeploymentsDeploymentCobrowseSessionIDServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get webdeployments deployment cobrowse session Id service unavailable response has a 2xx status code
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get webdeployments deployment cobrowse session Id service unavailable response has a 3xx status code
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get webdeployments deployment cobrowse session Id service unavailable response has a 4xx status code
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get webdeployments deployment cobrowse session Id service unavailable response has a 5xx status code
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get webdeployments deployment cobrowse session Id service unavailable response a status code equal to that given
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetWebdeploymentsDeploymentCobrowseSessionIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] getWebdeploymentsDeploymentCobrowseSessionIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetWebdeploymentsDeploymentCobrowseSessionIDServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] getWebdeploymentsDeploymentCobrowseSessionIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetWebdeploymentsDeploymentCobrowseSessionIDServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebdeploymentsDeploymentCobrowseSessionIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebdeploymentsDeploymentCobrowseSessionIDGatewayTimeout creates a GetWebdeploymentsDeploymentCobrowseSessionIDGatewayTimeout with default headers values
func NewGetWebdeploymentsDeploymentCobrowseSessionIDGatewayTimeout() *GetWebdeploymentsDeploymentCobrowseSessionIDGatewayTimeout {
	return &GetWebdeploymentsDeploymentCobrowseSessionIDGatewayTimeout{}
}

/*
GetWebdeploymentsDeploymentCobrowseSessionIDGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetWebdeploymentsDeploymentCobrowseSessionIDGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get webdeployments deployment cobrowse session Id gateway timeout response has a 2xx status code
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get webdeployments deployment cobrowse session Id gateway timeout response has a 3xx status code
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get webdeployments deployment cobrowse session Id gateway timeout response has a 4xx status code
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get webdeployments deployment cobrowse session Id gateway timeout response has a 5xx status code
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get webdeployments deployment cobrowse session Id gateway timeout response a status code equal to that given
func (o *GetWebdeploymentsDeploymentCobrowseSessionIDGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetWebdeploymentsDeploymentCobrowseSessionIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] getWebdeploymentsDeploymentCobrowseSessionIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetWebdeploymentsDeploymentCobrowseSessionIDGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}][%d] getWebdeploymentsDeploymentCobrowseSessionIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetWebdeploymentsDeploymentCobrowseSessionIDGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebdeploymentsDeploymentCobrowseSessionIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
