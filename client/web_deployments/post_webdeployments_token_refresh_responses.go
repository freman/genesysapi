// Code generated by go-swagger; DO NOT EDIT.

package web_deployments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostWebdeploymentsTokenRefreshReader is a Reader for the PostWebdeploymentsTokenRefresh structure.
type PostWebdeploymentsTokenRefreshReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostWebdeploymentsTokenRefreshReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostWebdeploymentsTokenRefreshOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostWebdeploymentsTokenRefreshBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostWebdeploymentsTokenRefreshUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostWebdeploymentsTokenRefreshForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostWebdeploymentsTokenRefreshNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostWebdeploymentsTokenRefreshRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostWebdeploymentsTokenRefreshRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostWebdeploymentsTokenRefreshUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostWebdeploymentsTokenRefreshTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostWebdeploymentsTokenRefreshInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostWebdeploymentsTokenRefreshServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostWebdeploymentsTokenRefreshGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostWebdeploymentsTokenRefreshOK creates a PostWebdeploymentsTokenRefreshOK with default headers values
func NewPostWebdeploymentsTokenRefreshOK() *PostWebdeploymentsTokenRefreshOK {
	return &PostWebdeploymentsTokenRefreshOK{}
}

/*
PostWebdeploymentsTokenRefreshOK describes a response with status code 200, with default header values.

successful operation
*/
type PostWebdeploymentsTokenRefreshOK struct {
	Payload *models.SignedData
}

// IsSuccess returns true when this post webdeployments token refresh o k response has a 2xx status code
func (o *PostWebdeploymentsTokenRefreshOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post webdeployments token refresh o k response has a 3xx status code
func (o *PostWebdeploymentsTokenRefreshOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post webdeployments token refresh o k response has a 4xx status code
func (o *PostWebdeploymentsTokenRefreshOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post webdeployments token refresh o k response has a 5xx status code
func (o *PostWebdeploymentsTokenRefreshOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post webdeployments token refresh o k response a status code equal to that given
func (o *PostWebdeploymentsTokenRefreshOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostWebdeploymentsTokenRefreshOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/webdeployments/token/refresh][%d] postWebdeploymentsTokenRefreshOK  %+v", 200, o.Payload)
}

func (o *PostWebdeploymentsTokenRefreshOK) String() string {
	return fmt.Sprintf("[POST /api/v2/webdeployments/token/refresh][%d] postWebdeploymentsTokenRefreshOK  %+v", 200, o.Payload)
}

func (o *PostWebdeploymentsTokenRefreshOK) GetPayload() *models.SignedData {
	return o.Payload
}

func (o *PostWebdeploymentsTokenRefreshOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SignedData)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostWebdeploymentsTokenRefreshBadRequest creates a PostWebdeploymentsTokenRefreshBadRequest with default headers values
func NewPostWebdeploymentsTokenRefreshBadRequest() *PostWebdeploymentsTokenRefreshBadRequest {
	return &PostWebdeploymentsTokenRefreshBadRequest{}
}

/*
PostWebdeploymentsTokenRefreshBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostWebdeploymentsTokenRefreshBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post webdeployments token refresh bad request response has a 2xx status code
func (o *PostWebdeploymentsTokenRefreshBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post webdeployments token refresh bad request response has a 3xx status code
func (o *PostWebdeploymentsTokenRefreshBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post webdeployments token refresh bad request response has a 4xx status code
func (o *PostWebdeploymentsTokenRefreshBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post webdeployments token refresh bad request response has a 5xx status code
func (o *PostWebdeploymentsTokenRefreshBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post webdeployments token refresh bad request response a status code equal to that given
func (o *PostWebdeploymentsTokenRefreshBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostWebdeploymentsTokenRefreshBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/webdeployments/token/refresh][%d] postWebdeploymentsTokenRefreshBadRequest  %+v", 400, o.Payload)
}

func (o *PostWebdeploymentsTokenRefreshBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/webdeployments/token/refresh][%d] postWebdeploymentsTokenRefreshBadRequest  %+v", 400, o.Payload)
}

func (o *PostWebdeploymentsTokenRefreshBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostWebdeploymentsTokenRefreshBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostWebdeploymentsTokenRefreshUnauthorized creates a PostWebdeploymentsTokenRefreshUnauthorized with default headers values
func NewPostWebdeploymentsTokenRefreshUnauthorized() *PostWebdeploymentsTokenRefreshUnauthorized {
	return &PostWebdeploymentsTokenRefreshUnauthorized{}
}

/*
PostWebdeploymentsTokenRefreshUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostWebdeploymentsTokenRefreshUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post webdeployments token refresh unauthorized response has a 2xx status code
func (o *PostWebdeploymentsTokenRefreshUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post webdeployments token refresh unauthorized response has a 3xx status code
func (o *PostWebdeploymentsTokenRefreshUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post webdeployments token refresh unauthorized response has a 4xx status code
func (o *PostWebdeploymentsTokenRefreshUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post webdeployments token refresh unauthorized response has a 5xx status code
func (o *PostWebdeploymentsTokenRefreshUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post webdeployments token refresh unauthorized response a status code equal to that given
func (o *PostWebdeploymentsTokenRefreshUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostWebdeploymentsTokenRefreshUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/webdeployments/token/refresh][%d] postWebdeploymentsTokenRefreshUnauthorized  %+v", 401, o.Payload)
}

func (o *PostWebdeploymentsTokenRefreshUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/webdeployments/token/refresh][%d] postWebdeploymentsTokenRefreshUnauthorized  %+v", 401, o.Payload)
}

func (o *PostWebdeploymentsTokenRefreshUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostWebdeploymentsTokenRefreshUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostWebdeploymentsTokenRefreshForbidden creates a PostWebdeploymentsTokenRefreshForbidden with default headers values
func NewPostWebdeploymentsTokenRefreshForbidden() *PostWebdeploymentsTokenRefreshForbidden {
	return &PostWebdeploymentsTokenRefreshForbidden{}
}

/*
PostWebdeploymentsTokenRefreshForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostWebdeploymentsTokenRefreshForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post webdeployments token refresh forbidden response has a 2xx status code
func (o *PostWebdeploymentsTokenRefreshForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post webdeployments token refresh forbidden response has a 3xx status code
func (o *PostWebdeploymentsTokenRefreshForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post webdeployments token refresh forbidden response has a 4xx status code
func (o *PostWebdeploymentsTokenRefreshForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post webdeployments token refresh forbidden response has a 5xx status code
func (o *PostWebdeploymentsTokenRefreshForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post webdeployments token refresh forbidden response a status code equal to that given
func (o *PostWebdeploymentsTokenRefreshForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostWebdeploymentsTokenRefreshForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/webdeployments/token/refresh][%d] postWebdeploymentsTokenRefreshForbidden  %+v", 403, o.Payload)
}

func (o *PostWebdeploymentsTokenRefreshForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/webdeployments/token/refresh][%d] postWebdeploymentsTokenRefreshForbidden  %+v", 403, o.Payload)
}

func (o *PostWebdeploymentsTokenRefreshForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostWebdeploymentsTokenRefreshForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostWebdeploymentsTokenRefreshNotFound creates a PostWebdeploymentsTokenRefreshNotFound with default headers values
func NewPostWebdeploymentsTokenRefreshNotFound() *PostWebdeploymentsTokenRefreshNotFound {
	return &PostWebdeploymentsTokenRefreshNotFound{}
}

/*
PostWebdeploymentsTokenRefreshNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostWebdeploymentsTokenRefreshNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post webdeployments token refresh not found response has a 2xx status code
func (o *PostWebdeploymentsTokenRefreshNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post webdeployments token refresh not found response has a 3xx status code
func (o *PostWebdeploymentsTokenRefreshNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post webdeployments token refresh not found response has a 4xx status code
func (o *PostWebdeploymentsTokenRefreshNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post webdeployments token refresh not found response has a 5xx status code
func (o *PostWebdeploymentsTokenRefreshNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post webdeployments token refresh not found response a status code equal to that given
func (o *PostWebdeploymentsTokenRefreshNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostWebdeploymentsTokenRefreshNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/webdeployments/token/refresh][%d] postWebdeploymentsTokenRefreshNotFound  %+v", 404, o.Payload)
}

func (o *PostWebdeploymentsTokenRefreshNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/webdeployments/token/refresh][%d] postWebdeploymentsTokenRefreshNotFound  %+v", 404, o.Payload)
}

func (o *PostWebdeploymentsTokenRefreshNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostWebdeploymentsTokenRefreshNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostWebdeploymentsTokenRefreshRequestTimeout creates a PostWebdeploymentsTokenRefreshRequestTimeout with default headers values
func NewPostWebdeploymentsTokenRefreshRequestTimeout() *PostWebdeploymentsTokenRefreshRequestTimeout {
	return &PostWebdeploymentsTokenRefreshRequestTimeout{}
}

/*
PostWebdeploymentsTokenRefreshRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostWebdeploymentsTokenRefreshRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post webdeployments token refresh request timeout response has a 2xx status code
func (o *PostWebdeploymentsTokenRefreshRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post webdeployments token refresh request timeout response has a 3xx status code
func (o *PostWebdeploymentsTokenRefreshRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post webdeployments token refresh request timeout response has a 4xx status code
func (o *PostWebdeploymentsTokenRefreshRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post webdeployments token refresh request timeout response has a 5xx status code
func (o *PostWebdeploymentsTokenRefreshRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post webdeployments token refresh request timeout response a status code equal to that given
func (o *PostWebdeploymentsTokenRefreshRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostWebdeploymentsTokenRefreshRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/webdeployments/token/refresh][%d] postWebdeploymentsTokenRefreshRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostWebdeploymentsTokenRefreshRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/webdeployments/token/refresh][%d] postWebdeploymentsTokenRefreshRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostWebdeploymentsTokenRefreshRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostWebdeploymentsTokenRefreshRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostWebdeploymentsTokenRefreshRequestEntityTooLarge creates a PostWebdeploymentsTokenRefreshRequestEntityTooLarge with default headers values
func NewPostWebdeploymentsTokenRefreshRequestEntityTooLarge() *PostWebdeploymentsTokenRefreshRequestEntityTooLarge {
	return &PostWebdeploymentsTokenRefreshRequestEntityTooLarge{}
}

/*
PostWebdeploymentsTokenRefreshRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PostWebdeploymentsTokenRefreshRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post webdeployments token refresh request entity too large response has a 2xx status code
func (o *PostWebdeploymentsTokenRefreshRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post webdeployments token refresh request entity too large response has a 3xx status code
func (o *PostWebdeploymentsTokenRefreshRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post webdeployments token refresh request entity too large response has a 4xx status code
func (o *PostWebdeploymentsTokenRefreshRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post webdeployments token refresh request entity too large response has a 5xx status code
func (o *PostWebdeploymentsTokenRefreshRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post webdeployments token refresh request entity too large response a status code equal to that given
func (o *PostWebdeploymentsTokenRefreshRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostWebdeploymentsTokenRefreshRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/webdeployments/token/refresh][%d] postWebdeploymentsTokenRefreshRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostWebdeploymentsTokenRefreshRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/webdeployments/token/refresh][%d] postWebdeploymentsTokenRefreshRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostWebdeploymentsTokenRefreshRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostWebdeploymentsTokenRefreshRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostWebdeploymentsTokenRefreshUnsupportedMediaType creates a PostWebdeploymentsTokenRefreshUnsupportedMediaType with default headers values
func NewPostWebdeploymentsTokenRefreshUnsupportedMediaType() *PostWebdeploymentsTokenRefreshUnsupportedMediaType {
	return &PostWebdeploymentsTokenRefreshUnsupportedMediaType{}
}

/*
PostWebdeploymentsTokenRefreshUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostWebdeploymentsTokenRefreshUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post webdeployments token refresh unsupported media type response has a 2xx status code
func (o *PostWebdeploymentsTokenRefreshUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post webdeployments token refresh unsupported media type response has a 3xx status code
func (o *PostWebdeploymentsTokenRefreshUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post webdeployments token refresh unsupported media type response has a 4xx status code
func (o *PostWebdeploymentsTokenRefreshUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post webdeployments token refresh unsupported media type response has a 5xx status code
func (o *PostWebdeploymentsTokenRefreshUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post webdeployments token refresh unsupported media type response a status code equal to that given
func (o *PostWebdeploymentsTokenRefreshUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostWebdeploymentsTokenRefreshUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/webdeployments/token/refresh][%d] postWebdeploymentsTokenRefreshUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostWebdeploymentsTokenRefreshUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/webdeployments/token/refresh][%d] postWebdeploymentsTokenRefreshUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostWebdeploymentsTokenRefreshUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostWebdeploymentsTokenRefreshUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostWebdeploymentsTokenRefreshTooManyRequests creates a PostWebdeploymentsTokenRefreshTooManyRequests with default headers values
func NewPostWebdeploymentsTokenRefreshTooManyRequests() *PostWebdeploymentsTokenRefreshTooManyRequests {
	return &PostWebdeploymentsTokenRefreshTooManyRequests{}
}

/*
PostWebdeploymentsTokenRefreshTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostWebdeploymentsTokenRefreshTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post webdeployments token refresh too many requests response has a 2xx status code
func (o *PostWebdeploymentsTokenRefreshTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post webdeployments token refresh too many requests response has a 3xx status code
func (o *PostWebdeploymentsTokenRefreshTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post webdeployments token refresh too many requests response has a 4xx status code
func (o *PostWebdeploymentsTokenRefreshTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post webdeployments token refresh too many requests response has a 5xx status code
func (o *PostWebdeploymentsTokenRefreshTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post webdeployments token refresh too many requests response a status code equal to that given
func (o *PostWebdeploymentsTokenRefreshTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostWebdeploymentsTokenRefreshTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/webdeployments/token/refresh][%d] postWebdeploymentsTokenRefreshTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostWebdeploymentsTokenRefreshTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/webdeployments/token/refresh][%d] postWebdeploymentsTokenRefreshTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostWebdeploymentsTokenRefreshTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostWebdeploymentsTokenRefreshTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostWebdeploymentsTokenRefreshInternalServerError creates a PostWebdeploymentsTokenRefreshInternalServerError with default headers values
func NewPostWebdeploymentsTokenRefreshInternalServerError() *PostWebdeploymentsTokenRefreshInternalServerError {
	return &PostWebdeploymentsTokenRefreshInternalServerError{}
}

/*
PostWebdeploymentsTokenRefreshInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostWebdeploymentsTokenRefreshInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post webdeployments token refresh internal server error response has a 2xx status code
func (o *PostWebdeploymentsTokenRefreshInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post webdeployments token refresh internal server error response has a 3xx status code
func (o *PostWebdeploymentsTokenRefreshInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post webdeployments token refresh internal server error response has a 4xx status code
func (o *PostWebdeploymentsTokenRefreshInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post webdeployments token refresh internal server error response has a 5xx status code
func (o *PostWebdeploymentsTokenRefreshInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post webdeployments token refresh internal server error response a status code equal to that given
func (o *PostWebdeploymentsTokenRefreshInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostWebdeploymentsTokenRefreshInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/webdeployments/token/refresh][%d] postWebdeploymentsTokenRefreshInternalServerError  %+v", 500, o.Payload)
}

func (o *PostWebdeploymentsTokenRefreshInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/webdeployments/token/refresh][%d] postWebdeploymentsTokenRefreshInternalServerError  %+v", 500, o.Payload)
}

func (o *PostWebdeploymentsTokenRefreshInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostWebdeploymentsTokenRefreshInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostWebdeploymentsTokenRefreshServiceUnavailable creates a PostWebdeploymentsTokenRefreshServiceUnavailable with default headers values
func NewPostWebdeploymentsTokenRefreshServiceUnavailable() *PostWebdeploymentsTokenRefreshServiceUnavailable {
	return &PostWebdeploymentsTokenRefreshServiceUnavailable{}
}

/*
PostWebdeploymentsTokenRefreshServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostWebdeploymentsTokenRefreshServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post webdeployments token refresh service unavailable response has a 2xx status code
func (o *PostWebdeploymentsTokenRefreshServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post webdeployments token refresh service unavailable response has a 3xx status code
func (o *PostWebdeploymentsTokenRefreshServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post webdeployments token refresh service unavailable response has a 4xx status code
func (o *PostWebdeploymentsTokenRefreshServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post webdeployments token refresh service unavailable response has a 5xx status code
func (o *PostWebdeploymentsTokenRefreshServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post webdeployments token refresh service unavailable response a status code equal to that given
func (o *PostWebdeploymentsTokenRefreshServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostWebdeploymentsTokenRefreshServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/webdeployments/token/refresh][%d] postWebdeploymentsTokenRefreshServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostWebdeploymentsTokenRefreshServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/webdeployments/token/refresh][%d] postWebdeploymentsTokenRefreshServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostWebdeploymentsTokenRefreshServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostWebdeploymentsTokenRefreshServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostWebdeploymentsTokenRefreshGatewayTimeout creates a PostWebdeploymentsTokenRefreshGatewayTimeout with default headers values
func NewPostWebdeploymentsTokenRefreshGatewayTimeout() *PostWebdeploymentsTokenRefreshGatewayTimeout {
	return &PostWebdeploymentsTokenRefreshGatewayTimeout{}
}

/*
PostWebdeploymentsTokenRefreshGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostWebdeploymentsTokenRefreshGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post webdeployments token refresh gateway timeout response has a 2xx status code
func (o *PostWebdeploymentsTokenRefreshGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post webdeployments token refresh gateway timeout response has a 3xx status code
func (o *PostWebdeploymentsTokenRefreshGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post webdeployments token refresh gateway timeout response has a 4xx status code
func (o *PostWebdeploymentsTokenRefreshGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post webdeployments token refresh gateway timeout response has a 5xx status code
func (o *PostWebdeploymentsTokenRefreshGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post webdeployments token refresh gateway timeout response a status code equal to that given
func (o *PostWebdeploymentsTokenRefreshGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostWebdeploymentsTokenRefreshGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/webdeployments/token/refresh][%d] postWebdeploymentsTokenRefreshGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostWebdeploymentsTokenRefreshGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/webdeployments/token/refresh][%d] postWebdeploymentsTokenRefreshGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostWebdeploymentsTokenRefreshGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostWebdeploymentsTokenRefreshGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
