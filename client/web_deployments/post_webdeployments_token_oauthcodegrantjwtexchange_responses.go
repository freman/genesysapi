// Code generated by go-swagger; DO NOT EDIT.

package web_deployments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostWebdeploymentsTokenOauthcodegrantjwtexchangeReader is a Reader for the PostWebdeploymentsTokenOauthcodegrantjwtexchange structure.
type PostWebdeploymentsTokenOauthcodegrantjwtexchangeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostWebdeploymentsTokenOauthcodegrantjwtexchangeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostWebdeploymentsTokenOauthcodegrantjwtexchangeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostWebdeploymentsTokenOauthcodegrantjwtexchangeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostWebdeploymentsTokenOauthcodegrantjwtexchangeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostWebdeploymentsTokenOauthcodegrantjwtexchangeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostWebdeploymentsTokenOauthcodegrantjwtexchangeRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostWebdeploymentsTokenOauthcodegrantjwtexchangeRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostWebdeploymentsTokenOauthcodegrantjwtexchangeUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostWebdeploymentsTokenOauthcodegrantjwtexchangeTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostWebdeploymentsTokenOauthcodegrantjwtexchangeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostWebdeploymentsTokenOauthcodegrantjwtexchangeServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostWebdeploymentsTokenOauthcodegrantjwtexchangeGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostWebdeploymentsTokenOauthcodegrantjwtexchangeOK creates a PostWebdeploymentsTokenOauthcodegrantjwtexchangeOK with default headers values
func NewPostWebdeploymentsTokenOauthcodegrantjwtexchangeOK() *PostWebdeploymentsTokenOauthcodegrantjwtexchangeOK {
	return &PostWebdeploymentsTokenOauthcodegrantjwtexchangeOK{}
}

/*
PostWebdeploymentsTokenOauthcodegrantjwtexchangeOK describes a response with status code 200, with default header values.

successful operation
*/
type PostWebdeploymentsTokenOauthcodegrantjwtexchangeOK struct {
	Payload *models.WebDeploymentsAuthorizationResponse
}

// IsSuccess returns true when this post webdeployments token oauthcodegrantjwtexchange o k response has a 2xx status code
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post webdeployments token oauthcodegrantjwtexchange o k response has a 3xx status code
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post webdeployments token oauthcodegrantjwtexchange o k response has a 4xx status code
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post webdeployments token oauthcodegrantjwtexchange o k response has a 5xx status code
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post webdeployments token oauthcodegrantjwtexchange o k response a status code equal to that given
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/webdeployments/token/oauthcodegrantjwtexchange][%d] postWebdeploymentsTokenOauthcodegrantjwtexchangeOK  %+v", 200, o.Payload)
}

func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeOK) String() string {
	return fmt.Sprintf("[POST /api/v2/webdeployments/token/oauthcodegrantjwtexchange][%d] postWebdeploymentsTokenOauthcodegrantjwtexchangeOK  %+v", 200, o.Payload)
}

func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeOK) GetPayload() *models.WebDeploymentsAuthorizationResponse {
	return o.Payload
}

func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WebDeploymentsAuthorizationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostWebdeploymentsTokenOauthcodegrantjwtexchangeBadRequest creates a PostWebdeploymentsTokenOauthcodegrantjwtexchangeBadRequest with default headers values
func NewPostWebdeploymentsTokenOauthcodegrantjwtexchangeBadRequest() *PostWebdeploymentsTokenOauthcodegrantjwtexchangeBadRequest {
	return &PostWebdeploymentsTokenOauthcodegrantjwtexchangeBadRequest{}
}

/*
PostWebdeploymentsTokenOauthcodegrantjwtexchangeBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostWebdeploymentsTokenOauthcodegrantjwtexchangeBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post webdeployments token oauthcodegrantjwtexchange bad request response has a 2xx status code
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post webdeployments token oauthcodegrantjwtexchange bad request response has a 3xx status code
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post webdeployments token oauthcodegrantjwtexchange bad request response has a 4xx status code
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post webdeployments token oauthcodegrantjwtexchange bad request response has a 5xx status code
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post webdeployments token oauthcodegrantjwtexchange bad request response a status code equal to that given
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/webdeployments/token/oauthcodegrantjwtexchange][%d] postWebdeploymentsTokenOauthcodegrantjwtexchangeBadRequest  %+v", 400, o.Payload)
}

func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/webdeployments/token/oauthcodegrantjwtexchange][%d] postWebdeploymentsTokenOauthcodegrantjwtexchangeBadRequest  %+v", 400, o.Payload)
}

func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostWebdeploymentsTokenOauthcodegrantjwtexchangeUnauthorized creates a PostWebdeploymentsTokenOauthcodegrantjwtexchangeUnauthorized with default headers values
func NewPostWebdeploymentsTokenOauthcodegrantjwtexchangeUnauthorized() *PostWebdeploymentsTokenOauthcodegrantjwtexchangeUnauthorized {
	return &PostWebdeploymentsTokenOauthcodegrantjwtexchangeUnauthorized{}
}

/*
PostWebdeploymentsTokenOauthcodegrantjwtexchangeUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostWebdeploymentsTokenOauthcodegrantjwtexchangeUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post webdeployments token oauthcodegrantjwtexchange unauthorized response has a 2xx status code
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post webdeployments token oauthcodegrantjwtexchange unauthorized response has a 3xx status code
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post webdeployments token oauthcodegrantjwtexchange unauthorized response has a 4xx status code
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post webdeployments token oauthcodegrantjwtexchange unauthorized response has a 5xx status code
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post webdeployments token oauthcodegrantjwtexchange unauthorized response a status code equal to that given
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/webdeployments/token/oauthcodegrantjwtexchange][%d] postWebdeploymentsTokenOauthcodegrantjwtexchangeUnauthorized  %+v", 401, o.Payload)
}

func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/webdeployments/token/oauthcodegrantjwtexchange][%d] postWebdeploymentsTokenOauthcodegrantjwtexchangeUnauthorized  %+v", 401, o.Payload)
}

func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostWebdeploymentsTokenOauthcodegrantjwtexchangeForbidden creates a PostWebdeploymentsTokenOauthcodegrantjwtexchangeForbidden with default headers values
func NewPostWebdeploymentsTokenOauthcodegrantjwtexchangeForbidden() *PostWebdeploymentsTokenOauthcodegrantjwtexchangeForbidden {
	return &PostWebdeploymentsTokenOauthcodegrantjwtexchangeForbidden{}
}

/*
PostWebdeploymentsTokenOauthcodegrantjwtexchangeForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostWebdeploymentsTokenOauthcodegrantjwtexchangeForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post webdeployments token oauthcodegrantjwtexchange forbidden response has a 2xx status code
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post webdeployments token oauthcodegrantjwtexchange forbidden response has a 3xx status code
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post webdeployments token oauthcodegrantjwtexchange forbidden response has a 4xx status code
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post webdeployments token oauthcodegrantjwtexchange forbidden response has a 5xx status code
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post webdeployments token oauthcodegrantjwtexchange forbidden response a status code equal to that given
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/webdeployments/token/oauthcodegrantjwtexchange][%d] postWebdeploymentsTokenOauthcodegrantjwtexchangeForbidden  %+v", 403, o.Payload)
}

func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/webdeployments/token/oauthcodegrantjwtexchange][%d] postWebdeploymentsTokenOauthcodegrantjwtexchangeForbidden  %+v", 403, o.Payload)
}

func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostWebdeploymentsTokenOauthcodegrantjwtexchangeNotFound creates a PostWebdeploymentsTokenOauthcodegrantjwtexchangeNotFound with default headers values
func NewPostWebdeploymentsTokenOauthcodegrantjwtexchangeNotFound() *PostWebdeploymentsTokenOauthcodegrantjwtexchangeNotFound {
	return &PostWebdeploymentsTokenOauthcodegrantjwtexchangeNotFound{}
}

/*
PostWebdeploymentsTokenOauthcodegrantjwtexchangeNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostWebdeploymentsTokenOauthcodegrantjwtexchangeNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post webdeployments token oauthcodegrantjwtexchange not found response has a 2xx status code
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post webdeployments token oauthcodegrantjwtexchange not found response has a 3xx status code
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post webdeployments token oauthcodegrantjwtexchange not found response has a 4xx status code
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post webdeployments token oauthcodegrantjwtexchange not found response has a 5xx status code
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post webdeployments token oauthcodegrantjwtexchange not found response a status code equal to that given
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/webdeployments/token/oauthcodegrantjwtexchange][%d] postWebdeploymentsTokenOauthcodegrantjwtexchangeNotFound  %+v", 404, o.Payload)
}

func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/webdeployments/token/oauthcodegrantjwtexchange][%d] postWebdeploymentsTokenOauthcodegrantjwtexchangeNotFound  %+v", 404, o.Payload)
}

func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostWebdeploymentsTokenOauthcodegrantjwtexchangeRequestTimeout creates a PostWebdeploymentsTokenOauthcodegrantjwtexchangeRequestTimeout with default headers values
func NewPostWebdeploymentsTokenOauthcodegrantjwtexchangeRequestTimeout() *PostWebdeploymentsTokenOauthcodegrantjwtexchangeRequestTimeout {
	return &PostWebdeploymentsTokenOauthcodegrantjwtexchangeRequestTimeout{}
}

/*
PostWebdeploymentsTokenOauthcodegrantjwtexchangeRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostWebdeploymentsTokenOauthcodegrantjwtexchangeRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post webdeployments token oauthcodegrantjwtexchange request timeout response has a 2xx status code
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post webdeployments token oauthcodegrantjwtexchange request timeout response has a 3xx status code
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post webdeployments token oauthcodegrantjwtexchange request timeout response has a 4xx status code
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post webdeployments token oauthcodegrantjwtexchange request timeout response has a 5xx status code
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post webdeployments token oauthcodegrantjwtexchange request timeout response a status code equal to that given
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/webdeployments/token/oauthcodegrantjwtexchange][%d] postWebdeploymentsTokenOauthcodegrantjwtexchangeRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/webdeployments/token/oauthcodegrantjwtexchange][%d] postWebdeploymentsTokenOauthcodegrantjwtexchangeRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostWebdeploymentsTokenOauthcodegrantjwtexchangeRequestEntityTooLarge creates a PostWebdeploymentsTokenOauthcodegrantjwtexchangeRequestEntityTooLarge with default headers values
func NewPostWebdeploymentsTokenOauthcodegrantjwtexchangeRequestEntityTooLarge() *PostWebdeploymentsTokenOauthcodegrantjwtexchangeRequestEntityTooLarge {
	return &PostWebdeploymentsTokenOauthcodegrantjwtexchangeRequestEntityTooLarge{}
}

/*
PostWebdeploymentsTokenOauthcodegrantjwtexchangeRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PostWebdeploymentsTokenOauthcodegrantjwtexchangeRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post webdeployments token oauthcodegrantjwtexchange request entity too large response has a 2xx status code
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post webdeployments token oauthcodegrantjwtexchange request entity too large response has a 3xx status code
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post webdeployments token oauthcodegrantjwtexchange request entity too large response has a 4xx status code
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post webdeployments token oauthcodegrantjwtexchange request entity too large response has a 5xx status code
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post webdeployments token oauthcodegrantjwtexchange request entity too large response a status code equal to that given
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/webdeployments/token/oauthcodegrantjwtexchange][%d] postWebdeploymentsTokenOauthcodegrantjwtexchangeRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/webdeployments/token/oauthcodegrantjwtexchange][%d] postWebdeploymentsTokenOauthcodegrantjwtexchangeRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostWebdeploymentsTokenOauthcodegrantjwtexchangeUnsupportedMediaType creates a PostWebdeploymentsTokenOauthcodegrantjwtexchangeUnsupportedMediaType with default headers values
func NewPostWebdeploymentsTokenOauthcodegrantjwtexchangeUnsupportedMediaType() *PostWebdeploymentsTokenOauthcodegrantjwtexchangeUnsupportedMediaType {
	return &PostWebdeploymentsTokenOauthcodegrantjwtexchangeUnsupportedMediaType{}
}

/*
PostWebdeploymentsTokenOauthcodegrantjwtexchangeUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostWebdeploymentsTokenOauthcodegrantjwtexchangeUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post webdeployments token oauthcodegrantjwtexchange unsupported media type response has a 2xx status code
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post webdeployments token oauthcodegrantjwtexchange unsupported media type response has a 3xx status code
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post webdeployments token oauthcodegrantjwtexchange unsupported media type response has a 4xx status code
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post webdeployments token oauthcodegrantjwtexchange unsupported media type response has a 5xx status code
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post webdeployments token oauthcodegrantjwtexchange unsupported media type response a status code equal to that given
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/webdeployments/token/oauthcodegrantjwtexchange][%d] postWebdeploymentsTokenOauthcodegrantjwtexchangeUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/webdeployments/token/oauthcodegrantjwtexchange][%d] postWebdeploymentsTokenOauthcodegrantjwtexchangeUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostWebdeploymentsTokenOauthcodegrantjwtexchangeTooManyRequests creates a PostWebdeploymentsTokenOauthcodegrantjwtexchangeTooManyRequests with default headers values
func NewPostWebdeploymentsTokenOauthcodegrantjwtexchangeTooManyRequests() *PostWebdeploymentsTokenOauthcodegrantjwtexchangeTooManyRequests {
	return &PostWebdeploymentsTokenOauthcodegrantjwtexchangeTooManyRequests{}
}

/*
PostWebdeploymentsTokenOauthcodegrantjwtexchangeTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostWebdeploymentsTokenOauthcodegrantjwtexchangeTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post webdeployments token oauthcodegrantjwtexchange too many requests response has a 2xx status code
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post webdeployments token oauthcodegrantjwtexchange too many requests response has a 3xx status code
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post webdeployments token oauthcodegrantjwtexchange too many requests response has a 4xx status code
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post webdeployments token oauthcodegrantjwtexchange too many requests response has a 5xx status code
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post webdeployments token oauthcodegrantjwtexchange too many requests response a status code equal to that given
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/webdeployments/token/oauthcodegrantjwtexchange][%d] postWebdeploymentsTokenOauthcodegrantjwtexchangeTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/webdeployments/token/oauthcodegrantjwtexchange][%d] postWebdeploymentsTokenOauthcodegrantjwtexchangeTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostWebdeploymentsTokenOauthcodegrantjwtexchangeInternalServerError creates a PostWebdeploymentsTokenOauthcodegrantjwtexchangeInternalServerError with default headers values
func NewPostWebdeploymentsTokenOauthcodegrantjwtexchangeInternalServerError() *PostWebdeploymentsTokenOauthcodegrantjwtexchangeInternalServerError {
	return &PostWebdeploymentsTokenOauthcodegrantjwtexchangeInternalServerError{}
}

/*
PostWebdeploymentsTokenOauthcodegrantjwtexchangeInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostWebdeploymentsTokenOauthcodegrantjwtexchangeInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post webdeployments token oauthcodegrantjwtexchange internal server error response has a 2xx status code
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post webdeployments token oauthcodegrantjwtexchange internal server error response has a 3xx status code
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post webdeployments token oauthcodegrantjwtexchange internal server error response has a 4xx status code
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post webdeployments token oauthcodegrantjwtexchange internal server error response has a 5xx status code
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post webdeployments token oauthcodegrantjwtexchange internal server error response a status code equal to that given
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/webdeployments/token/oauthcodegrantjwtexchange][%d] postWebdeploymentsTokenOauthcodegrantjwtexchangeInternalServerError  %+v", 500, o.Payload)
}

func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/webdeployments/token/oauthcodegrantjwtexchange][%d] postWebdeploymentsTokenOauthcodegrantjwtexchangeInternalServerError  %+v", 500, o.Payload)
}

func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostWebdeploymentsTokenOauthcodegrantjwtexchangeServiceUnavailable creates a PostWebdeploymentsTokenOauthcodegrantjwtexchangeServiceUnavailable with default headers values
func NewPostWebdeploymentsTokenOauthcodegrantjwtexchangeServiceUnavailable() *PostWebdeploymentsTokenOauthcodegrantjwtexchangeServiceUnavailable {
	return &PostWebdeploymentsTokenOauthcodegrantjwtexchangeServiceUnavailable{}
}

/*
PostWebdeploymentsTokenOauthcodegrantjwtexchangeServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostWebdeploymentsTokenOauthcodegrantjwtexchangeServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post webdeployments token oauthcodegrantjwtexchange service unavailable response has a 2xx status code
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post webdeployments token oauthcodegrantjwtexchange service unavailable response has a 3xx status code
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post webdeployments token oauthcodegrantjwtexchange service unavailable response has a 4xx status code
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post webdeployments token oauthcodegrantjwtexchange service unavailable response has a 5xx status code
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post webdeployments token oauthcodegrantjwtexchange service unavailable response a status code equal to that given
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/webdeployments/token/oauthcodegrantjwtexchange][%d] postWebdeploymentsTokenOauthcodegrantjwtexchangeServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/webdeployments/token/oauthcodegrantjwtexchange][%d] postWebdeploymentsTokenOauthcodegrantjwtexchangeServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostWebdeploymentsTokenOauthcodegrantjwtexchangeGatewayTimeout creates a PostWebdeploymentsTokenOauthcodegrantjwtexchangeGatewayTimeout with default headers values
func NewPostWebdeploymentsTokenOauthcodegrantjwtexchangeGatewayTimeout() *PostWebdeploymentsTokenOauthcodegrantjwtexchangeGatewayTimeout {
	return &PostWebdeploymentsTokenOauthcodegrantjwtexchangeGatewayTimeout{}
}

/*
PostWebdeploymentsTokenOauthcodegrantjwtexchangeGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostWebdeploymentsTokenOauthcodegrantjwtexchangeGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post webdeployments token oauthcodegrantjwtexchange gateway timeout response has a 2xx status code
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post webdeployments token oauthcodegrantjwtexchange gateway timeout response has a 3xx status code
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post webdeployments token oauthcodegrantjwtexchange gateway timeout response has a 4xx status code
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post webdeployments token oauthcodegrantjwtexchange gateway timeout response has a 5xx status code
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post webdeployments token oauthcodegrantjwtexchange gateway timeout response a status code equal to that given
func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/webdeployments/token/oauthcodegrantjwtexchange][%d] postWebdeploymentsTokenOauthcodegrantjwtexchangeGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/webdeployments/token/oauthcodegrantjwtexchange][%d] postWebdeploymentsTokenOauthcodegrantjwtexchangeGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostWebdeploymentsTokenOauthcodegrantjwtexchangeGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
