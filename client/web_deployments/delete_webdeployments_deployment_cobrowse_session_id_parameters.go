// Code generated by go-swagger; DO NOT EDIT.

package web_deployments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewDeleteWebdeploymentsDeploymentCobrowseSessionIDParams creates a new DeleteWebdeploymentsDeploymentCobrowseSessionIDParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDeleteWebdeploymentsDeploymentCobrowseSessionIDParams() *DeleteWebdeploymentsDeploymentCobrowseSessionIDParams {
	return &DeleteWebdeploymentsDeploymentCobrowseSessionIDParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteWebdeploymentsDeploymentCobrowseSessionIDParamsWithTimeout creates a new DeleteWebdeploymentsDeploymentCobrowseSessionIDParams object
// with the ability to set a timeout on a request.
func NewDeleteWebdeploymentsDeploymentCobrowseSessionIDParamsWithTimeout(timeout time.Duration) *DeleteWebdeploymentsDeploymentCobrowseSessionIDParams {
	return &DeleteWebdeploymentsDeploymentCobrowseSessionIDParams{
		timeout: timeout,
	}
}

// NewDeleteWebdeploymentsDeploymentCobrowseSessionIDParamsWithContext creates a new DeleteWebdeploymentsDeploymentCobrowseSessionIDParams object
// with the ability to set a context for a request.
func NewDeleteWebdeploymentsDeploymentCobrowseSessionIDParamsWithContext(ctx context.Context) *DeleteWebdeploymentsDeploymentCobrowseSessionIDParams {
	return &DeleteWebdeploymentsDeploymentCobrowseSessionIDParams{
		Context: ctx,
	}
}

// NewDeleteWebdeploymentsDeploymentCobrowseSessionIDParamsWithHTTPClient creates a new DeleteWebdeploymentsDeploymentCobrowseSessionIDParams object
// with the ability to set a custom HTTPClient for a request.
func NewDeleteWebdeploymentsDeploymentCobrowseSessionIDParamsWithHTTPClient(client *http.Client) *DeleteWebdeploymentsDeploymentCobrowseSessionIDParams {
	return &DeleteWebdeploymentsDeploymentCobrowseSessionIDParams{
		HTTPClient: client,
	}
}

/*
DeleteWebdeploymentsDeploymentCobrowseSessionIDParams contains all the parameters to send to the API endpoint

	for the delete webdeployments deployment cobrowse session Id operation.

	Typically these are written to a http.Request.
*/
type DeleteWebdeploymentsDeploymentCobrowseSessionIDParams struct {

	/* DeploymentID.

	   WebMessaging deployment ID
	*/
	DeploymentID string

	/* SessionID.

	   Cobrowse session id or join code
	*/
	SessionID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the delete webdeployments deployment cobrowse session Id params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDParams) WithDefaults() *DeleteWebdeploymentsDeploymentCobrowseSessionIDParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the delete webdeployments deployment cobrowse session Id params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the delete webdeployments deployment cobrowse session Id params
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDParams) WithTimeout(timeout time.Duration) *DeleteWebdeploymentsDeploymentCobrowseSessionIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete webdeployments deployment cobrowse session Id params
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete webdeployments deployment cobrowse session Id params
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDParams) WithContext(ctx context.Context) *DeleteWebdeploymentsDeploymentCobrowseSessionIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete webdeployments deployment cobrowse session Id params
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete webdeployments deployment cobrowse session Id params
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDParams) WithHTTPClient(client *http.Client) *DeleteWebdeploymentsDeploymentCobrowseSessionIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete webdeployments deployment cobrowse session Id params
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDeploymentID adds the deploymentID to the delete webdeployments deployment cobrowse session Id params
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDParams) WithDeploymentID(deploymentID string) *DeleteWebdeploymentsDeploymentCobrowseSessionIDParams {
	o.SetDeploymentID(deploymentID)
	return o
}

// SetDeploymentID adds the deploymentId to the delete webdeployments deployment cobrowse session Id params
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDParams) SetDeploymentID(deploymentID string) {
	o.DeploymentID = deploymentID
}

// WithSessionID adds the sessionID to the delete webdeployments deployment cobrowse session Id params
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDParams) WithSessionID(sessionID string) *DeleteWebdeploymentsDeploymentCobrowseSessionIDParams {
	o.SetSessionID(sessionID)
	return o
}

// SetSessionID adds the sessionId to the delete webdeployments deployment cobrowse session Id params
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDParams) SetSessionID(sessionID string) {
	o.SessionID = sessionID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteWebdeploymentsDeploymentCobrowseSessionIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param deploymentId
	if err := r.SetPathParam("deploymentId", o.DeploymentID); err != nil {
		return err
	}

	// path param sessionId
	if err := r.SetPathParam("sessionId", o.SessionID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
