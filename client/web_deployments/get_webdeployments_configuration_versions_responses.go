// Code generated by go-swagger; DO NOT EDIT.

package web_deployments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetWebdeploymentsConfigurationVersionsReader is a Reader for the GetWebdeploymentsConfigurationVersions structure.
type GetWebdeploymentsConfigurationVersionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetWebdeploymentsConfigurationVersionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetWebdeploymentsConfigurationVersionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetWebdeploymentsConfigurationVersionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetWebdeploymentsConfigurationVersionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetWebdeploymentsConfigurationVersionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetWebdeploymentsConfigurationVersionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetWebdeploymentsConfigurationVersionsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetWebdeploymentsConfigurationVersionsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetWebdeploymentsConfigurationVersionsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetWebdeploymentsConfigurationVersionsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetWebdeploymentsConfigurationVersionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetWebdeploymentsConfigurationVersionsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetWebdeploymentsConfigurationVersionsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetWebdeploymentsConfigurationVersionsOK creates a GetWebdeploymentsConfigurationVersionsOK with default headers values
func NewGetWebdeploymentsConfigurationVersionsOK() *GetWebdeploymentsConfigurationVersionsOK {
	return &GetWebdeploymentsConfigurationVersionsOK{}
}

/*GetWebdeploymentsConfigurationVersionsOK handles this case with default header values.

successful operation
*/
type GetWebdeploymentsConfigurationVersionsOK struct {
	Payload *models.WebDeploymentConfigurationVersionEntityListing
}

func (o *GetWebdeploymentsConfigurationVersionsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/configurations/{configurationId}/versions][%d] getWebdeploymentsConfigurationVersionsOK  %+v", 200, o.Payload)
}

func (o *GetWebdeploymentsConfigurationVersionsOK) GetPayload() *models.WebDeploymentConfigurationVersionEntityListing {
	return o.Payload
}

func (o *GetWebdeploymentsConfigurationVersionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WebDeploymentConfigurationVersionEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebdeploymentsConfigurationVersionsBadRequest creates a GetWebdeploymentsConfigurationVersionsBadRequest with default headers values
func NewGetWebdeploymentsConfigurationVersionsBadRequest() *GetWebdeploymentsConfigurationVersionsBadRequest {
	return &GetWebdeploymentsConfigurationVersionsBadRequest{}
}

/*GetWebdeploymentsConfigurationVersionsBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetWebdeploymentsConfigurationVersionsBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetWebdeploymentsConfigurationVersionsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/configurations/{configurationId}/versions][%d] getWebdeploymentsConfigurationVersionsBadRequest  %+v", 400, o.Payload)
}

func (o *GetWebdeploymentsConfigurationVersionsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebdeploymentsConfigurationVersionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebdeploymentsConfigurationVersionsUnauthorized creates a GetWebdeploymentsConfigurationVersionsUnauthorized with default headers values
func NewGetWebdeploymentsConfigurationVersionsUnauthorized() *GetWebdeploymentsConfigurationVersionsUnauthorized {
	return &GetWebdeploymentsConfigurationVersionsUnauthorized{}
}

/*GetWebdeploymentsConfigurationVersionsUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetWebdeploymentsConfigurationVersionsUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetWebdeploymentsConfigurationVersionsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/configurations/{configurationId}/versions][%d] getWebdeploymentsConfigurationVersionsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetWebdeploymentsConfigurationVersionsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebdeploymentsConfigurationVersionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebdeploymentsConfigurationVersionsForbidden creates a GetWebdeploymentsConfigurationVersionsForbidden with default headers values
func NewGetWebdeploymentsConfigurationVersionsForbidden() *GetWebdeploymentsConfigurationVersionsForbidden {
	return &GetWebdeploymentsConfigurationVersionsForbidden{}
}

/*GetWebdeploymentsConfigurationVersionsForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetWebdeploymentsConfigurationVersionsForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetWebdeploymentsConfigurationVersionsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/configurations/{configurationId}/versions][%d] getWebdeploymentsConfigurationVersionsForbidden  %+v", 403, o.Payload)
}

func (o *GetWebdeploymentsConfigurationVersionsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebdeploymentsConfigurationVersionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebdeploymentsConfigurationVersionsNotFound creates a GetWebdeploymentsConfigurationVersionsNotFound with default headers values
func NewGetWebdeploymentsConfigurationVersionsNotFound() *GetWebdeploymentsConfigurationVersionsNotFound {
	return &GetWebdeploymentsConfigurationVersionsNotFound{}
}

/*GetWebdeploymentsConfigurationVersionsNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetWebdeploymentsConfigurationVersionsNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetWebdeploymentsConfigurationVersionsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/configurations/{configurationId}/versions][%d] getWebdeploymentsConfigurationVersionsNotFound  %+v", 404, o.Payload)
}

func (o *GetWebdeploymentsConfigurationVersionsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebdeploymentsConfigurationVersionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebdeploymentsConfigurationVersionsRequestTimeout creates a GetWebdeploymentsConfigurationVersionsRequestTimeout with default headers values
func NewGetWebdeploymentsConfigurationVersionsRequestTimeout() *GetWebdeploymentsConfigurationVersionsRequestTimeout {
	return &GetWebdeploymentsConfigurationVersionsRequestTimeout{}
}

/*GetWebdeploymentsConfigurationVersionsRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetWebdeploymentsConfigurationVersionsRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetWebdeploymentsConfigurationVersionsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/configurations/{configurationId}/versions][%d] getWebdeploymentsConfigurationVersionsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetWebdeploymentsConfigurationVersionsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebdeploymentsConfigurationVersionsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebdeploymentsConfigurationVersionsRequestEntityTooLarge creates a GetWebdeploymentsConfigurationVersionsRequestEntityTooLarge with default headers values
func NewGetWebdeploymentsConfigurationVersionsRequestEntityTooLarge() *GetWebdeploymentsConfigurationVersionsRequestEntityTooLarge {
	return &GetWebdeploymentsConfigurationVersionsRequestEntityTooLarge{}
}

/*GetWebdeploymentsConfigurationVersionsRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetWebdeploymentsConfigurationVersionsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetWebdeploymentsConfigurationVersionsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/configurations/{configurationId}/versions][%d] getWebdeploymentsConfigurationVersionsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetWebdeploymentsConfigurationVersionsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebdeploymentsConfigurationVersionsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebdeploymentsConfigurationVersionsUnsupportedMediaType creates a GetWebdeploymentsConfigurationVersionsUnsupportedMediaType with default headers values
func NewGetWebdeploymentsConfigurationVersionsUnsupportedMediaType() *GetWebdeploymentsConfigurationVersionsUnsupportedMediaType {
	return &GetWebdeploymentsConfigurationVersionsUnsupportedMediaType{}
}

/*GetWebdeploymentsConfigurationVersionsUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetWebdeploymentsConfigurationVersionsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetWebdeploymentsConfigurationVersionsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/configurations/{configurationId}/versions][%d] getWebdeploymentsConfigurationVersionsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetWebdeploymentsConfigurationVersionsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebdeploymentsConfigurationVersionsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebdeploymentsConfigurationVersionsTooManyRequests creates a GetWebdeploymentsConfigurationVersionsTooManyRequests with default headers values
func NewGetWebdeploymentsConfigurationVersionsTooManyRequests() *GetWebdeploymentsConfigurationVersionsTooManyRequests {
	return &GetWebdeploymentsConfigurationVersionsTooManyRequests{}
}

/*GetWebdeploymentsConfigurationVersionsTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetWebdeploymentsConfigurationVersionsTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetWebdeploymentsConfigurationVersionsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/configurations/{configurationId}/versions][%d] getWebdeploymentsConfigurationVersionsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetWebdeploymentsConfigurationVersionsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebdeploymentsConfigurationVersionsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebdeploymentsConfigurationVersionsInternalServerError creates a GetWebdeploymentsConfigurationVersionsInternalServerError with default headers values
func NewGetWebdeploymentsConfigurationVersionsInternalServerError() *GetWebdeploymentsConfigurationVersionsInternalServerError {
	return &GetWebdeploymentsConfigurationVersionsInternalServerError{}
}

/*GetWebdeploymentsConfigurationVersionsInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetWebdeploymentsConfigurationVersionsInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetWebdeploymentsConfigurationVersionsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/configurations/{configurationId}/versions][%d] getWebdeploymentsConfigurationVersionsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetWebdeploymentsConfigurationVersionsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebdeploymentsConfigurationVersionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebdeploymentsConfigurationVersionsServiceUnavailable creates a GetWebdeploymentsConfigurationVersionsServiceUnavailable with default headers values
func NewGetWebdeploymentsConfigurationVersionsServiceUnavailable() *GetWebdeploymentsConfigurationVersionsServiceUnavailable {
	return &GetWebdeploymentsConfigurationVersionsServiceUnavailable{}
}

/*GetWebdeploymentsConfigurationVersionsServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetWebdeploymentsConfigurationVersionsServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetWebdeploymentsConfigurationVersionsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/configurations/{configurationId}/versions][%d] getWebdeploymentsConfigurationVersionsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetWebdeploymentsConfigurationVersionsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebdeploymentsConfigurationVersionsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebdeploymentsConfigurationVersionsGatewayTimeout creates a GetWebdeploymentsConfigurationVersionsGatewayTimeout with default headers values
func NewGetWebdeploymentsConfigurationVersionsGatewayTimeout() *GetWebdeploymentsConfigurationVersionsGatewayTimeout {
	return &GetWebdeploymentsConfigurationVersionsGatewayTimeout{}
}

/*GetWebdeploymentsConfigurationVersionsGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetWebdeploymentsConfigurationVersionsGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetWebdeploymentsConfigurationVersionsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/configurations/{configurationId}/versions][%d] getWebdeploymentsConfigurationVersionsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetWebdeploymentsConfigurationVersionsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebdeploymentsConfigurationVersionsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
