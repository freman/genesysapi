// Code generated by go-swagger; DO NOT EDIT.

package web_deployments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetWebdeploymentsConfigurationVersionReader is a Reader for the GetWebdeploymentsConfigurationVersion structure.
type GetWebdeploymentsConfigurationVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetWebdeploymentsConfigurationVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetWebdeploymentsConfigurationVersionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetWebdeploymentsConfigurationVersionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetWebdeploymentsConfigurationVersionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetWebdeploymentsConfigurationVersionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetWebdeploymentsConfigurationVersionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetWebdeploymentsConfigurationVersionRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetWebdeploymentsConfigurationVersionRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetWebdeploymentsConfigurationVersionUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetWebdeploymentsConfigurationVersionTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetWebdeploymentsConfigurationVersionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetWebdeploymentsConfigurationVersionServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetWebdeploymentsConfigurationVersionGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetWebdeploymentsConfigurationVersionOK creates a GetWebdeploymentsConfigurationVersionOK with default headers values
func NewGetWebdeploymentsConfigurationVersionOK() *GetWebdeploymentsConfigurationVersionOK {
	return &GetWebdeploymentsConfigurationVersionOK{}
}

/*
GetWebdeploymentsConfigurationVersionOK describes a response with status code 200, with default header values.

successful operation
*/
type GetWebdeploymentsConfigurationVersionOK struct {
	Payload *models.WebDeploymentConfigurationVersion
}

// IsSuccess returns true when this get webdeployments configuration version o k response has a 2xx status code
func (o *GetWebdeploymentsConfigurationVersionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get webdeployments configuration version o k response has a 3xx status code
func (o *GetWebdeploymentsConfigurationVersionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get webdeployments configuration version o k response has a 4xx status code
func (o *GetWebdeploymentsConfigurationVersionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get webdeployments configuration version o k response has a 5xx status code
func (o *GetWebdeploymentsConfigurationVersionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get webdeployments configuration version o k response a status code equal to that given
func (o *GetWebdeploymentsConfigurationVersionOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetWebdeploymentsConfigurationVersionOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/configurations/{configurationId}/versions/{versionId}][%d] getWebdeploymentsConfigurationVersionOK  %+v", 200, o.Payload)
}

func (o *GetWebdeploymentsConfigurationVersionOK) String() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/configurations/{configurationId}/versions/{versionId}][%d] getWebdeploymentsConfigurationVersionOK  %+v", 200, o.Payload)
}

func (o *GetWebdeploymentsConfigurationVersionOK) GetPayload() *models.WebDeploymentConfigurationVersion {
	return o.Payload
}

func (o *GetWebdeploymentsConfigurationVersionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WebDeploymentConfigurationVersion)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebdeploymentsConfigurationVersionBadRequest creates a GetWebdeploymentsConfigurationVersionBadRequest with default headers values
func NewGetWebdeploymentsConfigurationVersionBadRequest() *GetWebdeploymentsConfigurationVersionBadRequest {
	return &GetWebdeploymentsConfigurationVersionBadRequest{}
}

/*
GetWebdeploymentsConfigurationVersionBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetWebdeploymentsConfigurationVersionBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get webdeployments configuration version bad request response has a 2xx status code
func (o *GetWebdeploymentsConfigurationVersionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get webdeployments configuration version bad request response has a 3xx status code
func (o *GetWebdeploymentsConfigurationVersionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get webdeployments configuration version bad request response has a 4xx status code
func (o *GetWebdeploymentsConfigurationVersionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get webdeployments configuration version bad request response has a 5xx status code
func (o *GetWebdeploymentsConfigurationVersionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get webdeployments configuration version bad request response a status code equal to that given
func (o *GetWebdeploymentsConfigurationVersionBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetWebdeploymentsConfigurationVersionBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/configurations/{configurationId}/versions/{versionId}][%d] getWebdeploymentsConfigurationVersionBadRequest  %+v", 400, o.Payload)
}

func (o *GetWebdeploymentsConfigurationVersionBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/configurations/{configurationId}/versions/{versionId}][%d] getWebdeploymentsConfigurationVersionBadRequest  %+v", 400, o.Payload)
}

func (o *GetWebdeploymentsConfigurationVersionBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebdeploymentsConfigurationVersionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebdeploymentsConfigurationVersionUnauthorized creates a GetWebdeploymentsConfigurationVersionUnauthorized with default headers values
func NewGetWebdeploymentsConfigurationVersionUnauthorized() *GetWebdeploymentsConfigurationVersionUnauthorized {
	return &GetWebdeploymentsConfigurationVersionUnauthorized{}
}

/*
GetWebdeploymentsConfigurationVersionUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetWebdeploymentsConfigurationVersionUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get webdeployments configuration version unauthorized response has a 2xx status code
func (o *GetWebdeploymentsConfigurationVersionUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get webdeployments configuration version unauthorized response has a 3xx status code
func (o *GetWebdeploymentsConfigurationVersionUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get webdeployments configuration version unauthorized response has a 4xx status code
func (o *GetWebdeploymentsConfigurationVersionUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get webdeployments configuration version unauthorized response has a 5xx status code
func (o *GetWebdeploymentsConfigurationVersionUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get webdeployments configuration version unauthorized response a status code equal to that given
func (o *GetWebdeploymentsConfigurationVersionUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetWebdeploymentsConfigurationVersionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/configurations/{configurationId}/versions/{versionId}][%d] getWebdeploymentsConfigurationVersionUnauthorized  %+v", 401, o.Payload)
}

func (o *GetWebdeploymentsConfigurationVersionUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/configurations/{configurationId}/versions/{versionId}][%d] getWebdeploymentsConfigurationVersionUnauthorized  %+v", 401, o.Payload)
}

func (o *GetWebdeploymentsConfigurationVersionUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebdeploymentsConfigurationVersionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebdeploymentsConfigurationVersionForbidden creates a GetWebdeploymentsConfigurationVersionForbidden with default headers values
func NewGetWebdeploymentsConfigurationVersionForbidden() *GetWebdeploymentsConfigurationVersionForbidden {
	return &GetWebdeploymentsConfigurationVersionForbidden{}
}

/*
GetWebdeploymentsConfigurationVersionForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetWebdeploymentsConfigurationVersionForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get webdeployments configuration version forbidden response has a 2xx status code
func (o *GetWebdeploymentsConfigurationVersionForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get webdeployments configuration version forbidden response has a 3xx status code
func (o *GetWebdeploymentsConfigurationVersionForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get webdeployments configuration version forbidden response has a 4xx status code
func (o *GetWebdeploymentsConfigurationVersionForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get webdeployments configuration version forbidden response has a 5xx status code
func (o *GetWebdeploymentsConfigurationVersionForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get webdeployments configuration version forbidden response a status code equal to that given
func (o *GetWebdeploymentsConfigurationVersionForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetWebdeploymentsConfigurationVersionForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/configurations/{configurationId}/versions/{versionId}][%d] getWebdeploymentsConfigurationVersionForbidden  %+v", 403, o.Payload)
}

func (o *GetWebdeploymentsConfigurationVersionForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/configurations/{configurationId}/versions/{versionId}][%d] getWebdeploymentsConfigurationVersionForbidden  %+v", 403, o.Payload)
}

func (o *GetWebdeploymentsConfigurationVersionForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebdeploymentsConfigurationVersionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebdeploymentsConfigurationVersionNotFound creates a GetWebdeploymentsConfigurationVersionNotFound with default headers values
func NewGetWebdeploymentsConfigurationVersionNotFound() *GetWebdeploymentsConfigurationVersionNotFound {
	return &GetWebdeploymentsConfigurationVersionNotFound{}
}

/*
GetWebdeploymentsConfigurationVersionNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetWebdeploymentsConfigurationVersionNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get webdeployments configuration version not found response has a 2xx status code
func (o *GetWebdeploymentsConfigurationVersionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get webdeployments configuration version not found response has a 3xx status code
func (o *GetWebdeploymentsConfigurationVersionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get webdeployments configuration version not found response has a 4xx status code
func (o *GetWebdeploymentsConfigurationVersionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get webdeployments configuration version not found response has a 5xx status code
func (o *GetWebdeploymentsConfigurationVersionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get webdeployments configuration version not found response a status code equal to that given
func (o *GetWebdeploymentsConfigurationVersionNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetWebdeploymentsConfigurationVersionNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/configurations/{configurationId}/versions/{versionId}][%d] getWebdeploymentsConfigurationVersionNotFound  %+v", 404, o.Payload)
}

func (o *GetWebdeploymentsConfigurationVersionNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/configurations/{configurationId}/versions/{versionId}][%d] getWebdeploymentsConfigurationVersionNotFound  %+v", 404, o.Payload)
}

func (o *GetWebdeploymentsConfigurationVersionNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebdeploymentsConfigurationVersionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebdeploymentsConfigurationVersionRequestTimeout creates a GetWebdeploymentsConfigurationVersionRequestTimeout with default headers values
func NewGetWebdeploymentsConfigurationVersionRequestTimeout() *GetWebdeploymentsConfigurationVersionRequestTimeout {
	return &GetWebdeploymentsConfigurationVersionRequestTimeout{}
}

/*
GetWebdeploymentsConfigurationVersionRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetWebdeploymentsConfigurationVersionRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get webdeployments configuration version request timeout response has a 2xx status code
func (o *GetWebdeploymentsConfigurationVersionRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get webdeployments configuration version request timeout response has a 3xx status code
func (o *GetWebdeploymentsConfigurationVersionRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get webdeployments configuration version request timeout response has a 4xx status code
func (o *GetWebdeploymentsConfigurationVersionRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get webdeployments configuration version request timeout response has a 5xx status code
func (o *GetWebdeploymentsConfigurationVersionRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get webdeployments configuration version request timeout response a status code equal to that given
func (o *GetWebdeploymentsConfigurationVersionRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetWebdeploymentsConfigurationVersionRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/configurations/{configurationId}/versions/{versionId}][%d] getWebdeploymentsConfigurationVersionRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetWebdeploymentsConfigurationVersionRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/configurations/{configurationId}/versions/{versionId}][%d] getWebdeploymentsConfigurationVersionRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetWebdeploymentsConfigurationVersionRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebdeploymentsConfigurationVersionRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebdeploymentsConfigurationVersionRequestEntityTooLarge creates a GetWebdeploymentsConfigurationVersionRequestEntityTooLarge with default headers values
func NewGetWebdeploymentsConfigurationVersionRequestEntityTooLarge() *GetWebdeploymentsConfigurationVersionRequestEntityTooLarge {
	return &GetWebdeploymentsConfigurationVersionRequestEntityTooLarge{}
}

/*
GetWebdeploymentsConfigurationVersionRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetWebdeploymentsConfigurationVersionRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get webdeployments configuration version request entity too large response has a 2xx status code
func (o *GetWebdeploymentsConfigurationVersionRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get webdeployments configuration version request entity too large response has a 3xx status code
func (o *GetWebdeploymentsConfigurationVersionRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get webdeployments configuration version request entity too large response has a 4xx status code
func (o *GetWebdeploymentsConfigurationVersionRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get webdeployments configuration version request entity too large response has a 5xx status code
func (o *GetWebdeploymentsConfigurationVersionRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get webdeployments configuration version request entity too large response a status code equal to that given
func (o *GetWebdeploymentsConfigurationVersionRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetWebdeploymentsConfigurationVersionRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/configurations/{configurationId}/versions/{versionId}][%d] getWebdeploymentsConfigurationVersionRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetWebdeploymentsConfigurationVersionRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/configurations/{configurationId}/versions/{versionId}][%d] getWebdeploymentsConfigurationVersionRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetWebdeploymentsConfigurationVersionRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebdeploymentsConfigurationVersionRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebdeploymentsConfigurationVersionUnsupportedMediaType creates a GetWebdeploymentsConfigurationVersionUnsupportedMediaType with default headers values
func NewGetWebdeploymentsConfigurationVersionUnsupportedMediaType() *GetWebdeploymentsConfigurationVersionUnsupportedMediaType {
	return &GetWebdeploymentsConfigurationVersionUnsupportedMediaType{}
}

/*
GetWebdeploymentsConfigurationVersionUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetWebdeploymentsConfigurationVersionUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get webdeployments configuration version unsupported media type response has a 2xx status code
func (o *GetWebdeploymentsConfigurationVersionUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get webdeployments configuration version unsupported media type response has a 3xx status code
func (o *GetWebdeploymentsConfigurationVersionUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get webdeployments configuration version unsupported media type response has a 4xx status code
func (o *GetWebdeploymentsConfigurationVersionUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get webdeployments configuration version unsupported media type response has a 5xx status code
func (o *GetWebdeploymentsConfigurationVersionUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get webdeployments configuration version unsupported media type response a status code equal to that given
func (o *GetWebdeploymentsConfigurationVersionUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetWebdeploymentsConfigurationVersionUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/configurations/{configurationId}/versions/{versionId}][%d] getWebdeploymentsConfigurationVersionUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetWebdeploymentsConfigurationVersionUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/configurations/{configurationId}/versions/{versionId}][%d] getWebdeploymentsConfigurationVersionUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetWebdeploymentsConfigurationVersionUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebdeploymentsConfigurationVersionUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebdeploymentsConfigurationVersionTooManyRequests creates a GetWebdeploymentsConfigurationVersionTooManyRequests with default headers values
func NewGetWebdeploymentsConfigurationVersionTooManyRequests() *GetWebdeploymentsConfigurationVersionTooManyRequests {
	return &GetWebdeploymentsConfigurationVersionTooManyRequests{}
}

/*
GetWebdeploymentsConfigurationVersionTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetWebdeploymentsConfigurationVersionTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get webdeployments configuration version too many requests response has a 2xx status code
func (o *GetWebdeploymentsConfigurationVersionTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get webdeployments configuration version too many requests response has a 3xx status code
func (o *GetWebdeploymentsConfigurationVersionTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get webdeployments configuration version too many requests response has a 4xx status code
func (o *GetWebdeploymentsConfigurationVersionTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get webdeployments configuration version too many requests response has a 5xx status code
func (o *GetWebdeploymentsConfigurationVersionTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get webdeployments configuration version too many requests response a status code equal to that given
func (o *GetWebdeploymentsConfigurationVersionTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetWebdeploymentsConfigurationVersionTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/configurations/{configurationId}/versions/{versionId}][%d] getWebdeploymentsConfigurationVersionTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetWebdeploymentsConfigurationVersionTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/configurations/{configurationId}/versions/{versionId}][%d] getWebdeploymentsConfigurationVersionTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetWebdeploymentsConfigurationVersionTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebdeploymentsConfigurationVersionTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebdeploymentsConfigurationVersionInternalServerError creates a GetWebdeploymentsConfigurationVersionInternalServerError with default headers values
func NewGetWebdeploymentsConfigurationVersionInternalServerError() *GetWebdeploymentsConfigurationVersionInternalServerError {
	return &GetWebdeploymentsConfigurationVersionInternalServerError{}
}

/*
GetWebdeploymentsConfigurationVersionInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetWebdeploymentsConfigurationVersionInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get webdeployments configuration version internal server error response has a 2xx status code
func (o *GetWebdeploymentsConfigurationVersionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get webdeployments configuration version internal server error response has a 3xx status code
func (o *GetWebdeploymentsConfigurationVersionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get webdeployments configuration version internal server error response has a 4xx status code
func (o *GetWebdeploymentsConfigurationVersionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get webdeployments configuration version internal server error response has a 5xx status code
func (o *GetWebdeploymentsConfigurationVersionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get webdeployments configuration version internal server error response a status code equal to that given
func (o *GetWebdeploymentsConfigurationVersionInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetWebdeploymentsConfigurationVersionInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/configurations/{configurationId}/versions/{versionId}][%d] getWebdeploymentsConfigurationVersionInternalServerError  %+v", 500, o.Payload)
}

func (o *GetWebdeploymentsConfigurationVersionInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/configurations/{configurationId}/versions/{versionId}][%d] getWebdeploymentsConfigurationVersionInternalServerError  %+v", 500, o.Payload)
}

func (o *GetWebdeploymentsConfigurationVersionInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebdeploymentsConfigurationVersionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebdeploymentsConfigurationVersionServiceUnavailable creates a GetWebdeploymentsConfigurationVersionServiceUnavailable with default headers values
func NewGetWebdeploymentsConfigurationVersionServiceUnavailable() *GetWebdeploymentsConfigurationVersionServiceUnavailable {
	return &GetWebdeploymentsConfigurationVersionServiceUnavailable{}
}

/*
GetWebdeploymentsConfigurationVersionServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetWebdeploymentsConfigurationVersionServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get webdeployments configuration version service unavailable response has a 2xx status code
func (o *GetWebdeploymentsConfigurationVersionServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get webdeployments configuration version service unavailable response has a 3xx status code
func (o *GetWebdeploymentsConfigurationVersionServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get webdeployments configuration version service unavailable response has a 4xx status code
func (o *GetWebdeploymentsConfigurationVersionServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get webdeployments configuration version service unavailable response has a 5xx status code
func (o *GetWebdeploymentsConfigurationVersionServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get webdeployments configuration version service unavailable response a status code equal to that given
func (o *GetWebdeploymentsConfigurationVersionServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetWebdeploymentsConfigurationVersionServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/configurations/{configurationId}/versions/{versionId}][%d] getWebdeploymentsConfigurationVersionServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetWebdeploymentsConfigurationVersionServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/configurations/{configurationId}/versions/{versionId}][%d] getWebdeploymentsConfigurationVersionServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetWebdeploymentsConfigurationVersionServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebdeploymentsConfigurationVersionServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebdeploymentsConfigurationVersionGatewayTimeout creates a GetWebdeploymentsConfigurationVersionGatewayTimeout with default headers values
func NewGetWebdeploymentsConfigurationVersionGatewayTimeout() *GetWebdeploymentsConfigurationVersionGatewayTimeout {
	return &GetWebdeploymentsConfigurationVersionGatewayTimeout{}
}

/*
GetWebdeploymentsConfigurationVersionGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetWebdeploymentsConfigurationVersionGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get webdeployments configuration version gateway timeout response has a 2xx status code
func (o *GetWebdeploymentsConfigurationVersionGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get webdeployments configuration version gateway timeout response has a 3xx status code
func (o *GetWebdeploymentsConfigurationVersionGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get webdeployments configuration version gateway timeout response has a 4xx status code
func (o *GetWebdeploymentsConfigurationVersionGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get webdeployments configuration version gateway timeout response has a 5xx status code
func (o *GetWebdeploymentsConfigurationVersionGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get webdeployments configuration version gateway timeout response a status code equal to that given
func (o *GetWebdeploymentsConfigurationVersionGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetWebdeploymentsConfigurationVersionGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/configurations/{configurationId}/versions/{versionId}][%d] getWebdeploymentsConfigurationVersionGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetWebdeploymentsConfigurationVersionGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/webdeployments/configurations/{configurationId}/versions/{versionId}][%d] getWebdeploymentsConfigurationVersionGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetWebdeploymentsConfigurationVersionGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebdeploymentsConfigurationVersionGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
