// Code generated by go-swagger; DO NOT EDIT.

package geolocation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetGeolocationsSettingsReader is a Reader for the GetGeolocationsSettings structure.
type GetGeolocationsSettingsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGeolocationsSettingsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGeolocationsSettingsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetGeolocationsSettingsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetGeolocationsSettingsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetGeolocationsSettingsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetGeolocationsSettingsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetGeolocationsSettingsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetGeolocationsSettingsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetGeolocationsSettingsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetGeolocationsSettingsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetGeolocationsSettingsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetGeolocationsSettingsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetGeolocationsSettingsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetGeolocationsSettingsOK creates a GetGeolocationsSettingsOK with default headers values
func NewGetGeolocationsSettingsOK() *GetGeolocationsSettingsOK {
	return &GetGeolocationsSettingsOK{}
}

/*
GetGeolocationsSettingsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetGeolocationsSettingsOK struct {
	Payload *models.GeolocationSettings
}

// IsSuccess returns true when this get geolocations settings o k response has a 2xx status code
func (o *GetGeolocationsSettingsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get geolocations settings o k response has a 3xx status code
func (o *GetGeolocationsSettingsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get geolocations settings o k response has a 4xx status code
func (o *GetGeolocationsSettingsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get geolocations settings o k response has a 5xx status code
func (o *GetGeolocationsSettingsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get geolocations settings o k response a status code equal to that given
func (o *GetGeolocationsSettingsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetGeolocationsSettingsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/geolocations/settings][%d] getGeolocationsSettingsOK  %+v", 200, o.Payload)
}

func (o *GetGeolocationsSettingsOK) String() string {
	return fmt.Sprintf("[GET /api/v2/geolocations/settings][%d] getGeolocationsSettingsOK  %+v", 200, o.Payload)
}

func (o *GetGeolocationsSettingsOK) GetPayload() *models.GeolocationSettings {
	return o.Payload
}

func (o *GetGeolocationsSettingsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeolocationSettings)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGeolocationsSettingsBadRequest creates a GetGeolocationsSettingsBadRequest with default headers values
func NewGetGeolocationsSettingsBadRequest() *GetGeolocationsSettingsBadRequest {
	return &GetGeolocationsSettingsBadRequest{}
}

/*
GetGeolocationsSettingsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetGeolocationsSettingsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get geolocations settings bad request response has a 2xx status code
func (o *GetGeolocationsSettingsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get geolocations settings bad request response has a 3xx status code
func (o *GetGeolocationsSettingsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get geolocations settings bad request response has a 4xx status code
func (o *GetGeolocationsSettingsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get geolocations settings bad request response has a 5xx status code
func (o *GetGeolocationsSettingsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get geolocations settings bad request response a status code equal to that given
func (o *GetGeolocationsSettingsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetGeolocationsSettingsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/geolocations/settings][%d] getGeolocationsSettingsBadRequest  %+v", 400, o.Payload)
}

func (o *GetGeolocationsSettingsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/geolocations/settings][%d] getGeolocationsSettingsBadRequest  %+v", 400, o.Payload)
}

func (o *GetGeolocationsSettingsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGeolocationsSettingsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGeolocationsSettingsUnauthorized creates a GetGeolocationsSettingsUnauthorized with default headers values
func NewGetGeolocationsSettingsUnauthorized() *GetGeolocationsSettingsUnauthorized {
	return &GetGeolocationsSettingsUnauthorized{}
}

/*
GetGeolocationsSettingsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetGeolocationsSettingsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get geolocations settings unauthorized response has a 2xx status code
func (o *GetGeolocationsSettingsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get geolocations settings unauthorized response has a 3xx status code
func (o *GetGeolocationsSettingsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get geolocations settings unauthorized response has a 4xx status code
func (o *GetGeolocationsSettingsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get geolocations settings unauthorized response has a 5xx status code
func (o *GetGeolocationsSettingsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get geolocations settings unauthorized response a status code equal to that given
func (o *GetGeolocationsSettingsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetGeolocationsSettingsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/geolocations/settings][%d] getGeolocationsSettingsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetGeolocationsSettingsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/geolocations/settings][%d] getGeolocationsSettingsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetGeolocationsSettingsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGeolocationsSettingsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGeolocationsSettingsForbidden creates a GetGeolocationsSettingsForbidden with default headers values
func NewGetGeolocationsSettingsForbidden() *GetGeolocationsSettingsForbidden {
	return &GetGeolocationsSettingsForbidden{}
}

/*
GetGeolocationsSettingsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetGeolocationsSettingsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get geolocations settings forbidden response has a 2xx status code
func (o *GetGeolocationsSettingsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get geolocations settings forbidden response has a 3xx status code
func (o *GetGeolocationsSettingsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get geolocations settings forbidden response has a 4xx status code
func (o *GetGeolocationsSettingsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get geolocations settings forbidden response has a 5xx status code
func (o *GetGeolocationsSettingsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get geolocations settings forbidden response a status code equal to that given
func (o *GetGeolocationsSettingsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetGeolocationsSettingsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/geolocations/settings][%d] getGeolocationsSettingsForbidden  %+v", 403, o.Payload)
}

func (o *GetGeolocationsSettingsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/geolocations/settings][%d] getGeolocationsSettingsForbidden  %+v", 403, o.Payload)
}

func (o *GetGeolocationsSettingsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGeolocationsSettingsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGeolocationsSettingsNotFound creates a GetGeolocationsSettingsNotFound with default headers values
func NewGetGeolocationsSettingsNotFound() *GetGeolocationsSettingsNotFound {
	return &GetGeolocationsSettingsNotFound{}
}

/*
GetGeolocationsSettingsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetGeolocationsSettingsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get geolocations settings not found response has a 2xx status code
func (o *GetGeolocationsSettingsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get geolocations settings not found response has a 3xx status code
func (o *GetGeolocationsSettingsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get geolocations settings not found response has a 4xx status code
func (o *GetGeolocationsSettingsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get geolocations settings not found response has a 5xx status code
func (o *GetGeolocationsSettingsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get geolocations settings not found response a status code equal to that given
func (o *GetGeolocationsSettingsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetGeolocationsSettingsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/geolocations/settings][%d] getGeolocationsSettingsNotFound  %+v", 404, o.Payload)
}

func (o *GetGeolocationsSettingsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/geolocations/settings][%d] getGeolocationsSettingsNotFound  %+v", 404, o.Payload)
}

func (o *GetGeolocationsSettingsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGeolocationsSettingsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGeolocationsSettingsRequestTimeout creates a GetGeolocationsSettingsRequestTimeout with default headers values
func NewGetGeolocationsSettingsRequestTimeout() *GetGeolocationsSettingsRequestTimeout {
	return &GetGeolocationsSettingsRequestTimeout{}
}

/*
GetGeolocationsSettingsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetGeolocationsSettingsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get geolocations settings request timeout response has a 2xx status code
func (o *GetGeolocationsSettingsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get geolocations settings request timeout response has a 3xx status code
func (o *GetGeolocationsSettingsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get geolocations settings request timeout response has a 4xx status code
func (o *GetGeolocationsSettingsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get geolocations settings request timeout response has a 5xx status code
func (o *GetGeolocationsSettingsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get geolocations settings request timeout response a status code equal to that given
func (o *GetGeolocationsSettingsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetGeolocationsSettingsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/geolocations/settings][%d] getGeolocationsSettingsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetGeolocationsSettingsRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/geolocations/settings][%d] getGeolocationsSettingsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetGeolocationsSettingsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGeolocationsSettingsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGeolocationsSettingsRequestEntityTooLarge creates a GetGeolocationsSettingsRequestEntityTooLarge with default headers values
func NewGetGeolocationsSettingsRequestEntityTooLarge() *GetGeolocationsSettingsRequestEntityTooLarge {
	return &GetGeolocationsSettingsRequestEntityTooLarge{}
}

/*
GetGeolocationsSettingsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetGeolocationsSettingsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get geolocations settings request entity too large response has a 2xx status code
func (o *GetGeolocationsSettingsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get geolocations settings request entity too large response has a 3xx status code
func (o *GetGeolocationsSettingsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get geolocations settings request entity too large response has a 4xx status code
func (o *GetGeolocationsSettingsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get geolocations settings request entity too large response has a 5xx status code
func (o *GetGeolocationsSettingsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get geolocations settings request entity too large response a status code equal to that given
func (o *GetGeolocationsSettingsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetGeolocationsSettingsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/geolocations/settings][%d] getGeolocationsSettingsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetGeolocationsSettingsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/geolocations/settings][%d] getGeolocationsSettingsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetGeolocationsSettingsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGeolocationsSettingsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGeolocationsSettingsUnsupportedMediaType creates a GetGeolocationsSettingsUnsupportedMediaType with default headers values
func NewGetGeolocationsSettingsUnsupportedMediaType() *GetGeolocationsSettingsUnsupportedMediaType {
	return &GetGeolocationsSettingsUnsupportedMediaType{}
}

/*
GetGeolocationsSettingsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetGeolocationsSettingsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get geolocations settings unsupported media type response has a 2xx status code
func (o *GetGeolocationsSettingsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get geolocations settings unsupported media type response has a 3xx status code
func (o *GetGeolocationsSettingsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get geolocations settings unsupported media type response has a 4xx status code
func (o *GetGeolocationsSettingsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get geolocations settings unsupported media type response has a 5xx status code
func (o *GetGeolocationsSettingsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get geolocations settings unsupported media type response a status code equal to that given
func (o *GetGeolocationsSettingsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetGeolocationsSettingsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/geolocations/settings][%d] getGeolocationsSettingsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetGeolocationsSettingsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/geolocations/settings][%d] getGeolocationsSettingsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetGeolocationsSettingsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGeolocationsSettingsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGeolocationsSettingsTooManyRequests creates a GetGeolocationsSettingsTooManyRequests with default headers values
func NewGetGeolocationsSettingsTooManyRequests() *GetGeolocationsSettingsTooManyRequests {
	return &GetGeolocationsSettingsTooManyRequests{}
}

/*
GetGeolocationsSettingsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetGeolocationsSettingsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get geolocations settings too many requests response has a 2xx status code
func (o *GetGeolocationsSettingsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get geolocations settings too many requests response has a 3xx status code
func (o *GetGeolocationsSettingsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get geolocations settings too many requests response has a 4xx status code
func (o *GetGeolocationsSettingsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get geolocations settings too many requests response has a 5xx status code
func (o *GetGeolocationsSettingsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get geolocations settings too many requests response a status code equal to that given
func (o *GetGeolocationsSettingsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetGeolocationsSettingsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/geolocations/settings][%d] getGeolocationsSettingsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetGeolocationsSettingsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/geolocations/settings][%d] getGeolocationsSettingsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetGeolocationsSettingsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGeolocationsSettingsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGeolocationsSettingsInternalServerError creates a GetGeolocationsSettingsInternalServerError with default headers values
func NewGetGeolocationsSettingsInternalServerError() *GetGeolocationsSettingsInternalServerError {
	return &GetGeolocationsSettingsInternalServerError{}
}

/*
GetGeolocationsSettingsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetGeolocationsSettingsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get geolocations settings internal server error response has a 2xx status code
func (o *GetGeolocationsSettingsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get geolocations settings internal server error response has a 3xx status code
func (o *GetGeolocationsSettingsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get geolocations settings internal server error response has a 4xx status code
func (o *GetGeolocationsSettingsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get geolocations settings internal server error response has a 5xx status code
func (o *GetGeolocationsSettingsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get geolocations settings internal server error response a status code equal to that given
func (o *GetGeolocationsSettingsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetGeolocationsSettingsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/geolocations/settings][%d] getGeolocationsSettingsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetGeolocationsSettingsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/geolocations/settings][%d] getGeolocationsSettingsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetGeolocationsSettingsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGeolocationsSettingsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGeolocationsSettingsServiceUnavailable creates a GetGeolocationsSettingsServiceUnavailable with default headers values
func NewGetGeolocationsSettingsServiceUnavailable() *GetGeolocationsSettingsServiceUnavailable {
	return &GetGeolocationsSettingsServiceUnavailable{}
}

/*
GetGeolocationsSettingsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetGeolocationsSettingsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get geolocations settings service unavailable response has a 2xx status code
func (o *GetGeolocationsSettingsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get geolocations settings service unavailable response has a 3xx status code
func (o *GetGeolocationsSettingsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get geolocations settings service unavailable response has a 4xx status code
func (o *GetGeolocationsSettingsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get geolocations settings service unavailable response has a 5xx status code
func (o *GetGeolocationsSettingsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get geolocations settings service unavailable response a status code equal to that given
func (o *GetGeolocationsSettingsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetGeolocationsSettingsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/geolocations/settings][%d] getGeolocationsSettingsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetGeolocationsSettingsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/geolocations/settings][%d] getGeolocationsSettingsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetGeolocationsSettingsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGeolocationsSettingsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGeolocationsSettingsGatewayTimeout creates a GetGeolocationsSettingsGatewayTimeout with default headers values
func NewGetGeolocationsSettingsGatewayTimeout() *GetGeolocationsSettingsGatewayTimeout {
	return &GetGeolocationsSettingsGatewayTimeout{}
}

/*
GetGeolocationsSettingsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetGeolocationsSettingsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get geolocations settings gateway timeout response has a 2xx status code
func (o *GetGeolocationsSettingsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get geolocations settings gateway timeout response has a 3xx status code
func (o *GetGeolocationsSettingsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get geolocations settings gateway timeout response has a 4xx status code
func (o *GetGeolocationsSettingsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get geolocations settings gateway timeout response has a 5xx status code
func (o *GetGeolocationsSettingsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get geolocations settings gateway timeout response a status code equal to that given
func (o *GetGeolocationsSettingsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetGeolocationsSettingsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/geolocations/settings][%d] getGeolocationsSettingsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetGeolocationsSettingsGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/geolocations/settings][%d] getGeolocationsSettingsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetGeolocationsSettingsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGeolocationsSettingsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
