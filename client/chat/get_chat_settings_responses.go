// Code generated by go-swagger; DO NOT EDIT.

package chat

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetChatSettingsReader is a Reader for the GetChatSettings structure.
type GetChatSettingsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetChatSettingsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetChatSettingsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetChatSettingsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetChatSettingsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetChatSettingsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetChatSettingsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetChatSettingsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetChatSettingsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetChatSettingsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetChatSettingsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetChatSettingsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetChatSettingsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetChatSettingsOK creates a GetChatSettingsOK with default headers values
func NewGetChatSettingsOK() *GetChatSettingsOK {
	return &GetChatSettingsOK{}
}

/*GetChatSettingsOK handles this case with default header values.

successful operation
*/
type GetChatSettingsOK struct {
	Payload *models.ChatSettings
}

func (o *GetChatSettingsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/chat/settings][%d] getChatSettingsOK  %+v", 200, o.Payload)
}

func (o *GetChatSettingsOK) GetPayload() *models.ChatSettings {
	return o.Payload
}

func (o *GetChatSettingsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ChatSettings)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChatSettingsBadRequest creates a GetChatSettingsBadRequest with default headers values
func NewGetChatSettingsBadRequest() *GetChatSettingsBadRequest {
	return &GetChatSettingsBadRequest{}
}

/*GetChatSettingsBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetChatSettingsBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetChatSettingsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/chat/settings][%d] getChatSettingsBadRequest  %+v", 400, o.Payload)
}

func (o *GetChatSettingsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetChatSettingsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChatSettingsUnauthorized creates a GetChatSettingsUnauthorized with default headers values
func NewGetChatSettingsUnauthorized() *GetChatSettingsUnauthorized {
	return &GetChatSettingsUnauthorized{}
}

/*GetChatSettingsUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetChatSettingsUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetChatSettingsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/chat/settings][%d] getChatSettingsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetChatSettingsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetChatSettingsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChatSettingsForbidden creates a GetChatSettingsForbidden with default headers values
func NewGetChatSettingsForbidden() *GetChatSettingsForbidden {
	return &GetChatSettingsForbidden{}
}

/*GetChatSettingsForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetChatSettingsForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetChatSettingsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/chat/settings][%d] getChatSettingsForbidden  %+v", 403, o.Payload)
}

func (o *GetChatSettingsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetChatSettingsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChatSettingsNotFound creates a GetChatSettingsNotFound with default headers values
func NewGetChatSettingsNotFound() *GetChatSettingsNotFound {
	return &GetChatSettingsNotFound{}
}

/*GetChatSettingsNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetChatSettingsNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetChatSettingsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/chat/settings][%d] getChatSettingsNotFound  %+v", 404, o.Payload)
}

func (o *GetChatSettingsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetChatSettingsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChatSettingsRequestEntityTooLarge creates a GetChatSettingsRequestEntityTooLarge with default headers values
func NewGetChatSettingsRequestEntityTooLarge() *GetChatSettingsRequestEntityTooLarge {
	return &GetChatSettingsRequestEntityTooLarge{}
}

/*GetChatSettingsRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetChatSettingsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetChatSettingsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/chat/settings][%d] getChatSettingsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetChatSettingsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetChatSettingsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChatSettingsUnsupportedMediaType creates a GetChatSettingsUnsupportedMediaType with default headers values
func NewGetChatSettingsUnsupportedMediaType() *GetChatSettingsUnsupportedMediaType {
	return &GetChatSettingsUnsupportedMediaType{}
}

/*GetChatSettingsUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetChatSettingsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetChatSettingsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/chat/settings][%d] getChatSettingsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetChatSettingsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetChatSettingsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChatSettingsTooManyRequests creates a GetChatSettingsTooManyRequests with default headers values
func NewGetChatSettingsTooManyRequests() *GetChatSettingsTooManyRequests {
	return &GetChatSettingsTooManyRequests{}
}

/*GetChatSettingsTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type GetChatSettingsTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetChatSettingsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/chat/settings][%d] getChatSettingsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetChatSettingsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetChatSettingsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChatSettingsInternalServerError creates a GetChatSettingsInternalServerError with default headers values
func NewGetChatSettingsInternalServerError() *GetChatSettingsInternalServerError {
	return &GetChatSettingsInternalServerError{}
}

/*GetChatSettingsInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetChatSettingsInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetChatSettingsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/chat/settings][%d] getChatSettingsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetChatSettingsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetChatSettingsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChatSettingsServiceUnavailable creates a GetChatSettingsServiceUnavailable with default headers values
func NewGetChatSettingsServiceUnavailable() *GetChatSettingsServiceUnavailable {
	return &GetChatSettingsServiceUnavailable{}
}

/*GetChatSettingsServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetChatSettingsServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetChatSettingsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/chat/settings][%d] getChatSettingsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetChatSettingsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetChatSettingsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChatSettingsGatewayTimeout creates a GetChatSettingsGatewayTimeout with default headers values
func NewGetChatSettingsGatewayTimeout() *GetChatSettingsGatewayTimeout {
	return &GetChatSettingsGatewayTimeout{}
}

/*GetChatSettingsGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetChatSettingsGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetChatSettingsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/chat/settings][%d] getChatSettingsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetChatSettingsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetChatSettingsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
