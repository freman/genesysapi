// Code generated by go-swagger; DO NOT EDIT.

package chat

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetChatsSettingsReader is a Reader for the GetChatsSettings structure.
type GetChatsSettingsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetChatsSettingsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetChatsSettingsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetChatsSettingsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetChatsSettingsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetChatsSettingsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetChatsSettingsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetChatsSettingsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetChatsSettingsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetChatsSettingsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetChatsSettingsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetChatsSettingsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetChatsSettingsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetChatsSettingsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetChatsSettingsOK creates a GetChatsSettingsOK with default headers values
func NewGetChatsSettingsOK() *GetChatsSettingsOK {
	return &GetChatsSettingsOK{}
}

/*
GetChatsSettingsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetChatsSettingsOK struct {
	Payload *models.ChatSettings
}

// IsSuccess returns true when this get chats settings o k response has a 2xx status code
func (o *GetChatsSettingsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get chats settings o k response has a 3xx status code
func (o *GetChatsSettingsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chats settings o k response has a 4xx status code
func (o *GetChatsSettingsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get chats settings o k response has a 5xx status code
func (o *GetChatsSettingsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get chats settings o k response a status code equal to that given
func (o *GetChatsSettingsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetChatsSettingsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/chats/settings][%d] getChatsSettingsOK  %+v", 200, o.Payload)
}

func (o *GetChatsSettingsOK) String() string {
	return fmt.Sprintf("[GET /api/v2/chats/settings][%d] getChatsSettingsOK  %+v", 200, o.Payload)
}

func (o *GetChatsSettingsOK) GetPayload() *models.ChatSettings {
	return o.Payload
}

func (o *GetChatsSettingsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ChatSettings)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChatsSettingsBadRequest creates a GetChatsSettingsBadRequest with default headers values
func NewGetChatsSettingsBadRequest() *GetChatsSettingsBadRequest {
	return &GetChatsSettingsBadRequest{}
}

/*
GetChatsSettingsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetChatsSettingsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get chats settings bad request response has a 2xx status code
func (o *GetChatsSettingsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get chats settings bad request response has a 3xx status code
func (o *GetChatsSettingsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chats settings bad request response has a 4xx status code
func (o *GetChatsSettingsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get chats settings bad request response has a 5xx status code
func (o *GetChatsSettingsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get chats settings bad request response a status code equal to that given
func (o *GetChatsSettingsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetChatsSettingsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/chats/settings][%d] getChatsSettingsBadRequest  %+v", 400, o.Payload)
}

func (o *GetChatsSettingsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/chats/settings][%d] getChatsSettingsBadRequest  %+v", 400, o.Payload)
}

func (o *GetChatsSettingsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetChatsSettingsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChatsSettingsUnauthorized creates a GetChatsSettingsUnauthorized with default headers values
func NewGetChatsSettingsUnauthorized() *GetChatsSettingsUnauthorized {
	return &GetChatsSettingsUnauthorized{}
}

/*
GetChatsSettingsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetChatsSettingsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get chats settings unauthorized response has a 2xx status code
func (o *GetChatsSettingsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get chats settings unauthorized response has a 3xx status code
func (o *GetChatsSettingsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chats settings unauthorized response has a 4xx status code
func (o *GetChatsSettingsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get chats settings unauthorized response has a 5xx status code
func (o *GetChatsSettingsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get chats settings unauthorized response a status code equal to that given
func (o *GetChatsSettingsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetChatsSettingsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/chats/settings][%d] getChatsSettingsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetChatsSettingsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/chats/settings][%d] getChatsSettingsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetChatsSettingsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetChatsSettingsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChatsSettingsForbidden creates a GetChatsSettingsForbidden with default headers values
func NewGetChatsSettingsForbidden() *GetChatsSettingsForbidden {
	return &GetChatsSettingsForbidden{}
}

/*
GetChatsSettingsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetChatsSettingsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get chats settings forbidden response has a 2xx status code
func (o *GetChatsSettingsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get chats settings forbidden response has a 3xx status code
func (o *GetChatsSettingsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chats settings forbidden response has a 4xx status code
func (o *GetChatsSettingsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get chats settings forbidden response has a 5xx status code
func (o *GetChatsSettingsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get chats settings forbidden response a status code equal to that given
func (o *GetChatsSettingsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetChatsSettingsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/chats/settings][%d] getChatsSettingsForbidden  %+v", 403, o.Payload)
}

func (o *GetChatsSettingsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/chats/settings][%d] getChatsSettingsForbidden  %+v", 403, o.Payload)
}

func (o *GetChatsSettingsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetChatsSettingsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChatsSettingsNotFound creates a GetChatsSettingsNotFound with default headers values
func NewGetChatsSettingsNotFound() *GetChatsSettingsNotFound {
	return &GetChatsSettingsNotFound{}
}

/*
GetChatsSettingsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetChatsSettingsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get chats settings not found response has a 2xx status code
func (o *GetChatsSettingsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get chats settings not found response has a 3xx status code
func (o *GetChatsSettingsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chats settings not found response has a 4xx status code
func (o *GetChatsSettingsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get chats settings not found response has a 5xx status code
func (o *GetChatsSettingsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get chats settings not found response a status code equal to that given
func (o *GetChatsSettingsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetChatsSettingsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/chats/settings][%d] getChatsSettingsNotFound  %+v", 404, o.Payload)
}

func (o *GetChatsSettingsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/chats/settings][%d] getChatsSettingsNotFound  %+v", 404, o.Payload)
}

func (o *GetChatsSettingsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetChatsSettingsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChatsSettingsRequestTimeout creates a GetChatsSettingsRequestTimeout with default headers values
func NewGetChatsSettingsRequestTimeout() *GetChatsSettingsRequestTimeout {
	return &GetChatsSettingsRequestTimeout{}
}

/*
GetChatsSettingsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetChatsSettingsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get chats settings request timeout response has a 2xx status code
func (o *GetChatsSettingsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get chats settings request timeout response has a 3xx status code
func (o *GetChatsSettingsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chats settings request timeout response has a 4xx status code
func (o *GetChatsSettingsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get chats settings request timeout response has a 5xx status code
func (o *GetChatsSettingsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get chats settings request timeout response a status code equal to that given
func (o *GetChatsSettingsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetChatsSettingsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/chats/settings][%d] getChatsSettingsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetChatsSettingsRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/chats/settings][%d] getChatsSettingsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetChatsSettingsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetChatsSettingsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChatsSettingsRequestEntityTooLarge creates a GetChatsSettingsRequestEntityTooLarge with default headers values
func NewGetChatsSettingsRequestEntityTooLarge() *GetChatsSettingsRequestEntityTooLarge {
	return &GetChatsSettingsRequestEntityTooLarge{}
}

/*
GetChatsSettingsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetChatsSettingsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get chats settings request entity too large response has a 2xx status code
func (o *GetChatsSettingsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get chats settings request entity too large response has a 3xx status code
func (o *GetChatsSettingsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chats settings request entity too large response has a 4xx status code
func (o *GetChatsSettingsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get chats settings request entity too large response has a 5xx status code
func (o *GetChatsSettingsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get chats settings request entity too large response a status code equal to that given
func (o *GetChatsSettingsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetChatsSettingsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/chats/settings][%d] getChatsSettingsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetChatsSettingsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/chats/settings][%d] getChatsSettingsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetChatsSettingsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetChatsSettingsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChatsSettingsUnsupportedMediaType creates a GetChatsSettingsUnsupportedMediaType with default headers values
func NewGetChatsSettingsUnsupportedMediaType() *GetChatsSettingsUnsupportedMediaType {
	return &GetChatsSettingsUnsupportedMediaType{}
}

/*
GetChatsSettingsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetChatsSettingsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get chats settings unsupported media type response has a 2xx status code
func (o *GetChatsSettingsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get chats settings unsupported media type response has a 3xx status code
func (o *GetChatsSettingsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chats settings unsupported media type response has a 4xx status code
func (o *GetChatsSettingsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get chats settings unsupported media type response has a 5xx status code
func (o *GetChatsSettingsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get chats settings unsupported media type response a status code equal to that given
func (o *GetChatsSettingsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetChatsSettingsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/chats/settings][%d] getChatsSettingsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetChatsSettingsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/chats/settings][%d] getChatsSettingsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetChatsSettingsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetChatsSettingsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChatsSettingsTooManyRequests creates a GetChatsSettingsTooManyRequests with default headers values
func NewGetChatsSettingsTooManyRequests() *GetChatsSettingsTooManyRequests {
	return &GetChatsSettingsTooManyRequests{}
}

/*
GetChatsSettingsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetChatsSettingsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get chats settings too many requests response has a 2xx status code
func (o *GetChatsSettingsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get chats settings too many requests response has a 3xx status code
func (o *GetChatsSettingsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chats settings too many requests response has a 4xx status code
func (o *GetChatsSettingsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get chats settings too many requests response has a 5xx status code
func (o *GetChatsSettingsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get chats settings too many requests response a status code equal to that given
func (o *GetChatsSettingsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetChatsSettingsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/chats/settings][%d] getChatsSettingsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetChatsSettingsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/chats/settings][%d] getChatsSettingsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetChatsSettingsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetChatsSettingsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChatsSettingsInternalServerError creates a GetChatsSettingsInternalServerError with default headers values
func NewGetChatsSettingsInternalServerError() *GetChatsSettingsInternalServerError {
	return &GetChatsSettingsInternalServerError{}
}

/*
GetChatsSettingsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetChatsSettingsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get chats settings internal server error response has a 2xx status code
func (o *GetChatsSettingsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get chats settings internal server error response has a 3xx status code
func (o *GetChatsSettingsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chats settings internal server error response has a 4xx status code
func (o *GetChatsSettingsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get chats settings internal server error response has a 5xx status code
func (o *GetChatsSettingsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get chats settings internal server error response a status code equal to that given
func (o *GetChatsSettingsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetChatsSettingsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/chats/settings][%d] getChatsSettingsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetChatsSettingsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/chats/settings][%d] getChatsSettingsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetChatsSettingsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetChatsSettingsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChatsSettingsServiceUnavailable creates a GetChatsSettingsServiceUnavailable with default headers values
func NewGetChatsSettingsServiceUnavailable() *GetChatsSettingsServiceUnavailable {
	return &GetChatsSettingsServiceUnavailable{}
}

/*
GetChatsSettingsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetChatsSettingsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get chats settings service unavailable response has a 2xx status code
func (o *GetChatsSettingsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get chats settings service unavailable response has a 3xx status code
func (o *GetChatsSettingsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chats settings service unavailable response has a 4xx status code
func (o *GetChatsSettingsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get chats settings service unavailable response has a 5xx status code
func (o *GetChatsSettingsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get chats settings service unavailable response a status code equal to that given
func (o *GetChatsSettingsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetChatsSettingsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/chats/settings][%d] getChatsSettingsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetChatsSettingsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/chats/settings][%d] getChatsSettingsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetChatsSettingsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetChatsSettingsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChatsSettingsGatewayTimeout creates a GetChatsSettingsGatewayTimeout with default headers values
func NewGetChatsSettingsGatewayTimeout() *GetChatsSettingsGatewayTimeout {
	return &GetChatsSettingsGatewayTimeout{}
}

/*
GetChatsSettingsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetChatsSettingsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get chats settings gateway timeout response has a 2xx status code
func (o *GetChatsSettingsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get chats settings gateway timeout response has a 3xx status code
func (o *GetChatsSettingsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chats settings gateway timeout response has a 4xx status code
func (o *GetChatsSettingsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get chats settings gateway timeout response has a 5xx status code
func (o *GetChatsSettingsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get chats settings gateway timeout response a status code equal to that given
func (o *GetChatsSettingsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetChatsSettingsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/chats/settings][%d] getChatsSettingsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetChatsSettingsGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/chats/settings][%d] getChatsSettingsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetChatsSettingsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetChatsSettingsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
