// Code generated by go-swagger; DO NOT EDIT.

package mobile_devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetMobiledevicesReader is a Reader for the GetMobiledevices structure.
type GetMobiledevicesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMobiledevicesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetMobiledevicesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetMobiledevicesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetMobiledevicesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetMobiledevicesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetMobiledevicesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetMobiledevicesRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetMobiledevicesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetMobiledevicesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetMobiledevicesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetMobiledevicesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetMobiledevicesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetMobiledevicesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetMobiledevicesOK creates a GetMobiledevicesOK with default headers values
func NewGetMobiledevicesOK() *GetMobiledevicesOK {
	return &GetMobiledevicesOK{}
}

/*
GetMobiledevicesOK describes a response with status code 200, with default header values.

successful operation
*/
type GetMobiledevicesOK struct {
	Payload *models.DirectoryUserDevicesListing
}

// IsSuccess returns true when this get mobiledevices o k response has a 2xx status code
func (o *GetMobiledevicesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get mobiledevices o k response has a 3xx status code
func (o *GetMobiledevicesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get mobiledevices o k response has a 4xx status code
func (o *GetMobiledevicesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get mobiledevices o k response has a 5xx status code
func (o *GetMobiledevicesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get mobiledevices o k response a status code equal to that given
func (o *GetMobiledevicesOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetMobiledevicesOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/mobiledevices][%d] getMobiledevicesOK  %+v", 200, o.Payload)
}

func (o *GetMobiledevicesOK) String() string {
	return fmt.Sprintf("[GET /api/v2/mobiledevices][%d] getMobiledevicesOK  %+v", 200, o.Payload)
}

func (o *GetMobiledevicesOK) GetPayload() *models.DirectoryUserDevicesListing {
	return o.Payload
}

func (o *GetMobiledevicesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DirectoryUserDevicesListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMobiledevicesBadRequest creates a GetMobiledevicesBadRequest with default headers values
func NewGetMobiledevicesBadRequest() *GetMobiledevicesBadRequest {
	return &GetMobiledevicesBadRequest{}
}

/*
GetMobiledevicesBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetMobiledevicesBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get mobiledevices bad request response has a 2xx status code
func (o *GetMobiledevicesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get mobiledevices bad request response has a 3xx status code
func (o *GetMobiledevicesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get mobiledevices bad request response has a 4xx status code
func (o *GetMobiledevicesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get mobiledevices bad request response has a 5xx status code
func (o *GetMobiledevicesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get mobiledevices bad request response a status code equal to that given
func (o *GetMobiledevicesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetMobiledevicesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/mobiledevices][%d] getMobiledevicesBadRequest  %+v", 400, o.Payload)
}

func (o *GetMobiledevicesBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/mobiledevices][%d] getMobiledevicesBadRequest  %+v", 400, o.Payload)
}

func (o *GetMobiledevicesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetMobiledevicesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMobiledevicesUnauthorized creates a GetMobiledevicesUnauthorized with default headers values
func NewGetMobiledevicesUnauthorized() *GetMobiledevicesUnauthorized {
	return &GetMobiledevicesUnauthorized{}
}

/*
GetMobiledevicesUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetMobiledevicesUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get mobiledevices unauthorized response has a 2xx status code
func (o *GetMobiledevicesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get mobiledevices unauthorized response has a 3xx status code
func (o *GetMobiledevicesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get mobiledevices unauthorized response has a 4xx status code
func (o *GetMobiledevicesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get mobiledevices unauthorized response has a 5xx status code
func (o *GetMobiledevicesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get mobiledevices unauthorized response a status code equal to that given
func (o *GetMobiledevicesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetMobiledevicesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/mobiledevices][%d] getMobiledevicesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetMobiledevicesUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/mobiledevices][%d] getMobiledevicesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetMobiledevicesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetMobiledevicesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMobiledevicesForbidden creates a GetMobiledevicesForbidden with default headers values
func NewGetMobiledevicesForbidden() *GetMobiledevicesForbidden {
	return &GetMobiledevicesForbidden{}
}

/*
GetMobiledevicesForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetMobiledevicesForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get mobiledevices forbidden response has a 2xx status code
func (o *GetMobiledevicesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get mobiledevices forbidden response has a 3xx status code
func (o *GetMobiledevicesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get mobiledevices forbidden response has a 4xx status code
func (o *GetMobiledevicesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get mobiledevices forbidden response has a 5xx status code
func (o *GetMobiledevicesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get mobiledevices forbidden response a status code equal to that given
func (o *GetMobiledevicesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetMobiledevicesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/mobiledevices][%d] getMobiledevicesForbidden  %+v", 403, o.Payload)
}

func (o *GetMobiledevicesForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/mobiledevices][%d] getMobiledevicesForbidden  %+v", 403, o.Payload)
}

func (o *GetMobiledevicesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetMobiledevicesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMobiledevicesNotFound creates a GetMobiledevicesNotFound with default headers values
func NewGetMobiledevicesNotFound() *GetMobiledevicesNotFound {
	return &GetMobiledevicesNotFound{}
}

/*
GetMobiledevicesNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetMobiledevicesNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get mobiledevices not found response has a 2xx status code
func (o *GetMobiledevicesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get mobiledevices not found response has a 3xx status code
func (o *GetMobiledevicesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get mobiledevices not found response has a 4xx status code
func (o *GetMobiledevicesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get mobiledevices not found response has a 5xx status code
func (o *GetMobiledevicesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get mobiledevices not found response a status code equal to that given
func (o *GetMobiledevicesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetMobiledevicesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/mobiledevices][%d] getMobiledevicesNotFound  %+v", 404, o.Payload)
}

func (o *GetMobiledevicesNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/mobiledevices][%d] getMobiledevicesNotFound  %+v", 404, o.Payload)
}

func (o *GetMobiledevicesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetMobiledevicesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMobiledevicesRequestTimeout creates a GetMobiledevicesRequestTimeout with default headers values
func NewGetMobiledevicesRequestTimeout() *GetMobiledevicesRequestTimeout {
	return &GetMobiledevicesRequestTimeout{}
}

/*
GetMobiledevicesRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetMobiledevicesRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get mobiledevices request timeout response has a 2xx status code
func (o *GetMobiledevicesRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get mobiledevices request timeout response has a 3xx status code
func (o *GetMobiledevicesRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get mobiledevices request timeout response has a 4xx status code
func (o *GetMobiledevicesRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get mobiledevices request timeout response has a 5xx status code
func (o *GetMobiledevicesRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get mobiledevices request timeout response a status code equal to that given
func (o *GetMobiledevicesRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetMobiledevicesRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/mobiledevices][%d] getMobiledevicesRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetMobiledevicesRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/mobiledevices][%d] getMobiledevicesRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetMobiledevicesRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetMobiledevicesRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMobiledevicesRequestEntityTooLarge creates a GetMobiledevicesRequestEntityTooLarge with default headers values
func NewGetMobiledevicesRequestEntityTooLarge() *GetMobiledevicesRequestEntityTooLarge {
	return &GetMobiledevicesRequestEntityTooLarge{}
}

/*
GetMobiledevicesRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetMobiledevicesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get mobiledevices request entity too large response has a 2xx status code
func (o *GetMobiledevicesRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get mobiledevices request entity too large response has a 3xx status code
func (o *GetMobiledevicesRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get mobiledevices request entity too large response has a 4xx status code
func (o *GetMobiledevicesRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get mobiledevices request entity too large response has a 5xx status code
func (o *GetMobiledevicesRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get mobiledevices request entity too large response a status code equal to that given
func (o *GetMobiledevicesRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetMobiledevicesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/mobiledevices][%d] getMobiledevicesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetMobiledevicesRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/mobiledevices][%d] getMobiledevicesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetMobiledevicesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetMobiledevicesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMobiledevicesUnsupportedMediaType creates a GetMobiledevicesUnsupportedMediaType with default headers values
func NewGetMobiledevicesUnsupportedMediaType() *GetMobiledevicesUnsupportedMediaType {
	return &GetMobiledevicesUnsupportedMediaType{}
}

/*
GetMobiledevicesUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetMobiledevicesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get mobiledevices unsupported media type response has a 2xx status code
func (o *GetMobiledevicesUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get mobiledevices unsupported media type response has a 3xx status code
func (o *GetMobiledevicesUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get mobiledevices unsupported media type response has a 4xx status code
func (o *GetMobiledevicesUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get mobiledevices unsupported media type response has a 5xx status code
func (o *GetMobiledevicesUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get mobiledevices unsupported media type response a status code equal to that given
func (o *GetMobiledevicesUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetMobiledevicesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/mobiledevices][%d] getMobiledevicesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetMobiledevicesUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/mobiledevices][%d] getMobiledevicesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetMobiledevicesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetMobiledevicesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMobiledevicesTooManyRequests creates a GetMobiledevicesTooManyRequests with default headers values
func NewGetMobiledevicesTooManyRequests() *GetMobiledevicesTooManyRequests {
	return &GetMobiledevicesTooManyRequests{}
}

/*
GetMobiledevicesTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetMobiledevicesTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get mobiledevices too many requests response has a 2xx status code
func (o *GetMobiledevicesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get mobiledevices too many requests response has a 3xx status code
func (o *GetMobiledevicesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get mobiledevices too many requests response has a 4xx status code
func (o *GetMobiledevicesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get mobiledevices too many requests response has a 5xx status code
func (o *GetMobiledevicesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get mobiledevices too many requests response a status code equal to that given
func (o *GetMobiledevicesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetMobiledevicesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/mobiledevices][%d] getMobiledevicesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetMobiledevicesTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/mobiledevices][%d] getMobiledevicesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetMobiledevicesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetMobiledevicesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMobiledevicesInternalServerError creates a GetMobiledevicesInternalServerError with default headers values
func NewGetMobiledevicesInternalServerError() *GetMobiledevicesInternalServerError {
	return &GetMobiledevicesInternalServerError{}
}

/*
GetMobiledevicesInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetMobiledevicesInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get mobiledevices internal server error response has a 2xx status code
func (o *GetMobiledevicesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get mobiledevices internal server error response has a 3xx status code
func (o *GetMobiledevicesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get mobiledevices internal server error response has a 4xx status code
func (o *GetMobiledevicesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get mobiledevices internal server error response has a 5xx status code
func (o *GetMobiledevicesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get mobiledevices internal server error response a status code equal to that given
func (o *GetMobiledevicesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetMobiledevicesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/mobiledevices][%d] getMobiledevicesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetMobiledevicesInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/mobiledevices][%d] getMobiledevicesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetMobiledevicesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetMobiledevicesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMobiledevicesServiceUnavailable creates a GetMobiledevicesServiceUnavailable with default headers values
func NewGetMobiledevicesServiceUnavailable() *GetMobiledevicesServiceUnavailable {
	return &GetMobiledevicesServiceUnavailable{}
}

/*
GetMobiledevicesServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetMobiledevicesServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get mobiledevices service unavailable response has a 2xx status code
func (o *GetMobiledevicesServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get mobiledevices service unavailable response has a 3xx status code
func (o *GetMobiledevicesServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get mobiledevices service unavailable response has a 4xx status code
func (o *GetMobiledevicesServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get mobiledevices service unavailable response has a 5xx status code
func (o *GetMobiledevicesServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get mobiledevices service unavailable response a status code equal to that given
func (o *GetMobiledevicesServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetMobiledevicesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/mobiledevices][%d] getMobiledevicesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetMobiledevicesServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/mobiledevices][%d] getMobiledevicesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetMobiledevicesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetMobiledevicesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMobiledevicesGatewayTimeout creates a GetMobiledevicesGatewayTimeout with default headers values
func NewGetMobiledevicesGatewayTimeout() *GetMobiledevicesGatewayTimeout {
	return &GetMobiledevicesGatewayTimeout{}
}

/*
GetMobiledevicesGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetMobiledevicesGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get mobiledevices gateway timeout response has a 2xx status code
func (o *GetMobiledevicesGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get mobiledevices gateway timeout response has a 3xx status code
func (o *GetMobiledevicesGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get mobiledevices gateway timeout response has a 4xx status code
func (o *GetMobiledevicesGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get mobiledevices gateway timeout response has a 5xx status code
func (o *GetMobiledevicesGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get mobiledevices gateway timeout response a status code equal to that given
func (o *GetMobiledevicesGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetMobiledevicesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/mobiledevices][%d] getMobiledevicesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetMobiledevicesGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/mobiledevices][%d] getMobiledevicesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetMobiledevicesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetMobiledevicesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
