// Code generated by go-swagger; DO NOT EDIT.

package language_understanding

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetLanguageunderstandingDomainVersionReader is a Reader for the GetLanguageunderstandingDomainVersion structure.
type GetLanguageunderstandingDomainVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLanguageunderstandingDomainVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLanguageunderstandingDomainVersionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetLanguageunderstandingDomainVersionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetLanguageunderstandingDomainVersionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetLanguageunderstandingDomainVersionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetLanguageunderstandingDomainVersionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetLanguageunderstandingDomainVersionRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetLanguageunderstandingDomainVersionRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetLanguageunderstandingDomainVersionUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetLanguageunderstandingDomainVersionTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetLanguageunderstandingDomainVersionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetLanguageunderstandingDomainVersionServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetLanguageunderstandingDomainVersionGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetLanguageunderstandingDomainVersionOK creates a GetLanguageunderstandingDomainVersionOK with default headers values
func NewGetLanguageunderstandingDomainVersionOK() *GetLanguageunderstandingDomainVersionOK {
	return &GetLanguageunderstandingDomainVersionOK{}
}

/*
GetLanguageunderstandingDomainVersionOK describes a response with status code 200, with default header values.

Retrieved the specified NLU Domain Version
*/
type GetLanguageunderstandingDomainVersionOK struct {
	Payload *models.NluDomainVersion
}

// IsSuccess returns true when this get languageunderstanding domain version o k response has a 2xx status code
func (o *GetLanguageunderstandingDomainVersionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get languageunderstanding domain version o k response has a 3xx status code
func (o *GetLanguageunderstandingDomainVersionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain version o k response has a 4xx status code
func (o *GetLanguageunderstandingDomainVersionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get languageunderstanding domain version o k response has a 5xx status code
func (o *GetLanguageunderstandingDomainVersionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domain version o k response a status code equal to that given
func (o *GetLanguageunderstandingDomainVersionOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetLanguageunderstandingDomainVersionOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}][%d] getLanguageunderstandingDomainVersionOK  %+v", 200, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionOK) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}][%d] getLanguageunderstandingDomainVersionOK  %+v", 200, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionOK) GetPayload() *models.NluDomainVersion {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainVersionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NluDomainVersion)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainVersionBadRequest creates a GetLanguageunderstandingDomainVersionBadRequest with default headers values
func NewGetLanguageunderstandingDomainVersionBadRequest() *GetLanguageunderstandingDomainVersionBadRequest {
	return &GetLanguageunderstandingDomainVersionBadRequest{}
}

/*
GetLanguageunderstandingDomainVersionBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetLanguageunderstandingDomainVersionBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain version bad request response has a 2xx status code
func (o *GetLanguageunderstandingDomainVersionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain version bad request response has a 3xx status code
func (o *GetLanguageunderstandingDomainVersionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain version bad request response has a 4xx status code
func (o *GetLanguageunderstandingDomainVersionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding domain version bad request response has a 5xx status code
func (o *GetLanguageunderstandingDomainVersionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domain version bad request response a status code equal to that given
func (o *GetLanguageunderstandingDomainVersionBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetLanguageunderstandingDomainVersionBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}][%d] getLanguageunderstandingDomainVersionBadRequest  %+v", 400, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}][%d] getLanguageunderstandingDomainVersionBadRequest  %+v", 400, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainVersionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainVersionUnauthorized creates a GetLanguageunderstandingDomainVersionUnauthorized with default headers values
func NewGetLanguageunderstandingDomainVersionUnauthorized() *GetLanguageunderstandingDomainVersionUnauthorized {
	return &GetLanguageunderstandingDomainVersionUnauthorized{}
}

/*
GetLanguageunderstandingDomainVersionUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetLanguageunderstandingDomainVersionUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain version unauthorized response has a 2xx status code
func (o *GetLanguageunderstandingDomainVersionUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain version unauthorized response has a 3xx status code
func (o *GetLanguageunderstandingDomainVersionUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain version unauthorized response has a 4xx status code
func (o *GetLanguageunderstandingDomainVersionUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding domain version unauthorized response has a 5xx status code
func (o *GetLanguageunderstandingDomainVersionUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domain version unauthorized response a status code equal to that given
func (o *GetLanguageunderstandingDomainVersionUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetLanguageunderstandingDomainVersionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}][%d] getLanguageunderstandingDomainVersionUnauthorized  %+v", 401, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}][%d] getLanguageunderstandingDomainVersionUnauthorized  %+v", 401, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainVersionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainVersionForbidden creates a GetLanguageunderstandingDomainVersionForbidden with default headers values
func NewGetLanguageunderstandingDomainVersionForbidden() *GetLanguageunderstandingDomainVersionForbidden {
	return &GetLanguageunderstandingDomainVersionForbidden{}
}

/*
GetLanguageunderstandingDomainVersionForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetLanguageunderstandingDomainVersionForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain version forbidden response has a 2xx status code
func (o *GetLanguageunderstandingDomainVersionForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain version forbidden response has a 3xx status code
func (o *GetLanguageunderstandingDomainVersionForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain version forbidden response has a 4xx status code
func (o *GetLanguageunderstandingDomainVersionForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding domain version forbidden response has a 5xx status code
func (o *GetLanguageunderstandingDomainVersionForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domain version forbidden response a status code equal to that given
func (o *GetLanguageunderstandingDomainVersionForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetLanguageunderstandingDomainVersionForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}][%d] getLanguageunderstandingDomainVersionForbidden  %+v", 403, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}][%d] getLanguageunderstandingDomainVersionForbidden  %+v", 403, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainVersionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainVersionNotFound creates a GetLanguageunderstandingDomainVersionNotFound with default headers values
func NewGetLanguageunderstandingDomainVersionNotFound() *GetLanguageunderstandingDomainVersionNotFound {
	return &GetLanguageunderstandingDomainVersionNotFound{}
}

/*
GetLanguageunderstandingDomainVersionNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetLanguageunderstandingDomainVersionNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain version not found response has a 2xx status code
func (o *GetLanguageunderstandingDomainVersionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain version not found response has a 3xx status code
func (o *GetLanguageunderstandingDomainVersionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain version not found response has a 4xx status code
func (o *GetLanguageunderstandingDomainVersionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding domain version not found response has a 5xx status code
func (o *GetLanguageunderstandingDomainVersionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domain version not found response a status code equal to that given
func (o *GetLanguageunderstandingDomainVersionNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetLanguageunderstandingDomainVersionNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}][%d] getLanguageunderstandingDomainVersionNotFound  %+v", 404, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}][%d] getLanguageunderstandingDomainVersionNotFound  %+v", 404, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainVersionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainVersionRequestTimeout creates a GetLanguageunderstandingDomainVersionRequestTimeout with default headers values
func NewGetLanguageunderstandingDomainVersionRequestTimeout() *GetLanguageunderstandingDomainVersionRequestTimeout {
	return &GetLanguageunderstandingDomainVersionRequestTimeout{}
}

/*
GetLanguageunderstandingDomainVersionRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetLanguageunderstandingDomainVersionRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain version request timeout response has a 2xx status code
func (o *GetLanguageunderstandingDomainVersionRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain version request timeout response has a 3xx status code
func (o *GetLanguageunderstandingDomainVersionRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain version request timeout response has a 4xx status code
func (o *GetLanguageunderstandingDomainVersionRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding domain version request timeout response has a 5xx status code
func (o *GetLanguageunderstandingDomainVersionRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domain version request timeout response a status code equal to that given
func (o *GetLanguageunderstandingDomainVersionRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetLanguageunderstandingDomainVersionRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}][%d] getLanguageunderstandingDomainVersionRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}][%d] getLanguageunderstandingDomainVersionRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainVersionRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainVersionRequestEntityTooLarge creates a GetLanguageunderstandingDomainVersionRequestEntityTooLarge with default headers values
func NewGetLanguageunderstandingDomainVersionRequestEntityTooLarge() *GetLanguageunderstandingDomainVersionRequestEntityTooLarge {
	return &GetLanguageunderstandingDomainVersionRequestEntityTooLarge{}
}

/*
GetLanguageunderstandingDomainVersionRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetLanguageunderstandingDomainVersionRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain version request entity too large response has a 2xx status code
func (o *GetLanguageunderstandingDomainVersionRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain version request entity too large response has a 3xx status code
func (o *GetLanguageunderstandingDomainVersionRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain version request entity too large response has a 4xx status code
func (o *GetLanguageunderstandingDomainVersionRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding domain version request entity too large response has a 5xx status code
func (o *GetLanguageunderstandingDomainVersionRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domain version request entity too large response a status code equal to that given
func (o *GetLanguageunderstandingDomainVersionRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetLanguageunderstandingDomainVersionRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}][%d] getLanguageunderstandingDomainVersionRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}][%d] getLanguageunderstandingDomainVersionRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainVersionRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainVersionUnsupportedMediaType creates a GetLanguageunderstandingDomainVersionUnsupportedMediaType with default headers values
func NewGetLanguageunderstandingDomainVersionUnsupportedMediaType() *GetLanguageunderstandingDomainVersionUnsupportedMediaType {
	return &GetLanguageunderstandingDomainVersionUnsupportedMediaType{}
}

/*
GetLanguageunderstandingDomainVersionUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetLanguageunderstandingDomainVersionUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain version unsupported media type response has a 2xx status code
func (o *GetLanguageunderstandingDomainVersionUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain version unsupported media type response has a 3xx status code
func (o *GetLanguageunderstandingDomainVersionUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain version unsupported media type response has a 4xx status code
func (o *GetLanguageunderstandingDomainVersionUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding domain version unsupported media type response has a 5xx status code
func (o *GetLanguageunderstandingDomainVersionUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domain version unsupported media type response a status code equal to that given
func (o *GetLanguageunderstandingDomainVersionUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetLanguageunderstandingDomainVersionUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}][%d] getLanguageunderstandingDomainVersionUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}][%d] getLanguageunderstandingDomainVersionUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainVersionUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainVersionTooManyRequests creates a GetLanguageunderstandingDomainVersionTooManyRequests with default headers values
func NewGetLanguageunderstandingDomainVersionTooManyRequests() *GetLanguageunderstandingDomainVersionTooManyRequests {
	return &GetLanguageunderstandingDomainVersionTooManyRequests{}
}

/*
GetLanguageunderstandingDomainVersionTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetLanguageunderstandingDomainVersionTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain version too many requests response has a 2xx status code
func (o *GetLanguageunderstandingDomainVersionTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain version too many requests response has a 3xx status code
func (o *GetLanguageunderstandingDomainVersionTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain version too many requests response has a 4xx status code
func (o *GetLanguageunderstandingDomainVersionTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding domain version too many requests response has a 5xx status code
func (o *GetLanguageunderstandingDomainVersionTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domain version too many requests response a status code equal to that given
func (o *GetLanguageunderstandingDomainVersionTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetLanguageunderstandingDomainVersionTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}][%d] getLanguageunderstandingDomainVersionTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}][%d] getLanguageunderstandingDomainVersionTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainVersionTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainVersionInternalServerError creates a GetLanguageunderstandingDomainVersionInternalServerError with default headers values
func NewGetLanguageunderstandingDomainVersionInternalServerError() *GetLanguageunderstandingDomainVersionInternalServerError {
	return &GetLanguageunderstandingDomainVersionInternalServerError{}
}

/*
GetLanguageunderstandingDomainVersionInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetLanguageunderstandingDomainVersionInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain version internal server error response has a 2xx status code
func (o *GetLanguageunderstandingDomainVersionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain version internal server error response has a 3xx status code
func (o *GetLanguageunderstandingDomainVersionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain version internal server error response has a 4xx status code
func (o *GetLanguageunderstandingDomainVersionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get languageunderstanding domain version internal server error response has a 5xx status code
func (o *GetLanguageunderstandingDomainVersionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get languageunderstanding domain version internal server error response a status code equal to that given
func (o *GetLanguageunderstandingDomainVersionInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetLanguageunderstandingDomainVersionInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}][%d] getLanguageunderstandingDomainVersionInternalServerError  %+v", 500, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}][%d] getLanguageunderstandingDomainVersionInternalServerError  %+v", 500, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainVersionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainVersionServiceUnavailable creates a GetLanguageunderstandingDomainVersionServiceUnavailable with default headers values
func NewGetLanguageunderstandingDomainVersionServiceUnavailable() *GetLanguageunderstandingDomainVersionServiceUnavailable {
	return &GetLanguageunderstandingDomainVersionServiceUnavailable{}
}

/*
GetLanguageunderstandingDomainVersionServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetLanguageunderstandingDomainVersionServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain version service unavailable response has a 2xx status code
func (o *GetLanguageunderstandingDomainVersionServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain version service unavailable response has a 3xx status code
func (o *GetLanguageunderstandingDomainVersionServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain version service unavailable response has a 4xx status code
func (o *GetLanguageunderstandingDomainVersionServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get languageunderstanding domain version service unavailable response has a 5xx status code
func (o *GetLanguageunderstandingDomainVersionServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get languageunderstanding domain version service unavailable response a status code equal to that given
func (o *GetLanguageunderstandingDomainVersionServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetLanguageunderstandingDomainVersionServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}][%d] getLanguageunderstandingDomainVersionServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}][%d] getLanguageunderstandingDomainVersionServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainVersionServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainVersionGatewayTimeout creates a GetLanguageunderstandingDomainVersionGatewayTimeout with default headers values
func NewGetLanguageunderstandingDomainVersionGatewayTimeout() *GetLanguageunderstandingDomainVersionGatewayTimeout {
	return &GetLanguageunderstandingDomainVersionGatewayTimeout{}
}

/*
GetLanguageunderstandingDomainVersionGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetLanguageunderstandingDomainVersionGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain version gateway timeout response has a 2xx status code
func (o *GetLanguageunderstandingDomainVersionGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain version gateway timeout response has a 3xx status code
func (o *GetLanguageunderstandingDomainVersionGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain version gateway timeout response has a 4xx status code
func (o *GetLanguageunderstandingDomainVersionGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get languageunderstanding domain version gateway timeout response has a 5xx status code
func (o *GetLanguageunderstandingDomainVersionGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get languageunderstanding domain version gateway timeout response a status code equal to that given
func (o *GetLanguageunderstandingDomainVersionGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetLanguageunderstandingDomainVersionGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}][%d] getLanguageunderstandingDomainVersionGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}][%d] getLanguageunderstandingDomainVersionGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainVersionGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
