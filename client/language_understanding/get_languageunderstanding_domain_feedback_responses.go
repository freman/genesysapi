// Code generated by go-swagger; DO NOT EDIT.

package language_understanding

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetLanguageunderstandingDomainFeedbackReader is a Reader for the GetLanguageunderstandingDomainFeedback structure.
type GetLanguageunderstandingDomainFeedbackReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLanguageunderstandingDomainFeedbackReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLanguageunderstandingDomainFeedbackOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetLanguageunderstandingDomainFeedbackBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetLanguageunderstandingDomainFeedbackUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetLanguageunderstandingDomainFeedbackForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetLanguageunderstandingDomainFeedbackNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetLanguageunderstandingDomainFeedbackRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetLanguageunderstandingDomainFeedbackRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetLanguageunderstandingDomainFeedbackUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetLanguageunderstandingDomainFeedbackTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetLanguageunderstandingDomainFeedbackInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetLanguageunderstandingDomainFeedbackServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetLanguageunderstandingDomainFeedbackGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetLanguageunderstandingDomainFeedbackOK creates a GetLanguageunderstandingDomainFeedbackOK with default headers values
func NewGetLanguageunderstandingDomainFeedbackOK() *GetLanguageunderstandingDomainFeedbackOK {
	return &GetLanguageunderstandingDomainFeedbackOK{}
}

/*
GetLanguageunderstandingDomainFeedbackOK describes a response with status code 200, with default header values.

successful operation
*/
type GetLanguageunderstandingDomainFeedbackOK struct {
	Payload *models.NluFeedbackListing
}

// IsSuccess returns true when this get languageunderstanding domain feedback o k response has a 2xx status code
func (o *GetLanguageunderstandingDomainFeedbackOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get languageunderstanding domain feedback o k response has a 3xx status code
func (o *GetLanguageunderstandingDomainFeedbackOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain feedback o k response has a 4xx status code
func (o *GetLanguageunderstandingDomainFeedbackOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get languageunderstanding domain feedback o k response has a 5xx status code
func (o *GetLanguageunderstandingDomainFeedbackOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domain feedback o k response a status code equal to that given
func (o *GetLanguageunderstandingDomainFeedbackOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetLanguageunderstandingDomainFeedbackOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/feedback][%d] getLanguageunderstandingDomainFeedbackOK  %+v", 200, o.Payload)
}

func (o *GetLanguageunderstandingDomainFeedbackOK) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/feedback][%d] getLanguageunderstandingDomainFeedbackOK  %+v", 200, o.Payload)
}

func (o *GetLanguageunderstandingDomainFeedbackOK) GetPayload() *models.NluFeedbackListing {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainFeedbackOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NluFeedbackListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainFeedbackBadRequest creates a GetLanguageunderstandingDomainFeedbackBadRequest with default headers values
func NewGetLanguageunderstandingDomainFeedbackBadRequest() *GetLanguageunderstandingDomainFeedbackBadRequest {
	return &GetLanguageunderstandingDomainFeedbackBadRequest{}
}

/*
GetLanguageunderstandingDomainFeedbackBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetLanguageunderstandingDomainFeedbackBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain feedback bad request response has a 2xx status code
func (o *GetLanguageunderstandingDomainFeedbackBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain feedback bad request response has a 3xx status code
func (o *GetLanguageunderstandingDomainFeedbackBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain feedback bad request response has a 4xx status code
func (o *GetLanguageunderstandingDomainFeedbackBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding domain feedback bad request response has a 5xx status code
func (o *GetLanguageunderstandingDomainFeedbackBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domain feedback bad request response a status code equal to that given
func (o *GetLanguageunderstandingDomainFeedbackBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetLanguageunderstandingDomainFeedbackBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/feedback][%d] getLanguageunderstandingDomainFeedbackBadRequest  %+v", 400, o.Payload)
}

func (o *GetLanguageunderstandingDomainFeedbackBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/feedback][%d] getLanguageunderstandingDomainFeedbackBadRequest  %+v", 400, o.Payload)
}

func (o *GetLanguageunderstandingDomainFeedbackBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainFeedbackBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainFeedbackUnauthorized creates a GetLanguageunderstandingDomainFeedbackUnauthorized with default headers values
func NewGetLanguageunderstandingDomainFeedbackUnauthorized() *GetLanguageunderstandingDomainFeedbackUnauthorized {
	return &GetLanguageunderstandingDomainFeedbackUnauthorized{}
}

/*
GetLanguageunderstandingDomainFeedbackUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetLanguageunderstandingDomainFeedbackUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain feedback unauthorized response has a 2xx status code
func (o *GetLanguageunderstandingDomainFeedbackUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain feedback unauthorized response has a 3xx status code
func (o *GetLanguageunderstandingDomainFeedbackUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain feedback unauthorized response has a 4xx status code
func (o *GetLanguageunderstandingDomainFeedbackUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding domain feedback unauthorized response has a 5xx status code
func (o *GetLanguageunderstandingDomainFeedbackUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domain feedback unauthorized response a status code equal to that given
func (o *GetLanguageunderstandingDomainFeedbackUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetLanguageunderstandingDomainFeedbackUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/feedback][%d] getLanguageunderstandingDomainFeedbackUnauthorized  %+v", 401, o.Payload)
}

func (o *GetLanguageunderstandingDomainFeedbackUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/feedback][%d] getLanguageunderstandingDomainFeedbackUnauthorized  %+v", 401, o.Payload)
}

func (o *GetLanguageunderstandingDomainFeedbackUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainFeedbackUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainFeedbackForbidden creates a GetLanguageunderstandingDomainFeedbackForbidden with default headers values
func NewGetLanguageunderstandingDomainFeedbackForbidden() *GetLanguageunderstandingDomainFeedbackForbidden {
	return &GetLanguageunderstandingDomainFeedbackForbidden{}
}

/*
GetLanguageunderstandingDomainFeedbackForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetLanguageunderstandingDomainFeedbackForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain feedback forbidden response has a 2xx status code
func (o *GetLanguageunderstandingDomainFeedbackForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain feedback forbidden response has a 3xx status code
func (o *GetLanguageunderstandingDomainFeedbackForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain feedback forbidden response has a 4xx status code
func (o *GetLanguageunderstandingDomainFeedbackForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding domain feedback forbidden response has a 5xx status code
func (o *GetLanguageunderstandingDomainFeedbackForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domain feedback forbidden response a status code equal to that given
func (o *GetLanguageunderstandingDomainFeedbackForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetLanguageunderstandingDomainFeedbackForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/feedback][%d] getLanguageunderstandingDomainFeedbackForbidden  %+v", 403, o.Payload)
}

func (o *GetLanguageunderstandingDomainFeedbackForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/feedback][%d] getLanguageunderstandingDomainFeedbackForbidden  %+v", 403, o.Payload)
}

func (o *GetLanguageunderstandingDomainFeedbackForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainFeedbackForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainFeedbackNotFound creates a GetLanguageunderstandingDomainFeedbackNotFound with default headers values
func NewGetLanguageunderstandingDomainFeedbackNotFound() *GetLanguageunderstandingDomainFeedbackNotFound {
	return &GetLanguageunderstandingDomainFeedbackNotFound{}
}

/*
GetLanguageunderstandingDomainFeedbackNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetLanguageunderstandingDomainFeedbackNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain feedback not found response has a 2xx status code
func (o *GetLanguageunderstandingDomainFeedbackNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain feedback not found response has a 3xx status code
func (o *GetLanguageunderstandingDomainFeedbackNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain feedback not found response has a 4xx status code
func (o *GetLanguageunderstandingDomainFeedbackNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding domain feedback not found response has a 5xx status code
func (o *GetLanguageunderstandingDomainFeedbackNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domain feedback not found response a status code equal to that given
func (o *GetLanguageunderstandingDomainFeedbackNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetLanguageunderstandingDomainFeedbackNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/feedback][%d] getLanguageunderstandingDomainFeedbackNotFound  %+v", 404, o.Payload)
}

func (o *GetLanguageunderstandingDomainFeedbackNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/feedback][%d] getLanguageunderstandingDomainFeedbackNotFound  %+v", 404, o.Payload)
}

func (o *GetLanguageunderstandingDomainFeedbackNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainFeedbackNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainFeedbackRequestTimeout creates a GetLanguageunderstandingDomainFeedbackRequestTimeout with default headers values
func NewGetLanguageunderstandingDomainFeedbackRequestTimeout() *GetLanguageunderstandingDomainFeedbackRequestTimeout {
	return &GetLanguageunderstandingDomainFeedbackRequestTimeout{}
}

/*
GetLanguageunderstandingDomainFeedbackRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetLanguageunderstandingDomainFeedbackRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain feedback request timeout response has a 2xx status code
func (o *GetLanguageunderstandingDomainFeedbackRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain feedback request timeout response has a 3xx status code
func (o *GetLanguageunderstandingDomainFeedbackRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain feedback request timeout response has a 4xx status code
func (o *GetLanguageunderstandingDomainFeedbackRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding domain feedback request timeout response has a 5xx status code
func (o *GetLanguageunderstandingDomainFeedbackRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domain feedback request timeout response a status code equal to that given
func (o *GetLanguageunderstandingDomainFeedbackRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetLanguageunderstandingDomainFeedbackRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/feedback][%d] getLanguageunderstandingDomainFeedbackRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetLanguageunderstandingDomainFeedbackRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/feedback][%d] getLanguageunderstandingDomainFeedbackRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetLanguageunderstandingDomainFeedbackRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainFeedbackRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainFeedbackRequestEntityTooLarge creates a GetLanguageunderstandingDomainFeedbackRequestEntityTooLarge with default headers values
func NewGetLanguageunderstandingDomainFeedbackRequestEntityTooLarge() *GetLanguageunderstandingDomainFeedbackRequestEntityTooLarge {
	return &GetLanguageunderstandingDomainFeedbackRequestEntityTooLarge{}
}

/*
GetLanguageunderstandingDomainFeedbackRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetLanguageunderstandingDomainFeedbackRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain feedback request entity too large response has a 2xx status code
func (o *GetLanguageunderstandingDomainFeedbackRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain feedback request entity too large response has a 3xx status code
func (o *GetLanguageunderstandingDomainFeedbackRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain feedback request entity too large response has a 4xx status code
func (o *GetLanguageunderstandingDomainFeedbackRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding domain feedback request entity too large response has a 5xx status code
func (o *GetLanguageunderstandingDomainFeedbackRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domain feedback request entity too large response a status code equal to that given
func (o *GetLanguageunderstandingDomainFeedbackRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetLanguageunderstandingDomainFeedbackRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/feedback][%d] getLanguageunderstandingDomainFeedbackRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetLanguageunderstandingDomainFeedbackRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/feedback][%d] getLanguageunderstandingDomainFeedbackRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetLanguageunderstandingDomainFeedbackRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainFeedbackRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainFeedbackUnsupportedMediaType creates a GetLanguageunderstandingDomainFeedbackUnsupportedMediaType with default headers values
func NewGetLanguageunderstandingDomainFeedbackUnsupportedMediaType() *GetLanguageunderstandingDomainFeedbackUnsupportedMediaType {
	return &GetLanguageunderstandingDomainFeedbackUnsupportedMediaType{}
}

/*
GetLanguageunderstandingDomainFeedbackUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetLanguageunderstandingDomainFeedbackUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain feedback unsupported media type response has a 2xx status code
func (o *GetLanguageunderstandingDomainFeedbackUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain feedback unsupported media type response has a 3xx status code
func (o *GetLanguageunderstandingDomainFeedbackUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain feedback unsupported media type response has a 4xx status code
func (o *GetLanguageunderstandingDomainFeedbackUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding domain feedback unsupported media type response has a 5xx status code
func (o *GetLanguageunderstandingDomainFeedbackUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domain feedback unsupported media type response a status code equal to that given
func (o *GetLanguageunderstandingDomainFeedbackUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetLanguageunderstandingDomainFeedbackUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/feedback][%d] getLanguageunderstandingDomainFeedbackUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetLanguageunderstandingDomainFeedbackUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/feedback][%d] getLanguageunderstandingDomainFeedbackUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetLanguageunderstandingDomainFeedbackUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainFeedbackUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainFeedbackTooManyRequests creates a GetLanguageunderstandingDomainFeedbackTooManyRequests with default headers values
func NewGetLanguageunderstandingDomainFeedbackTooManyRequests() *GetLanguageunderstandingDomainFeedbackTooManyRequests {
	return &GetLanguageunderstandingDomainFeedbackTooManyRequests{}
}

/*
GetLanguageunderstandingDomainFeedbackTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetLanguageunderstandingDomainFeedbackTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain feedback too many requests response has a 2xx status code
func (o *GetLanguageunderstandingDomainFeedbackTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain feedback too many requests response has a 3xx status code
func (o *GetLanguageunderstandingDomainFeedbackTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain feedback too many requests response has a 4xx status code
func (o *GetLanguageunderstandingDomainFeedbackTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding domain feedback too many requests response has a 5xx status code
func (o *GetLanguageunderstandingDomainFeedbackTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domain feedback too many requests response a status code equal to that given
func (o *GetLanguageunderstandingDomainFeedbackTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetLanguageunderstandingDomainFeedbackTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/feedback][%d] getLanguageunderstandingDomainFeedbackTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetLanguageunderstandingDomainFeedbackTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/feedback][%d] getLanguageunderstandingDomainFeedbackTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetLanguageunderstandingDomainFeedbackTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainFeedbackTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainFeedbackInternalServerError creates a GetLanguageunderstandingDomainFeedbackInternalServerError with default headers values
func NewGetLanguageunderstandingDomainFeedbackInternalServerError() *GetLanguageunderstandingDomainFeedbackInternalServerError {
	return &GetLanguageunderstandingDomainFeedbackInternalServerError{}
}

/*
GetLanguageunderstandingDomainFeedbackInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetLanguageunderstandingDomainFeedbackInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain feedback internal server error response has a 2xx status code
func (o *GetLanguageunderstandingDomainFeedbackInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain feedback internal server error response has a 3xx status code
func (o *GetLanguageunderstandingDomainFeedbackInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain feedback internal server error response has a 4xx status code
func (o *GetLanguageunderstandingDomainFeedbackInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get languageunderstanding domain feedback internal server error response has a 5xx status code
func (o *GetLanguageunderstandingDomainFeedbackInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get languageunderstanding domain feedback internal server error response a status code equal to that given
func (o *GetLanguageunderstandingDomainFeedbackInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetLanguageunderstandingDomainFeedbackInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/feedback][%d] getLanguageunderstandingDomainFeedbackInternalServerError  %+v", 500, o.Payload)
}

func (o *GetLanguageunderstandingDomainFeedbackInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/feedback][%d] getLanguageunderstandingDomainFeedbackInternalServerError  %+v", 500, o.Payload)
}

func (o *GetLanguageunderstandingDomainFeedbackInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainFeedbackInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainFeedbackServiceUnavailable creates a GetLanguageunderstandingDomainFeedbackServiceUnavailable with default headers values
func NewGetLanguageunderstandingDomainFeedbackServiceUnavailable() *GetLanguageunderstandingDomainFeedbackServiceUnavailable {
	return &GetLanguageunderstandingDomainFeedbackServiceUnavailable{}
}

/*
GetLanguageunderstandingDomainFeedbackServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetLanguageunderstandingDomainFeedbackServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain feedback service unavailable response has a 2xx status code
func (o *GetLanguageunderstandingDomainFeedbackServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain feedback service unavailable response has a 3xx status code
func (o *GetLanguageunderstandingDomainFeedbackServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain feedback service unavailable response has a 4xx status code
func (o *GetLanguageunderstandingDomainFeedbackServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get languageunderstanding domain feedback service unavailable response has a 5xx status code
func (o *GetLanguageunderstandingDomainFeedbackServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get languageunderstanding domain feedback service unavailable response a status code equal to that given
func (o *GetLanguageunderstandingDomainFeedbackServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetLanguageunderstandingDomainFeedbackServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/feedback][%d] getLanguageunderstandingDomainFeedbackServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetLanguageunderstandingDomainFeedbackServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/feedback][%d] getLanguageunderstandingDomainFeedbackServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetLanguageunderstandingDomainFeedbackServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainFeedbackServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainFeedbackGatewayTimeout creates a GetLanguageunderstandingDomainFeedbackGatewayTimeout with default headers values
func NewGetLanguageunderstandingDomainFeedbackGatewayTimeout() *GetLanguageunderstandingDomainFeedbackGatewayTimeout {
	return &GetLanguageunderstandingDomainFeedbackGatewayTimeout{}
}

/*
GetLanguageunderstandingDomainFeedbackGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetLanguageunderstandingDomainFeedbackGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain feedback gateway timeout response has a 2xx status code
func (o *GetLanguageunderstandingDomainFeedbackGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain feedback gateway timeout response has a 3xx status code
func (o *GetLanguageunderstandingDomainFeedbackGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain feedback gateway timeout response has a 4xx status code
func (o *GetLanguageunderstandingDomainFeedbackGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get languageunderstanding domain feedback gateway timeout response has a 5xx status code
func (o *GetLanguageunderstandingDomainFeedbackGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get languageunderstanding domain feedback gateway timeout response a status code equal to that given
func (o *GetLanguageunderstandingDomainFeedbackGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetLanguageunderstandingDomainFeedbackGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/feedback][%d] getLanguageunderstandingDomainFeedbackGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetLanguageunderstandingDomainFeedbackGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/feedback][%d] getLanguageunderstandingDomainFeedbackGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetLanguageunderstandingDomainFeedbackGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainFeedbackGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
