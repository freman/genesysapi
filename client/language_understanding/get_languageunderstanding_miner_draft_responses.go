// Code generated by go-swagger; DO NOT EDIT.

package language_understanding

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetLanguageunderstandingMinerDraftReader is a Reader for the GetLanguageunderstandingMinerDraft structure.
type GetLanguageunderstandingMinerDraftReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLanguageunderstandingMinerDraftReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLanguageunderstandingMinerDraftOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetLanguageunderstandingMinerDraftBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetLanguageunderstandingMinerDraftUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetLanguageunderstandingMinerDraftForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetLanguageunderstandingMinerDraftNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetLanguageunderstandingMinerDraftRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetLanguageunderstandingMinerDraftRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetLanguageunderstandingMinerDraftUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetLanguageunderstandingMinerDraftTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetLanguageunderstandingMinerDraftInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetLanguageunderstandingMinerDraftServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetLanguageunderstandingMinerDraftGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetLanguageunderstandingMinerDraftOK creates a GetLanguageunderstandingMinerDraftOK with default headers values
func NewGetLanguageunderstandingMinerDraftOK() *GetLanguageunderstandingMinerDraftOK {
	return &GetLanguageunderstandingMinerDraftOK{}
}

/*GetLanguageunderstandingMinerDraftOK handles this case with default header values.

successful operation
*/
type GetLanguageunderstandingMinerDraftOK struct {
	Payload *models.Draft
}

func (o *GetLanguageunderstandingMinerDraftOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/drafts/{draftId}][%d] getLanguageunderstandingMinerDraftOK  %+v", 200, o.Payload)
}

func (o *GetLanguageunderstandingMinerDraftOK) GetPayload() *models.Draft {
	return o.Payload
}

func (o *GetLanguageunderstandingMinerDraftOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Draft)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingMinerDraftBadRequest creates a GetLanguageunderstandingMinerDraftBadRequest with default headers values
func NewGetLanguageunderstandingMinerDraftBadRequest() *GetLanguageunderstandingMinerDraftBadRequest {
	return &GetLanguageunderstandingMinerDraftBadRequest{}
}

/*GetLanguageunderstandingMinerDraftBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetLanguageunderstandingMinerDraftBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetLanguageunderstandingMinerDraftBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/drafts/{draftId}][%d] getLanguageunderstandingMinerDraftBadRequest  %+v", 400, o.Payload)
}

func (o *GetLanguageunderstandingMinerDraftBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingMinerDraftBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingMinerDraftUnauthorized creates a GetLanguageunderstandingMinerDraftUnauthorized with default headers values
func NewGetLanguageunderstandingMinerDraftUnauthorized() *GetLanguageunderstandingMinerDraftUnauthorized {
	return &GetLanguageunderstandingMinerDraftUnauthorized{}
}

/*GetLanguageunderstandingMinerDraftUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetLanguageunderstandingMinerDraftUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetLanguageunderstandingMinerDraftUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/drafts/{draftId}][%d] getLanguageunderstandingMinerDraftUnauthorized  %+v", 401, o.Payload)
}

func (o *GetLanguageunderstandingMinerDraftUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingMinerDraftUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingMinerDraftForbidden creates a GetLanguageunderstandingMinerDraftForbidden with default headers values
func NewGetLanguageunderstandingMinerDraftForbidden() *GetLanguageunderstandingMinerDraftForbidden {
	return &GetLanguageunderstandingMinerDraftForbidden{}
}

/*GetLanguageunderstandingMinerDraftForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetLanguageunderstandingMinerDraftForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetLanguageunderstandingMinerDraftForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/drafts/{draftId}][%d] getLanguageunderstandingMinerDraftForbidden  %+v", 403, o.Payload)
}

func (o *GetLanguageunderstandingMinerDraftForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingMinerDraftForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingMinerDraftNotFound creates a GetLanguageunderstandingMinerDraftNotFound with default headers values
func NewGetLanguageunderstandingMinerDraftNotFound() *GetLanguageunderstandingMinerDraftNotFound {
	return &GetLanguageunderstandingMinerDraftNotFound{}
}

/*GetLanguageunderstandingMinerDraftNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetLanguageunderstandingMinerDraftNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetLanguageunderstandingMinerDraftNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/drafts/{draftId}][%d] getLanguageunderstandingMinerDraftNotFound  %+v", 404, o.Payload)
}

func (o *GetLanguageunderstandingMinerDraftNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingMinerDraftNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingMinerDraftRequestTimeout creates a GetLanguageunderstandingMinerDraftRequestTimeout with default headers values
func NewGetLanguageunderstandingMinerDraftRequestTimeout() *GetLanguageunderstandingMinerDraftRequestTimeout {
	return &GetLanguageunderstandingMinerDraftRequestTimeout{}
}

/*GetLanguageunderstandingMinerDraftRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetLanguageunderstandingMinerDraftRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetLanguageunderstandingMinerDraftRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/drafts/{draftId}][%d] getLanguageunderstandingMinerDraftRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetLanguageunderstandingMinerDraftRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingMinerDraftRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingMinerDraftRequestEntityTooLarge creates a GetLanguageunderstandingMinerDraftRequestEntityTooLarge with default headers values
func NewGetLanguageunderstandingMinerDraftRequestEntityTooLarge() *GetLanguageunderstandingMinerDraftRequestEntityTooLarge {
	return &GetLanguageunderstandingMinerDraftRequestEntityTooLarge{}
}

/*GetLanguageunderstandingMinerDraftRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetLanguageunderstandingMinerDraftRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetLanguageunderstandingMinerDraftRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/drafts/{draftId}][%d] getLanguageunderstandingMinerDraftRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetLanguageunderstandingMinerDraftRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingMinerDraftRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingMinerDraftUnsupportedMediaType creates a GetLanguageunderstandingMinerDraftUnsupportedMediaType with default headers values
func NewGetLanguageunderstandingMinerDraftUnsupportedMediaType() *GetLanguageunderstandingMinerDraftUnsupportedMediaType {
	return &GetLanguageunderstandingMinerDraftUnsupportedMediaType{}
}

/*GetLanguageunderstandingMinerDraftUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetLanguageunderstandingMinerDraftUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetLanguageunderstandingMinerDraftUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/drafts/{draftId}][%d] getLanguageunderstandingMinerDraftUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetLanguageunderstandingMinerDraftUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingMinerDraftUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingMinerDraftTooManyRequests creates a GetLanguageunderstandingMinerDraftTooManyRequests with default headers values
func NewGetLanguageunderstandingMinerDraftTooManyRequests() *GetLanguageunderstandingMinerDraftTooManyRequests {
	return &GetLanguageunderstandingMinerDraftTooManyRequests{}
}

/*GetLanguageunderstandingMinerDraftTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetLanguageunderstandingMinerDraftTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetLanguageunderstandingMinerDraftTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/drafts/{draftId}][%d] getLanguageunderstandingMinerDraftTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetLanguageunderstandingMinerDraftTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingMinerDraftTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingMinerDraftInternalServerError creates a GetLanguageunderstandingMinerDraftInternalServerError with default headers values
func NewGetLanguageunderstandingMinerDraftInternalServerError() *GetLanguageunderstandingMinerDraftInternalServerError {
	return &GetLanguageunderstandingMinerDraftInternalServerError{}
}

/*GetLanguageunderstandingMinerDraftInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetLanguageunderstandingMinerDraftInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetLanguageunderstandingMinerDraftInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/drafts/{draftId}][%d] getLanguageunderstandingMinerDraftInternalServerError  %+v", 500, o.Payload)
}

func (o *GetLanguageunderstandingMinerDraftInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingMinerDraftInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingMinerDraftServiceUnavailable creates a GetLanguageunderstandingMinerDraftServiceUnavailable with default headers values
func NewGetLanguageunderstandingMinerDraftServiceUnavailable() *GetLanguageunderstandingMinerDraftServiceUnavailable {
	return &GetLanguageunderstandingMinerDraftServiceUnavailable{}
}

/*GetLanguageunderstandingMinerDraftServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetLanguageunderstandingMinerDraftServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetLanguageunderstandingMinerDraftServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/drafts/{draftId}][%d] getLanguageunderstandingMinerDraftServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetLanguageunderstandingMinerDraftServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingMinerDraftServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingMinerDraftGatewayTimeout creates a GetLanguageunderstandingMinerDraftGatewayTimeout with default headers values
func NewGetLanguageunderstandingMinerDraftGatewayTimeout() *GetLanguageunderstandingMinerDraftGatewayTimeout {
	return &GetLanguageunderstandingMinerDraftGatewayTimeout{}
}

/*GetLanguageunderstandingMinerDraftGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetLanguageunderstandingMinerDraftGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetLanguageunderstandingMinerDraftGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/drafts/{draftId}][%d] getLanguageunderstandingMinerDraftGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetLanguageunderstandingMinerDraftGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingMinerDraftGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
