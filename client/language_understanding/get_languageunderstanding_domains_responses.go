// Code generated by go-swagger; DO NOT EDIT.

package language_understanding

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetLanguageunderstandingDomainsReader is a Reader for the GetLanguageunderstandingDomains structure.
type GetLanguageunderstandingDomainsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLanguageunderstandingDomainsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLanguageunderstandingDomainsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetLanguageunderstandingDomainsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetLanguageunderstandingDomainsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetLanguageunderstandingDomainsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetLanguageunderstandingDomainsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetLanguageunderstandingDomainsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetLanguageunderstandingDomainsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetLanguageunderstandingDomainsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetLanguageunderstandingDomainsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetLanguageunderstandingDomainsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetLanguageunderstandingDomainsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetLanguageunderstandingDomainsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetLanguageunderstandingDomainsOK creates a GetLanguageunderstandingDomainsOK with default headers values
func NewGetLanguageunderstandingDomainsOK() *GetLanguageunderstandingDomainsOK {
	return &GetLanguageunderstandingDomainsOK{}
}

/*
GetLanguageunderstandingDomainsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetLanguageunderstandingDomainsOK struct {
	Payload *models.NluDomainListing
}

// IsSuccess returns true when this get languageunderstanding domains o k response has a 2xx status code
func (o *GetLanguageunderstandingDomainsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get languageunderstanding domains o k response has a 3xx status code
func (o *GetLanguageunderstandingDomainsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domains o k response has a 4xx status code
func (o *GetLanguageunderstandingDomainsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get languageunderstanding domains o k response has a 5xx status code
func (o *GetLanguageunderstandingDomainsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domains o k response a status code equal to that given
func (o *GetLanguageunderstandingDomainsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetLanguageunderstandingDomainsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains][%d] getLanguageunderstandingDomainsOK  %+v", 200, o.Payload)
}

func (o *GetLanguageunderstandingDomainsOK) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains][%d] getLanguageunderstandingDomainsOK  %+v", 200, o.Payload)
}

func (o *GetLanguageunderstandingDomainsOK) GetPayload() *models.NluDomainListing {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NluDomainListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainsBadRequest creates a GetLanguageunderstandingDomainsBadRequest with default headers values
func NewGetLanguageunderstandingDomainsBadRequest() *GetLanguageunderstandingDomainsBadRequest {
	return &GetLanguageunderstandingDomainsBadRequest{}
}

/*
GetLanguageunderstandingDomainsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetLanguageunderstandingDomainsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domains bad request response has a 2xx status code
func (o *GetLanguageunderstandingDomainsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domains bad request response has a 3xx status code
func (o *GetLanguageunderstandingDomainsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domains bad request response has a 4xx status code
func (o *GetLanguageunderstandingDomainsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding domains bad request response has a 5xx status code
func (o *GetLanguageunderstandingDomainsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domains bad request response a status code equal to that given
func (o *GetLanguageunderstandingDomainsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetLanguageunderstandingDomainsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains][%d] getLanguageunderstandingDomainsBadRequest  %+v", 400, o.Payload)
}

func (o *GetLanguageunderstandingDomainsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains][%d] getLanguageunderstandingDomainsBadRequest  %+v", 400, o.Payload)
}

func (o *GetLanguageunderstandingDomainsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainsUnauthorized creates a GetLanguageunderstandingDomainsUnauthorized with default headers values
func NewGetLanguageunderstandingDomainsUnauthorized() *GetLanguageunderstandingDomainsUnauthorized {
	return &GetLanguageunderstandingDomainsUnauthorized{}
}

/*
GetLanguageunderstandingDomainsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetLanguageunderstandingDomainsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domains unauthorized response has a 2xx status code
func (o *GetLanguageunderstandingDomainsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domains unauthorized response has a 3xx status code
func (o *GetLanguageunderstandingDomainsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domains unauthorized response has a 4xx status code
func (o *GetLanguageunderstandingDomainsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding domains unauthorized response has a 5xx status code
func (o *GetLanguageunderstandingDomainsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domains unauthorized response a status code equal to that given
func (o *GetLanguageunderstandingDomainsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetLanguageunderstandingDomainsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains][%d] getLanguageunderstandingDomainsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetLanguageunderstandingDomainsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains][%d] getLanguageunderstandingDomainsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetLanguageunderstandingDomainsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainsForbidden creates a GetLanguageunderstandingDomainsForbidden with default headers values
func NewGetLanguageunderstandingDomainsForbidden() *GetLanguageunderstandingDomainsForbidden {
	return &GetLanguageunderstandingDomainsForbidden{}
}

/*
GetLanguageunderstandingDomainsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetLanguageunderstandingDomainsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domains forbidden response has a 2xx status code
func (o *GetLanguageunderstandingDomainsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domains forbidden response has a 3xx status code
func (o *GetLanguageunderstandingDomainsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domains forbidden response has a 4xx status code
func (o *GetLanguageunderstandingDomainsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding domains forbidden response has a 5xx status code
func (o *GetLanguageunderstandingDomainsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domains forbidden response a status code equal to that given
func (o *GetLanguageunderstandingDomainsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetLanguageunderstandingDomainsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains][%d] getLanguageunderstandingDomainsForbidden  %+v", 403, o.Payload)
}

func (o *GetLanguageunderstandingDomainsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains][%d] getLanguageunderstandingDomainsForbidden  %+v", 403, o.Payload)
}

func (o *GetLanguageunderstandingDomainsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainsNotFound creates a GetLanguageunderstandingDomainsNotFound with default headers values
func NewGetLanguageunderstandingDomainsNotFound() *GetLanguageunderstandingDomainsNotFound {
	return &GetLanguageunderstandingDomainsNotFound{}
}

/*
GetLanguageunderstandingDomainsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetLanguageunderstandingDomainsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domains not found response has a 2xx status code
func (o *GetLanguageunderstandingDomainsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domains not found response has a 3xx status code
func (o *GetLanguageunderstandingDomainsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domains not found response has a 4xx status code
func (o *GetLanguageunderstandingDomainsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding domains not found response has a 5xx status code
func (o *GetLanguageunderstandingDomainsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domains not found response a status code equal to that given
func (o *GetLanguageunderstandingDomainsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetLanguageunderstandingDomainsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains][%d] getLanguageunderstandingDomainsNotFound  %+v", 404, o.Payload)
}

func (o *GetLanguageunderstandingDomainsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains][%d] getLanguageunderstandingDomainsNotFound  %+v", 404, o.Payload)
}

func (o *GetLanguageunderstandingDomainsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainsRequestTimeout creates a GetLanguageunderstandingDomainsRequestTimeout with default headers values
func NewGetLanguageunderstandingDomainsRequestTimeout() *GetLanguageunderstandingDomainsRequestTimeout {
	return &GetLanguageunderstandingDomainsRequestTimeout{}
}

/*
GetLanguageunderstandingDomainsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetLanguageunderstandingDomainsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domains request timeout response has a 2xx status code
func (o *GetLanguageunderstandingDomainsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domains request timeout response has a 3xx status code
func (o *GetLanguageunderstandingDomainsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domains request timeout response has a 4xx status code
func (o *GetLanguageunderstandingDomainsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding domains request timeout response has a 5xx status code
func (o *GetLanguageunderstandingDomainsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domains request timeout response a status code equal to that given
func (o *GetLanguageunderstandingDomainsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetLanguageunderstandingDomainsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains][%d] getLanguageunderstandingDomainsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetLanguageunderstandingDomainsRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains][%d] getLanguageunderstandingDomainsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetLanguageunderstandingDomainsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainsRequestEntityTooLarge creates a GetLanguageunderstandingDomainsRequestEntityTooLarge with default headers values
func NewGetLanguageunderstandingDomainsRequestEntityTooLarge() *GetLanguageunderstandingDomainsRequestEntityTooLarge {
	return &GetLanguageunderstandingDomainsRequestEntityTooLarge{}
}

/*
GetLanguageunderstandingDomainsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetLanguageunderstandingDomainsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domains request entity too large response has a 2xx status code
func (o *GetLanguageunderstandingDomainsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domains request entity too large response has a 3xx status code
func (o *GetLanguageunderstandingDomainsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domains request entity too large response has a 4xx status code
func (o *GetLanguageunderstandingDomainsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding domains request entity too large response has a 5xx status code
func (o *GetLanguageunderstandingDomainsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domains request entity too large response a status code equal to that given
func (o *GetLanguageunderstandingDomainsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetLanguageunderstandingDomainsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains][%d] getLanguageunderstandingDomainsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetLanguageunderstandingDomainsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains][%d] getLanguageunderstandingDomainsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetLanguageunderstandingDomainsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainsUnsupportedMediaType creates a GetLanguageunderstandingDomainsUnsupportedMediaType with default headers values
func NewGetLanguageunderstandingDomainsUnsupportedMediaType() *GetLanguageunderstandingDomainsUnsupportedMediaType {
	return &GetLanguageunderstandingDomainsUnsupportedMediaType{}
}

/*
GetLanguageunderstandingDomainsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetLanguageunderstandingDomainsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domains unsupported media type response has a 2xx status code
func (o *GetLanguageunderstandingDomainsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domains unsupported media type response has a 3xx status code
func (o *GetLanguageunderstandingDomainsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domains unsupported media type response has a 4xx status code
func (o *GetLanguageunderstandingDomainsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding domains unsupported media type response has a 5xx status code
func (o *GetLanguageunderstandingDomainsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domains unsupported media type response a status code equal to that given
func (o *GetLanguageunderstandingDomainsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetLanguageunderstandingDomainsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains][%d] getLanguageunderstandingDomainsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetLanguageunderstandingDomainsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains][%d] getLanguageunderstandingDomainsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetLanguageunderstandingDomainsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainsTooManyRequests creates a GetLanguageunderstandingDomainsTooManyRequests with default headers values
func NewGetLanguageunderstandingDomainsTooManyRequests() *GetLanguageunderstandingDomainsTooManyRequests {
	return &GetLanguageunderstandingDomainsTooManyRequests{}
}

/*
GetLanguageunderstandingDomainsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetLanguageunderstandingDomainsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domains too many requests response has a 2xx status code
func (o *GetLanguageunderstandingDomainsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domains too many requests response has a 3xx status code
func (o *GetLanguageunderstandingDomainsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domains too many requests response has a 4xx status code
func (o *GetLanguageunderstandingDomainsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding domains too many requests response has a 5xx status code
func (o *GetLanguageunderstandingDomainsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domains too many requests response a status code equal to that given
func (o *GetLanguageunderstandingDomainsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetLanguageunderstandingDomainsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains][%d] getLanguageunderstandingDomainsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetLanguageunderstandingDomainsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains][%d] getLanguageunderstandingDomainsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetLanguageunderstandingDomainsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainsInternalServerError creates a GetLanguageunderstandingDomainsInternalServerError with default headers values
func NewGetLanguageunderstandingDomainsInternalServerError() *GetLanguageunderstandingDomainsInternalServerError {
	return &GetLanguageunderstandingDomainsInternalServerError{}
}

/*
GetLanguageunderstandingDomainsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetLanguageunderstandingDomainsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domains internal server error response has a 2xx status code
func (o *GetLanguageunderstandingDomainsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domains internal server error response has a 3xx status code
func (o *GetLanguageunderstandingDomainsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domains internal server error response has a 4xx status code
func (o *GetLanguageunderstandingDomainsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get languageunderstanding domains internal server error response has a 5xx status code
func (o *GetLanguageunderstandingDomainsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get languageunderstanding domains internal server error response a status code equal to that given
func (o *GetLanguageunderstandingDomainsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetLanguageunderstandingDomainsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains][%d] getLanguageunderstandingDomainsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetLanguageunderstandingDomainsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains][%d] getLanguageunderstandingDomainsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetLanguageunderstandingDomainsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainsServiceUnavailable creates a GetLanguageunderstandingDomainsServiceUnavailable with default headers values
func NewGetLanguageunderstandingDomainsServiceUnavailable() *GetLanguageunderstandingDomainsServiceUnavailable {
	return &GetLanguageunderstandingDomainsServiceUnavailable{}
}

/*
GetLanguageunderstandingDomainsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetLanguageunderstandingDomainsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domains service unavailable response has a 2xx status code
func (o *GetLanguageunderstandingDomainsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domains service unavailable response has a 3xx status code
func (o *GetLanguageunderstandingDomainsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domains service unavailable response has a 4xx status code
func (o *GetLanguageunderstandingDomainsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get languageunderstanding domains service unavailable response has a 5xx status code
func (o *GetLanguageunderstandingDomainsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get languageunderstanding domains service unavailable response a status code equal to that given
func (o *GetLanguageunderstandingDomainsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetLanguageunderstandingDomainsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains][%d] getLanguageunderstandingDomainsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetLanguageunderstandingDomainsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains][%d] getLanguageunderstandingDomainsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetLanguageunderstandingDomainsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainsGatewayTimeout creates a GetLanguageunderstandingDomainsGatewayTimeout with default headers values
func NewGetLanguageunderstandingDomainsGatewayTimeout() *GetLanguageunderstandingDomainsGatewayTimeout {
	return &GetLanguageunderstandingDomainsGatewayTimeout{}
}

/*
GetLanguageunderstandingDomainsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetLanguageunderstandingDomainsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domains gateway timeout response has a 2xx status code
func (o *GetLanguageunderstandingDomainsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domains gateway timeout response has a 3xx status code
func (o *GetLanguageunderstandingDomainsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domains gateway timeout response has a 4xx status code
func (o *GetLanguageunderstandingDomainsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get languageunderstanding domains gateway timeout response has a 5xx status code
func (o *GetLanguageunderstandingDomainsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get languageunderstanding domains gateway timeout response a status code equal to that given
func (o *GetLanguageunderstandingDomainsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetLanguageunderstandingDomainsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains][%d] getLanguageunderstandingDomainsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetLanguageunderstandingDomainsGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains][%d] getLanguageunderstandingDomainsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetLanguageunderstandingDomainsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
