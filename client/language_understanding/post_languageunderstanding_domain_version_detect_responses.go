// Code generated by go-swagger; DO NOT EDIT.

package language_understanding

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostLanguageunderstandingDomainVersionDetectReader is a Reader for the PostLanguageunderstandingDomainVersionDetect structure.
type PostLanguageunderstandingDomainVersionDetectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostLanguageunderstandingDomainVersionDetectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostLanguageunderstandingDomainVersionDetectOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostLanguageunderstandingDomainVersionDetectBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostLanguageunderstandingDomainVersionDetectUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostLanguageunderstandingDomainVersionDetectForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostLanguageunderstandingDomainVersionDetectNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostLanguageunderstandingDomainVersionDetectRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostLanguageunderstandingDomainVersionDetectRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostLanguageunderstandingDomainVersionDetectUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostLanguageunderstandingDomainVersionDetectTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostLanguageunderstandingDomainVersionDetectInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostLanguageunderstandingDomainVersionDetectServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostLanguageunderstandingDomainVersionDetectGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostLanguageunderstandingDomainVersionDetectOK creates a PostLanguageunderstandingDomainVersionDetectOK with default headers values
func NewPostLanguageunderstandingDomainVersionDetectOK() *PostLanguageunderstandingDomainVersionDetectOK {
	return &PostLanguageunderstandingDomainVersionDetectOK{}
}

/*PostLanguageunderstandingDomainVersionDetectOK handles this case with default header values.

Requested NLU detection for the given input using the specified NLU domain version
*/
type PostLanguageunderstandingDomainVersionDetectOK struct {
	Payload *models.NluDetectionResponse
}

func (o *PostLanguageunderstandingDomainVersionDetectOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/detect][%d] postLanguageunderstandingDomainVersionDetectOK  %+v", 200, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionDetectOK) GetPayload() *models.NluDetectionResponse {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionDetectOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NluDetectionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionDetectBadRequest creates a PostLanguageunderstandingDomainVersionDetectBadRequest with default headers values
func NewPostLanguageunderstandingDomainVersionDetectBadRequest() *PostLanguageunderstandingDomainVersionDetectBadRequest {
	return &PostLanguageunderstandingDomainVersionDetectBadRequest{}
}

/*PostLanguageunderstandingDomainVersionDetectBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostLanguageunderstandingDomainVersionDetectBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PostLanguageunderstandingDomainVersionDetectBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/detect][%d] postLanguageunderstandingDomainVersionDetectBadRequest  %+v", 400, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionDetectBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionDetectBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionDetectUnauthorized creates a PostLanguageunderstandingDomainVersionDetectUnauthorized with default headers values
func NewPostLanguageunderstandingDomainVersionDetectUnauthorized() *PostLanguageunderstandingDomainVersionDetectUnauthorized {
	return &PostLanguageunderstandingDomainVersionDetectUnauthorized{}
}

/*PostLanguageunderstandingDomainVersionDetectUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PostLanguageunderstandingDomainVersionDetectUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PostLanguageunderstandingDomainVersionDetectUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/detect][%d] postLanguageunderstandingDomainVersionDetectUnauthorized  %+v", 401, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionDetectUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionDetectUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionDetectForbidden creates a PostLanguageunderstandingDomainVersionDetectForbidden with default headers values
func NewPostLanguageunderstandingDomainVersionDetectForbidden() *PostLanguageunderstandingDomainVersionDetectForbidden {
	return &PostLanguageunderstandingDomainVersionDetectForbidden{}
}

/*PostLanguageunderstandingDomainVersionDetectForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PostLanguageunderstandingDomainVersionDetectForbidden struct {
	Payload *models.ErrorBody
}

func (o *PostLanguageunderstandingDomainVersionDetectForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/detect][%d] postLanguageunderstandingDomainVersionDetectForbidden  %+v", 403, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionDetectForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionDetectForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionDetectNotFound creates a PostLanguageunderstandingDomainVersionDetectNotFound with default headers values
func NewPostLanguageunderstandingDomainVersionDetectNotFound() *PostLanguageunderstandingDomainVersionDetectNotFound {
	return &PostLanguageunderstandingDomainVersionDetectNotFound{}
}

/*PostLanguageunderstandingDomainVersionDetectNotFound handles this case with default header values.

The requested resource was not found.
*/
type PostLanguageunderstandingDomainVersionDetectNotFound struct {
	Payload *models.ErrorBody
}

func (o *PostLanguageunderstandingDomainVersionDetectNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/detect][%d] postLanguageunderstandingDomainVersionDetectNotFound  %+v", 404, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionDetectNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionDetectNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionDetectRequestTimeout creates a PostLanguageunderstandingDomainVersionDetectRequestTimeout with default headers values
func NewPostLanguageunderstandingDomainVersionDetectRequestTimeout() *PostLanguageunderstandingDomainVersionDetectRequestTimeout {
	return &PostLanguageunderstandingDomainVersionDetectRequestTimeout{}
}

/*PostLanguageunderstandingDomainVersionDetectRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostLanguageunderstandingDomainVersionDetectRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostLanguageunderstandingDomainVersionDetectRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/detect][%d] postLanguageunderstandingDomainVersionDetectRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionDetectRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionDetectRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionDetectRequestEntityTooLarge creates a PostLanguageunderstandingDomainVersionDetectRequestEntityTooLarge with default headers values
func NewPostLanguageunderstandingDomainVersionDetectRequestEntityTooLarge() *PostLanguageunderstandingDomainVersionDetectRequestEntityTooLarge {
	return &PostLanguageunderstandingDomainVersionDetectRequestEntityTooLarge{}
}

/*PostLanguageunderstandingDomainVersionDetectRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PostLanguageunderstandingDomainVersionDetectRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PostLanguageunderstandingDomainVersionDetectRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/detect][%d] postLanguageunderstandingDomainVersionDetectRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionDetectRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionDetectRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionDetectUnsupportedMediaType creates a PostLanguageunderstandingDomainVersionDetectUnsupportedMediaType with default headers values
func NewPostLanguageunderstandingDomainVersionDetectUnsupportedMediaType() *PostLanguageunderstandingDomainVersionDetectUnsupportedMediaType {
	return &PostLanguageunderstandingDomainVersionDetectUnsupportedMediaType{}
}

/*PostLanguageunderstandingDomainVersionDetectUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostLanguageunderstandingDomainVersionDetectUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PostLanguageunderstandingDomainVersionDetectUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/detect][%d] postLanguageunderstandingDomainVersionDetectUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionDetectUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionDetectUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionDetectTooManyRequests creates a PostLanguageunderstandingDomainVersionDetectTooManyRequests with default headers values
func NewPostLanguageunderstandingDomainVersionDetectTooManyRequests() *PostLanguageunderstandingDomainVersionDetectTooManyRequests {
	return &PostLanguageunderstandingDomainVersionDetectTooManyRequests{}
}

/*PostLanguageunderstandingDomainVersionDetectTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostLanguageunderstandingDomainVersionDetectTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PostLanguageunderstandingDomainVersionDetectTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/detect][%d] postLanguageunderstandingDomainVersionDetectTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionDetectTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionDetectTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionDetectInternalServerError creates a PostLanguageunderstandingDomainVersionDetectInternalServerError with default headers values
func NewPostLanguageunderstandingDomainVersionDetectInternalServerError() *PostLanguageunderstandingDomainVersionDetectInternalServerError {
	return &PostLanguageunderstandingDomainVersionDetectInternalServerError{}
}

/*PostLanguageunderstandingDomainVersionDetectInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostLanguageunderstandingDomainVersionDetectInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PostLanguageunderstandingDomainVersionDetectInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/detect][%d] postLanguageunderstandingDomainVersionDetectInternalServerError  %+v", 500, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionDetectInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionDetectInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionDetectServiceUnavailable creates a PostLanguageunderstandingDomainVersionDetectServiceUnavailable with default headers values
func NewPostLanguageunderstandingDomainVersionDetectServiceUnavailable() *PostLanguageunderstandingDomainVersionDetectServiceUnavailable {
	return &PostLanguageunderstandingDomainVersionDetectServiceUnavailable{}
}

/*PostLanguageunderstandingDomainVersionDetectServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostLanguageunderstandingDomainVersionDetectServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PostLanguageunderstandingDomainVersionDetectServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/detect][%d] postLanguageunderstandingDomainVersionDetectServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionDetectServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionDetectServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionDetectGatewayTimeout creates a PostLanguageunderstandingDomainVersionDetectGatewayTimeout with default headers values
func NewPostLanguageunderstandingDomainVersionDetectGatewayTimeout() *PostLanguageunderstandingDomainVersionDetectGatewayTimeout {
	return &PostLanguageunderstandingDomainVersionDetectGatewayTimeout{}
}

/*PostLanguageunderstandingDomainVersionDetectGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PostLanguageunderstandingDomainVersionDetectGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostLanguageunderstandingDomainVersionDetectGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/detect][%d] postLanguageunderstandingDomainVersionDetectGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionDetectGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionDetectGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
