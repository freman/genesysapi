// Code generated by go-swagger; DO NOT EDIT.

package language_understanding

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// DeleteLanguageunderstandingDomainVersionReader is a Reader for the DeleteLanguageunderstandingDomainVersion structure.
type DeleteLanguageunderstandingDomainVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteLanguageunderstandingDomainVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteLanguageunderstandingDomainVersionNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteLanguageunderstandingDomainVersionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteLanguageunderstandingDomainVersionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteLanguageunderstandingDomainVersionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteLanguageunderstandingDomainVersionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewDeleteLanguageunderstandingDomainVersionRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewDeleteLanguageunderstandingDomainVersionRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDeleteLanguageunderstandingDomainVersionUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteLanguageunderstandingDomainVersionTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteLanguageunderstandingDomainVersionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteLanguageunderstandingDomainVersionServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteLanguageunderstandingDomainVersionGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteLanguageunderstandingDomainVersionNoContent creates a DeleteLanguageunderstandingDomainVersionNoContent with default headers values
func NewDeleteLanguageunderstandingDomainVersionNoContent() *DeleteLanguageunderstandingDomainVersionNoContent {
	return &DeleteLanguageunderstandingDomainVersionNoContent{}
}

/*DeleteLanguageunderstandingDomainVersionNoContent handles this case with default header values.

Deleted the specified NLU Domain Version
*/
type DeleteLanguageunderstandingDomainVersionNoContent struct {
}

func (o *DeleteLanguageunderstandingDomainVersionNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}][%d] deleteLanguageunderstandingDomainVersionNoContent ", 204)
}

func (o *DeleteLanguageunderstandingDomainVersionNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteLanguageunderstandingDomainVersionBadRequest creates a DeleteLanguageunderstandingDomainVersionBadRequest with default headers values
func NewDeleteLanguageunderstandingDomainVersionBadRequest() *DeleteLanguageunderstandingDomainVersionBadRequest {
	return &DeleteLanguageunderstandingDomainVersionBadRequest{}
}

/*DeleteLanguageunderstandingDomainVersionBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type DeleteLanguageunderstandingDomainVersionBadRequest struct {
	Payload *models.ErrorBody
}

func (o *DeleteLanguageunderstandingDomainVersionBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}][%d] deleteLanguageunderstandingDomainVersionBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainVersionBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteLanguageunderstandingDomainVersionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLanguageunderstandingDomainVersionUnauthorized creates a DeleteLanguageunderstandingDomainVersionUnauthorized with default headers values
func NewDeleteLanguageunderstandingDomainVersionUnauthorized() *DeleteLanguageunderstandingDomainVersionUnauthorized {
	return &DeleteLanguageunderstandingDomainVersionUnauthorized{}
}

/*DeleteLanguageunderstandingDomainVersionUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type DeleteLanguageunderstandingDomainVersionUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *DeleteLanguageunderstandingDomainVersionUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}][%d] deleteLanguageunderstandingDomainVersionUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainVersionUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteLanguageunderstandingDomainVersionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLanguageunderstandingDomainVersionForbidden creates a DeleteLanguageunderstandingDomainVersionForbidden with default headers values
func NewDeleteLanguageunderstandingDomainVersionForbidden() *DeleteLanguageunderstandingDomainVersionForbidden {
	return &DeleteLanguageunderstandingDomainVersionForbidden{}
}

/*DeleteLanguageunderstandingDomainVersionForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type DeleteLanguageunderstandingDomainVersionForbidden struct {
	Payload *models.ErrorBody
}

func (o *DeleteLanguageunderstandingDomainVersionForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}][%d] deleteLanguageunderstandingDomainVersionForbidden  %+v", 403, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainVersionForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteLanguageunderstandingDomainVersionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLanguageunderstandingDomainVersionNotFound creates a DeleteLanguageunderstandingDomainVersionNotFound with default headers values
func NewDeleteLanguageunderstandingDomainVersionNotFound() *DeleteLanguageunderstandingDomainVersionNotFound {
	return &DeleteLanguageunderstandingDomainVersionNotFound{}
}

/*DeleteLanguageunderstandingDomainVersionNotFound handles this case with default header values.

The requested resource was not found.
*/
type DeleteLanguageunderstandingDomainVersionNotFound struct {
	Payload *models.ErrorBody
}

func (o *DeleteLanguageunderstandingDomainVersionNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}][%d] deleteLanguageunderstandingDomainVersionNotFound  %+v", 404, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainVersionNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteLanguageunderstandingDomainVersionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLanguageunderstandingDomainVersionRequestTimeout creates a DeleteLanguageunderstandingDomainVersionRequestTimeout with default headers values
func NewDeleteLanguageunderstandingDomainVersionRequestTimeout() *DeleteLanguageunderstandingDomainVersionRequestTimeout {
	return &DeleteLanguageunderstandingDomainVersionRequestTimeout{}
}

/*DeleteLanguageunderstandingDomainVersionRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type DeleteLanguageunderstandingDomainVersionRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *DeleteLanguageunderstandingDomainVersionRequestTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}][%d] deleteLanguageunderstandingDomainVersionRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainVersionRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteLanguageunderstandingDomainVersionRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLanguageunderstandingDomainVersionRequestEntityTooLarge creates a DeleteLanguageunderstandingDomainVersionRequestEntityTooLarge with default headers values
func NewDeleteLanguageunderstandingDomainVersionRequestEntityTooLarge() *DeleteLanguageunderstandingDomainVersionRequestEntityTooLarge {
	return &DeleteLanguageunderstandingDomainVersionRequestEntityTooLarge{}
}

/*DeleteLanguageunderstandingDomainVersionRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type DeleteLanguageunderstandingDomainVersionRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *DeleteLanguageunderstandingDomainVersionRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}][%d] deleteLanguageunderstandingDomainVersionRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainVersionRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteLanguageunderstandingDomainVersionRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLanguageunderstandingDomainVersionUnsupportedMediaType creates a DeleteLanguageunderstandingDomainVersionUnsupportedMediaType with default headers values
func NewDeleteLanguageunderstandingDomainVersionUnsupportedMediaType() *DeleteLanguageunderstandingDomainVersionUnsupportedMediaType {
	return &DeleteLanguageunderstandingDomainVersionUnsupportedMediaType{}
}

/*DeleteLanguageunderstandingDomainVersionUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type DeleteLanguageunderstandingDomainVersionUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *DeleteLanguageunderstandingDomainVersionUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}][%d] deleteLanguageunderstandingDomainVersionUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainVersionUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteLanguageunderstandingDomainVersionUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLanguageunderstandingDomainVersionTooManyRequests creates a DeleteLanguageunderstandingDomainVersionTooManyRequests with default headers values
func NewDeleteLanguageunderstandingDomainVersionTooManyRequests() *DeleteLanguageunderstandingDomainVersionTooManyRequests {
	return &DeleteLanguageunderstandingDomainVersionTooManyRequests{}
}

/*DeleteLanguageunderstandingDomainVersionTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type DeleteLanguageunderstandingDomainVersionTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *DeleteLanguageunderstandingDomainVersionTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}][%d] deleteLanguageunderstandingDomainVersionTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainVersionTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteLanguageunderstandingDomainVersionTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLanguageunderstandingDomainVersionInternalServerError creates a DeleteLanguageunderstandingDomainVersionInternalServerError with default headers values
func NewDeleteLanguageunderstandingDomainVersionInternalServerError() *DeleteLanguageunderstandingDomainVersionInternalServerError {
	return &DeleteLanguageunderstandingDomainVersionInternalServerError{}
}

/*DeleteLanguageunderstandingDomainVersionInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type DeleteLanguageunderstandingDomainVersionInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *DeleteLanguageunderstandingDomainVersionInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}][%d] deleteLanguageunderstandingDomainVersionInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainVersionInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteLanguageunderstandingDomainVersionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLanguageunderstandingDomainVersionServiceUnavailable creates a DeleteLanguageunderstandingDomainVersionServiceUnavailable with default headers values
func NewDeleteLanguageunderstandingDomainVersionServiceUnavailable() *DeleteLanguageunderstandingDomainVersionServiceUnavailable {
	return &DeleteLanguageunderstandingDomainVersionServiceUnavailable{}
}

/*DeleteLanguageunderstandingDomainVersionServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type DeleteLanguageunderstandingDomainVersionServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *DeleteLanguageunderstandingDomainVersionServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}][%d] deleteLanguageunderstandingDomainVersionServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainVersionServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteLanguageunderstandingDomainVersionServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLanguageunderstandingDomainVersionGatewayTimeout creates a DeleteLanguageunderstandingDomainVersionGatewayTimeout with default headers values
func NewDeleteLanguageunderstandingDomainVersionGatewayTimeout() *DeleteLanguageunderstandingDomainVersionGatewayTimeout {
	return &DeleteLanguageunderstandingDomainVersionGatewayTimeout{}
}

/*DeleteLanguageunderstandingDomainVersionGatewayTimeout handles this case with default header values.

The request timed out.
*/
type DeleteLanguageunderstandingDomainVersionGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *DeleteLanguageunderstandingDomainVersionGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}][%d] deleteLanguageunderstandingDomainVersionGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainVersionGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteLanguageunderstandingDomainVersionGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
