// Code generated by go-swagger; DO NOT EDIT.

package language_understanding

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetLanguageunderstandingDomainVersionReportReader is a Reader for the GetLanguageunderstandingDomainVersionReport structure.
type GetLanguageunderstandingDomainVersionReportReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLanguageunderstandingDomainVersionReportReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLanguageunderstandingDomainVersionReportOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetLanguageunderstandingDomainVersionReportBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetLanguageunderstandingDomainVersionReportUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetLanguageunderstandingDomainVersionReportForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetLanguageunderstandingDomainVersionReportNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetLanguageunderstandingDomainVersionReportRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetLanguageunderstandingDomainVersionReportRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetLanguageunderstandingDomainVersionReportUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetLanguageunderstandingDomainVersionReportTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetLanguageunderstandingDomainVersionReportInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetLanguageunderstandingDomainVersionReportServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetLanguageunderstandingDomainVersionReportGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetLanguageunderstandingDomainVersionReportOK creates a GetLanguageunderstandingDomainVersionReportOK with default headers values
func NewGetLanguageunderstandingDomainVersionReportOK() *GetLanguageunderstandingDomainVersionReportOK {
	return &GetLanguageunderstandingDomainVersionReportOK{}
}

/*
GetLanguageunderstandingDomainVersionReportOK describes a response with status code 200, with default header values.

Find quality report for NLU Domain Version.
*/
type GetLanguageunderstandingDomainVersionReportOK struct {
	Payload *models.NluDomainVersionQualityReport
}

// IsSuccess returns true when this get languageunderstanding domain version report o k response has a 2xx status code
func (o *GetLanguageunderstandingDomainVersionReportOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get languageunderstanding domain version report o k response has a 3xx status code
func (o *GetLanguageunderstandingDomainVersionReportOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain version report o k response has a 4xx status code
func (o *GetLanguageunderstandingDomainVersionReportOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get languageunderstanding domain version report o k response has a 5xx status code
func (o *GetLanguageunderstandingDomainVersionReportOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domain version report o k response a status code equal to that given
func (o *GetLanguageunderstandingDomainVersionReportOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetLanguageunderstandingDomainVersionReportOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/report][%d] getLanguageunderstandingDomainVersionReportOK  %+v", 200, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionReportOK) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/report][%d] getLanguageunderstandingDomainVersionReportOK  %+v", 200, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionReportOK) GetPayload() *models.NluDomainVersionQualityReport {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainVersionReportOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NluDomainVersionQualityReport)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainVersionReportBadRequest creates a GetLanguageunderstandingDomainVersionReportBadRequest with default headers values
func NewGetLanguageunderstandingDomainVersionReportBadRequest() *GetLanguageunderstandingDomainVersionReportBadRequest {
	return &GetLanguageunderstandingDomainVersionReportBadRequest{}
}

/*
GetLanguageunderstandingDomainVersionReportBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetLanguageunderstandingDomainVersionReportBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain version report bad request response has a 2xx status code
func (o *GetLanguageunderstandingDomainVersionReportBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain version report bad request response has a 3xx status code
func (o *GetLanguageunderstandingDomainVersionReportBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain version report bad request response has a 4xx status code
func (o *GetLanguageunderstandingDomainVersionReportBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding domain version report bad request response has a 5xx status code
func (o *GetLanguageunderstandingDomainVersionReportBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domain version report bad request response a status code equal to that given
func (o *GetLanguageunderstandingDomainVersionReportBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetLanguageunderstandingDomainVersionReportBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/report][%d] getLanguageunderstandingDomainVersionReportBadRequest  %+v", 400, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionReportBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/report][%d] getLanguageunderstandingDomainVersionReportBadRequest  %+v", 400, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionReportBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainVersionReportBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainVersionReportUnauthorized creates a GetLanguageunderstandingDomainVersionReportUnauthorized with default headers values
func NewGetLanguageunderstandingDomainVersionReportUnauthorized() *GetLanguageunderstandingDomainVersionReportUnauthorized {
	return &GetLanguageunderstandingDomainVersionReportUnauthorized{}
}

/*
GetLanguageunderstandingDomainVersionReportUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetLanguageunderstandingDomainVersionReportUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain version report unauthorized response has a 2xx status code
func (o *GetLanguageunderstandingDomainVersionReportUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain version report unauthorized response has a 3xx status code
func (o *GetLanguageunderstandingDomainVersionReportUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain version report unauthorized response has a 4xx status code
func (o *GetLanguageunderstandingDomainVersionReportUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding domain version report unauthorized response has a 5xx status code
func (o *GetLanguageunderstandingDomainVersionReportUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domain version report unauthorized response a status code equal to that given
func (o *GetLanguageunderstandingDomainVersionReportUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetLanguageunderstandingDomainVersionReportUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/report][%d] getLanguageunderstandingDomainVersionReportUnauthorized  %+v", 401, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionReportUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/report][%d] getLanguageunderstandingDomainVersionReportUnauthorized  %+v", 401, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionReportUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainVersionReportUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainVersionReportForbidden creates a GetLanguageunderstandingDomainVersionReportForbidden with default headers values
func NewGetLanguageunderstandingDomainVersionReportForbidden() *GetLanguageunderstandingDomainVersionReportForbidden {
	return &GetLanguageunderstandingDomainVersionReportForbidden{}
}

/*
GetLanguageunderstandingDomainVersionReportForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetLanguageunderstandingDomainVersionReportForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain version report forbidden response has a 2xx status code
func (o *GetLanguageunderstandingDomainVersionReportForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain version report forbidden response has a 3xx status code
func (o *GetLanguageunderstandingDomainVersionReportForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain version report forbidden response has a 4xx status code
func (o *GetLanguageunderstandingDomainVersionReportForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding domain version report forbidden response has a 5xx status code
func (o *GetLanguageunderstandingDomainVersionReportForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domain version report forbidden response a status code equal to that given
func (o *GetLanguageunderstandingDomainVersionReportForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetLanguageunderstandingDomainVersionReportForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/report][%d] getLanguageunderstandingDomainVersionReportForbidden  %+v", 403, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionReportForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/report][%d] getLanguageunderstandingDomainVersionReportForbidden  %+v", 403, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionReportForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainVersionReportForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainVersionReportNotFound creates a GetLanguageunderstandingDomainVersionReportNotFound with default headers values
func NewGetLanguageunderstandingDomainVersionReportNotFound() *GetLanguageunderstandingDomainVersionReportNotFound {
	return &GetLanguageunderstandingDomainVersionReportNotFound{}
}

/*
GetLanguageunderstandingDomainVersionReportNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetLanguageunderstandingDomainVersionReportNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain version report not found response has a 2xx status code
func (o *GetLanguageunderstandingDomainVersionReportNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain version report not found response has a 3xx status code
func (o *GetLanguageunderstandingDomainVersionReportNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain version report not found response has a 4xx status code
func (o *GetLanguageunderstandingDomainVersionReportNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding domain version report not found response has a 5xx status code
func (o *GetLanguageunderstandingDomainVersionReportNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domain version report not found response a status code equal to that given
func (o *GetLanguageunderstandingDomainVersionReportNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetLanguageunderstandingDomainVersionReportNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/report][%d] getLanguageunderstandingDomainVersionReportNotFound  %+v", 404, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionReportNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/report][%d] getLanguageunderstandingDomainVersionReportNotFound  %+v", 404, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionReportNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainVersionReportNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainVersionReportRequestTimeout creates a GetLanguageunderstandingDomainVersionReportRequestTimeout with default headers values
func NewGetLanguageunderstandingDomainVersionReportRequestTimeout() *GetLanguageunderstandingDomainVersionReportRequestTimeout {
	return &GetLanguageunderstandingDomainVersionReportRequestTimeout{}
}

/*
GetLanguageunderstandingDomainVersionReportRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetLanguageunderstandingDomainVersionReportRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain version report request timeout response has a 2xx status code
func (o *GetLanguageunderstandingDomainVersionReportRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain version report request timeout response has a 3xx status code
func (o *GetLanguageunderstandingDomainVersionReportRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain version report request timeout response has a 4xx status code
func (o *GetLanguageunderstandingDomainVersionReportRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding domain version report request timeout response has a 5xx status code
func (o *GetLanguageunderstandingDomainVersionReportRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domain version report request timeout response a status code equal to that given
func (o *GetLanguageunderstandingDomainVersionReportRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetLanguageunderstandingDomainVersionReportRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/report][%d] getLanguageunderstandingDomainVersionReportRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionReportRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/report][%d] getLanguageunderstandingDomainVersionReportRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionReportRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainVersionReportRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainVersionReportRequestEntityTooLarge creates a GetLanguageunderstandingDomainVersionReportRequestEntityTooLarge with default headers values
func NewGetLanguageunderstandingDomainVersionReportRequestEntityTooLarge() *GetLanguageunderstandingDomainVersionReportRequestEntityTooLarge {
	return &GetLanguageunderstandingDomainVersionReportRequestEntityTooLarge{}
}

/*
GetLanguageunderstandingDomainVersionReportRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetLanguageunderstandingDomainVersionReportRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain version report request entity too large response has a 2xx status code
func (o *GetLanguageunderstandingDomainVersionReportRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain version report request entity too large response has a 3xx status code
func (o *GetLanguageunderstandingDomainVersionReportRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain version report request entity too large response has a 4xx status code
func (o *GetLanguageunderstandingDomainVersionReportRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding domain version report request entity too large response has a 5xx status code
func (o *GetLanguageunderstandingDomainVersionReportRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domain version report request entity too large response a status code equal to that given
func (o *GetLanguageunderstandingDomainVersionReportRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetLanguageunderstandingDomainVersionReportRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/report][%d] getLanguageunderstandingDomainVersionReportRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionReportRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/report][%d] getLanguageunderstandingDomainVersionReportRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionReportRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainVersionReportRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainVersionReportUnsupportedMediaType creates a GetLanguageunderstandingDomainVersionReportUnsupportedMediaType with default headers values
func NewGetLanguageunderstandingDomainVersionReportUnsupportedMediaType() *GetLanguageunderstandingDomainVersionReportUnsupportedMediaType {
	return &GetLanguageunderstandingDomainVersionReportUnsupportedMediaType{}
}

/*
GetLanguageunderstandingDomainVersionReportUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetLanguageunderstandingDomainVersionReportUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain version report unsupported media type response has a 2xx status code
func (o *GetLanguageunderstandingDomainVersionReportUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain version report unsupported media type response has a 3xx status code
func (o *GetLanguageunderstandingDomainVersionReportUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain version report unsupported media type response has a 4xx status code
func (o *GetLanguageunderstandingDomainVersionReportUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding domain version report unsupported media type response has a 5xx status code
func (o *GetLanguageunderstandingDomainVersionReportUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domain version report unsupported media type response a status code equal to that given
func (o *GetLanguageunderstandingDomainVersionReportUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetLanguageunderstandingDomainVersionReportUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/report][%d] getLanguageunderstandingDomainVersionReportUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionReportUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/report][%d] getLanguageunderstandingDomainVersionReportUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionReportUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainVersionReportUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainVersionReportTooManyRequests creates a GetLanguageunderstandingDomainVersionReportTooManyRequests with default headers values
func NewGetLanguageunderstandingDomainVersionReportTooManyRequests() *GetLanguageunderstandingDomainVersionReportTooManyRequests {
	return &GetLanguageunderstandingDomainVersionReportTooManyRequests{}
}

/*
GetLanguageunderstandingDomainVersionReportTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetLanguageunderstandingDomainVersionReportTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain version report too many requests response has a 2xx status code
func (o *GetLanguageunderstandingDomainVersionReportTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain version report too many requests response has a 3xx status code
func (o *GetLanguageunderstandingDomainVersionReportTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain version report too many requests response has a 4xx status code
func (o *GetLanguageunderstandingDomainVersionReportTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding domain version report too many requests response has a 5xx status code
func (o *GetLanguageunderstandingDomainVersionReportTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domain version report too many requests response a status code equal to that given
func (o *GetLanguageunderstandingDomainVersionReportTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetLanguageunderstandingDomainVersionReportTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/report][%d] getLanguageunderstandingDomainVersionReportTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionReportTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/report][%d] getLanguageunderstandingDomainVersionReportTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionReportTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainVersionReportTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainVersionReportInternalServerError creates a GetLanguageunderstandingDomainVersionReportInternalServerError with default headers values
func NewGetLanguageunderstandingDomainVersionReportInternalServerError() *GetLanguageunderstandingDomainVersionReportInternalServerError {
	return &GetLanguageunderstandingDomainVersionReportInternalServerError{}
}

/*
GetLanguageunderstandingDomainVersionReportInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetLanguageunderstandingDomainVersionReportInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain version report internal server error response has a 2xx status code
func (o *GetLanguageunderstandingDomainVersionReportInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain version report internal server error response has a 3xx status code
func (o *GetLanguageunderstandingDomainVersionReportInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain version report internal server error response has a 4xx status code
func (o *GetLanguageunderstandingDomainVersionReportInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get languageunderstanding domain version report internal server error response has a 5xx status code
func (o *GetLanguageunderstandingDomainVersionReportInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get languageunderstanding domain version report internal server error response a status code equal to that given
func (o *GetLanguageunderstandingDomainVersionReportInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetLanguageunderstandingDomainVersionReportInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/report][%d] getLanguageunderstandingDomainVersionReportInternalServerError  %+v", 500, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionReportInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/report][%d] getLanguageunderstandingDomainVersionReportInternalServerError  %+v", 500, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionReportInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainVersionReportInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainVersionReportServiceUnavailable creates a GetLanguageunderstandingDomainVersionReportServiceUnavailable with default headers values
func NewGetLanguageunderstandingDomainVersionReportServiceUnavailable() *GetLanguageunderstandingDomainVersionReportServiceUnavailable {
	return &GetLanguageunderstandingDomainVersionReportServiceUnavailable{}
}

/*
GetLanguageunderstandingDomainVersionReportServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetLanguageunderstandingDomainVersionReportServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain version report service unavailable response has a 2xx status code
func (o *GetLanguageunderstandingDomainVersionReportServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain version report service unavailable response has a 3xx status code
func (o *GetLanguageunderstandingDomainVersionReportServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain version report service unavailable response has a 4xx status code
func (o *GetLanguageunderstandingDomainVersionReportServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get languageunderstanding domain version report service unavailable response has a 5xx status code
func (o *GetLanguageunderstandingDomainVersionReportServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get languageunderstanding domain version report service unavailable response a status code equal to that given
func (o *GetLanguageunderstandingDomainVersionReportServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetLanguageunderstandingDomainVersionReportServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/report][%d] getLanguageunderstandingDomainVersionReportServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionReportServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/report][%d] getLanguageunderstandingDomainVersionReportServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionReportServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainVersionReportServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainVersionReportGatewayTimeout creates a GetLanguageunderstandingDomainVersionReportGatewayTimeout with default headers values
func NewGetLanguageunderstandingDomainVersionReportGatewayTimeout() *GetLanguageunderstandingDomainVersionReportGatewayTimeout {
	return &GetLanguageunderstandingDomainVersionReportGatewayTimeout{}
}

/*
GetLanguageunderstandingDomainVersionReportGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetLanguageunderstandingDomainVersionReportGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain version report gateway timeout response has a 2xx status code
func (o *GetLanguageunderstandingDomainVersionReportGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain version report gateway timeout response has a 3xx status code
func (o *GetLanguageunderstandingDomainVersionReportGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain version report gateway timeout response has a 4xx status code
func (o *GetLanguageunderstandingDomainVersionReportGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get languageunderstanding domain version report gateway timeout response has a 5xx status code
func (o *GetLanguageunderstandingDomainVersionReportGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get languageunderstanding domain version report gateway timeout response a status code equal to that given
func (o *GetLanguageunderstandingDomainVersionReportGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetLanguageunderstandingDomainVersionReportGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/report][%d] getLanguageunderstandingDomainVersionReportGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionReportGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/report][%d] getLanguageunderstandingDomainVersionReportGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionReportGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainVersionReportGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
