// Code generated by go-swagger; DO NOT EDIT.

package language_understanding

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetLanguageunderstandingMinerTopicsReader is a Reader for the GetLanguageunderstandingMinerTopics structure.
type GetLanguageunderstandingMinerTopicsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLanguageunderstandingMinerTopicsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLanguageunderstandingMinerTopicsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetLanguageunderstandingMinerTopicsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetLanguageunderstandingMinerTopicsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetLanguageunderstandingMinerTopicsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetLanguageunderstandingMinerTopicsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetLanguageunderstandingMinerTopicsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetLanguageunderstandingMinerTopicsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetLanguageunderstandingMinerTopicsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetLanguageunderstandingMinerTopicsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetLanguageunderstandingMinerTopicsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetLanguageunderstandingMinerTopicsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetLanguageunderstandingMinerTopicsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetLanguageunderstandingMinerTopicsOK creates a GetLanguageunderstandingMinerTopicsOK with default headers values
func NewGetLanguageunderstandingMinerTopicsOK() *GetLanguageunderstandingMinerTopicsOK {
	return &GetLanguageunderstandingMinerTopicsOK{}
}

/*
GetLanguageunderstandingMinerTopicsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetLanguageunderstandingMinerTopicsOK struct {
	Payload *models.MinerTopicsListing
}

// IsSuccess returns true when this get languageunderstanding miner topics o k response has a 2xx status code
func (o *GetLanguageunderstandingMinerTopicsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get languageunderstanding miner topics o k response has a 3xx status code
func (o *GetLanguageunderstandingMinerTopicsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding miner topics o k response has a 4xx status code
func (o *GetLanguageunderstandingMinerTopicsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get languageunderstanding miner topics o k response has a 5xx status code
func (o *GetLanguageunderstandingMinerTopicsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding miner topics o k response a status code equal to that given
func (o *GetLanguageunderstandingMinerTopicsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetLanguageunderstandingMinerTopicsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/topics][%d] getLanguageunderstandingMinerTopicsOK  %+v", 200, o.Payload)
}

func (o *GetLanguageunderstandingMinerTopicsOK) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/topics][%d] getLanguageunderstandingMinerTopicsOK  %+v", 200, o.Payload)
}

func (o *GetLanguageunderstandingMinerTopicsOK) GetPayload() *models.MinerTopicsListing {
	return o.Payload
}

func (o *GetLanguageunderstandingMinerTopicsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MinerTopicsListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingMinerTopicsBadRequest creates a GetLanguageunderstandingMinerTopicsBadRequest with default headers values
func NewGetLanguageunderstandingMinerTopicsBadRequest() *GetLanguageunderstandingMinerTopicsBadRequest {
	return &GetLanguageunderstandingMinerTopicsBadRequest{}
}

/*
GetLanguageunderstandingMinerTopicsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetLanguageunderstandingMinerTopicsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding miner topics bad request response has a 2xx status code
func (o *GetLanguageunderstandingMinerTopicsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding miner topics bad request response has a 3xx status code
func (o *GetLanguageunderstandingMinerTopicsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding miner topics bad request response has a 4xx status code
func (o *GetLanguageunderstandingMinerTopicsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding miner topics bad request response has a 5xx status code
func (o *GetLanguageunderstandingMinerTopicsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding miner topics bad request response a status code equal to that given
func (o *GetLanguageunderstandingMinerTopicsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetLanguageunderstandingMinerTopicsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/topics][%d] getLanguageunderstandingMinerTopicsBadRequest  %+v", 400, o.Payload)
}

func (o *GetLanguageunderstandingMinerTopicsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/topics][%d] getLanguageunderstandingMinerTopicsBadRequest  %+v", 400, o.Payload)
}

func (o *GetLanguageunderstandingMinerTopicsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingMinerTopicsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingMinerTopicsUnauthorized creates a GetLanguageunderstandingMinerTopicsUnauthorized with default headers values
func NewGetLanguageunderstandingMinerTopicsUnauthorized() *GetLanguageunderstandingMinerTopicsUnauthorized {
	return &GetLanguageunderstandingMinerTopicsUnauthorized{}
}

/*
GetLanguageunderstandingMinerTopicsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetLanguageunderstandingMinerTopicsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding miner topics unauthorized response has a 2xx status code
func (o *GetLanguageunderstandingMinerTopicsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding miner topics unauthorized response has a 3xx status code
func (o *GetLanguageunderstandingMinerTopicsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding miner topics unauthorized response has a 4xx status code
func (o *GetLanguageunderstandingMinerTopicsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding miner topics unauthorized response has a 5xx status code
func (o *GetLanguageunderstandingMinerTopicsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding miner topics unauthorized response a status code equal to that given
func (o *GetLanguageunderstandingMinerTopicsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetLanguageunderstandingMinerTopicsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/topics][%d] getLanguageunderstandingMinerTopicsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetLanguageunderstandingMinerTopicsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/topics][%d] getLanguageunderstandingMinerTopicsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetLanguageunderstandingMinerTopicsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingMinerTopicsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingMinerTopicsForbidden creates a GetLanguageunderstandingMinerTopicsForbidden with default headers values
func NewGetLanguageunderstandingMinerTopicsForbidden() *GetLanguageunderstandingMinerTopicsForbidden {
	return &GetLanguageunderstandingMinerTopicsForbidden{}
}

/*
GetLanguageunderstandingMinerTopicsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetLanguageunderstandingMinerTopicsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding miner topics forbidden response has a 2xx status code
func (o *GetLanguageunderstandingMinerTopicsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding miner topics forbidden response has a 3xx status code
func (o *GetLanguageunderstandingMinerTopicsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding miner topics forbidden response has a 4xx status code
func (o *GetLanguageunderstandingMinerTopicsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding miner topics forbidden response has a 5xx status code
func (o *GetLanguageunderstandingMinerTopicsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding miner topics forbidden response a status code equal to that given
func (o *GetLanguageunderstandingMinerTopicsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetLanguageunderstandingMinerTopicsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/topics][%d] getLanguageunderstandingMinerTopicsForbidden  %+v", 403, o.Payload)
}

func (o *GetLanguageunderstandingMinerTopicsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/topics][%d] getLanguageunderstandingMinerTopicsForbidden  %+v", 403, o.Payload)
}

func (o *GetLanguageunderstandingMinerTopicsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingMinerTopicsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingMinerTopicsNotFound creates a GetLanguageunderstandingMinerTopicsNotFound with default headers values
func NewGetLanguageunderstandingMinerTopicsNotFound() *GetLanguageunderstandingMinerTopicsNotFound {
	return &GetLanguageunderstandingMinerTopicsNotFound{}
}

/*
GetLanguageunderstandingMinerTopicsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetLanguageunderstandingMinerTopicsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding miner topics not found response has a 2xx status code
func (o *GetLanguageunderstandingMinerTopicsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding miner topics not found response has a 3xx status code
func (o *GetLanguageunderstandingMinerTopicsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding miner topics not found response has a 4xx status code
func (o *GetLanguageunderstandingMinerTopicsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding miner topics not found response has a 5xx status code
func (o *GetLanguageunderstandingMinerTopicsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding miner topics not found response a status code equal to that given
func (o *GetLanguageunderstandingMinerTopicsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetLanguageunderstandingMinerTopicsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/topics][%d] getLanguageunderstandingMinerTopicsNotFound  %+v", 404, o.Payload)
}

func (o *GetLanguageunderstandingMinerTopicsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/topics][%d] getLanguageunderstandingMinerTopicsNotFound  %+v", 404, o.Payload)
}

func (o *GetLanguageunderstandingMinerTopicsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingMinerTopicsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingMinerTopicsRequestTimeout creates a GetLanguageunderstandingMinerTopicsRequestTimeout with default headers values
func NewGetLanguageunderstandingMinerTopicsRequestTimeout() *GetLanguageunderstandingMinerTopicsRequestTimeout {
	return &GetLanguageunderstandingMinerTopicsRequestTimeout{}
}

/*
GetLanguageunderstandingMinerTopicsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetLanguageunderstandingMinerTopicsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding miner topics request timeout response has a 2xx status code
func (o *GetLanguageunderstandingMinerTopicsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding miner topics request timeout response has a 3xx status code
func (o *GetLanguageunderstandingMinerTopicsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding miner topics request timeout response has a 4xx status code
func (o *GetLanguageunderstandingMinerTopicsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding miner topics request timeout response has a 5xx status code
func (o *GetLanguageunderstandingMinerTopicsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding miner topics request timeout response a status code equal to that given
func (o *GetLanguageunderstandingMinerTopicsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetLanguageunderstandingMinerTopicsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/topics][%d] getLanguageunderstandingMinerTopicsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetLanguageunderstandingMinerTopicsRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/topics][%d] getLanguageunderstandingMinerTopicsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetLanguageunderstandingMinerTopicsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingMinerTopicsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingMinerTopicsRequestEntityTooLarge creates a GetLanguageunderstandingMinerTopicsRequestEntityTooLarge with default headers values
func NewGetLanguageunderstandingMinerTopicsRequestEntityTooLarge() *GetLanguageunderstandingMinerTopicsRequestEntityTooLarge {
	return &GetLanguageunderstandingMinerTopicsRequestEntityTooLarge{}
}

/*
GetLanguageunderstandingMinerTopicsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetLanguageunderstandingMinerTopicsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding miner topics request entity too large response has a 2xx status code
func (o *GetLanguageunderstandingMinerTopicsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding miner topics request entity too large response has a 3xx status code
func (o *GetLanguageunderstandingMinerTopicsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding miner topics request entity too large response has a 4xx status code
func (o *GetLanguageunderstandingMinerTopicsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding miner topics request entity too large response has a 5xx status code
func (o *GetLanguageunderstandingMinerTopicsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding miner topics request entity too large response a status code equal to that given
func (o *GetLanguageunderstandingMinerTopicsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetLanguageunderstandingMinerTopicsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/topics][%d] getLanguageunderstandingMinerTopicsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetLanguageunderstandingMinerTopicsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/topics][%d] getLanguageunderstandingMinerTopicsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetLanguageunderstandingMinerTopicsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingMinerTopicsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingMinerTopicsUnsupportedMediaType creates a GetLanguageunderstandingMinerTopicsUnsupportedMediaType with default headers values
func NewGetLanguageunderstandingMinerTopicsUnsupportedMediaType() *GetLanguageunderstandingMinerTopicsUnsupportedMediaType {
	return &GetLanguageunderstandingMinerTopicsUnsupportedMediaType{}
}

/*
GetLanguageunderstandingMinerTopicsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetLanguageunderstandingMinerTopicsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding miner topics unsupported media type response has a 2xx status code
func (o *GetLanguageunderstandingMinerTopicsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding miner topics unsupported media type response has a 3xx status code
func (o *GetLanguageunderstandingMinerTopicsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding miner topics unsupported media type response has a 4xx status code
func (o *GetLanguageunderstandingMinerTopicsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding miner topics unsupported media type response has a 5xx status code
func (o *GetLanguageunderstandingMinerTopicsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding miner topics unsupported media type response a status code equal to that given
func (o *GetLanguageunderstandingMinerTopicsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetLanguageunderstandingMinerTopicsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/topics][%d] getLanguageunderstandingMinerTopicsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetLanguageunderstandingMinerTopicsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/topics][%d] getLanguageunderstandingMinerTopicsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetLanguageunderstandingMinerTopicsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingMinerTopicsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingMinerTopicsTooManyRequests creates a GetLanguageunderstandingMinerTopicsTooManyRequests with default headers values
func NewGetLanguageunderstandingMinerTopicsTooManyRequests() *GetLanguageunderstandingMinerTopicsTooManyRequests {
	return &GetLanguageunderstandingMinerTopicsTooManyRequests{}
}

/*
GetLanguageunderstandingMinerTopicsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetLanguageunderstandingMinerTopicsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding miner topics too many requests response has a 2xx status code
func (o *GetLanguageunderstandingMinerTopicsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding miner topics too many requests response has a 3xx status code
func (o *GetLanguageunderstandingMinerTopicsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding miner topics too many requests response has a 4xx status code
func (o *GetLanguageunderstandingMinerTopicsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding miner topics too many requests response has a 5xx status code
func (o *GetLanguageunderstandingMinerTopicsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding miner topics too many requests response a status code equal to that given
func (o *GetLanguageunderstandingMinerTopicsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetLanguageunderstandingMinerTopicsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/topics][%d] getLanguageunderstandingMinerTopicsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetLanguageunderstandingMinerTopicsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/topics][%d] getLanguageunderstandingMinerTopicsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetLanguageunderstandingMinerTopicsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingMinerTopicsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingMinerTopicsInternalServerError creates a GetLanguageunderstandingMinerTopicsInternalServerError with default headers values
func NewGetLanguageunderstandingMinerTopicsInternalServerError() *GetLanguageunderstandingMinerTopicsInternalServerError {
	return &GetLanguageunderstandingMinerTopicsInternalServerError{}
}

/*
GetLanguageunderstandingMinerTopicsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetLanguageunderstandingMinerTopicsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding miner topics internal server error response has a 2xx status code
func (o *GetLanguageunderstandingMinerTopicsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding miner topics internal server error response has a 3xx status code
func (o *GetLanguageunderstandingMinerTopicsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding miner topics internal server error response has a 4xx status code
func (o *GetLanguageunderstandingMinerTopicsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get languageunderstanding miner topics internal server error response has a 5xx status code
func (o *GetLanguageunderstandingMinerTopicsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get languageunderstanding miner topics internal server error response a status code equal to that given
func (o *GetLanguageunderstandingMinerTopicsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetLanguageunderstandingMinerTopicsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/topics][%d] getLanguageunderstandingMinerTopicsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetLanguageunderstandingMinerTopicsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/topics][%d] getLanguageunderstandingMinerTopicsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetLanguageunderstandingMinerTopicsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingMinerTopicsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingMinerTopicsServiceUnavailable creates a GetLanguageunderstandingMinerTopicsServiceUnavailable with default headers values
func NewGetLanguageunderstandingMinerTopicsServiceUnavailable() *GetLanguageunderstandingMinerTopicsServiceUnavailable {
	return &GetLanguageunderstandingMinerTopicsServiceUnavailable{}
}

/*
GetLanguageunderstandingMinerTopicsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetLanguageunderstandingMinerTopicsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding miner topics service unavailable response has a 2xx status code
func (o *GetLanguageunderstandingMinerTopicsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding miner topics service unavailable response has a 3xx status code
func (o *GetLanguageunderstandingMinerTopicsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding miner topics service unavailable response has a 4xx status code
func (o *GetLanguageunderstandingMinerTopicsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get languageunderstanding miner topics service unavailable response has a 5xx status code
func (o *GetLanguageunderstandingMinerTopicsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get languageunderstanding miner topics service unavailable response a status code equal to that given
func (o *GetLanguageunderstandingMinerTopicsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetLanguageunderstandingMinerTopicsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/topics][%d] getLanguageunderstandingMinerTopicsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetLanguageunderstandingMinerTopicsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/topics][%d] getLanguageunderstandingMinerTopicsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetLanguageunderstandingMinerTopicsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingMinerTopicsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingMinerTopicsGatewayTimeout creates a GetLanguageunderstandingMinerTopicsGatewayTimeout with default headers values
func NewGetLanguageunderstandingMinerTopicsGatewayTimeout() *GetLanguageunderstandingMinerTopicsGatewayTimeout {
	return &GetLanguageunderstandingMinerTopicsGatewayTimeout{}
}

/*
GetLanguageunderstandingMinerTopicsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetLanguageunderstandingMinerTopicsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding miner topics gateway timeout response has a 2xx status code
func (o *GetLanguageunderstandingMinerTopicsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding miner topics gateway timeout response has a 3xx status code
func (o *GetLanguageunderstandingMinerTopicsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding miner topics gateway timeout response has a 4xx status code
func (o *GetLanguageunderstandingMinerTopicsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get languageunderstanding miner topics gateway timeout response has a 5xx status code
func (o *GetLanguageunderstandingMinerTopicsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get languageunderstanding miner topics gateway timeout response a status code equal to that given
func (o *GetLanguageunderstandingMinerTopicsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetLanguageunderstandingMinerTopicsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/topics][%d] getLanguageunderstandingMinerTopicsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetLanguageunderstandingMinerTopicsGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/topics][%d] getLanguageunderstandingMinerTopicsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetLanguageunderstandingMinerTopicsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingMinerTopicsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
