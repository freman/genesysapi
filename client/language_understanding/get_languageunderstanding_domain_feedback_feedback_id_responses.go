// Code generated by go-swagger; DO NOT EDIT.

package language_understanding

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetLanguageunderstandingDomainFeedbackFeedbackIDReader is a Reader for the GetLanguageunderstandingDomainFeedbackFeedbackID structure.
type GetLanguageunderstandingDomainFeedbackFeedbackIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLanguageunderstandingDomainFeedbackFeedbackIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetLanguageunderstandingDomainFeedbackFeedbackIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetLanguageunderstandingDomainFeedbackFeedbackIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetLanguageunderstandingDomainFeedbackFeedbackIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetLanguageunderstandingDomainFeedbackFeedbackIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetLanguageunderstandingDomainFeedbackFeedbackIDRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetLanguageunderstandingDomainFeedbackFeedbackIDRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetLanguageunderstandingDomainFeedbackFeedbackIDUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetLanguageunderstandingDomainFeedbackFeedbackIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetLanguageunderstandingDomainFeedbackFeedbackIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetLanguageunderstandingDomainFeedbackFeedbackIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetLanguageunderstandingDomainFeedbackFeedbackIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetLanguageunderstandingDomainFeedbackFeedbackIDOK creates a GetLanguageunderstandingDomainFeedbackFeedbackIDOK with default headers values
func NewGetLanguageunderstandingDomainFeedbackFeedbackIDOK() *GetLanguageunderstandingDomainFeedbackFeedbackIDOK {
	return &GetLanguageunderstandingDomainFeedbackFeedbackIDOK{}
}

/*
GetLanguageunderstandingDomainFeedbackFeedbackIDOK describes a response with status code 200, with default header values.

successful operation
*/
type GetLanguageunderstandingDomainFeedbackFeedbackIDOK struct {
	Payload *models.NluFeedbackResponse
}

// IsSuccess returns true when this get languageunderstanding domain feedback feedback Id o k response has a 2xx status code
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get languageunderstanding domain feedback feedback Id o k response has a 3xx status code
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain feedback feedback Id o k response has a 4xx status code
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get languageunderstanding domain feedback feedback Id o k response has a 5xx status code
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domain feedback feedback Id o k response a status code equal to that given
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}][%d] getLanguageunderstandingDomainFeedbackFeedbackIdOK  %+v", 200, o.Payload)
}

func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDOK) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}][%d] getLanguageunderstandingDomainFeedbackFeedbackIdOK  %+v", 200, o.Payload)
}

func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDOK) GetPayload() *models.NluFeedbackResponse {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NluFeedbackResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainFeedbackFeedbackIDBadRequest creates a GetLanguageunderstandingDomainFeedbackFeedbackIDBadRequest with default headers values
func NewGetLanguageunderstandingDomainFeedbackFeedbackIDBadRequest() *GetLanguageunderstandingDomainFeedbackFeedbackIDBadRequest {
	return &GetLanguageunderstandingDomainFeedbackFeedbackIDBadRequest{}
}

/*
GetLanguageunderstandingDomainFeedbackFeedbackIDBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetLanguageunderstandingDomainFeedbackFeedbackIDBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain feedback feedback Id bad request response has a 2xx status code
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain feedback feedback Id bad request response has a 3xx status code
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain feedback feedback Id bad request response has a 4xx status code
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding domain feedback feedback Id bad request response has a 5xx status code
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domain feedback feedback Id bad request response a status code equal to that given
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}][%d] getLanguageunderstandingDomainFeedbackFeedbackIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}][%d] getLanguageunderstandingDomainFeedbackFeedbackIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainFeedbackFeedbackIDUnauthorized creates a GetLanguageunderstandingDomainFeedbackFeedbackIDUnauthorized with default headers values
func NewGetLanguageunderstandingDomainFeedbackFeedbackIDUnauthorized() *GetLanguageunderstandingDomainFeedbackFeedbackIDUnauthorized {
	return &GetLanguageunderstandingDomainFeedbackFeedbackIDUnauthorized{}
}

/*
GetLanguageunderstandingDomainFeedbackFeedbackIDUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetLanguageunderstandingDomainFeedbackFeedbackIDUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain feedback feedback Id unauthorized response has a 2xx status code
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain feedback feedback Id unauthorized response has a 3xx status code
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain feedback feedback Id unauthorized response has a 4xx status code
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding domain feedback feedback Id unauthorized response has a 5xx status code
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domain feedback feedback Id unauthorized response a status code equal to that given
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}][%d] getLanguageunderstandingDomainFeedbackFeedbackIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}][%d] getLanguageunderstandingDomainFeedbackFeedbackIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainFeedbackFeedbackIDForbidden creates a GetLanguageunderstandingDomainFeedbackFeedbackIDForbidden with default headers values
func NewGetLanguageunderstandingDomainFeedbackFeedbackIDForbidden() *GetLanguageunderstandingDomainFeedbackFeedbackIDForbidden {
	return &GetLanguageunderstandingDomainFeedbackFeedbackIDForbidden{}
}

/*
GetLanguageunderstandingDomainFeedbackFeedbackIDForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetLanguageunderstandingDomainFeedbackFeedbackIDForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain feedback feedback Id forbidden response has a 2xx status code
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain feedback feedback Id forbidden response has a 3xx status code
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain feedback feedback Id forbidden response has a 4xx status code
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding domain feedback feedback Id forbidden response has a 5xx status code
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domain feedback feedback Id forbidden response a status code equal to that given
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}][%d] getLanguageunderstandingDomainFeedbackFeedbackIdForbidden  %+v", 403, o.Payload)
}

func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}][%d] getLanguageunderstandingDomainFeedbackFeedbackIdForbidden  %+v", 403, o.Payload)
}

func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainFeedbackFeedbackIDNotFound creates a GetLanguageunderstandingDomainFeedbackFeedbackIDNotFound with default headers values
func NewGetLanguageunderstandingDomainFeedbackFeedbackIDNotFound() *GetLanguageunderstandingDomainFeedbackFeedbackIDNotFound {
	return &GetLanguageunderstandingDomainFeedbackFeedbackIDNotFound{}
}

/*
GetLanguageunderstandingDomainFeedbackFeedbackIDNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetLanguageunderstandingDomainFeedbackFeedbackIDNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain feedback feedback Id not found response has a 2xx status code
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain feedback feedback Id not found response has a 3xx status code
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain feedback feedback Id not found response has a 4xx status code
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding domain feedback feedback Id not found response has a 5xx status code
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domain feedback feedback Id not found response a status code equal to that given
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}][%d] getLanguageunderstandingDomainFeedbackFeedbackIdNotFound  %+v", 404, o.Payload)
}

func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}][%d] getLanguageunderstandingDomainFeedbackFeedbackIdNotFound  %+v", 404, o.Payload)
}

func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainFeedbackFeedbackIDRequestTimeout creates a GetLanguageunderstandingDomainFeedbackFeedbackIDRequestTimeout with default headers values
func NewGetLanguageunderstandingDomainFeedbackFeedbackIDRequestTimeout() *GetLanguageunderstandingDomainFeedbackFeedbackIDRequestTimeout {
	return &GetLanguageunderstandingDomainFeedbackFeedbackIDRequestTimeout{}
}

/*
GetLanguageunderstandingDomainFeedbackFeedbackIDRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetLanguageunderstandingDomainFeedbackFeedbackIDRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain feedback feedback Id request timeout response has a 2xx status code
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain feedback feedback Id request timeout response has a 3xx status code
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain feedback feedback Id request timeout response has a 4xx status code
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding domain feedback feedback Id request timeout response has a 5xx status code
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domain feedback feedback Id request timeout response a status code equal to that given
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}][%d] getLanguageunderstandingDomainFeedbackFeedbackIdRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}][%d] getLanguageunderstandingDomainFeedbackFeedbackIdRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainFeedbackFeedbackIDRequestEntityTooLarge creates a GetLanguageunderstandingDomainFeedbackFeedbackIDRequestEntityTooLarge with default headers values
func NewGetLanguageunderstandingDomainFeedbackFeedbackIDRequestEntityTooLarge() *GetLanguageunderstandingDomainFeedbackFeedbackIDRequestEntityTooLarge {
	return &GetLanguageunderstandingDomainFeedbackFeedbackIDRequestEntityTooLarge{}
}

/*
GetLanguageunderstandingDomainFeedbackFeedbackIDRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetLanguageunderstandingDomainFeedbackFeedbackIDRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain feedback feedback Id request entity too large response has a 2xx status code
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain feedback feedback Id request entity too large response has a 3xx status code
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain feedback feedback Id request entity too large response has a 4xx status code
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding domain feedback feedback Id request entity too large response has a 5xx status code
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domain feedback feedback Id request entity too large response a status code equal to that given
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}][%d] getLanguageunderstandingDomainFeedbackFeedbackIdRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}][%d] getLanguageunderstandingDomainFeedbackFeedbackIdRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainFeedbackFeedbackIDUnsupportedMediaType creates a GetLanguageunderstandingDomainFeedbackFeedbackIDUnsupportedMediaType with default headers values
func NewGetLanguageunderstandingDomainFeedbackFeedbackIDUnsupportedMediaType() *GetLanguageunderstandingDomainFeedbackFeedbackIDUnsupportedMediaType {
	return &GetLanguageunderstandingDomainFeedbackFeedbackIDUnsupportedMediaType{}
}

/*
GetLanguageunderstandingDomainFeedbackFeedbackIDUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetLanguageunderstandingDomainFeedbackFeedbackIDUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain feedback feedback Id unsupported media type response has a 2xx status code
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain feedback feedback Id unsupported media type response has a 3xx status code
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain feedback feedback Id unsupported media type response has a 4xx status code
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding domain feedback feedback Id unsupported media type response has a 5xx status code
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domain feedback feedback Id unsupported media type response a status code equal to that given
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}][%d] getLanguageunderstandingDomainFeedbackFeedbackIdUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}][%d] getLanguageunderstandingDomainFeedbackFeedbackIdUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainFeedbackFeedbackIDTooManyRequests creates a GetLanguageunderstandingDomainFeedbackFeedbackIDTooManyRequests with default headers values
func NewGetLanguageunderstandingDomainFeedbackFeedbackIDTooManyRequests() *GetLanguageunderstandingDomainFeedbackFeedbackIDTooManyRequests {
	return &GetLanguageunderstandingDomainFeedbackFeedbackIDTooManyRequests{}
}

/*
GetLanguageunderstandingDomainFeedbackFeedbackIDTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetLanguageunderstandingDomainFeedbackFeedbackIDTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain feedback feedback Id too many requests response has a 2xx status code
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain feedback feedback Id too many requests response has a 3xx status code
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain feedback feedback Id too many requests response has a 4xx status code
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding domain feedback feedback Id too many requests response has a 5xx status code
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domain feedback feedback Id too many requests response a status code equal to that given
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}][%d] getLanguageunderstandingDomainFeedbackFeedbackIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}][%d] getLanguageunderstandingDomainFeedbackFeedbackIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainFeedbackFeedbackIDInternalServerError creates a GetLanguageunderstandingDomainFeedbackFeedbackIDInternalServerError with default headers values
func NewGetLanguageunderstandingDomainFeedbackFeedbackIDInternalServerError() *GetLanguageunderstandingDomainFeedbackFeedbackIDInternalServerError {
	return &GetLanguageunderstandingDomainFeedbackFeedbackIDInternalServerError{}
}

/*
GetLanguageunderstandingDomainFeedbackFeedbackIDInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetLanguageunderstandingDomainFeedbackFeedbackIDInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain feedback feedback Id internal server error response has a 2xx status code
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain feedback feedback Id internal server error response has a 3xx status code
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain feedback feedback Id internal server error response has a 4xx status code
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get languageunderstanding domain feedback feedback Id internal server error response has a 5xx status code
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get languageunderstanding domain feedback feedback Id internal server error response a status code equal to that given
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}][%d] getLanguageunderstandingDomainFeedbackFeedbackIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}][%d] getLanguageunderstandingDomainFeedbackFeedbackIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainFeedbackFeedbackIDServiceUnavailable creates a GetLanguageunderstandingDomainFeedbackFeedbackIDServiceUnavailable with default headers values
func NewGetLanguageunderstandingDomainFeedbackFeedbackIDServiceUnavailable() *GetLanguageunderstandingDomainFeedbackFeedbackIDServiceUnavailable {
	return &GetLanguageunderstandingDomainFeedbackFeedbackIDServiceUnavailable{}
}

/*
GetLanguageunderstandingDomainFeedbackFeedbackIDServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetLanguageunderstandingDomainFeedbackFeedbackIDServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain feedback feedback Id service unavailable response has a 2xx status code
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain feedback feedback Id service unavailable response has a 3xx status code
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain feedback feedback Id service unavailable response has a 4xx status code
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get languageunderstanding domain feedback feedback Id service unavailable response has a 5xx status code
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get languageunderstanding domain feedback feedback Id service unavailable response a status code equal to that given
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}][%d] getLanguageunderstandingDomainFeedbackFeedbackIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}][%d] getLanguageunderstandingDomainFeedbackFeedbackIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainFeedbackFeedbackIDGatewayTimeout creates a GetLanguageunderstandingDomainFeedbackFeedbackIDGatewayTimeout with default headers values
func NewGetLanguageunderstandingDomainFeedbackFeedbackIDGatewayTimeout() *GetLanguageunderstandingDomainFeedbackFeedbackIDGatewayTimeout {
	return &GetLanguageunderstandingDomainFeedbackFeedbackIDGatewayTimeout{}
}

/*
GetLanguageunderstandingDomainFeedbackFeedbackIDGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetLanguageunderstandingDomainFeedbackFeedbackIDGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain feedback feedback Id gateway timeout response has a 2xx status code
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain feedback feedback Id gateway timeout response has a 3xx status code
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain feedback feedback Id gateway timeout response has a 4xx status code
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get languageunderstanding domain feedback feedback Id gateway timeout response has a 5xx status code
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get languageunderstanding domain feedback feedback Id gateway timeout response a status code equal to that given
func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}][%d] getLanguageunderstandingDomainFeedbackFeedbackIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}][%d] getLanguageunderstandingDomainFeedbackFeedbackIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainFeedbackFeedbackIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
