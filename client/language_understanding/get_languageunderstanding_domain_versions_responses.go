// Code generated by go-swagger; DO NOT EDIT.

package language_understanding

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetLanguageunderstandingDomainVersionsReader is a Reader for the GetLanguageunderstandingDomainVersions structure.
type GetLanguageunderstandingDomainVersionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLanguageunderstandingDomainVersionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLanguageunderstandingDomainVersionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetLanguageunderstandingDomainVersionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetLanguageunderstandingDomainVersionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetLanguageunderstandingDomainVersionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetLanguageunderstandingDomainVersionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetLanguageunderstandingDomainVersionsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetLanguageunderstandingDomainVersionsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetLanguageunderstandingDomainVersionsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetLanguageunderstandingDomainVersionsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetLanguageunderstandingDomainVersionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetLanguageunderstandingDomainVersionsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetLanguageunderstandingDomainVersionsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetLanguageunderstandingDomainVersionsOK creates a GetLanguageunderstandingDomainVersionsOK with default headers values
func NewGetLanguageunderstandingDomainVersionsOK() *GetLanguageunderstandingDomainVersionsOK {
	return &GetLanguageunderstandingDomainVersionsOK{}
}

/*
GetLanguageunderstandingDomainVersionsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetLanguageunderstandingDomainVersionsOK struct {
	Payload *models.NluDomainVersionListing
}

// IsSuccess returns true when this get languageunderstanding domain versions o k response has a 2xx status code
func (o *GetLanguageunderstandingDomainVersionsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get languageunderstanding domain versions o k response has a 3xx status code
func (o *GetLanguageunderstandingDomainVersionsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain versions o k response has a 4xx status code
func (o *GetLanguageunderstandingDomainVersionsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get languageunderstanding domain versions o k response has a 5xx status code
func (o *GetLanguageunderstandingDomainVersionsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domain versions o k response a status code equal to that given
func (o *GetLanguageunderstandingDomainVersionsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetLanguageunderstandingDomainVersionsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions][%d] getLanguageunderstandingDomainVersionsOK  %+v", 200, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionsOK) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions][%d] getLanguageunderstandingDomainVersionsOK  %+v", 200, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionsOK) GetPayload() *models.NluDomainVersionListing {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainVersionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NluDomainVersionListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainVersionsBadRequest creates a GetLanguageunderstandingDomainVersionsBadRequest with default headers values
func NewGetLanguageunderstandingDomainVersionsBadRequest() *GetLanguageunderstandingDomainVersionsBadRequest {
	return &GetLanguageunderstandingDomainVersionsBadRequest{}
}

/*
GetLanguageunderstandingDomainVersionsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetLanguageunderstandingDomainVersionsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain versions bad request response has a 2xx status code
func (o *GetLanguageunderstandingDomainVersionsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain versions bad request response has a 3xx status code
func (o *GetLanguageunderstandingDomainVersionsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain versions bad request response has a 4xx status code
func (o *GetLanguageunderstandingDomainVersionsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding domain versions bad request response has a 5xx status code
func (o *GetLanguageunderstandingDomainVersionsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domain versions bad request response a status code equal to that given
func (o *GetLanguageunderstandingDomainVersionsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetLanguageunderstandingDomainVersionsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions][%d] getLanguageunderstandingDomainVersionsBadRequest  %+v", 400, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions][%d] getLanguageunderstandingDomainVersionsBadRequest  %+v", 400, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainVersionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainVersionsUnauthorized creates a GetLanguageunderstandingDomainVersionsUnauthorized with default headers values
func NewGetLanguageunderstandingDomainVersionsUnauthorized() *GetLanguageunderstandingDomainVersionsUnauthorized {
	return &GetLanguageunderstandingDomainVersionsUnauthorized{}
}

/*
GetLanguageunderstandingDomainVersionsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetLanguageunderstandingDomainVersionsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain versions unauthorized response has a 2xx status code
func (o *GetLanguageunderstandingDomainVersionsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain versions unauthorized response has a 3xx status code
func (o *GetLanguageunderstandingDomainVersionsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain versions unauthorized response has a 4xx status code
func (o *GetLanguageunderstandingDomainVersionsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding domain versions unauthorized response has a 5xx status code
func (o *GetLanguageunderstandingDomainVersionsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domain versions unauthorized response a status code equal to that given
func (o *GetLanguageunderstandingDomainVersionsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetLanguageunderstandingDomainVersionsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions][%d] getLanguageunderstandingDomainVersionsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions][%d] getLanguageunderstandingDomainVersionsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainVersionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainVersionsForbidden creates a GetLanguageunderstandingDomainVersionsForbidden with default headers values
func NewGetLanguageunderstandingDomainVersionsForbidden() *GetLanguageunderstandingDomainVersionsForbidden {
	return &GetLanguageunderstandingDomainVersionsForbidden{}
}

/*
GetLanguageunderstandingDomainVersionsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetLanguageunderstandingDomainVersionsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain versions forbidden response has a 2xx status code
func (o *GetLanguageunderstandingDomainVersionsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain versions forbidden response has a 3xx status code
func (o *GetLanguageunderstandingDomainVersionsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain versions forbidden response has a 4xx status code
func (o *GetLanguageunderstandingDomainVersionsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding domain versions forbidden response has a 5xx status code
func (o *GetLanguageunderstandingDomainVersionsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domain versions forbidden response a status code equal to that given
func (o *GetLanguageunderstandingDomainVersionsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetLanguageunderstandingDomainVersionsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions][%d] getLanguageunderstandingDomainVersionsForbidden  %+v", 403, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions][%d] getLanguageunderstandingDomainVersionsForbidden  %+v", 403, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainVersionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainVersionsNotFound creates a GetLanguageunderstandingDomainVersionsNotFound with default headers values
func NewGetLanguageunderstandingDomainVersionsNotFound() *GetLanguageunderstandingDomainVersionsNotFound {
	return &GetLanguageunderstandingDomainVersionsNotFound{}
}

/*
GetLanguageunderstandingDomainVersionsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetLanguageunderstandingDomainVersionsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain versions not found response has a 2xx status code
func (o *GetLanguageunderstandingDomainVersionsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain versions not found response has a 3xx status code
func (o *GetLanguageunderstandingDomainVersionsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain versions not found response has a 4xx status code
func (o *GetLanguageunderstandingDomainVersionsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding domain versions not found response has a 5xx status code
func (o *GetLanguageunderstandingDomainVersionsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domain versions not found response a status code equal to that given
func (o *GetLanguageunderstandingDomainVersionsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetLanguageunderstandingDomainVersionsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions][%d] getLanguageunderstandingDomainVersionsNotFound  %+v", 404, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions][%d] getLanguageunderstandingDomainVersionsNotFound  %+v", 404, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainVersionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainVersionsRequestTimeout creates a GetLanguageunderstandingDomainVersionsRequestTimeout with default headers values
func NewGetLanguageunderstandingDomainVersionsRequestTimeout() *GetLanguageunderstandingDomainVersionsRequestTimeout {
	return &GetLanguageunderstandingDomainVersionsRequestTimeout{}
}

/*
GetLanguageunderstandingDomainVersionsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetLanguageunderstandingDomainVersionsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain versions request timeout response has a 2xx status code
func (o *GetLanguageunderstandingDomainVersionsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain versions request timeout response has a 3xx status code
func (o *GetLanguageunderstandingDomainVersionsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain versions request timeout response has a 4xx status code
func (o *GetLanguageunderstandingDomainVersionsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding domain versions request timeout response has a 5xx status code
func (o *GetLanguageunderstandingDomainVersionsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domain versions request timeout response a status code equal to that given
func (o *GetLanguageunderstandingDomainVersionsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetLanguageunderstandingDomainVersionsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions][%d] getLanguageunderstandingDomainVersionsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionsRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions][%d] getLanguageunderstandingDomainVersionsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainVersionsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainVersionsRequestEntityTooLarge creates a GetLanguageunderstandingDomainVersionsRequestEntityTooLarge with default headers values
func NewGetLanguageunderstandingDomainVersionsRequestEntityTooLarge() *GetLanguageunderstandingDomainVersionsRequestEntityTooLarge {
	return &GetLanguageunderstandingDomainVersionsRequestEntityTooLarge{}
}

/*
GetLanguageunderstandingDomainVersionsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetLanguageunderstandingDomainVersionsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain versions request entity too large response has a 2xx status code
func (o *GetLanguageunderstandingDomainVersionsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain versions request entity too large response has a 3xx status code
func (o *GetLanguageunderstandingDomainVersionsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain versions request entity too large response has a 4xx status code
func (o *GetLanguageunderstandingDomainVersionsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding domain versions request entity too large response has a 5xx status code
func (o *GetLanguageunderstandingDomainVersionsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domain versions request entity too large response a status code equal to that given
func (o *GetLanguageunderstandingDomainVersionsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetLanguageunderstandingDomainVersionsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions][%d] getLanguageunderstandingDomainVersionsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions][%d] getLanguageunderstandingDomainVersionsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainVersionsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainVersionsUnsupportedMediaType creates a GetLanguageunderstandingDomainVersionsUnsupportedMediaType with default headers values
func NewGetLanguageunderstandingDomainVersionsUnsupportedMediaType() *GetLanguageunderstandingDomainVersionsUnsupportedMediaType {
	return &GetLanguageunderstandingDomainVersionsUnsupportedMediaType{}
}

/*
GetLanguageunderstandingDomainVersionsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetLanguageunderstandingDomainVersionsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain versions unsupported media type response has a 2xx status code
func (o *GetLanguageunderstandingDomainVersionsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain versions unsupported media type response has a 3xx status code
func (o *GetLanguageunderstandingDomainVersionsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain versions unsupported media type response has a 4xx status code
func (o *GetLanguageunderstandingDomainVersionsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding domain versions unsupported media type response has a 5xx status code
func (o *GetLanguageunderstandingDomainVersionsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domain versions unsupported media type response a status code equal to that given
func (o *GetLanguageunderstandingDomainVersionsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetLanguageunderstandingDomainVersionsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions][%d] getLanguageunderstandingDomainVersionsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions][%d] getLanguageunderstandingDomainVersionsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainVersionsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainVersionsTooManyRequests creates a GetLanguageunderstandingDomainVersionsTooManyRequests with default headers values
func NewGetLanguageunderstandingDomainVersionsTooManyRequests() *GetLanguageunderstandingDomainVersionsTooManyRequests {
	return &GetLanguageunderstandingDomainVersionsTooManyRequests{}
}

/*
GetLanguageunderstandingDomainVersionsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetLanguageunderstandingDomainVersionsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain versions too many requests response has a 2xx status code
func (o *GetLanguageunderstandingDomainVersionsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain versions too many requests response has a 3xx status code
func (o *GetLanguageunderstandingDomainVersionsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain versions too many requests response has a 4xx status code
func (o *GetLanguageunderstandingDomainVersionsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding domain versions too many requests response has a 5xx status code
func (o *GetLanguageunderstandingDomainVersionsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding domain versions too many requests response a status code equal to that given
func (o *GetLanguageunderstandingDomainVersionsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetLanguageunderstandingDomainVersionsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions][%d] getLanguageunderstandingDomainVersionsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions][%d] getLanguageunderstandingDomainVersionsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainVersionsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainVersionsInternalServerError creates a GetLanguageunderstandingDomainVersionsInternalServerError with default headers values
func NewGetLanguageunderstandingDomainVersionsInternalServerError() *GetLanguageunderstandingDomainVersionsInternalServerError {
	return &GetLanguageunderstandingDomainVersionsInternalServerError{}
}

/*
GetLanguageunderstandingDomainVersionsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetLanguageunderstandingDomainVersionsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain versions internal server error response has a 2xx status code
func (o *GetLanguageunderstandingDomainVersionsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain versions internal server error response has a 3xx status code
func (o *GetLanguageunderstandingDomainVersionsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain versions internal server error response has a 4xx status code
func (o *GetLanguageunderstandingDomainVersionsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get languageunderstanding domain versions internal server error response has a 5xx status code
func (o *GetLanguageunderstandingDomainVersionsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get languageunderstanding domain versions internal server error response a status code equal to that given
func (o *GetLanguageunderstandingDomainVersionsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetLanguageunderstandingDomainVersionsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions][%d] getLanguageunderstandingDomainVersionsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions][%d] getLanguageunderstandingDomainVersionsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainVersionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainVersionsServiceUnavailable creates a GetLanguageunderstandingDomainVersionsServiceUnavailable with default headers values
func NewGetLanguageunderstandingDomainVersionsServiceUnavailable() *GetLanguageunderstandingDomainVersionsServiceUnavailable {
	return &GetLanguageunderstandingDomainVersionsServiceUnavailable{}
}

/*
GetLanguageunderstandingDomainVersionsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetLanguageunderstandingDomainVersionsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain versions service unavailable response has a 2xx status code
func (o *GetLanguageunderstandingDomainVersionsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain versions service unavailable response has a 3xx status code
func (o *GetLanguageunderstandingDomainVersionsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain versions service unavailable response has a 4xx status code
func (o *GetLanguageunderstandingDomainVersionsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get languageunderstanding domain versions service unavailable response has a 5xx status code
func (o *GetLanguageunderstandingDomainVersionsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get languageunderstanding domain versions service unavailable response a status code equal to that given
func (o *GetLanguageunderstandingDomainVersionsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetLanguageunderstandingDomainVersionsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions][%d] getLanguageunderstandingDomainVersionsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions][%d] getLanguageunderstandingDomainVersionsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainVersionsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingDomainVersionsGatewayTimeout creates a GetLanguageunderstandingDomainVersionsGatewayTimeout with default headers values
func NewGetLanguageunderstandingDomainVersionsGatewayTimeout() *GetLanguageunderstandingDomainVersionsGatewayTimeout {
	return &GetLanguageunderstandingDomainVersionsGatewayTimeout{}
}

/*
GetLanguageunderstandingDomainVersionsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetLanguageunderstandingDomainVersionsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding domain versions gateway timeout response has a 2xx status code
func (o *GetLanguageunderstandingDomainVersionsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding domain versions gateway timeout response has a 3xx status code
func (o *GetLanguageunderstandingDomainVersionsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding domain versions gateway timeout response has a 4xx status code
func (o *GetLanguageunderstandingDomainVersionsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get languageunderstanding domain versions gateway timeout response has a 5xx status code
func (o *GetLanguageunderstandingDomainVersionsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get languageunderstanding domain versions gateway timeout response a status code equal to that given
func (o *GetLanguageunderstandingDomainVersionsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetLanguageunderstandingDomainVersionsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions][%d] getLanguageunderstandingDomainVersionsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionsGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/domains/{domainId}/versions][%d] getLanguageunderstandingDomainVersionsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetLanguageunderstandingDomainVersionsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingDomainVersionsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
