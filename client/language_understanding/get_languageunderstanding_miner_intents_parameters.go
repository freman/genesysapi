// Code generated by go-swagger; DO NOT EDIT.

package language_understanding

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetLanguageunderstandingMinerIntentsParams creates a new GetLanguageunderstandingMinerIntentsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetLanguageunderstandingMinerIntentsParams() *GetLanguageunderstandingMinerIntentsParams {
	return &GetLanguageunderstandingMinerIntentsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetLanguageunderstandingMinerIntentsParamsWithTimeout creates a new GetLanguageunderstandingMinerIntentsParams object
// with the ability to set a timeout on a request.
func NewGetLanguageunderstandingMinerIntentsParamsWithTimeout(timeout time.Duration) *GetLanguageunderstandingMinerIntentsParams {
	return &GetLanguageunderstandingMinerIntentsParams{
		timeout: timeout,
	}
}

// NewGetLanguageunderstandingMinerIntentsParamsWithContext creates a new GetLanguageunderstandingMinerIntentsParams object
// with the ability to set a context for a request.
func NewGetLanguageunderstandingMinerIntentsParamsWithContext(ctx context.Context) *GetLanguageunderstandingMinerIntentsParams {
	return &GetLanguageunderstandingMinerIntentsParams{
		Context: ctx,
	}
}

// NewGetLanguageunderstandingMinerIntentsParamsWithHTTPClient creates a new GetLanguageunderstandingMinerIntentsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetLanguageunderstandingMinerIntentsParamsWithHTTPClient(client *http.Client) *GetLanguageunderstandingMinerIntentsParams {
	return &GetLanguageunderstandingMinerIntentsParams{
		HTTPClient: client,
	}
}

/*
GetLanguageunderstandingMinerIntentsParams contains all the parameters to send to the API endpoint

	for the get languageunderstanding miner intents operation.

	Typically these are written to a http.Request.
*/
type GetLanguageunderstandingMinerIntentsParams struct {

	/* Expand.

	   Option to fetch utterances.
	*/
	Expand *string

	/* MinerID.

	   Miner ID
	*/
	MinerID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get languageunderstanding miner intents params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetLanguageunderstandingMinerIntentsParams) WithDefaults() *GetLanguageunderstandingMinerIntentsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get languageunderstanding miner intents params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetLanguageunderstandingMinerIntentsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get languageunderstanding miner intents params
func (o *GetLanguageunderstandingMinerIntentsParams) WithTimeout(timeout time.Duration) *GetLanguageunderstandingMinerIntentsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get languageunderstanding miner intents params
func (o *GetLanguageunderstandingMinerIntentsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get languageunderstanding miner intents params
func (o *GetLanguageunderstandingMinerIntentsParams) WithContext(ctx context.Context) *GetLanguageunderstandingMinerIntentsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get languageunderstanding miner intents params
func (o *GetLanguageunderstandingMinerIntentsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get languageunderstanding miner intents params
func (o *GetLanguageunderstandingMinerIntentsParams) WithHTTPClient(client *http.Client) *GetLanguageunderstandingMinerIntentsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get languageunderstanding miner intents params
func (o *GetLanguageunderstandingMinerIntentsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithExpand adds the expand to the get languageunderstanding miner intents params
func (o *GetLanguageunderstandingMinerIntentsParams) WithExpand(expand *string) *GetLanguageunderstandingMinerIntentsParams {
	o.SetExpand(expand)
	return o
}

// SetExpand adds the expand to the get languageunderstanding miner intents params
func (o *GetLanguageunderstandingMinerIntentsParams) SetExpand(expand *string) {
	o.Expand = expand
}

// WithMinerID adds the minerID to the get languageunderstanding miner intents params
func (o *GetLanguageunderstandingMinerIntentsParams) WithMinerID(minerID string) *GetLanguageunderstandingMinerIntentsParams {
	o.SetMinerID(minerID)
	return o
}

// SetMinerID adds the minerId to the get languageunderstanding miner intents params
func (o *GetLanguageunderstandingMinerIntentsParams) SetMinerID(minerID string) {
	o.MinerID = minerID
}

// WriteToRequest writes these params to a swagger request
func (o *GetLanguageunderstandingMinerIntentsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Expand != nil {

		// query param expand
		var qrExpand string

		if o.Expand != nil {
			qrExpand = *o.Expand
		}
		qExpand := qrExpand
		if qExpand != "" {

			if err := r.SetQueryParam("expand", qExpand); err != nil {
				return err
			}
		}
	}

	// path param minerId
	if err := r.SetPathParam("minerId", o.MinerID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
