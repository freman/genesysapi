// Code generated by go-swagger; DO NOT EDIT.

package language_understanding

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostLanguageunderstandingMinerExecuteReader is a Reader for the PostLanguageunderstandingMinerExecute structure.
type PostLanguageunderstandingMinerExecuteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostLanguageunderstandingMinerExecuteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostLanguageunderstandingMinerExecuteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewPostLanguageunderstandingMinerExecuteAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostLanguageunderstandingMinerExecuteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostLanguageunderstandingMinerExecuteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostLanguageunderstandingMinerExecuteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostLanguageunderstandingMinerExecuteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostLanguageunderstandingMinerExecuteRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostLanguageunderstandingMinerExecuteRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostLanguageunderstandingMinerExecuteUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostLanguageunderstandingMinerExecuteTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostLanguageunderstandingMinerExecuteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostLanguageunderstandingMinerExecuteServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostLanguageunderstandingMinerExecuteGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostLanguageunderstandingMinerExecuteOK creates a PostLanguageunderstandingMinerExecuteOK with default headers values
func NewPostLanguageunderstandingMinerExecuteOK() *PostLanguageunderstandingMinerExecuteOK {
	return &PostLanguageunderstandingMinerExecuteOK{}
}

/*PostLanguageunderstandingMinerExecuteOK handles this case with default header values.

successful operation
*/
type PostLanguageunderstandingMinerExecuteOK struct {
	Payload *models.Miner
}

func (o *PostLanguageunderstandingMinerExecuteOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/miners/{minerId}/execute][%d] postLanguageunderstandingMinerExecuteOK  %+v", 200, o.Payload)
}

func (o *PostLanguageunderstandingMinerExecuteOK) GetPayload() *models.Miner {
	return o.Payload
}

func (o *PostLanguageunderstandingMinerExecuteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Miner)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingMinerExecuteAccepted creates a PostLanguageunderstandingMinerExecuteAccepted with default headers values
func NewPostLanguageunderstandingMinerExecuteAccepted() *PostLanguageunderstandingMinerExecuteAccepted {
	return &PostLanguageunderstandingMinerExecuteAccepted{}
}

/*PostLanguageunderstandingMinerExecuteAccepted handles this case with default header values.

Processing request
*/
type PostLanguageunderstandingMinerExecuteAccepted struct {
	Payload *models.Miner
}

func (o *PostLanguageunderstandingMinerExecuteAccepted) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/miners/{minerId}/execute][%d] postLanguageunderstandingMinerExecuteAccepted  %+v", 202, o.Payload)
}

func (o *PostLanguageunderstandingMinerExecuteAccepted) GetPayload() *models.Miner {
	return o.Payload
}

func (o *PostLanguageunderstandingMinerExecuteAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Miner)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingMinerExecuteBadRequest creates a PostLanguageunderstandingMinerExecuteBadRequest with default headers values
func NewPostLanguageunderstandingMinerExecuteBadRequest() *PostLanguageunderstandingMinerExecuteBadRequest {
	return &PostLanguageunderstandingMinerExecuteBadRequest{}
}

/*PostLanguageunderstandingMinerExecuteBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostLanguageunderstandingMinerExecuteBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PostLanguageunderstandingMinerExecuteBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/miners/{minerId}/execute][%d] postLanguageunderstandingMinerExecuteBadRequest  %+v", 400, o.Payload)
}

func (o *PostLanguageunderstandingMinerExecuteBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingMinerExecuteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingMinerExecuteUnauthorized creates a PostLanguageunderstandingMinerExecuteUnauthorized with default headers values
func NewPostLanguageunderstandingMinerExecuteUnauthorized() *PostLanguageunderstandingMinerExecuteUnauthorized {
	return &PostLanguageunderstandingMinerExecuteUnauthorized{}
}

/*PostLanguageunderstandingMinerExecuteUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PostLanguageunderstandingMinerExecuteUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PostLanguageunderstandingMinerExecuteUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/miners/{minerId}/execute][%d] postLanguageunderstandingMinerExecuteUnauthorized  %+v", 401, o.Payload)
}

func (o *PostLanguageunderstandingMinerExecuteUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingMinerExecuteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingMinerExecuteForbidden creates a PostLanguageunderstandingMinerExecuteForbidden with default headers values
func NewPostLanguageunderstandingMinerExecuteForbidden() *PostLanguageunderstandingMinerExecuteForbidden {
	return &PostLanguageunderstandingMinerExecuteForbidden{}
}

/*PostLanguageunderstandingMinerExecuteForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PostLanguageunderstandingMinerExecuteForbidden struct {
	Payload *models.ErrorBody
}

func (o *PostLanguageunderstandingMinerExecuteForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/miners/{minerId}/execute][%d] postLanguageunderstandingMinerExecuteForbidden  %+v", 403, o.Payload)
}

func (o *PostLanguageunderstandingMinerExecuteForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingMinerExecuteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingMinerExecuteNotFound creates a PostLanguageunderstandingMinerExecuteNotFound with default headers values
func NewPostLanguageunderstandingMinerExecuteNotFound() *PostLanguageunderstandingMinerExecuteNotFound {
	return &PostLanguageunderstandingMinerExecuteNotFound{}
}

/*PostLanguageunderstandingMinerExecuteNotFound handles this case with default header values.

The requested resource was not found.
*/
type PostLanguageunderstandingMinerExecuteNotFound struct {
	Payload *models.ErrorBody
}

func (o *PostLanguageunderstandingMinerExecuteNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/miners/{minerId}/execute][%d] postLanguageunderstandingMinerExecuteNotFound  %+v", 404, o.Payload)
}

func (o *PostLanguageunderstandingMinerExecuteNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingMinerExecuteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingMinerExecuteRequestTimeout creates a PostLanguageunderstandingMinerExecuteRequestTimeout with default headers values
func NewPostLanguageunderstandingMinerExecuteRequestTimeout() *PostLanguageunderstandingMinerExecuteRequestTimeout {
	return &PostLanguageunderstandingMinerExecuteRequestTimeout{}
}

/*PostLanguageunderstandingMinerExecuteRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostLanguageunderstandingMinerExecuteRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostLanguageunderstandingMinerExecuteRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/miners/{minerId}/execute][%d] postLanguageunderstandingMinerExecuteRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostLanguageunderstandingMinerExecuteRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingMinerExecuteRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingMinerExecuteRequestEntityTooLarge creates a PostLanguageunderstandingMinerExecuteRequestEntityTooLarge with default headers values
func NewPostLanguageunderstandingMinerExecuteRequestEntityTooLarge() *PostLanguageunderstandingMinerExecuteRequestEntityTooLarge {
	return &PostLanguageunderstandingMinerExecuteRequestEntityTooLarge{}
}

/*PostLanguageunderstandingMinerExecuteRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PostLanguageunderstandingMinerExecuteRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PostLanguageunderstandingMinerExecuteRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/miners/{minerId}/execute][%d] postLanguageunderstandingMinerExecuteRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostLanguageunderstandingMinerExecuteRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingMinerExecuteRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingMinerExecuteUnsupportedMediaType creates a PostLanguageunderstandingMinerExecuteUnsupportedMediaType with default headers values
func NewPostLanguageunderstandingMinerExecuteUnsupportedMediaType() *PostLanguageunderstandingMinerExecuteUnsupportedMediaType {
	return &PostLanguageunderstandingMinerExecuteUnsupportedMediaType{}
}

/*PostLanguageunderstandingMinerExecuteUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostLanguageunderstandingMinerExecuteUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PostLanguageunderstandingMinerExecuteUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/miners/{minerId}/execute][%d] postLanguageunderstandingMinerExecuteUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostLanguageunderstandingMinerExecuteUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingMinerExecuteUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingMinerExecuteTooManyRequests creates a PostLanguageunderstandingMinerExecuteTooManyRequests with default headers values
func NewPostLanguageunderstandingMinerExecuteTooManyRequests() *PostLanguageunderstandingMinerExecuteTooManyRequests {
	return &PostLanguageunderstandingMinerExecuteTooManyRequests{}
}

/*PostLanguageunderstandingMinerExecuteTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostLanguageunderstandingMinerExecuteTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PostLanguageunderstandingMinerExecuteTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/miners/{minerId}/execute][%d] postLanguageunderstandingMinerExecuteTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostLanguageunderstandingMinerExecuteTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingMinerExecuteTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingMinerExecuteInternalServerError creates a PostLanguageunderstandingMinerExecuteInternalServerError with default headers values
func NewPostLanguageunderstandingMinerExecuteInternalServerError() *PostLanguageunderstandingMinerExecuteInternalServerError {
	return &PostLanguageunderstandingMinerExecuteInternalServerError{}
}

/*PostLanguageunderstandingMinerExecuteInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostLanguageunderstandingMinerExecuteInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PostLanguageunderstandingMinerExecuteInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/miners/{minerId}/execute][%d] postLanguageunderstandingMinerExecuteInternalServerError  %+v", 500, o.Payload)
}

func (o *PostLanguageunderstandingMinerExecuteInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingMinerExecuteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingMinerExecuteServiceUnavailable creates a PostLanguageunderstandingMinerExecuteServiceUnavailable with default headers values
func NewPostLanguageunderstandingMinerExecuteServiceUnavailable() *PostLanguageunderstandingMinerExecuteServiceUnavailable {
	return &PostLanguageunderstandingMinerExecuteServiceUnavailable{}
}

/*PostLanguageunderstandingMinerExecuteServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostLanguageunderstandingMinerExecuteServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PostLanguageunderstandingMinerExecuteServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/miners/{minerId}/execute][%d] postLanguageunderstandingMinerExecuteServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostLanguageunderstandingMinerExecuteServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingMinerExecuteServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingMinerExecuteGatewayTimeout creates a PostLanguageunderstandingMinerExecuteGatewayTimeout with default headers values
func NewPostLanguageunderstandingMinerExecuteGatewayTimeout() *PostLanguageunderstandingMinerExecuteGatewayTimeout {
	return &PostLanguageunderstandingMinerExecuteGatewayTimeout{}
}

/*PostLanguageunderstandingMinerExecuteGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PostLanguageunderstandingMinerExecuteGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostLanguageunderstandingMinerExecuteGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/miners/{minerId}/execute][%d] postLanguageunderstandingMinerExecuteGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostLanguageunderstandingMinerExecuteGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingMinerExecuteGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
