// Code generated by go-swagger; DO NOT EDIT.

package language_understanding

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostLanguageunderstandingDomainVersionsReader is a Reader for the PostLanguageunderstandingDomainVersions structure.
type PostLanguageunderstandingDomainVersionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostLanguageunderstandingDomainVersionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostLanguageunderstandingDomainVersionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewPostLanguageunderstandingDomainVersionsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostLanguageunderstandingDomainVersionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostLanguageunderstandingDomainVersionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostLanguageunderstandingDomainVersionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostLanguageunderstandingDomainVersionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostLanguageunderstandingDomainVersionsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostLanguageunderstandingDomainVersionsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostLanguageunderstandingDomainVersionsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostLanguageunderstandingDomainVersionsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostLanguageunderstandingDomainVersionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostLanguageunderstandingDomainVersionsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostLanguageunderstandingDomainVersionsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostLanguageunderstandingDomainVersionsOK creates a PostLanguageunderstandingDomainVersionsOK with default headers values
func NewPostLanguageunderstandingDomainVersionsOK() *PostLanguageunderstandingDomainVersionsOK {
	return &PostLanguageunderstandingDomainVersionsOK{}
}

/*
PostLanguageunderstandingDomainVersionsOK describes a response with status code 200, with default header values.

successful operation
*/
type PostLanguageunderstandingDomainVersionsOK struct {
	Payload *models.NluDomainVersion
}

// IsSuccess returns true when this post languageunderstanding domain versions o k response has a 2xx status code
func (o *PostLanguageunderstandingDomainVersionsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post languageunderstanding domain versions o k response has a 3xx status code
func (o *PostLanguageunderstandingDomainVersionsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post languageunderstanding domain versions o k response has a 4xx status code
func (o *PostLanguageunderstandingDomainVersionsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post languageunderstanding domain versions o k response has a 5xx status code
func (o *PostLanguageunderstandingDomainVersionsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post languageunderstanding domain versions o k response a status code equal to that given
func (o *PostLanguageunderstandingDomainVersionsOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostLanguageunderstandingDomainVersionsOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions][%d] postLanguageunderstandingDomainVersionsOK  %+v", 200, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionsOK) String() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions][%d] postLanguageunderstandingDomainVersionsOK  %+v", 200, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionsOK) GetPayload() *models.NluDomainVersion {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NluDomainVersion)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionsCreated creates a PostLanguageunderstandingDomainVersionsCreated with default headers values
func NewPostLanguageunderstandingDomainVersionsCreated() *PostLanguageunderstandingDomainVersionsCreated {
	return &PostLanguageunderstandingDomainVersionsCreated{}
}

/*
PostLanguageunderstandingDomainVersionsCreated describes a response with status code 201, with default header values.

Created an NLU Domain Version
*/
type PostLanguageunderstandingDomainVersionsCreated struct {
	Payload *models.NluDomainVersion
}

// IsSuccess returns true when this post languageunderstanding domain versions created response has a 2xx status code
func (o *PostLanguageunderstandingDomainVersionsCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post languageunderstanding domain versions created response has a 3xx status code
func (o *PostLanguageunderstandingDomainVersionsCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post languageunderstanding domain versions created response has a 4xx status code
func (o *PostLanguageunderstandingDomainVersionsCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this post languageunderstanding domain versions created response has a 5xx status code
func (o *PostLanguageunderstandingDomainVersionsCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this post languageunderstanding domain versions created response a status code equal to that given
func (o *PostLanguageunderstandingDomainVersionsCreated) IsCode(code int) bool {
	return code == 201
}

func (o *PostLanguageunderstandingDomainVersionsCreated) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions][%d] postLanguageunderstandingDomainVersionsCreated  %+v", 201, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionsCreated) String() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions][%d] postLanguageunderstandingDomainVersionsCreated  %+v", 201, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionsCreated) GetPayload() *models.NluDomainVersion {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NluDomainVersion)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionsBadRequest creates a PostLanguageunderstandingDomainVersionsBadRequest with default headers values
func NewPostLanguageunderstandingDomainVersionsBadRequest() *PostLanguageunderstandingDomainVersionsBadRequest {
	return &PostLanguageunderstandingDomainVersionsBadRequest{}
}

/*
PostLanguageunderstandingDomainVersionsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostLanguageunderstandingDomainVersionsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post languageunderstanding domain versions bad request response has a 2xx status code
func (o *PostLanguageunderstandingDomainVersionsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post languageunderstanding domain versions bad request response has a 3xx status code
func (o *PostLanguageunderstandingDomainVersionsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post languageunderstanding domain versions bad request response has a 4xx status code
func (o *PostLanguageunderstandingDomainVersionsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post languageunderstanding domain versions bad request response has a 5xx status code
func (o *PostLanguageunderstandingDomainVersionsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post languageunderstanding domain versions bad request response a status code equal to that given
func (o *PostLanguageunderstandingDomainVersionsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostLanguageunderstandingDomainVersionsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions][%d] postLanguageunderstandingDomainVersionsBadRequest  %+v", 400, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionsBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions][%d] postLanguageunderstandingDomainVersionsBadRequest  %+v", 400, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionsUnauthorized creates a PostLanguageunderstandingDomainVersionsUnauthorized with default headers values
func NewPostLanguageunderstandingDomainVersionsUnauthorized() *PostLanguageunderstandingDomainVersionsUnauthorized {
	return &PostLanguageunderstandingDomainVersionsUnauthorized{}
}

/*
PostLanguageunderstandingDomainVersionsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostLanguageunderstandingDomainVersionsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post languageunderstanding domain versions unauthorized response has a 2xx status code
func (o *PostLanguageunderstandingDomainVersionsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post languageunderstanding domain versions unauthorized response has a 3xx status code
func (o *PostLanguageunderstandingDomainVersionsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post languageunderstanding domain versions unauthorized response has a 4xx status code
func (o *PostLanguageunderstandingDomainVersionsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post languageunderstanding domain versions unauthorized response has a 5xx status code
func (o *PostLanguageunderstandingDomainVersionsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post languageunderstanding domain versions unauthorized response a status code equal to that given
func (o *PostLanguageunderstandingDomainVersionsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostLanguageunderstandingDomainVersionsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions][%d] postLanguageunderstandingDomainVersionsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionsUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions][%d] postLanguageunderstandingDomainVersionsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionsForbidden creates a PostLanguageunderstandingDomainVersionsForbidden with default headers values
func NewPostLanguageunderstandingDomainVersionsForbidden() *PostLanguageunderstandingDomainVersionsForbidden {
	return &PostLanguageunderstandingDomainVersionsForbidden{}
}

/*
PostLanguageunderstandingDomainVersionsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostLanguageunderstandingDomainVersionsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post languageunderstanding domain versions forbidden response has a 2xx status code
func (o *PostLanguageunderstandingDomainVersionsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post languageunderstanding domain versions forbidden response has a 3xx status code
func (o *PostLanguageunderstandingDomainVersionsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post languageunderstanding domain versions forbidden response has a 4xx status code
func (o *PostLanguageunderstandingDomainVersionsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post languageunderstanding domain versions forbidden response has a 5xx status code
func (o *PostLanguageunderstandingDomainVersionsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post languageunderstanding domain versions forbidden response a status code equal to that given
func (o *PostLanguageunderstandingDomainVersionsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostLanguageunderstandingDomainVersionsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions][%d] postLanguageunderstandingDomainVersionsForbidden  %+v", 403, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionsForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions][%d] postLanguageunderstandingDomainVersionsForbidden  %+v", 403, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionsNotFound creates a PostLanguageunderstandingDomainVersionsNotFound with default headers values
func NewPostLanguageunderstandingDomainVersionsNotFound() *PostLanguageunderstandingDomainVersionsNotFound {
	return &PostLanguageunderstandingDomainVersionsNotFound{}
}

/*
PostLanguageunderstandingDomainVersionsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostLanguageunderstandingDomainVersionsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post languageunderstanding domain versions not found response has a 2xx status code
func (o *PostLanguageunderstandingDomainVersionsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post languageunderstanding domain versions not found response has a 3xx status code
func (o *PostLanguageunderstandingDomainVersionsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post languageunderstanding domain versions not found response has a 4xx status code
func (o *PostLanguageunderstandingDomainVersionsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post languageunderstanding domain versions not found response has a 5xx status code
func (o *PostLanguageunderstandingDomainVersionsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post languageunderstanding domain versions not found response a status code equal to that given
func (o *PostLanguageunderstandingDomainVersionsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostLanguageunderstandingDomainVersionsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions][%d] postLanguageunderstandingDomainVersionsNotFound  %+v", 404, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionsNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions][%d] postLanguageunderstandingDomainVersionsNotFound  %+v", 404, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionsRequestTimeout creates a PostLanguageunderstandingDomainVersionsRequestTimeout with default headers values
func NewPostLanguageunderstandingDomainVersionsRequestTimeout() *PostLanguageunderstandingDomainVersionsRequestTimeout {
	return &PostLanguageunderstandingDomainVersionsRequestTimeout{}
}

/*
PostLanguageunderstandingDomainVersionsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostLanguageunderstandingDomainVersionsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post languageunderstanding domain versions request timeout response has a 2xx status code
func (o *PostLanguageunderstandingDomainVersionsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post languageunderstanding domain versions request timeout response has a 3xx status code
func (o *PostLanguageunderstandingDomainVersionsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post languageunderstanding domain versions request timeout response has a 4xx status code
func (o *PostLanguageunderstandingDomainVersionsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post languageunderstanding domain versions request timeout response has a 5xx status code
func (o *PostLanguageunderstandingDomainVersionsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post languageunderstanding domain versions request timeout response a status code equal to that given
func (o *PostLanguageunderstandingDomainVersionsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostLanguageunderstandingDomainVersionsRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions][%d] postLanguageunderstandingDomainVersionsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionsRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions][%d] postLanguageunderstandingDomainVersionsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionsRequestEntityTooLarge creates a PostLanguageunderstandingDomainVersionsRequestEntityTooLarge with default headers values
func NewPostLanguageunderstandingDomainVersionsRequestEntityTooLarge() *PostLanguageunderstandingDomainVersionsRequestEntityTooLarge {
	return &PostLanguageunderstandingDomainVersionsRequestEntityTooLarge{}
}

/*
PostLanguageunderstandingDomainVersionsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PostLanguageunderstandingDomainVersionsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post languageunderstanding domain versions request entity too large response has a 2xx status code
func (o *PostLanguageunderstandingDomainVersionsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post languageunderstanding domain versions request entity too large response has a 3xx status code
func (o *PostLanguageunderstandingDomainVersionsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post languageunderstanding domain versions request entity too large response has a 4xx status code
func (o *PostLanguageunderstandingDomainVersionsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post languageunderstanding domain versions request entity too large response has a 5xx status code
func (o *PostLanguageunderstandingDomainVersionsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post languageunderstanding domain versions request entity too large response a status code equal to that given
func (o *PostLanguageunderstandingDomainVersionsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostLanguageunderstandingDomainVersionsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions][%d] postLanguageunderstandingDomainVersionsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions][%d] postLanguageunderstandingDomainVersionsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionsUnsupportedMediaType creates a PostLanguageunderstandingDomainVersionsUnsupportedMediaType with default headers values
func NewPostLanguageunderstandingDomainVersionsUnsupportedMediaType() *PostLanguageunderstandingDomainVersionsUnsupportedMediaType {
	return &PostLanguageunderstandingDomainVersionsUnsupportedMediaType{}
}

/*
PostLanguageunderstandingDomainVersionsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostLanguageunderstandingDomainVersionsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post languageunderstanding domain versions unsupported media type response has a 2xx status code
func (o *PostLanguageunderstandingDomainVersionsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post languageunderstanding domain versions unsupported media type response has a 3xx status code
func (o *PostLanguageunderstandingDomainVersionsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post languageunderstanding domain versions unsupported media type response has a 4xx status code
func (o *PostLanguageunderstandingDomainVersionsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post languageunderstanding domain versions unsupported media type response has a 5xx status code
func (o *PostLanguageunderstandingDomainVersionsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post languageunderstanding domain versions unsupported media type response a status code equal to that given
func (o *PostLanguageunderstandingDomainVersionsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostLanguageunderstandingDomainVersionsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions][%d] postLanguageunderstandingDomainVersionsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions][%d] postLanguageunderstandingDomainVersionsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionsTooManyRequests creates a PostLanguageunderstandingDomainVersionsTooManyRequests with default headers values
func NewPostLanguageunderstandingDomainVersionsTooManyRequests() *PostLanguageunderstandingDomainVersionsTooManyRequests {
	return &PostLanguageunderstandingDomainVersionsTooManyRequests{}
}

/*
PostLanguageunderstandingDomainVersionsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostLanguageunderstandingDomainVersionsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post languageunderstanding domain versions too many requests response has a 2xx status code
func (o *PostLanguageunderstandingDomainVersionsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post languageunderstanding domain versions too many requests response has a 3xx status code
func (o *PostLanguageunderstandingDomainVersionsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post languageunderstanding domain versions too many requests response has a 4xx status code
func (o *PostLanguageunderstandingDomainVersionsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post languageunderstanding domain versions too many requests response has a 5xx status code
func (o *PostLanguageunderstandingDomainVersionsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post languageunderstanding domain versions too many requests response a status code equal to that given
func (o *PostLanguageunderstandingDomainVersionsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostLanguageunderstandingDomainVersionsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions][%d] postLanguageunderstandingDomainVersionsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionsTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions][%d] postLanguageunderstandingDomainVersionsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionsInternalServerError creates a PostLanguageunderstandingDomainVersionsInternalServerError with default headers values
func NewPostLanguageunderstandingDomainVersionsInternalServerError() *PostLanguageunderstandingDomainVersionsInternalServerError {
	return &PostLanguageunderstandingDomainVersionsInternalServerError{}
}

/*
PostLanguageunderstandingDomainVersionsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostLanguageunderstandingDomainVersionsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post languageunderstanding domain versions internal server error response has a 2xx status code
func (o *PostLanguageunderstandingDomainVersionsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post languageunderstanding domain versions internal server error response has a 3xx status code
func (o *PostLanguageunderstandingDomainVersionsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post languageunderstanding domain versions internal server error response has a 4xx status code
func (o *PostLanguageunderstandingDomainVersionsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post languageunderstanding domain versions internal server error response has a 5xx status code
func (o *PostLanguageunderstandingDomainVersionsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post languageunderstanding domain versions internal server error response a status code equal to that given
func (o *PostLanguageunderstandingDomainVersionsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostLanguageunderstandingDomainVersionsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions][%d] postLanguageunderstandingDomainVersionsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionsInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions][%d] postLanguageunderstandingDomainVersionsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionsServiceUnavailable creates a PostLanguageunderstandingDomainVersionsServiceUnavailable with default headers values
func NewPostLanguageunderstandingDomainVersionsServiceUnavailable() *PostLanguageunderstandingDomainVersionsServiceUnavailable {
	return &PostLanguageunderstandingDomainVersionsServiceUnavailable{}
}

/*
PostLanguageunderstandingDomainVersionsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostLanguageunderstandingDomainVersionsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post languageunderstanding domain versions service unavailable response has a 2xx status code
func (o *PostLanguageunderstandingDomainVersionsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post languageunderstanding domain versions service unavailable response has a 3xx status code
func (o *PostLanguageunderstandingDomainVersionsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post languageunderstanding domain versions service unavailable response has a 4xx status code
func (o *PostLanguageunderstandingDomainVersionsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post languageunderstanding domain versions service unavailable response has a 5xx status code
func (o *PostLanguageunderstandingDomainVersionsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post languageunderstanding domain versions service unavailable response a status code equal to that given
func (o *PostLanguageunderstandingDomainVersionsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostLanguageunderstandingDomainVersionsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions][%d] postLanguageunderstandingDomainVersionsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionsServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions][%d] postLanguageunderstandingDomainVersionsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionsGatewayTimeout creates a PostLanguageunderstandingDomainVersionsGatewayTimeout with default headers values
func NewPostLanguageunderstandingDomainVersionsGatewayTimeout() *PostLanguageunderstandingDomainVersionsGatewayTimeout {
	return &PostLanguageunderstandingDomainVersionsGatewayTimeout{}
}

/*
PostLanguageunderstandingDomainVersionsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostLanguageunderstandingDomainVersionsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post languageunderstanding domain versions gateway timeout response has a 2xx status code
func (o *PostLanguageunderstandingDomainVersionsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post languageunderstanding domain versions gateway timeout response has a 3xx status code
func (o *PostLanguageunderstandingDomainVersionsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post languageunderstanding domain versions gateway timeout response has a 4xx status code
func (o *PostLanguageunderstandingDomainVersionsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post languageunderstanding domain versions gateway timeout response has a 5xx status code
func (o *PostLanguageunderstandingDomainVersionsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post languageunderstanding domain versions gateway timeout response a status code equal to that given
func (o *PostLanguageunderstandingDomainVersionsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostLanguageunderstandingDomainVersionsGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions][%d] postLanguageunderstandingDomainVersionsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionsGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions][%d] postLanguageunderstandingDomainVersionsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
