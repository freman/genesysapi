// Code generated by go-swagger; DO NOT EDIT.

package language_understanding

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostLanguageunderstandingDomainVersionPublishReader is a Reader for the PostLanguageunderstandingDomainVersionPublish structure.
type PostLanguageunderstandingDomainVersionPublishReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostLanguageunderstandingDomainVersionPublishReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostLanguageunderstandingDomainVersionPublishOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewPostLanguageunderstandingDomainVersionPublishCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostLanguageunderstandingDomainVersionPublishBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostLanguageunderstandingDomainVersionPublishUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostLanguageunderstandingDomainVersionPublishForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostLanguageunderstandingDomainVersionPublishNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostLanguageunderstandingDomainVersionPublishRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPostLanguageunderstandingDomainVersionPublishConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostLanguageunderstandingDomainVersionPublishRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostLanguageunderstandingDomainVersionPublishUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostLanguageunderstandingDomainVersionPublishTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostLanguageunderstandingDomainVersionPublishInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostLanguageunderstandingDomainVersionPublishServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostLanguageunderstandingDomainVersionPublishGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostLanguageunderstandingDomainVersionPublishOK creates a PostLanguageunderstandingDomainVersionPublishOK with default headers values
func NewPostLanguageunderstandingDomainVersionPublishOK() *PostLanguageunderstandingDomainVersionPublishOK {
	return &PostLanguageunderstandingDomainVersionPublishOK{}
}

/*
PostLanguageunderstandingDomainVersionPublishOK describes a response with status code 200, with default header values.

successful operation
*/
type PostLanguageunderstandingDomainVersionPublishOK struct {
	Payload *models.NluDomainVersion
}

// IsSuccess returns true when this post languageunderstanding domain version publish o k response has a 2xx status code
func (o *PostLanguageunderstandingDomainVersionPublishOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post languageunderstanding domain version publish o k response has a 3xx status code
func (o *PostLanguageunderstandingDomainVersionPublishOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post languageunderstanding domain version publish o k response has a 4xx status code
func (o *PostLanguageunderstandingDomainVersionPublishOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post languageunderstanding domain version publish o k response has a 5xx status code
func (o *PostLanguageunderstandingDomainVersionPublishOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post languageunderstanding domain version publish o k response a status code equal to that given
func (o *PostLanguageunderstandingDomainVersionPublishOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostLanguageunderstandingDomainVersionPublishOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/publish][%d] postLanguageunderstandingDomainVersionPublishOK  %+v", 200, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionPublishOK) String() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/publish][%d] postLanguageunderstandingDomainVersionPublishOK  %+v", 200, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionPublishOK) GetPayload() *models.NluDomainVersion {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionPublishOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NluDomainVersion)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionPublishCreated creates a PostLanguageunderstandingDomainVersionPublishCreated with default headers values
func NewPostLanguageunderstandingDomainVersionPublishCreated() *PostLanguageunderstandingDomainVersionPublishCreated {
	return &PostLanguageunderstandingDomainVersionPublishCreated{}
}

/*
PostLanguageunderstandingDomainVersionPublishCreated describes a response with status code 201, with default header values.

Published the specified NLU Domain Version
*/
type PostLanguageunderstandingDomainVersionPublishCreated struct {
	Payload *models.NluDomainVersion
}

// IsSuccess returns true when this post languageunderstanding domain version publish created response has a 2xx status code
func (o *PostLanguageunderstandingDomainVersionPublishCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post languageunderstanding domain version publish created response has a 3xx status code
func (o *PostLanguageunderstandingDomainVersionPublishCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post languageunderstanding domain version publish created response has a 4xx status code
func (o *PostLanguageunderstandingDomainVersionPublishCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this post languageunderstanding domain version publish created response has a 5xx status code
func (o *PostLanguageunderstandingDomainVersionPublishCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this post languageunderstanding domain version publish created response a status code equal to that given
func (o *PostLanguageunderstandingDomainVersionPublishCreated) IsCode(code int) bool {
	return code == 201
}

func (o *PostLanguageunderstandingDomainVersionPublishCreated) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/publish][%d] postLanguageunderstandingDomainVersionPublishCreated  %+v", 201, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionPublishCreated) String() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/publish][%d] postLanguageunderstandingDomainVersionPublishCreated  %+v", 201, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionPublishCreated) GetPayload() *models.NluDomainVersion {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionPublishCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NluDomainVersion)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionPublishBadRequest creates a PostLanguageunderstandingDomainVersionPublishBadRequest with default headers values
func NewPostLanguageunderstandingDomainVersionPublishBadRequest() *PostLanguageunderstandingDomainVersionPublishBadRequest {
	return &PostLanguageunderstandingDomainVersionPublishBadRequest{}
}

/*
PostLanguageunderstandingDomainVersionPublishBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostLanguageunderstandingDomainVersionPublishBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post languageunderstanding domain version publish bad request response has a 2xx status code
func (o *PostLanguageunderstandingDomainVersionPublishBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post languageunderstanding domain version publish bad request response has a 3xx status code
func (o *PostLanguageunderstandingDomainVersionPublishBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post languageunderstanding domain version publish bad request response has a 4xx status code
func (o *PostLanguageunderstandingDomainVersionPublishBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post languageunderstanding domain version publish bad request response has a 5xx status code
func (o *PostLanguageunderstandingDomainVersionPublishBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post languageunderstanding domain version publish bad request response a status code equal to that given
func (o *PostLanguageunderstandingDomainVersionPublishBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostLanguageunderstandingDomainVersionPublishBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/publish][%d] postLanguageunderstandingDomainVersionPublishBadRequest  %+v", 400, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionPublishBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/publish][%d] postLanguageunderstandingDomainVersionPublishBadRequest  %+v", 400, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionPublishBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionPublishBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionPublishUnauthorized creates a PostLanguageunderstandingDomainVersionPublishUnauthorized with default headers values
func NewPostLanguageunderstandingDomainVersionPublishUnauthorized() *PostLanguageunderstandingDomainVersionPublishUnauthorized {
	return &PostLanguageunderstandingDomainVersionPublishUnauthorized{}
}

/*
PostLanguageunderstandingDomainVersionPublishUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostLanguageunderstandingDomainVersionPublishUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post languageunderstanding domain version publish unauthorized response has a 2xx status code
func (o *PostLanguageunderstandingDomainVersionPublishUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post languageunderstanding domain version publish unauthorized response has a 3xx status code
func (o *PostLanguageunderstandingDomainVersionPublishUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post languageunderstanding domain version publish unauthorized response has a 4xx status code
func (o *PostLanguageunderstandingDomainVersionPublishUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post languageunderstanding domain version publish unauthorized response has a 5xx status code
func (o *PostLanguageunderstandingDomainVersionPublishUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post languageunderstanding domain version publish unauthorized response a status code equal to that given
func (o *PostLanguageunderstandingDomainVersionPublishUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostLanguageunderstandingDomainVersionPublishUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/publish][%d] postLanguageunderstandingDomainVersionPublishUnauthorized  %+v", 401, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionPublishUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/publish][%d] postLanguageunderstandingDomainVersionPublishUnauthorized  %+v", 401, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionPublishUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionPublishUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionPublishForbidden creates a PostLanguageunderstandingDomainVersionPublishForbidden with default headers values
func NewPostLanguageunderstandingDomainVersionPublishForbidden() *PostLanguageunderstandingDomainVersionPublishForbidden {
	return &PostLanguageunderstandingDomainVersionPublishForbidden{}
}

/*
PostLanguageunderstandingDomainVersionPublishForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostLanguageunderstandingDomainVersionPublishForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post languageunderstanding domain version publish forbidden response has a 2xx status code
func (o *PostLanguageunderstandingDomainVersionPublishForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post languageunderstanding domain version publish forbidden response has a 3xx status code
func (o *PostLanguageunderstandingDomainVersionPublishForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post languageunderstanding domain version publish forbidden response has a 4xx status code
func (o *PostLanguageunderstandingDomainVersionPublishForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post languageunderstanding domain version publish forbidden response has a 5xx status code
func (o *PostLanguageunderstandingDomainVersionPublishForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post languageunderstanding domain version publish forbidden response a status code equal to that given
func (o *PostLanguageunderstandingDomainVersionPublishForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostLanguageunderstandingDomainVersionPublishForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/publish][%d] postLanguageunderstandingDomainVersionPublishForbidden  %+v", 403, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionPublishForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/publish][%d] postLanguageunderstandingDomainVersionPublishForbidden  %+v", 403, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionPublishForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionPublishForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionPublishNotFound creates a PostLanguageunderstandingDomainVersionPublishNotFound with default headers values
func NewPostLanguageunderstandingDomainVersionPublishNotFound() *PostLanguageunderstandingDomainVersionPublishNotFound {
	return &PostLanguageunderstandingDomainVersionPublishNotFound{}
}

/*
PostLanguageunderstandingDomainVersionPublishNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostLanguageunderstandingDomainVersionPublishNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post languageunderstanding domain version publish not found response has a 2xx status code
func (o *PostLanguageunderstandingDomainVersionPublishNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post languageunderstanding domain version publish not found response has a 3xx status code
func (o *PostLanguageunderstandingDomainVersionPublishNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post languageunderstanding domain version publish not found response has a 4xx status code
func (o *PostLanguageunderstandingDomainVersionPublishNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post languageunderstanding domain version publish not found response has a 5xx status code
func (o *PostLanguageunderstandingDomainVersionPublishNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post languageunderstanding domain version publish not found response a status code equal to that given
func (o *PostLanguageunderstandingDomainVersionPublishNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostLanguageunderstandingDomainVersionPublishNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/publish][%d] postLanguageunderstandingDomainVersionPublishNotFound  %+v", 404, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionPublishNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/publish][%d] postLanguageunderstandingDomainVersionPublishNotFound  %+v", 404, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionPublishNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionPublishNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionPublishRequestTimeout creates a PostLanguageunderstandingDomainVersionPublishRequestTimeout with default headers values
func NewPostLanguageunderstandingDomainVersionPublishRequestTimeout() *PostLanguageunderstandingDomainVersionPublishRequestTimeout {
	return &PostLanguageunderstandingDomainVersionPublishRequestTimeout{}
}

/*
PostLanguageunderstandingDomainVersionPublishRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostLanguageunderstandingDomainVersionPublishRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post languageunderstanding domain version publish request timeout response has a 2xx status code
func (o *PostLanguageunderstandingDomainVersionPublishRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post languageunderstanding domain version publish request timeout response has a 3xx status code
func (o *PostLanguageunderstandingDomainVersionPublishRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post languageunderstanding domain version publish request timeout response has a 4xx status code
func (o *PostLanguageunderstandingDomainVersionPublishRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post languageunderstanding domain version publish request timeout response has a 5xx status code
func (o *PostLanguageunderstandingDomainVersionPublishRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post languageunderstanding domain version publish request timeout response a status code equal to that given
func (o *PostLanguageunderstandingDomainVersionPublishRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostLanguageunderstandingDomainVersionPublishRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/publish][%d] postLanguageunderstandingDomainVersionPublishRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionPublishRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/publish][%d] postLanguageunderstandingDomainVersionPublishRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionPublishRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionPublishRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionPublishConflict creates a PostLanguageunderstandingDomainVersionPublishConflict with default headers values
func NewPostLanguageunderstandingDomainVersionPublishConflict() *PostLanguageunderstandingDomainVersionPublishConflict {
	return &PostLanguageunderstandingDomainVersionPublishConflict{}
}

/*
PostLanguageunderstandingDomainVersionPublishConflict describes a response with status code 409, with default header values.

Conflict
*/
type PostLanguageunderstandingDomainVersionPublishConflict struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post languageunderstanding domain version publish conflict response has a 2xx status code
func (o *PostLanguageunderstandingDomainVersionPublishConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post languageunderstanding domain version publish conflict response has a 3xx status code
func (o *PostLanguageunderstandingDomainVersionPublishConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post languageunderstanding domain version publish conflict response has a 4xx status code
func (o *PostLanguageunderstandingDomainVersionPublishConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this post languageunderstanding domain version publish conflict response has a 5xx status code
func (o *PostLanguageunderstandingDomainVersionPublishConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this post languageunderstanding domain version publish conflict response a status code equal to that given
func (o *PostLanguageunderstandingDomainVersionPublishConflict) IsCode(code int) bool {
	return code == 409
}

func (o *PostLanguageunderstandingDomainVersionPublishConflict) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/publish][%d] postLanguageunderstandingDomainVersionPublishConflict  %+v", 409, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionPublishConflict) String() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/publish][%d] postLanguageunderstandingDomainVersionPublishConflict  %+v", 409, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionPublishConflict) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionPublishConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionPublishRequestEntityTooLarge creates a PostLanguageunderstandingDomainVersionPublishRequestEntityTooLarge with default headers values
func NewPostLanguageunderstandingDomainVersionPublishRequestEntityTooLarge() *PostLanguageunderstandingDomainVersionPublishRequestEntityTooLarge {
	return &PostLanguageunderstandingDomainVersionPublishRequestEntityTooLarge{}
}

/*
PostLanguageunderstandingDomainVersionPublishRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PostLanguageunderstandingDomainVersionPublishRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post languageunderstanding domain version publish request entity too large response has a 2xx status code
func (o *PostLanguageunderstandingDomainVersionPublishRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post languageunderstanding domain version publish request entity too large response has a 3xx status code
func (o *PostLanguageunderstandingDomainVersionPublishRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post languageunderstanding domain version publish request entity too large response has a 4xx status code
func (o *PostLanguageunderstandingDomainVersionPublishRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post languageunderstanding domain version publish request entity too large response has a 5xx status code
func (o *PostLanguageunderstandingDomainVersionPublishRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post languageunderstanding domain version publish request entity too large response a status code equal to that given
func (o *PostLanguageunderstandingDomainVersionPublishRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostLanguageunderstandingDomainVersionPublishRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/publish][%d] postLanguageunderstandingDomainVersionPublishRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionPublishRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/publish][%d] postLanguageunderstandingDomainVersionPublishRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionPublishRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionPublishRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionPublishUnsupportedMediaType creates a PostLanguageunderstandingDomainVersionPublishUnsupportedMediaType with default headers values
func NewPostLanguageunderstandingDomainVersionPublishUnsupportedMediaType() *PostLanguageunderstandingDomainVersionPublishUnsupportedMediaType {
	return &PostLanguageunderstandingDomainVersionPublishUnsupportedMediaType{}
}

/*
PostLanguageunderstandingDomainVersionPublishUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostLanguageunderstandingDomainVersionPublishUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post languageunderstanding domain version publish unsupported media type response has a 2xx status code
func (o *PostLanguageunderstandingDomainVersionPublishUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post languageunderstanding domain version publish unsupported media type response has a 3xx status code
func (o *PostLanguageunderstandingDomainVersionPublishUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post languageunderstanding domain version publish unsupported media type response has a 4xx status code
func (o *PostLanguageunderstandingDomainVersionPublishUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post languageunderstanding domain version publish unsupported media type response has a 5xx status code
func (o *PostLanguageunderstandingDomainVersionPublishUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post languageunderstanding domain version publish unsupported media type response a status code equal to that given
func (o *PostLanguageunderstandingDomainVersionPublishUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostLanguageunderstandingDomainVersionPublishUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/publish][%d] postLanguageunderstandingDomainVersionPublishUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionPublishUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/publish][%d] postLanguageunderstandingDomainVersionPublishUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionPublishUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionPublishUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionPublishTooManyRequests creates a PostLanguageunderstandingDomainVersionPublishTooManyRequests with default headers values
func NewPostLanguageunderstandingDomainVersionPublishTooManyRequests() *PostLanguageunderstandingDomainVersionPublishTooManyRequests {
	return &PostLanguageunderstandingDomainVersionPublishTooManyRequests{}
}

/*
PostLanguageunderstandingDomainVersionPublishTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostLanguageunderstandingDomainVersionPublishTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post languageunderstanding domain version publish too many requests response has a 2xx status code
func (o *PostLanguageunderstandingDomainVersionPublishTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post languageunderstanding domain version publish too many requests response has a 3xx status code
func (o *PostLanguageunderstandingDomainVersionPublishTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post languageunderstanding domain version publish too many requests response has a 4xx status code
func (o *PostLanguageunderstandingDomainVersionPublishTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post languageunderstanding domain version publish too many requests response has a 5xx status code
func (o *PostLanguageunderstandingDomainVersionPublishTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post languageunderstanding domain version publish too many requests response a status code equal to that given
func (o *PostLanguageunderstandingDomainVersionPublishTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostLanguageunderstandingDomainVersionPublishTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/publish][%d] postLanguageunderstandingDomainVersionPublishTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionPublishTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/publish][%d] postLanguageunderstandingDomainVersionPublishTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionPublishTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionPublishTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionPublishInternalServerError creates a PostLanguageunderstandingDomainVersionPublishInternalServerError with default headers values
func NewPostLanguageunderstandingDomainVersionPublishInternalServerError() *PostLanguageunderstandingDomainVersionPublishInternalServerError {
	return &PostLanguageunderstandingDomainVersionPublishInternalServerError{}
}

/*
PostLanguageunderstandingDomainVersionPublishInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostLanguageunderstandingDomainVersionPublishInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post languageunderstanding domain version publish internal server error response has a 2xx status code
func (o *PostLanguageunderstandingDomainVersionPublishInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post languageunderstanding domain version publish internal server error response has a 3xx status code
func (o *PostLanguageunderstandingDomainVersionPublishInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post languageunderstanding domain version publish internal server error response has a 4xx status code
func (o *PostLanguageunderstandingDomainVersionPublishInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post languageunderstanding domain version publish internal server error response has a 5xx status code
func (o *PostLanguageunderstandingDomainVersionPublishInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post languageunderstanding domain version publish internal server error response a status code equal to that given
func (o *PostLanguageunderstandingDomainVersionPublishInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostLanguageunderstandingDomainVersionPublishInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/publish][%d] postLanguageunderstandingDomainVersionPublishInternalServerError  %+v", 500, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionPublishInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/publish][%d] postLanguageunderstandingDomainVersionPublishInternalServerError  %+v", 500, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionPublishInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionPublishInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionPublishServiceUnavailable creates a PostLanguageunderstandingDomainVersionPublishServiceUnavailable with default headers values
func NewPostLanguageunderstandingDomainVersionPublishServiceUnavailable() *PostLanguageunderstandingDomainVersionPublishServiceUnavailable {
	return &PostLanguageunderstandingDomainVersionPublishServiceUnavailable{}
}

/*
PostLanguageunderstandingDomainVersionPublishServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostLanguageunderstandingDomainVersionPublishServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post languageunderstanding domain version publish service unavailable response has a 2xx status code
func (o *PostLanguageunderstandingDomainVersionPublishServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post languageunderstanding domain version publish service unavailable response has a 3xx status code
func (o *PostLanguageunderstandingDomainVersionPublishServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post languageunderstanding domain version publish service unavailable response has a 4xx status code
func (o *PostLanguageunderstandingDomainVersionPublishServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post languageunderstanding domain version publish service unavailable response has a 5xx status code
func (o *PostLanguageunderstandingDomainVersionPublishServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post languageunderstanding domain version publish service unavailable response a status code equal to that given
func (o *PostLanguageunderstandingDomainVersionPublishServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostLanguageunderstandingDomainVersionPublishServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/publish][%d] postLanguageunderstandingDomainVersionPublishServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionPublishServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/publish][%d] postLanguageunderstandingDomainVersionPublishServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionPublishServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionPublishServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionPublishGatewayTimeout creates a PostLanguageunderstandingDomainVersionPublishGatewayTimeout with default headers values
func NewPostLanguageunderstandingDomainVersionPublishGatewayTimeout() *PostLanguageunderstandingDomainVersionPublishGatewayTimeout {
	return &PostLanguageunderstandingDomainVersionPublishGatewayTimeout{}
}

/*
PostLanguageunderstandingDomainVersionPublishGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostLanguageunderstandingDomainVersionPublishGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post languageunderstanding domain version publish gateway timeout response has a 2xx status code
func (o *PostLanguageunderstandingDomainVersionPublishGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post languageunderstanding domain version publish gateway timeout response has a 3xx status code
func (o *PostLanguageunderstandingDomainVersionPublishGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post languageunderstanding domain version publish gateway timeout response has a 4xx status code
func (o *PostLanguageunderstandingDomainVersionPublishGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post languageunderstanding domain version publish gateway timeout response has a 5xx status code
func (o *PostLanguageunderstandingDomainVersionPublishGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post languageunderstanding domain version publish gateway timeout response a status code equal to that given
func (o *PostLanguageunderstandingDomainVersionPublishGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostLanguageunderstandingDomainVersionPublishGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/publish][%d] postLanguageunderstandingDomainVersionPublishGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionPublishGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/publish][%d] postLanguageunderstandingDomainVersionPublishGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionPublishGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionPublishGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
