// Code generated by go-swagger; DO NOT EDIT.

package language_understanding

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPostLanguageunderstandingDomainVersionPublishParams creates a new PostLanguageunderstandingDomainVersionPublishParams object
// with the default values initialized.
func NewPostLanguageunderstandingDomainVersionPublishParams() *PostLanguageunderstandingDomainVersionPublishParams {
	var ()
	return &PostLanguageunderstandingDomainVersionPublishParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostLanguageunderstandingDomainVersionPublishParamsWithTimeout creates a new PostLanguageunderstandingDomainVersionPublishParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostLanguageunderstandingDomainVersionPublishParamsWithTimeout(timeout time.Duration) *PostLanguageunderstandingDomainVersionPublishParams {
	var ()
	return &PostLanguageunderstandingDomainVersionPublishParams{

		timeout: timeout,
	}
}

// NewPostLanguageunderstandingDomainVersionPublishParamsWithContext creates a new PostLanguageunderstandingDomainVersionPublishParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostLanguageunderstandingDomainVersionPublishParamsWithContext(ctx context.Context) *PostLanguageunderstandingDomainVersionPublishParams {
	var ()
	return &PostLanguageunderstandingDomainVersionPublishParams{

		Context: ctx,
	}
}

// NewPostLanguageunderstandingDomainVersionPublishParamsWithHTTPClient creates a new PostLanguageunderstandingDomainVersionPublishParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostLanguageunderstandingDomainVersionPublishParamsWithHTTPClient(client *http.Client) *PostLanguageunderstandingDomainVersionPublishParams {
	var ()
	return &PostLanguageunderstandingDomainVersionPublishParams{
		HTTPClient: client,
	}
}

/*PostLanguageunderstandingDomainVersionPublishParams contains all the parameters to send to the API endpoint
for the post languageunderstanding domain version publish operation typically these are written to a http.Request
*/
type PostLanguageunderstandingDomainVersionPublishParams struct {

	/*DomainID
	  ID of the NLU domain.

	*/
	DomainID string
	/*DomainVersionID
	  ID of the NLU domain version.

	*/
	DomainVersionID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post languageunderstanding domain version publish params
func (o *PostLanguageunderstandingDomainVersionPublishParams) WithTimeout(timeout time.Duration) *PostLanguageunderstandingDomainVersionPublishParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post languageunderstanding domain version publish params
func (o *PostLanguageunderstandingDomainVersionPublishParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post languageunderstanding domain version publish params
func (o *PostLanguageunderstandingDomainVersionPublishParams) WithContext(ctx context.Context) *PostLanguageunderstandingDomainVersionPublishParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post languageunderstanding domain version publish params
func (o *PostLanguageunderstandingDomainVersionPublishParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post languageunderstanding domain version publish params
func (o *PostLanguageunderstandingDomainVersionPublishParams) WithHTTPClient(client *http.Client) *PostLanguageunderstandingDomainVersionPublishParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post languageunderstanding domain version publish params
func (o *PostLanguageunderstandingDomainVersionPublishParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDomainID adds the domainID to the post languageunderstanding domain version publish params
func (o *PostLanguageunderstandingDomainVersionPublishParams) WithDomainID(domainID string) *PostLanguageunderstandingDomainVersionPublishParams {
	o.SetDomainID(domainID)
	return o
}

// SetDomainID adds the domainId to the post languageunderstanding domain version publish params
func (o *PostLanguageunderstandingDomainVersionPublishParams) SetDomainID(domainID string) {
	o.DomainID = domainID
}

// WithDomainVersionID adds the domainVersionID to the post languageunderstanding domain version publish params
func (o *PostLanguageunderstandingDomainVersionPublishParams) WithDomainVersionID(domainVersionID string) *PostLanguageunderstandingDomainVersionPublishParams {
	o.SetDomainVersionID(domainVersionID)
	return o
}

// SetDomainVersionID adds the domainVersionId to the post languageunderstanding domain version publish params
func (o *PostLanguageunderstandingDomainVersionPublishParams) SetDomainVersionID(domainVersionID string) {
	o.DomainVersionID = domainVersionID
}

// WriteToRequest writes these params to a swagger request
func (o *PostLanguageunderstandingDomainVersionPublishParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param domainId
	if err := r.SetPathParam("domainId", o.DomainID); err != nil {
		return err
	}

	// path param domainVersionId
	if err := r.SetPathParam("domainVersionId", o.DomainVersionID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
