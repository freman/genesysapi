// Code generated by go-swagger; DO NOT EDIT.

package language_understanding

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostLanguageunderstandingDomainVersionTrainReader is a Reader for the PostLanguageunderstandingDomainVersionTrain structure.
type PostLanguageunderstandingDomainVersionTrainReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostLanguageunderstandingDomainVersionTrainReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostLanguageunderstandingDomainVersionTrainOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewPostLanguageunderstandingDomainVersionTrainAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostLanguageunderstandingDomainVersionTrainBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostLanguageunderstandingDomainVersionTrainUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostLanguageunderstandingDomainVersionTrainForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostLanguageunderstandingDomainVersionTrainNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostLanguageunderstandingDomainVersionTrainRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPostLanguageunderstandingDomainVersionTrainConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostLanguageunderstandingDomainVersionTrainRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostLanguageunderstandingDomainVersionTrainUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostLanguageunderstandingDomainVersionTrainTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostLanguageunderstandingDomainVersionTrainInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostLanguageunderstandingDomainVersionTrainServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostLanguageunderstandingDomainVersionTrainGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostLanguageunderstandingDomainVersionTrainOK creates a PostLanguageunderstandingDomainVersionTrainOK with default headers values
func NewPostLanguageunderstandingDomainVersionTrainOK() *PostLanguageunderstandingDomainVersionTrainOK {
	return &PostLanguageunderstandingDomainVersionTrainOK{}
}

/*PostLanguageunderstandingDomainVersionTrainOK handles this case with default header values.

successful operation
*/
type PostLanguageunderstandingDomainVersionTrainOK struct {
	Payload *models.NluDomainVersionTrainingResponse
}

func (o *PostLanguageunderstandingDomainVersionTrainOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/train][%d] postLanguageunderstandingDomainVersionTrainOK  %+v", 200, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionTrainOK) GetPayload() *models.NluDomainVersionTrainingResponse {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionTrainOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NluDomainVersionTrainingResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionTrainAccepted creates a PostLanguageunderstandingDomainVersionTrainAccepted with default headers values
func NewPostLanguageunderstandingDomainVersionTrainAccepted() *PostLanguageunderstandingDomainVersionTrainAccepted {
	return &PostLanguageunderstandingDomainVersionTrainAccepted{}
}

/*PostLanguageunderstandingDomainVersionTrainAccepted handles this case with default header values.

Issued training instruction for the draft NLU Domain Version
*/
type PostLanguageunderstandingDomainVersionTrainAccepted struct {
	Payload *models.NluDomainVersionTrainingResponse
}

func (o *PostLanguageunderstandingDomainVersionTrainAccepted) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/train][%d] postLanguageunderstandingDomainVersionTrainAccepted  %+v", 202, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionTrainAccepted) GetPayload() *models.NluDomainVersionTrainingResponse {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionTrainAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NluDomainVersionTrainingResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionTrainBadRequest creates a PostLanguageunderstandingDomainVersionTrainBadRequest with default headers values
func NewPostLanguageunderstandingDomainVersionTrainBadRequest() *PostLanguageunderstandingDomainVersionTrainBadRequest {
	return &PostLanguageunderstandingDomainVersionTrainBadRequest{}
}

/*PostLanguageunderstandingDomainVersionTrainBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostLanguageunderstandingDomainVersionTrainBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PostLanguageunderstandingDomainVersionTrainBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/train][%d] postLanguageunderstandingDomainVersionTrainBadRequest  %+v", 400, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionTrainBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionTrainBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionTrainUnauthorized creates a PostLanguageunderstandingDomainVersionTrainUnauthorized with default headers values
func NewPostLanguageunderstandingDomainVersionTrainUnauthorized() *PostLanguageunderstandingDomainVersionTrainUnauthorized {
	return &PostLanguageunderstandingDomainVersionTrainUnauthorized{}
}

/*PostLanguageunderstandingDomainVersionTrainUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PostLanguageunderstandingDomainVersionTrainUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PostLanguageunderstandingDomainVersionTrainUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/train][%d] postLanguageunderstandingDomainVersionTrainUnauthorized  %+v", 401, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionTrainUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionTrainUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionTrainForbidden creates a PostLanguageunderstandingDomainVersionTrainForbidden with default headers values
func NewPostLanguageunderstandingDomainVersionTrainForbidden() *PostLanguageunderstandingDomainVersionTrainForbidden {
	return &PostLanguageunderstandingDomainVersionTrainForbidden{}
}

/*PostLanguageunderstandingDomainVersionTrainForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PostLanguageunderstandingDomainVersionTrainForbidden struct {
	Payload *models.ErrorBody
}

func (o *PostLanguageunderstandingDomainVersionTrainForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/train][%d] postLanguageunderstandingDomainVersionTrainForbidden  %+v", 403, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionTrainForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionTrainForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionTrainNotFound creates a PostLanguageunderstandingDomainVersionTrainNotFound with default headers values
func NewPostLanguageunderstandingDomainVersionTrainNotFound() *PostLanguageunderstandingDomainVersionTrainNotFound {
	return &PostLanguageunderstandingDomainVersionTrainNotFound{}
}

/*PostLanguageunderstandingDomainVersionTrainNotFound handles this case with default header values.

The requested resource was not found.
*/
type PostLanguageunderstandingDomainVersionTrainNotFound struct {
	Payload *models.ErrorBody
}

func (o *PostLanguageunderstandingDomainVersionTrainNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/train][%d] postLanguageunderstandingDomainVersionTrainNotFound  %+v", 404, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionTrainNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionTrainNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionTrainRequestTimeout creates a PostLanguageunderstandingDomainVersionTrainRequestTimeout with default headers values
func NewPostLanguageunderstandingDomainVersionTrainRequestTimeout() *PostLanguageunderstandingDomainVersionTrainRequestTimeout {
	return &PostLanguageunderstandingDomainVersionTrainRequestTimeout{}
}

/*PostLanguageunderstandingDomainVersionTrainRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostLanguageunderstandingDomainVersionTrainRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostLanguageunderstandingDomainVersionTrainRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/train][%d] postLanguageunderstandingDomainVersionTrainRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionTrainRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionTrainRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionTrainConflict creates a PostLanguageunderstandingDomainVersionTrainConflict with default headers values
func NewPostLanguageunderstandingDomainVersionTrainConflict() *PostLanguageunderstandingDomainVersionTrainConflict {
	return &PostLanguageunderstandingDomainVersionTrainConflict{}
}

/*PostLanguageunderstandingDomainVersionTrainConflict handles this case with default header values.

Conflict
*/
type PostLanguageunderstandingDomainVersionTrainConflict struct {
	Payload *models.ErrorBody
}

func (o *PostLanguageunderstandingDomainVersionTrainConflict) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/train][%d] postLanguageunderstandingDomainVersionTrainConflict  %+v", 409, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionTrainConflict) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionTrainConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionTrainRequestEntityTooLarge creates a PostLanguageunderstandingDomainVersionTrainRequestEntityTooLarge with default headers values
func NewPostLanguageunderstandingDomainVersionTrainRequestEntityTooLarge() *PostLanguageunderstandingDomainVersionTrainRequestEntityTooLarge {
	return &PostLanguageunderstandingDomainVersionTrainRequestEntityTooLarge{}
}

/*PostLanguageunderstandingDomainVersionTrainRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PostLanguageunderstandingDomainVersionTrainRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PostLanguageunderstandingDomainVersionTrainRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/train][%d] postLanguageunderstandingDomainVersionTrainRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionTrainRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionTrainRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionTrainUnsupportedMediaType creates a PostLanguageunderstandingDomainVersionTrainUnsupportedMediaType with default headers values
func NewPostLanguageunderstandingDomainVersionTrainUnsupportedMediaType() *PostLanguageunderstandingDomainVersionTrainUnsupportedMediaType {
	return &PostLanguageunderstandingDomainVersionTrainUnsupportedMediaType{}
}

/*PostLanguageunderstandingDomainVersionTrainUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostLanguageunderstandingDomainVersionTrainUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PostLanguageunderstandingDomainVersionTrainUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/train][%d] postLanguageunderstandingDomainVersionTrainUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionTrainUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionTrainUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionTrainTooManyRequests creates a PostLanguageunderstandingDomainVersionTrainTooManyRequests with default headers values
func NewPostLanguageunderstandingDomainVersionTrainTooManyRequests() *PostLanguageunderstandingDomainVersionTrainTooManyRequests {
	return &PostLanguageunderstandingDomainVersionTrainTooManyRequests{}
}

/*PostLanguageunderstandingDomainVersionTrainTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostLanguageunderstandingDomainVersionTrainTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PostLanguageunderstandingDomainVersionTrainTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/train][%d] postLanguageunderstandingDomainVersionTrainTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionTrainTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionTrainTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionTrainInternalServerError creates a PostLanguageunderstandingDomainVersionTrainInternalServerError with default headers values
func NewPostLanguageunderstandingDomainVersionTrainInternalServerError() *PostLanguageunderstandingDomainVersionTrainInternalServerError {
	return &PostLanguageunderstandingDomainVersionTrainInternalServerError{}
}

/*PostLanguageunderstandingDomainVersionTrainInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostLanguageunderstandingDomainVersionTrainInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PostLanguageunderstandingDomainVersionTrainInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/train][%d] postLanguageunderstandingDomainVersionTrainInternalServerError  %+v", 500, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionTrainInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionTrainInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionTrainServiceUnavailable creates a PostLanguageunderstandingDomainVersionTrainServiceUnavailable with default headers values
func NewPostLanguageunderstandingDomainVersionTrainServiceUnavailable() *PostLanguageunderstandingDomainVersionTrainServiceUnavailable {
	return &PostLanguageunderstandingDomainVersionTrainServiceUnavailable{}
}

/*PostLanguageunderstandingDomainVersionTrainServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostLanguageunderstandingDomainVersionTrainServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PostLanguageunderstandingDomainVersionTrainServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/train][%d] postLanguageunderstandingDomainVersionTrainServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionTrainServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionTrainServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingDomainVersionTrainGatewayTimeout creates a PostLanguageunderstandingDomainVersionTrainGatewayTimeout with default headers values
func NewPostLanguageunderstandingDomainVersionTrainGatewayTimeout() *PostLanguageunderstandingDomainVersionTrainGatewayTimeout {
	return &PostLanguageunderstandingDomainVersionTrainGatewayTimeout{}
}

/*PostLanguageunderstandingDomainVersionTrainGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PostLanguageunderstandingDomainVersionTrainGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostLanguageunderstandingDomainVersionTrainGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/train][%d] postLanguageunderstandingDomainVersionTrainGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostLanguageunderstandingDomainVersionTrainGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingDomainVersionTrainGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
