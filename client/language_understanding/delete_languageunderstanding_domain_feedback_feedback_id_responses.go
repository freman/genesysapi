// Code generated by go-swagger; DO NOT EDIT.

package language_understanding

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// DeleteLanguageunderstandingDomainFeedbackFeedbackIDReader is a Reader for the DeleteLanguageunderstandingDomainFeedbackFeedbackID structure.
type DeleteLanguageunderstandingDomainFeedbackFeedbackIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteLanguageunderstandingDomainFeedbackFeedbackIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteLanguageunderstandingDomainFeedbackFeedbackIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteLanguageunderstandingDomainFeedbackFeedbackIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteLanguageunderstandingDomainFeedbackFeedbackIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteLanguageunderstandingDomainFeedbackFeedbackIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewDeleteLanguageunderstandingDomainFeedbackFeedbackIDRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewDeleteLanguageunderstandingDomainFeedbackFeedbackIDRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDeleteLanguageunderstandingDomainFeedbackFeedbackIDUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteLanguageunderstandingDomainFeedbackFeedbackIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteLanguageunderstandingDomainFeedbackFeedbackIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteLanguageunderstandingDomainFeedbackFeedbackIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteLanguageunderstandingDomainFeedbackFeedbackIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteLanguageunderstandingDomainFeedbackFeedbackIDNoContent creates a DeleteLanguageunderstandingDomainFeedbackFeedbackIDNoContent with default headers values
func NewDeleteLanguageunderstandingDomainFeedbackFeedbackIDNoContent() *DeleteLanguageunderstandingDomainFeedbackFeedbackIDNoContent {
	return &DeleteLanguageunderstandingDomainFeedbackFeedbackIDNoContent{}
}

/*
DeleteLanguageunderstandingDomainFeedbackFeedbackIDNoContent describes a response with status code 204, with default header values.

Feedback deleted successfully
*/
type DeleteLanguageunderstandingDomainFeedbackFeedbackIDNoContent struct {
}

// IsSuccess returns true when this delete languageunderstanding domain feedback feedback Id no content response has a 2xx status code
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete languageunderstanding domain feedback feedback Id no content response has a 3xx status code
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete languageunderstanding domain feedback feedback Id no content response has a 4xx status code
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete languageunderstanding domain feedback feedback Id no content response has a 5xx status code
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete languageunderstanding domain feedback feedback Id no content response a status code equal to that given
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}][%d] deleteLanguageunderstandingDomainFeedbackFeedbackIdNoContent ", 204)
}

func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDNoContent) String() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}][%d] deleteLanguageunderstandingDomainFeedbackFeedbackIdNoContent ", 204)
}

func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteLanguageunderstandingDomainFeedbackFeedbackIDBadRequest creates a DeleteLanguageunderstandingDomainFeedbackFeedbackIDBadRequest with default headers values
func NewDeleteLanguageunderstandingDomainFeedbackFeedbackIDBadRequest() *DeleteLanguageunderstandingDomainFeedbackFeedbackIDBadRequest {
	return &DeleteLanguageunderstandingDomainFeedbackFeedbackIDBadRequest{}
}

/*
DeleteLanguageunderstandingDomainFeedbackFeedbackIDBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type DeleteLanguageunderstandingDomainFeedbackFeedbackIDBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete languageunderstanding domain feedback feedback Id bad request response has a 2xx status code
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete languageunderstanding domain feedback feedback Id bad request response has a 3xx status code
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete languageunderstanding domain feedback feedback Id bad request response has a 4xx status code
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete languageunderstanding domain feedback feedback Id bad request response has a 5xx status code
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete languageunderstanding domain feedback feedback Id bad request response a status code equal to that given
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}][%d] deleteLanguageunderstandingDomainFeedbackFeedbackIdBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}][%d] deleteLanguageunderstandingDomainFeedbackFeedbackIdBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLanguageunderstandingDomainFeedbackFeedbackIDUnauthorized creates a DeleteLanguageunderstandingDomainFeedbackFeedbackIDUnauthorized with default headers values
func NewDeleteLanguageunderstandingDomainFeedbackFeedbackIDUnauthorized() *DeleteLanguageunderstandingDomainFeedbackFeedbackIDUnauthorized {
	return &DeleteLanguageunderstandingDomainFeedbackFeedbackIDUnauthorized{}
}

/*
DeleteLanguageunderstandingDomainFeedbackFeedbackIDUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type DeleteLanguageunderstandingDomainFeedbackFeedbackIDUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete languageunderstanding domain feedback feedback Id unauthorized response has a 2xx status code
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete languageunderstanding domain feedback feedback Id unauthorized response has a 3xx status code
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete languageunderstanding domain feedback feedback Id unauthorized response has a 4xx status code
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete languageunderstanding domain feedback feedback Id unauthorized response has a 5xx status code
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete languageunderstanding domain feedback feedback Id unauthorized response a status code equal to that given
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}][%d] deleteLanguageunderstandingDomainFeedbackFeedbackIdUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}][%d] deleteLanguageunderstandingDomainFeedbackFeedbackIdUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLanguageunderstandingDomainFeedbackFeedbackIDForbidden creates a DeleteLanguageunderstandingDomainFeedbackFeedbackIDForbidden with default headers values
func NewDeleteLanguageunderstandingDomainFeedbackFeedbackIDForbidden() *DeleteLanguageunderstandingDomainFeedbackFeedbackIDForbidden {
	return &DeleteLanguageunderstandingDomainFeedbackFeedbackIDForbidden{}
}

/*
DeleteLanguageunderstandingDomainFeedbackFeedbackIDForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type DeleteLanguageunderstandingDomainFeedbackFeedbackIDForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete languageunderstanding domain feedback feedback Id forbidden response has a 2xx status code
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete languageunderstanding domain feedback feedback Id forbidden response has a 3xx status code
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete languageunderstanding domain feedback feedback Id forbidden response has a 4xx status code
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete languageunderstanding domain feedback feedback Id forbidden response has a 5xx status code
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete languageunderstanding domain feedback feedback Id forbidden response a status code equal to that given
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}][%d] deleteLanguageunderstandingDomainFeedbackFeedbackIdForbidden  %+v", 403, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}][%d] deleteLanguageunderstandingDomainFeedbackFeedbackIdForbidden  %+v", 403, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLanguageunderstandingDomainFeedbackFeedbackIDNotFound creates a DeleteLanguageunderstandingDomainFeedbackFeedbackIDNotFound with default headers values
func NewDeleteLanguageunderstandingDomainFeedbackFeedbackIDNotFound() *DeleteLanguageunderstandingDomainFeedbackFeedbackIDNotFound {
	return &DeleteLanguageunderstandingDomainFeedbackFeedbackIDNotFound{}
}

/*
DeleteLanguageunderstandingDomainFeedbackFeedbackIDNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type DeleteLanguageunderstandingDomainFeedbackFeedbackIDNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete languageunderstanding domain feedback feedback Id not found response has a 2xx status code
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete languageunderstanding domain feedback feedback Id not found response has a 3xx status code
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete languageunderstanding domain feedback feedback Id not found response has a 4xx status code
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete languageunderstanding domain feedback feedback Id not found response has a 5xx status code
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete languageunderstanding domain feedback feedback Id not found response a status code equal to that given
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}][%d] deleteLanguageunderstandingDomainFeedbackFeedbackIdNotFound  %+v", 404, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}][%d] deleteLanguageunderstandingDomainFeedbackFeedbackIdNotFound  %+v", 404, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLanguageunderstandingDomainFeedbackFeedbackIDRequestTimeout creates a DeleteLanguageunderstandingDomainFeedbackFeedbackIDRequestTimeout with default headers values
func NewDeleteLanguageunderstandingDomainFeedbackFeedbackIDRequestTimeout() *DeleteLanguageunderstandingDomainFeedbackFeedbackIDRequestTimeout {
	return &DeleteLanguageunderstandingDomainFeedbackFeedbackIDRequestTimeout{}
}

/*
DeleteLanguageunderstandingDomainFeedbackFeedbackIDRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type DeleteLanguageunderstandingDomainFeedbackFeedbackIDRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete languageunderstanding domain feedback feedback Id request timeout response has a 2xx status code
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete languageunderstanding domain feedback feedback Id request timeout response has a 3xx status code
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete languageunderstanding domain feedback feedback Id request timeout response has a 4xx status code
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete languageunderstanding domain feedback feedback Id request timeout response has a 5xx status code
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this delete languageunderstanding domain feedback feedback Id request timeout response a status code equal to that given
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDRequestTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}][%d] deleteLanguageunderstandingDomainFeedbackFeedbackIdRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDRequestTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}][%d] deleteLanguageunderstandingDomainFeedbackFeedbackIdRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLanguageunderstandingDomainFeedbackFeedbackIDRequestEntityTooLarge creates a DeleteLanguageunderstandingDomainFeedbackFeedbackIDRequestEntityTooLarge with default headers values
func NewDeleteLanguageunderstandingDomainFeedbackFeedbackIDRequestEntityTooLarge() *DeleteLanguageunderstandingDomainFeedbackFeedbackIDRequestEntityTooLarge {
	return &DeleteLanguageunderstandingDomainFeedbackFeedbackIDRequestEntityTooLarge{}
}

/*
DeleteLanguageunderstandingDomainFeedbackFeedbackIDRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type DeleteLanguageunderstandingDomainFeedbackFeedbackIDRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete languageunderstanding domain feedback feedback Id request entity too large response has a 2xx status code
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete languageunderstanding domain feedback feedback Id request entity too large response has a 3xx status code
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete languageunderstanding domain feedback feedback Id request entity too large response has a 4xx status code
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete languageunderstanding domain feedback feedback Id request entity too large response has a 5xx status code
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this delete languageunderstanding domain feedback feedback Id request entity too large response a status code equal to that given
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}][%d] deleteLanguageunderstandingDomainFeedbackFeedbackIdRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}][%d] deleteLanguageunderstandingDomainFeedbackFeedbackIdRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLanguageunderstandingDomainFeedbackFeedbackIDUnsupportedMediaType creates a DeleteLanguageunderstandingDomainFeedbackFeedbackIDUnsupportedMediaType with default headers values
func NewDeleteLanguageunderstandingDomainFeedbackFeedbackIDUnsupportedMediaType() *DeleteLanguageunderstandingDomainFeedbackFeedbackIDUnsupportedMediaType {
	return &DeleteLanguageunderstandingDomainFeedbackFeedbackIDUnsupportedMediaType{}
}

/*
DeleteLanguageunderstandingDomainFeedbackFeedbackIDUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type DeleteLanguageunderstandingDomainFeedbackFeedbackIDUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete languageunderstanding domain feedback feedback Id unsupported media type response has a 2xx status code
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete languageunderstanding domain feedback feedback Id unsupported media type response has a 3xx status code
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete languageunderstanding domain feedback feedback Id unsupported media type response has a 4xx status code
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete languageunderstanding domain feedback feedback Id unsupported media type response has a 5xx status code
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this delete languageunderstanding domain feedback feedback Id unsupported media type response a status code equal to that given
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}][%d] deleteLanguageunderstandingDomainFeedbackFeedbackIdUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDUnsupportedMediaType) String() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}][%d] deleteLanguageunderstandingDomainFeedbackFeedbackIdUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLanguageunderstandingDomainFeedbackFeedbackIDTooManyRequests creates a DeleteLanguageunderstandingDomainFeedbackFeedbackIDTooManyRequests with default headers values
func NewDeleteLanguageunderstandingDomainFeedbackFeedbackIDTooManyRequests() *DeleteLanguageunderstandingDomainFeedbackFeedbackIDTooManyRequests {
	return &DeleteLanguageunderstandingDomainFeedbackFeedbackIDTooManyRequests{}
}

/*
DeleteLanguageunderstandingDomainFeedbackFeedbackIDTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type DeleteLanguageunderstandingDomainFeedbackFeedbackIDTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete languageunderstanding domain feedback feedback Id too many requests response has a 2xx status code
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete languageunderstanding domain feedback feedback Id too many requests response has a 3xx status code
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete languageunderstanding domain feedback feedback Id too many requests response has a 4xx status code
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete languageunderstanding domain feedback feedback Id too many requests response has a 5xx status code
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete languageunderstanding domain feedback feedback Id too many requests response a status code equal to that given
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}][%d] deleteLanguageunderstandingDomainFeedbackFeedbackIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}][%d] deleteLanguageunderstandingDomainFeedbackFeedbackIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLanguageunderstandingDomainFeedbackFeedbackIDInternalServerError creates a DeleteLanguageunderstandingDomainFeedbackFeedbackIDInternalServerError with default headers values
func NewDeleteLanguageunderstandingDomainFeedbackFeedbackIDInternalServerError() *DeleteLanguageunderstandingDomainFeedbackFeedbackIDInternalServerError {
	return &DeleteLanguageunderstandingDomainFeedbackFeedbackIDInternalServerError{}
}

/*
DeleteLanguageunderstandingDomainFeedbackFeedbackIDInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type DeleteLanguageunderstandingDomainFeedbackFeedbackIDInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete languageunderstanding domain feedback feedback Id internal server error response has a 2xx status code
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete languageunderstanding domain feedback feedback Id internal server error response has a 3xx status code
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete languageunderstanding domain feedback feedback Id internal server error response has a 4xx status code
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete languageunderstanding domain feedback feedback Id internal server error response has a 5xx status code
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete languageunderstanding domain feedback feedback Id internal server error response a status code equal to that given
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}][%d] deleteLanguageunderstandingDomainFeedbackFeedbackIdInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}][%d] deleteLanguageunderstandingDomainFeedbackFeedbackIdInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLanguageunderstandingDomainFeedbackFeedbackIDServiceUnavailable creates a DeleteLanguageunderstandingDomainFeedbackFeedbackIDServiceUnavailable with default headers values
func NewDeleteLanguageunderstandingDomainFeedbackFeedbackIDServiceUnavailable() *DeleteLanguageunderstandingDomainFeedbackFeedbackIDServiceUnavailable {
	return &DeleteLanguageunderstandingDomainFeedbackFeedbackIDServiceUnavailable{}
}

/*
DeleteLanguageunderstandingDomainFeedbackFeedbackIDServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type DeleteLanguageunderstandingDomainFeedbackFeedbackIDServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete languageunderstanding domain feedback feedback Id service unavailable response has a 2xx status code
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete languageunderstanding domain feedback feedback Id service unavailable response has a 3xx status code
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete languageunderstanding domain feedback feedback Id service unavailable response has a 4xx status code
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete languageunderstanding domain feedback feedback Id service unavailable response has a 5xx status code
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this delete languageunderstanding domain feedback feedback Id service unavailable response a status code equal to that given
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}][%d] deleteLanguageunderstandingDomainFeedbackFeedbackIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDServiceUnavailable) String() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}][%d] deleteLanguageunderstandingDomainFeedbackFeedbackIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLanguageunderstandingDomainFeedbackFeedbackIDGatewayTimeout creates a DeleteLanguageunderstandingDomainFeedbackFeedbackIDGatewayTimeout with default headers values
func NewDeleteLanguageunderstandingDomainFeedbackFeedbackIDGatewayTimeout() *DeleteLanguageunderstandingDomainFeedbackFeedbackIDGatewayTimeout {
	return &DeleteLanguageunderstandingDomainFeedbackFeedbackIDGatewayTimeout{}
}

/*
DeleteLanguageunderstandingDomainFeedbackFeedbackIDGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type DeleteLanguageunderstandingDomainFeedbackFeedbackIDGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete languageunderstanding domain feedback feedback Id gateway timeout response has a 2xx status code
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete languageunderstanding domain feedback feedback Id gateway timeout response has a 3xx status code
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete languageunderstanding domain feedback feedback Id gateway timeout response has a 4xx status code
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete languageunderstanding domain feedback feedback Id gateway timeout response has a 5xx status code
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this delete languageunderstanding domain feedback feedback Id gateway timeout response a status code equal to that given
func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}][%d] deleteLanguageunderstandingDomainFeedbackFeedbackIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDGatewayTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}][%d] deleteLanguageunderstandingDomainFeedbackFeedbackIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteLanguageunderstandingDomainFeedbackFeedbackIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
