// Code generated by go-swagger; DO NOT EDIT.

package language_understanding

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetLanguageunderstandingMinerTopicPhraseParams creates a new GetLanguageunderstandingMinerTopicPhraseParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetLanguageunderstandingMinerTopicPhraseParams() *GetLanguageunderstandingMinerTopicPhraseParams {
	return &GetLanguageunderstandingMinerTopicPhraseParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetLanguageunderstandingMinerTopicPhraseParamsWithTimeout creates a new GetLanguageunderstandingMinerTopicPhraseParams object
// with the ability to set a timeout on a request.
func NewGetLanguageunderstandingMinerTopicPhraseParamsWithTimeout(timeout time.Duration) *GetLanguageunderstandingMinerTopicPhraseParams {
	return &GetLanguageunderstandingMinerTopicPhraseParams{
		timeout: timeout,
	}
}

// NewGetLanguageunderstandingMinerTopicPhraseParamsWithContext creates a new GetLanguageunderstandingMinerTopicPhraseParams object
// with the ability to set a context for a request.
func NewGetLanguageunderstandingMinerTopicPhraseParamsWithContext(ctx context.Context) *GetLanguageunderstandingMinerTopicPhraseParams {
	return &GetLanguageunderstandingMinerTopicPhraseParams{
		Context: ctx,
	}
}

// NewGetLanguageunderstandingMinerTopicPhraseParamsWithHTTPClient creates a new GetLanguageunderstandingMinerTopicPhraseParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetLanguageunderstandingMinerTopicPhraseParamsWithHTTPClient(client *http.Client) *GetLanguageunderstandingMinerTopicPhraseParams {
	return &GetLanguageunderstandingMinerTopicPhraseParams{
		HTTPClient: client,
	}
}

/*
GetLanguageunderstandingMinerTopicPhraseParams contains all the parameters to send to the API endpoint

	for the get languageunderstanding miner topic phrase operation.

	Typically these are written to a http.Request.
*/
type GetLanguageunderstandingMinerTopicPhraseParams struct {

	/* MinerID.

	   Miner ID
	*/
	MinerID string

	/* PhraseID.

	   The ID of the phrase to be retrieved.
	*/
	PhraseID string

	/* TopicID.

	   The ID of the topic to be retrieved.
	*/
	TopicID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get languageunderstanding miner topic phrase params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetLanguageunderstandingMinerTopicPhraseParams) WithDefaults() *GetLanguageunderstandingMinerTopicPhraseParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get languageunderstanding miner topic phrase params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetLanguageunderstandingMinerTopicPhraseParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get languageunderstanding miner topic phrase params
func (o *GetLanguageunderstandingMinerTopicPhraseParams) WithTimeout(timeout time.Duration) *GetLanguageunderstandingMinerTopicPhraseParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get languageunderstanding miner topic phrase params
func (o *GetLanguageunderstandingMinerTopicPhraseParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get languageunderstanding miner topic phrase params
func (o *GetLanguageunderstandingMinerTopicPhraseParams) WithContext(ctx context.Context) *GetLanguageunderstandingMinerTopicPhraseParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get languageunderstanding miner topic phrase params
func (o *GetLanguageunderstandingMinerTopicPhraseParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get languageunderstanding miner topic phrase params
func (o *GetLanguageunderstandingMinerTopicPhraseParams) WithHTTPClient(client *http.Client) *GetLanguageunderstandingMinerTopicPhraseParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get languageunderstanding miner topic phrase params
func (o *GetLanguageunderstandingMinerTopicPhraseParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithMinerID adds the minerID to the get languageunderstanding miner topic phrase params
func (o *GetLanguageunderstandingMinerTopicPhraseParams) WithMinerID(minerID string) *GetLanguageunderstandingMinerTopicPhraseParams {
	o.SetMinerID(minerID)
	return o
}

// SetMinerID adds the minerId to the get languageunderstanding miner topic phrase params
func (o *GetLanguageunderstandingMinerTopicPhraseParams) SetMinerID(minerID string) {
	o.MinerID = minerID
}

// WithPhraseID adds the phraseID to the get languageunderstanding miner topic phrase params
func (o *GetLanguageunderstandingMinerTopicPhraseParams) WithPhraseID(phraseID string) *GetLanguageunderstandingMinerTopicPhraseParams {
	o.SetPhraseID(phraseID)
	return o
}

// SetPhraseID adds the phraseId to the get languageunderstanding miner topic phrase params
func (o *GetLanguageunderstandingMinerTopicPhraseParams) SetPhraseID(phraseID string) {
	o.PhraseID = phraseID
}

// WithTopicID adds the topicID to the get languageunderstanding miner topic phrase params
func (o *GetLanguageunderstandingMinerTopicPhraseParams) WithTopicID(topicID string) *GetLanguageunderstandingMinerTopicPhraseParams {
	o.SetTopicID(topicID)
	return o
}

// SetTopicID adds the topicId to the get languageunderstanding miner topic phrase params
func (o *GetLanguageunderstandingMinerTopicPhraseParams) SetTopicID(topicID string) {
	o.TopicID = topicID
}

// WriteToRequest writes these params to a swagger request
func (o *GetLanguageunderstandingMinerTopicPhraseParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param minerId
	if err := r.SetPathParam("minerId", o.MinerID); err != nil {
		return err
	}

	// path param phraseId
	if err := r.SetPathParam("phraseId", o.PhraseID); err != nil {
		return err
	}

	// path param topicId
	if err := r.SetPathParam("topicId", o.TopicID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
