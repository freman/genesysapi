// Code generated by go-swagger; DO NOT EDIT.

package language_understanding

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// DeleteLanguageunderstandingDomainReader is a Reader for the DeleteLanguageunderstandingDomain structure.
type DeleteLanguageunderstandingDomainReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteLanguageunderstandingDomainReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteLanguageunderstandingDomainNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteLanguageunderstandingDomainBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteLanguageunderstandingDomainUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteLanguageunderstandingDomainForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteLanguageunderstandingDomainNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewDeleteLanguageunderstandingDomainRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeleteLanguageunderstandingDomainConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewDeleteLanguageunderstandingDomainRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDeleteLanguageunderstandingDomainUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteLanguageunderstandingDomainTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteLanguageunderstandingDomainInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteLanguageunderstandingDomainServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteLanguageunderstandingDomainGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteLanguageunderstandingDomainNoContent creates a DeleteLanguageunderstandingDomainNoContent with default headers values
func NewDeleteLanguageunderstandingDomainNoContent() *DeleteLanguageunderstandingDomainNoContent {
	return &DeleteLanguageunderstandingDomainNoContent{}
}

/*
DeleteLanguageunderstandingDomainNoContent describes a response with status code 204, with default header values.

DeleteLanguageunderstandingDomainNoContent delete languageunderstanding domain no content
*/
type DeleteLanguageunderstandingDomainNoContent struct {
}

// IsSuccess returns true when this delete languageunderstanding domain no content response has a 2xx status code
func (o *DeleteLanguageunderstandingDomainNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete languageunderstanding domain no content response has a 3xx status code
func (o *DeleteLanguageunderstandingDomainNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete languageunderstanding domain no content response has a 4xx status code
func (o *DeleteLanguageunderstandingDomainNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete languageunderstanding domain no content response has a 5xx status code
func (o *DeleteLanguageunderstandingDomainNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete languageunderstanding domain no content response a status code equal to that given
func (o *DeleteLanguageunderstandingDomainNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *DeleteLanguageunderstandingDomainNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}][%d] deleteLanguageunderstandingDomainNoContent ", 204)
}

func (o *DeleteLanguageunderstandingDomainNoContent) String() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}][%d] deleteLanguageunderstandingDomainNoContent ", 204)
}

func (o *DeleteLanguageunderstandingDomainNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteLanguageunderstandingDomainBadRequest creates a DeleteLanguageunderstandingDomainBadRequest with default headers values
func NewDeleteLanguageunderstandingDomainBadRequest() *DeleteLanguageunderstandingDomainBadRequest {
	return &DeleteLanguageunderstandingDomainBadRequest{}
}

/*
DeleteLanguageunderstandingDomainBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type DeleteLanguageunderstandingDomainBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete languageunderstanding domain bad request response has a 2xx status code
func (o *DeleteLanguageunderstandingDomainBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete languageunderstanding domain bad request response has a 3xx status code
func (o *DeleteLanguageunderstandingDomainBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete languageunderstanding domain bad request response has a 4xx status code
func (o *DeleteLanguageunderstandingDomainBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete languageunderstanding domain bad request response has a 5xx status code
func (o *DeleteLanguageunderstandingDomainBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete languageunderstanding domain bad request response a status code equal to that given
func (o *DeleteLanguageunderstandingDomainBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteLanguageunderstandingDomainBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}][%d] deleteLanguageunderstandingDomainBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}][%d] deleteLanguageunderstandingDomainBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteLanguageunderstandingDomainBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLanguageunderstandingDomainUnauthorized creates a DeleteLanguageunderstandingDomainUnauthorized with default headers values
func NewDeleteLanguageunderstandingDomainUnauthorized() *DeleteLanguageunderstandingDomainUnauthorized {
	return &DeleteLanguageunderstandingDomainUnauthorized{}
}

/*
DeleteLanguageunderstandingDomainUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type DeleteLanguageunderstandingDomainUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete languageunderstanding domain unauthorized response has a 2xx status code
func (o *DeleteLanguageunderstandingDomainUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete languageunderstanding domain unauthorized response has a 3xx status code
func (o *DeleteLanguageunderstandingDomainUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete languageunderstanding domain unauthorized response has a 4xx status code
func (o *DeleteLanguageunderstandingDomainUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete languageunderstanding domain unauthorized response has a 5xx status code
func (o *DeleteLanguageunderstandingDomainUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete languageunderstanding domain unauthorized response a status code equal to that given
func (o *DeleteLanguageunderstandingDomainUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteLanguageunderstandingDomainUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}][%d] deleteLanguageunderstandingDomainUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}][%d] deleteLanguageunderstandingDomainUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteLanguageunderstandingDomainUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLanguageunderstandingDomainForbidden creates a DeleteLanguageunderstandingDomainForbidden with default headers values
func NewDeleteLanguageunderstandingDomainForbidden() *DeleteLanguageunderstandingDomainForbidden {
	return &DeleteLanguageunderstandingDomainForbidden{}
}

/*
DeleteLanguageunderstandingDomainForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type DeleteLanguageunderstandingDomainForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete languageunderstanding domain forbidden response has a 2xx status code
func (o *DeleteLanguageunderstandingDomainForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete languageunderstanding domain forbidden response has a 3xx status code
func (o *DeleteLanguageunderstandingDomainForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete languageunderstanding domain forbidden response has a 4xx status code
func (o *DeleteLanguageunderstandingDomainForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete languageunderstanding domain forbidden response has a 5xx status code
func (o *DeleteLanguageunderstandingDomainForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete languageunderstanding domain forbidden response a status code equal to that given
func (o *DeleteLanguageunderstandingDomainForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteLanguageunderstandingDomainForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}][%d] deleteLanguageunderstandingDomainForbidden  %+v", 403, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}][%d] deleteLanguageunderstandingDomainForbidden  %+v", 403, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteLanguageunderstandingDomainForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLanguageunderstandingDomainNotFound creates a DeleteLanguageunderstandingDomainNotFound with default headers values
func NewDeleteLanguageunderstandingDomainNotFound() *DeleteLanguageunderstandingDomainNotFound {
	return &DeleteLanguageunderstandingDomainNotFound{}
}

/*
DeleteLanguageunderstandingDomainNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type DeleteLanguageunderstandingDomainNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete languageunderstanding domain not found response has a 2xx status code
func (o *DeleteLanguageunderstandingDomainNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete languageunderstanding domain not found response has a 3xx status code
func (o *DeleteLanguageunderstandingDomainNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete languageunderstanding domain not found response has a 4xx status code
func (o *DeleteLanguageunderstandingDomainNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete languageunderstanding domain not found response has a 5xx status code
func (o *DeleteLanguageunderstandingDomainNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete languageunderstanding domain not found response a status code equal to that given
func (o *DeleteLanguageunderstandingDomainNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteLanguageunderstandingDomainNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}][%d] deleteLanguageunderstandingDomainNotFound  %+v", 404, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}][%d] deleteLanguageunderstandingDomainNotFound  %+v", 404, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteLanguageunderstandingDomainNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLanguageunderstandingDomainRequestTimeout creates a DeleteLanguageunderstandingDomainRequestTimeout with default headers values
func NewDeleteLanguageunderstandingDomainRequestTimeout() *DeleteLanguageunderstandingDomainRequestTimeout {
	return &DeleteLanguageunderstandingDomainRequestTimeout{}
}

/*
DeleteLanguageunderstandingDomainRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type DeleteLanguageunderstandingDomainRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete languageunderstanding domain request timeout response has a 2xx status code
func (o *DeleteLanguageunderstandingDomainRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete languageunderstanding domain request timeout response has a 3xx status code
func (o *DeleteLanguageunderstandingDomainRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete languageunderstanding domain request timeout response has a 4xx status code
func (o *DeleteLanguageunderstandingDomainRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete languageunderstanding domain request timeout response has a 5xx status code
func (o *DeleteLanguageunderstandingDomainRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this delete languageunderstanding domain request timeout response a status code equal to that given
func (o *DeleteLanguageunderstandingDomainRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *DeleteLanguageunderstandingDomainRequestTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}][%d] deleteLanguageunderstandingDomainRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainRequestTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}][%d] deleteLanguageunderstandingDomainRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteLanguageunderstandingDomainRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLanguageunderstandingDomainConflict creates a DeleteLanguageunderstandingDomainConflict with default headers values
func NewDeleteLanguageunderstandingDomainConflict() *DeleteLanguageunderstandingDomainConflict {
	return &DeleteLanguageunderstandingDomainConflict{}
}

/*
DeleteLanguageunderstandingDomainConflict describes a response with status code 409, with default header values.

Conflict
*/
type DeleteLanguageunderstandingDomainConflict struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete languageunderstanding domain conflict response has a 2xx status code
func (o *DeleteLanguageunderstandingDomainConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete languageunderstanding domain conflict response has a 3xx status code
func (o *DeleteLanguageunderstandingDomainConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete languageunderstanding domain conflict response has a 4xx status code
func (o *DeleteLanguageunderstandingDomainConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete languageunderstanding domain conflict response has a 5xx status code
func (o *DeleteLanguageunderstandingDomainConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this delete languageunderstanding domain conflict response a status code equal to that given
func (o *DeleteLanguageunderstandingDomainConflict) IsCode(code int) bool {
	return code == 409
}

func (o *DeleteLanguageunderstandingDomainConflict) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}][%d] deleteLanguageunderstandingDomainConflict  %+v", 409, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainConflict) String() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}][%d] deleteLanguageunderstandingDomainConflict  %+v", 409, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainConflict) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteLanguageunderstandingDomainConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLanguageunderstandingDomainRequestEntityTooLarge creates a DeleteLanguageunderstandingDomainRequestEntityTooLarge with default headers values
func NewDeleteLanguageunderstandingDomainRequestEntityTooLarge() *DeleteLanguageunderstandingDomainRequestEntityTooLarge {
	return &DeleteLanguageunderstandingDomainRequestEntityTooLarge{}
}

/*
DeleteLanguageunderstandingDomainRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type DeleteLanguageunderstandingDomainRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete languageunderstanding domain request entity too large response has a 2xx status code
func (o *DeleteLanguageunderstandingDomainRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete languageunderstanding domain request entity too large response has a 3xx status code
func (o *DeleteLanguageunderstandingDomainRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete languageunderstanding domain request entity too large response has a 4xx status code
func (o *DeleteLanguageunderstandingDomainRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete languageunderstanding domain request entity too large response has a 5xx status code
func (o *DeleteLanguageunderstandingDomainRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this delete languageunderstanding domain request entity too large response a status code equal to that given
func (o *DeleteLanguageunderstandingDomainRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *DeleteLanguageunderstandingDomainRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}][%d] deleteLanguageunderstandingDomainRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}][%d] deleteLanguageunderstandingDomainRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteLanguageunderstandingDomainRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLanguageunderstandingDomainUnsupportedMediaType creates a DeleteLanguageunderstandingDomainUnsupportedMediaType with default headers values
func NewDeleteLanguageunderstandingDomainUnsupportedMediaType() *DeleteLanguageunderstandingDomainUnsupportedMediaType {
	return &DeleteLanguageunderstandingDomainUnsupportedMediaType{}
}

/*
DeleteLanguageunderstandingDomainUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type DeleteLanguageunderstandingDomainUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete languageunderstanding domain unsupported media type response has a 2xx status code
func (o *DeleteLanguageunderstandingDomainUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete languageunderstanding domain unsupported media type response has a 3xx status code
func (o *DeleteLanguageunderstandingDomainUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete languageunderstanding domain unsupported media type response has a 4xx status code
func (o *DeleteLanguageunderstandingDomainUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete languageunderstanding domain unsupported media type response has a 5xx status code
func (o *DeleteLanguageunderstandingDomainUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this delete languageunderstanding domain unsupported media type response a status code equal to that given
func (o *DeleteLanguageunderstandingDomainUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *DeleteLanguageunderstandingDomainUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}][%d] deleteLanguageunderstandingDomainUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainUnsupportedMediaType) String() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}][%d] deleteLanguageunderstandingDomainUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteLanguageunderstandingDomainUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLanguageunderstandingDomainTooManyRequests creates a DeleteLanguageunderstandingDomainTooManyRequests with default headers values
func NewDeleteLanguageunderstandingDomainTooManyRequests() *DeleteLanguageunderstandingDomainTooManyRequests {
	return &DeleteLanguageunderstandingDomainTooManyRequests{}
}

/*
DeleteLanguageunderstandingDomainTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type DeleteLanguageunderstandingDomainTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete languageunderstanding domain too many requests response has a 2xx status code
func (o *DeleteLanguageunderstandingDomainTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete languageunderstanding domain too many requests response has a 3xx status code
func (o *DeleteLanguageunderstandingDomainTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete languageunderstanding domain too many requests response has a 4xx status code
func (o *DeleteLanguageunderstandingDomainTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete languageunderstanding domain too many requests response has a 5xx status code
func (o *DeleteLanguageunderstandingDomainTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete languageunderstanding domain too many requests response a status code equal to that given
func (o *DeleteLanguageunderstandingDomainTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *DeleteLanguageunderstandingDomainTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}][%d] deleteLanguageunderstandingDomainTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}][%d] deleteLanguageunderstandingDomainTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteLanguageunderstandingDomainTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLanguageunderstandingDomainInternalServerError creates a DeleteLanguageunderstandingDomainInternalServerError with default headers values
func NewDeleteLanguageunderstandingDomainInternalServerError() *DeleteLanguageunderstandingDomainInternalServerError {
	return &DeleteLanguageunderstandingDomainInternalServerError{}
}

/*
DeleteLanguageunderstandingDomainInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type DeleteLanguageunderstandingDomainInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete languageunderstanding domain internal server error response has a 2xx status code
func (o *DeleteLanguageunderstandingDomainInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete languageunderstanding domain internal server error response has a 3xx status code
func (o *DeleteLanguageunderstandingDomainInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete languageunderstanding domain internal server error response has a 4xx status code
func (o *DeleteLanguageunderstandingDomainInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete languageunderstanding domain internal server error response has a 5xx status code
func (o *DeleteLanguageunderstandingDomainInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete languageunderstanding domain internal server error response a status code equal to that given
func (o *DeleteLanguageunderstandingDomainInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteLanguageunderstandingDomainInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}][%d] deleteLanguageunderstandingDomainInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}][%d] deleteLanguageunderstandingDomainInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteLanguageunderstandingDomainInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLanguageunderstandingDomainServiceUnavailable creates a DeleteLanguageunderstandingDomainServiceUnavailable with default headers values
func NewDeleteLanguageunderstandingDomainServiceUnavailable() *DeleteLanguageunderstandingDomainServiceUnavailable {
	return &DeleteLanguageunderstandingDomainServiceUnavailable{}
}

/*
DeleteLanguageunderstandingDomainServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type DeleteLanguageunderstandingDomainServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete languageunderstanding domain service unavailable response has a 2xx status code
func (o *DeleteLanguageunderstandingDomainServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete languageunderstanding domain service unavailable response has a 3xx status code
func (o *DeleteLanguageunderstandingDomainServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete languageunderstanding domain service unavailable response has a 4xx status code
func (o *DeleteLanguageunderstandingDomainServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete languageunderstanding domain service unavailable response has a 5xx status code
func (o *DeleteLanguageunderstandingDomainServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this delete languageunderstanding domain service unavailable response a status code equal to that given
func (o *DeleteLanguageunderstandingDomainServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *DeleteLanguageunderstandingDomainServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}][%d] deleteLanguageunderstandingDomainServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainServiceUnavailable) String() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}][%d] deleteLanguageunderstandingDomainServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteLanguageunderstandingDomainServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLanguageunderstandingDomainGatewayTimeout creates a DeleteLanguageunderstandingDomainGatewayTimeout with default headers values
func NewDeleteLanguageunderstandingDomainGatewayTimeout() *DeleteLanguageunderstandingDomainGatewayTimeout {
	return &DeleteLanguageunderstandingDomainGatewayTimeout{}
}

/*
DeleteLanguageunderstandingDomainGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type DeleteLanguageunderstandingDomainGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete languageunderstanding domain gateway timeout response has a 2xx status code
func (o *DeleteLanguageunderstandingDomainGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete languageunderstanding domain gateway timeout response has a 3xx status code
func (o *DeleteLanguageunderstandingDomainGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete languageunderstanding domain gateway timeout response has a 4xx status code
func (o *DeleteLanguageunderstandingDomainGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete languageunderstanding domain gateway timeout response has a 5xx status code
func (o *DeleteLanguageunderstandingDomainGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this delete languageunderstanding domain gateway timeout response a status code equal to that given
func (o *DeleteLanguageunderstandingDomainGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *DeleteLanguageunderstandingDomainGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}][%d] deleteLanguageunderstandingDomainGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainGatewayTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/languageunderstanding/domains/{domainId}][%d] deleteLanguageunderstandingDomainGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteLanguageunderstandingDomainGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteLanguageunderstandingDomainGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
