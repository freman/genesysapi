// Code generated by go-swagger; DO NOT EDIT.

package language_understanding

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// NewPutLanguageunderstandingDomainVersionParams creates a new PutLanguageunderstandingDomainVersionParams object
// with the default values initialized.
func NewPutLanguageunderstandingDomainVersionParams() *PutLanguageunderstandingDomainVersionParams {
	var ()
	return &PutLanguageunderstandingDomainVersionParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutLanguageunderstandingDomainVersionParamsWithTimeout creates a new PutLanguageunderstandingDomainVersionParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutLanguageunderstandingDomainVersionParamsWithTimeout(timeout time.Duration) *PutLanguageunderstandingDomainVersionParams {
	var ()
	return &PutLanguageunderstandingDomainVersionParams{

		timeout: timeout,
	}
}

// NewPutLanguageunderstandingDomainVersionParamsWithContext creates a new PutLanguageunderstandingDomainVersionParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutLanguageunderstandingDomainVersionParamsWithContext(ctx context.Context) *PutLanguageunderstandingDomainVersionParams {
	var ()
	return &PutLanguageunderstandingDomainVersionParams{

		Context: ctx,
	}
}

// NewPutLanguageunderstandingDomainVersionParamsWithHTTPClient creates a new PutLanguageunderstandingDomainVersionParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPutLanguageunderstandingDomainVersionParamsWithHTTPClient(client *http.Client) *PutLanguageunderstandingDomainVersionParams {
	var ()
	return &PutLanguageunderstandingDomainVersionParams{
		HTTPClient: client,
	}
}

/*PutLanguageunderstandingDomainVersionParams contains all the parameters to send to the API endpoint
for the put languageunderstanding domain version operation typically these are written to a http.Request
*/
type PutLanguageunderstandingDomainVersionParams struct {

	/*Body
	  The updated NLU Domain Version.

	*/
	Body *models.NluDomainVersion
	/*DomainID
	  ID of the NLU domain.

	*/
	DomainID string
	/*DomainVersionID
	  ID of the NLU domain version.

	*/
	DomainVersionID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the put languageunderstanding domain version params
func (o *PutLanguageunderstandingDomainVersionParams) WithTimeout(timeout time.Duration) *PutLanguageunderstandingDomainVersionParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put languageunderstanding domain version params
func (o *PutLanguageunderstandingDomainVersionParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put languageunderstanding domain version params
func (o *PutLanguageunderstandingDomainVersionParams) WithContext(ctx context.Context) *PutLanguageunderstandingDomainVersionParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put languageunderstanding domain version params
func (o *PutLanguageunderstandingDomainVersionParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put languageunderstanding domain version params
func (o *PutLanguageunderstandingDomainVersionParams) WithHTTPClient(client *http.Client) *PutLanguageunderstandingDomainVersionParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put languageunderstanding domain version params
func (o *PutLanguageunderstandingDomainVersionParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the put languageunderstanding domain version params
func (o *PutLanguageunderstandingDomainVersionParams) WithBody(body *models.NluDomainVersion) *PutLanguageunderstandingDomainVersionParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the put languageunderstanding domain version params
func (o *PutLanguageunderstandingDomainVersionParams) SetBody(body *models.NluDomainVersion) {
	o.Body = body
}

// WithDomainID adds the domainID to the put languageunderstanding domain version params
func (o *PutLanguageunderstandingDomainVersionParams) WithDomainID(domainID string) *PutLanguageunderstandingDomainVersionParams {
	o.SetDomainID(domainID)
	return o
}

// SetDomainID adds the domainId to the put languageunderstanding domain version params
func (o *PutLanguageunderstandingDomainVersionParams) SetDomainID(domainID string) {
	o.DomainID = domainID
}

// WithDomainVersionID adds the domainVersionID to the put languageunderstanding domain version params
func (o *PutLanguageunderstandingDomainVersionParams) WithDomainVersionID(domainVersionID string) *PutLanguageunderstandingDomainVersionParams {
	o.SetDomainVersionID(domainVersionID)
	return o
}

// SetDomainVersionID adds the domainVersionId to the put languageunderstanding domain version params
func (o *PutLanguageunderstandingDomainVersionParams) SetDomainVersionID(domainVersionID string) {
	o.DomainVersionID = domainVersionID
}

// WriteToRequest writes these params to a swagger request
func (o *PutLanguageunderstandingDomainVersionParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param domainId
	if err := r.SetPathParam("domainId", o.DomainID); err != nil {
		return err
	}

	// path param domainVersionId
	if err := r.SetPathParam("domainVersionId", o.DomainVersionID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
