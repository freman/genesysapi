// Code generated by go-swagger; DO NOT EDIT.

package language_understanding

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetLanguageunderstandingMinerTopicReader is a Reader for the GetLanguageunderstandingMinerTopic structure.
type GetLanguageunderstandingMinerTopicReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLanguageunderstandingMinerTopicReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLanguageunderstandingMinerTopicOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetLanguageunderstandingMinerTopicBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetLanguageunderstandingMinerTopicUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetLanguageunderstandingMinerTopicForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetLanguageunderstandingMinerTopicNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetLanguageunderstandingMinerTopicRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetLanguageunderstandingMinerTopicRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetLanguageunderstandingMinerTopicUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetLanguageunderstandingMinerTopicTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetLanguageunderstandingMinerTopicInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetLanguageunderstandingMinerTopicServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetLanguageunderstandingMinerTopicGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetLanguageunderstandingMinerTopicOK creates a GetLanguageunderstandingMinerTopicOK with default headers values
func NewGetLanguageunderstandingMinerTopicOK() *GetLanguageunderstandingMinerTopicOK {
	return &GetLanguageunderstandingMinerTopicOK{}
}

/*
GetLanguageunderstandingMinerTopicOK describes a response with status code 200, with default header values.

successful operation
*/
type GetLanguageunderstandingMinerTopicOK struct {
	Payload *models.MinerTopic
}

// IsSuccess returns true when this get languageunderstanding miner topic o k response has a 2xx status code
func (o *GetLanguageunderstandingMinerTopicOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get languageunderstanding miner topic o k response has a 3xx status code
func (o *GetLanguageunderstandingMinerTopicOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding miner topic o k response has a 4xx status code
func (o *GetLanguageunderstandingMinerTopicOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get languageunderstanding miner topic o k response has a 5xx status code
func (o *GetLanguageunderstandingMinerTopicOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding miner topic o k response a status code equal to that given
func (o *GetLanguageunderstandingMinerTopicOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetLanguageunderstandingMinerTopicOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/topics/{topicId}][%d] getLanguageunderstandingMinerTopicOK  %+v", 200, o.Payload)
}

func (o *GetLanguageunderstandingMinerTopicOK) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/topics/{topicId}][%d] getLanguageunderstandingMinerTopicOK  %+v", 200, o.Payload)
}

func (o *GetLanguageunderstandingMinerTopicOK) GetPayload() *models.MinerTopic {
	return o.Payload
}

func (o *GetLanguageunderstandingMinerTopicOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MinerTopic)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingMinerTopicBadRequest creates a GetLanguageunderstandingMinerTopicBadRequest with default headers values
func NewGetLanguageunderstandingMinerTopicBadRequest() *GetLanguageunderstandingMinerTopicBadRequest {
	return &GetLanguageunderstandingMinerTopicBadRequest{}
}

/*
GetLanguageunderstandingMinerTopicBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetLanguageunderstandingMinerTopicBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding miner topic bad request response has a 2xx status code
func (o *GetLanguageunderstandingMinerTopicBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding miner topic bad request response has a 3xx status code
func (o *GetLanguageunderstandingMinerTopicBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding miner topic bad request response has a 4xx status code
func (o *GetLanguageunderstandingMinerTopicBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding miner topic bad request response has a 5xx status code
func (o *GetLanguageunderstandingMinerTopicBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding miner topic bad request response a status code equal to that given
func (o *GetLanguageunderstandingMinerTopicBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetLanguageunderstandingMinerTopicBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/topics/{topicId}][%d] getLanguageunderstandingMinerTopicBadRequest  %+v", 400, o.Payload)
}

func (o *GetLanguageunderstandingMinerTopicBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/topics/{topicId}][%d] getLanguageunderstandingMinerTopicBadRequest  %+v", 400, o.Payload)
}

func (o *GetLanguageunderstandingMinerTopicBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingMinerTopicBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingMinerTopicUnauthorized creates a GetLanguageunderstandingMinerTopicUnauthorized with default headers values
func NewGetLanguageunderstandingMinerTopicUnauthorized() *GetLanguageunderstandingMinerTopicUnauthorized {
	return &GetLanguageunderstandingMinerTopicUnauthorized{}
}

/*
GetLanguageunderstandingMinerTopicUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetLanguageunderstandingMinerTopicUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding miner topic unauthorized response has a 2xx status code
func (o *GetLanguageunderstandingMinerTopicUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding miner topic unauthorized response has a 3xx status code
func (o *GetLanguageunderstandingMinerTopicUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding miner topic unauthorized response has a 4xx status code
func (o *GetLanguageunderstandingMinerTopicUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding miner topic unauthorized response has a 5xx status code
func (o *GetLanguageunderstandingMinerTopicUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding miner topic unauthorized response a status code equal to that given
func (o *GetLanguageunderstandingMinerTopicUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetLanguageunderstandingMinerTopicUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/topics/{topicId}][%d] getLanguageunderstandingMinerTopicUnauthorized  %+v", 401, o.Payload)
}

func (o *GetLanguageunderstandingMinerTopicUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/topics/{topicId}][%d] getLanguageunderstandingMinerTopicUnauthorized  %+v", 401, o.Payload)
}

func (o *GetLanguageunderstandingMinerTopicUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingMinerTopicUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingMinerTopicForbidden creates a GetLanguageunderstandingMinerTopicForbidden with default headers values
func NewGetLanguageunderstandingMinerTopicForbidden() *GetLanguageunderstandingMinerTopicForbidden {
	return &GetLanguageunderstandingMinerTopicForbidden{}
}

/*
GetLanguageunderstandingMinerTopicForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetLanguageunderstandingMinerTopicForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding miner topic forbidden response has a 2xx status code
func (o *GetLanguageunderstandingMinerTopicForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding miner topic forbidden response has a 3xx status code
func (o *GetLanguageunderstandingMinerTopicForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding miner topic forbidden response has a 4xx status code
func (o *GetLanguageunderstandingMinerTopicForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding miner topic forbidden response has a 5xx status code
func (o *GetLanguageunderstandingMinerTopicForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding miner topic forbidden response a status code equal to that given
func (o *GetLanguageunderstandingMinerTopicForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetLanguageunderstandingMinerTopicForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/topics/{topicId}][%d] getLanguageunderstandingMinerTopicForbidden  %+v", 403, o.Payload)
}

func (o *GetLanguageunderstandingMinerTopicForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/topics/{topicId}][%d] getLanguageunderstandingMinerTopicForbidden  %+v", 403, o.Payload)
}

func (o *GetLanguageunderstandingMinerTopicForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingMinerTopicForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingMinerTopicNotFound creates a GetLanguageunderstandingMinerTopicNotFound with default headers values
func NewGetLanguageunderstandingMinerTopicNotFound() *GetLanguageunderstandingMinerTopicNotFound {
	return &GetLanguageunderstandingMinerTopicNotFound{}
}

/*
GetLanguageunderstandingMinerTopicNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetLanguageunderstandingMinerTopicNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding miner topic not found response has a 2xx status code
func (o *GetLanguageunderstandingMinerTopicNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding miner topic not found response has a 3xx status code
func (o *GetLanguageunderstandingMinerTopicNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding miner topic not found response has a 4xx status code
func (o *GetLanguageunderstandingMinerTopicNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding miner topic not found response has a 5xx status code
func (o *GetLanguageunderstandingMinerTopicNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding miner topic not found response a status code equal to that given
func (o *GetLanguageunderstandingMinerTopicNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetLanguageunderstandingMinerTopicNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/topics/{topicId}][%d] getLanguageunderstandingMinerTopicNotFound  %+v", 404, o.Payload)
}

func (o *GetLanguageunderstandingMinerTopicNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/topics/{topicId}][%d] getLanguageunderstandingMinerTopicNotFound  %+v", 404, o.Payload)
}

func (o *GetLanguageunderstandingMinerTopicNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingMinerTopicNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingMinerTopicRequestTimeout creates a GetLanguageunderstandingMinerTopicRequestTimeout with default headers values
func NewGetLanguageunderstandingMinerTopicRequestTimeout() *GetLanguageunderstandingMinerTopicRequestTimeout {
	return &GetLanguageunderstandingMinerTopicRequestTimeout{}
}

/*
GetLanguageunderstandingMinerTopicRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetLanguageunderstandingMinerTopicRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding miner topic request timeout response has a 2xx status code
func (o *GetLanguageunderstandingMinerTopicRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding miner topic request timeout response has a 3xx status code
func (o *GetLanguageunderstandingMinerTopicRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding miner topic request timeout response has a 4xx status code
func (o *GetLanguageunderstandingMinerTopicRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding miner topic request timeout response has a 5xx status code
func (o *GetLanguageunderstandingMinerTopicRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding miner topic request timeout response a status code equal to that given
func (o *GetLanguageunderstandingMinerTopicRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetLanguageunderstandingMinerTopicRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/topics/{topicId}][%d] getLanguageunderstandingMinerTopicRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetLanguageunderstandingMinerTopicRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/topics/{topicId}][%d] getLanguageunderstandingMinerTopicRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetLanguageunderstandingMinerTopicRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingMinerTopicRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingMinerTopicRequestEntityTooLarge creates a GetLanguageunderstandingMinerTopicRequestEntityTooLarge with default headers values
func NewGetLanguageunderstandingMinerTopicRequestEntityTooLarge() *GetLanguageunderstandingMinerTopicRequestEntityTooLarge {
	return &GetLanguageunderstandingMinerTopicRequestEntityTooLarge{}
}

/*
GetLanguageunderstandingMinerTopicRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetLanguageunderstandingMinerTopicRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding miner topic request entity too large response has a 2xx status code
func (o *GetLanguageunderstandingMinerTopicRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding miner topic request entity too large response has a 3xx status code
func (o *GetLanguageunderstandingMinerTopicRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding miner topic request entity too large response has a 4xx status code
func (o *GetLanguageunderstandingMinerTopicRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding miner topic request entity too large response has a 5xx status code
func (o *GetLanguageunderstandingMinerTopicRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding miner topic request entity too large response a status code equal to that given
func (o *GetLanguageunderstandingMinerTopicRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetLanguageunderstandingMinerTopicRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/topics/{topicId}][%d] getLanguageunderstandingMinerTopicRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetLanguageunderstandingMinerTopicRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/topics/{topicId}][%d] getLanguageunderstandingMinerTopicRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetLanguageunderstandingMinerTopicRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingMinerTopicRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingMinerTopicUnsupportedMediaType creates a GetLanguageunderstandingMinerTopicUnsupportedMediaType with default headers values
func NewGetLanguageunderstandingMinerTopicUnsupportedMediaType() *GetLanguageunderstandingMinerTopicUnsupportedMediaType {
	return &GetLanguageunderstandingMinerTopicUnsupportedMediaType{}
}

/*
GetLanguageunderstandingMinerTopicUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetLanguageunderstandingMinerTopicUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding miner topic unsupported media type response has a 2xx status code
func (o *GetLanguageunderstandingMinerTopicUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding miner topic unsupported media type response has a 3xx status code
func (o *GetLanguageunderstandingMinerTopicUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding miner topic unsupported media type response has a 4xx status code
func (o *GetLanguageunderstandingMinerTopicUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding miner topic unsupported media type response has a 5xx status code
func (o *GetLanguageunderstandingMinerTopicUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding miner topic unsupported media type response a status code equal to that given
func (o *GetLanguageunderstandingMinerTopicUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetLanguageunderstandingMinerTopicUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/topics/{topicId}][%d] getLanguageunderstandingMinerTopicUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetLanguageunderstandingMinerTopicUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/topics/{topicId}][%d] getLanguageunderstandingMinerTopicUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetLanguageunderstandingMinerTopicUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingMinerTopicUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingMinerTopicTooManyRequests creates a GetLanguageunderstandingMinerTopicTooManyRequests with default headers values
func NewGetLanguageunderstandingMinerTopicTooManyRequests() *GetLanguageunderstandingMinerTopicTooManyRequests {
	return &GetLanguageunderstandingMinerTopicTooManyRequests{}
}

/*
GetLanguageunderstandingMinerTopicTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetLanguageunderstandingMinerTopicTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding miner topic too many requests response has a 2xx status code
func (o *GetLanguageunderstandingMinerTopicTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding miner topic too many requests response has a 3xx status code
func (o *GetLanguageunderstandingMinerTopicTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding miner topic too many requests response has a 4xx status code
func (o *GetLanguageunderstandingMinerTopicTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get languageunderstanding miner topic too many requests response has a 5xx status code
func (o *GetLanguageunderstandingMinerTopicTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get languageunderstanding miner topic too many requests response a status code equal to that given
func (o *GetLanguageunderstandingMinerTopicTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetLanguageunderstandingMinerTopicTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/topics/{topicId}][%d] getLanguageunderstandingMinerTopicTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetLanguageunderstandingMinerTopicTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/topics/{topicId}][%d] getLanguageunderstandingMinerTopicTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetLanguageunderstandingMinerTopicTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingMinerTopicTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingMinerTopicInternalServerError creates a GetLanguageunderstandingMinerTopicInternalServerError with default headers values
func NewGetLanguageunderstandingMinerTopicInternalServerError() *GetLanguageunderstandingMinerTopicInternalServerError {
	return &GetLanguageunderstandingMinerTopicInternalServerError{}
}

/*
GetLanguageunderstandingMinerTopicInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetLanguageunderstandingMinerTopicInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding miner topic internal server error response has a 2xx status code
func (o *GetLanguageunderstandingMinerTopicInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding miner topic internal server error response has a 3xx status code
func (o *GetLanguageunderstandingMinerTopicInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding miner topic internal server error response has a 4xx status code
func (o *GetLanguageunderstandingMinerTopicInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get languageunderstanding miner topic internal server error response has a 5xx status code
func (o *GetLanguageunderstandingMinerTopicInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get languageunderstanding miner topic internal server error response a status code equal to that given
func (o *GetLanguageunderstandingMinerTopicInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetLanguageunderstandingMinerTopicInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/topics/{topicId}][%d] getLanguageunderstandingMinerTopicInternalServerError  %+v", 500, o.Payload)
}

func (o *GetLanguageunderstandingMinerTopicInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/topics/{topicId}][%d] getLanguageunderstandingMinerTopicInternalServerError  %+v", 500, o.Payload)
}

func (o *GetLanguageunderstandingMinerTopicInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingMinerTopicInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingMinerTopicServiceUnavailable creates a GetLanguageunderstandingMinerTopicServiceUnavailable with default headers values
func NewGetLanguageunderstandingMinerTopicServiceUnavailable() *GetLanguageunderstandingMinerTopicServiceUnavailable {
	return &GetLanguageunderstandingMinerTopicServiceUnavailable{}
}

/*
GetLanguageunderstandingMinerTopicServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetLanguageunderstandingMinerTopicServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding miner topic service unavailable response has a 2xx status code
func (o *GetLanguageunderstandingMinerTopicServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding miner topic service unavailable response has a 3xx status code
func (o *GetLanguageunderstandingMinerTopicServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding miner topic service unavailable response has a 4xx status code
func (o *GetLanguageunderstandingMinerTopicServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get languageunderstanding miner topic service unavailable response has a 5xx status code
func (o *GetLanguageunderstandingMinerTopicServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get languageunderstanding miner topic service unavailable response a status code equal to that given
func (o *GetLanguageunderstandingMinerTopicServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetLanguageunderstandingMinerTopicServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/topics/{topicId}][%d] getLanguageunderstandingMinerTopicServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetLanguageunderstandingMinerTopicServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/topics/{topicId}][%d] getLanguageunderstandingMinerTopicServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetLanguageunderstandingMinerTopicServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingMinerTopicServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguageunderstandingMinerTopicGatewayTimeout creates a GetLanguageunderstandingMinerTopicGatewayTimeout with default headers values
func NewGetLanguageunderstandingMinerTopicGatewayTimeout() *GetLanguageunderstandingMinerTopicGatewayTimeout {
	return &GetLanguageunderstandingMinerTopicGatewayTimeout{}
}

/*
GetLanguageunderstandingMinerTopicGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetLanguageunderstandingMinerTopicGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get languageunderstanding miner topic gateway timeout response has a 2xx status code
func (o *GetLanguageunderstandingMinerTopicGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get languageunderstanding miner topic gateway timeout response has a 3xx status code
func (o *GetLanguageunderstandingMinerTopicGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get languageunderstanding miner topic gateway timeout response has a 4xx status code
func (o *GetLanguageunderstandingMinerTopicGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get languageunderstanding miner topic gateway timeout response has a 5xx status code
func (o *GetLanguageunderstandingMinerTopicGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get languageunderstanding miner topic gateway timeout response a status code equal to that given
func (o *GetLanguageunderstandingMinerTopicGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetLanguageunderstandingMinerTopicGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/topics/{topicId}][%d] getLanguageunderstandingMinerTopicGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetLanguageunderstandingMinerTopicGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/languageunderstanding/miners/{minerId}/topics/{topicId}][%d] getLanguageunderstandingMinerTopicGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetLanguageunderstandingMinerTopicGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguageunderstandingMinerTopicGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
