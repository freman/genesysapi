// Code generated by go-swagger; DO NOT EDIT.

package process_automation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutProcessautomationTriggerReader is a Reader for the PutProcessautomationTrigger structure.
type PutProcessautomationTriggerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutProcessautomationTriggerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutProcessautomationTriggerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutProcessautomationTriggerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutProcessautomationTriggerUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutProcessautomationTriggerForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutProcessautomationTriggerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutProcessautomationTriggerRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutProcessautomationTriggerRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutProcessautomationTriggerUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutProcessautomationTriggerTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutProcessautomationTriggerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutProcessautomationTriggerServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutProcessautomationTriggerGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutProcessautomationTriggerOK creates a PutProcessautomationTriggerOK with default headers values
func NewPutProcessautomationTriggerOK() *PutProcessautomationTriggerOK {
	return &PutProcessautomationTriggerOK{}
}

/*
PutProcessautomationTriggerOK describes a response with status code 200, with default header values.

successful operation
*/
type PutProcessautomationTriggerOK struct {
	Payload *models.Trigger
}

// IsSuccess returns true when this put processautomation trigger o k response has a 2xx status code
func (o *PutProcessautomationTriggerOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put processautomation trigger o k response has a 3xx status code
func (o *PutProcessautomationTriggerOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put processautomation trigger o k response has a 4xx status code
func (o *PutProcessautomationTriggerOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put processautomation trigger o k response has a 5xx status code
func (o *PutProcessautomationTriggerOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put processautomation trigger o k response a status code equal to that given
func (o *PutProcessautomationTriggerOK) IsCode(code int) bool {
	return code == 200
}

func (o *PutProcessautomationTriggerOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/processautomation/triggers/{triggerId}][%d] putProcessautomationTriggerOK  %+v", 200, o.Payload)
}

func (o *PutProcessautomationTriggerOK) String() string {
	return fmt.Sprintf("[PUT /api/v2/processautomation/triggers/{triggerId}][%d] putProcessautomationTriggerOK  %+v", 200, o.Payload)
}

func (o *PutProcessautomationTriggerOK) GetPayload() *models.Trigger {
	return o.Payload
}

func (o *PutProcessautomationTriggerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Trigger)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutProcessautomationTriggerBadRequest creates a PutProcessautomationTriggerBadRequest with default headers values
func NewPutProcessautomationTriggerBadRequest() *PutProcessautomationTriggerBadRequest {
	return &PutProcessautomationTriggerBadRequest{}
}

/*
PutProcessautomationTriggerBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutProcessautomationTriggerBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put processautomation trigger bad request response has a 2xx status code
func (o *PutProcessautomationTriggerBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put processautomation trigger bad request response has a 3xx status code
func (o *PutProcessautomationTriggerBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put processautomation trigger bad request response has a 4xx status code
func (o *PutProcessautomationTriggerBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put processautomation trigger bad request response has a 5xx status code
func (o *PutProcessautomationTriggerBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put processautomation trigger bad request response a status code equal to that given
func (o *PutProcessautomationTriggerBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PutProcessautomationTriggerBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/processautomation/triggers/{triggerId}][%d] putProcessautomationTriggerBadRequest  %+v", 400, o.Payload)
}

func (o *PutProcessautomationTriggerBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/v2/processautomation/triggers/{triggerId}][%d] putProcessautomationTriggerBadRequest  %+v", 400, o.Payload)
}

func (o *PutProcessautomationTriggerBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutProcessautomationTriggerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutProcessautomationTriggerUnauthorized creates a PutProcessautomationTriggerUnauthorized with default headers values
func NewPutProcessautomationTriggerUnauthorized() *PutProcessautomationTriggerUnauthorized {
	return &PutProcessautomationTriggerUnauthorized{}
}

/*
PutProcessautomationTriggerUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PutProcessautomationTriggerUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put processautomation trigger unauthorized response has a 2xx status code
func (o *PutProcessautomationTriggerUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put processautomation trigger unauthorized response has a 3xx status code
func (o *PutProcessautomationTriggerUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put processautomation trigger unauthorized response has a 4xx status code
func (o *PutProcessautomationTriggerUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put processautomation trigger unauthorized response has a 5xx status code
func (o *PutProcessautomationTriggerUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put processautomation trigger unauthorized response a status code equal to that given
func (o *PutProcessautomationTriggerUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PutProcessautomationTriggerUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/processautomation/triggers/{triggerId}][%d] putProcessautomationTriggerUnauthorized  %+v", 401, o.Payload)
}

func (o *PutProcessautomationTriggerUnauthorized) String() string {
	return fmt.Sprintf("[PUT /api/v2/processautomation/triggers/{triggerId}][%d] putProcessautomationTriggerUnauthorized  %+v", 401, o.Payload)
}

func (o *PutProcessautomationTriggerUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutProcessautomationTriggerUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutProcessautomationTriggerForbidden creates a PutProcessautomationTriggerForbidden with default headers values
func NewPutProcessautomationTriggerForbidden() *PutProcessautomationTriggerForbidden {
	return &PutProcessautomationTriggerForbidden{}
}

/*
PutProcessautomationTriggerForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PutProcessautomationTriggerForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put processautomation trigger forbidden response has a 2xx status code
func (o *PutProcessautomationTriggerForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put processautomation trigger forbidden response has a 3xx status code
func (o *PutProcessautomationTriggerForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put processautomation trigger forbidden response has a 4xx status code
func (o *PutProcessautomationTriggerForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put processautomation trigger forbidden response has a 5xx status code
func (o *PutProcessautomationTriggerForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put processautomation trigger forbidden response a status code equal to that given
func (o *PutProcessautomationTriggerForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PutProcessautomationTriggerForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/processautomation/triggers/{triggerId}][%d] putProcessautomationTriggerForbidden  %+v", 403, o.Payload)
}

func (o *PutProcessautomationTriggerForbidden) String() string {
	return fmt.Sprintf("[PUT /api/v2/processautomation/triggers/{triggerId}][%d] putProcessautomationTriggerForbidden  %+v", 403, o.Payload)
}

func (o *PutProcessautomationTriggerForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutProcessautomationTriggerForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutProcessautomationTriggerNotFound creates a PutProcessautomationTriggerNotFound with default headers values
func NewPutProcessautomationTriggerNotFound() *PutProcessautomationTriggerNotFound {
	return &PutProcessautomationTriggerNotFound{}
}

/*
PutProcessautomationTriggerNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PutProcessautomationTriggerNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put processautomation trigger not found response has a 2xx status code
func (o *PutProcessautomationTriggerNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put processautomation trigger not found response has a 3xx status code
func (o *PutProcessautomationTriggerNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put processautomation trigger not found response has a 4xx status code
func (o *PutProcessautomationTriggerNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put processautomation trigger not found response has a 5xx status code
func (o *PutProcessautomationTriggerNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put processautomation trigger not found response a status code equal to that given
func (o *PutProcessautomationTriggerNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PutProcessautomationTriggerNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/processautomation/triggers/{triggerId}][%d] putProcessautomationTriggerNotFound  %+v", 404, o.Payload)
}

func (o *PutProcessautomationTriggerNotFound) String() string {
	return fmt.Sprintf("[PUT /api/v2/processautomation/triggers/{triggerId}][%d] putProcessautomationTriggerNotFound  %+v", 404, o.Payload)
}

func (o *PutProcessautomationTriggerNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutProcessautomationTriggerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutProcessautomationTriggerRequestTimeout creates a PutProcessautomationTriggerRequestTimeout with default headers values
func NewPutProcessautomationTriggerRequestTimeout() *PutProcessautomationTriggerRequestTimeout {
	return &PutProcessautomationTriggerRequestTimeout{}
}

/*
PutProcessautomationTriggerRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutProcessautomationTriggerRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put processautomation trigger request timeout response has a 2xx status code
func (o *PutProcessautomationTriggerRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put processautomation trigger request timeout response has a 3xx status code
func (o *PutProcessautomationTriggerRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put processautomation trigger request timeout response has a 4xx status code
func (o *PutProcessautomationTriggerRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this put processautomation trigger request timeout response has a 5xx status code
func (o *PutProcessautomationTriggerRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this put processautomation trigger request timeout response a status code equal to that given
func (o *PutProcessautomationTriggerRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PutProcessautomationTriggerRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/processautomation/triggers/{triggerId}][%d] putProcessautomationTriggerRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutProcessautomationTriggerRequestTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/processautomation/triggers/{triggerId}][%d] putProcessautomationTriggerRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutProcessautomationTriggerRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutProcessautomationTriggerRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutProcessautomationTriggerRequestEntityTooLarge creates a PutProcessautomationTriggerRequestEntityTooLarge with default headers values
func NewPutProcessautomationTriggerRequestEntityTooLarge() *PutProcessautomationTriggerRequestEntityTooLarge {
	return &PutProcessautomationTriggerRequestEntityTooLarge{}
}

/*
PutProcessautomationTriggerRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PutProcessautomationTriggerRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put processautomation trigger request entity too large response has a 2xx status code
func (o *PutProcessautomationTriggerRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put processautomation trigger request entity too large response has a 3xx status code
func (o *PutProcessautomationTriggerRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put processautomation trigger request entity too large response has a 4xx status code
func (o *PutProcessautomationTriggerRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this put processautomation trigger request entity too large response has a 5xx status code
func (o *PutProcessautomationTriggerRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this put processautomation trigger request entity too large response a status code equal to that given
func (o *PutProcessautomationTriggerRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PutProcessautomationTriggerRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/processautomation/triggers/{triggerId}][%d] putProcessautomationTriggerRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutProcessautomationTriggerRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PUT /api/v2/processautomation/triggers/{triggerId}][%d] putProcessautomationTriggerRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutProcessautomationTriggerRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutProcessautomationTriggerRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutProcessautomationTriggerUnsupportedMediaType creates a PutProcessautomationTriggerUnsupportedMediaType with default headers values
func NewPutProcessautomationTriggerUnsupportedMediaType() *PutProcessautomationTriggerUnsupportedMediaType {
	return &PutProcessautomationTriggerUnsupportedMediaType{}
}

/*
PutProcessautomationTriggerUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutProcessautomationTriggerUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put processautomation trigger unsupported media type response has a 2xx status code
func (o *PutProcessautomationTriggerUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put processautomation trigger unsupported media type response has a 3xx status code
func (o *PutProcessautomationTriggerUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put processautomation trigger unsupported media type response has a 4xx status code
func (o *PutProcessautomationTriggerUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this put processautomation trigger unsupported media type response has a 5xx status code
func (o *PutProcessautomationTriggerUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this put processautomation trigger unsupported media type response a status code equal to that given
func (o *PutProcessautomationTriggerUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PutProcessautomationTriggerUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/processautomation/triggers/{triggerId}][%d] putProcessautomationTriggerUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutProcessautomationTriggerUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PUT /api/v2/processautomation/triggers/{triggerId}][%d] putProcessautomationTriggerUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutProcessautomationTriggerUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutProcessautomationTriggerUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutProcessautomationTriggerTooManyRequests creates a PutProcessautomationTriggerTooManyRequests with default headers values
func NewPutProcessautomationTriggerTooManyRequests() *PutProcessautomationTriggerTooManyRequests {
	return &PutProcessautomationTriggerTooManyRequests{}
}

/*
PutProcessautomationTriggerTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutProcessautomationTriggerTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put processautomation trigger too many requests response has a 2xx status code
func (o *PutProcessautomationTriggerTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put processautomation trigger too many requests response has a 3xx status code
func (o *PutProcessautomationTriggerTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put processautomation trigger too many requests response has a 4xx status code
func (o *PutProcessautomationTriggerTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this put processautomation trigger too many requests response has a 5xx status code
func (o *PutProcessautomationTriggerTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this put processautomation trigger too many requests response a status code equal to that given
func (o *PutProcessautomationTriggerTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PutProcessautomationTriggerTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/processautomation/triggers/{triggerId}][%d] putProcessautomationTriggerTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutProcessautomationTriggerTooManyRequests) String() string {
	return fmt.Sprintf("[PUT /api/v2/processautomation/triggers/{triggerId}][%d] putProcessautomationTriggerTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutProcessautomationTriggerTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutProcessautomationTriggerTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutProcessautomationTriggerInternalServerError creates a PutProcessautomationTriggerInternalServerError with default headers values
func NewPutProcessautomationTriggerInternalServerError() *PutProcessautomationTriggerInternalServerError {
	return &PutProcessautomationTriggerInternalServerError{}
}

/*
PutProcessautomationTriggerInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutProcessautomationTriggerInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put processautomation trigger internal server error response has a 2xx status code
func (o *PutProcessautomationTriggerInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put processautomation trigger internal server error response has a 3xx status code
func (o *PutProcessautomationTriggerInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put processautomation trigger internal server error response has a 4xx status code
func (o *PutProcessautomationTriggerInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this put processautomation trigger internal server error response has a 5xx status code
func (o *PutProcessautomationTriggerInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this put processautomation trigger internal server error response a status code equal to that given
func (o *PutProcessautomationTriggerInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PutProcessautomationTriggerInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/processautomation/triggers/{triggerId}][%d] putProcessautomationTriggerInternalServerError  %+v", 500, o.Payload)
}

func (o *PutProcessautomationTriggerInternalServerError) String() string {
	return fmt.Sprintf("[PUT /api/v2/processautomation/triggers/{triggerId}][%d] putProcessautomationTriggerInternalServerError  %+v", 500, o.Payload)
}

func (o *PutProcessautomationTriggerInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutProcessautomationTriggerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutProcessautomationTriggerServiceUnavailable creates a PutProcessautomationTriggerServiceUnavailable with default headers values
func NewPutProcessautomationTriggerServiceUnavailable() *PutProcessautomationTriggerServiceUnavailable {
	return &PutProcessautomationTriggerServiceUnavailable{}
}

/*
PutProcessautomationTriggerServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutProcessautomationTriggerServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put processautomation trigger service unavailable response has a 2xx status code
func (o *PutProcessautomationTriggerServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put processautomation trigger service unavailable response has a 3xx status code
func (o *PutProcessautomationTriggerServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put processautomation trigger service unavailable response has a 4xx status code
func (o *PutProcessautomationTriggerServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this put processautomation trigger service unavailable response has a 5xx status code
func (o *PutProcessautomationTriggerServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this put processautomation trigger service unavailable response a status code equal to that given
func (o *PutProcessautomationTriggerServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PutProcessautomationTriggerServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/processautomation/triggers/{triggerId}][%d] putProcessautomationTriggerServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutProcessautomationTriggerServiceUnavailable) String() string {
	return fmt.Sprintf("[PUT /api/v2/processautomation/triggers/{triggerId}][%d] putProcessautomationTriggerServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutProcessautomationTriggerServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutProcessautomationTriggerServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutProcessautomationTriggerGatewayTimeout creates a PutProcessautomationTriggerGatewayTimeout with default headers values
func NewPutProcessautomationTriggerGatewayTimeout() *PutProcessautomationTriggerGatewayTimeout {
	return &PutProcessautomationTriggerGatewayTimeout{}
}

/*
PutProcessautomationTriggerGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PutProcessautomationTriggerGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put processautomation trigger gateway timeout response has a 2xx status code
func (o *PutProcessautomationTriggerGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put processautomation trigger gateway timeout response has a 3xx status code
func (o *PutProcessautomationTriggerGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put processautomation trigger gateway timeout response has a 4xx status code
func (o *PutProcessautomationTriggerGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this put processautomation trigger gateway timeout response has a 5xx status code
func (o *PutProcessautomationTriggerGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this put processautomation trigger gateway timeout response a status code equal to that given
func (o *PutProcessautomationTriggerGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PutProcessautomationTriggerGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/processautomation/triggers/{triggerId}][%d] putProcessautomationTriggerGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutProcessautomationTriggerGatewayTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/processautomation/triggers/{triggerId}][%d] putProcessautomationTriggerGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutProcessautomationTriggerGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutProcessautomationTriggerGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
