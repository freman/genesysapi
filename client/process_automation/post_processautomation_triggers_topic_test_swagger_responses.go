// Code generated by go-swagger; DO NOT EDIT.

package process_automation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostProcessautomationTriggersTopicTestReader is a Reader for the PostProcessautomationTriggersTopicTest structure.
type PostProcessautomationTriggersTopicTestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostProcessautomationTriggersTopicTestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostProcessautomationTriggersTopicTestOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostProcessautomationTriggersTopicTestBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostProcessautomationTriggersTopicTestUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostProcessautomationTriggersTopicTestForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostProcessautomationTriggersTopicTestNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostProcessautomationTriggersTopicTestRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostProcessautomationTriggersTopicTestRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostProcessautomationTriggersTopicTestUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostProcessautomationTriggersTopicTestTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostProcessautomationTriggersTopicTestInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostProcessautomationTriggersTopicTestServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostProcessautomationTriggersTopicTestGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostProcessautomationTriggersTopicTestOK creates a PostProcessautomationTriggersTopicTestOK with default headers values
func NewPostProcessautomationTriggersTopicTestOK() *PostProcessautomationTriggersTopicTestOK {
	return &PostProcessautomationTriggersTopicTestOK{}
}

/*
PostProcessautomationTriggersTopicTestOK describes a response with status code 200, with default header values.

successful operation
*/
type PostProcessautomationTriggersTopicTestOK struct {
	Payload *models.TestModeEventResults
}

// IsSuccess returns true when this post processautomation triggers topic test o k response has a 2xx status code
func (o *PostProcessautomationTriggersTopicTestOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post processautomation triggers topic test o k response has a 3xx status code
func (o *PostProcessautomationTriggersTopicTestOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post processautomation triggers topic test o k response has a 4xx status code
func (o *PostProcessautomationTriggersTopicTestOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post processautomation triggers topic test o k response has a 5xx status code
func (o *PostProcessautomationTriggersTopicTestOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post processautomation triggers topic test o k response a status code equal to that given
func (o *PostProcessautomationTriggersTopicTestOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostProcessautomationTriggersTopicTestOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/processautomation/triggers/topics/{topicName}/test][%d] postProcessautomationTriggersTopicTestOK  %+v", 200, o.Payload)
}

func (o *PostProcessautomationTriggersTopicTestOK) String() string {
	return fmt.Sprintf("[POST /api/v2/processautomation/triggers/topics/{topicName}/test][%d] postProcessautomationTriggersTopicTestOK  %+v", 200, o.Payload)
}

func (o *PostProcessautomationTriggersTopicTestOK) GetPayload() *models.TestModeEventResults {
	return o.Payload
}

func (o *PostProcessautomationTriggersTopicTestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TestModeEventResults)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostProcessautomationTriggersTopicTestBadRequest creates a PostProcessautomationTriggersTopicTestBadRequest with default headers values
func NewPostProcessautomationTriggersTopicTestBadRequest() *PostProcessautomationTriggersTopicTestBadRequest {
	return &PostProcessautomationTriggersTopicTestBadRequest{}
}

/*
PostProcessautomationTriggersTopicTestBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostProcessautomationTriggersTopicTestBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post processautomation triggers topic test bad request response has a 2xx status code
func (o *PostProcessautomationTriggersTopicTestBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post processautomation triggers topic test bad request response has a 3xx status code
func (o *PostProcessautomationTriggersTopicTestBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post processautomation triggers topic test bad request response has a 4xx status code
func (o *PostProcessautomationTriggersTopicTestBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post processautomation triggers topic test bad request response has a 5xx status code
func (o *PostProcessautomationTriggersTopicTestBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post processautomation triggers topic test bad request response a status code equal to that given
func (o *PostProcessautomationTriggersTopicTestBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostProcessautomationTriggersTopicTestBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/processautomation/triggers/topics/{topicName}/test][%d] postProcessautomationTriggersTopicTestBadRequest  %+v", 400, o.Payload)
}

func (o *PostProcessautomationTriggersTopicTestBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/processautomation/triggers/topics/{topicName}/test][%d] postProcessautomationTriggersTopicTestBadRequest  %+v", 400, o.Payload)
}

func (o *PostProcessautomationTriggersTopicTestBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostProcessautomationTriggersTopicTestBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostProcessautomationTriggersTopicTestUnauthorized creates a PostProcessautomationTriggersTopicTestUnauthorized with default headers values
func NewPostProcessautomationTriggersTopicTestUnauthorized() *PostProcessautomationTriggersTopicTestUnauthorized {
	return &PostProcessautomationTriggersTopicTestUnauthorized{}
}

/*
PostProcessautomationTriggersTopicTestUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostProcessautomationTriggersTopicTestUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post processautomation triggers topic test unauthorized response has a 2xx status code
func (o *PostProcessautomationTriggersTopicTestUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post processautomation triggers topic test unauthorized response has a 3xx status code
func (o *PostProcessautomationTriggersTopicTestUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post processautomation triggers topic test unauthorized response has a 4xx status code
func (o *PostProcessautomationTriggersTopicTestUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post processautomation triggers topic test unauthorized response has a 5xx status code
func (o *PostProcessautomationTriggersTopicTestUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post processautomation triggers topic test unauthorized response a status code equal to that given
func (o *PostProcessautomationTriggersTopicTestUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostProcessautomationTriggersTopicTestUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/processautomation/triggers/topics/{topicName}/test][%d] postProcessautomationTriggersTopicTestUnauthorized  %+v", 401, o.Payload)
}

func (o *PostProcessautomationTriggersTopicTestUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/processautomation/triggers/topics/{topicName}/test][%d] postProcessautomationTriggersTopicTestUnauthorized  %+v", 401, o.Payload)
}

func (o *PostProcessautomationTriggersTopicTestUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostProcessautomationTriggersTopicTestUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostProcessautomationTriggersTopicTestForbidden creates a PostProcessautomationTriggersTopicTestForbidden with default headers values
func NewPostProcessautomationTriggersTopicTestForbidden() *PostProcessautomationTriggersTopicTestForbidden {
	return &PostProcessautomationTriggersTopicTestForbidden{}
}

/*
PostProcessautomationTriggersTopicTestForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostProcessautomationTriggersTopicTestForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post processautomation triggers topic test forbidden response has a 2xx status code
func (o *PostProcessautomationTriggersTopicTestForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post processautomation triggers topic test forbidden response has a 3xx status code
func (o *PostProcessautomationTriggersTopicTestForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post processautomation triggers topic test forbidden response has a 4xx status code
func (o *PostProcessautomationTriggersTopicTestForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post processautomation triggers topic test forbidden response has a 5xx status code
func (o *PostProcessautomationTriggersTopicTestForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post processautomation triggers topic test forbidden response a status code equal to that given
func (o *PostProcessautomationTriggersTopicTestForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostProcessautomationTriggersTopicTestForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/processautomation/triggers/topics/{topicName}/test][%d] postProcessautomationTriggersTopicTestForbidden  %+v", 403, o.Payload)
}

func (o *PostProcessautomationTriggersTopicTestForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/processautomation/triggers/topics/{topicName}/test][%d] postProcessautomationTriggersTopicTestForbidden  %+v", 403, o.Payload)
}

func (o *PostProcessautomationTriggersTopicTestForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostProcessautomationTriggersTopicTestForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostProcessautomationTriggersTopicTestNotFound creates a PostProcessautomationTriggersTopicTestNotFound with default headers values
func NewPostProcessautomationTriggersTopicTestNotFound() *PostProcessautomationTriggersTopicTestNotFound {
	return &PostProcessautomationTriggersTopicTestNotFound{}
}

/*
PostProcessautomationTriggersTopicTestNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostProcessautomationTriggersTopicTestNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post processautomation triggers topic test not found response has a 2xx status code
func (o *PostProcessautomationTriggersTopicTestNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post processautomation triggers topic test not found response has a 3xx status code
func (o *PostProcessautomationTriggersTopicTestNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post processautomation triggers topic test not found response has a 4xx status code
func (o *PostProcessautomationTriggersTopicTestNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post processautomation triggers topic test not found response has a 5xx status code
func (o *PostProcessautomationTriggersTopicTestNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post processautomation triggers topic test not found response a status code equal to that given
func (o *PostProcessautomationTriggersTopicTestNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostProcessautomationTriggersTopicTestNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/processautomation/triggers/topics/{topicName}/test][%d] postProcessautomationTriggersTopicTestNotFound  %+v", 404, o.Payload)
}

func (o *PostProcessautomationTriggersTopicTestNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/processautomation/triggers/topics/{topicName}/test][%d] postProcessautomationTriggersTopicTestNotFound  %+v", 404, o.Payload)
}

func (o *PostProcessautomationTriggersTopicTestNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostProcessautomationTriggersTopicTestNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostProcessautomationTriggersTopicTestRequestTimeout creates a PostProcessautomationTriggersTopicTestRequestTimeout with default headers values
func NewPostProcessautomationTriggersTopicTestRequestTimeout() *PostProcessautomationTriggersTopicTestRequestTimeout {
	return &PostProcessautomationTriggersTopicTestRequestTimeout{}
}

/*
PostProcessautomationTriggersTopicTestRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostProcessautomationTriggersTopicTestRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post processautomation triggers topic test request timeout response has a 2xx status code
func (o *PostProcessautomationTriggersTopicTestRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post processautomation triggers topic test request timeout response has a 3xx status code
func (o *PostProcessautomationTriggersTopicTestRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post processautomation triggers topic test request timeout response has a 4xx status code
func (o *PostProcessautomationTriggersTopicTestRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post processautomation triggers topic test request timeout response has a 5xx status code
func (o *PostProcessautomationTriggersTopicTestRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post processautomation triggers topic test request timeout response a status code equal to that given
func (o *PostProcessautomationTriggersTopicTestRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostProcessautomationTriggersTopicTestRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/processautomation/triggers/topics/{topicName}/test][%d] postProcessautomationTriggersTopicTestRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostProcessautomationTriggersTopicTestRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/processautomation/triggers/topics/{topicName}/test][%d] postProcessautomationTriggersTopicTestRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostProcessautomationTriggersTopicTestRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostProcessautomationTriggersTopicTestRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostProcessautomationTriggersTopicTestRequestEntityTooLarge creates a PostProcessautomationTriggersTopicTestRequestEntityTooLarge with default headers values
func NewPostProcessautomationTriggersTopicTestRequestEntityTooLarge() *PostProcessautomationTriggersTopicTestRequestEntityTooLarge {
	return &PostProcessautomationTriggersTopicTestRequestEntityTooLarge{}
}

/*
PostProcessautomationTriggersTopicTestRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PostProcessautomationTriggersTopicTestRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post processautomation triggers topic test request entity too large response has a 2xx status code
func (o *PostProcessautomationTriggersTopicTestRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post processautomation triggers topic test request entity too large response has a 3xx status code
func (o *PostProcessautomationTriggersTopicTestRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post processautomation triggers topic test request entity too large response has a 4xx status code
func (o *PostProcessautomationTriggersTopicTestRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post processautomation triggers topic test request entity too large response has a 5xx status code
func (o *PostProcessautomationTriggersTopicTestRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post processautomation triggers topic test request entity too large response a status code equal to that given
func (o *PostProcessautomationTriggersTopicTestRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostProcessautomationTriggersTopicTestRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/processautomation/triggers/topics/{topicName}/test][%d] postProcessautomationTriggersTopicTestRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostProcessautomationTriggersTopicTestRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/processautomation/triggers/topics/{topicName}/test][%d] postProcessautomationTriggersTopicTestRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostProcessautomationTriggersTopicTestRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostProcessautomationTriggersTopicTestRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostProcessautomationTriggersTopicTestUnsupportedMediaType creates a PostProcessautomationTriggersTopicTestUnsupportedMediaType with default headers values
func NewPostProcessautomationTriggersTopicTestUnsupportedMediaType() *PostProcessautomationTriggersTopicTestUnsupportedMediaType {
	return &PostProcessautomationTriggersTopicTestUnsupportedMediaType{}
}

/*
PostProcessautomationTriggersTopicTestUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostProcessautomationTriggersTopicTestUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post processautomation triggers topic test unsupported media type response has a 2xx status code
func (o *PostProcessautomationTriggersTopicTestUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post processautomation triggers topic test unsupported media type response has a 3xx status code
func (o *PostProcessautomationTriggersTopicTestUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post processautomation triggers topic test unsupported media type response has a 4xx status code
func (o *PostProcessautomationTriggersTopicTestUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post processautomation triggers topic test unsupported media type response has a 5xx status code
func (o *PostProcessautomationTriggersTopicTestUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post processautomation triggers topic test unsupported media type response a status code equal to that given
func (o *PostProcessautomationTriggersTopicTestUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostProcessautomationTriggersTopicTestUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/processautomation/triggers/topics/{topicName}/test][%d] postProcessautomationTriggersTopicTestUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostProcessautomationTriggersTopicTestUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/processautomation/triggers/topics/{topicName}/test][%d] postProcessautomationTriggersTopicTestUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostProcessautomationTriggersTopicTestUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostProcessautomationTriggersTopicTestUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostProcessautomationTriggersTopicTestTooManyRequests creates a PostProcessautomationTriggersTopicTestTooManyRequests with default headers values
func NewPostProcessautomationTriggersTopicTestTooManyRequests() *PostProcessautomationTriggersTopicTestTooManyRequests {
	return &PostProcessautomationTriggersTopicTestTooManyRequests{}
}

/*
PostProcessautomationTriggersTopicTestTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostProcessautomationTriggersTopicTestTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post processautomation triggers topic test too many requests response has a 2xx status code
func (o *PostProcessautomationTriggersTopicTestTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post processautomation triggers topic test too many requests response has a 3xx status code
func (o *PostProcessautomationTriggersTopicTestTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post processautomation triggers topic test too many requests response has a 4xx status code
func (o *PostProcessautomationTriggersTopicTestTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post processautomation triggers topic test too many requests response has a 5xx status code
func (o *PostProcessautomationTriggersTopicTestTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post processautomation triggers topic test too many requests response a status code equal to that given
func (o *PostProcessautomationTriggersTopicTestTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostProcessautomationTriggersTopicTestTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/processautomation/triggers/topics/{topicName}/test][%d] postProcessautomationTriggersTopicTestTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostProcessautomationTriggersTopicTestTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/processautomation/triggers/topics/{topicName}/test][%d] postProcessautomationTriggersTopicTestTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostProcessautomationTriggersTopicTestTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostProcessautomationTriggersTopicTestTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostProcessautomationTriggersTopicTestInternalServerError creates a PostProcessautomationTriggersTopicTestInternalServerError with default headers values
func NewPostProcessautomationTriggersTopicTestInternalServerError() *PostProcessautomationTriggersTopicTestInternalServerError {
	return &PostProcessautomationTriggersTopicTestInternalServerError{}
}

/*
PostProcessautomationTriggersTopicTestInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostProcessautomationTriggersTopicTestInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post processautomation triggers topic test internal server error response has a 2xx status code
func (o *PostProcessautomationTriggersTopicTestInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post processautomation triggers topic test internal server error response has a 3xx status code
func (o *PostProcessautomationTriggersTopicTestInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post processautomation triggers topic test internal server error response has a 4xx status code
func (o *PostProcessautomationTriggersTopicTestInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post processautomation triggers topic test internal server error response has a 5xx status code
func (o *PostProcessautomationTriggersTopicTestInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post processautomation triggers topic test internal server error response a status code equal to that given
func (o *PostProcessautomationTriggersTopicTestInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostProcessautomationTriggersTopicTestInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/processautomation/triggers/topics/{topicName}/test][%d] postProcessautomationTriggersTopicTestInternalServerError  %+v", 500, o.Payload)
}

func (o *PostProcessautomationTriggersTopicTestInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/processautomation/triggers/topics/{topicName}/test][%d] postProcessautomationTriggersTopicTestInternalServerError  %+v", 500, o.Payload)
}

func (o *PostProcessautomationTriggersTopicTestInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostProcessautomationTriggersTopicTestInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostProcessautomationTriggersTopicTestServiceUnavailable creates a PostProcessautomationTriggersTopicTestServiceUnavailable with default headers values
func NewPostProcessautomationTriggersTopicTestServiceUnavailable() *PostProcessautomationTriggersTopicTestServiceUnavailable {
	return &PostProcessautomationTriggersTopicTestServiceUnavailable{}
}

/*
PostProcessautomationTriggersTopicTestServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostProcessautomationTriggersTopicTestServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post processautomation triggers topic test service unavailable response has a 2xx status code
func (o *PostProcessautomationTriggersTopicTestServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post processautomation triggers topic test service unavailable response has a 3xx status code
func (o *PostProcessautomationTriggersTopicTestServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post processautomation triggers topic test service unavailable response has a 4xx status code
func (o *PostProcessautomationTriggersTopicTestServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post processautomation triggers topic test service unavailable response has a 5xx status code
func (o *PostProcessautomationTriggersTopicTestServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post processautomation triggers topic test service unavailable response a status code equal to that given
func (o *PostProcessautomationTriggersTopicTestServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostProcessautomationTriggersTopicTestServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/processautomation/triggers/topics/{topicName}/test][%d] postProcessautomationTriggersTopicTestServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostProcessautomationTriggersTopicTestServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/processautomation/triggers/topics/{topicName}/test][%d] postProcessautomationTriggersTopicTestServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostProcessautomationTriggersTopicTestServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostProcessautomationTriggersTopicTestServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostProcessautomationTriggersTopicTestGatewayTimeout creates a PostProcessautomationTriggersTopicTestGatewayTimeout with default headers values
func NewPostProcessautomationTriggersTopicTestGatewayTimeout() *PostProcessautomationTriggersTopicTestGatewayTimeout {
	return &PostProcessautomationTriggersTopicTestGatewayTimeout{}
}

/*
PostProcessautomationTriggersTopicTestGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostProcessautomationTriggersTopicTestGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post processautomation triggers topic test gateway timeout response has a 2xx status code
func (o *PostProcessautomationTriggersTopicTestGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post processautomation triggers topic test gateway timeout response has a 3xx status code
func (o *PostProcessautomationTriggersTopicTestGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post processautomation triggers topic test gateway timeout response has a 4xx status code
func (o *PostProcessautomationTriggersTopicTestGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post processautomation triggers topic test gateway timeout response has a 5xx status code
func (o *PostProcessautomationTriggersTopicTestGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post processautomation triggers topic test gateway timeout response a status code equal to that given
func (o *PostProcessautomationTriggersTopicTestGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostProcessautomationTriggersTopicTestGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/processautomation/triggers/topics/{topicName}/test][%d] postProcessautomationTriggersTopicTestGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostProcessautomationTriggersTopicTestGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/processautomation/triggers/topics/{topicName}/test][%d] postProcessautomationTriggersTopicTestGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostProcessautomationTriggersTopicTestGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostProcessautomationTriggersTopicTestGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
