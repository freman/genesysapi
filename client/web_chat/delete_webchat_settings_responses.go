// Code generated by go-swagger; DO NOT EDIT.

package web_chat

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// DeleteWebchatSettingsReader is a Reader for the DeleteWebchatSettings structure.
type DeleteWebchatSettingsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteWebchatSettingsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteWebchatSettingsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteWebchatSettingsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteWebchatSettingsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteWebchatSettingsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteWebchatSettingsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewDeleteWebchatSettingsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewDeleteWebchatSettingsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDeleteWebchatSettingsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteWebchatSettingsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteWebchatSettingsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteWebchatSettingsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteWebchatSettingsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteWebchatSettingsNoContent creates a DeleteWebchatSettingsNoContent with default headers values
func NewDeleteWebchatSettingsNoContent() *DeleteWebchatSettingsNoContent {
	return &DeleteWebchatSettingsNoContent{}
}

/*
DeleteWebchatSettingsNoContent describes a response with status code 204, with default header values.

Deleted
*/
type DeleteWebchatSettingsNoContent struct {
}

// IsSuccess returns true when this delete webchat settings no content response has a 2xx status code
func (o *DeleteWebchatSettingsNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete webchat settings no content response has a 3xx status code
func (o *DeleteWebchatSettingsNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete webchat settings no content response has a 4xx status code
func (o *DeleteWebchatSettingsNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete webchat settings no content response has a 5xx status code
func (o *DeleteWebchatSettingsNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete webchat settings no content response a status code equal to that given
func (o *DeleteWebchatSettingsNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *DeleteWebchatSettingsNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/webchat/settings][%d] deleteWebchatSettingsNoContent ", 204)
}

func (o *DeleteWebchatSettingsNoContent) String() string {
	return fmt.Sprintf("[DELETE /api/v2/webchat/settings][%d] deleteWebchatSettingsNoContent ", 204)
}

func (o *DeleteWebchatSettingsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteWebchatSettingsBadRequest creates a DeleteWebchatSettingsBadRequest with default headers values
func NewDeleteWebchatSettingsBadRequest() *DeleteWebchatSettingsBadRequest {
	return &DeleteWebchatSettingsBadRequest{}
}

/*
DeleteWebchatSettingsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type DeleteWebchatSettingsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete webchat settings bad request response has a 2xx status code
func (o *DeleteWebchatSettingsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete webchat settings bad request response has a 3xx status code
func (o *DeleteWebchatSettingsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete webchat settings bad request response has a 4xx status code
func (o *DeleteWebchatSettingsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete webchat settings bad request response has a 5xx status code
func (o *DeleteWebchatSettingsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete webchat settings bad request response a status code equal to that given
func (o *DeleteWebchatSettingsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteWebchatSettingsBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/webchat/settings][%d] deleteWebchatSettingsBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteWebchatSettingsBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v2/webchat/settings][%d] deleteWebchatSettingsBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteWebchatSettingsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteWebchatSettingsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteWebchatSettingsUnauthorized creates a DeleteWebchatSettingsUnauthorized with default headers values
func NewDeleteWebchatSettingsUnauthorized() *DeleteWebchatSettingsUnauthorized {
	return &DeleteWebchatSettingsUnauthorized{}
}

/*
DeleteWebchatSettingsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type DeleteWebchatSettingsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete webchat settings unauthorized response has a 2xx status code
func (o *DeleteWebchatSettingsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete webchat settings unauthorized response has a 3xx status code
func (o *DeleteWebchatSettingsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete webchat settings unauthorized response has a 4xx status code
func (o *DeleteWebchatSettingsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete webchat settings unauthorized response has a 5xx status code
func (o *DeleteWebchatSettingsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete webchat settings unauthorized response a status code equal to that given
func (o *DeleteWebchatSettingsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteWebchatSettingsUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/webchat/settings][%d] deleteWebchatSettingsUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteWebchatSettingsUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/v2/webchat/settings][%d] deleteWebchatSettingsUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteWebchatSettingsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteWebchatSettingsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteWebchatSettingsForbidden creates a DeleteWebchatSettingsForbidden with default headers values
func NewDeleteWebchatSettingsForbidden() *DeleteWebchatSettingsForbidden {
	return &DeleteWebchatSettingsForbidden{}
}

/*
DeleteWebchatSettingsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type DeleteWebchatSettingsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete webchat settings forbidden response has a 2xx status code
func (o *DeleteWebchatSettingsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete webchat settings forbidden response has a 3xx status code
func (o *DeleteWebchatSettingsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete webchat settings forbidden response has a 4xx status code
func (o *DeleteWebchatSettingsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete webchat settings forbidden response has a 5xx status code
func (o *DeleteWebchatSettingsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete webchat settings forbidden response a status code equal to that given
func (o *DeleteWebchatSettingsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteWebchatSettingsForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/webchat/settings][%d] deleteWebchatSettingsForbidden  %+v", 403, o.Payload)
}

func (o *DeleteWebchatSettingsForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/v2/webchat/settings][%d] deleteWebchatSettingsForbidden  %+v", 403, o.Payload)
}

func (o *DeleteWebchatSettingsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteWebchatSettingsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteWebchatSettingsNotFound creates a DeleteWebchatSettingsNotFound with default headers values
func NewDeleteWebchatSettingsNotFound() *DeleteWebchatSettingsNotFound {
	return &DeleteWebchatSettingsNotFound{}
}

/*
DeleteWebchatSettingsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type DeleteWebchatSettingsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete webchat settings not found response has a 2xx status code
func (o *DeleteWebchatSettingsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete webchat settings not found response has a 3xx status code
func (o *DeleteWebchatSettingsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete webchat settings not found response has a 4xx status code
func (o *DeleteWebchatSettingsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete webchat settings not found response has a 5xx status code
func (o *DeleteWebchatSettingsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete webchat settings not found response a status code equal to that given
func (o *DeleteWebchatSettingsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteWebchatSettingsNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/webchat/settings][%d] deleteWebchatSettingsNotFound  %+v", 404, o.Payload)
}

func (o *DeleteWebchatSettingsNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v2/webchat/settings][%d] deleteWebchatSettingsNotFound  %+v", 404, o.Payload)
}

func (o *DeleteWebchatSettingsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteWebchatSettingsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteWebchatSettingsRequestTimeout creates a DeleteWebchatSettingsRequestTimeout with default headers values
func NewDeleteWebchatSettingsRequestTimeout() *DeleteWebchatSettingsRequestTimeout {
	return &DeleteWebchatSettingsRequestTimeout{}
}

/*
DeleteWebchatSettingsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type DeleteWebchatSettingsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete webchat settings request timeout response has a 2xx status code
func (o *DeleteWebchatSettingsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete webchat settings request timeout response has a 3xx status code
func (o *DeleteWebchatSettingsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete webchat settings request timeout response has a 4xx status code
func (o *DeleteWebchatSettingsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete webchat settings request timeout response has a 5xx status code
func (o *DeleteWebchatSettingsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this delete webchat settings request timeout response a status code equal to that given
func (o *DeleteWebchatSettingsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *DeleteWebchatSettingsRequestTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/webchat/settings][%d] deleteWebchatSettingsRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteWebchatSettingsRequestTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/webchat/settings][%d] deleteWebchatSettingsRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteWebchatSettingsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteWebchatSettingsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteWebchatSettingsRequestEntityTooLarge creates a DeleteWebchatSettingsRequestEntityTooLarge with default headers values
func NewDeleteWebchatSettingsRequestEntityTooLarge() *DeleteWebchatSettingsRequestEntityTooLarge {
	return &DeleteWebchatSettingsRequestEntityTooLarge{}
}

/*
DeleteWebchatSettingsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type DeleteWebchatSettingsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete webchat settings request entity too large response has a 2xx status code
func (o *DeleteWebchatSettingsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete webchat settings request entity too large response has a 3xx status code
func (o *DeleteWebchatSettingsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete webchat settings request entity too large response has a 4xx status code
func (o *DeleteWebchatSettingsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete webchat settings request entity too large response has a 5xx status code
func (o *DeleteWebchatSettingsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this delete webchat settings request entity too large response a status code equal to that given
func (o *DeleteWebchatSettingsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *DeleteWebchatSettingsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/webchat/settings][%d] deleteWebchatSettingsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteWebchatSettingsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[DELETE /api/v2/webchat/settings][%d] deleteWebchatSettingsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteWebchatSettingsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteWebchatSettingsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteWebchatSettingsUnsupportedMediaType creates a DeleteWebchatSettingsUnsupportedMediaType with default headers values
func NewDeleteWebchatSettingsUnsupportedMediaType() *DeleteWebchatSettingsUnsupportedMediaType {
	return &DeleteWebchatSettingsUnsupportedMediaType{}
}

/*
DeleteWebchatSettingsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type DeleteWebchatSettingsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete webchat settings unsupported media type response has a 2xx status code
func (o *DeleteWebchatSettingsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete webchat settings unsupported media type response has a 3xx status code
func (o *DeleteWebchatSettingsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete webchat settings unsupported media type response has a 4xx status code
func (o *DeleteWebchatSettingsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete webchat settings unsupported media type response has a 5xx status code
func (o *DeleteWebchatSettingsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this delete webchat settings unsupported media type response a status code equal to that given
func (o *DeleteWebchatSettingsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *DeleteWebchatSettingsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/webchat/settings][%d] deleteWebchatSettingsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteWebchatSettingsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[DELETE /api/v2/webchat/settings][%d] deleteWebchatSettingsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteWebchatSettingsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteWebchatSettingsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteWebchatSettingsTooManyRequests creates a DeleteWebchatSettingsTooManyRequests with default headers values
func NewDeleteWebchatSettingsTooManyRequests() *DeleteWebchatSettingsTooManyRequests {
	return &DeleteWebchatSettingsTooManyRequests{}
}

/*
DeleteWebchatSettingsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type DeleteWebchatSettingsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete webchat settings too many requests response has a 2xx status code
func (o *DeleteWebchatSettingsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete webchat settings too many requests response has a 3xx status code
func (o *DeleteWebchatSettingsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete webchat settings too many requests response has a 4xx status code
func (o *DeleteWebchatSettingsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete webchat settings too many requests response has a 5xx status code
func (o *DeleteWebchatSettingsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete webchat settings too many requests response a status code equal to that given
func (o *DeleteWebchatSettingsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *DeleteWebchatSettingsTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/webchat/settings][%d] deleteWebchatSettingsTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteWebchatSettingsTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /api/v2/webchat/settings][%d] deleteWebchatSettingsTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteWebchatSettingsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteWebchatSettingsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteWebchatSettingsInternalServerError creates a DeleteWebchatSettingsInternalServerError with default headers values
func NewDeleteWebchatSettingsInternalServerError() *DeleteWebchatSettingsInternalServerError {
	return &DeleteWebchatSettingsInternalServerError{}
}

/*
DeleteWebchatSettingsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type DeleteWebchatSettingsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete webchat settings internal server error response has a 2xx status code
func (o *DeleteWebchatSettingsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete webchat settings internal server error response has a 3xx status code
func (o *DeleteWebchatSettingsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete webchat settings internal server error response has a 4xx status code
func (o *DeleteWebchatSettingsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete webchat settings internal server error response has a 5xx status code
func (o *DeleteWebchatSettingsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete webchat settings internal server error response a status code equal to that given
func (o *DeleteWebchatSettingsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteWebchatSettingsInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/webchat/settings][%d] deleteWebchatSettingsInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteWebchatSettingsInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/v2/webchat/settings][%d] deleteWebchatSettingsInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteWebchatSettingsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteWebchatSettingsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteWebchatSettingsServiceUnavailable creates a DeleteWebchatSettingsServiceUnavailable with default headers values
func NewDeleteWebchatSettingsServiceUnavailable() *DeleteWebchatSettingsServiceUnavailable {
	return &DeleteWebchatSettingsServiceUnavailable{}
}

/*
DeleteWebchatSettingsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type DeleteWebchatSettingsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete webchat settings service unavailable response has a 2xx status code
func (o *DeleteWebchatSettingsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete webchat settings service unavailable response has a 3xx status code
func (o *DeleteWebchatSettingsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete webchat settings service unavailable response has a 4xx status code
func (o *DeleteWebchatSettingsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete webchat settings service unavailable response has a 5xx status code
func (o *DeleteWebchatSettingsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this delete webchat settings service unavailable response a status code equal to that given
func (o *DeleteWebchatSettingsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *DeleteWebchatSettingsServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/webchat/settings][%d] deleteWebchatSettingsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteWebchatSettingsServiceUnavailable) String() string {
	return fmt.Sprintf("[DELETE /api/v2/webchat/settings][%d] deleteWebchatSettingsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteWebchatSettingsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteWebchatSettingsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteWebchatSettingsGatewayTimeout creates a DeleteWebchatSettingsGatewayTimeout with default headers values
func NewDeleteWebchatSettingsGatewayTimeout() *DeleteWebchatSettingsGatewayTimeout {
	return &DeleteWebchatSettingsGatewayTimeout{}
}

/*
DeleteWebchatSettingsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type DeleteWebchatSettingsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete webchat settings gateway timeout response has a 2xx status code
func (o *DeleteWebchatSettingsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete webchat settings gateway timeout response has a 3xx status code
func (o *DeleteWebchatSettingsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete webchat settings gateway timeout response has a 4xx status code
func (o *DeleteWebchatSettingsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete webchat settings gateway timeout response has a 5xx status code
func (o *DeleteWebchatSettingsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this delete webchat settings gateway timeout response a status code equal to that given
func (o *DeleteWebchatSettingsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *DeleteWebchatSettingsGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/webchat/settings][%d] deleteWebchatSettingsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteWebchatSettingsGatewayTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/webchat/settings][%d] deleteWebchatSettingsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteWebchatSettingsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteWebchatSettingsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
