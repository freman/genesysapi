// Code generated by go-swagger; DO NOT EDIT.

package web_chat

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetWebchatGuestConversationMemberReader is a Reader for the GetWebchatGuestConversationMember structure.
type GetWebchatGuestConversationMemberReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetWebchatGuestConversationMemberReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetWebchatGuestConversationMemberOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetWebchatGuestConversationMemberBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetWebchatGuestConversationMemberUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetWebchatGuestConversationMemberForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetWebchatGuestConversationMemberNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetWebchatGuestConversationMemberRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetWebchatGuestConversationMemberRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetWebchatGuestConversationMemberUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetWebchatGuestConversationMemberTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetWebchatGuestConversationMemberInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetWebchatGuestConversationMemberServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetWebchatGuestConversationMemberGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetWebchatGuestConversationMemberOK creates a GetWebchatGuestConversationMemberOK with default headers values
func NewGetWebchatGuestConversationMemberOK() *GetWebchatGuestConversationMemberOK {
	return &GetWebchatGuestConversationMemberOK{}
}

/*
GetWebchatGuestConversationMemberOK describes a response with status code 200, with default header values.

successful operation
*/
type GetWebchatGuestConversationMemberOK struct {
	Payload *models.WebChatMemberInfo
}

// IsSuccess returns true when this get webchat guest conversation member o k response has a 2xx status code
func (o *GetWebchatGuestConversationMemberOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get webchat guest conversation member o k response has a 3xx status code
func (o *GetWebchatGuestConversationMemberOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get webchat guest conversation member o k response has a 4xx status code
func (o *GetWebchatGuestConversationMemberOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get webchat guest conversation member o k response has a 5xx status code
func (o *GetWebchatGuestConversationMemberOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get webchat guest conversation member o k response a status code equal to that given
func (o *GetWebchatGuestConversationMemberOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetWebchatGuestConversationMemberOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/webchat/guest/conversations/{conversationId}/members/{memberId}][%d] getWebchatGuestConversationMemberOK  %+v", 200, o.Payload)
}

func (o *GetWebchatGuestConversationMemberOK) String() string {
	return fmt.Sprintf("[GET /api/v2/webchat/guest/conversations/{conversationId}/members/{memberId}][%d] getWebchatGuestConversationMemberOK  %+v", 200, o.Payload)
}

func (o *GetWebchatGuestConversationMemberOK) GetPayload() *models.WebChatMemberInfo {
	return o.Payload
}

func (o *GetWebchatGuestConversationMemberOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WebChatMemberInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebchatGuestConversationMemberBadRequest creates a GetWebchatGuestConversationMemberBadRequest with default headers values
func NewGetWebchatGuestConversationMemberBadRequest() *GetWebchatGuestConversationMemberBadRequest {
	return &GetWebchatGuestConversationMemberBadRequest{}
}

/*
GetWebchatGuestConversationMemberBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetWebchatGuestConversationMemberBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get webchat guest conversation member bad request response has a 2xx status code
func (o *GetWebchatGuestConversationMemberBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get webchat guest conversation member bad request response has a 3xx status code
func (o *GetWebchatGuestConversationMemberBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get webchat guest conversation member bad request response has a 4xx status code
func (o *GetWebchatGuestConversationMemberBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get webchat guest conversation member bad request response has a 5xx status code
func (o *GetWebchatGuestConversationMemberBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get webchat guest conversation member bad request response a status code equal to that given
func (o *GetWebchatGuestConversationMemberBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetWebchatGuestConversationMemberBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/webchat/guest/conversations/{conversationId}/members/{memberId}][%d] getWebchatGuestConversationMemberBadRequest  %+v", 400, o.Payload)
}

func (o *GetWebchatGuestConversationMemberBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/webchat/guest/conversations/{conversationId}/members/{memberId}][%d] getWebchatGuestConversationMemberBadRequest  %+v", 400, o.Payload)
}

func (o *GetWebchatGuestConversationMemberBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebchatGuestConversationMemberBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebchatGuestConversationMemberUnauthorized creates a GetWebchatGuestConversationMemberUnauthorized with default headers values
func NewGetWebchatGuestConversationMemberUnauthorized() *GetWebchatGuestConversationMemberUnauthorized {
	return &GetWebchatGuestConversationMemberUnauthorized{}
}

/*
GetWebchatGuestConversationMemberUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetWebchatGuestConversationMemberUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get webchat guest conversation member unauthorized response has a 2xx status code
func (o *GetWebchatGuestConversationMemberUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get webchat guest conversation member unauthorized response has a 3xx status code
func (o *GetWebchatGuestConversationMemberUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get webchat guest conversation member unauthorized response has a 4xx status code
func (o *GetWebchatGuestConversationMemberUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get webchat guest conversation member unauthorized response has a 5xx status code
func (o *GetWebchatGuestConversationMemberUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get webchat guest conversation member unauthorized response a status code equal to that given
func (o *GetWebchatGuestConversationMemberUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetWebchatGuestConversationMemberUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/webchat/guest/conversations/{conversationId}/members/{memberId}][%d] getWebchatGuestConversationMemberUnauthorized  %+v", 401, o.Payload)
}

func (o *GetWebchatGuestConversationMemberUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/webchat/guest/conversations/{conversationId}/members/{memberId}][%d] getWebchatGuestConversationMemberUnauthorized  %+v", 401, o.Payload)
}

func (o *GetWebchatGuestConversationMemberUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebchatGuestConversationMemberUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebchatGuestConversationMemberForbidden creates a GetWebchatGuestConversationMemberForbidden with default headers values
func NewGetWebchatGuestConversationMemberForbidden() *GetWebchatGuestConversationMemberForbidden {
	return &GetWebchatGuestConversationMemberForbidden{}
}

/*
GetWebchatGuestConversationMemberForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetWebchatGuestConversationMemberForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get webchat guest conversation member forbidden response has a 2xx status code
func (o *GetWebchatGuestConversationMemberForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get webchat guest conversation member forbidden response has a 3xx status code
func (o *GetWebchatGuestConversationMemberForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get webchat guest conversation member forbidden response has a 4xx status code
func (o *GetWebchatGuestConversationMemberForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get webchat guest conversation member forbidden response has a 5xx status code
func (o *GetWebchatGuestConversationMemberForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get webchat guest conversation member forbidden response a status code equal to that given
func (o *GetWebchatGuestConversationMemberForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetWebchatGuestConversationMemberForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/webchat/guest/conversations/{conversationId}/members/{memberId}][%d] getWebchatGuestConversationMemberForbidden  %+v", 403, o.Payload)
}

func (o *GetWebchatGuestConversationMemberForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/webchat/guest/conversations/{conversationId}/members/{memberId}][%d] getWebchatGuestConversationMemberForbidden  %+v", 403, o.Payload)
}

func (o *GetWebchatGuestConversationMemberForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebchatGuestConversationMemberForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebchatGuestConversationMemberNotFound creates a GetWebchatGuestConversationMemberNotFound with default headers values
func NewGetWebchatGuestConversationMemberNotFound() *GetWebchatGuestConversationMemberNotFound {
	return &GetWebchatGuestConversationMemberNotFound{}
}

/*
GetWebchatGuestConversationMemberNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetWebchatGuestConversationMemberNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get webchat guest conversation member not found response has a 2xx status code
func (o *GetWebchatGuestConversationMemberNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get webchat guest conversation member not found response has a 3xx status code
func (o *GetWebchatGuestConversationMemberNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get webchat guest conversation member not found response has a 4xx status code
func (o *GetWebchatGuestConversationMemberNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get webchat guest conversation member not found response has a 5xx status code
func (o *GetWebchatGuestConversationMemberNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get webchat guest conversation member not found response a status code equal to that given
func (o *GetWebchatGuestConversationMemberNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetWebchatGuestConversationMemberNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/webchat/guest/conversations/{conversationId}/members/{memberId}][%d] getWebchatGuestConversationMemberNotFound  %+v", 404, o.Payload)
}

func (o *GetWebchatGuestConversationMemberNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/webchat/guest/conversations/{conversationId}/members/{memberId}][%d] getWebchatGuestConversationMemberNotFound  %+v", 404, o.Payload)
}

func (o *GetWebchatGuestConversationMemberNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebchatGuestConversationMemberNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebchatGuestConversationMemberRequestTimeout creates a GetWebchatGuestConversationMemberRequestTimeout with default headers values
func NewGetWebchatGuestConversationMemberRequestTimeout() *GetWebchatGuestConversationMemberRequestTimeout {
	return &GetWebchatGuestConversationMemberRequestTimeout{}
}

/*
GetWebchatGuestConversationMemberRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetWebchatGuestConversationMemberRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get webchat guest conversation member request timeout response has a 2xx status code
func (o *GetWebchatGuestConversationMemberRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get webchat guest conversation member request timeout response has a 3xx status code
func (o *GetWebchatGuestConversationMemberRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get webchat guest conversation member request timeout response has a 4xx status code
func (o *GetWebchatGuestConversationMemberRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get webchat guest conversation member request timeout response has a 5xx status code
func (o *GetWebchatGuestConversationMemberRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get webchat guest conversation member request timeout response a status code equal to that given
func (o *GetWebchatGuestConversationMemberRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetWebchatGuestConversationMemberRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/webchat/guest/conversations/{conversationId}/members/{memberId}][%d] getWebchatGuestConversationMemberRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetWebchatGuestConversationMemberRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/webchat/guest/conversations/{conversationId}/members/{memberId}][%d] getWebchatGuestConversationMemberRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetWebchatGuestConversationMemberRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebchatGuestConversationMemberRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebchatGuestConversationMemberRequestEntityTooLarge creates a GetWebchatGuestConversationMemberRequestEntityTooLarge with default headers values
func NewGetWebchatGuestConversationMemberRequestEntityTooLarge() *GetWebchatGuestConversationMemberRequestEntityTooLarge {
	return &GetWebchatGuestConversationMemberRequestEntityTooLarge{}
}

/*
GetWebchatGuestConversationMemberRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetWebchatGuestConversationMemberRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get webchat guest conversation member request entity too large response has a 2xx status code
func (o *GetWebchatGuestConversationMemberRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get webchat guest conversation member request entity too large response has a 3xx status code
func (o *GetWebchatGuestConversationMemberRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get webchat guest conversation member request entity too large response has a 4xx status code
func (o *GetWebchatGuestConversationMemberRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get webchat guest conversation member request entity too large response has a 5xx status code
func (o *GetWebchatGuestConversationMemberRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get webchat guest conversation member request entity too large response a status code equal to that given
func (o *GetWebchatGuestConversationMemberRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetWebchatGuestConversationMemberRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/webchat/guest/conversations/{conversationId}/members/{memberId}][%d] getWebchatGuestConversationMemberRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetWebchatGuestConversationMemberRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/webchat/guest/conversations/{conversationId}/members/{memberId}][%d] getWebchatGuestConversationMemberRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetWebchatGuestConversationMemberRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebchatGuestConversationMemberRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebchatGuestConversationMemberUnsupportedMediaType creates a GetWebchatGuestConversationMemberUnsupportedMediaType with default headers values
func NewGetWebchatGuestConversationMemberUnsupportedMediaType() *GetWebchatGuestConversationMemberUnsupportedMediaType {
	return &GetWebchatGuestConversationMemberUnsupportedMediaType{}
}

/*
GetWebchatGuestConversationMemberUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetWebchatGuestConversationMemberUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get webchat guest conversation member unsupported media type response has a 2xx status code
func (o *GetWebchatGuestConversationMemberUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get webchat guest conversation member unsupported media type response has a 3xx status code
func (o *GetWebchatGuestConversationMemberUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get webchat guest conversation member unsupported media type response has a 4xx status code
func (o *GetWebchatGuestConversationMemberUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get webchat guest conversation member unsupported media type response has a 5xx status code
func (o *GetWebchatGuestConversationMemberUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get webchat guest conversation member unsupported media type response a status code equal to that given
func (o *GetWebchatGuestConversationMemberUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetWebchatGuestConversationMemberUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/webchat/guest/conversations/{conversationId}/members/{memberId}][%d] getWebchatGuestConversationMemberUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetWebchatGuestConversationMemberUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/webchat/guest/conversations/{conversationId}/members/{memberId}][%d] getWebchatGuestConversationMemberUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetWebchatGuestConversationMemberUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebchatGuestConversationMemberUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebchatGuestConversationMemberTooManyRequests creates a GetWebchatGuestConversationMemberTooManyRequests with default headers values
func NewGetWebchatGuestConversationMemberTooManyRequests() *GetWebchatGuestConversationMemberTooManyRequests {
	return &GetWebchatGuestConversationMemberTooManyRequests{}
}

/*
GetWebchatGuestConversationMemberTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetWebchatGuestConversationMemberTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get webchat guest conversation member too many requests response has a 2xx status code
func (o *GetWebchatGuestConversationMemberTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get webchat guest conversation member too many requests response has a 3xx status code
func (o *GetWebchatGuestConversationMemberTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get webchat guest conversation member too many requests response has a 4xx status code
func (o *GetWebchatGuestConversationMemberTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get webchat guest conversation member too many requests response has a 5xx status code
func (o *GetWebchatGuestConversationMemberTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get webchat guest conversation member too many requests response a status code equal to that given
func (o *GetWebchatGuestConversationMemberTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetWebchatGuestConversationMemberTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/webchat/guest/conversations/{conversationId}/members/{memberId}][%d] getWebchatGuestConversationMemberTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetWebchatGuestConversationMemberTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/webchat/guest/conversations/{conversationId}/members/{memberId}][%d] getWebchatGuestConversationMemberTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetWebchatGuestConversationMemberTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebchatGuestConversationMemberTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebchatGuestConversationMemberInternalServerError creates a GetWebchatGuestConversationMemberInternalServerError with default headers values
func NewGetWebchatGuestConversationMemberInternalServerError() *GetWebchatGuestConversationMemberInternalServerError {
	return &GetWebchatGuestConversationMemberInternalServerError{}
}

/*
GetWebchatGuestConversationMemberInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetWebchatGuestConversationMemberInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get webchat guest conversation member internal server error response has a 2xx status code
func (o *GetWebchatGuestConversationMemberInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get webchat guest conversation member internal server error response has a 3xx status code
func (o *GetWebchatGuestConversationMemberInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get webchat guest conversation member internal server error response has a 4xx status code
func (o *GetWebchatGuestConversationMemberInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get webchat guest conversation member internal server error response has a 5xx status code
func (o *GetWebchatGuestConversationMemberInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get webchat guest conversation member internal server error response a status code equal to that given
func (o *GetWebchatGuestConversationMemberInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetWebchatGuestConversationMemberInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/webchat/guest/conversations/{conversationId}/members/{memberId}][%d] getWebchatGuestConversationMemberInternalServerError  %+v", 500, o.Payload)
}

func (o *GetWebchatGuestConversationMemberInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/webchat/guest/conversations/{conversationId}/members/{memberId}][%d] getWebchatGuestConversationMemberInternalServerError  %+v", 500, o.Payload)
}

func (o *GetWebchatGuestConversationMemberInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebchatGuestConversationMemberInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebchatGuestConversationMemberServiceUnavailable creates a GetWebchatGuestConversationMemberServiceUnavailable with default headers values
func NewGetWebchatGuestConversationMemberServiceUnavailable() *GetWebchatGuestConversationMemberServiceUnavailable {
	return &GetWebchatGuestConversationMemberServiceUnavailable{}
}

/*
GetWebchatGuestConversationMemberServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetWebchatGuestConversationMemberServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get webchat guest conversation member service unavailable response has a 2xx status code
func (o *GetWebchatGuestConversationMemberServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get webchat guest conversation member service unavailable response has a 3xx status code
func (o *GetWebchatGuestConversationMemberServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get webchat guest conversation member service unavailable response has a 4xx status code
func (o *GetWebchatGuestConversationMemberServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get webchat guest conversation member service unavailable response has a 5xx status code
func (o *GetWebchatGuestConversationMemberServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get webchat guest conversation member service unavailable response a status code equal to that given
func (o *GetWebchatGuestConversationMemberServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetWebchatGuestConversationMemberServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/webchat/guest/conversations/{conversationId}/members/{memberId}][%d] getWebchatGuestConversationMemberServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetWebchatGuestConversationMemberServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/webchat/guest/conversations/{conversationId}/members/{memberId}][%d] getWebchatGuestConversationMemberServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetWebchatGuestConversationMemberServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebchatGuestConversationMemberServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebchatGuestConversationMemberGatewayTimeout creates a GetWebchatGuestConversationMemberGatewayTimeout with default headers values
func NewGetWebchatGuestConversationMemberGatewayTimeout() *GetWebchatGuestConversationMemberGatewayTimeout {
	return &GetWebchatGuestConversationMemberGatewayTimeout{}
}

/*
GetWebchatGuestConversationMemberGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetWebchatGuestConversationMemberGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get webchat guest conversation member gateway timeout response has a 2xx status code
func (o *GetWebchatGuestConversationMemberGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get webchat guest conversation member gateway timeout response has a 3xx status code
func (o *GetWebchatGuestConversationMemberGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get webchat guest conversation member gateway timeout response has a 4xx status code
func (o *GetWebchatGuestConversationMemberGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get webchat guest conversation member gateway timeout response has a 5xx status code
func (o *GetWebchatGuestConversationMemberGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get webchat guest conversation member gateway timeout response a status code equal to that given
func (o *GetWebchatGuestConversationMemberGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetWebchatGuestConversationMemberGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/webchat/guest/conversations/{conversationId}/members/{memberId}][%d] getWebchatGuestConversationMemberGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetWebchatGuestConversationMemberGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/webchat/guest/conversations/{conversationId}/members/{memberId}][%d] getWebchatGuestConversationMemberGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetWebchatGuestConversationMemberGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebchatGuestConversationMemberGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
