// Code generated by go-swagger; DO NOT EDIT.

package web_chat

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetWebchatGuestConversationMembersParams creates a new GetWebchatGuestConversationMembersParams object
// with the default values initialized.
func NewGetWebchatGuestConversationMembersParams() *GetWebchatGuestConversationMembersParams {
	var (
		excludeDisconnectedMembersDefault = bool(false)
		pageNumberDefault                 = int32(1)
		pageSizeDefault                   = int32(25)
	)
	return &GetWebchatGuestConversationMembersParams{
		ExcludeDisconnectedMembers: &excludeDisconnectedMembersDefault,
		PageNumber:                 &pageNumberDefault,
		PageSize:                   &pageSizeDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewGetWebchatGuestConversationMembersParamsWithTimeout creates a new GetWebchatGuestConversationMembersParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetWebchatGuestConversationMembersParamsWithTimeout(timeout time.Duration) *GetWebchatGuestConversationMembersParams {
	var (
		excludeDisconnectedMembersDefault = bool(false)
		pageNumberDefault                 = int32(1)
		pageSizeDefault                   = int32(25)
	)
	return &GetWebchatGuestConversationMembersParams{
		ExcludeDisconnectedMembers: &excludeDisconnectedMembersDefault,
		PageNumber:                 &pageNumberDefault,
		PageSize:                   &pageSizeDefault,

		timeout: timeout,
	}
}

// NewGetWebchatGuestConversationMembersParamsWithContext creates a new GetWebchatGuestConversationMembersParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetWebchatGuestConversationMembersParamsWithContext(ctx context.Context) *GetWebchatGuestConversationMembersParams {
	var (
		excludeDisconnectedMembersDefault = bool(false)
		pageNumberDefault                 = int32(1)
		pageSizeDefault                   = int32(25)
	)
	return &GetWebchatGuestConversationMembersParams{
		ExcludeDisconnectedMembers: &excludeDisconnectedMembersDefault,
		PageNumber:                 &pageNumberDefault,
		PageSize:                   &pageSizeDefault,

		Context: ctx,
	}
}

// NewGetWebchatGuestConversationMembersParamsWithHTTPClient creates a new GetWebchatGuestConversationMembersParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetWebchatGuestConversationMembersParamsWithHTTPClient(client *http.Client) *GetWebchatGuestConversationMembersParams {
	var (
		excludeDisconnectedMembersDefault = bool(false)
		pageNumberDefault                 = int32(1)
		pageSizeDefault                   = int32(25)
	)
	return &GetWebchatGuestConversationMembersParams{
		ExcludeDisconnectedMembers: &excludeDisconnectedMembersDefault,
		PageNumber:                 &pageNumberDefault,
		PageSize:                   &pageSizeDefault,
		HTTPClient:                 client,
	}
}

/*GetWebchatGuestConversationMembersParams contains all the parameters to send to the API endpoint
for the get webchat guest conversation members operation typically these are written to a http.Request
*/
type GetWebchatGuestConversationMembersParams struct {

	/*ConversationID
	  conversationId

	*/
	ConversationID string
	/*ExcludeDisconnectedMembers
	  If true, the results will not contain members who have a DISCONNECTED state.

	*/
	ExcludeDisconnectedMembers *bool
	/*PageNumber
	  The page number to return, or omitted for the first page.

	*/
	PageNumber *int32
	/*PageSize
	  The number of entries to return per page, or omitted for the default.

	*/
	PageSize *int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get webchat guest conversation members params
func (o *GetWebchatGuestConversationMembersParams) WithTimeout(timeout time.Duration) *GetWebchatGuestConversationMembersParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get webchat guest conversation members params
func (o *GetWebchatGuestConversationMembersParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get webchat guest conversation members params
func (o *GetWebchatGuestConversationMembersParams) WithContext(ctx context.Context) *GetWebchatGuestConversationMembersParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get webchat guest conversation members params
func (o *GetWebchatGuestConversationMembersParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get webchat guest conversation members params
func (o *GetWebchatGuestConversationMembersParams) WithHTTPClient(client *http.Client) *GetWebchatGuestConversationMembersParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get webchat guest conversation members params
func (o *GetWebchatGuestConversationMembersParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithConversationID adds the conversationID to the get webchat guest conversation members params
func (o *GetWebchatGuestConversationMembersParams) WithConversationID(conversationID string) *GetWebchatGuestConversationMembersParams {
	o.SetConversationID(conversationID)
	return o
}

// SetConversationID adds the conversationId to the get webchat guest conversation members params
func (o *GetWebchatGuestConversationMembersParams) SetConversationID(conversationID string) {
	o.ConversationID = conversationID
}

// WithExcludeDisconnectedMembers adds the excludeDisconnectedMembers to the get webchat guest conversation members params
func (o *GetWebchatGuestConversationMembersParams) WithExcludeDisconnectedMembers(excludeDisconnectedMembers *bool) *GetWebchatGuestConversationMembersParams {
	o.SetExcludeDisconnectedMembers(excludeDisconnectedMembers)
	return o
}

// SetExcludeDisconnectedMembers adds the excludeDisconnectedMembers to the get webchat guest conversation members params
func (o *GetWebchatGuestConversationMembersParams) SetExcludeDisconnectedMembers(excludeDisconnectedMembers *bool) {
	o.ExcludeDisconnectedMembers = excludeDisconnectedMembers
}

// WithPageNumber adds the pageNumber to the get webchat guest conversation members params
func (o *GetWebchatGuestConversationMembersParams) WithPageNumber(pageNumber *int32) *GetWebchatGuestConversationMembersParams {
	o.SetPageNumber(pageNumber)
	return o
}

// SetPageNumber adds the pageNumber to the get webchat guest conversation members params
func (o *GetWebchatGuestConversationMembersParams) SetPageNumber(pageNumber *int32) {
	o.PageNumber = pageNumber
}

// WithPageSize adds the pageSize to the get webchat guest conversation members params
func (o *GetWebchatGuestConversationMembersParams) WithPageSize(pageSize *int32) *GetWebchatGuestConversationMembersParams {
	o.SetPageSize(pageSize)
	return o
}

// SetPageSize adds the pageSize to the get webchat guest conversation members params
func (o *GetWebchatGuestConversationMembersParams) SetPageSize(pageSize *int32) {
	o.PageSize = pageSize
}

// WriteToRequest writes these params to a swagger request
func (o *GetWebchatGuestConversationMembersParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param conversationId
	if err := r.SetPathParam("conversationId", o.ConversationID); err != nil {
		return err
	}

	if o.ExcludeDisconnectedMembers != nil {

		// query param excludeDisconnectedMembers
		var qrExcludeDisconnectedMembers bool
		if o.ExcludeDisconnectedMembers != nil {
			qrExcludeDisconnectedMembers = *o.ExcludeDisconnectedMembers
		}
		qExcludeDisconnectedMembers := swag.FormatBool(qrExcludeDisconnectedMembers)
		if qExcludeDisconnectedMembers != "" {
			if err := r.SetQueryParam("excludeDisconnectedMembers", qExcludeDisconnectedMembers); err != nil {
				return err
			}
		}

	}

	if o.PageNumber != nil {

		// query param pageNumber
		var qrPageNumber int32
		if o.PageNumber != nil {
			qrPageNumber = *o.PageNumber
		}
		qPageNumber := swag.FormatInt32(qrPageNumber)
		if qPageNumber != "" {
			if err := r.SetQueryParam("pageNumber", qPageNumber); err != nil {
				return err
			}
		}

	}

	if o.PageSize != nil {

		// query param pageSize
		var qrPageSize int32
		if o.PageSize != nil {
			qrPageSize = *o.PageSize
		}
		qPageSize := swag.FormatInt32(qrPageSize)
		if qPageSize != "" {
			if err := r.SetQueryParam("pageSize", qPageSize); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
