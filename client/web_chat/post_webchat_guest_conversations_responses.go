// Code generated by go-swagger; DO NOT EDIT.

package web_chat

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostWebchatGuestConversationsReader is a Reader for the PostWebchatGuestConversations structure.
type PostWebchatGuestConversationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostWebchatGuestConversationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostWebchatGuestConversationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostWebchatGuestConversationsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostWebchatGuestConversationsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostWebchatGuestConversationsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostWebchatGuestConversationsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostWebchatGuestConversationsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostWebchatGuestConversationsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostWebchatGuestConversationsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostWebchatGuestConversationsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostWebchatGuestConversationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostWebchatGuestConversationsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostWebchatGuestConversationsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostWebchatGuestConversationsOK creates a PostWebchatGuestConversationsOK with default headers values
func NewPostWebchatGuestConversationsOK() *PostWebchatGuestConversationsOK {
	return &PostWebchatGuestConversationsOK{}
}

/*
PostWebchatGuestConversationsOK describes a response with status code 200, with default header values.

successful operation
*/
type PostWebchatGuestConversationsOK struct {
	Payload *models.CreateWebChatConversationResponse
}

// IsSuccess returns true when this post webchat guest conversations o k response has a 2xx status code
func (o *PostWebchatGuestConversationsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post webchat guest conversations o k response has a 3xx status code
func (o *PostWebchatGuestConversationsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post webchat guest conversations o k response has a 4xx status code
func (o *PostWebchatGuestConversationsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post webchat guest conversations o k response has a 5xx status code
func (o *PostWebchatGuestConversationsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post webchat guest conversations o k response a status code equal to that given
func (o *PostWebchatGuestConversationsOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostWebchatGuestConversationsOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/webchat/guest/conversations][%d] postWebchatGuestConversationsOK  %+v", 200, o.Payload)
}

func (o *PostWebchatGuestConversationsOK) String() string {
	return fmt.Sprintf("[POST /api/v2/webchat/guest/conversations][%d] postWebchatGuestConversationsOK  %+v", 200, o.Payload)
}

func (o *PostWebchatGuestConversationsOK) GetPayload() *models.CreateWebChatConversationResponse {
	return o.Payload
}

func (o *PostWebchatGuestConversationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CreateWebChatConversationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostWebchatGuestConversationsBadRequest creates a PostWebchatGuestConversationsBadRequest with default headers values
func NewPostWebchatGuestConversationsBadRequest() *PostWebchatGuestConversationsBadRequest {
	return &PostWebchatGuestConversationsBadRequest{}
}

/*
PostWebchatGuestConversationsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostWebchatGuestConversationsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post webchat guest conversations bad request response has a 2xx status code
func (o *PostWebchatGuestConversationsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post webchat guest conversations bad request response has a 3xx status code
func (o *PostWebchatGuestConversationsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post webchat guest conversations bad request response has a 4xx status code
func (o *PostWebchatGuestConversationsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post webchat guest conversations bad request response has a 5xx status code
func (o *PostWebchatGuestConversationsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post webchat guest conversations bad request response a status code equal to that given
func (o *PostWebchatGuestConversationsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostWebchatGuestConversationsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/webchat/guest/conversations][%d] postWebchatGuestConversationsBadRequest  %+v", 400, o.Payload)
}

func (o *PostWebchatGuestConversationsBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/webchat/guest/conversations][%d] postWebchatGuestConversationsBadRequest  %+v", 400, o.Payload)
}

func (o *PostWebchatGuestConversationsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostWebchatGuestConversationsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostWebchatGuestConversationsUnauthorized creates a PostWebchatGuestConversationsUnauthorized with default headers values
func NewPostWebchatGuestConversationsUnauthorized() *PostWebchatGuestConversationsUnauthorized {
	return &PostWebchatGuestConversationsUnauthorized{}
}

/*
PostWebchatGuestConversationsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostWebchatGuestConversationsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post webchat guest conversations unauthorized response has a 2xx status code
func (o *PostWebchatGuestConversationsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post webchat guest conversations unauthorized response has a 3xx status code
func (o *PostWebchatGuestConversationsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post webchat guest conversations unauthorized response has a 4xx status code
func (o *PostWebchatGuestConversationsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post webchat guest conversations unauthorized response has a 5xx status code
func (o *PostWebchatGuestConversationsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post webchat guest conversations unauthorized response a status code equal to that given
func (o *PostWebchatGuestConversationsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostWebchatGuestConversationsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/webchat/guest/conversations][%d] postWebchatGuestConversationsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostWebchatGuestConversationsUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/webchat/guest/conversations][%d] postWebchatGuestConversationsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostWebchatGuestConversationsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostWebchatGuestConversationsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostWebchatGuestConversationsForbidden creates a PostWebchatGuestConversationsForbidden with default headers values
func NewPostWebchatGuestConversationsForbidden() *PostWebchatGuestConversationsForbidden {
	return &PostWebchatGuestConversationsForbidden{}
}

/*
PostWebchatGuestConversationsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostWebchatGuestConversationsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post webchat guest conversations forbidden response has a 2xx status code
func (o *PostWebchatGuestConversationsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post webchat guest conversations forbidden response has a 3xx status code
func (o *PostWebchatGuestConversationsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post webchat guest conversations forbidden response has a 4xx status code
func (o *PostWebchatGuestConversationsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post webchat guest conversations forbidden response has a 5xx status code
func (o *PostWebchatGuestConversationsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post webchat guest conversations forbidden response a status code equal to that given
func (o *PostWebchatGuestConversationsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostWebchatGuestConversationsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/webchat/guest/conversations][%d] postWebchatGuestConversationsForbidden  %+v", 403, o.Payload)
}

func (o *PostWebchatGuestConversationsForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/webchat/guest/conversations][%d] postWebchatGuestConversationsForbidden  %+v", 403, o.Payload)
}

func (o *PostWebchatGuestConversationsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostWebchatGuestConversationsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostWebchatGuestConversationsNotFound creates a PostWebchatGuestConversationsNotFound with default headers values
func NewPostWebchatGuestConversationsNotFound() *PostWebchatGuestConversationsNotFound {
	return &PostWebchatGuestConversationsNotFound{}
}

/*
PostWebchatGuestConversationsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostWebchatGuestConversationsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post webchat guest conversations not found response has a 2xx status code
func (o *PostWebchatGuestConversationsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post webchat guest conversations not found response has a 3xx status code
func (o *PostWebchatGuestConversationsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post webchat guest conversations not found response has a 4xx status code
func (o *PostWebchatGuestConversationsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post webchat guest conversations not found response has a 5xx status code
func (o *PostWebchatGuestConversationsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post webchat guest conversations not found response a status code equal to that given
func (o *PostWebchatGuestConversationsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostWebchatGuestConversationsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/webchat/guest/conversations][%d] postWebchatGuestConversationsNotFound  %+v", 404, o.Payload)
}

func (o *PostWebchatGuestConversationsNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/webchat/guest/conversations][%d] postWebchatGuestConversationsNotFound  %+v", 404, o.Payload)
}

func (o *PostWebchatGuestConversationsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostWebchatGuestConversationsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostWebchatGuestConversationsRequestTimeout creates a PostWebchatGuestConversationsRequestTimeout with default headers values
func NewPostWebchatGuestConversationsRequestTimeout() *PostWebchatGuestConversationsRequestTimeout {
	return &PostWebchatGuestConversationsRequestTimeout{}
}

/*
PostWebchatGuestConversationsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostWebchatGuestConversationsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post webchat guest conversations request timeout response has a 2xx status code
func (o *PostWebchatGuestConversationsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post webchat guest conversations request timeout response has a 3xx status code
func (o *PostWebchatGuestConversationsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post webchat guest conversations request timeout response has a 4xx status code
func (o *PostWebchatGuestConversationsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post webchat guest conversations request timeout response has a 5xx status code
func (o *PostWebchatGuestConversationsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post webchat guest conversations request timeout response a status code equal to that given
func (o *PostWebchatGuestConversationsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostWebchatGuestConversationsRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/webchat/guest/conversations][%d] postWebchatGuestConversationsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostWebchatGuestConversationsRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/webchat/guest/conversations][%d] postWebchatGuestConversationsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostWebchatGuestConversationsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostWebchatGuestConversationsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostWebchatGuestConversationsRequestEntityTooLarge creates a PostWebchatGuestConversationsRequestEntityTooLarge with default headers values
func NewPostWebchatGuestConversationsRequestEntityTooLarge() *PostWebchatGuestConversationsRequestEntityTooLarge {
	return &PostWebchatGuestConversationsRequestEntityTooLarge{}
}

/*
PostWebchatGuestConversationsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PostWebchatGuestConversationsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post webchat guest conversations request entity too large response has a 2xx status code
func (o *PostWebchatGuestConversationsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post webchat guest conversations request entity too large response has a 3xx status code
func (o *PostWebchatGuestConversationsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post webchat guest conversations request entity too large response has a 4xx status code
func (o *PostWebchatGuestConversationsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post webchat guest conversations request entity too large response has a 5xx status code
func (o *PostWebchatGuestConversationsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post webchat guest conversations request entity too large response a status code equal to that given
func (o *PostWebchatGuestConversationsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostWebchatGuestConversationsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/webchat/guest/conversations][%d] postWebchatGuestConversationsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostWebchatGuestConversationsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/webchat/guest/conversations][%d] postWebchatGuestConversationsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostWebchatGuestConversationsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostWebchatGuestConversationsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostWebchatGuestConversationsUnsupportedMediaType creates a PostWebchatGuestConversationsUnsupportedMediaType with default headers values
func NewPostWebchatGuestConversationsUnsupportedMediaType() *PostWebchatGuestConversationsUnsupportedMediaType {
	return &PostWebchatGuestConversationsUnsupportedMediaType{}
}

/*
PostWebchatGuestConversationsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostWebchatGuestConversationsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post webchat guest conversations unsupported media type response has a 2xx status code
func (o *PostWebchatGuestConversationsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post webchat guest conversations unsupported media type response has a 3xx status code
func (o *PostWebchatGuestConversationsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post webchat guest conversations unsupported media type response has a 4xx status code
func (o *PostWebchatGuestConversationsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post webchat guest conversations unsupported media type response has a 5xx status code
func (o *PostWebchatGuestConversationsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post webchat guest conversations unsupported media type response a status code equal to that given
func (o *PostWebchatGuestConversationsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostWebchatGuestConversationsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/webchat/guest/conversations][%d] postWebchatGuestConversationsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostWebchatGuestConversationsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/webchat/guest/conversations][%d] postWebchatGuestConversationsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostWebchatGuestConversationsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostWebchatGuestConversationsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostWebchatGuestConversationsTooManyRequests creates a PostWebchatGuestConversationsTooManyRequests with default headers values
func NewPostWebchatGuestConversationsTooManyRequests() *PostWebchatGuestConversationsTooManyRequests {
	return &PostWebchatGuestConversationsTooManyRequests{}
}

/*
PostWebchatGuestConversationsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostWebchatGuestConversationsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post webchat guest conversations too many requests response has a 2xx status code
func (o *PostWebchatGuestConversationsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post webchat guest conversations too many requests response has a 3xx status code
func (o *PostWebchatGuestConversationsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post webchat guest conversations too many requests response has a 4xx status code
func (o *PostWebchatGuestConversationsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post webchat guest conversations too many requests response has a 5xx status code
func (o *PostWebchatGuestConversationsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post webchat guest conversations too many requests response a status code equal to that given
func (o *PostWebchatGuestConversationsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostWebchatGuestConversationsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/webchat/guest/conversations][%d] postWebchatGuestConversationsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostWebchatGuestConversationsTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/webchat/guest/conversations][%d] postWebchatGuestConversationsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostWebchatGuestConversationsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostWebchatGuestConversationsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostWebchatGuestConversationsInternalServerError creates a PostWebchatGuestConversationsInternalServerError with default headers values
func NewPostWebchatGuestConversationsInternalServerError() *PostWebchatGuestConversationsInternalServerError {
	return &PostWebchatGuestConversationsInternalServerError{}
}

/*
PostWebchatGuestConversationsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostWebchatGuestConversationsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post webchat guest conversations internal server error response has a 2xx status code
func (o *PostWebchatGuestConversationsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post webchat guest conversations internal server error response has a 3xx status code
func (o *PostWebchatGuestConversationsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post webchat guest conversations internal server error response has a 4xx status code
func (o *PostWebchatGuestConversationsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post webchat guest conversations internal server error response has a 5xx status code
func (o *PostWebchatGuestConversationsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post webchat guest conversations internal server error response a status code equal to that given
func (o *PostWebchatGuestConversationsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostWebchatGuestConversationsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/webchat/guest/conversations][%d] postWebchatGuestConversationsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostWebchatGuestConversationsInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/webchat/guest/conversations][%d] postWebchatGuestConversationsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostWebchatGuestConversationsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostWebchatGuestConversationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostWebchatGuestConversationsServiceUnavailable creates a PostWebchatGuestConversationsServiceUnavailable with default headers values
func NewPostWebchatGuestConversationsServiceUnavailable() *PostWebchatGuestConversationsServiceUnavailable {
	return &PostWebchatGuestConversationsServiceUnavailable{}
}

/*
PostWebchatGuestConversationsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostWebchatGuestConversationsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post webchat guest conversations service unavailable response has a 2xx status code
func (o *PostWebchatGuestConversationsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post webchat guest conversations service unavailable response has a 3xx status code
func (o *PostWebchatGuestConversationsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post webchat guest conversations service unavailable response has a 4xx status code
func (o *PostWebchatGuestConversationsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post webchat guest conversations service unavailable response has a 5xx status code
func (o *PostWebchatGuestConversationsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post webchat guest conversations service unavailable response a status code equal to that given
func (o *PostWebchatGuestConversationsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostWebchatGuestConversationsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/webchat/guest/conversations][%d] postWebchatGuestConversationsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostWebchatGuestConversationsServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/webchat/guest/conversations][%d] postWebchatGuestConversationsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostWebchatGuestConversationsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostWebchatGuestConversationsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostWebchatGuestConversationsGatewayTimeout creates a PostWebchatGuestConversationsGatewayTimeout with default headers values
func NewPostWebchatGuestConversationsGatewayTimeout() *PostWebchatGuestConversationsGatewayTimeout {
	return &PostWebchatGuestConversationsGatewayTimeout{}
}

/*
PostWebchatGuestConversationsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostWebchatGuestConversationsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post webchat guest conversations gateway timeout response has a 2xx status code
func (o *PostWebchatGuestConversationsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post webchat guest conversations gateway timeout response has a 3xx status code
func (o *PostWebchatGuestConversationsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post webchat guest conversations gateway timeout response has a 4xx status code
func (o *PostWebchatGuestConversationsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post webchat guest conversations gateway timeout response has a 5xx status code
func (o *PostWebchatGuestConversationsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post webchat guest conversations gateway timeout response a status code equal to that given
func (o *PostWebchatGuestConversationsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostWebchatGuestConversationsGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/webchat/guest/conversations][%d] postWebchatGuestConversationsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostWebchatGuestConversationsGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/webchat/guest/conversations][%d] postWebchatGuestConversationsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostWebchatGuestConversationsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostWebchatGuestConversationsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
