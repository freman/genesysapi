// Code generated by go-swagger; DO NOT EDIT.

package widgets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutWidgetsDeploymentReader is a Reader for the PutWidgetsDeployment structure.
type PutWidgetsDeploymentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutWidgetsDeploymentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutWidgetsDeploymentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutWidgetsDeploymentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutWidgetsDeploymentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutWidgetsDeploymentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutWidgetsDeploymentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutWidgetsDeploymentRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutWidgetsDeploymentRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutWidgetsDeploymentUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutWidgetsDeploymentTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutWidgetsDeploymentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutWidgetsDeploymentServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutWidgetsDeploymentGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutWidgetsDeploymentOK creates a PutWidgetsDeploymentOK with default headers values
func NewPutWidgetsDeploymentOK() *PutWidgetsDeploymentOK {
	return &PutWidgetsDeploymentOK{}
}

/*
PutWidgetsDeploymentOK describes a response with status code 200, with default header values.

successful operation
*/
type PutWidgetsDeploymentOK struct {
	Payload *models.WidgetDeployment
}

// IsSuccess returns true when this put widgets deployment o k response has a 2xx status code
func (o *PutWidgetsDeploymentOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put widgets deployment o k response has a 3xx status code
func (o *PutWidgetsDeploymentOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put widgets deployment o k response has a 4xx status code
func (o *PutWidgetsDeploymentOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put widgets deployment o k response has a 5xx status code
func (o *PutWidgetsDeploymentOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put widgets deployment o k response a status code equal to that given
func (o *PutWidgetsDeploymentOK) IsCode(code int) bool {
	return code == 200
}

func (o *PutWidgetsDeploymentOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/widgets/deployments/{deploymentId}][%d] putWidgetsDeploymentOK  %+v", 200, o.Payload)
}

func (o *PutWidgetsDeploymentOK) String() string {
	return fmt.Sprintf("[PUT /api/v2/widgets/deployments/{deploymentId}][%d] putWidgetsDeploymentOK  %+v", 200, o.Payload)
}

func (o *PutWidgetsDeploymentOK) GetPayload() *models.WidgetDeployment {
	return o.Payload
}

func (o *PutWidgetsDeploymentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WidgetDeployment)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutWidgetsDeploymentBadRequest creates a PutWidgetsDeploymentBadRequest with default headers values
func NewPutWidgetsDeploymentBadRequest() *PutWidgetsDeploymentBadRequest {
	return &PutWidgetsDeploymentBadRequest{}
}

/*
PutWidgetsDeploymentBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutWidgetsDeploymentBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put widgets deployment bad request response has a 2xx status code
func (o *PutWidgetsDeploymentBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put widgets deployment bad request response has a 3xx status code
func (o *PutWidgetsDeploymentBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put widgets deployment bad request response has a 4xx status code
func (o *PutWidgetsDeploymentBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put widgets deployment bad request response has a 5xx status code
func (o *PutWidgetsDeploymentBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put widgets deployment bad request response a status code equal to that given
func (o *PutWidgetsDeploymentBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PutWidgetsDeploymentBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/widgets/deployments/{deploymentId}][%d] putWidgetsDeploymentBadRequest  %+v", 400, o.Payload)
}

func (o *PutWidgetsDeploymentBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/v2/widgets/deployments/{deploymentId}][%d] putWidgetsDeploymentBadRequest  %+v", 400, o.Payload)
}

func (o *PutWidgetsDeploymentBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutWidgetsDeploymentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutWidgetsDeploymentUnauthorized creates a PutWidgetsDeploymentUnauthorized with default headers values
func NewPutWidgetsDeploymentUnauthorized() *PutWidgetsDeploymentUnauthorized {
	return &PutWidgetsDeploymentUnauthorized{}
}

/*
PutWidgetsDeploymentUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PutWidgetsDeploymentUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put widgets deployment unauthorized response has a 2xx status code
func (o *PutWidgetsDeploymentUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put widgets deployment unauthorized response has a 3xx status code
func (o *PutWidgetsDeploymentUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put widgets deployment unauthorized response has a 4xx status code
func (o *PutWidgetsDeploymentUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put widgets deployment unauthorized response has a 5xx status code
func (o *PutWidgetsDeploymentUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put widgets deployment unauthorized response a status code equal to that given
func (o *PutWidgetsDeploymentUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PutWidgetsDeploymentUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/widgets/deployments/{deploymentId}][%d] putWidgetsDeploymentUnauthorized  %+v", 401, o.Payload)
}

func (o *PutWidgetsDeploymentUnauthorized) String() string {
	return fmt.Sprintf("[PUT /api/v2/widgets/deployments/{deploymentId}][%d] putWidgetsDeploymentUnauthorized  %+v", 401, o.Payload)
}

func (o *PutWidgetsDeploymentUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutWidgetsDeploymentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutWidgetsDeploymentForbidden creates a PutWidgetsDeploymentForbidden with default headers values
func NewPutWidgetsDeploymentForbidden() *PutWidgetsDeploymentForbidden {
	return &PutWidgetsDeploymentForbidden{}
}

/*
PutWidgetsDeploymentForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PutWidgetsDeploymentForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put widgets deployment forbidden response has a 2xx status code
func (o *PutWidgetsDeploymentForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put widgets deployment forbidden response has a 3xx status code
func (o *PutWidgetsDeploymentForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put widgets deployment forbidden response has a 4xx status code
func (o *PutWidgetsDeploymentForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put widgets deployment forbidden response has a 5xx status code
func (o *PutWidgetsDeploymentForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put widgets deployment forbidden response a status code equal to that given
func (o *PutWidgetsDeploymentForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PutWidgetsDeploymentForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/widgets/deployments/{deploymentId}][%d] putWidgetsDeploymentForbidden  %+v", 403, o.Payload)
}

func (o *PutWidgetsDeploymentForbidden) String() string {
	return fmt.Sprintf("[PUT /api/v2/widgets/deployments/{deploymentId}][%d] putWidgetsDeploymentForbidden  %+v", 403, o.Payload)
}

func (o *PutWidgetsDeploymentForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutWidgetsDeploymentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutWidgetsDeploymentNotFound creates a PutWidgetsDeploymentNotFound with default headers values
func NewPutWidgetsDeploymentNotFound() *PutWidgetsDeploymentNotFound {
	return &PutWidgetsDeploymentNotFound{}
}

/*
PutWidgetsDeploymentNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PutWidgetsDeploymentNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put widgets deployment not found response has a 2xx status code
func (o *PutWidgetsDeploymentNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put widgets deployment not found response has a 3xx status code
func (o *PutWidgetsDeploymentNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put widgets deployment not found response has a 4xx status code
func (o *PutWidgetsDeploymentNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put widgets deployment not found response has a 5xx status code
func (o *PutWidgetsDeploymentNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put widgets deployment not found response a status code equal to that given
func (o *PutWidgetsDeploymentNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PutWidgetsDeploymentNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/widgets/deployments/{deploymentId}][%d] putWidgetsDeploymentNotFound  %+v", 404, o.Payload)
}

func (o *PutWidgetsDeploymentNotFound) String() string {
	return fmt.Sprintf("[PUT /api/v2/widgets/deployments/{deploymentId}][%d] putWidgetsDeploymentNotFound  %+v", 404, o.Payload)
}

func (o *PutWidgetsDeploymentNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutWidgetsDeploymentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutWidgetsDeploymentRequestTimeout creates a PutWidgetsDeploymentRequestTimeout with default headers values
func NewPutWidgetsDeploymentRequestTimeout() *PutWidgetsDeploymentRequestTimeout {
	return &PutWidgetsDeploymentRequestTimeout{}
}

/*
PutWidgetsDeploymentRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutWidgetsDeploymentRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put widgets deployment request timeout response has a 2xx status code
func (o *PutWidgetsDeploymentRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put widgets deployment request timeout response has a 3xx status code
func (o *PutWidgetsDeploymentRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put widgets deployment request timeout response has a 4xx status code
func (o *PutWidgetsDeploymentRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this put widgets deployment request timeout response has a 5xx status code
func (o *PutWidgetsDeploymentRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this put widgets deployment request timeout response a status code equal to that given
func (o *PutWidgetsDeploymentRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PutWidgetsDeploymentRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/widgets/deployments/{deploymentId}][%d] putWidgetsDeploymentRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutWidgetsDeploymentRequestTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/widgets/deployments/{deploymentId}][%d] putWidgetsDeploymentRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutWidgetsDeploymentRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutWidgetsDeploymentRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutWidgetsDeploymentRequestEntityTooLarge creates a PutWidgetsDeploymentRequestEntityTooLarge with default headers values
func NewPutWidgetsDeploymentRequestEntityTooLarge() *PutWidgetsDeploymentRequestEntityTooLarge {
	return &PutWidgetsDeploymentRequestEntityTooLarge{}
}

/*
PutWidgetsDeploymentRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PutWidgetsDeploymentRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put widgets deployment request entity too large response has a 2xx status code
func (o *PutWidgetsDeploymentRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put widgets deployment request entity too large response has a 3xx status code
func (o *PutWidgetsDeploymentRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put widgets deployment request entity too large response has a 4xx status code
func (o *PutWidgetsDeploymentRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this put widgets deployment request entity too large response has a 5xx status code
func (o *PutWidgetsDeploymentRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this put widgets deployment request entity too large response a status code equal to that given
func (o *PutWidgetsDeploymentRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PutWidgetsDeploymentRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/widgets/deployments/{deploymentId}][%d] putWidgetsDeploymentRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutWidgetsDeploymentRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PUT /api/v2/widgets/deployments/{deploymentId}][%d] putWidgetsDeploymentRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutWidgetsDeploymentRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutWidgetsDeploymentRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutWidgetsDeploymentUnsupportedMediaType creates a PutWidgetsDeploymentUnsupportedMediaType with default headers values
func NewPutWidgetsDeploymentUnsupportedMediaType() *PutWidgetsDeploymentUnsupportedMediaType {
	return &PutWidgetsDeploymentUnsupportedMediaType{}
}

/*
PutWidgetsDeploymentUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutWidgetsDeploymentUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put widgets deployment unsupported media type response has a 2xx status code
func (o *PutWidgetsDeploymentUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put widgets deployment unsupported media type response has a 3xx status code
func (o *PutWidgetsDeploymentUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put widgets deployment unsupported media type response has a 4xx status code
func (o *PutWidgetsDeploymentUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this put widgets deployment unsupported media type response has a 5xx status code
func (o *PutWidgetsDeploymentUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this put widgets deployment unsupported media type response a status code equal to that given
func (o *PutWidgetsDeploymentUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PutWidgetsDeploymentUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/widgets/deployments/{deploymentId}][%d] putWidgetsDeploymentUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutWidgetsDeploymentUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PUT /api/v2/widgets/deployments/{deploymentId}][%d] putWidgetsDeploymentUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutWidgetsDeploymentUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutWidgetsDeploymentUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutWidgetsDeploymentTooManyRequests creates a PutWidgetsDeploymentTooManyRequests with default headers values
func NewPutWidgetsDeploymentTooManyRequests() *PutWidgetsDeploymentTooManyRequests {
	return &PutWidgetsDeploymentTooManyRequests{}
}

/*
PutWidgetsDeploymentTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutWidgetsDeploymentTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put widgets deployment too many requests response has a 2xx status code
func (o *PutWidgetsDeploymentTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put widgets deployment too many requests response has a 3xx status code
func (o *PutWidgetsDeploymentTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put widgets deployment too many requests response has a 4xx status code
func (o *PutWidgetsDeploymentTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this put widgets deployment too many requests response has a 5xx status code
func (o *PutWidgetsDeploymentTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this put widgets deployment too many requests response a status code equal to that given
func (o *PutWidgetsDeploymentTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PutWidgetsDeploymentTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/widgets/deployments/{deploymentId}][%d] putWidgetsDeploymentTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutWidgetsDeploymentTooManyRequests) String() string {
	return fmt.Sprintf("[PUT /api/v2/widgets/deployments/{deploymentId}][%d] putWidgetsDeploymentTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutWidgetsDeploymentTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutWidgetsDeploymentTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutWidgetsDeploymentInternalServerError creates a PutWidgetsDeploymentInternalServerError with default headers values
func NewPutWidgetsDeploymentInternalServerError() *PutWidgetsDeploymentInternalServerError {
	return &PutWidgetsDeploymentInternalServerError{}
}

/*
PutWidgetsDeploymentInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutWidgetsDeploymentInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put widgets deployment internal server error response has a 2xx status code
func (o *PutWidgetsDeploymentInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put widgets deployment internal server error response has a 3xx status code
func (o *PutWidgetsDeploymentInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put widgets deployment internal server error response has a 4xx status code
func (o *PutWidgetsDeploymentInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this put widgets deployment internal server error response has a 5xx status code
func (o *PutWidgetsDeploymentInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this put widgets deployment internal server error response a status code equal to that given
func (o *PutWidgetsDeploymentInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PutWidgetsDeploymentInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/widgets/deployments/{deploymentId}][%d] putWidgetsDeploymentInternalServerError  %+v", 500, o.Payload)
}

func (o *PutWidgetsDeploymentInternalServerError) String() string {
	return fmt.Sprintf("[PUT /api/v2/widgets/deployments/{deploymentId}][%d] putWidgetsDeploymentInternalServerError  %+v", 500, o.Payload)
}

func (o *PutWidgetsDeploymentInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutWidgetsDeploymentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutWidgetsDeploymentServiceUnavailable creates a PutWidgetsDeploymentServiceUnavailable with default headers values
func NewPutWidgetsDeploymentServiceUnavailable() *PutWidgetsDeploymentServiceUnavailable {
	return &PutWidgetsDeploymentServiceUnavailable{}
}

/*
PutWidgetsDeploymentServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutWidgetsDeploymentServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put widgets deployment service unavailable response has a 2xx status code
func (o *PutWidgetsDeploymentServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put widgets deployment service unavailable response has a 3xx status code
func (o *PutWidgetsDeploymentServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put widgets deployment service unavailable response has a 4xx status code
func (o *PutWidgetsDeploymentServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this put widgets deployment service unavailable response has a 5xx status code
func (o *PutWidgetsDeploymentServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this put widgets deployment service unavailable response a status code equal to that given
func (o *PutWidgetsDeploymentServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PutWidgetsDeploymentServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/widgets/deployments/{deploymentId}][%d] putWidgetsDeploymentServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutWidgetsDeploymentServiceUnavailable) String() string {
	return fmt.Sprintf("[PUT /api/v2/widgets/deployments/{deploymentId}][%d] putWidgetsDeploymentServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutWidgetsDeploymentServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutWidgetsDeploymentServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutWidgetsDeploymentGatewayTimeout creates a PutWidgetsDeploymentGatewayTimeout with default headers values
func NewPutWidgetsDeploymentGatewayTimeout() *PutWidgetsDeploymentGatewayTimeout {
	return &PutWidgetsDeploymentGatewayTimeout{}
}

/*
PutWidgetsDeploymentGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PutWidgetsDeploymentGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put widgets deployment gateway timeout response has a 2xx status code
func (o *PutWidgetsDeploymentGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put widgets deployment gateway timeout response has a 3xx status code
func (o *PutWidgetsDeploymentGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put widgets deployment gateway timeout response has a 4xx status code
func (o *PutWidgetsDeploymentGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this put widgets deployment gateway timeout response has a 5xx status code
func (o *PutWidgetsDeploymentGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this put widgets deployment gateway timeout response a status code equal to that given
func (o *PutWidgetsDeploymentGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PutWidgetsDeploymentGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/widgets/deployments/{deploymentId}][%d] putWidgetsDeploymentGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutWidgetsDeploymentGatewayTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/widgets/deployments/{deploymentId}][%d] putWidgetsDeploymentGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutWidgetsDeploymentGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutWidgetsDeploymentGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
