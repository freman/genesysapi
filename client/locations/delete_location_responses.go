// Code generated by go-swagger; DO NOT EDIT.

package locations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// DeleteLocationReader is a Reader for the DeleteLocation structure.
type DeleteLocationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteLocationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteLocationNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteLocationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteLocationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteLocationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteLocationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewDeleteLocationRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewDeleteLocationRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDeleteLocationUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteLocationTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteLocationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteLocationServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteLocationGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteLocationNoContent creates a DeleteLocationNoContent with default headers values
func NewDeleteLocationNoContent() *DeleteLocationNoContent {
	return &DeleteLocationNoContent{}
}

/*
DeleteLocationNoContent describes a response with status code 204, with default header values.

The location was deleted successfully
*/
type DeleteLocationNoContent struct {
}

// IsSuccess returns true when this delete location no content response has a 2xx status code
func (o *DeleteLocationNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete location no content response has a 3xx status code
func (o *DeleteLocationNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete location no content response has a 4xx status code
func (o *DeleteLocationNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete location no content response has a 5xx status code
func (o *DeleteLocationNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete location no content response a status code equal to that given
func (o *DeleteLocationNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *DeleteLocationNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/locations/{locationId}][%d] deleteLocationNoContent ", 204)
}

func (o *DeleteLocationNoContent) String() string {
	return fmt.Sprintf("[DELETE /api/v2/locations/{locationId}][%d] deleteLocationNoContent ", 204)
}

func (o *DeleteLocationNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteLocationBadRequest creates a DeleteLocationBadRequest with default headers values
func NewDeleteLocationBadRequest() *DeleteLocationBadRequest {
	return &DeleteLocationBadRequest{}
}

/*
DeleteLocationBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type DeleteLocationBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete location bad request response has a 2xx status code
func (o *DeleteLocationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete location bad request response has a 3xx status code
func (o *DeleteLocationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete location bad request response has a 4xx status code
func (o *DeleteLocationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete location bad request response has a 5xx status code
func (o *DeleteLocationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete location bad request response a status code equal to that given
func (o *DeleteLocationBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteLocationBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/locations/{locationId}][%d] deleteLocationBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteLocationBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v2/locations/{locationId}][%d] deleteLocationBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteLocationBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteLocationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLocationUnauthorized creates a DeleteLocationUnauthorized with default headers values
func NewDeleteLocationUnauthorized() *DeleteLocationUnauthorized {
	return &DeleteLocationUnauthorized{}
}

/*
DeleteLocationUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type DeleteLocationUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete location unauthorized response has a 2xx status code
func (o *DeleteLocationUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete location unauthorized response has a 3xx status code
func (o *DeleteLocationUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete location unauthorized response has a 4xx status code
func (o *DeleteLocationUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete location unauthorized response has a 5xx status code
func (o *DeleteLocationUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete location unauthorized response a status code equal to that given
func (o *DeleteLocationUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteLocationUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/locations/{locationId}][%d] deleteLocationUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteLocationUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/v2/locations/{locationId}][%d] deleteLocationUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteLocationUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteLocationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLocationForbidden creates a DeleteLocationForbidden with default headers values
func NewDeleteLocationForbidden() *DeleteLocationForbidden {
	return &DeleteLocationForbidden{}
}

/*
DeleteLocationForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type DeleteLocationForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete location forbidden response has a 2xx status code
func (o *DeleteLocationForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete location forbidden response has a 3xx status code
func (o *DeleteLocationForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete location forbidden response has a 4xx status code
func (o *DeleteLocationForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete location forbidden response has a 5xx status code
func (o *DeleteLocationForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete location forbidden response a status code equal to that given
func (o *DeleteLocationForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteLocationForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/locations/{locationId}][%d] deleteLocationForbidden  %+v", 403, o.Payload)
}

func (o *DeleteLocationForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/v2/locations/{locationId}][%d] deleteLocationForbidden  %+v", 403, o.Payload)
}

func (o *DeleteLocationForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteLocationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLocationNotFound creates a DeleteLocationNotFound with default headers values
func NewDeleteLocationNotFound() *DeleteLocationNotFound {
	return &DeleteLocationNotFound{}
}

/*
DeleteLocationNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type DeleteLocationNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete location not found response has a 2xx status code
func (o *DeleteLocationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete location not found response has a 3xx status code
func (o *DeleteLocationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete location not found response has a 4xx status code
func (o *DeleteLocationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete location not found response has a 5xx status code
func (o *DeleteLocationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete location not found response a status code equal to that given
func (o *DeleteLocationNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteLocationNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/locations/{locationId}][%d] deleteLocationNotFound  %+v", 404, o.Payload)
}

func (o *DeleteLocationNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v2/locations/{locationId}][%d] deleteLocationNotFound  %+v", 404, o.Payload)
}

func (o *DeleteLocationNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteLocationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLocationRequestTimeout creates a DeleteLocationRequestTimeout with default headers values
func NewDeleteLocationRequestTimeout() *DeleteLocationRequestTimeout {
	return &DeleteLocationRequestTimeout{}
}

/*
DeleteLocationRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type DeleteLocationRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete location request timeout response has a 2xx status code
func (o *DeleteLocationRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete location request timeout response has a 3xx status code
func (o *DeleteLocationRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete location request timeout response has a 4xx status code
func (o *DeleteLocationRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete location request timeout response has a 5xx status code
func (o *DeleteLocationRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this delete location request timeout response a status code equal to that given
func (o *DeleteLocationRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *DeleteLocationRequestTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/locations/{locationId}][%d] deleteLocationRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteLocationRequestTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/locations/{locationId}][%d] deleteLocationRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteLocationRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteLocationRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLocationRequestEntityTooLarge creates a DeleteLocationRequestEntityTooLarge with default headers values
func NewDeleteLocationRequestEntityTooLarge() *DeleteLocationRequestEntityTooLarge {
	return &DeleteLocationRequestEntityTooLarge{}
}

/*
DeleteLocationRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type DeleteLocationRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete location request entity too large response has a 2xx status code
func (o *DeleteLocationRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete location request entity too large response has a 3xx status code
func (o *DeleteLocationRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete location request entity too large response has a 4xx status code
func (o *DeleteLocationRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete location request entity too large response has a 5xx status code
func (o *DeleteLocationRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this delete location request entity too large response a status code equal to that given
func (o *DeleteLocationRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *DeleteLocationRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/locations/{locationId}][%d] deleteLocationRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteLocationRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[DELETE /api/v2/locations/{locationId}][%d] deleteLocationRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteLocationRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteLocationRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLocationUnsupportedMediaType creates a DeleteLocationUnsupportedMediaType with default headers values
func NewDeleteLocationUnsupportedMediaType() *DeleteLocationUnsupportedMediaType {
	return &DeleteLocationUnsupportedMediaType{}
}

/*
DeleteLocationUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type DeleteLocationUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete location unsupported media type response has a 2xx status code
func (o *DeleteLocationUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete location unsupported media type response has a 3xx status code
func (o *DeleteLocationUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete location unsupported media type response has a 4xx status code
func (o *DeleteLocationUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete location unsupported media type response has a 5xx status code
func (o *DeleteLocationUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this delete location unsupported media type response a status code equal to that given
func (o *DeleteLocationUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *DeleteLocationUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/locations/{locationId}][%d] deleteLocationUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteLocationUnsupportedMediaType) String() string {
	return fmt.Sprintf("[DELETE /api/v2/locations/{locationId}][%d] deleteLocationUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteLocationUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteLocationUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLocationTooManyRequests creates a DeleteLocationTooManyRequests with default headers values
func NewDeleteLocationTooManyRequests() *DeleteLocationTooManyRequests {
	return &DeleteLocationTooManyRequests{}
}

/*
DeleteLocationTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type DeleteLocationTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete location too many requests response has a 2xx status code
func (o *DeleteLocationTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete location too many requests response has a 3xx status code
func (o *DeleteLocationTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete location too many requests response has a 4xx status code
func (o *DeleteLocationTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete location too many requests response has a 5xx status code
func (o *DeleteLocationTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete location too many requests response a status code equal to that given
func (o *DeleteLocationTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *DeleteLocationTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/locations/{locationId}][%d] deleteLocationTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteLocationTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /api/v2/locations/{locationId}][%d] deleteLocationTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteLocationTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteLocationTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLocationInternalServerError creates a DeleteLocationInternalServerError with default headers values
func NewDeleteLocationInternalServerError() *DeleteLocationInternalServerError {
	return &DeleteLocationInternalServerError{}
}

/*
DeleteLocationInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type DeleteLocationInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete location internal server error response has a 2xx status code
func (o *DeleteLocationInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete location internal server error response has a 3xx status code
func (o *DeleteLocationInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete location internal server error response has a 4xx status code
func (o *DeleteLocationInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete location internal server error response has a 5xx status code
func (o *DeleteLocationInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete location internal server error response a status code equal to that given
func (o *DeleteLocationInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteLocationInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/locations/{locationId}][%d] deleteLocationInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteLocationInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/v2/locations/{locationId}][%d] deleteLocationInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteLocationInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteLocationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLocationServiceUnavailable creates a DeleteLocationServiceUnavailable with default headers values
func NewDeleteLocationServiceUnavailable() *DeleteLocationServiceUnavailable {
	return &DeleteLocationServiceUnavailable{}
}

/*
DeleteLocationServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type DeleteLocationServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete location service unavailable response has a 2xx status code
func (o *DeleteLocationServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete location service unavailable response has a 3xx status code
func (o *DeleteLocationServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete location service unavailable response has a 4xx status code
func (o *DeleteLocationServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete location service unavailable response has a 5xx status code
func (o *DeleteLocationServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this delete location service unavailable response a status code equal to that given
func (o *DeleteLocationServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *DeleteLocationServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/locations/{locationId}][%d] deleteLocationServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteLocationServiceUnavailable) String() string {
	return fmt.Sprintf("[DELETE /api/v2/locations/{locationId}][%d] deleteLocationServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteLocationServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteLocationServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLocationGatewayTimeout creates a DeleteLocationGatewayTimeout with default headers values
func NewDeleteLocationGatewayTimeout() *DeleteLocationGatewayTimeout {
	return &DeleteLocationGatewayTimeout{}
}

/*
DeleteLocationGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type DeleteLocationGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete location gateway timeout response has a 2xx status code
func (o *DeleteLocationGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete location gateway timeout response has a 3xx status code
func (o *DeleteLocationGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete location gateway timeout response has a 4xx status code
func (o *DeleteLocationGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete location gateway timeout response has a 5xx status code
func (o *DeleteLocationGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this delete location gateway timeout response a status code equal to that given
func (o *DeleteLocationGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *DeleteLocationGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/locations/{locationId}][%d] deleteLocationGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteLocationGatewayTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/locations/{locationId}][%d] deleteLocationGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteLocationGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteLocationGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
