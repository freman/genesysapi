// Code generated by go-swagger; DO NOT EDIT.

package locations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetLocationSublocationsParams creates a new GetLocationSublocationsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetLocationSublocationsParams() *GetLocationSublocationsParams {
	return &GetLocationSublocationsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetLocationSublocationsParamsWithTimeout creates a new GetLocationSublocationsParams object
// with the ability to set a timeout on a request.
func NewGetLocationSublocationsParamsWithTimeout(timeout time.Duration) *GetLocationSublocationsParams {
	return &GetLocationSublocationsParams{
		timeout: timeout,
	}
}

// NewGetLocationSublocationsParamsWithContext creates a new GetLocationSublocationsParams object
// with the ability to set a context for a request.
func NewGetLocationSublocationsParamsWithContext(ctx context.Context) *GetLocationSublocationsParams {
	return &GetLocationSublocationsParams{
		Context: ctx,
	}
}

// NewGetLocationSublocationsParamsWithHTTPClient creates a new GetLocationSublocationsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetLocationSublocationsParamsWithHTTPClient(client *http.Client) *GetLocationSublocationsParams {
	return &GetLocationSublocationsParams{
		HTTPClient: client,
	}
}

/*
GetLocationSublocationsParams contains all the parameters to send to the API endpoint

	for the get location sublocations operation.

	Typically these are written to a http.Request.
*/
type GetLocationSublocationsParams struct {

	/* LocationID.

	   Location ID
	*/
	LocationID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get location sublocations params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetLocationSublocationsParams) WithDefaults() *GetLocationSublocationsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get location sublocations params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetLocationSublocationsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get location sublocations params
func (o *GetLocationSublocationsParams) WithTimeout(timeout time.Duration) *GetLocationSublocationsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get location sublocations params
func (o *GetLocationSublocationsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get location sublocations params
func (o *GetLocationSublocationsParams) WithContext(ctx context.Context) *GetLocationSublocationsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get location sublocations params
func (o *GetLocationSublocationsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get location sublocations params
func (o *GetLocationSublocationsParams) WithHTTPClient(client *http.Client) *GetLocationSublocationsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get location sublocations params
func (o *GetLocationSublocationsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithLocationID adds the locationID to the get location sublocations params
func (o *GetLocationSublocationsParams) WithLocationID(locationID string) *GetLocationSublocationsParams {
	o.SetLocationID(locationID)
	return o
}

// SetLocationID adds the locationId to the get location sublocations params
func (o *GetLocationSublocationsParams) SetLocationID(locationID string) {
	o.LocationID = locationID
}

// WriteToRequest writes these params to a swagger request
func (o *GetLocationSublocationsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param locationId
	if err := r.SetPathParam("locationId", o.LocationID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
