// Code generated by go-swagger; DO NOT EDIT.

package locations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetLocationsReader is a Reader for the GetLocations structure.
type GetLocationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLocationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLocationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetLocationsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetLocationsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetLocationsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetLocationsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetLocationsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetLocationsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetLocationsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetLocationsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetLocationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetLocationsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetLocationsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetLocationsOK creates a GetLocationsOK with default headers values
func NewGetLocationsOK() *GetLocationsOK {
	return &GetLocationsOK{}
}

/*
GetLocationsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetLocationsOK struct {
	Payload *models.LocationEntityListing
}

// IsSuccess returns true when this get locations o k response has a 2xx status code
func (o *GetLocationsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get locations o k response has a 3xx status code
func (o *GetLocationsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get locations o k response has a 4xx status code
func (o *GetLocationsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get locations o k response has a 5xx status code
func (o *GetLocationsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get locations o k response a status code equal to that given
func (o *GetLocationsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetLocationsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/locations][%d] getLocationsOK  %+v", 200, o.Payload)
}

func (o *GetLocationsOK) String() string {
	return fmt.Sprintf("[GET /api/v2/locations][%d] getLocationsOK  %+v", 200, o.Payload)
}

func (o *GetLocationsOK) GetPayload() *models.LocationEntityListing {
	return o.Payload
}

func (o *GetLocationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LocationEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLocationsBadRequest creates a GetLocationsBadRequest with default headers values
func NewGetLocationsBadRequest() *GetLocationsBadRequest {
	return &GetLocationsBadRequest{}
}

/*
GetLocationsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetLocationsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get locations bad request response has a 2xx status code
func (o *GetLocationsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get locations bad request response has a 3xx status code
func (o *GetLocationsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get locations bad request response has a 4xx status code
func (o *GetLocationsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get locations bad request response has a 5xx status code
func (o *GetLocationsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get locations bad request response a status code equal to that given
func (o *GetLocationsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetLocationsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/locations][%d] getLocationsBadRequest  %+v", 400, o.Payload)
}

func (o *GetLocationsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/locations][%d] getLocationsBadRequest  %+v", 400, o.Payload)
}

func (o *GetLocationsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLocationsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLocationsUnauthorized creates a GetLocationsUnauthorized with default headers values
func NewGetLocationsUnauthorized() *GetLocationsUnauthorized {
	return &GetLocationsUnauthorized{}
}

/*
GetLocationsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetLocationsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get locations unauthorized response has a 2xx status code
func (o *GetLocationsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get locations unauthorized response has a 3xx status code
func (o *GetLocationsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get locations unauthorized response has a 4xx status code
func (o *GetLocationsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get locations unauthorized response has a 5xx status code
func (o *GetLocationsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get locations unauthorized response a status code equal to that given
func (o *GetLocationsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetLocationsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/locations][%d] getLocationsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetLocationsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/locations][%d] getLocationsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetLocationsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLocationsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLocationsForbidden creates a GetLocationsForbidden with default headers values
func NewGetLocationsForbidden() *GetLocationsForbidden {
	return &GetLocationsForbidden{}
}

/*
GetLocationsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetLocationsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get locations forbidden response has a 2xx status code
func (o *GetLocationsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get locations forbidden response has a 3xx status code
func (o *GetLocationsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get locations forbidden response has a 4xx status code
func (o *GetLocationsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get locations forbidden response has a 5xx status code
func (o *GetLocationsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get locations forbidden response a status code equal to that given
func (o *GetLocationsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetLocationsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/locations][%d] getLocationsForbidden  %+v", 403, o.Payload)
}

func (o *GetLocationsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/locations][%d] getLocationsForbidden  %+v", 403, o.Payload)
}

func (o *GetLocationsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLocationsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLocationsNotFound creates a GetLocationsNotFound with default headers values
func NewGetLocationsNotFound() *GetLocationsNotFound {
	return &GetLocationsNotFound{}
}

/*
GetLocationsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetLocationsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get locations not found response has a 2xx status code
func (o *GetLocationsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get locations not found response has a 3xx status code
func (o *GetLocationsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get locations not found response has a 4xx status code
func (o *GetLocationsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get locations not found response has a 5xx status code
func (o *GetLocationsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get locations not found response a status code equal to that given
func (o *GetLocationsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetLocationsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/locations][%d] getLocationsNotFound  %+v", 404, o.Payload)
}

func (o *GetLocationsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/locations][%d] getLocationsNotFound  %+v", 404, o.Payload)
}

func (o *GetLocationsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLocationsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLocationsRequestTimeout creates a GetLocationsRequestTimeout with default headers values
func NewGetLocationsRequestTimeout() *GetLocationsRequestTimeout {
	return &GetLocationsRequestTimeout{}
}

/*
GetLocationsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetLocationsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get locations request timeout response has a 2xx status code
func (o *GetLocationsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get locations request timeout response has a 3xx status code
func (o *GetLocationsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get locations request timeout response has a 4xx status code
func (o *GetLocationsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get locations request timeout response has a 5xx status code
func (o *GetLocationsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get locations request timeout response a status code equal to that given
func (o *GetLocationsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetLocationsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/locations][%d] getLocationsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetLocationsRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/locations][%d] getLocationsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetLocationsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLocationsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLocationsRequestEntityTooLarge creates a GetLocationsRequestEntityTooLarge with default headers values
func NewGetLocationsRequestEntityTooLarge() *GetLocationsRequestEntityTooLarge {
	return &GetLocationsRequestEntityTooLarge{}
}

/*
GetLocationsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetLocationsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get locations request entity too large response has a 2xx status code
func (o *GetLocationsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get locations request entity too large response has a 3xx status code
func (o *GetLocationsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get locations request entity too large response has a 4xx status code
func (o *GetLocationsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get locations request entity too large response has a 5xx status code
func (o *GetLocationsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get locations request entity too large response a status code equal to that given
func (o *GetLocationsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetLocationsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/locations][%d] getLocationsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetLocationsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/locations][%d] getLocationsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetLocationsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLocationsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLocationsUnsupportedMediaType creates a GetLocationsUnsupportedMediaType with default headers values
func NewGetLocationsUnsupportedMediaType() *GetLocationsUnsupportedMediaType {
	return &GetLocationsUnsupportedMediaType{}
}

/*
GetLocationsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetLocationsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get locations unsupported media type response has a 2xx status code
func (o *GetLocationsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get locations unsupported media type response has a 3xx status code
func (o *GetLocationsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get locations unsupported media type response has a 4xx status code
func (o *GetLocationsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get locations unsupported media type response has a 5xx status code
func (o *GetLocationsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get locations unsupported media type response a status code equal to that given
func (o *GetLocationsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetLocationsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/locations][%d] getLocationsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetLocationsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/locations][%d] getLocationsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetLocationsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLocationsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLocationsTooManyRequests creates a GetLocationsTooManyRequests with default headers values
func NewGetLocationsTooManyRequests() *GetLocationsTooManyRequests {
	return &GetLocationsTooManyRequests{}
}

/*
GetLocationsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetLocationsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get locations too many requests response has a 2xx status code
func (o *GetLocationsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get locations too many requests response has a 3xx status code
func (o *GetLocationsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get locations too many requests response has a 4xx status code
func (o *GetLocationsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get locations too many requests response has a 5xx status code
func (o *GetLocationsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get locations too many requests response a status code equal to that given
func (o *GetLocationsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetLocationsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/locations][%d] getLocationsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetLocationsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/locations][%d] getLocationsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetLocationsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLocationsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLocationsInternalServerError creates a GetLocationsInternalServerError with default headers values
func NewGetLocationsInternalServerError() *GetLocationsInternalServerError {
	return &GetLocationsInternalServerError{}
}

/*
GetLocationsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetLocationsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get locations internal server error response has a 2xx status code
func (o *GetLocationsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get locations internal server error response has a 3xx status code
func (o *GetLocationsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get locations internal server error response has a 4xx status code
func (o *GetLocationsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get locations internal server error response has a 5xx status code
func (o *GetLocationsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get locations internal server error response a status code equal to that given
func (o *GetLocationsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetLocationsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/locations][%d] getLocationsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetLocationsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/locations][%d] getLocationsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetLocationsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLocationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLocationsServiceUnavailable creates a GetLocationsServiceUnavailable with default headers values
func NewGetLocationsServiceUnavailable() *GetLocationsServiceUnavailable {
	return &GetLocationsServiceUnavailable{}
}

/*
GetLocationsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetLocationsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get locations service unavailable response has a 2xx status code
func (o *GetLocationsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get locations service unavailable response has a 3xx status code
func (o *GetLocationsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get locations service unavailable response has a 4xx status code
func (o *GetLocationsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get locations service unavailable response has a 5xx status code
func (o *GetLocationsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get locations service unavailable response a status code equal to that given
func (o *GetLocationsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetLocationsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/locations][%d] getLocationsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetLocationsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/locations][%d] getLocationsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetLocationsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLocationsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLocationsGatewayTimeout creates a GetLocationsGatewayTimeout with default headers values
func NewGetLocationsGatewayTimeout() *GetLocationsGatewayTimeout {
	return &GetLocationsGatewayTimeout{}
}

/*
GetLocationsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetLocationsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get locations gateway timeout response has a 2xx status code
func (o *GetLocationsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get locations gateway timeout response has a 3xx status code
func (o *GetLocationsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get locations gateway timeout response has a 4xx status code
func (o *GetLocationsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get locations gateway timeout response has a 5xx status code
func (o *GetLocationsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get locations gateway timeout response a status code equal to that given
func (o *GetLocationsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetLocationsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/locations][%d] getLocationsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetLocationsGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/locations][%d] getLocationsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetLocationsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLocationsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
