// Code generated by go-swagger; DO NOT EDIT.

package groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// DeleteGroupReader is a Reader for the DeleteGroup structure.
type DeleteGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 400:
		result := NewDeleteGroupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteGroupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteGroupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteGroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewDeleteGroupRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDeleteGroupUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteGroupTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteGroupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteGroupServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteGroupGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteGroupDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteGroupBadRequest creates a DeleteGroupBadRequest with default headers values
func NewDeleteGroupBadRequest() *DeleteGroupBadRequest {
	return &DeleteGroupBadRequest{}
}

/*DeleteGroupBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type DeleteGroupBadRequest struct {
	Payload *models.ErrorBody
}

func (o *DeleteGroupBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/groups/{groupId}][%d] deleteGroupBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteGroupBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteGroupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteGroupUnauthorized creates a DeleteGroupUnauthorized with default headers values
func NewDeleteGroupUnauthorized() *DeleteGroupUnauthorized {
	return &DeleteGroupUnauthorized{}
}

/*DeleteGroupUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type DeleteGroupUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *DeleteGroupUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/groups/{groupId}][%d] deleteGroupUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteGroupUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteGroupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteGroupForbidden creates a DeleteGroupForbidden with default headers values
func NewDeleteGroupForbidden() *DeleteGroupForbidden {
	return &DeleteGroupForbidden{}
}

/*DeleteGroupForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type DeleteGroupForbidden struct {
	Payload *models.ErrorBody
}

func (o *DeleteGroupForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/groups/{groupId}][%d] deleteGroupForbidden  %+v", 403, o.Payload)
}

func (o *DeleteGroupForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteGroupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteGroupNotFound creates a DeleteGroupNotFound with default headers values
func NewDeleteGroupNotFound() *DeleteGroupNotFound {
	return &DeleteGroupNotFound{}
}

/*DeleteGroupNotFound handles this case with default header values.

The requested resource was not found.
*/
type DeleteGroupNotFound struct {
	Payload *models.ErrorBody
}

func (o *DeleteGroupNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/groups/{groupId}][%d] deleteGroupNotFound  %+v", 404, o.Payload)
}

func (o *DeleteGroupNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteGroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteGroupRequestEntityTooLarge creates a DeleteGroupRequestEntityTooLarge with default headers values
func NewDeleteGroupRequestEntityTooLarge() *DeleteGroupRequestEntityTooLarge {
	return &DeleteGroupRequestEntityTooLarge{}
}

/*DeleteGroupRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type DeleteGroupRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *DeleteGroupRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/groups/{groupId}][%d] deleteGroupRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteGroupRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteGroupRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteGroupUnsupportedMediaType creates a DeleteGroupUnsupportedMediaType with default headers values
func NewDeleteGroupUnsupportedMediaType() *DeleteGroupUnsupportedMediaType {
	return &DeleteGroupUnsupportedMediaType{}
}

/*DeleteGroupUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type DeleteGroupUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *DeleteGroupUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/groups/{groupId}][%d] deleteGroupUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteGroupUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteGroupUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteGroupTooManyRequests creates a DeleteGroupTooManyRequests with default headers values
func NewDeleteGroupTooManyRequests() *DeleteGroupTooManyRequests {
	return &DeleteGroupTooManyRequests{}
}

/*DeleteGroupTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type DeleteGroupTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *DeleteGroupTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/groups/{groupId}][%d] deleteGroupTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteGroupTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteGroupTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteGroupInternalServerError creates a DeleteGroupInternalServerError with default headers values
func NewDeleteGroupInternalServerError() *DeleteGroupInternalServerError {
	return &DeleteGroupInternalServerError{}
}

/*DeleteGroupInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type DeleteGroupInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *DeleteGroupInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/groups/{groupId}][%d] deleteGroupInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteGroupInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteGroupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteGroupServiceUnavailable creates a DeleteGroupServiceUnavailable with default headers values
func NewDeleteGroupServiceUnavailable() *DeleteGroupServiceUnavailable {
	return &DeleteGroupServiceUnavailable{}
}

/*DeleteGroupServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type DeleteGroupServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *DeleteGroupServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/groups/{groupId}][%d] deleteGroupServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteGroupServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteGroupServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteGroupGatewayTimeout creates a DeleteGroupGatewayTimeout with default headers values
func NewDeleteGroupGatewayTimeout() *DeleteGroupGatewayTimeout {
	return &DeleteGroupGatewayTimeout{}
}

/*DeleteGroupGatewayTimeout handles this case with default header values.

The request timed out.
*/
type DeleteGroupGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *DeleteGroupGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/groups/{groupId}][%d] deleteGroupGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteGroupGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteGroupGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteGroupDefault creates a DeleteGroupDefault with default headers values
func NewDeleteGroupDefault(code int) *DeleteGroupDefault {
	return &DeleteGroupDefault{
		_statusCode: code,
	}
}

/*DeleteGroupDefault handles this case with default header values.

successful operation
*/
type DeleteGroupDefault struct {
	_statusCode int
}

// Code gets the status code for the delete group default response
func (o *DeleteGroupDefault) Code() int {
	return o._statusCode
}

func (o *DeleteGroupDefault) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/groups/{groupId}][%d] deleteGroup default ", o._statusCode)
}

func (o *DeleteGroupDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
