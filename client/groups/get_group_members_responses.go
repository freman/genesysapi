// Code generated by go-swagger; DO NOT EDIT.

package groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetGroupMembersReader is a Reader for the GetGroupMembers structure.
type GetGroupMembersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGroupMembersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGroupMembersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetGroupMembersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetGroupMembersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetGroupMembersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetGroupMembersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetGroupMembersRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetGroupMembersRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetGroupMembersUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetGroupMembersTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetGroupMembersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetGroupMembersServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetGroupMembersGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetGroupMembersOK creates a GetGroupMembersOK with default headers values
func NewGetGroupMembersOK() *GetGroupMembersOK {
	return &GetGroupMembersOK{}
}

/*
GetGroupMembersOK describes a response with status code 200, with default header values.

successful operation
*/
type GetGroupMembersOK struct {
	Payload *models.UserEntityListing
}

// IsSuccess returns true when this get group members o k response has a 2xx status code
func (o *GetGroupMembersOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get group members o k response has a 3xx status code
func (o *GetGroupMembersOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get group members o k response has a 4xx status code
func (o *GetGroupMembersOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get group members o k response has a 5xx status code
func (o *GetGroupMembersOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get group members o k response a status code equal to that given
func (o *GetGroupMembersOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetGroupMembersOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/groups/{groupId}/members][%d] getGroupMembersOK  %+v", 200, o.Payload)
}

func (o *GetGroupMembersOK) String() string {
	return fmt.Sprintf("[GET /api/v2/groups/{groupId}/members][%d] getGroupMembersOK  %+v", 200, o.Payload)
}

func (o *GetGroupMembersOK) GetPayload() *models.UserEntityListing {
	return o.Payload
}

func (o *GetGroupMembersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupMembersBadRequest creates a GetGroupMembersBadRequest with default headers values
func NewGetGroupMembersBadRequest() *GetGroupMembersBadRequest {
	return &GetGroupMembersBadRequest{}
}

/*
GetGroupMembersBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetGroupMembersBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get group members bad request response has a 2xx status code
func (o *GetGroupMembersBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get group members bad request response has a 3xx status code
func (o *GetGroupMembersBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get group members bad request response has a 4xx status code
func (o *GetGroupMembersBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get group members bad request response has a 5xx status code
func (o *GetGroupMembersBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get group members bad request response a status code equal to that given
func (o *GetGroupMembersBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetGroupMembersBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/groups/{groupId}/members][%d] getGroupMembersBadRequest  %+v", 400, o.Payload)
}

func (o *GetGroupMembersBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/groups/{groupId}/members][%d] getGroupMembersBadRequest  %+v", 400, o.Payload)
}

func (o *GetGroupMembersBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGroupMembersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupMembersUnauthorized creates a GetGroupMembersUnauthorized with default headers values
func NewGetGroupMembersUnauthorized() *GetGroupMembersUnauthorized {
	return &GetGroupMembersUnauthorized{}
}

/*
GetGroupMembersUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetGroupMembersUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get group members unauthorized response has a 2xx status code
func (o *GetGroupMembersUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get group members unauthorized response has a 3xx status code
func (o *GetGroupMembersUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get group members unauthorized response has a 4xx status code
func (o *GetGroupMembersUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get group members unauthorized response has a 5xx status code
func (o *GetGroupMembersUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get group members unauthorized response a status code equal to that given
func (o *GetGroupMembersUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetGroupMembersUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/groups/{groupId}/members][%d] getGroupMembersUnauthorized  %+v", 401, o.Payload)
}

func (o *GetGroupMembersUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/groups/{groupId}/members][%d] getGroupMembersUnauthorized  %+v", 401, o.Payload)
}

func (o *GetGroupMembersUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGroupMembersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupMembersForbidden creates a GetGroupMembersForbidden with default headers values
func NewGetGroupMembersForbidden() *GetGroupMembersForbidden {
	return &GetGroupMembersForbidden{}
}

/*
GetGroupMembersForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetGroupMembersForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get group members forbidden response has a 2xx status code
func (o *GetGroupMembersForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get group members forbidden response has a 3xx status code
func (o *GetGroupMembersForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get group members forbidden response has a 4xx status code
func (o *GetGroupMembersForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get group members forbidden response has a 5xx status code
func (o *GetGroupMembersForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get group members forbidden response a status code equal to that given
func (o *GetGroupMembersForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetGroupMembersForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/groups/{groupId}/members][%d] getGroupMembersForbidden  %+v", 403, o.Payload)
}

func (o *GetGroupMembersForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/groups/{groupId}/members][%d] getGroupMembersForbidden  %+v", 403, o.Payload)
}

func (o *GetGroupMembersForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGroupMembersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupMembersNotFound creates a GetGroupMembersNotFound with default headers values
func NewGetGroupMembersNotFound() *GetGroupMembersNotFound {
	return &GetGroupMembersNotFound{}
}

/*
GetGroupMembersNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetGroupMembersNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get group members not found response has a 2xx status code
func (o *GetGroupMembersNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get group members not found response has a 3xx status code
func (o *GetGroupMembersNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get group members not found response has a 4xx status code
func (o *GetGroupMembersNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get group members not found response has a 5xx status code
func (o *GetGroupMembersNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get group members not found response a status code equal to that given
func (o *GetGroupMembersNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetGroupMembersNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/groups/{groupId}/members][%d] getGroupMembersNotFound  %+v", 404, o.Payload)
}

func (o *GetGroupMembersNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/groups/{groupId}/members][%d] getGroupMembersNotFound  %+v", 404, o.Payload)
}

func (o *GetGroupMembersNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGroupMembersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupMembersRequestTimeout creates a GetGroupMembersRequestTimeout with default headers values
func NewGetGroupMembersRequestTimeout() *GetGroupMembersRequestTimeout {
	return &GetGroupMembersRequestTimeout{}
}

/*
GetGroupMembersRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetGroupMembersRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get group members request timeout response has a 2xx status code
func (o *GetGroupMembersRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get group members request timeout response has a 3xx status code
func (o *GetGroupMembersRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get group members request timeout response has a 4xx status code
func (o *GetGroupMembersRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get group members request timeout response has a 5xx status code
func (o *GetGroupMembersRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get group members request timeout response a status code equal to that given
func (o *GetGroupMembersRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetGroupMembersRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/groups/{groupId}/members][%d] getGroupMembersRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetGroupMembersRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/groups/{groupId}/members][%d] getGroupMembersRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetGroupMembersRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGroupMembersRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupMembersRequestEntityTooLarge creates a GetGroupMembersRequestEntityTooLarge with default headers values
func NewGetGroupMembersRequestEntityTooLarge() *GetGroupMembersRequestEntityTooLarge {
	return &GetGroupMembersRequestEntityTooLarge{}
}

/*
GetGroupMembersRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetGroupMembersRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get group members request entity too large response has a 2xx status code
func (o *GetGroupMembersRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get group members request entity too large response has a 3xx status code
func (o *GetGroupMembersRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get group members request entity too large response has a 4xx status code
func (o *GetGroupMembersRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get group members request entity too large response has a 5xx status code
func (o *GetGroupMembersRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get group members request entity too large response a status code equal to that given
func (o *GetGroupMembersRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetGroupMembersRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/groups/{groupId}/members][%d] getGroupMembersRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetGroupMembersRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/groups/{groupId}/members][%d] getGroupMembersRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetGroupMembersRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGroupMembersRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupMembersUnsupportedMediaType creates a GetGroupMembersUnsupportedMediaType with default headers values
func NewGetGroupMembersUnsupportedMediaType() *GetGroupMembersUnsupportedMediaType {
	return &GetGroupMembersUnsupportedMediaType{}
}

/*
GetGroupMembersUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetGroupMembersUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get group members unsupported media type response has a 2xx status code
func (o *GetGroupMembersUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get group members unsupported media type response has a 3xx status code
func (o *GetGroupMembersUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get group members unsupported media type response has a 4xx status code
func (o *GetGroupMembersUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get group members unsupported media type response has a 5xx status code
func (o *GetGroupMembersUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get group members unsupported media type response a status code equal to that given
func (o *GetGroupMembersUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetGroupMembersUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/groups/{groupId}/members][%d] getGroupMembersUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetGroupMembersUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/groups/{groupId}/members][%d] getGroupMembersUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetGroupMembersUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGroupMembersUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupMembersTooManyRequests creates a GetGroupMembersTooManyRequests with default headers values
func NewGetGroupMembersTooManyRequests() *GetGroupMembersTooManyRequests {
	return &GetGroupMembersTooManyRequests{}
}

/*
GetGroupMembersTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetGroupMembersTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get group members too many requests response has a 2xx status code
func (o *GetGroupMembersTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get group members too many requests response has a 3xx status code
func (o *GetGroupMembersTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get group members too many requests response has a 4xx status code
func (o *GetGroupMembersTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get group members too many requests response has a 5xx status code
func (o *GetGroupMembersTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get group members too many requests response a status code equal to that given
func (o *GetGroupMembersTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetGroupMembersTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/groups/{groupId}/members][%d] getGroupMembersTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetGroupMembersTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/groups/{groupId}/members][%d] getGroupMembersTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetGroupMembersTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGroupMembersTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupMembersInternalServerError creates a GetGroupMembersInternalServerError with default headers values
func NewGetGroupMembersInternalServerError() *GetGroupMembersInternalServerError {
	return &GetGroupMembersInternalServerError{}
}

/*
GetGroupMembersInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetGroupMembersInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get group members internal server error response has a 2xx status code
func (o *GetGroupMembersInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get group members internal server error response has a 3xx status code
func (o *GetGroupMembersInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get group members internal server error response has a 4xx status code
func (o *GetGroupMembersInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get group members internal server error response has a 5xx status code
func (o *GetGroupMembersInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get group members internal server error response a status code equal to that given
func (o *GetGroupMembersInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetGroupMembersInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/groups/{groupId}/members][%d] getGroupMembersInternalServerError  %+v", 500, o.Payload)
}

func (o *GetGroupMembersInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/groups/{groupId}/members][%d] getGroupMembersInternalServerError  %+v", 500, o.Payload)
}

func (o *GetGroupMembersInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGroupMembersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupMembersServiceUnavailable creates a GetGroupMembersServiceUnavailable with default headers values
func NewGetGroupMembersServiceUnavailable() *GetGroupMembersServiceUnavailable {
	return &GetGroupMembersServiceUnavailable{}
}

/*
GetGroupMembersServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetGroupMembersServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get group members service unavailable response has a 2xx status code
func (o *GetGroupMembersServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get group members service unavailable response has a 3xx status code
func (o *GetGroupMembersServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get group members service unavailable response has a 4xx status code
func (o *GetGroupMembersServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get group members service unavailable response has a 5xx status code
func (o *GetGroupMembersServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get group members service unavailable response a status code equal to that given
func (o *GetGroupMembersServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetGroupMembersServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/groups/{groupId}/members][%d] getGroupMembersServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetGroupMembersServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/groups/{groupId}/members][%d] getGroupMembersServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetGroupMembersServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGroupMembersServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupMembersGatewayTimeout creates a GetGroupMembersGatewayTimeout with default headers values
func NewGetGroupMembersGatewayTimeout() *GetGroupMembersGatewayTimeout {
	return &GetGroupMembersGatewayTimeout{}
}

/*
GetGroupMembersGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetGroupMembersGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get group members gateway timeout response has a 2xx status code
func (o *GetGroupMembersGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get group members gateway timeout response has a 3xx status code
func (o *GetGroupMembersGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get group members gateway timeout response has a 4xx status code
func (o *GetGroupMembersGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get group members gateway timeout response has a 5xx status code
func (o *GetGroupMembersGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get group members gateway timeout response a status code equal to that given
func (o *GetGroupMembersGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetGroupMembersGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/groups/{groupId}/members][%d] getGroupMembersGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetGroupMembersGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/groups/{groupId}/members][%d] getGroupMembersGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetGroupMembersGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGroupMembersGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
