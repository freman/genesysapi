// Code generated by go-swagger; DO NOT EDIT.

package search

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetSearchParams creates a new GetSearchParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetSearchParams() *GetSearchParams {
	return &GetSearchParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetSearchParamsWithTimeout creates a new GetSearchParams object
// with the ability to set a timeout on a request.
func NewGetSearchParamsWithTimeout(timeout time.Duration) *GetSearchParams {
	return &GetSearchParams{
		timeout: timeout,
	}
}

// NewGetSearchParamsWithContext creates a new GetSearchParams object
// with the ability to set a context for a request.
func NewGetSearchParamsWithContext(ctx context.Context) *GetSearchParams {
	return &GetSearchParams{
		Context: ctx,
	}
}

// NewGetSearchParamsWithHTTPClient creates a new GetSearchParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetSearchParamsWithHTTPClient(client *http.Client) *GetSearchParams {
	return &GetSearchParams{
		HTTPClient: client,
	}
}

/*
GetSearchParams contains all the parameters to send to the API endpoint

	for the get search operation.

	Typically these are written to a http.Request.
*/
type GetSearchParams struct {

	/* Expand.

	   Which fields, if any, to expand
	*/
	Expand []string

	/* Profile.

	   profile

	   Default: true
	*/
	Profile *bool

	/* Q64.

	   q64
	*/
	Q64 string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get search params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetSearchParams) WithDefaults() *GetSearchParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get search params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetSearchParams) SetDefaults() {
	var (
		profileDefault = bool(true)
	)

	val := GetSearchParams{
		Profile: &profileDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the get search params
func (o *GetSearchParams) WithTimeout(timeout time.Duration) *GetSearchParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get search params
func (o *GetSearchParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get search params
func (o *GetSearchParams) WithContext(ctx context.Context) *GetSearchParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get search params
func (o *GetSearchParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get search params
func (o *GetSearchParams) WithHTTPClient(client *http.Client) *GetSearchParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get search params
func (o *GetSearchParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithExpand adds the expand to the get search params
func (o *GetSearchParams) WithExpand(expand []string) *GetSearchParams {
	o.SetExpand(expand)
	return o
}

// SetExpand adds the expand to the get search params
func (o *GetSearchParams) SetExpand(expand []string) {
	o.Expand = expand
}

// WithProfile adds the profile to the get search params
func (o *GetSearchParams) WithProfile(profile *bool) *GetSearchParams {
	o.SetProfile(profile)
	return o
}

// SetProfile adds the profile to the get search params
func (o *GetSearchParams) SetProfile(profile *bool) {
	o.Profile = profile
}

// WithQ64 adds the q64 to the get search params
func (o *GetSearchParams) WithQ64(q64 string) *GetSearchParams {
	o.SetQ64(q64)
	return o
}

// SetQ64 adds the q64 to the get search params
func (o *GetSearchParams) SetQ64(q64 string) {
	o.Q64 = q64
}

// WriteToRequest writes these params to a swagger request
func (o *GetSearchParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Expand != nil {

		// binding items for expand
		joinedExpand := o.bindParamExpand(reg)

		// query array param expand
		if err := r.SetQueryParam("expand", joinedExpand...); err != nil {
			return err
		}
	}

	if o.Profile != nil {

		// query param profile
		var qrProfile bool

		if o.Profile != nil {
			qrProfile = *o.Profile
		}
		qProfile := swag.FormatBool(qrProfile)
		if qProfile != "" {

			if err := r.SetQueryParam("profile", qProfile); err != nil {
				return err
			}
		}
	}

	// query param q64
	qrQ64 := o.Q64
	qQ64 := qrQ64
	if qQ64 != "" {

		if err := r.SetQueryParam("q64", qQ64); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetSearch binds the parameter expand
func (o *GetSearchParams) bindParamExpand(formats strfmt.Registry) []string {
	expandIR := o.Expand

	var expandIC []string
	for _, expandIIR := range expandIR { // explode []string

		expandIIV := expandIIR // string as string
		expandIC = append(expandIC, expandIIV)
	}

	// items.CollectionFormat: "multi"
	expandIS := swag.JoinByFormat(expandIC, "multi")

	return expandIS
}
