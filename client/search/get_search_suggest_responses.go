// Code generated by go-swagger; DO NOT EDIT.

package search

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetSearchSuggestReader is a Reader for the GetSearchSuggest structure.
type GetSearchSuggestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSearchSuggestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSearchSuggestOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetSearchSuggestBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetSearchSuggestUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetSearchSuggestForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSearchSuggestNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetSearchSuggestRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetSearchSuggestUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetSearchSuggestTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSearchSuggestInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetSearchSuggestServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetSearchSuggestGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetSearchSuggestOK creates a GetSearchSuggestOK with default headers values
func NewGetSearchSuggestOK() *GetSearchSuggestOK {
	return &GetSearchSuggestOK{}
}

/*GetSearchSuggestOK handles this case with default header values.

successful operation
*/
type GetSearchSuggestOK struct {
	Payload *models.JSONNodeSearchResponse
}

func (o *GetSearchSuggestOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/search/suggest][%d] getSearchSuggestOK  %+v", 200, o.Payload)
}

func (o *GetSearchSuggestOK) GetPayload() *models.JSONNodeSearchResponse {
	return o.Payload
}

func (o *GetSearchSuggestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.JSONNodeSearchResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSearchSuggestBadRequest creates a GetSearchSuggestBadRequest with default headers values
func NewGetSearchSuggestBadRequest() *GetSearchSuggestBadRequest {
	return &GetSearchSuggestBadRequest{}
}

/*GetSearchSuggestBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetSearchSuggestBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetSearchSuggestBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/search/suggest][%d] getSearchSuggestBadRequest  %+v", 400, o.Payload)
}

func (o *GetSearchSuggestBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSearchSuggestBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSearchSuggestUnauthorized creates a GetSearchSuggestUnauthorized with default headers values
func NewGetSearchSuggestUnauthorized() *GetSearchSuggestUnauthorized {
	return &GetSearchSuggestUnauthorized{}
}

/*GetSearchSuggestUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetSearchSuggestUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetSearchSuggestUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/search/suggest][%d] getSearchSuggestUnauthorized  %+v", 401, o.Payload)
}

func (o *GetSearchSuggestUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSearchSuggestUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSearchSuggestForbidden creates a GetSearchSuggestForbidden with default headers values
func NewGetSearchSuggestForbidden() *GetSearchSuggestForbidden {
	return &GetSearchSuggestForbidden{}
}

/*GetSearchSuggestForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetSearchSuggestForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetSearchSuggestForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/search/suggest][%d] getSearchSuggestForbidden  %+v", 403, o.Payload)
}

func (o *GetSearchSuggestForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSearchSuggestForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSearchSuggestNotFound creates a GetSearchSuggestNotFound with default headers values
func NewGetSearchSuggestNotFound() *GetSearchSuggestNotFound {
	return &GetSearchSuggestNotFound{}
}

/*GetSearchSuggestNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetSearchSuggestNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetSearchSuggestNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/search/suggest][%d] getSearchSuggestNotFound  %+v", 404, o.Payload)
}

func (o *GetSearchSuggestNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSearchSuggestNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSearchSuggestRequestEntityTooLarge creates a GetSearchSuggestRequestEntityTooLarge with default headers values
func NewGetSearchSuggestRequestEntityTooLarge() *GetSearchSuggestRequestEntityTooLarge {
	return &GetSearchSuggestRequestEntityTooLarge{}
}

/*GetSearchSuggestRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetSearchSuggestRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetSearchSuggestRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/search/suggest][%d] getSearchSuggestRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetSearchSuggestRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSearchSuggestRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSearchSuggestUnsupportedMediaType creates a GetSearchSuggestUnsupportedMediaType with default headers values
func NewGetSearchSuggestUnsupportedMediaType() *GetSearchSuggestUnsupportedMediaType {
	return &GetSearchSuggestUnsupportedMediaType{}
}

/*GetSearchSuggestUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetSearchSuggestUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetSearchSuggestUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/search/suggest][%d] getSearchSuggestUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetSearchSuggestUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSearchSuggestUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSearchSuggestTooManyRequests creates a GetSearchSuggestTooManyRequests with default headers values
func NewGetSearchSuggestTooManyRequests() *GetSearchSuggestTooManyRequests {
	return &GetSearchSuggestTooManyRequests{}
}

/*GetSearchSuggestTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type GetSearchSuggestTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetSearchSuggestTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/search/suggest][%d] getSearchSuggestTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetSearchSuggestTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSearchSuggestTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSearchSuggestInternalServerError creates a GetSearchSuggestInternalServerError with default headers values
func NewGetSearchSuggestInternalServerError() *GetSearchSuggestInternalServerError {
	return &GetSearchSuggestInternalServerError{}
}

/*GetSearchSuggestInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetSearchSuggestInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetSearchSuggestInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/search/suggest][%d] getSearchSuggestInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSearchSuggestInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSearchSuggestInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSearchSuggestServiceUnavailable creates a GetSearchSuggestServiceUnavailable with default headers values
func NewGetSearchSuggestServiceUnavailable() *GetSearchSuggestServiceUnavailable {
	return &GetSearchSuggestServiceUnavailable{}
}

/*GetSearchSuggestServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetSearchSuggestServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetSearchSuggestServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/search/suggest][%d] getSearchSuggestServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetSearchSuggestServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSearchSuggestServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSearchSuggestGatewayTimeout creates a GetSearchSuggestGatewayTimeout with default headers values
func NewGetSearchSuggestGatewayTimeout() *GetSearchSuggestGatewayTimeout {
	return &GetSearchSuggestGatewayTimeout{}
}

/*GetSearchSuggestGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetSearchSuggestGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetSearchSuggestGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/search/suggest][%d] getSearchSuggestGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetSearchSuggestGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSearchSuggestGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
