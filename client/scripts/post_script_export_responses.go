// Code generated by go-swagger; DO NOT EDIT.

package scripts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostScriptExportReader is a Reader for the PostScriptExport structure.
type PostScriptExportReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostScriptExportReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostScriptExportOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostScriptExportBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostScriptExportUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostScriptExportForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostScriptExportNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostScriptExportRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostScriptExportRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostScriptExportUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostScriptExportTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostScriptExportInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostScriptExportServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostScriptExportGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostScriptExportOK creates a PostScriptExportOK with default headers values
func NewPostScriptExportOK() *PostScriptExportOK {
	return &PostScriptExportOK{}
}

/*
PostScriptExportOK describes a response with status code 200, with default header values.

successful operation
*/
type PostScriptExportOK struct {
	Payload *models.ExportScriptResponse
}

// IsSuccess returns true when this post script export o k response has a 2xx status code
func (o *PostScriptExportOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post script export o k response has a 3xx status code
func (o *PostScriptExportOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post script export o k response has a 4xx status code
func (o *PostScriptExportOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post script export o k response has a 5xx status code
func (o *PostScriptExportOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post script export o k response a status code equal to that given
func (o *PostScriptExportOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostScriptExportOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/scripts/{scriptId}/export][%d] postScriptExportOK  %+v", 200, o.Payload)
}

func (o *PostScriptExportOK) String() string {
	return fmt.Sprintf("[POST /api/v2/scripts/{scriptId}/export][%d] postScriptExportOK  %+v", 200, o.Payload)
}

func (o *PostScriptExportOK) GetPayload() *models.ExportScriptResponse {
	return o.Payload
}

func (o *PostScriptExportOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ExportScriptResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostScriptExportBadRequest creates a PostScriptExportBadRequest with default headers values
func NewPostScriptExportBadRequest() *PostScriptExportBadRequest {
	return &PostScriptExportBadRequest{}
}

/*
PostScriptExportBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostScriptExportBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post script export bad request response has a 2xx status code
func (o *PostScriptExportBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post script export bad request response has a 3xx status code
func (o *PostScriptExportBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post script export bad request response has a 4xx status code
func (o *PostScriptExportBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post script export bad request response has a 5xx status code
func (o *PostScriptExportBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post script export bad request response a status code equal to that given
func (o *PostScriptExportBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostScriptExportBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/scripts/{scriptId}/export][%d] postScriptExportBadRequest  %+v", 400, o.Payload)
}

func (o *PostScriptExportBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/scripts/{scriptId}/export][%d] postScriptExportBadRequest  %+v", 400, o.Payload)
}

func (o *PostScriptExportBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostScriptExportBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostScriptExportUnauthorized creates a PostScriptExportUnauthorized with default headers values
func NewPostScriptExportUnauthorized() *PostScriptExportUnauthorized {
	return &PostScriptExportUnauthorized{}
}

/*
PostScriptExportUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostScriptExportUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post script export unauthorized response has a 2xx status code
func (o *PostScriptExportUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post script export unauthorized response has a 3xx status code
func (o *PostScriptExportUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post script export unauthorized response has a 4xx status code
func (o *PostScriptExportUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post script export unauthorized response has a 5xx status code
func (o *PostScriptExportUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post script export unauthorized response a status code equal to that given
func (o *PostScriptExportUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostScriptExportUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/scripts/{scriptId}/export][%d] postScriptExportUnauthorized  %+v", 401, o.Payload)
}

func (o *PostScriptExportUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/scripts/{scriptId}/export][%d] postScriptExportUnauthorized  %+v", 401, o.Payload)
}

func (o *PostScriptExportUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostScriptExportUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostScriptExportForbidden creates a PostScriptExportForbidden with default headers values
func NewPostScriptExportForbidden() *PostScriptExportForbidden {
	return &PostScriptExportForbidden{}
}

/*
PostScriptExportForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostScriptExportForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post script export forbidden response has a 2xx status code
func (o *PostScriptExportForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post script export forbidden response has a 3xx status code
func (o *PostScriptExportForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post script export forbidden response has a 4xx status code
func (o *PostScriptExportForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post script export forbidden response has a 5xx status code
func (o *PostScriptExportForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post script export forbidden response a status code equal to that given
func (o *PostScriptExportForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostScriptExportForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/scripts/{scriptId}/export][%d] postScriptExportForbidden  %+v", 403, o.Payload)
}

func (o *PostScriptExportForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/scripts/{scriptId}/export][%d] postScriptExportForbidden  %+v", 403, o.Payload)
}

func (o *PostScriptExportForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostScriptExportForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostScriptExportNotFound creates a PostScriptExportNotFound with default headers values
func NewPostScriptExportNotFound() *PostScriptExportNotFound {
	return &PostScriptExportNotFound{}
}

/*
PostScriptExportNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostScriptExportNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post script export not found response has a 2xx status code
func (o *PostScriptExportNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post script export not found response has a 3xx status code
func (o *PostScriptExportNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post script export not found response has a 4xx status code
func (o *PostScriptExportNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post script export not found response has a 5xx status code
func (o *PostScriptExportNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post script export not found response a status code equal to that given
func (o *PostScriptExportNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostScriptExportNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/scripts/{scriptId}/export][%d] postScriptExportNotFound  %+v", 404, o.Payload)
}

func (o *PostScriptExportNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/scripts/{scriptId}/export][%d] postScriptExportNotFound  %+v", 404, o.Payload)
}

func (o *PostScriptExportNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostScriptExportNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostScriptExportRequestTimeout creates a PostScriptExportRequestTimeout with default headers values
func NewPostScriptExportRequestTimeout() *PostScriptExportRequestTimeout {
	return &PostScriptExportRequestTimeout{}
}

/*
PostScriptExportRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostScriptExportRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post script export request timeout response has a 2xx status code
func (o *PostScriptExportRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post script export request timeout response has a 3xx status code
func (o *PostScriptExportRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post script export request timeout response has a 4xx status code
func (o *PostScriptExportRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post script export request timeout response has a 5xx status code
func (o *PostScriptExportRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post script export request timeout response a status code equal to that given
func (o *PostScriptExportRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostScriptExportRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/scripts/{scriptId}/export][%d] postScriptExportRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostScriptExportRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/scripts/{scriptId}/export][%d] postScriptExportRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostScriptExportRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostScriptExportRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostScriptExportRequestEntityTooLarge creates a PostScriptExportRequestEntityTooLarge with default headers values
func NewPostScriptExportRequestEntityTooLarge() *PostScriptExportRequestEntityTooLarge {
	return &PostScriptExportRequestEntityTooLarge{}
}

/*
PostScriptExportRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PostScriptExportRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post script export request entity too large response has a 2xx status code
func (o *PostScriptExportRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post script export request entity too large response has a 3xx status code
func (o *PostScriptExportRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post script export request entity too large response has a 4xx status code
func (o *PostScriptExportRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post script export request entity too large response has a 5xx status code
func (o *PostScriptExportRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post script export request entity too large response a status code equal to that given
func (o *PostScriptExportRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostScriptExportRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/scripts/{scriptId}/export][%d] postScriptExportRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostScriptExportRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/scripts/{scriptId}/export][%d] postScriptExportRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostScriptExportRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostScriptExportRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostScriptExportUnsupportedMediaType creates a PostScriptExportUnsupportedMediaType with default headers values
func NewPostScriptExportUnsupportedMediaType() *PostScriptExportUnsupportedMediaType {
	return &PostScriptExportUnsupportedMediaType{}
}

/*
PostScriptExportUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostScriptExportUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post script export unsupported media type response has a 2xx status code
func (o *PostScriptExportUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post script export unsupported media type response has a 3xx status code
func (o *PostScriptExportUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post script export unsupported media type response has a 4xx status code
func (o *PostScriptExportUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post script export unsupported media type response has a 5xx status code
func (o *PostScriptExportUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post script export unsupported media type response a status code equal to that given
func (o *PostScriptExportUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostScriptExportUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/scripts/{scriptId}/export][%d] postScriptExportUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostScriptExportUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/scripts/{scriptId}/export][%d] postScriptExportUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostScriptExportUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostScriptExportUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostScriptExportTooManyRequests creates a PostScriptExportTooManyRequests with default headers values
func NewPostScriptExportTooManyRequests() *PostScriptExportTooManyRequests {
	return &PostScriptExportTooManyRequests{}
}

/*
PostScriptExportTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostScriptExportTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post script export too many requests response has a 2xx status code
func (o *PostScriptExportTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post script export too many requests response has a 3xx status code
func (o *PostScriptExportTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post script export too many requests response has a 4xx status code
func (o *PostScriptExportTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post script export too many requests response has a 5xx status code
func (o *PostScriptExportTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post script export too many requests response a status code equal to that given
func (o *PostScriptExportTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostScriptExportTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/scripts/{scriptId}/export][%d] postScriptExportTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostScriptExportTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/scripts/{scriptId}/export][%d] postScriptExportTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostScriptExportTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostScriptExportTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostScriptExportInternalServerError creates a PostScriptExportInternalServerError with default headers values
func NewPostScriptExportInternalServerError() *PostScriptExportInternalServerError {
	return &PostScriptExportInternalServerError{}
}

/*
PostScriptExportInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostScriptExportInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post script export internal server error response has a 2xx status code
func (o *PostScriptExportInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post script export internal server error response has a 3xx status code
func (o *PostScriptExportInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post script export internal server error response has a 4xx status code
func (o *PostScriptExportInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post script export internal server error response has a 5xx status code
func (o *PostScriptExportInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post script export internal server error response a status code equal to that given
func (o *PostScriptExportInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostScriptExportInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/scripts/{scriptId}/export][%d] postScriptExportInternalServerError  %+v", 500, o.Payload)
}

func (o *PostScriptExportInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/scripts/{scriptId}/export][%d] postScriptExportInternalServerError  %+v", 500, o.Payload)
}

func (o *PostScriptExportInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostScriptExportInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostScriptExportServiceUnavailable creates a PostScriptExportServiceUnavailable with default headers values
func NewPostScriptExportServiceUnavailable() *PostScriptExportServiceUnavailable {
	return &PostScriptExportServiceUnavailable{}
}

/*
PostScriptExportServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostScriptExportServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post script export service unavailable response has a 2xx status code
func (o *PostScriptExportServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post script export service unavailable response has a 3xx status code
func (o *PostScriptExportServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post script export service unavailable response has a 4xx status code
func (o *PostScriptExportServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post script export service unavailable response has a 5xx status code
func (o *PostScriptExportServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post script export service unavailable response a status code equal to that given
func (o *PostScriptExportServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostScriptExportServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/scripts/{scriptId}/export][%d] postScriptExportServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostScriptExportServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/scripts/{scriptId}/export][%d] postScriptExportServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostScriptExportServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostScriptExportServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostScriptExportGatewayTimeout creates a PostScriptExportGatewayTimeout with default headers values
func NewPostScriptExportGatewayTimeout() *PostScriptExportGatewayTimeout {
	return &PostScriptExportGatewayTimeout{}
}

/*
PostScriptExportGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostScriptExportGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post script export gateway timeout response has a 2xx status code
func (o *PostScriptExportGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post script export gateway timeout response has a 3xx status code
func (o *PostScriptExportGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post script export gateway timeout response has a 4xx status code
func (o *PostScriptExportGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post script export gateway timeout response has a 5xx status code
func (o *PostScriptExportGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post script export gateway timeout response a status code equal to that given
func (o *PostScriptExportGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostScriptExportGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/scripts/{scriptId}/export][%d] postScriptExportGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostScriptExportGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/scripts/{scriptId}/export][%d] postScriptExportGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostScriptExportGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostScriptExportGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
