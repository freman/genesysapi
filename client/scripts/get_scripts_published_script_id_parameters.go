// Code generated by go-swagger; DO NOT EDIT.

package scripts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetScriptsPublishedScriptIDParams creates a new GetScriptsPublishedScriptIDParams object
// with the default values initialized.
func NewGetScriptsPublishedScriptIDParams() *GetScriptsPublishedScriptIDParams {
	var ()
	return &GetScriptsPublishedScriptIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetScriptsPublishedScriptIDParamsWithTimeout creates a new GetScriptsPublishedScriptIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetScriptsPublishedScriptIDParamsWithTimeout(timeout time.Duration) *GetScriptsPublishedScriptIDParams {
	var ()
	return &GetScriptsPublishedScriptIDParams{

		timeout: timeout,
	}
}

// NewGetScriptsPublishedScriptIDParamsWithContext creates a new GetScriptsPublishedScriptIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetScriptsPublishedScriptIDParamsWithContext(ctx context.Context) *GetScriptsPublishedScriptIDParams {
	var ()
	return &GetScriptsPublishedScriptIDParams{

		Context: ctx,
	}
}

// NewGetScriptsPublishedScriptIDParamsWithHTTPClient creates a new GetScriptsPublishedScriptIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetScriptsPublishedScriptIDParamsWithHTTPClient(client *http.Client) *GetScriptsPublishedScriptIDParams {
	var ()
	return &GetScriptsPublishedScriptIDParams{
		HTTPClient: client,
	}
}

/*GetScriptsPublishedScriptIDParams contains all the parameters to send to the API endpoint
for the get scripts published script Id operation typically these are written to a http.Request
*/
type GetScriptsPublishedScriptIDParams struct {

	/*ScriptDataVersion
	  Advanced usage - controls the data version of the script

	*/
	ScriptDataVersion *string
	/*ScriptID
	  Script ID

	*/
	ScriptID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get scripts published script Id params
func (o *GetScriptsPublishedScriptIDParams) WithTimeout(timeout time.Duration) *GetScriptsPublishedScriptIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get scripts published script Id params
func (o *GetScriptsPublishedScriptIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get scripts published script Id params
func (o *GetScriptsPublishedScriptIDParams) WithContext(ctx context.Context) *GetScriptsPublishedScriptIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get scripts published script Id params
func (o *GetScriptsPublishedScriptIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get scripts published script Id params
func (o *GetScriptsPublishedScriptIDParams) WithHTTPClient(client *http.Client) *GetScriptsPublishedScriptIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get scripts published script Id params
func (o *GetScriptsPublishedScriptIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithScriptDataVersion adds the scriptDataVersion to the get scripts published script Id params
func (o *GetScriptsPublishedScriptIDParams) WithScriptDataVersion(scriptDataVersion *string) *GetScriptsPublishedScriptIDParams {
	o.SetScriptDataVersion(scriptDataVersion)
	return o
}

// SetScriptDataVersion adds the scriptDataVersion to the get scripts published script Id params
func (o *GetScriptsPublishedScriptIDParams) SetScriptDataVersion(scriptDataVersion *string) {
	o.ScriptDataVersion = scriptDataVersion
}

// WithScriptID adds the scriptID to the get scripts published script Id params
func (o *GetScriptsPublishedScriptIDParams) WithScriptID(scriptID string) *GetScriptsPublishedScriptIDParams {
	o.SetScriptID(scriptID)
	return o
}

// SetScriptID adds the scriptId to the get scripts published script Id params
func (o *GetScriptsPublishedScriptIDParams) SetScriptID(scriptID string) {
	o.ScriptID = scriptID
}

// WriteToRequest writes these params to a swagger request
func (o *GetScriptsPublishedScriptIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ScriptDataVersion != nil {

		// query param scriptDataVersion
		var qrScriptDataVersion string
		if o.ScriptDataVersion != nil {
			qrScriptDataVersion = *o.ScriptDataVersion
		}
		qScriptDataVersion := qrScriptDataVersion
		if qScriptDataVersion != "" {
			if err := r.SetQueryParam("scriptDataVersion", qScriptDataVersion); err != nil {
				return err
			}
		}

	}

	// path param scriptId
	if err := r.SetPathParam("scriptId", o.ScriptID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
