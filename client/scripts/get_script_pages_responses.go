// Code generated by go-swagger; DO NOT EDIT.

package scripts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetScriptPagesReader is a Reader for the GetScriptPages structure.
type GetScriptPagesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetScriptPagesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetScriptPagesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetScriptPagesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetScriptPagesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetScriptPagesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetScriptPagesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetScriptPagesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetScriptPagesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetScriptPagesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetScriptPagesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetScriptPagesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetScriptPagesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetScriptPagesOK creates a GetScriptPagesOK with default headers values
func NewGetScriptPagesOK() *GetScriptPagesOK {
	return &GetScriptPagesOK{}
}

/*GetScriptPagesOK handles this case with default header values.

successful operation
*/
type GetScriptPagesOK struct {
	Payload []*models.Page
}

func (o *GetScriptPagesOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/scripts/{scriptId}/pages][%d] getScriptPagesOK  %+v", 200, o.Payload)
}

func (o *GetScriptPagesOK) GetPayload() []*models.Page {
	return o.Payload
}

func (o *GetScriptPagesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScriptPagesBadRequest creates a GetScriptPagesBadRequest with default headers values
func NewGetScriptPagesBadRequest() *GetScriptPagesBadRequest {
	return &GetScriptPagesBadRequest{}
}

/*GetScriptPagesBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetScriptPagesBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetScriptPagesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/scripts/{scriptId}/pages][%d] getScriptPagesBadRequest  %+v", 400, o.Payload)
}

func (o *GetScriptPagesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScriptPagesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScriptPagesUnauthorized creates a GetScriptPagesUnauthorized with default headers values
func NewGetScriptPagesUnauthorized() *GetScriptPagesUnauthorized {
	return &GetScriptPagesUnauthorized{}
}

/*GetScriptPagesUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetScriptPagesUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetScriptPagesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/scripts/{scriptId}/pages][%d] getScriptPagesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetScriptPagesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScriptPagesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScriptPagesForbidden creates a GetScriptPagesForbidden with default headers values
func NewGetScriptPagesForbidden() *GetScriptPagesForbidden {
	return &GetScriptPagesForbidden{}
}

/*GetScriptPagesForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetScriptPagesForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetScriptPagesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/scripts/{scriptId}/pages][%d] getScriptPagesForbidden  %+v", 403, o.Payload)
}

func (o *GetScriptPagesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScriptPagesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScriptPagesNotFound creates a GetScriptPagesNotFound with default headers values
func NewGetScriptPagesNotFound() *GetScriptPagesNotFound {
	return &GetScriptPagesNotFound{}
}

/*GetScriptPagesNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetScriptPagesNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetScriptPagesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/scripts/{scriptId}/pages][%d] getScriptPagesNotFound  %+v", 404, o.Payload)
}

func (o *GetScriptPagesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScriptPagesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScriptPagesRequestEntityTooLarge creates a GetScriptPagesRequestEntityTooLarge with default headers values
func NewGetScriptPagesRequestEntityTooLarge() *GetScriptPagesRequestEntityTooLarge {
	return &GetScriptPagesRequestEntityTooLarge{}
}

/*GetScriptPagesRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetScriptPagesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetScriptPagesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/scripts/{scriptId}/pages][%d] getScriptPagesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetScriptPagesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScriptPagesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScriptPagesUnsupportedMediaType creates a GetScriptPagesUnsupportedMediaType with default headers values
func NewGetScriptPagesUnsupportedMediaType() *GetScriptPagesUnsupportedMediaType {
	return &GetScriptPagesUnsupportedMediaType{}
}

/*GetScriptPagesUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetScriptPagesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetScriptPagesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/scripts/{scriptId}/pages][%d] getScriptPagesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetScriptPagesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScriptPagesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScriptPagesTooManyRequests creates a GetScriptPagesTooManyRequests with default headers values
func NewGetScriptPagesTooManyRequests() *GetScriptPagesTooManyRequests {
	return &GetScriptPagesTooManyRequests{}
}

/*GetScriptPagesTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type GetScriptPagesTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetScriptPagesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/scripts/{scriptId}/pages][%d] getScriptPagesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetScriptPagesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScriptPagesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScriptPagesInternalServerError creates a GetScriptPagesInternalServerError with default headers values
func NewGetScriptPagesInternalServerError() *GetScriptPagesInternalServerError {
	return &GetScriptPagesInternalServerError{}
}

/*GetScriptPagesInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetScriptPagesInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetScriptPagesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/scripts/{scriptId}/pages][%d] getScriptPagesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetScriptPagesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScriptPagesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScriptPagesServiceUnavailable creates a GetScriptPagesServiceUnavailable with default headers values
func NewGetScriptPagesServiceUnavailable() *GetScriptPagesServiceUnavailable {
	return &GetScriptPagesServiceUnavailable{}
}

/*GetScriptPagesServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetScriptPagesServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetScriptPagesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/scripts/{scriptId}/pages][%d] getScriptPagesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetScriptPagesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScriptPagesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScriptPagesGatewayTimeout creates a GetScriptPagesGatewayTimeout with default headers values
func NewGetScriptPagesGatewayTimeout() *GetScriptPagesGatewayTimeout {
	return &GetScriptPagesGatewayTimeout{}
}

/*GetScriptPagesGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetScriptPagesGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetScriptPagesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/scripts/{scriptId}/pages][%d] getScriptPagesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetScriptPagesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScriptPagesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
