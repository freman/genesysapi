// Code generated by go-swagger; DO NOT EDIT.

package scripts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetScriptPagesReader is a Reader for the GetScriptPages structure.
type GetScriptPagesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetScriptPagesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetScriptPagesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetScriptPagesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetScriptPagesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetScriptPagesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetScriptPagesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetScriptPagesRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetScriptPagesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetScriptPagesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetScriptPagesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetScriptPagesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetScriptPagesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetScriptPagesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetScriptPagesOK creates a GetScriptPagesOK with default headers values
func NewGetScriptPagesOK() *GetScriptPagesOK {
	return &GetScriptPagesOK{}
}

/*
GetScriptPagesOK describes a response with status code 200, with default header values.

successful operation
*/
type GetScriptPagesOK struct {
	Payload []*models.Page
}

// IsSuccess returns true when this get script pages o k response has a 2xx status code
func (o *GetScriptPagesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get script pages o k response has a 3xx status code
func (o *GetScriptPagesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get script pages o k response has a 4xx status code
func (o *GetScriptPagesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get script pages o k response has a 5xx status code
func (o *GetScriptPagesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get script pages o k response a status code equal to that given
func (o *GetScriptPagesOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetScriptPagesOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/scripts/{scriptId}/pages][%d] getScriptPagesOK  %+v", 200, o.Payload)
}

func (o *GetScriptPagesOK) String() string {
	return fmt.Sprintf("[GET /api/v2/scripts/{scriptId}/pages][%d] getScriptPagesOK  %+v", 200, o.Payload)
}

func (o *GetScriptPagesOK) GetPayload() []*models.Page {
	return o.Payload
}

func (o *GetScriptPagesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScriptPagesBadRequest creates a GetScriptPagesBadRequest with default headers values
func NewGetScriptPagesBadRequest() *GetScriptPagesBadRequest {
	return &GetScriptPagesBadRequest{}
}

/*
GetScriptPagesBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetScriptPagesBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get script pages bad request response has a 2xx status code
func (o *GetScriptPagesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get script pages bad request response has a 3xx status code
func (o *GetScriptPagesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get script pages bad request response has a 4xx status code
func (o *GetScriptPagesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get script pages bad request response has a 5xx status code
func (o *GetScriptPagesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get script pages bad request response a status code equal to that given
func (o *GetScriptPagesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetScriptPagesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/scripts/{scriptId}/pages][%d] getScriptPagesBadRequest  %+v", 400, o.Payload)
}

func (o *GetScriptPagesBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/scripts/{scriptId}/pages][%d] getScriptPagesBadRequest  %+v", 400, o.Payload)
}

func (o *GetScriptPagesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScriptPagesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScriptPagesUnauthorized creates a GetScriptPagesUnauthorized with default headers values
func NewGetScriptPagesUnauthorized() *GetScriptPagesUnauthorized {
	return &GetScriptPagesUnauthorized{}
}

/*
GetScriptPagesUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetScriptPagesUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get script pages unauthorized response has a 2xx status code
func (o *GetScriptPagesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get script pages unauthorized response has a 3xx status code
func (o *GetScriptPagesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get script pages unauthorized response has a 4xx status code
func (o *GetScriptPagesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get script pages unauthorized response has a 5xx status code
func (o *GetScriptPagesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get script pages unauthorized response a status code equal to that given
func (o *GetScriptPagesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetScriptPagesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/scripts/{scriptId}/pages][%d] getScriptPagesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetScriptPagesUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/scripts/{scriptId}/pages][%d] getScriptPagesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetScriptPagesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScriptPagesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScriptPagesForbidden creates a GetScriptPagesForbidden with default headers values
func NewGetScriptPagesForbidden() *GetScriptPagesForbidden {
	return &GetScriptPagesForbidden{}
}

/*
GetScriptPagesForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetScriptPagesForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get script pages forbidden response has a 2xx status code
func (o *GetScriptPagesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get script pages forbidden response has a 3xx status code
func (o *GetScriptPagesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get script pages forbidden response has a 4xx status code
func (o *GetScriptPagesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get script pages forbidden response has a 5xx status code
func (o *GetScriptPagesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get script pages forbidden response a status code equal to that given
func (o *GetScriptPagesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetScriptPagesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/scripts/{scriptId}/pages][%d] getScriptPagesForbidden  %+v", 403, o.Payload)
}

func (o *GetScriptPagesForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/scripts/{scriptId}/pages][%d] getScriptPagesForbidden  %+v", 403, o.Payload)
}

func (o *GetScriptPagesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScriptPagesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScriptPagesNotFound creates a GetScriptPagesNotFound with default headers values
func NewGetScriptPagesNotFound() *GetScriptPagesNotFound {
	return &GetScriptPagesNotFound{}
}

/*
GetScriptPagesNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetScriptPagesNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get script pages not found response has a 2xx status code
func (o *GetScriptPagesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get script pages not found response has a 3xx status code
func (o *GetScriptPagesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get script pages not found response has a 4xx status code
func (o *GetScriptPagesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get script pages not found response has a 5xx status code
func (o *GetScriptPagesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get script pages not found response a status code equal to that given
func (o *GetScriptPagesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetScriptPagesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/scripts/{scriptId}/pages][%d] getScriptPagesNotFound  %+v", 404, o.Payload)
}

func (o *GetScriptPagesNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/scripts/{scriptId}/pages][%d] getScriptPagesNotFound  %+v", 404, o.Payload)
}

func (o *GetScriptPagesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScriptPagesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScriptPagesRequestTimeout creates a GetScriptPagesRequestTimeout with default headers values
func NewGetScriptPagesRequestTimeout() *GetScriptPagesRequestTimeout {
	return &GetScriptPagesRequestTimeout{}
}

/*
GetScriptPagesRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetScriptPagesRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get script pages request timeout response has a 2xx status code
func (o *GetScriptPagesRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get script pages request timeout response has a 3xx status code
func (o *GetScriptPagesRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get script pages request timeout response has a 4xx status code
func (o *GetScriptPagesRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get script pages request timeout response has a 5xx status code
func (o *GetScriptPagesRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get script pages request timeout response a status code equal to that given
func (o *GetScriptPagesRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetScriptPagesRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/scripts/{scriptId}/pages][%d] getScriptPagesRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetScriptPagesRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/scripts/{scriptId}/pages][%d] getScriptPagesRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetScriptPagesRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScriptPagesRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScriptPagesRequestEntityTooLarge creates a GetScriptPagesRequestEntityTooLarge with default headers values
func NewGetScriptPagesRequestEntityTooLarge() *GetScriptPagesRequestEntityTooLarge {
	return &GetScriptPagesRequestEntityTooLarge{}
}

/*
GetScriptPagesRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetScriptPagesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get script pages request entity too large response has a 2xx status code
func (o *GetScriptPagesRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get script pages request entity too large response has a 3xx status code
func (o *GetScriptPagesRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get script pages request entity too large response has a 4xx status code
func (o *GetScriptPagesRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get script pages request entity too large response has a 5xx status code
func (o *GetScriptPagesRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get script pages request entity too large response a status code equal to that given
func (o *GetScriptPagesRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetScriptPagesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/scripts/{scriptId}/pages][%d] getScriptPagesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetScriptPagesRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/scripts/{scriptId}/pages][%d] getScriptPagesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetScriptPagesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScriptPagesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScriptPagesUnsupportedMediaType creates a GetScriptPagesUnsupportedMediaType with default headers values
func NewGetScriptPagesUnsupportedMediaType() *GetScriptPagesUnsupportedMediaType {
	return &GetScriptPagesUnsupportedMediaType{}
}

/*
GetScriptPagesUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetScriptPagesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get script pages unsupported media type response has a 2xx status code
func (o *GetScriptPagesUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get script pages unsupported media type response has a 3xx status code
func (o *GetScriptPagesUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get script pages unsupported media type response has a 4xx status code
func (o *GetScriptPagesUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get script pages unsupported media type response has a 5xx status code
func (o *GetScriptPagesUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get script pages unsupported media type response a status code equal to that given
func (o *GetScriptPagesUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetScriptPagesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/scripts/{scriptId}/pages][%d] getScriptPagesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetScriptPagesUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/scripts/{scriptId}/pages][%d] getScriptPagesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetScriptPagesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScriptPagesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScriptPagesTooManyRequests creates a GetScriptPagesTooManyRequests with default headers values
func NewGetScriptPagesTooManyRequests() *GetScriptPagesTooManyRequests {
	return &GetScriptPagesTooManyRequests{}
}

/*
GetScriptPagesTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetScriptPagesTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get script pages too many requests response has a 2xx status code
func (o *GetScriptPagesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get script pages too many requests response has a 3xx status code
func (o *GetScriptPagesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get script pages too many requests response has a 4xx status code
func (o *GetScriptPagesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get script pages too many requests response has a 5xx status code
func (o *GetScriptPagesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get script pages too many requests response a status code equal to that given
func (o *GetScriptPagesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetScriptPagesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/scripts/{scriptId}/pages][%d] getScriptPagesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetScriptPagesTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/scripts/{scriptId}/pages][%d] getScriptPagesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetScriptPagesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScriptPagesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScriptPagesInternalServerError creates a GetScriptPagesInternalServerError with default headers values
func NewGetScriptPagesInternalServerError() *GetScriptPagesInternalServerError {
	return &GetScriptPagesInternalServerError{}
}

/*
GetScriptPagesInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetScriptPagesInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get script pages internal server error response has a 2xx status code
func (o *GetScriptPagesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get script pages internal server error response has a 3xx status code
func (o *GetScriptPagesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get script pages internal server error response has a 4xx status code
func (o *GetScriptPagesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get script pages internal server error response has a 5xx status code
func (o *GetScriptPagesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get script pages internal server error response a status code equal to that given
func (o *GetScriptPagesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetScriptPagesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/scripts/{scriptId}/pages][%d] getScriptPagesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetScriptPagesInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/scripts/{scriptId}/pages][%d] getScriptPagesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetScriptPagesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScriptPagesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScriptPagesServiceUnavailable creates a GetScriptPagesServiceUnavailable with default headers values
func NewGetScriptPagesServiceUnavailable() *GetScriptPagesServiceUnavailable {
	return &GetScriptPagesServiceUnavailable{}
}

/*
GetScriptPagesServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetScriptPagesServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get script pages service unavailable response has a 2xx status code
func (o *GetScriptPagesServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get script pages service unavailable response has a 3xx status code
func (o *GetScriptPagesServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get script pages service unavailable response has a 4xx status code
func (o *GetScriptPagesServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get script pages service unavailable response has a 5xx status code
func (o *GetScriptPagesServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get script pages service unavailable response a status code equal to that given
func (o *GetScriptPagesServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetScriptPagesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/scripts/{scriptId}/pages][%d] getScriptPagesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetScriptPagesServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/scripts/{scriptId}/pages][%d] getScriptPagesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetScriptPagesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScriptPagesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScriptPagesGatewayTimeout creates a GetScriptPagesGatewayTimeout with default headers values
func NewGetScriptPagesGatewayTimeout() *GetScriptPagesGatewayTimeout {
	return &GetScriptPagesGatewayTimeout{}
}

/*
GetScriptPagesGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetScriptPagesGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get script pages gateway timeout response has a 2xx status code
func (o *GetScriptPagesGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get script pages gateway timeout response has a 3xx status code
func (o *GetScriptPagesGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get script pages gateway timeout response has a 4xx status code
func (o *GetScriptPagesGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get script pages gateway timeout response has a 5xx status code
func (o *GetScriptPagesGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get script pages gateway timeout response a status code equal to that given
func (o *GetScriptPagesGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetScriptPagesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/scripts/{scriptId}/pages][%d] getScriptPagesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetScriptPagesGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/scripts/{scriptId}/pages][%d] getScriptPagesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetScriptPagesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScriptPagesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
