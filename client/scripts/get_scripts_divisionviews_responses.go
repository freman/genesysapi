// Code generated by go-swagger; DO NOT EDIT.

package scripts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetScriptsDivisionviewsReader is a Reader for the GetScriptsDivisionviews structure.
type GetScriptsDivisionviewsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetScriptsDivisionviewsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetScriptsDivisionviewsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetScriptsDivisionviewsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetScriptsDivisionviewsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetScriptsDivisionviewsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetScriptsDivisionviewsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetScriptsDivisionviewsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetScriptsDivisionviewsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetScriptsDivisionviewsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetScriptsDivisionviewsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetScriptsDivisionviewsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetScriptsDivisionviewsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetScriptsDivisionviewsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetScriptsDivisionviewsOK creates a GetScriptsDivisionviewsOK with default headers values
func NewGetScriptsDivisionviewsOK() *GetScriptsDivisionviewsOK {
	return &GetScriptsDivisionviewsOK{}
}

/*
GetScriptsDivisionviewsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetScriptsDivisionviewsOK struct {
	Payload *models.ScriptEntityListing
}

// IsSuccess returns true when this get scripts divisionviews o k response has a 2xx status code
func (o *GetScriptsDivisionviewsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get scripts divisionviews o k response has a 3xx status code
func (o *GetScriptsDivisionviewsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scripts divisionviews o k response has a 4xx status code
func (o *GetScriptsDivisionviewsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get scripts divisionviews o k response has a 5xx status code
func (o *GetScriptsDivisionviewsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get scripts divisionviews o k response a status code equal to that given
func (o *GetScriptsDivisionviewsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetScriptsDivisionviewsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/scripts/divisionviews][%d] getScriptsDivisionviewsOK  %+v", 200, o.Payload)
}

func (o *GetScriptsDivisionviewsOK) String() string {
	return fmt.Sprintf("[GET /api/v2/scripts/divisionviews][%d] getScriptsDivisionviewsOK  %+v", 200, o.Payload)
}

func (o *GetScriptsDivisionviewsOK) GetPayload() *models.ScriptEntityListing {
	return o.Payload
}

func (o *GetScriptsDivisionviewsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ScriptEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScriptsDivisionviewsBadRequest creates a GetScriptsDivisionviewsBadRequest with default headers values
func NewGetScriptsDivisionviewsBadRequest() *GetScriptsDivisionviewsBadRequest {
	return &GetScriptsDivisionviewsBadRequest{}
}

/*
GetScriptsDivisionviewsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetScriptsDivisionviewsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get scripts divisionviews bad request response has a 2xx status code
func (o *GetScriptsDivisionviewsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scripts divisionviews bad request response has a 3xx status code
func (o *GetScriptsDivisionviewsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scripts divisionviews bad request response has a 4xx status code
func (o *GetScriptsDivisionviewsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get scripts divisionviews bad request response has a 5xx status code
func (o *GetScriptsDivisionviewsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get scripts divisionviews bad request response a status code equal to that given
func (o *GetScriptsDivisionviewsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetScriptsDivisionviewsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/scripts/divisionviews][%d] getScriptsDivisionviewsBadRequest  %+v", 400, o.Payload)
}

func (o *GetScriptsDivisionviewsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/scripts/divisionviews][%d] getScriptsDivisionviewsBadRequest  %+v", 400, o.Payload)
}

func (o *GetScriptsDivisionviewsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScriptsDivisionviewsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScriptsDivisionviewsUnauthorized creates a GetScriptsDivisionviewsUnauthorized with default headers values
func NewGetScriptsDivisionviewsUnauthorized() *GetScriptsDivisionviewsUnauthorized {
	return &GetScriptsDivisionviewsUnauthorized{}
}

/*
GetScriptsDivisionviewsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetScriptsDivisionviewsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get scripts divisionviews unauthorized response has a 2xx status code
func (o *GetScriptsDivisionviewsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scripts divisionviews unauthorized response has a 3xx status code
func (o *GetScriptsDivisionviewsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scripts divisionviews unauthorized response has a 4xx status code
func (o *GetScriptsDivisionviewsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get scripts divisionviews unauthorized response has a 5xx status code
func (o *GetScriptsDivisionviewsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get scripts divisionviews unauthorized response a status code equal to that given
func (o *GetScriptsDivisionviewsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetScriptsDivisionviewsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/scripts/divisionviews][%d] getScriptsDivisionviewsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetScriptsDivisionviewsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/scripts/divisionviews][%d] getScriptsDivisionviewsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetScriptsDivisionviewsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScriptsDivisionviewsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScriptsDivisionviewsForbidden creates a GetScriptsDivisionviewsForbidden with default headers values
func NewGetScriptsDivisionviewsForbidden() *GetScriptsDivisionviewsForbidden {
	return &GetScriptsDivisionviewsForbidden{}
}

/*
GetScriptsDivisionviewsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetScriptsDivisionviewsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get scripts divisionviews forbidden response has a 2xx status code
func (o *GetScriptsDivisionviewsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scripts divisionviews forbidden response has a 3xx status code
func (o *GetScriptsDivisionviewsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scripts divisionviews forbidden response has a 4xx status code
func (o *GetScriptsDivisionviewsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get scripts divisionviews forbidden response has a 5xx status code
func (o *GetScriptsDivisionviewsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get scripts divisionviews forbidden response a status code equal to that given
func (o *GetScriptsDivisionviewsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetScriptsDivisionviewsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/scripts/divisionviews][%d] getScriptsDivisionviewsForbidden  %+v", 403, o.Payload)
}

func (o *GetScriptsDivisionviewsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/scripts/divisionviews][%d] getScriptsDivisionviewsForbidden  %+v", 403, o.Payload)
}

func (o *GetScriptsDivisionviewsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScriptsDivisionviewsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScriptsDivisionviewsNotFound creates a GetScriptsDivisionviewsNotFound with default headers values
func NewGetScriptsDivisionviewsNotFound() *GetScriptsDivisionviewsNotFound {
	return &GetScriptsDivisionviewsNotFound{}
}

/*
GetScriptsDivisionviewsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetScriptsDivisionviewsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get scripts divisionviews not found response has a 2xx status code
func (o *GetScriptsDivisionviewsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scripts divisionviews not found response has a 3xx status code
func (o *GetScriptsDivisionviewsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scripts divisionviews not found response has a 4xx status code
func (o *GetScriptsDivisionviewsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get scripts divisionviews not found response has a 5xx status code
func (o *GetScriptsDivisionviewsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get scripts divisionviews not found response a status code equal to that given
func (o *GetScriptsDivisionviewsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetScriptsDivisionviewsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/scripts/divisionviews][%d] getScriptsDivisionviewsNotFound  %+v", 404, o.Payload)
}

func (o *GetScriptsDivisionviewsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/scripts/divisionviews][%d] getScriptsDivisionviewsNotFound  %+v", 404, o.Payload)
}

func (o *GetScriptsDivisionviewsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScriptsDivisionviewsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScriptsDivisionviewsRequestTimeout creates a GetScriptsDivisionviewsRequestTimeout with default headers values
func NewGetScriptsDivisionviewsRequestTimeout() *GetScriptsDivisionviewsRequestTimeout {
	return &GetScriptsDivisionviewsRequestTimeout{}
}

/*
GetScriptsDivisionviewsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetScriptsDivisionviewsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get scripts divisionviews request timeout response has a 2xx status code
func (o *GetScriptsDivisionviewsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scripts divisionviews request timeout response has a 3xx status code
func (o *GetScriptsDivisionviewsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scripts divisionviews request timeout response has a 4xx status code
func (o *GetScriptsDivisionviewsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get scripts divisionviews request timeout response has a 5xx status code
func (o *GetScriptsDivisionviewsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get scripts divisionviews request timeout response a status code equal to that given
func (o *GetScriptsDivisionviewsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetScriptsDivisionviewsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/scripts/divisionviews][%d] getScriptsDivisionviewsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetScriptsDivisionviewsRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/scripts/divisionviews][%d] getScriptsDivisionviewsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetScriptsDivisionviewsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScriptsDivisionviewsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScriptsDivisionviewsRequestEntityTooLarge creates a GetScriptsDivisionviewsRequestEntityTooLarge with default headers values
func NewGetScriptsDivisionviewsRequestEntityTooLarge() *GetScriptsDivisionviewsRequestEntityTooLarge {
	return &GetScriptsDivisionviewsRequestEntityTooLarge{}
}

/*
GetScriptsDivisionviewsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetScriptsDivisionviewsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get scripts divisionviews request entity too large response has a 2xx status code
func (o *GetScriptsDivisionviewsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scripts divisionviews request entity too large response has a 3xx status code
func (o *GetScriptsDivisionviewsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scripts divisionviews request entity too large response has a 4xx status code
func (o *GetScriptsDivisionviewsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get scripts divisionviews request entity too large response has a 5xx status code
func (o *GetScriptsDivisionviewsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get scripts divisionviews request entity too large response a status code equal to that given
func (o *GetScriptsDivisionviewsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetScriptsDivisionviewsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/scripts/divisionviews][%d] getScriptsDivisionviewsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetScriptsDivisionviewsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/scripts/divisionviews][%d] getScriptsDivisionviewsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetScriptsDivisionviewsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScriptsDivisionviewsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScriptsDivisionviewsUnsupportedMediaType creates a GetScriptsDivisionviewsUnsupportedMediaType with default headers values
func NewGetScriptsDivisionviewsUnsupportedMediaType() *GetScriptsDivisionviewsUnsupportedMediaType {
	return &GetScriptsDivisionviewsUnsupportedMediaType{}
}

/*
GetScriptsDivisionviewsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetScriptsDivisionviewsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get scripts divisionviews unsupported media type response has a 2xx status code
func (o *GetScriptsDivisionviewsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scripts divisionviews unsupported media type response has a 3xx status code
func (o *GetScriptsDivisionviewsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scripts divisionviews unsupported media type response has a 4xx status code
func (o *GetScriptsDivisionviewsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get scripts divisionviews unsupported media type response has a 5xx status code
func (o *GetScriptsDivisionviewsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get scripts divisionviews unsupported media type response a status code equal to that given
func (o *GetScriptsDivisionviewsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetScriptsDivisionviewsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/scripts/divisionviews][%d] getScriptsDivisionviewsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetScriptsDivisionviewsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/scripts/divisionviews][%d] getScriptsDivisionviewsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetScriptsDivisionviewsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScriptsDivisionviewsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScriptsDivisionviewsTooManyRequests creates a GetScriptsDivisionviewsTooManyRequests with default headers values
func NewGetScriptsDivisionviewsTooManyRequests() *GetScriptsDivisionviewsTooManyRequests {
	return &GetScriptsDivisionviewsTooManyRequests{}
}

/*
GetScriptsDivisionviewsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetScriptsDivisionviewsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get scripts divisionviews too many requests response has a 2xx status code
func (o *GetScriptsDivisionviewsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scripts divisionviews too many requests response has a 3xx status code
func (o *GetScriptsDivisionviewsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scripts divisionviews too many requests response has a 4xx status code
func (o *GetScriptsDivisionviewsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get scripts divisionviews too many requests response has a 5xx status code
func (o *GetScriptsDivisionviewsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get scripts divisionviews too many requests response a status code equal to that given
func (o *GetScriptsDivisionviewsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetScriptsDivisionviewsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/scripts/divisionviews][%d] getScriptsDivisionviewsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetScriptsDivisionviewsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/scripts/divisionviews][%d] getScriptsDivisionviewsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetScriptsDivisionviewsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScriptsDivisionviewsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScriptsDivisionviewsInternalServerError creates a GetScriptsDivisionviewsInternalServerError with default headers values
func NewGetScriptsDivisionviewsInternalServerError() *GetScriptsDivisionviewsInternalServerError {
	return &GetScriptsDivisionviewsInternalServerError{}
}

/*
GetScriptsDivisionviewsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetScriptsDivisionviewsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get scripts divisionviews internal server error response has a 2xx status code
func (o *GetScriptsDivisionviewsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scripts divisionviews internal server error response has a 3xx status code
func (o *GetScriptsDivisionviewsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scripts divisionviews internal server error response has a 4xx status code
func (o *GetScriptsDivisionviewsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get scripts divisionviews internal server error response has a 5xx status code
func (o *GetScriptsDivisionviewsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get scripts divisionviews internal server error response a status code equal to that given
func (o *GetScriptsDivisionviewsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetScriptsDivisionviewsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/scripts/divisionviews][%d] getScriptsDivisionviewsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetScriptsDivisionviewsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/scripts/divisionviews][%d] getScriptsDivisionviewsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetScriptsDivisionviewsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScriptsDivisionviewsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScriptsDivisionviewsServiceUnavailable creates a GetScriptsDivisionviewsServiceUnavailable with default headers values
func NewGetScriptsDivisionviewsServiceUnavailable() *GetScriptsDivisionviewsServiceUnavailable {
	return &GetScriptsDivisionviewsServiceUnavailable{}
}

/*
GetScriptsDivisionviewsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetScriptsDivisionviewsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get scripts divisionviews service unavailable response has a 2xx status code
func (o *GetScriptsDivisionviewsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scripts divisionviews service unavailable response has a 3xx status code
func (o *GetScriptsDivisionviewsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scripts divisionviews service unavailable response has a 4xx status code
func (o *GetScriptsDivisionviewsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get scripts divisionviews service unavailable response has a 5xx status code
func (o *GetScriptsDivisionviewsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get scripts divisionviews service unavailable response a status code equal to that given
func (o *GetScriptsDivisionviewsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetScriptsDivisionviewsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/scripts/divisionviews][%d] getScriptsDivisionviewsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetScriptsDivisionviewsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/scripts/divisionviews][%d] getScriptsDivisionviewsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetScriptsDivisionviewsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScriptsDivisionviewsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScriptsDivisionviewsGatewayTimeout creates a GetScriptsDivisionviewsGatewayTimeout with default headers values
func NewGetScriptsDivisionviewsGatewayTimeout() *GetScriptsDivisionviewsGatewayTimeout {
	return &GetScriptsDivisionviewsGatewayTimeout{}
}

/*
GetScriptsDivisionviewsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetScriptsDivisionviewsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get scripts divisionviews gateway timeout response has a 2xx status code
func (o *GetScriptsDivisionviewsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scripts divisionviews gateway timeout response has a 3xx status code
func (o *GetScriptsDivisionviewsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scripts divisionviews gateway timeout response has a 4xx status code
func (o *GetScriptsDivisionviewsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get scripts divisionviews gateway timeout response has a 5xx status code
func (o *GetScriptsDivisionviewsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get scripts divisionviews gateway timeout response a status code equal to that given
func (o *GetScriptsDivisionviewsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetScriptsDivisionviewsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/scripts/divisionviews][%d] getScriptsDivisionviewsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetScriptsDivisionviewsGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/scripts/divisionviews][%d] getScriptsDivisionviewsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetScriptsDivisionviewsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScriptsDivisionviewsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
