// Code generated by go-swagger; DO NOT EDIT.

package content_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostContentmanagementAuditqueryReader is a Reader for the PostContentmanagementAuditquery structure.
type PostContentmanagementAuditqueryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostContentmanagementAuditqueryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostContentmanagementAuditqueryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostContentmanagementAuditqueryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostContentmanagementAuditqueryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostContentmanagementAuditqueryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostContentmanagementAuditqueryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostContentmanagementAuditqueryRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostContentmanagementAuditqueryRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostContentmanagementAuditqueryUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostContentmanagementAuditqueryTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostContentmanagementAuditqueryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostContentmanagementAuditqueryServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostContentmanagementAuditqueryGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostContentmanagementAuditqueryOK creates a PostContentmanagementAuditqueryOK with default headers values
func NewPostContentmanagementAuditqueryOK() *PostContentmanagementAuditqueryOK {
	return &PostContentmanagementAuditqueryOK{}
}

/*
PostContentmanagementAuditqueryOK describes a response with status code 200, with default header values.

successful operation
*/
type PostContentmanagementAuditqueryOK struct {
	Payload *models.QueryResults
}

// IsSuccess returns true when this post contentmanagement auditquery o k response has a 2xx status code
func (o *PostContentmanagementAuditqueryOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post contentmanagement auditquery o k response has a 3xx status code
func (o *PostContentmanagementAuditqueryOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post contentmanagement auditquery o k response has a 4xx status code
func (o *PostContentmanagementAuditqueryOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post contentmanagement auditquery o k response has a 5xx status code
func (o *PostContentmanagementAuditqueryOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post contentmanagement auditquery o k response a status code equal to that given
func (o *PostContentmanagementAuditqueryOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostContentmanagementAuditqueryOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/auditquery][%d] postContentmanagementAuditqueryOK  %+v", 200, o.Payload)
}

func (o *PostContentmanagementAuditqueryOK) String() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/auditquery][%d] postContentmanagementAuditqueryOK  %+v", 200, o.Payload)
}

func (o *PostContentmanagementAuditqueryOK) GetPayload() *models.QueryResults {
	return o.Payload
}

func (o *PostContentmanagementAuditqueryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.QueryResults)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementAuditqueryBadRequest creates a PostContentmanagementAuditqueryBadRequest with default headers values
func NewPostContentmanagementAuditqueryBadRequest() *PostContentmanagementAuditqueryBadRequest {
	return &PostContentmanagementAuditqueryBadRequest{}
}

/*
PostContentmanagementAuditqueryBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostContentmanagementAuditqueryBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post contentmanagement auditquery bad request response has a 2xx status code
func (o *PostContentmanagementAuditqueryBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post contentmanagement auditquery bad request response has a 3xx status code
func (o *PostContentmanagementAuditqueryBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post contentmanagement auditquery bad request response has a 4xx status code
func (o *PostContentmanagementAuditqueryBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post contentmanagement auditquery bad request response has a 5xx status code
func (o *PostContentmanagementAuditqueryBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post contentmanagement auditquery bad request response a status code equal to that given
func (o *PostContentmanagementAuditqueryBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostContentmanagementAuditqueryBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/auditquery][%d] postContentmanagementAuditqueryBadRequest  %+v", 400, o.Payload)
}

func (o *PostContentmanagementAuditqueryBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/auditquery][%d] postContentmanagementAuditqueryBadRequest  %+v", 400, o.Payload)
}

func (o *PostContentmanagementAuditqueryBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementAuditqueryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementAuditqueryUnauthorized creates a PostContentmanagementAuditqueryUnauthorized with default headers values
func NewPostContentmanagementAuditqueryUnauthorized() *PostContentmanagementAuditqueryUnauthorized {
	return &PostContentmanagementAuditqueryUnauthorized{}
}

/*
PostContentmanagementAuditqueryUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostContentmanagementAuditqueryUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post contentmanagement auditquery unauthorized response has a 2xx status code
func (o *PostContentmanagementAuditqueryUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post contentmanagement auditquery unauthorized response has a 3xx status code
func (o *PostContentmanagementAuditqueryUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post contentmanagement auditquery unauthorized response has a 4xx status code
func (o *PostContentmanagementAuditqueryUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post contentmanagement auditquery unauthorized response has a 5xx status code
func (o *PostContentmanagementAuditqueryUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post contentmanagement auditquery unauthorized response a status code equal to that given
func (o *PostContentmanagementAuditqueryUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostContentmanagementAuditqueryUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/auditquery][%d] postContentmanagementAuditqueryUnauthorized  %+v", 401, o.Payload)
}

func (o *PostContentmanagementAuditqueryUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/auditquery][%d] postContentmanagementAuditqueryUnauthorized  %+v", 401, o.Payload)
}

func (o *PostContentmanagementAuditqueryUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementAuditqueryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementAuditqueryForbidden creates a PostContentmanagementAuditqueryForbidden with default headers values
func NewPostContentmanagementAuditqueryForbidden() *PostContentmanagementAuditqueryForbidden {
	return &PostContentmanagementAuditqueryForbidden{}
}

/*
PostContentmanagementAuditqueryForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostContentmanagementAuditqueryForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post contentmanagement auditquery forbidden response has a 2xx status code
func (o *PostContentmanagementAuditqueryForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post contentmanagement auditquery forbidden response has a 3xx status code
func (o *PostContentmanagementAuditqueryForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post contentmanagement auditquery forbidden response has a 4xx status code
func (o *PostContentmanagementAuditqueryForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post contentmanagement auditquery forbidden response has a 5xx status code
func (o *PostContentmanagementAuditqueryForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post contentmanagement auditquery forbidden response a status code equal to that given
func (o *PostContentmanagementAuditqueryForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostContentmanagementAuditqueryForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/auditquery][%d] postContentmanagementAuditqueryForbidden  %+v", 403, o.Payload)
}

func (o *PostContentmanagementAuditqueryForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/auditquery][%d] postContentmanagementAuditqueryForbidden  %+v", 403, o.Payload)
}

func (o *PostContentmanagementAuditqueryForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementAuditqueryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementAuditqueryNotFound creates a PostContentmanagementAuditqueryNotFound with default headers values
func NewPostContentmanagementAuditqueryNotFound() *PostContentmanagementAuditqueryNotFound {
	return &PostContentmanagementAuditqueryNotFound{}
}

/*
PostContentmanagementAuditqueryNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostContentmanagementAuditqueryNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post contentmanagement auditquery not found response has a 2xx status code
func (o *PostContentmanagementAuditqueryNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post contentmanagement auditquery not found response has a 3xx status code
func (o *PostContentmanagementAuditqueryNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post contentmanagement auditquery not found response has a 4xx status code
func (o *PostContentmanagementAuditqueryNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post contentmanagement auditquery not found response has a 5xx status code
func (o *PostContentmanagementAuditqueryNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post contentmanagement auditquery not found response a status code equal to that given
func (o *PostContentmanagementAuditqueryNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostContentmanagementAuditqueryNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/auditquery][%d] postContentmanagementAuditqueryNotFound  %+v", 404, o.Payload)
}

func (o *PostContentmanagementAuditqueryNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/auditquery][%d] postContentmanagementAuditqueryNotFound  %+v", 404, o.Payload)
}

func (o *PostContentmanagementAuditqueryNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementAuditqueryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementAuditqueryRequestTimeout creates a PostContentmanagementAuditqueryRequestTimeout with default headers values
func NewPostContentmanagementAuditqueryRequestTimeout() *PostContentmanagementAuditqueryRequestTimeout {
	return &PostContentmanagementAuditqueryRequestTimeout{}
}

/*
PostContentmanagementAuditqueryRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostContentmanagementAuditqueryRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post contentmanagement auditquery request timeout response has a 2xx status code
func (o *PostContentmanagementAuditqueryRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post contentmanagement auditquery request timeout response has a 3xx status code
func (o *PostContentmanagementAuditqueryRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post contentmanagement auditquery request timeout response has a 4xx status code
func (o *PostContentmanagementAuditqueryRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post contentmanagement auditquery request timeout response has a 5xx status code
func (o *PostContentmanagementAuditqueryRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post contentmanagement auditquery request timeout response a status code equal to that given
func (o *PostContentmanagementAuditqueryRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostContentmanagementAuditqueryRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/auditquery][%d] postContentmanagementAuditqueryRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostContentmanagementAuditqueryRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/auditquery][%d] postContentmanagementAuditqueryRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostContentmanagementAuditqueryRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementAuditqueryRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementAuditqueryRequestEntityTooLarge creates a PostContentmanagementAuditqueryRequestEntityTooLarge with default headers values
func NewPostContentmanagementAuditqueryRequestEntityTooLarge() *PostContentmanagementAuditqueryRequestEntityTooLarge {
	return &PostContentmanagementAuditqueryRequestEntityTooLarge{}
}

/*
PostContentmanagementAuditqueryRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PostContentmanagementAuditqueryRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post contentmanagement auditquery request entity too large response has a 2xx status code
func (o *PostContentmanagementAuditqueryRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post contentmanagement auditquery request entity too large response has a 3xx status code
func (o *PostContentmanagementAuditqueryRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post contentmanagement auditquery request entity too large response has a 4xx status code
func (o *PostContentmanagementAuditqueryRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post contentmanagement auditquery request entity too large response has a 5xx status code
func (o *PostContentmanagementAuditqueryRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post contentmanagement auditquery request entity too large response a status code equal to that given
func (o *PostContentmanagementAuditqueryRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostContentmanagementAuditqueryRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/auditquery][%d] postContentmanagementAuditqueryRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostContentmanagementAuditqueryRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/auditquery][%d] postContentmanagementAuditqueryRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostContentmanagementAuditqueryRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementAuditqueryRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementAuditqueryUnsupportedMediaType creates a PostContentmanagementAuditqueryUnsupportedMediaType with default headers values
func NewPostContentmanagementAuditqueryUnsupportedMediaType() *PostContentmanagementAuditqueryUnsupportedMediaType {
	return &PostContentmanagementAuditqueryUnsupportedMediaType{}
}

/*
PostContentmanagementAuditqueryUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostContentmanagementAuditqueryUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post contentmanagement auditquery unsupported media type response has a 2xx status code
func (o *PostContentmanagementAuditqueryUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post contentmanagement auditquery unsupported media type response has a 3xx status code
func (o *PostContentmanagementAuditqueryUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post contentmanagement auditquery unsupported media type response has a 4xx status code
func (o *PostContentmanagementAuditqueryUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post contentmanagement auditquery unsupported media type response has a 5xx status code
func (o *PostContentmanagementAuditqueryUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post contentmanagement auditquery unsupported media type response a status code equal to that given
func (o *PostContentmanagementAuditqueryUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostContentmanagementAuditqueryUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/auditquery][%d] postContentmanagementAuditqueryUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostContentmanagementAuditqueryUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/auditquery][%d] postContentmanagementAuditqueryUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostContentmanagementAuditqueryUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementAuditqueryUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementAuditqueryTooManyRequests creates a PostContentmanagementAuditqueryTooManyRequests with default headers values
func NewPostContentmanagementAuditqueryTooManyRequests() *PostContentmanagementAuditqueryTooManyRequests {
	return &PostContentmanagementAuditqueryTooManyRequests{}
}

/*
PostContentmanagementAuditqueryTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostContentmanagementAuditqueryTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post contentmanagement auditquery too many requests response has a 2xx status code
func (o *PostContentmanagementAuditqueryTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post contentmanagement auditquery too many requests response has a 3xx status code
func (o *PostContentmanagementAuditqueryTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post contentmanagement auditquery too many requests response has a 4xx status code
func (o *PostContentmanagementAuditqueryTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post contentmanagement auditquery too many requests response has a 5xx status code
func (o *PostContentmanagementAuditqueryTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post contentmanagement auditquery too many requests response a status code equal to that given
func (o *PostContentmanagementAuditqueryTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostContentmanagementAuditqueryTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/auditquery][%d] postContentmanagementAuditqueryTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostContentmanagementAuditqueryTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/auditquery][%d] postContentmanagementAuditqueryTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostContentmanagementAuditqueryTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementAuditqueryTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementAuditqueryInternalServerError creates a PostContentmanagementAuditqueryInternalServerError with default headers values
func NewPostContentmanagementAuditqueryInternalServerError() *PostContentmanagementAuditqueryInternalServerError {
	return &PostContentmanagementAuditqueryInternalServerError{}
}

/*
PostContentmanagementAuditqueryInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostContentmanagementAuditqueryInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post contentmanagement auditquery internal server error response has a 2xx status code
func (o *PostContentmanagementAuditqueryInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post contentmanagement auditquery internal server error response has a 3xx status code
func (o *PostContentmanagementAuditqueryInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post contentmanagement auditquery internal server error response has a 4xx status code
func (o *PostContentmanagementAuditqueryInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post contentmanagement auditquery internal server error response has a 5xx status code
func (o *PostContentmanagementAuditqueryInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post contentmanagement auditquery internal server error response a status code equal to that given
func (o *PostContentmanagementAuditqueryInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostContentmanagementAuditqueryInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/auditquery][%d] postContentmanagementAuditqueryInternalServerError  %+v", 500, o.Payload)
}

func (o *PostContentmanagementAuditqueryInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/auditquery][%d] postContentmanagementAuditqueryInternalServerError  %+v", 500, o.Payload)
}

func (o *PostContentmanagementAuditqueryInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementAuditqueryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementAuditqueryServiceUnavailable creates a PostContentmanagementAuditqueryServiceUnavailable with default headers values
func NewPostContentmanagementAuditqueryServiceUnavailable() *PostContentmanagementAuditqueryServiceUnavailable {
	return &PostContentmanagementAuditqueryServiceUnavailable{}
}

/*
PostContentmanagementAuditqueryServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostContentmanagementAuditqueryServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post contentmanagement auditquery service unavailable response has a 2xx status code
func (o *PostContentmanagementAuditqueryServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post contentmanagement auditquery service unavailable response has a 3xx status code
func (o *PostContentmanagementAuditqueryServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post contentmanagement auditquery service unavailable response has a 4xx status code
func (o *PostContentmanagementAuditqueryServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post contentmanagement auditquery service unavailable response has a 5xx status code
func (o *PostContentmanagementAuditqueryServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post contentmanagement auditquery service unavailable response a status code equal to that given
func (o *PostContentmanagementAuditqueryServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostContentmanagementAuditqueryServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/auditquery][%d] postContentmanagementAuditqueryServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostContentmanagementAuditqueryServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/auditquery][%d] postContentmanagementAuditqueryServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostContentmanagementAuditqueryServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementAuditqueryServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementAuditqueryGatewayTimeout creates a PostContentmanagementAuditqueryGatewayTimeout with default headers values
func NewPostContentmanagementAuditqueryGatewayTimeout() *PostContentmanagementAuditqueryGatewayTimeout {
	return &PostContentmanagementAuditqueryGatewayTimeout{}
}

/*
PostContentmanagementAuditqueryGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostContentmanagementAuditqueryGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post contentmanagement auditquery gateway timeout response has a 2xx status code
func (o *PostContentmanagementAuditqueryGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post contentmanagement auditquery gateway timeout response has a 3xx status code
func (o *PostContentmanagementAuditqueryGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post contentmanagement auditquery gateway timeout response has a 4xx status code
func (o *PostContentmanagementAuditqueryGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post contentmanagement auditquery gateway timeout response has a 5xx status code
func (o *PostContentmanagementAuditqueryGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post contentmanagement auditquery gateway timeout response a status code equal to that given
func (o *PostContentmanagementAuditqueryGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostContentmanagementAuditqueryGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/auditquery][%d] postContentmanagementAuditqueryGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostContentmanagementAuditqueryGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/auditquery][%d] postContentmanagementAuditqueryGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostContentmanagementAuditqueryGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementAuditqueryGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
