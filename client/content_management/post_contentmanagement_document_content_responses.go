// Code generated by go-swagger; DO NOT EDIT.

package content_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostContentmanagementDocumentContentReader is a Reader for the PostContentmanagementDocumentContent structure.
type PostContentmanagementDocumentContentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostContentmanagementDocumentContentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewPostContentmanagementDocumentContentAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostContentmanagementDocumentContentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostContentmanagementDocumentContentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostContentmanagementDocumentContentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostContentmanagementDocumentContentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostContentmanagementDocumentContentRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPostContentmanagementDocumentContentConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostContentmanagementDocumentContentRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostContentmanagementDocumentContentUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 423:
		result := NewPostContentmanagementDocumentContentLocked()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostContentmanagementDocumentContentTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostContentmanagementDocumentContentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostContentmanagementDocumentContentServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostContentmanagementDocumentContentGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostContentmanagementDocumentContentAccepted creates a PostContentmanagementDocumentContentAccepted with default headers values
func NewPostContentmanagementDocumentContentAccepted() *PostContentmanagementDocumentContentAccepted {
	return &PostContentmanagementDocumentContentAccepted{}
}

/*PostContentmanagementDocumentContentAccepted handles this case with default header values.

Accepted - Ready for upload
*/
type PostContentmanagementDocumentContentAccepted struct {
	Payload *models.ReplaceResponse
}

func (o *PostContentmanagementDocumentContentAccepted) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/documents/{documentId}/content][%d] postContentmanagementDocumentContentAccepted  %+v", 202, o.Payload)
}

func (o *PostContentmanagementDocumentContentAccepted) GetPayload() *models.ReplaceResponse {
	return o.Payload
}

func (o *PostContentmanagementDocumentContentAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ReplaceResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementDocumentContentBadRequest creates a PostContentmanagementDocumentContentBadRequest with default headers values
func NewPostContentmanagementDocumentContentBadRequest() *PostContentmanagementDocumentContentBadRequest {
	return &PostContentmanagementDocumentContentBadRequest{}
}

/*PostContentmanagementDocumentContentBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostContentmanagementDocumentContentBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PostContentmanagementDocumentContentBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/documents/{documentId}/content][%d] postContentmanagementDocumentContentBadRequest  %+v", 400, o.Payload)
}

func (o *PostContentmanagementDocumentContentBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementDocumentContentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementDocumentContentUnauthorized creates a PostContentmanagementDocumentContentUnauthorized with default headers values
func NewPostContentmanagementDocumentContentUnauthorized() *PostContentmanagementDocumentContentUnauthorized {
	return &PostContentmanagementDocumentContentUnauthorized{}
}

/*PostContentmanagementDocumentContentUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PostContentmanagementDocumentContentUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PostContentmanagementDocumentContentUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/documents/{documentId}/content][%d] postContentmanagementDocumentContentUnauthorized  %+v", 401, o.Payload)
}

func (o *PostContentmanagementDocumentContentUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementDocumentContentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementDocumentContentForbidden creates a PostContentmanagementDocumentContentForbidden with default headers values
func NewPostContentmanagementDocumentContentForbidden() *PostContentmanagementDocumentContentForbidden {
	return &PostContentmanagementDocumentContentForbidden{}
}

/*PostContentmanagementDocumentContentForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PostContentmanagementDocumentContentForbidden struct {
	Payload *models.ErrorBody
}

func (o *PostContentmanagementDocumentContentForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/documents/{documentId}/content][%d] postContentmanagementDocumentContentForbidden  %+v", 403, o.Payload)
}

func (o *PostContentmanagementDocumentContentForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementDocumentContentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementDocumentContentNotFound creates a PostContentmanagementDocumentContentNotFound with default headers values
func NewPostContentmanagementDocumentContentNotFound() *PostContentmanagementDocumentContentNotFound {
	return &PostContentmanagementDocumentContentNotFound{}
}

/*PostContentmanagementDocumentContentNotFound handles this case with default header values.

The requested resource was not found.
*/
type PostContentmanagementDocumentContentNotFound struct {
	Payload *models.ErrorBody
}

func (o *PostContentmanagementDocumentContentNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/documents/{documentId}/content][%d] postContentmanagementDocumentContentNotFound  %+v", 404, o.Payload)
}

func (o *PostContentmanagementDocumentContentNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementDocumentContentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementDocumentContentRequestTimeout creates a PostContentmanagementDocumentContentRequestTimeout with default headers values
func NewPostContentmanagementDocumentContentRequestTimeout() *PostContentmanagementDocumentContentRequestTimeout {
	return &PostContentmanagementDocumentContentRequestTimeout{}
}

/*PostContentmanagementDocumentContentRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostContentmanagementDocumentContentRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostContentmanagementDocumentContentRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/documents/{documentId}/content][%d] postContentmanagementDocumentContentRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostContentmanagementDocumentContentRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementDocumentContentRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementDocumentContentConflict creates a PostContentmanagementDocumentContentConflict with default headers values
func NewPostContentmanagementDocumentContentConflict() *PostContentmanagementDocumentContentConflict {
	return &PostContentmanagementDocumentContentConflict{}
}

/*PostContentmanagementDocumentContentConflict handles this case with default header values.

Resource conflict - Unexpected changeNumber was provided
*/
type PostContentmanagementDocumentContentConflict struct {
}

func (o *PostContentmanagementDocumentContentConflict) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/documents/{documentId}/content][%d] postContentmanagementDocumentContentConflict ", 409)
}

func (o *PostContentmanagementDocumentContentConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostContentmanagementDocumentContentRequestEntityTooLarge creates a PostContentmanagementDocumentContentRequestEntityTooLarge with default headers values
func NewPostContentmanagementDocumentContentRequestEntityTooLarge() *PostContentmanagementDocumentContentRequestEntityTooLarge {
	return &PostContentmanagementDocumentContentRequestEntityTooLarge{}
}

/*PostContentmanagementDocumentContentRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PostContentmanagementDocumentContentRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PostContentmanagementDocumentContentRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/documents/{documentId}/content][%d] postContentmanagementDocumentContentRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostContentmanagementDocumentContentRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementDocumentContentRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementDocumentContentUnsupportedMediaType creates a PostContentmanagementDocumentContentUnsupportedMediaType with default headers values
func NewPostContentmanagementDocumentContentUnsupportedMediaType() *PostContentmanagementDocumentContentUnsupportedMediaType {
	return &PostContentmanagementDocumentContentUnsupportedMediaType{}
}

/*PostContentmanagementDocumentContentUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostContentmanagementDocumentContentUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PostContentmanagementDocumentContentUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/documents/{documentId}/content][%d] postContentmanagementDocumentContentUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostContentmanagementDocumentContentUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementDocumentContentUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementDocumentContentLocked creates a PostContentmanagementDocumentContentLocked with default headers values
func NewPostContentmanagementDocumentContentLocked() *PostContentmanagementDocumentContentLocked {
	return &PostContentmanagementDocumentContentLocked{}
}

/*PostContentmanagementDocumentContentLocked handles this case with default header values.

Locked - The document is locked by another operation
*/
type PostContentmanagementDocumentContentLocked struct {
}

func (o *PostContentmanagementDocumentContentLocked) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/documents/{documentId}/content][%d] postContentmanagementDocumentContentLocked ", 423)
}

func (o *PostContentmanagementDocumentContentLocked) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostContentmanagementDocumentContentTooManyRequests creates a PostContentmanagementDocumentContentTooManyRequests with default headers values
func NewPostContentmanagementDocumentContentTooManyRequests() *PostContentmanagementDocumentContentTooManyRequests {
	return &PostContentmanagementDocumentContentTooManyRequests{}
}

/*PostContentmanagementDocumentContentTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostContentmanagementDocumentContentTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PostContentmanagementDocumentContentTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/documents/{documentId}/content][%d] postContentmanagementDocumentContentTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostContentmanagementDocumentContentTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementDocumentContentTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementDocumentContentInternalServerError creates a PostContentmanagementDocumentContentInternalServerError with default headers values
func NewPostContentmanagementDocumentContentInternalServerError() *PostContentmanagementDocumentContentInternalServerError {
	return &PostContentmanagementDocumentContentInternalServerError{}
}

/*PostContentmanagementDocumentContentInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostContentmanagementDocumentContentInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PostContentmanagementDocumentContentInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/documents/{documentId}/content][%d] postContentmanagementDocumentContentInternalServerError  %+v", 500, o.Payload)
}

func (o *PostContentmanagementDocumentContentInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementDocumentContentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementDocumentContentServiceUnavailable creates a PostContentmanagementDocumentContentServiceUnavailable with default headers values
func NewPostContentmanagementDocumentContentServiceUnavailable() *PostContentmanagementDocumentContentServiceUnavailable {
	return &PostContentmanagementDocumentContentServiceUnavailable{}
}

/*PostContentmanagementDocumentContentServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostContentmanagementDocumentContentServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PostContentmanagementDocumentContentServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/documents/{documentId}/content][%d] postContentmanagementDocumentContentServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostContentmanagementDocumentContentServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementDocumentContentServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementDocumentContentGatewayTimeout creates a PostContentmanagementDocumentContentGatewayTimeout with default headers values
func NewPostContentmanagementDocumentContentGatewayTimeout() *PostContentmanagementDocumentContentGatewayTimeout {
	return &PostContentmanagementDocumentContentGatewayTimeout{}
}

/*PostContentmanagementDocumentContentGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PostContentmanagementDocumentContentGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostContentmanagementDocumentContentGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/documents/{documentId}/content][%d] postContentmanagementDocumentContentGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostContentmanagementDocumentContentGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementDocumentContentGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
