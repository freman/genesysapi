// Code generated by go-swagger; DO NOT EDIT.

package content_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetContentmanagementShareReader is a Reader for the GetContentmanagementShare structure.
type GetContentmanagementShareReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetContentmanagementShareReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetContentmanagementShareOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetContentmanagementShareBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetContentmanagementShareUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetContentmanagementShareForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetContentmanagementShareNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetContentmanagementShareRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetContentmanagementShareRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetContentmanagementShareUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetContentmanagementShareTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetContentmanagementShareInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetContentmanagementShareServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetContentmanagementShareGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetContentmanagementShareOK creates a GetContentmanagementShareOK with default headers values
func NewGetContentmanagementShareOK() *GetContentmanagementShareOK {
	return &GetContentmanagementShareOK{}
}

/*
GetContentmanagementShareOK describes a response with status code 200, with default header values.

successful operation
*/
type GetContentmanagementShareOK struct {
	Payload *models.Share
}

// IsSuccess returns true when this get contentmanagement share o k response has a 2xx status code
func (o *GetContentmanagementShareOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get contentmanagement share o k response has a 3xx status code
func (o *GetContentmanagementShareOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement share o k response has a 4xx status code
func (o *GetContentmanagementShareOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get contentmanagement share o k response has a 5xx status code
func (o *GetContentmanagementShareOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get contentmanagement share o k response a status code equal to that given
func (o *GetContentmanagementShareOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetContentmanagementShareOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/shares/{shareId}][%d] getContentmanagementShareOK  %+v", 200, o.Payload)
}

func (o *GetContentmanagementShareOK) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/shares/{shareId}][%d] getContentmanagementShareOK  %+v", 200, o.Payload)
}

func (o *GetContentmanagementShareOK) GetPayload() *models.Share {
	return o.Payload
}

func (o *GetContentmanagementShareOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Share)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementShareBadRequest creates a GetContentmanagementShareBadRequest with default headers values
func NewGetContentmanagementShareBadRequest() *GetContentmanagementShareBadRequest {
	return &GetContentmanagementShareBadRequest{}
}

/*
GetContentmanagementShareBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetContentmanagementShareBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement share bad request response has a 2xx status code
func (o *GetContentmanagementShareBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement share bad request response has a 3xx status code
func (o *GetContentmanagementShareBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement share bad request response has a 4xx status code
func (o *GetContentmanagementShareBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get contentmanagement share bad request response has a 5xx status code
func (o *GetContentmanagementShareBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get contentmanagement share bad request response a status code equal to that given
func (o *GetContentmanagementShareBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetContentmanagementShareBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/shares/{shareId}][%d] getContentmanagementShareBadRequest  %+v", 400, o.Payload)
}

func (o *GetContentmanagementShareBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/shares/{shareId}][%d] getContentmanagementShareBadRequest  %+v", 400, o.Payload)
}

func (o *GetContentmanagementShareBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementShareBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementShareUnauthorized creates a GetContentmanagementShareUnauthorized with default headers values
func NewGetContentmanagementShareUnauthorized() *GetContentmanagementShareUnauthorized {
	return &GetContentmanagementShareUnauthorized{}
}

/*
GetContentmanagementShareUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetContentmanagementShareUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement share unauthorized response has a 2xx status code
func (o *GetContentmanagementShareUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement share unauthorized response has a 3xx status code
func (o *GetContentmanagementShareUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement share unauthorized response has a 4xx status code
func (o *GetContentmanagementShareUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get contentmanagement share unauthorized response has a 5xx status code
func (o *GetContentmanagementShareUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get contentmanagement share unauthorized response a status code equal to that given
func (o *GetContentmanagementShareUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetContentmanagementShareUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/shares/{shareId}][%d] getContentmanagementShareUnauthorized  %+v", 401, o.Payload)
}

func (o *GetContentmanagementShareUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/shares/{shareId}][%d] getContentmanagementShareUnauthorized  %+v", 401, o.Payload)
}

func (o *GetContentmanagementShareUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementShareUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementShareForbidden creates a GetContentmanagementShareForbidden with default headers values
func NewGetContentmanagementShareForbidden() *GetContentmanagementShareForbidden {
	return &GetContentmanagementShareForbidden{}
}

/*
GetContentmanagementShareForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetContentmanagementShareForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement share forbidden response has a 2xx status code
func (o *GetContentmanagementShareForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement share forbidden response has a 3xx status code
func (o *GetContentmanagementShareForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement share forbidden response has a 4xx status code
func (o *GetContentmanagementShareForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get contentmanagement share forbidden response has a 5xx status code
func (o *GetContentmanagementShareForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get contentmanagement share forbidden response a status code equal to that given
func (o *GetContentmanagementShareForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetContentmanagementShareForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/shares/{shareId}][%d] getContentmanagementShareForbidden  %+v", 403, o.Payload)
}

func (o *GetContentmanagementShareForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/shares/{shareId}][%d] getContentmanagementShareForbidden  %+v", 403, o.Payload)
}

func (o *GetContentmanagementShareForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementShareForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementShareNotFound creates a GetContentmanagementShareNotFound with default headers values
func NewGetContentmanagementShareNotFound() *GetContentmanagementShareNotFound {
	return &GetContentmanagementShareNotFound{}
}

/*
GetContentmanagementShareNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetContentmanagementShareNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement share not found response has a 2xx status code
func (o *GetContentmanagementShareNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement share not found response has a 3xx status code
func (o *GetContentmanagementShareNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement share not found response has a 4xx status code
func (o *GetContentmanagementShareNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get contentmanagement share not found response has a 5xx status code
func (o *GetContentmanagementShareNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get contentmanagement share not found response a status code equal to that given
func (o *GetContentmanagementShareNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetContentmanagementShareNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/shares/{shareId}][%d] getContentmanagementShareNotFound  %+v", 404, o.Payload)
}

func (o *GetContentmanagementShareNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/shares/{shareId}][%d] getContentmanagementShareNotFound  %+v", 404, o.Payload)
}

func (o *GetContentmanagementShareNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementShareNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementShareRequestTimeout creates a GetContentmanagementShareRequestTimeout with default headers values
func NewGetContentmanagementShareRequestTimeout() *GetContentmanagementShareRequestTimeout {
	return &GetContentmanagementShareRequestTimeout{}
}

/*
GetContentmanagementShareRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetContentmanagementShareRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement share request timeout response has a 2xx status code
func (o *GetContentmanagementShareRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement share request timeout response has a 3xx status code
func (o *GetContentmanagementShareRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement share request timeout response has a 4xx status code
func (o *GetContentmanagementShareRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get contentmanagement share request timeout response has a 5xx status code
func (o *GetContentmanagementShareRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get contentmanagement share request timeout response a status code equal to that given
func (o *GetContentmanagementShareRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetContentmanagementShareRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/shares/{shareId}][%d] getContentmanagementShareRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetContentmanagementShareRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/shares/{shareId}][%d] getContentmanagementShareRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetContentmanagementShareRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementShareRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementShareRequestEntityTooLarge creates a GetContentmanagementShareRequestEntityTooLarge with default headers values
func NewGetContentmanagementShareRequestEntityTooLarge() *GetContentmanagementShareRequestEntityTooLarge {
	return &GetContentmanagementShareRequestEntityTooLarge{}
}

/*
GetContentmanagementShareRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetContentmanagementShareRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement share request entity too large response has a 2xx status code
func (o *GetContentmanagementShareRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement share request entity too large response has a 3xx status code
func (o *GetContentmanagementShareRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement share request entity too large response has a 4xx status code
func (o *GetContentmanagementShareRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get contentmanagement share request entity too large response has a 5xx status code
func (o *GetContentmanagementShareRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get contentmanagement share request entity too large response a status code equal to that given
func (o *GetContentmanagementShareRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetContentmanagementShareRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/shares/{shareId}][%d] getContentmanagementShareRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetContentmanagementShareRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/shares/{shareId}][%d] getContentmanagementShareRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetContentmanagementShareRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementShareRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementShareUnsupportedMediaType creates a GetContentmanagementShareUnsupportedMediaType with default headers values
func NewGetContentmanagementShareUnsupportedMediaType() *GetContentmanagementShareUnsupportedMediaType {
	return &GetContentmanagementShareUnsupportedMediaType{}
}

/*
GetContentmanagementShareUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetContentmanagementShareUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement share unsupported media type response has a 2xx status code
func (o *GetContentmanagementShareUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement share unsupported media type response has a 3xx status code
func (o *GetContentmanagementShareUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement share unsupported media type response has a 4xx status code
func (o *GetContentmanagementShareUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get contentmanagement share unsupported media type response has a 5xx status code
func (o *GetContentmanagementShareUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get contentmanagement share unsupported media type response a status code equal to that given
func (o *GetContentmanagementShareUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetContentmanagementShareUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/shares/{shareId}][%d] getContentmanagementShareUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetContentmanagementShareUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/shares/{shareId}][%d] getContentmanagementShareUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetContentmanagementShareUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementShareUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementShareTooManyRequests creates a GetContentmanagementShareTooManyRequests with default headers values
func NewGetContentmanagementShareTooManyRequests() *GetContentmanagementShareTooManyRequests {
	return &GetContentmanagementShareTooManyRequests{}
}

/*
GetContentmanagementShareTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetContentmanagementShareTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement share too many requests response has a 2xx status code
func (o *GetContentmanagementShareTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement share too many requests response has a 3xx status code
func (o *GetContentmanagementShareTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement share too many requests response has a 4xx status code
func (o *GetContentmanagementShareTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get contentmanagement share too many requests response has a 5xx status code
func (o *GetContentmanagementShareTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get contentmanagement share too many requests response a status code equal to that given
func (o *GetContentmanagementShareTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetContentmanagementShareTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/shares/{shareId}][%d] getContentmanagementShareTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetContentmanagementShareTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/shares/{shareId}][%d] getContentmanagementShareTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetContentmanagementShareTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementShareTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementShareInternalServerError creates a GetContentmanagementShareInternalServerError with default headers values
func NewGetContentmanagementShareInternalServerError() *GetContentmanagementShareInternalServerError {
	return &GetContentmanagementShareInternalServerError{}
}

/*
GetContentmanagementShareInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetContentmanagementShareInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement share internal server error response has a 2xx status code
func (o *GetContentmanagementShareInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement share internal server error response has a 3xx status code
func (o *GetContentmanagementShareInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement share internal server error response has a 4xx status code
func (o *GetContentmanagementShareInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get contentmanagement share internal server error response has a 5xx status code
func (o *GetContentmanagementShareInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get contentmanagement share internal server error response a status code equal to that given
func (o *GetContentmanagementShareInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetContentmanagementShareInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/shares/{shareId}][%d] getContentmanagementShareInternalServerError  %+v", 500, o.Payload)
}

func (o *GetContentmanagementShareInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/shares/{shareId}][%d] getContentmanagementShareInternalServerError  %+v", 500, o.Payload)
}

func (o *GetContentmanagementShareInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementShareInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementShareServiceUnavailable creates a GetContentmanagementShareServiceUnavailable with default headers values
func NewGetContentmanagementShareServiceUnavailable() *GetContentmanagementShareServiceUnavailable {
	return &GetContentmanagementShareServiceUnavailable{}
}

/*
GetContentmanagementShareServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetContentmanagementShareServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement share service unavailable response has a 2xx status code
func (o *GetContentmanagementShareServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement share service unavailable response has a 3xx status code
func (o *GetContentmanagementShareServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement share service unavailable response has a 4xx status code
func (o *GetContentmanagementShareServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get contentmanagement share service unavailable response has a 5xx status code
func (o *GetContentmanagementShareServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get contentmanagement share service unavailable response a status code equal to that given
func (o *GetContentmanagementShareServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetContentmanagementShareServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/shares/{shareId}][%d] getContentmanagementShareServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetContentmanagementShareServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/shares/{shareId}][%d] getContentmanagementShareServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetContentmanagementShareServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementShareServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementShareGatewayTimeout creates a GetContentmanagementShareGatewayTimeout with default headers values
func NewGetContentmanagementShareGatewayTimeout() *GetContentmanagementShareGatewayTimeout {
	return &GetContentmanagementShareGatewayTimeout{}
}

/*
GetContentmanagementShareGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetContentmanagementShareGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement share gateway timeout response has a 2xx status code
func (o *GetContentmanagementShareGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement share gateway timeout response has a 3xx status code
func (o *GetContentmanagementShareGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement share gateway timeout response has a 4xx status code
func (o *GetContentmanagementShareGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get contentmanagement share gateway timeout response has a 5xx status code
func (o *GetContentmanagementShareGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get contentmanagement share gateway timeout response a status code equal to that given
func (o *GetContentmanagementShareGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetContentmanagementShareGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/shares/{shareId}][%d] getContentmanagementShareGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetContentmanagementShareGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/shares/{shareId}][%d] getContentmanagementShareGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetContentmanagementShareGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementShareGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
