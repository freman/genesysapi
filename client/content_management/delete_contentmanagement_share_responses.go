// Code generated by go-swagger; DO NOT EDIT.

package content_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// DeleteContentmanagementShareReader is a Reader for the DeleteContentmanagementShare structure.
type DeleteContentmanagementShareReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteContentmanagementShareReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 400:
		result := NewDeleteContentmanagementShareBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteContentmanagementShareUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteContentmanagementShareForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteContentmanagementShareNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewDeleteContentmanagementShareRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewDeleteContentmanagementShareRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDeleteContentmanagementShareUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteContentmanagementShareTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteContentmanagementShareInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteContentmanagementShareServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteContentmanagementShareGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteContentmanagementShareDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteContentmanagementShareBadRequest creates a DeleteContentmanagementShareBadRequest with default headers values
func NewDeleteContentmanagementShareBadRequest() *DeleteContentmanagementShareBadRequest {
	return &DeleteContentmanagementShareBadRequest{}
}

/*
DeleteContentmanagementShareBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type DeleteContentmanagementShareBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete contentmanagement share bad request response has a 2xx status code
func (o *DeleteContentmanagementShareBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete contentmanagement share bad request response has a 3xx status code
func (o *DeleteContentmanagementShareBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete contentmanagement share bad request response has a 4xx status code
func (o *DeleteContentmanagementShareBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete contentmanagement share bad request response has a 5xx status code
func (o *DeleteContentmanagementShareBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete contentmanagement share bad request response a status code equal to that given
func (o *DeleteContentmanagementShareBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteContentmanagementShareBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/shares/{shareId}][%d] deleteContentmanagementShareBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteContentmanagementShareBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/shares/{shareId}][%d] deleteContentmanagementShareBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteContentmanagementShareBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteContentmanagementShareBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteContentmanagementShareUnauthorized creates a DeleteContentmanagementShareUnauthorized with default headers values
func NewDeleteContentmanagementShareUnauthorized() *DeleteContentmanagementShareUnauthorized {
	return &DeleteContentmanagementShareUnauthorized{}
}

/*
DeleteContentmanagementShareUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type DeleteContentmanagementShareUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete contentmanagement share unauthorized response has a 2xx status code
func (o *DeleteContentmanagementShareUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete contentmanagement share unauthorized response has a 3xx status code
func (o *DeleteContentmanagementShareUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete contentmanagement share unauthorized response has a 4xx status code
func (o *DeleteContentmanagementShareUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete contentmanagement share unauthorized response has a 5xx status code
func (o *DeleteContentmanagementShareUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete contentmanagement share unauthorized response a status code equal to that given
func (o *DeleteContentmanagementShareUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteContentmanagementShareUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/shares/{shareId}][%d] deleteContentmanagementShareUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteContentmanagementShareUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/shares/{shareId}][%d] deleteContentmanagementShareUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteContentmanagementShareUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteContentmanagementShareUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteContentmanagementShareForbidden creates a DeleteContentmanagementShareForbidden with default headers values
func NewDeleteContentmanagementShareForbidden() *DeleteContentmanagementShareForbidden {
	return &DeleteContentmanagementShareForbidden{}
}

/*
DeleteContentmanagementShareForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type DeleteContentmanagementShareForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete contentmanagement share forbidden response has a 2xx status code
func (o *DeleteContentmanagementShareForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete contentmanagement share forbidden response has a 3xx status code
func (o *DeleteContentmanagementShareForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete contentmanagement share forbidden response has a 4xx status code
func (o *DeleteContentmanagementShareForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete contentmanagement share forbidden response has a 5xx status code
func (o *DeleteContentmanagementShareForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete contentmanagement share forbidden response a status code equal to that given
func (o *DeleteContentmanagementShareForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteContentmanagementShareForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/shares/{shareId}][%d] deleteContentmanagementShareForbidden  %+v", 403, o.Payload)
}

func (o *DeleteContentmanagementShareForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/shares/{shareId}][%d] deleteContentmanagementShareForbidden  %+v", 403, o.Payload)
}

func (o *DeleteContentmanagementShareForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteContentmanagementShareForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteContentmanagementShareNotFound creates a DeleteContentmanagementShareNotFound with default headers values
func NewDeleteContentmanagementShareNotFound() *DeleteContentmanagementShareNotFound {
	return &DeleteContentmanagementShareNotFound{}
}

/*
DeleteContentmanagementShareNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type DeleteContentmanagementShareNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete contentmanagement share not found response has a 2xx status code
func (o *DeleteContentmanagementShareNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete contentmanagement share not found response has a 3xx status code
func (o *DeleteContentmanagementShareNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete contentmanagement share not found response has a 4xx status code
func (o *DeleteContentmanagementShareNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete contentmanagement share not found response has a 5xx status code
func (o *DeleteContentmanagementShareNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete contentmanagement share not found response a status code equal to that given
func (o *DeleteContentmanagementShareNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteContentmanagementShareNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/shares/{shareId}][%d] deleteContentmanagementShareNotFound  %+v", 404, o.Payload)
}

func (o *DeleteContentmanagementShareNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/shares/{shareId}][%d] deleteContentmanagementShareNotFound  %+v", 404, o.Payload)
}

func (o *DeleteContentmanagementShareNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteContentmanagementShareNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteContentmanagementShareRequestTimeout creates a DeleteContentmanagementShareRequestTimeout with default headers values
func NewDeleteContentmanagementShareRequestTimeout() *DeleteContentmanagementShareRequestTimeout {
	return &DeleteContentmanagementShareRequestTimeout{}
}

/*
DeleteContentmanagementShareRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type DeleteContentmanagementShareRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete contentmanagement share request timeout response has a 2xx status code
func (o *DeleteContentmanagementShareRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete contentmanagement share request timeout response has a 3xx status code
func (o *DeleteContentmanagementShareRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete contentmanagement share request timeout response has a 4xx status code
func (o *DeleteContentmanagementShareRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete contentmanagement share request timeout response has a 5xx status code
func (o *DeleteContentmanagementShareRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this delete contentmanagement share request timeout response a status code equal to that given
func (o *DeleteContentmanagementShareRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *DeleteContentmanagementShareRequestTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/shares/{shareId}][%d] deleteContentmanagementShareRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteContentmanagementShareRequestTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/shares/{shareId}][%d] deleteContentmanagementShareRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteContentmanagementShareRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteContentmanagementShareRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteContentmanagementShareRequestEntityTooLarge creates a DeleteContentmanagementShareRequestEntityTooLarge with default headers values
func NewDeleteContentmanagementShareRequestEntityTooLarge() *DeleteContentmanagementShareRequestEntityTooLarge {
	return &DeleteContentmanagementShareRequestEntityTooLarge{}
}

/*
DeleteContentmanagementShareRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type DeleteContentmanagementShareRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete contentmanagement share request entity too large response has a 2xx status code
func (o *DeleteContentmanagementShareRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete contentmanagement share request entity too large response has a 3xx status code
func (o *DeleteContentmanagementShareRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete contentmanagement share request entity too large response has a 4xx status code
func (o *DeleteContentmanagementShareRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete contentmanagement share request entity too large response has a 5xx status code
func (o *DeleteContentmanagementShareRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this delete contentmanagement share request entity too large response a status code equal to that given
func (o *DeleteContentmanagementShareRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *DeleteContentmanagementShareRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/shares/{shareId}][%d] deleteContentmanagementShareRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteContentmanagementShareRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/shares/{shareId}][%d] deleteContentmanagementShareRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteContentmanagementShareRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteContentmanagementShareRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteContentmanagementShareUnsupportedMediaType creates a DeleteContentmanagementShareUnsupportedMediaType with default headers values
func NewDeleteContentmanagementShareUnsupportedMediaType() *DeleteContentmanagementShareUnsupportedMediaType {
	return &DeleteContentmanagementShareUnsupportedMediaType{}
}

/*
DeleteContentmanagementShareUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type DeleteContentmanagementShareUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete contentmanagement share unsupported media type response has a 2xx status code
func (o *DeleteContentmanagementShareUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete contentmanagement share unsupported media type response has a 3xx status code
func (o *DeleteContentmanagementShareUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete contentmanagement share unsupported media type response has a 4xx status code
func (o *DeleteContentmanagementShareUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete contentmanagement share unsupported media type response has a 5xx status code
func (o *DeleteContentmanagementShareUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this delete contentmanagement share unsupported media type response a status code equal to that given
func (o *DeleteContentmanagementShareUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *DeleteContentmanagementShareUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/shares/{shareId}][%d] deleteContentmanagementShareUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteContentmanagementShareUnsupportedMediaType) String() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/shares/{shareId}][%d] deleteContentmanagementShareUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteContentmanagementShareUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteContentmanagementShareUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteContentmanagementShareTooManyRequests creates a DeleteContentmanagementShareTooManyRequests with default headers values
func NewDeleteContentmanagementShareTooManyRequests() *DeleteContentmanagementShareTooManyRequests {
	return &DeleteContentmanagementShareTooManyRequests{}
}

/*
DeleteContentmanagementShareTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type DeleteContentmanagementShareTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete contentmanagement share too many requests response has a 2xx status code
func (o *DeleteContentmanagementShareTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete contentmanagement share too many requests response has a 3xx status code
func (o *DeleteContentmanagementShareTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete contentmanagement share too many requests response has a 4xx status code
func (o *DeleteContentmanagementShareTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete contentmanagement share too many requests response has a 5xx status code
func (o *DeleteContentmanagementShareTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete contentmanagement share too many requests response a status code equal to that given
func (o *DeleteContentmanagementShareTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *DeleteContentmanagementShareTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/shares/{shareId}][%d] deleteContentmanagementShareTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteContentmanagementShareTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/shares/{shareId}][%d] deleteContentmanagementShareTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteContentmanagementShareTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteContentmanagementShareTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteContentmanagementShareInternalServerError creates a DeleteContentmanagementShareInternalServerError with default headers values
func NewDeleteContentmanagementShareInternalServerError() *DeleteContentmanagementShareInternalServerError {
	return &DeleteContentmanagementShareInternalServerError{}
}

/*
DeleteContentmanagementShareInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type DeleteContentmanagementShareInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete contentmanagement share internal server error response has a 2xx status code
func (o *DeleteContentmanagementShareInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete contentmanagement share internal server error response has a 3xx status code
func (o *DeleteContentmanagementShareInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete contentmanagement share internal server error response has a 4xx status code
func (o *DeleteContentmanagementShareInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete contentmanagement share internal server error response has a 5xx status code
func (o *DeleteContentmanagementShareInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete contentmanagement share internal server error response a status code equal to that given
func (o *DeleteContentmanagementShareInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteContentmanagementShareInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/shares/{shareId}][%d] deleteContentmanagementShareInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteContentmanagementShareInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/shares/{shareId}][%d] deleteContentmanagementShareInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteContentmanagementShareInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteContentmanagementShareInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteContentmanagementShareServiceUnavailable creates a DeleteContentmanagementShareServiceUnavailable with default headers values
func NewDeleteContentmanagementShareServiceUnavailable() *DeleteContentmanagementShareServiceUnavailable {
	return &DeleteContentmanagementShareServiceUnavailable{}
}

/*
DeleteContentmanagementShareServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type DeleteContentmanagementShareServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete contentmanagement share service unavailable response has a 2xx status code
func (o *DeleteContentmanagementShareServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete contentmanagement share service unavailable response has a 3xx status code
func (o *DeleteContentmanagementShareServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete contentmanagement share service unavailable response has a 4xx status code
func (o *DeleteContentmanagementShareServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete contentmanagement share service unavailable response has a 5xx status code
func (o *DeleteContentmanagementShareServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this delete contentmanagement share service unavailable response a status code equal to that given
func (o *DeleteContentmanagementShareServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *DeleteContentmanagementShareServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/shares/{shareId}][%d] deleteContentmanagementShareServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteContentmanagementShareServiceUnavailable) String() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/shares/{shareId}][%d] deleteContentmanagementShareServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteContentmanagementShareServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteContentmanagementShareServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteContentmanagementShareGatewayTimeout creates a DeleteContentmanagementShareGatewayTimeout with default headers values
func NewDeleteContentmanagementShareGatewayTimeout() *DeleteContentmanagementShareGatewayTimeout {
	return &DeleteContentmanagementShareGatewayTimeout{}
}

/*
DeleteContentmanagementShareGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type DeleteContentmanagementShareGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete contentmanagement share gateway timeout response has a 2xx status code
func (o *DeleteContentmanagementShareGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete contentmanagement share gateway timeout response has a 3xx status code
func (o *DeleteContentmanagementShareGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete contentmanagement share gateway timeout response has a 4xx status code
func (o *DeleteContentmanagementShareGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete contentmanagement share gateway timeout response has a 5xx status code
func (o *DeleteContentmanagementShareGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this delete contentmanagement share gateway timeout response a status code equal to that given
func (o *DeleteContentmanagementShareGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *DeleteContentmanagementShareGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/shares/{shareId}][%d] deleteContentmanagementShareGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteContentmanagementShareGatewayTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/shares/{shareId}][%d] deleteContentmanagementShareGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteContentmanagementShareGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteContentmanagementShareGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteContentmanagementShareDefault creates a DeleteContentmanagementShareDefault with default headers values
func NewDeleteContentmanagementShareDefault(code int) *DeleteContentmanagementShareDefault {
	return &DeleteContentmanagementShareDefault{
		_statusCode: code,
	}
}

/*
DeleteContentmanagementShareDefault describes a response with status code -1, with default header values.

successful operation
*/
type DeleteContentmanagementShareDefault struct {
	_statusCode int
}

// Code gets the status code for the delete contentmanagement share default response
func (o *DeleteContentmanagementShareDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this delete contentmanagement share default response has a 2xx status code
func (o *DeleteContentmanagementShareDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this delete contentmanagement share default response has a 3xx status code
func (o *DeleteContentmanagementShareDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this delete contentmanagement share default response has a 4xx status code
func (o *DeleteContentmanagementShareDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this delete contentmanagement share default response has a 5xx status code
func (o *DeleteContentmanagementShareDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this delete contentmanagement share default response a status code equal to that given
func (o *DeleteContentmanagementShareDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *DeleteContentmanagementShareDefault) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/shares/{shareId}][%d] deleteContentmanagementShare default ", o._statusCode)
}

func (o *DeleteContentmanagementShareDefault) String() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/shares/{shareId}][%d] deleteContentmanagementShare default ", o._statusCode)
}

func (o *DeleteContentmanagementShareDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
