// Code generated by go-swagger; DO NOT EDIT.

package content_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetContentmanagementSharesReader is a Reader for the GetContentmanagementShares structure.
type GetContentmanagementSharesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetContentmanagementSharesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetContentmanagementSharesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetContentmanagementSharesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetContentmanagementSharesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetContentmanagementSharesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetContentmanagementSharesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetContentmanagementSharesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetContentmanagementSharesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetContentmanagementSharesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetContentmanagementSharesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetContentmanagementSharesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetContentmanagementSharesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetContentmanagementSharesOK creates a GetContentmanagementSharesOK with default headers values
func NewGetContentmanagementSharesOK() *GetContentmanagementSharesOK {
	return &GetContentmanagementSharesOK{}
}

/*GetContentmanagementSharesOK handles this case with default header values.

successful operation
*/
type GetContentmanagementSharesOK struct {
	Payload *models.ShareEntityListing
}

func (o *GetContentmanagementSharesOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/shares][%d] getContentmanagementSharesOK  %+v", 200, o.Payload)
}

func (o *GetContentmanagementSharesOK) GetPayload() *models.ShareEntityListing {
	return o.Payload
}

func (o *GetContentmanagementSharesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ShareEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementSharesBadRequest creates a GetContentmanagementSharesBadRequest with default headers values
func NewGetContentmanagementSharesBadRequest() *GetContentmanagementSharesBadRequest {
	return &GetContentmanagementSharesBadRequest{}
}

/*GetContentmanagementSharesBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetContentmanagementSharesBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetContentmanagementSharesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/shares][%d] getContentmanagementSharesBadRequest  %+v", 400, o.Payload)
}

func (o *GetContentmanagementSharesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementSharesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementSharesUnauthorized creates a GetContentmanagementSharesUnauthorized with default headers values
func NewGetContentmanagementSharesUnauthorized() *GetContentmanagementSharesUnauthorized {
	return &GetContentmanagementSharesUnauthorized{}
}

/*GetContentmanagementSharesUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetContentmanagementSharesUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetContentmanagementSharesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/shares][%d] getContentmanagementSharesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetContentmanagementSharesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementSharesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementSharesForbidden creates a GetContentmanagementSharesForbidden with default headers values
func NewGetContentmanagementSharesForbidden() *GetContentmanagementSharesForbidden {
	return &GetContentmanagementSharesForbidden{}
}

/*GetContentmanagementSharesForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetContentmanagementSharesForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetContentmanagementSharesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/shares][%d] getContentmanagementSharesForbidden  %+v", 403, o.Payload)
}

func (o *GetContentmanagementSharesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementSharesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementSharesNotFound creates a GetContentmanagementSharesNotFound with default headers values
func NewGetContentmanagementSharesNotFound() *GetContentmanagementSharesNotFound {
	return &GetContentmanagementSharesNotFound{}
}

/*GetContentmanagementSharesNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetContentmanagementSharesNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetContentmanagementSharesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/shares][%d] getContentmanagementSharesNotFound  %+v", 404, o.Payload)
}

func (o *GetContentmanagementSharesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementSharesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementSharesRequestEntityTooLarge creates a GetContentmanagementSharesRequestEntityTooLarge with default headers values
func NewGetContentmanagementSharesRequestEntityTooLarge() *GetContentmanagementSharesRequestEntityTooLarge {
	return &GetContentmanagementSharesRequestEntityTooLarge{}
}

/*GetContentmanagementSharesRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetContentmanagementSharesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetContentmanagementSharesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/shares][%d] getContentmanagementSharesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetContentmanagementSharesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementSharesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementSharesUnsupportedMediaType creates a GetContentmanagementSharesUnsupportedMediaType with default headers values
func NewGetContentmanagementSharesUnsupportedMediaType() *GetContentmanagementSharesUnsupportedMediaType {
	return &GetContentmanagementSharesUnsupportedMediaType{}
}

/*GetContentmanagementSharesUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetContentmanagementSharesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetContentmanagementSharesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/shares][%d] getContentmanagementSharesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetContentmanagementSharesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementSharesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementSharesTooManyRequests creates a GetContentmanagementSharesTooManyRequests with default headers values
func NewGetContentmanagementSharesTooManyRequests() *GetContentmanagementSharesTooManyRequests {
	return &GetContentmanagementSharesTooManyRequests{}
}

/*GetContentmanagementSharesTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type GetContentmanagementSharesTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetContentmanagementSharesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/shares][%d] getContentmanagementSharesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetContentmanagementSharesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementSharesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementSharesInternalServerError creates a GetContentmanagementSharesInternalServerError with default headers values
func NewGetContentmanagementSharesInternalServerError() *GetContentmanagementSharesInternalServerError {
	return &GetContentmanagementSharesInternalServerError{}
}

/*GetContentmanagementSharesInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetContentmanagementSharesInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetContentmanagementSharesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/shares][%d] getContentmanagementSharesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetContentmanagementSharesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementSharesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementSharesServiceUnavailable creates a GetContentmanagementSharesServiceUnavailable with default headers values
func NewGetContentmanagementSharesServiceUnavailable() *GetContentmanagementSharesServiceUnavailable {
	return &GetContentmanagementSharesServiceUnavailable{}
}

/*GetContentmanagementSharesServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetContentmanagementSharesServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetContentmanagementSharesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/shares][%d] getContentmanagementSharesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetContentmanagementSharesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementSharesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementSharesGatewayTimeout creates a GetContentmanagementSharesGatewayTimeout with default headers values
func NewGetContentmanagementSharesGatewayTimeout() *GetContentmanagementSharesGatewayTimeout {
	return &GetContentmanagementSharesGatewayTimeout{}
}

/*GetContentmanagementSharesGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetContentmanagementSharesGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetContentmanagementSharesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/shares][%d] getContentmanagementSharesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetContentmanagementSharesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementSharesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
