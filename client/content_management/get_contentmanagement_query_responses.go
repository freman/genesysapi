// Code generated by go-swagger; DO NOT EDIT.

package content_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetContentmanagementQueryReader is a Reader for the GetContentmanagementQuery structure.
type GetContentmanagementQueryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetContentmanagementQueryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetContentmanagementQueryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetContentmanagementQueryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetContentmanagementQueryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetContentmanagementQueryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetContentmanagementQueryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetContentmanagementQueryRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetContentmanagementQueryRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetContentmanagementQueryUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetContentmanagementQueryTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetContentmanagementQueryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetContentmanagementQueryServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetContentmanagementQueryGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetContentmanagementQueryOK creates a GetContentmanagementQueryOK with default headers values
func NewGetContentmanagementQueryOK() *GetContentmanagementQueryOK {
	return &GetContentmanagementQueryOK{}
}

/*
GetContentmanagementQueryOK describes a response with status code 200, with default header values.

successful operation
*/
type GetContentmanagementQueryOK struct {
	Payload *models.QueryResults
}

// IsSuccess returns true when this get contentmanagement query o k response has a 2xx status code
func (o *GetContentmanagementQueryOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get contentmanagement query o k response has a 3xx status code
func (o *GetContentmanagementQueryOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement query o k response has a 4xx status code
func (o *GetContentmanagementQueryOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get contentmanagement query o k response has a 5xx status code
func (o *GetContentmanagementQueryOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get contentmanagement query o k response a status code equal to that given
func (o *GetContentmanagementQueryOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetContentmanagementQueryOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/query][%d] getContentmanagementQueryOK  %+v", 200, o.Payload)
}

func (o *GetContentmanagementQueryOK) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/query][%d] getContentmanagementQueryOK  %+v", 200, o.Payload)
}

func (o *GetContentmanagementQueryOK) GetPayload() *models.QueryResults {
	return o.Payload
}

func (o *GetContentmanagementQueryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.QueryResults)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementQueryBadRequest creates a GetContentmanagementQueryBadRequest with default headers values
func NewGetContentmanagementQueryBadRequest() *GetContentmanagementQueryBadRequest {
	return &GetContentmanagementQueryBadRequest{}
}

/*
GetContentmanagementQueryBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetContentmanagementQueryBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement query bad request response has a 2xx status code
func (o *GetContentmanagementQueryBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement query bad request response has a 3xx status code
func (o *GetContentmanagementQueryBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement query bad request response has a 4xx status code
func (o *GetContentmanagementQueryBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get contentmanagement query bad request response has a 5xx status code
func (o *GetContentmanagementQueryBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get contentmanagement query bad request response a status code equal to that given
func (o *GetContentmanagementQueryBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetContentmanagementQueryBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/query][%d] getContentmanagementQueryBadRequest  %+v", 400, o.Payload)
}

func (o *GetContentmanagementQueryBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/query][%d] getContentmanagementQueryBadRequest  %+v", 400, o.Payload)
}

func (o *GetContentmanagementQueryBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementQueryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementQueryUnauthorized creates a GetContentmanagementQueryUnauthorized with default headers values
func NewGetContentmanagementQueryUnauthorized() *GetContentmanagementQueryUnauthorized {
	return &GetContentmanagementQueryUnauthorized{}
}

/*
GetContentmanagementQueryUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetContentmanagementQueryUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement query unauthorized response has a 2xx status code
func (o *GetContentmanagementQueryUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement query unauthorized response has a 3xx status code
func (o *GetContentmanagementQueryUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement query unauthorized response has a 4xx status code
func (o *GetContentmanagementQueryUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get contentmanagement query unauthorized response has a 5xx status code
func (o *GetContentmanagementQueryUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get contentmanagement query unauthorized response a status code equal to that given
func (o *GetContentmanagementQueryUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetContentmanagementQueryUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/query][%d] getContentmanagementQueryUnauthorized  %+v", 401, o.Payload)
}

func (o *GetContentmanagementQueryUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/query][%d] getContentmanagementQueryUnauthorized  %+v", 401, o.Payload)
}

func (o *GetContentmanagementQueryUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementQueryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementQueryForbidden creates a GetContentmanagementQueryForbidden with default headers values
func NewGetContentmanagementQueryForbidden() *GetContentmanagementQueryForbidden {
	return &GetContentmanagementQueryForbidden{}
}

/*
GetContentmanagementQueryForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetContentmanagementQueryForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement query forbidden response has a 2xx status code
func (o *GetContentmanagementQueryForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement query forbidden response has a 3xx status code
func (o *GetContentmanagementQueryForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement query forbidden response has a 4xx status code
func (o *GetContentmanagementQueryForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get contentmanagement query forbidden response has a 5xx status code
func (o *GetContentmanagementQueryForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get contentmanagement query forbidden response a status code equal to that given
func (o *GetContentmanagementQueryForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetContentmanagementQueryForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/query][%d] getContentmanagementQueryForbidden  %+v", 403, o.Payload)
}

func (o *GetContentmanagementQueryForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/query][%d] getContentmanagementQueryForbidden  %+v", 403, o.Payload)
}

func (o *GetContentmanagementQueryForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementQueryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementQueryNotFound creates a GetContentmanagementQueryNotFound with default headers values
func NewGetContentmanagementQueryNotFound() *GetContentmanagementQueryNotFound {
	return &GetContentmanagementQueryNotFound{}
}

/*
GetContentmanagementQueryNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetContentmanagementQueryNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement query not found response has a 2xx status code
func (o *GetContentmanagementQueryNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement query not found response has a 3xx status code
func (o *GetContentmanagementQueryNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement query not found response has a 4xx status code
func (o *GetContentmanagementQueryNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get contentmanagement query not found response has a 5xx status code
func (o *GetContentmanagementQueryNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get contentmanagement query not found response a status code equal to that given
func (o *GetContentmanagementQueryNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetContentmanagementQueryNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/query][%d] getContentmanagementQueryNotFound  %+v", 404, o.Payload)
}

func (o *GetContentmanagementQueryNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/query][%d] getContentmanagementQueryNotFound  %+v", 404, o.Payload)
}

func (o *GetContentmanagementQueryNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementQueryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementQueryRequestTimeout creates a GetContentmanagementQueryRequestTimeout with default headers values
func NewGetContentmanagementQueryRequestTimeout() *GetContentmanagementQueryRequestTimeout {
	return &GetContentmanagementQueryRequestTimeout{}
}

/*
GetContentmanagementQueryRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetContentmanagementQueryRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement query request timeout response has a 2xx status code
func (o *GetContentmanagementQueryRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement query request timeout response has a 3xx status code
func (o *GetContentmanagementQueryRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement query request timeout response has a 4xx status code
func (o *GetContentmanagementQueryRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get contentmanagement query request timeout response has a 5xx status code
func (o *GetContentmanagementQueryRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get contentmanagement query request timeout response a status code equal to that given
func (o *GetContentmanagementQueryRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetContentmanagementQueryRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/query][%d] getContentmanagementQueryRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetContentmanagementQueryRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/query][%d] getContentmanagementQueryRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetContentmanagementQueryRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementQueryRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementQueryRequestEntityTooLarge creates a GetContentmanagementQueryRequestEntityTooLarge with default headers values
func NewGetContentmanagementQueryRequestEntityTooLarge() *GetContentmanagementQueryRequestEntityTooLarge {
	return &GetContentmanagementQueryRequestEntityTooLarge{}
}

/*
GetContentmanagementQueryRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetContentmanagementQueryRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement query request entity too large response has a 2xx status code
func (o *GetContentmanagementQueryRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement query request entity too large response has a 3xx status code
func (o *GetContentmanagementQueryRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement query request entity too large response has a 4xx status code
func (o *GetContentmanagementQueryRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get contentmanagement query request entity too large response has a 5xx status code
func (o *GetContentmanagementQueryRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get contentmanagement query request entity too large response a status code equal to that given
func (o *GetContentmanagementQueryRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetContentmanagementQueryRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/query][%d] getContentmanagementQueryRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetContentmanagementQueryRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/query][%d] getContentmanagementQueryRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetContentmanagementQueryRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementQueryRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementQueryUnsupportedMediaType creates a GetContentmanagementQueryUnsupportedMediaType with default headers values
func NewGetContentmanagementQueryUnsupportedMediaType() *GetContentmanagementQueryUnsupportedMediaType {
	return &GetContentmanagementQueryUnsupportedMediaType{}
}

/*
GetContentmanagementQueryUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetContentmanagementQueryUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement query unsupported media type response has a 2xx status code
func (o *GetContentmanagementQueryUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement query unsupported media type response has a 3xx status code
func (o *GetContentmanagementQueryUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement query unsupported media type response has a 4xx status code
func (o *GetContentmanagementQueryUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get contentmanagement query unsupported media type response has a 5xx status code
func (o *GetContentmanagementQueryUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get contentmanagement query unsupported media type response a status code equal to that given
func (o *GetContentmanagementQueryUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetContentmanagementQueryUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/query][%d] getContentmanagementQueryUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetContentmanagementQueryUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/query][%d] getContentmanagementQueryUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetContentmanagementQueryUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementQueryUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementQueryTooManyRequests creates a GetContentmanagementQueryTooManyRequests with default headers values
func NewGetContentmanagementQueryTooManyRequests() *GetContentmanagementQueryTooManyRequests {
	return &GetContentmanagementQueryTooManyRequests{}
}

/*
GetContentmanagementQueryTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetContentmanagementQueryTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement query too many requests response has a 2xx status code
func (o *GetContentmanagementQueryTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement query too many requests response has a 3xx status code
func (o *GetContentmanagementQueryTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement query too many requests response has a 4xx status code
func (o *GetContentmanagementQueryTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get contentmanagement query too many requests response has a 5xx status code
func (o *GetContentmanagementQueryTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get contentmanagement query too many requests response a status code equal to that given
func (o *GetContentmanagementQueryTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetContentmanagementQueryTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/query][%d] getContentmanagementQueryTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetContentmanagementQueryTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/query][%d] getContentmanagementQueryTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetContentmanagementQueryTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementQueryTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementQueryInternalServerError creates a GetContentmanagementQueryInternalServerError with default headers values
func NewGetContentmanagementQueryInternalServerError() *GetContentmanagementQueryInternalServerError {
	return &GetContentmanagementQueryInternalServerError{}
}

/*
GetContentmanagementQueryInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetContentmanagementQueryInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement query internal server error response has a 2xx status code
func (o *GetContentmanagementQueryInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement query internal server error response has a 3xx status code
func (o *GetContentmanagementQueryInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement query internal server error response has a 4xx status code
func (o *GetContentmanagementQueryInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get contentmanagement query internal server error response has a 5xx status code
func (o *GetContentmanagementQueryInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get contentmanagement query internal server error response a status code equal to that given
func (o *GetContentmanagementQueryInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetContentmanagementQueryInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/query][%d] getContentmanagementQueryInternalServerError  %+v", 500, o.Payload)
}

func (o *GetContentmanagementQueryInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/query][%d] getContentmanagementQueryInternalServerError  %+v", 500, o.Payload)
}

func (o *GetContentmanagementQueryInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementQueryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementQueryServiceUnavailable creates a GetContentmanagementQueryServiceUnavailable with default headers values
func NewGetContentmanagementQueryServiceUnavailable() *GetContentmanagementQueryServiceUnavailable {
	return &GetContentmanagementQueryServiceUnavailable{}
}

/*
GetContentmanagementQueryServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetContentmanagementQueryServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement query service unavailable response has a 2xx status code
func (o *GetContentmanagementQueryServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement query service unavailable response has a 3xx status code
func (o *GetContentmanagementQueryServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement query service unavailable response has a 4xx status code
func (o *GetContentmanagementQueryServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get contentmanagement query service unavailable response has a 5xx status code
func (o *GetContentmanagementQueryServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get contentmanagement query service unavailable response a status code equal to that given
func (o *GetContentmanagementQueryServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetContentmanagementQueryServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/query][%d] getContentmanagementQueryServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetContentmanagementQueryServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/query][%d] getContentmanagementQueryServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetContentmanagementQueryServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementQueryServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementQueryGatewayTimeout creates a GetContentmanagementQueryGatewayTimeout with default headers values
func NewGetContentmanagementQueryGatewayTimeout() *GetContentmanagementQueryGatewayTimeout {
	return &GetContentmanagementQueryGatewayTimeout{}
}

/*
GetContentmanagementQueryGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetContentmanagementQueryGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement query gateway timeout response has a 2xx status code
func (o *GetContentmanagementQueryGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement query gateway timeout response has a 3xx status code
func (o *GetContentmanagementQueryGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement query gateway timeout response has a 4xx status code
func (o *GetContentmanagementQueryGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get contentmanagement query gateway timeout response has a 5xx status code
func (o *GetContentmanagementQueryGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get contentmanagement query gateway timeout response a status code equal to that given
func (o *GetContentmanagementQueryGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetContentmanagementQueryGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/query][%d] getContentmanagementQueryGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetContentmanagementQueryGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/query][%d] getContentmanagementQueryGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetContentmanagementQueryGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementQueryGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
