// Code generated by go-swagger; DO NOT EDIT.

package content_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetContentmanagementStatusStatusIDReader is a Reader for the GetContentmanagementStatusStatusID structure.
type GetContentmanagementStatusStatusIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetContentmanagementStatusStatusIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetContentmanagementStatusStatusIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetContentmanagementStatusStatusIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetContentmanagementStatusStatusIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetContentmanagementStatusStatusIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetContentmanagementStatusStatusIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetContentmanagementStatusStatusIDRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetContentmanagementStatusStatusIDRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetContentmanagementStatusStatusIDUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetContentmanagementStatusStatusIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetContentmanagementStatusStatusIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetContentmanagementStatusStatusIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetContentmanagementStatusStatusIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetContentmanagementStatusStatusIDOK creates a GetContentmanagementStatusStatusIDOK with default headers values
func NewGetContentmanagementStatusStatusIDOK() *GetContentmanagementStatusStatusIDOK {
	return &GetContentmanagementStatusStatusIDOK{}
}

/*
GetContentmanagementStatusStatusIDOK describes a response with status code 200, with default header values.

successful operation
*/
type GetContentmanagementStatusStatusIDOK struct {
	Payload *models.CommandStatus
}

// IsSuccess returns true when this get contentmanagement status status Id o k response has a 2xx status code
func (o *GetContentmanagementStatusStatusIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get contentmanagement status status Id o k response has a 3xx status code
func (o *GetContentmanagementStatusStatusIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement status status Id o k response has a 4xx status code
func (o *GetContentmanagementStatusStatusIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get contentmanagement status status Id o k response has a 5xx status code
func (o *GetContentmanagementStatusStatusIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get contentmanagement status status Id o k response a status code equal to that given
func (o *GetContentmanagementStatusStatusIDOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetContentmanagementStatusStatusIDOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/status/{statusId}][%d] getContentmanagementStatusStatusIdOK  %+v", 200, o.Payload)
}

func (o *GetContentmanagementStatusStatusIDOK) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/status/{statusId}][%d] getContentmanagementStatusStatusIdOK  %+v", 200, o.Payload)
}

func (o *GetContentmanagementStatusStatusIDOK) GetPayload() *models.CommandStatus {
	return o.Payload
}

func (o *GetContentmanagementStatusStatusIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommandStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementStatusStatusIDBadRequest creates a GetContentmanagementStatusStatusIDBadRequest with default headers values
func NewGetContentmanagementStatusStatusIDBadRequest() *GetContentmanagementStatusStatusIDBadRequest {
	return &GetContentmanagementStatusStatusIDBadRequest{}
}

/*
GetContentmanagementStatusStatusIDBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetContentmanagementStatusStatusIDBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement status status Id bad request response has a 2xx status code
func (o *GetContentmanagementStatusStatusIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement status status Id bad request response has a 3xx status code
func (o *GetContentmanagementStatusStatusIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement status status Id bad request response has a 4xx status code
func (o *GetContentmanagementStatusStatusIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get contentmanagement status status Id bad request response has a 5xx status code
func (o *GetContentmanagementStatusStatusIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get contentmanagement status status Id bad request response a status code equal to that given
func (o *GetContentmanagementStatusStatusIDBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetContentmanagementStatusStatusIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/status/{statusId}][%d] getContentmanagementStatusStatusIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetContentmanagementStatusStatusIDBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/status/{statusId}][%d] getContentmanagementStatusStatusIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetContentmanagementStatusStatusIDBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementStatusStatusIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementStatusStatusIDUnauthorized creates a GetContentmanagementStatusStatusIDUnauthorized with default headers values
func NewGetContentmanagementStatusStatusIDUnauthorized() *GetContentmanagementStatusStatusIDUnauthorized {
	return &GetContentmanagementStatusStatusIDUnauthorized{}
}

/*
GetContentmanagementStatusStatusIDUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetContentmanagementStatusStatusIDUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement status status Id unauthorized response has a 2xx status code
func (o *GetContentmanagementStatusStatusIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement status status Id unauthorized response has a 3xx status code
func (o *GetContentmanagementStatusStatusIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement status status Id unauthorized response has a 4xx status code
func (o *GetContentmanagementStatusStatusIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get contentmanagement status status Id unauthorized response has a 5xx status code
func (o *GetContentmanagementStatusStatusIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get contentmanagement status status Id unauthorized response a status code equal to that given
func (o *GetContentmanagementStatusStatusIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetContentmanagementStatusStatusIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/status/{statusId}][%d] getContentmanagementStatusStatusIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetContentmanagementStatusStatusIDUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/status/{statusId}][%d] getContentmanagementStatusStatusIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetContentmanagementStatusStatusIDUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementStatusStatusIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementStatusStatusIDForbidden creates a GetContentmanagementStatusStatusIDForbidden with default headers values
func NewGetContentmanagementStatusStatusIDForbidden() *GetContentmanagementStatusStatusIDForbidden {
	return &GetContentmanagementStatusStatusIDForbidden{}
}

/*
GetContentmanagementStatusStatusIDForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetContentmanagementStatusStatusIDForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement status status Id forbidden response has a 2xx status code
func (o *GetContentmanagementStatusStatusIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement status status Id forbidden response has a 3xx status code
func (o *GetContentmanagementStatusStatusIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement status status Id forbidden response has a 4xx status code
func (o *GetContentmanagementStatusStatusIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get contentmanagement status status Id forbidden response has a 5xx status code
func (o *GetContentmanagementStatusStatusIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get contentmanagement status status Id forbidden response a status code equal to that given
func (o *GetContentmanagementStatusStatusIDForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetContentmanagementStatusStatusIDForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/status/{statusId}][%d] getContentmanagementStatusStatusIdForbidden  %+v", 403, o.Payload)
}

func (o *GetContentmanagementStatusStatusIDForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/status/{statusId}][%d] getContentmanagementStatusStatusIdForbidden  %+v", 403, o.Payload)
}

func (o *GetContentmanagementStatusStatusIDForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementStatusStatusIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementStatusStatusIDNotFound creates a GetContentmanagementStatusStatusIDNotFound with default headers values
func NewGetContentmanagementStatusStatusIDNotFound() *GetContentmanagementStatusStatusIDNotFound {
	return &GetContentmanagementStatusStatusIDNotFound{}
}

/*
GetContentmanagementStatusStatusIDNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetContentmanagementStatusStatusIDNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement status status Id not found response has a 2xx status code
func (o *GetContentmanagementStatusStatusIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement status status Id not found response has a 3xx status code
func (o *GetContentmanagementStatusStatusIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement status status Id not found response has a 4xx status code
func (o *GetContentmanagementStatusStatusIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get contentmanagement status status Id not found response has a 5xx status code
func (o *GetContentmanagementStatusStatusIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get contentmanagement status status Id not found response a status code equal to that given
func (o *GetContentmanagementStatusStatusIDNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetContentmanagementStatusStatusIDNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/status/{statusId}][%d] getContentmanagementStatusStatusIdNotFound  %+v", 404, o.Payload)
}

func (o *GetContentmanagementStatusStatusIDNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/status/{statusId}][%d] getContentmanagementStatusStatusIdNotFound  %+v", 404, o.Payload)
}

func (o *GetContentmanagementStatusStatusIDNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementStatusStatusIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementStatusStatusIDRequestTimeout creates a GetContentmanagementStatusStatusIDRequestTimeout with default headers values
func NewGetContentmanagementStatusStatusIDRequestTimeout() *GetContentmanagementStatusStatusIDRequestTimeout {
	return &GetContentmanagementStatusStatusIDRequestTimeout{}
}

/*
GetContentmanagementStatusStatusIDRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetContentmanagementStatusStatusIDRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement status status Id request timeout response has a 2xx status code
func (o *GetContentmanagementStatusStatusIDRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement status status Id request timeout response has a 3xx status code
func (o *GetContentmanagementStatusStatusIDRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement status status Id request timeout response has a 4xx status code
func (o *GetContentmanagementStatusStatusIDRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get contentmanagement status status Id request timeout response has a 5xx status code
func (o *GetContentmanagementStatusStatusIDRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get contentmanagement status status Id request timeout response a status code equal to that given
func (o *GetContentmanagementStatusStatusIDRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetContentmanagementStatusStatusIDRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/status/{statusId}][%d] getContentmanagementStatusStatusIdRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetContentmanagementStatusStatusIDRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/status/{statusId}][%d] getContentmanagementStatusStatusIdRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetContentmanagementStatusStatusIDRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementStatusStatusIDRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementStatusStatusIDRequestEntityTooLarge creates a GetContentmanagementStatusStatusIDRequestEntityTooLarge with default headers values
func NewGetContentmanagementStatusStatusIDRequestEntityTooLarge() *GetContentmanagementStatusStatusIDRequestEntityTooLarge {
	return &GetContentmanagementStatusStatusIDRequestEntityTooLarge{}
}

/*
GetContentmanagementStatusStatusIDRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetContentmanagementStatusStatusIDRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement status status Id request entity too large response has a 2xx status code
func (o *GetContentmanagementStatusStatusIDRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement status status Id request entity too large response has a 3xx status code
func (o *GetContentmanagementStatusStatusIDRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement status status Id request entity too large response has a 4xx status code
func (o *GetContentmanagementStatusStatusIDRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get contentmanagement status status Id request entity too large response has a 5xx status code
func (o *GetContentmanagementStatusStatusIDRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get contentmanagement status status Id request entity too large response a status code equal to that given
func (o *GetContentmanagementStatusStatusIDRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetContentmanagementStatusStatusIDRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/status/{statusId}][%d] getContentmanagementStatusStatusIdRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetContentmanagementStatusStatusIDRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/status/{statusId}][%d] getContentmanagementStatusStatusIdRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetContentmanagementStatusStatusIDRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementStatusStatusIDRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementStatusStatusIDUnsupportedMediaType creates a GetContentmanagementStatusStatusIDUnsupportedMediaType with default headers values
func NewGetContentmanagementStatusStatusIDUnsupportedMediaType() *GetContentmanagementStatusStatusIDUnsupportedMediaType {
	return &GetContentmanagementStatusStatusIDUnsupportedMediaType{}
}

/*
GetContentmanagementStatusStatusIDUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetContentmanagementStatusStatusIDUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement status status Id unsupported media type response has a 2xx status code
func (o *GetContentmanagementStatusStatusIDUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement status status Id unsupported media type response has a 3xx status code
func (o *GetContentmanagementStatusStatusIDUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement status status Id unsupported media type response has a 4xx status code
func (o *GetContentmanagementStatusStatusIDUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get contentmanagement status status Id unsupported media type response has a 5xx status code
func (o *GetContentmanagementStatusStatusIDUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get contentmanagement status status Id unsupported media type response a status code equal to that given
func (o *GetContentmanagementStatusStatusIDUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetContentmanagementStatusStatusIDUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/status/{statusId}][%d] getContentmanagementStatusStatusIdUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetContentmanagementStatusStatusIDUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/status/{statusId}][%d] getContentmanagementStatusStatusIdUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetContentmanagementStatusStatusIDUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementStatusStatusIDUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementStatusStatusIDTooManyRequests creates a GetContentmanagementStatusStatusIDTooManyRequests with default headers values
func NewGetContentmanagementStatusStatusIDTooManyRequests() *GetContentmanagementStatusStatusIDTooManyRequests {
	return &GetContentmanagementStatusStatusIDTooManyRequests{}
}

/*
GetContentmanagementStatusStatusIDTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetContentmanagementStatusStatusIDTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement status status Id too many requests response has a 2xx status code
func (o *GetContentmanagementStatusStatusIDTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement status status Id too many requests response has a 3xx status code
func (o *GetContentmanagementStatusStatusIDTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement status status Id too many requests response has a 4xx status code
func (o *GetContentmanagementStatusStatusIDTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get contentmanagement status status Id too many requests response has a 5xx status code
func (o *GetContentmanagementStatusStatusIDTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get contentmanagement status status Id too many requests response a status code equal to that given
func (o *GetContentmanagementStatusStatusIDTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetContentmanagementStatusStatusIDTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/status/{statusId}][%d] getContentmanagementStatusStatusIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetContentmanagementStatusStatusIDTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/status/{statusId}][%d] getContentmanagementStatusStatusIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetContentmanagementStatusStatusIDTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementStatusStatusIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementStatusStatusIDInternalServerError creates a GetContentmanagementStatusStatusIDInternalServerError with default headers values
func NewGetContentmanagementStatusStatusIDInternalServerError() *GetContentmanagementStatusStatusIDInternalServerError {
	return &GetContentmanagementStatusStatusIDInternalServerError{}
}

/*
GetContentmanagementStatusStatusIDInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetContentmanagementStatusStatusIDInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement status status Id internal server error response has a 2xx status code
func (o *GetContentmanagementStatusStatusIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement status status Id internal server error response has a 3xx status code
func (o *GetContentmanagementStatusStatusIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement status status Id internal server error response has a 4xx status code
func (o *GetContentmanagementStatusStatusIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get contentmanagement status status Id internal server error response has a 5xx status code
func (o *GetContentmanagementStatusStatusIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get contentmanagement status status Id internal server error response a status code equal to that given
func (o *GetContentmanagementStatusStatusIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetContentmanagementStatusStatusIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/status/{statusId}][%d] getContentmanagementStatusStatusIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetContentmanagementStatusStatusIDInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/status/{statusId}][%d] getContentmanagementStatusStatusIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetContentmanagementStatusStatusIDInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementStatusStatusIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementStatusStatusIDServiceUnavailable creates a GetContentmanagementStatusStatusIDServiceUnavailable with default headers values
func NewGetContentmanagementStatusStatusIDServiceUnavailable() *GetContentmanagementStatusStatusIDServiceUnavailable {
	return &GetContentmanagementStatusStatusIDServiceUnavailable{}
}

/*
GetContentmanagementStatusStatusIDServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetContentmanagementStatusStatusIDServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement status status Id service unavailable response has a 2xx status code
func (o *GetContentmanagementStatusStatusIDServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement status status Id service unavailable response has a 3xx status code
func (o *GetContentmanagementStatusStatusIDServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement status status Id service unavailable response has a 4xx status code
func (o *GetContentmanagementStatusStatusIDServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get contentmanagement status status Id service unavailable response has a 5xx status code
func (o *GetContentmanagementStatusStatusIDServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get contentmanagement status status Id service unavailable response a status code equal to that given
func (o *GetContentmanagementStatusStatusIDServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetContentmanagementStatusStatusIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/status/{statusId}][%d] getContentmanagementStatusStatusIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetContentmanagementStatusStatusIDServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/status/{statusId}][%d] getContentmanagementStatusStatusIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetContentmanagementStatusStatusIDServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementStatusStatusIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementStatusStatusIDGatewayTimeout creates a GetContentmanagementStatusStatusIDGatewayTimeout with default headers values
func NewGetContentmanagementStatusStatusIDGatewayTimeout() *GetContentmanagementStatusStatusIDGatewayTimeout {
	return &GetContentmanagementStatusStatusIDGatewayTimeout{}
}

/*
GetContentmanagementStatusStatusIDGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetContentmanagementStatusStatusIDGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement status status Id gateway timeout response has a 2xx status code
func (o *GetContentmanagementStatusStatusIDGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement status status Id gateway timeout response has a 3xx status code
func (o *GetContentmanagementStatusStatusIDGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement status status Id gateway timeout response has a 4xx status code
func (o *GetContentmanagementStatusStatusIDGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get contentmanagement status status Id gateway timeout response has a 5xx status code
func (o *GetContentmanagementStatusStatusIDGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get contentmanagement status status Id gateway timeout response a status code equal to that given
func (o *GetContentmanagementStatusStatusIDGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetContentmanagementStatusStatusIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/status/{statusId}][%d] getContentmanagementStatusStatusIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetContentmanagementStatusStatusIDGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/status/{statusId}][%d] getContentmanagementStatusStatusIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetContentmanagementStatusStatusIDGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementStatusStatusIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
