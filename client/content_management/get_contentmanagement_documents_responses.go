// Code generated by go-swagger; DO NOT EDIT.

package content_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetContentmanagementDocumentsReader is a Reader for the GetContentmanagementDocuments structure.
type GetContentmanagementDocumentsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetContentmanagementDocumentsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetContentmanagementDocumentsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetContentmanagementDocumentsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetContentmanagementDocumentsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetContentmanagementDocumentsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetContentmanagementDocumentsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetContentmanagementDocumentsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetContentmanagementDocumentsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetContentmanagementDocumentsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetContentmanagementDocumentsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetContentmanagementDocumentsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetContentmanagementDocumentsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetContentmanagementDocumentsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetContentmanagementDocumentsOK creates a GetContentmanagementDocumentsOK with default headers values
func NewGetContentmanagementDocumentsOK() *GetContentmanagementDocumentsOK {
	return &GetContentmanagementDocumentsOK{}
}

/*
GetContentmanagementDocumentsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetContentmanagementDocumentsOK struct {
	Payload *models.DocumentEntityListing
}

// IsSuccess returns true when this get contentmanagement documents o k response has a 2xx status code
func (o *GetContentmanagementDocumentsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get contentmanagement documents o k response has a 3xx status code
func (o *GetContentmanagementDocumentsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement documents o k response has a 4xx status code
func (o *GetContentmanagementDocumentsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get contentmanagement documents o k response has a 5xx status code
func (o *GetContentmanagementDocumentsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get contentmanagement documents o k response a status code equal to that given
func (o *GetContentmanagementDocumentsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetContentmanagementDocumentsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/documents][%d] getContentmanagementDocumentsOK  %+v", 200, o.Payload)
}

func (o *GetContentmanagementDocumentsOK) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/documents][%d] getContentmanagementDocumentsOK  %+v", 200, o.Payload)
}

func (o *GetContentmanagementDocumentsOK) GetPayload() *models.DocumentEntityListing {
	return o.Payload
}

func (o *GetContentmanagementDocumentsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DocumentEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementDocumentsBadRequest creates a GetContentmanagementDocumentsBadRequest with default headers values
func NewGetContentmanagementDocumentsBadRequest() *GetContentmanagementDocumentsBadRequest {
	return &GetContentmanagementDocumentsBadRequest{}
}

/*
GetContentmanagementDocumentsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetContentmanagementDocumentsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement documents bad request response has a 2xx status code
func (o *GetContentmanagementDocumentsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement documents bad request response has a 3xx status code
func (o *GetContentmanagementDocumentsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement documents bad request response has a 4xx status code
func (o *GetContentmanagementDocumentsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get contentmanagement documents bad request response has a 5xx status code
func (o *GetContentmanagementDocumentsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get contentmanagement documents bad request response a status code equal to that given
func (o *GetContentmanagementDocumentsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetContentmanagementDocumentsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/documents][%d] getContentmanagementDocumentsBadRequest  %+v", 400, o.Payload)
}

func (o *GetContentmanagementDocumentsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/documents][%d] getContentmanagementDocumentsBadRequest  %+v", 400, o.Payload)
}

func (o *GetContentmanagementDocumentsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementDocumentsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementDocumentsUnauthorized creates a GetContentmanagementDocumentsUnauthorized with default headers values
func NewGetContentmanagementDocumentsUnauthorized() *GetContentmanagementDocumentsUnauthorized {
	return &GetContentmanagementDocumentsUnauthorized{}
}

/*
GetContentmanagementDocumentsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetContentmanagementDocumentsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement documents unauthorized response has a 2xx status code
func (o *GetContentmanagementDocumentsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement documents unauthorized response has a 3xx status code
func (o *GetContentmanagementDocumentsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement documents unauthorized response has a 4xx status code
func (o *GetContentmanagementDocumentsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get contentmanagement documents unauthorized response has a 5xx status code
func (o *GetContentmanagementDocumentsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get contentmanagement documents unauthorized response a status code equal to that given
func (o *GetContentmanagementDocumentsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetContentmanagementDocumentsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/documents][%d] getContentmanagementDocumentsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetContentmanagementDocumentsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/documents][%d] getContentmanagementDocumentsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetContentmanagementDocumentsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementDocumentsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementDocumentsForbidden creates a GetContentmanagementDocumentsForbidden with default headers values
func NewGetContentmanagementDocumentsForbidden() *GetContentmanagementDocumentsForbidden {
	return &GetContentmanagementDocumentsForbidden{}
}

/*
GetContentmanagementDocumentsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetContentmanagementDocumentsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement documents forbidden response has a 2xx status code
func (o *GetContentmanagementDocumentsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement documents forbidden response has a 3xx status code
func (o *GetContentmanagementDocumentsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement documents forbidden response has a 4xx status code
func (o *GetContentmanagementDocumentsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get contentmanagement documents forbidden response has a 5xx status code
func (o *GetContentmanagementDocumentsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get contentmanagement documents forbidden response a status code equal to that given
func (o *GetContentmanagementDocumentsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetContentmanagementDocumentsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/documents][%d] getContentmanagementDocumentsForbidden  %+v", 403, o.Payload)
}

func (o *GetContentmanagementDocumentsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/documents][%d] getContentmanagementDocumentsForbidden  %+v", 403, o.Payload)
}

func (o *GetContentmanagementDocumentsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementDocumentsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementDocumentsNotFound creates a GetContentmanagementDocumentsNotFound with default headers values
func NewGetContentmanagementDocumentsNotFound() *GetContentmanagementDocumentsNotFound {
	return &GetContentmanagementDocumentsNotFound{}
}

/*
GetContentmanagementDocumentsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetContentmanagementDocumentsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement documents not found response has a 2xx status code
func (o *GetContentmanagementDocumentsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement documents not found response has a 3xx status code
func (o *GetContentmanagementDocumentsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement documents not found response has a 4xx status code
func (o *GetContentmanagementDocumentsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get contentmanagement documents not found response has a 5xx status code
func (o *GetContentmanagementDocumentsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get contentmanagement documents not found response a status code equal to that given
func (o *GetContentmanagementDocumentsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetContentmanagementDocumentsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/documents][%d] getContentmanagementDocumentsNotFound  %+v", 404, o.Payload)
}

func (o *GetContentmanagementDocumentsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/documents][%d] getContentmanagementDocumentsNotFound  %+v", 404, o.Payload)
}

func (o *GetContentmanagementDocumentsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementDocumentsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementDocumentsRequestTimeout creates a GetContentmanagementDocumentsRequestTimeout with default headers values
func NewGetContentmanagementDocumentsRequestTimeout() *GetContentmanagementDocumentsRequestTimeout {
	return &GetContentmanagementDocumentsRequestTimeout{}
}

/*
GetContentmanagementDocumentsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetContentmanagementDocumentsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement documents request timeout response has a 2xx status code
func (o *GetContentmanagementDocumentsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement documents request timeout response has a 3xx status code
func (o *GetContentmanagementDocumentsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement documents request timeout response has a 4xx status code
func (o *GetContentmanagementDocumentsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get contentmanagement documents request timeout response has a 5xx status code
func (o *GetContentmanagementDocumentsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get contentmanagement documents request timeout response a status code equal to that given
func (o *GetContentmanagementDocumentsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetContentmanagementDocumentsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/documents][%d] getContentmanagementDocumentsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetContentmanagementDocumentsRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/documents][%d] getContentmanagementDocumentsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetContentmanagementDocumentsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementDocumentsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementDocumentsRequestEntityTooLarge creates a GetContentmanagementDocumentsRequestEntityTooLarge with default headers values
func NewGetContentmanagementDocumentsRequestEntityTooLarge() *GetContentmanagementDocumentsRequestEntityTooLarge {
	return &GetContentmanagementDocumentsRequestEntityTooLarge{}
}

/*
GetContentmanagementDocumentsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetContentmanagementDocumentsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement documents request entity too large response has a 2xx status code
func (o *GetContentmanagementDocumentsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement documents request entity too large response has a 3xx status code
func (o *GetContentmanagementDocumentsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement documents request entity too large response has a 4xx status code
func (o *GetContentmanagementDocumentsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get contentmanagement documents request entity too large response has a 5xx status code
func (o *GetContentmanagementDocumentsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get contentmanagement documents request entity too large response a status code equal to that given
func (o *GetContentmanagementDocumentsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetContentmanagementDocumentsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/documents][%d] getContentmanagementDocumentsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetContentmanagementDocumentsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/documents][%d] getContentmanagementDocumentsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetContentmanagementDocumentsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementDocumentsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementDocumentsUnsupportedMediaType creates a GetContentmanagementDocumentsUnsupportedMediaType with default headers values
func NewGetContentmanagementDocumentsUnsupportedMediaType() *GetContentmanagementDocumentsUnsupportedMediaType {
	return &GetContentmanagementDocumentsUnsupportedMediaType{}
}

/*
GetContentmanagementDocumentsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetContentmanagementDocumentsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement documents unsupported media type response has a 2xx status code
func (o *GetContentmanagementDocumentsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement documents unsupported media type response has a 3xx status code
func (o *GetContentmanagementDocumentsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement documents unsupported media type response has a 4xx status code
func (o *GetContentmanagementDocumentsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get contentmanagement documents unsupported media type response has a 5xx status code
func (o *GetContentmanagementDocumentsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get contentmanagement documents unsupported media type response a status code equal to that given
func (o *GetContentmanagementDocumentsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetContentmanagementDocumentsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/documents][%d] getContentmanagementDocumentsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetContentmanagementDocumentsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/documents][%d] getContentmanagementDocumentsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetContentmanagementDocumentsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementDocumentsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementDocumentsTooManyRequests creates a GetContentmanagementDocumentsTooManyRequests with default headers values
func NewGetContentmanagementDocumentsTooManyRequests() *GetContentmanagementDocumentsTooManyRequests {
	return &GetContentmanagementDocumentsTooManyRequests{}
}

/*
GetContentmanagementDocumentsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetContentmanagementDocumentsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement documents too many requests response has a 2xx status code
func (o *GetContentmanagementDocumentsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement documents too many requests response has a 3xx status code
func (o *GetContentmanagementDocumentsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement documents too many requests response has a 4xx status code
func (o *GetContentmanagementDocumentsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get contentmanagement documents too many requests response has a 5xx status code
func (o *GetContentmanagementDocumentsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get contentmanagement documents too many requests response a status code equal to that given
func (o *GetContentmanagementDocumentsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetContentmanagementDocumentsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/documents][%d] getContentmanagementDocumentsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetContentmanagementDocumentsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/documents][%d] getContentmanagementDocumentsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetContentmanagementDocumentsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementDocumentsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementDocumentsInternalServerError creates a GetContentmanagementDocumentsInternalServerError with default headers values
func NewGetContentmanagementDocumentsInternalServerError() *GetContentmanagementDocumentsInternalServerError {
	return &GetContentmanagementDocumentsInternalServerError{}
}

/*
GetContentmanagementDocumentsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetContentmanagementDocumentsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement documents internal server error response has a 2xx status code
func (o *GetContentmanagementDocumentsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement documents internal server error response has a 3xx status code
func (o *GetContentmanagementDocumentsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement documents internal server error response has a 4xx status code
func (o *GetContentmanagementDocumentsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get contentmanagement documents internal server error response has a 5xx status code
func (o *GetContentmanagementDocumentsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get contentmanagement documents internal server error response a status code equal to that given
func (o *GetContentmanagementDocumentsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetContentmanagementDocumentsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/documents][%d] getContentmanagementDocumentsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetContentmanagementDocumentsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/documents][%d] getContentmanagementDocumentsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetContentmanagementDocumentsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementDocumentsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementDocumentsServiceUnavailable creates a GetContentmanagementDocumentsServiceUnavailable with default headers values
func NewGetContentmanagementDocumentsServiceUnavailable() *GetContentmanagementDocumentsServiceUnavailable {
	return &GetContentmanagementDocumentsServiceUnavailable{}
}

/*
GetContentmanagementDocumentsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetContentmanagementDocumentsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement documents service unavailable response has a 2xx status code
func (o *GetContentmanagementDocumentsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement documents service unavailable response has a 3xx status code
func (o *GetContentmanagementDocumentsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement documents service unavailable response has a 4xx status code
func (o *GetContentmanagementDocumentsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get contentmanagement documents service unavailable response has a 5xx status code
func (o *GetContentmanagementDocumentsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get contentmanagement documents service unavailable response a status code equal to that given
func (o *GetContentmanagementDocumentsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetContentmanagementDocumentsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/documents][%d] getContentmanagementDocumentsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetContentmanagementDocumentsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/documents][%d] getContentmanagementDocumentsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetContentmanagementDocumentsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementDocumentsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementDocumentsGatewayTimeout creates a GetContentmanagementDocumentsGatewayTimeout with default headers values
func NewGetContentmanagementDocumentsGatewayTimeout() *GetContentmanagementDocumentsGatewayTimeout {
	return &GetContentmanagementDocumentsGatewayTimeout{}
}

/*
GetContentmanagementDocumentsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetContentmanagementDocumentsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement documents gateway timeout response has a 2xx status code
func (o *GetContentmanagementDocumentsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement documents gateway timeout response has a 3xx status code
func (o *GetContentmanagementDocumentsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement documents gateway timeout response has a 4xx status code
func (o *GetContentmanagementDocumentsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get contentmanagement documents gateway timeout response has a 5xx status code
func (o *GetContentmanagementDocumentsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get contentmanagement documents gateway timeout response a status code equal to that given
func (o *GetContentmanagementDocumentsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetContentmanagementDocumentsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/documents][%d] getContentmanagementDocumentsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetContentmanagementDocumentsGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/documents][%d] getContentmanagementDocumentsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetContentmanagementDocumentsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementDocumentsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
