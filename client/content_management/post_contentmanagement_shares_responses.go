// Code generated by go-swagger; DO NOT EDIT.

package content_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostContentmanagementSharesReader is a Reader for the PostContentmanagementShares structure.
type PostContentmanagementSharesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostContentmanagementSharesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostContentmanagementSharesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostContentmanagementSharesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostContentmanagementSharesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostContentmanagementSharesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostContentmanagementSharesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostContentmanagementSharesRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostContentmanagementSharesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostContentmanagementSharesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostContentmanagementSharesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostContentmanagementSharesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostContentmanagementSharesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostContentmanagementSharesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostContentmanagementSharesOK creates a PostContentmanagementSharesOK with default headers values
func NewPostContentmanagementSharesOK() *PostContentmanagementSharesOK {
	return &PostContentmanagementSharesOK{}
}

/*
PostContentmanagementSharesOK describes a response with status code 200, with default header values.

successful operation
*/
type PostContentmanagementSharesOK struct {
	Payload *models.CreateShareResponse
}

// IsSuccess returns true when this post contentmanagement shares o k response has a 2xx status code
func (o *PostContentmanagementSharesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post contentmanagement shares o k response has a 3xx status code
func (o *PostContentmanagementSharesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post contentmanagement shares o k response has a 4xx status code
func (o *PostContentmanagementSharesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post contentmanagement shares o k response has a 5xx status code
func (o *PostContentmanagementSharesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post contentmanagement shares o k response a status code equal to that given
func (o *PostContentmanagementSharesOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostContentmanagementSharesOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/shares][%d] postContentmanagementSharesOK  %+v", 200, o.Payload)
}

func (o *PostContentmanagementSharesOK) String() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/shares][%d] postContentmanagementSharesOK  %+v", 200, o.Payload)
}

func (o *PostContentmanagementSharesOK) GetPayload() *models.CreateShareResponse {
	return o.Payload
}

func (o *PostContentmanagementSharesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CreateShareResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementSharesBadRequest creates a PostContentmanagementSharesBadRequest with default headers values
func NewPostContentmanagementSharesBadRequest() *PostContentmanagementSharesBadRequest {
	return &PostContentmanagementSharesBadRequest{}
}

/*
PostContentmanagementSharesBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostContentmanagementSharesBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post contentmanagement shares bad request response has a 2xx status code
func (o *PostContentmanagementSharesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post contentmanagement shares bad request response has a 3xx status code
func (o *PostContentmanagementSharesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post contentmanagement shares bad request response has a 4xx status code
func (o *PostContentmanagementSharesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post contentmanagement shares bad request response has a 5xx status code
func (o *PostContentmanagementSharesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post contentmanagement shares bad request response a status code equal to that given
func (o *PostContentmanagementSharesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostContentmanagementSharesBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/shares][%d] postContentmanagementSharesBadRequest  %+v", 400, o.Payload)
}

func (o *PostContentmanagementSharesBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/shares][%d] postContentmanagementSharesBadRequest  %+v", 400, o.Payload)
}

func (o *PostContentmanagementSharesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementSharesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementSharesUnauthorized creates a PostContentmanagementSharesUnauthorized with default headers values
func NewPostContentmanagementSharesUnauthorized() *PostContentmanagementSharesUnauthorized {
	return &PostContentmanagementSharesUnauthorized{}
}

/*
PostContentmanagementSharesUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostContentmanagementSharesUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post contentmanagement shares unauthorized response has a 2xx status code
func (o *PostContentmanagementSharesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post contentmanagement shares unauthorized response has a 3xx status code
func (o *PostContentmanagementSharesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post contentmanagement shares unauthorized response has a 4xx status code
func (o *PostContentmanagementSharesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post contentmanagement shares unauthorized response has a 5xx status code
func (o *PostContentmanagementSharesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post contentmanagement shares unauthorized response a status code equal to that given
func (o *PostContentmanagementSharesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostContentmanagementSharesUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/shares][%d] postContentmanagementSharesUnauthorized  %+v", 401, o.Payload)
}

func (o *PostContentmanagementSharesUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/shares][%d] postContentmanagementSharesUnauthorized  %+v", 401, o.Payload)
}

func (o *PostContentmanagementSharesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementSharesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementSharesForbidden creates a PostContentmanagementSharesForbidden with default headers values
func NewPostContentmanagementSharesForbidden() *PostContentmanagementSharesForbidden {
	return &PostContentmanagementSharesForbidden{}
}

/*
PostContentmanagementSharesForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostContentmanagementSharesForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post contentmanagement shares forbidden response has a 2xx status code
func (o *PostContentmanagementSharesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post contentmanagement shares forbidden response has a 3xx status code
func (o *PostContentmanagementSharesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post contentmanagement shares forbidden response has a 4xx status code
func (o *PostContentmanagementSharesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post contentmanagement shares forbidden response has a 5xx status code
func (o *PostContentmanagementSharesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post contentmanagement shares forbidden response a status code equal to that given
func (o *PostContentmanagementSharesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostContentmanagementSharesForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/shares][%d] postContentmanagementSharesForbidden  %+v", 403, o.Payload)
}

func (o *PostContentmanagementSharesForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/shares][%d] postContentmanagementSharesForbidden  %+v", 403, o.Payload)
}

func (o *PostContentmanagementSharesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementSharesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementSharesNotFound creates a PostContentmanagementSharesNotFound with default headers values
func NewPostContentmanagementSharesNotFound() *PostContentmanagementSharesNotFound {
	return &PostContentmanagementSharesNotFound{}
}

/*
PostContentmanagementSharesNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostContentmanagementSharesNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post contentmanagement shares not found response has a 2xx status code
func (o *PostContentmanagementSharesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post contentmanagement shares not found response has a 3xx status code
func (o *PostContentmanagementSharesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post contentmanagement shares not found response has a 4xx status code
func (o *PostContentmanagementSharesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post contentmanagement shares not found response has a 5xx status code
func (o *PostContentmanagementSharesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post contentmanagement shares not found response a status code equal to that given
func (o *PostContentmanagementSharesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostContentmanagementSharesNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/shares][%d] postContentmanagementSharesNotFound  %+v", 404, o.Payload)
}

func (o *PostContentmanagementSharesNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/shares][%d] postContentmanagementSharesNotFound  %+v", 404, o.Payload)
}

func (o *PostContentmanagementSharesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementSharesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementSharesRequestTimeout creates a PostContentmanagementSharesRequestTimeout with default headers values
func NewPostContentmanagementSharesRequestTimeout() *PostContentmanagementSharesRequestTimeout {
	return &PostContentmanagementSharesRequestTimeout{}
}

/*
PostContentmanagementSharesRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostContentmanagementSharesRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post contentmanagement shares request timeout response has a 2xx status code
func (o *PostContentmanagementSharesRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post contentmanagement shares request timeout response has a 3xx status code
func (o *PostContentmanagementSharesRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post contentmanagement shares request timeout response has a 4xx status code
func (o *PostContentmanagementSharesRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post contentmanagement shares request timeout response has a 5xx status code
func (o *PostContentmanagementSharesRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post contentmanagement shares request timeout response a status code equal to that given
func (o *PostContentmanagementSharesRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostContentmanagementSharesRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/shares][%d] postContentmanagementSharesRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostContentmanagementSharesRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/shares][%d] postContentmanagementSharesRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostContentmanagementSharesRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementSharesRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementSharesRequestEntityTooLarge creates a PostContentmanagementSharesRequestEntityTooLarge with default headers values
func NewPostContentmanagementSharesRequestEntityTooLarge() *PostContentmanagementSharesRequestEntityTooLarge {
	return &PostContentmanagementSharesRequestEntityTooLarge{}
}

/*
PostContentmanagementSharesRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PostContentmanagementSharesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post contentmanagement shares request entity too large response has a 2xx status code
func (o *PostContentmanagementSharesRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post contentmanagement shares request entity too large response has a 3xx status code
func (o *PostContentmanagementSharesRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post contentmanagement shares request entity too large response has a 4xx status code
func (o *PostContentmanagementSharesRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post contentmanagement shares request entity too large response has a 5xx status code
func (o *PostContentmanagementSharesRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post contentmanagement shares request entity too large response a status code equal to that given
func (o *PostContentmanagementSharesRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostContentmanagementSharesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/shares][%d] postContentmanagementSharesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostContentmanagementSharesRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/shares][%d] postContentmanagementSharesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostContentmanagementSharesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementSharesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementSharesUnsupportedMediaType creates a PostContentmanagementSharesUnsupportedMediaType with default headers values
func NewPostContentmanagementSharesUnsupportedMediaType() *PostContentmanagementSharesUnsupportedMediaType {
	return &PostContentmanagementSharesUnsupportedMediaType{}
}

/*
PostContentmanagementSharesUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostContentmanagementSharesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post contentmanagement shares unsupported media type response has a 2xx status code
func (o *PostContentmanagementSharesUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post contentmanagement shares unsupported media type response has a 3xx status code
func (o *PostContentmanagementSharesUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post contentmanagement shares unsupported media type response has a 4xx status code
func (o *PostContentmanagementSharesUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post contentmanagement shares unsupported media type response has a 5xx status code
func (o *PostContentmanagementSharesUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post contentmanagement shares unsupported media type response a status code equal to that given
func (o *PostContentmanagementSharesUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostContentmanagementSharesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/shares][%d] postContentmanagementSharesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostContentmanagementSharesUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/shares][%d] postContentmanagementSharesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostContentmanagementSharesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementSharesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementSharesTooManyRequests creates a PostContentmanagementSharesTooManyRequests with default headers values
func NewPostContentmanagementSharesTooManyRequests() *PostContentmanagementSharesTooManyRequests {
	return &PostContentmanagementSharesTooManyRequests{}
}

/*
PostContentmanagementSharesTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostContentmanagementSharesTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post contentmanagement shares too many requests response has a 2xx status code
func (o *PostContentmanagementSharesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post contentmanagement shares too many requests response has a 3xx status code
func (o *PostContentmanagementSharesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post contentmanagement shares too many requests response has a 4xx status code
func (o *PostContentmanagementSharesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post contentmanagement shares too many requests response has a 5xx status code
func (o *PostContentmanagementSharesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post contentmanagement shares too many requests response a status code equal to that given
func (o *PostContentmanagementSharesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostContentmanagementSharesTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/shares][%d] postContentmanagementSharesTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostContentmanagementSharesTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/shares][%d] postContentmanagementSharesTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostContentmanagementSharesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementSharesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementSharesInternalServerError creates a PostContentmanagementSharesInternalServerError with default headers values
func NewPostContentmanagementSharesInternalServerError() *PostContentmanagementSharesInternalServerError {
	return &PostContentmanagementSharesInternalServerError{}
}

/*
PostContentmanagementSharesInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostContentmanagementSharesInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post contentmanagement shares internal server error response has a 2xx status code
func (o *PostContentmanagementSharesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post contentmanagement shares internal server error response has a 3xx status code
func (o *PostContentmanagementSharesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post contentmanagement shares internal server error response has a 4xx status code
func (o *PostContentmanagementSharesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post contentmanagement shares internal server error response has a 5xx status code
func (o *PostContentmanagementSharesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post contentmanagement shares internal server error response a status code equal to that given
func (o *PostContentmanagementSharesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostContentmanagementSharesInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/shares][%d] postContentmanagementSharesInternalServerError  %+v", 500, o.Payload)
}

func (o *PostContentmanagementSharesInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/shares][%d] postContentmanagementSharesInternalServerError  %+v", 500, o.Payload)
}

func (o *PostContentmanagementSharesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementSharesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementSharesServiceUnavailable creates a PostContentmanagementSharesServiceUnavailable with default headers values
func NewPostContentmanagementSharesServiceUnavailable() *PostContentmanagementSharesServiceUnavailable {
	return &PostContentmanagementSharesServiceUnavailable{}
}

/*
PostContentmanagementSharesServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostContentmanagementSharesServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post contentmanagement shares service unavailable response has a 2xx status code
func (o *PostContentmanagementSharesServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post contentmanagement shares service unavailable response has a 3xx status code
func (o *PostContentmanagementSharesServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post contentmanagement shares service unavailable response has a 4xx status code
func (o *PostContentmanagementSharesServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post contentmanagement shares service unavailable response has a 5xx status code
func (o *PostContentmanagementSharesServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post contentmanagement shares service unavailable response a status code equal to that given
func (o *PostContentmanagementSharesServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostContentmanagementSharesServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/shares][%d] postContentmanagementSharesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostContentmanagementSharesServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/shares][%d] postContentmanagementSharesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostContentmanagementSharesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementSharesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementSharesGatewayTimeout creates a PostContentmanagementSharesGatewayTimeout with default headers values
func NewPostContentmanagementSharesGatewayTimeout() *PostContentmanagementSharesGatewayTimeout {
	return &PostContentmanagementSharesGatewayTimeout{}
}

/*
PostContentmanagementSharesGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostContentmanagementSharesGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post contentmanagement shares gateway timeout response has a 2xx status code
func (o *PostContentmanagementSharesGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post contentmanagement shares gateway timeout response has a 3xx status code
func (o *PostContentmanagementSharesGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post contentmanagement shares gateway timeout response has a 4xx status code
func (o *PostContentmanagementSharesGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post contentmanagement shares gateway timeout response has a 5xx status code
func (o *PostContentmanagementSharesGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post contentmanagement shares gateway timeout response a status code equal to that given
func (o *PostContentmanagementSharesGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostContentmanagementSharesGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/shares][%d] postContentmanagementSharesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostContentmanagementSharesGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/shares][%d] postContentmanagementSharesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostContentmanagementSharesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementSharesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
