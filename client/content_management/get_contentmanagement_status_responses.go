// Code generated by go-swagger; DO NOT EDIT.

package content_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetContentmanagementStatusReader is a Reader for the GetContentmanagementStatus structure.
type GetContentmanagementStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetContentmanagementStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetContentmanagementStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetContentmanagementStatusBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetContentmanagementStatusUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetContentmanagementStatusForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetContentmanagementStatusNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetContentmanagementStatusRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetContentmanagementStatusUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetContentmanagementStatusTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetContentmanagementStatusInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetContentmanagementStatusServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetContentmanagementStatusGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetContentmanagementStatusOK creates a GetContentmanagementStatusOK with default headers values
func NewGetContentmanagementStatusOK() *GetContentmanagementStatusOK {
	return &GetContentmanagementStatusOK{}
}

/*GetContentmanagementStatusOK handles this case with default header values.

successful operation
*/
type GetContentmanagementStatusOK struct {
	Payload *models.CommandStatusEntityListing
}

func (o *GetContentmanagementStatusOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/status][%d] getContentmanagementStatusOK  %+v", 200, o.Payload)
}

func (o *GetContentmanagementStatusOK) GetPayload() *models.CommandStatusEntityListing {
	return o.Payload
}

func (o *GetContentmanagementStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommandStatusEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementStatusBadRequest creates a GetContentmanagementStatusBadRequest with default headers values
func NewGetContentmanagementStatusBadRequest() *GetContentmanagementStatusBadRequest {
	return &GetContentmanagementStatusBadRequest{}
}

/*GetContentmanagementStatusBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetContentmanagementStatusBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetContentmanagementStatusBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/status][%d] getContentmanagementStatusBadRequest  %+v", 400, o.Payload)
}

func (o *GetContentmanagementStatusBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementStatusBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementStatusUnauthorized creates a GetContentmanagementStatusUnauthorized with default headers values
func NewGetContentmanagementStatusUnauthorized() *GetContentmanagementStatusUnauthorized {
	return &GetContentmanagementStatusUnauthorized{}
}

/*GetContentmanagementStatusUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetContentmanagementStatusUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetContentmanagementStatusUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/status][%d] getContentmanagementStatusUnauthorized  %+v", 401, o.Payload)
}

func (o *GetContentmanagementStatusUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementStatusUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementStatusForbidden creates a GetContentmanagementStatusForbidden with default headers values
func NewGetContentmanagementStatusForbidden() *GetContentmanagementStatusForbidden {
	return &GetContentmanagementStatusForbidden{}
}

/*GetContentmanagementStatusForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetContentmanagementStatusForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetContentmanagementStatusForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/status][%d] getContentmanagementStatusForbidden  %+v", 403, o.Payload)
}

func (o *GetContentmanagementStatusForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementStatusForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementStatusNotFound creates a GetContentmanagementStatusNotFound with default headers values
func NewGetContentmanagementStatusNotFound() *GetContentmanagementStatusNotFound {
	return &GetContentmanagementStatusNotFound{}
}

/*GetContentmanagementStatusNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetContentmanagementStatusNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetContentmanagementStatusNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/status][%d] getContentmanagementStatusNotFound  %+v", 404, o.Payload)
}

func (o *GetContentmanagementStatusNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementStatusNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementStatusRequestEntityTooLarge creates a GetContentmanagementStatusRequestEntityTooLarge with default headers values
func NewGetContentmanagementStatusRequestEntityTooLarge() *GetContentmanagementStatusRequestEntityTooLarge {
	return &GetContentmanagementStatusRequestEntityTooLarge{}
}

/*GetContentmanagementStatusRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetContentmanagementStatusRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetContentmanagementStatusRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/status][%d] getContentmanagementStatusRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetContentmanagementStatusRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementStatusRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementStatusUnsupportedMediaType creates a GetContentmanagementStatusUnsupportedMediaType with default headers values
func NewGetContentmanagementStatusUnsupportedMediaType() *GetContentmanagementStatusUnsupportedMediaType {
	return &GetContentmanagementStatusUnsupportedMediaType{}
}

/*GetContentmanagementStatusUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetContentmanagementStatusUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetContentmanagementStatusUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/status][%d] getContentmanagementStatusUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetContentmanagementStatusUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementStatusUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementStatusTooManyRequests creates a GetContentmanagementStatusTooManyRequests with default headers values
func NewGetContentmanagementStatusTooManyRequests() *GetContentmanagementStatusTooManyRequests {
	return &GetContentmanagementStatusTooManyRequests{}
}

/*GetContentmanagementStatusTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type GetContentmanagementStatusTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetContentmanagementStatusTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/status][%d] getContentmanagementStatusTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetContentmanagementStatusTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementStatusTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementStatusInternalServerError creates a GetContentmanagementStatusInternalServerError with default headers values
func NewGetContentmanagementStatusInternalServerError() *GetContentmanagementStatusInternalServerError {
	return &GetContentmanagementStatusInternalServerError{}
}

/*GetContentmanagementStatusInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetContentmanagementStatusInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetContentmanagementStatusInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/status][%d] getContentmanagementStatusInternalServerError  %+v", 500, o.Payload)
}

func (o *GetContentmanagementStatusInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementStatusInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementStatusServiceUnavailable creates a GetContentmanagementStatusServiceUnavailable with default headers values
func NewGetContentmanagementStatusServiceUnavailable() *GetContentmanagementStatusServiceUnavailable {
	return &GetContentmanagementStatusServiceUnavailable{}
}

/*GetContentmanagementStatusServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetContentmanagementStatusServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetContentmanagementStatusServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/status][%d] getContentmanagementStatusServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetContentmanagementStatusServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementStatusServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementStatusGatewayTimeout creates a GetContentmanagementStatusGatewayTimeout with default headers values
func NewGetContentmanagementStatusGatewayTimeout() *GetContentmanagementStatusGatewayTimeout {
	return &GetContentmanagementStatusGatewayTimeout{}
}

/*GetContentmanagementStatusGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetContentmanagementStatusGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetContentmanagementStatusGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/status][%d] getContentmanagementStatusGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetContentmanagementStatusGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementStatusGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
