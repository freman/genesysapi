// Code generated by go-swagger; DO NOT EDIT.

package content_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostContentmanagementQueryReader is a Reader for the PostContentmanagementQuery structure.
type PostContentmanagementQueryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostContentmanagementQueryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostContentmanagementQueryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostContentmanagementQueryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostContentmanagementQueryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostContentmanagementQueryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostContentmanagementQueryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostContentmanagementQueryRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostContentmanagementQueryRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostContentmanagementQueryUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostContentmanagementQueryTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostContentmanagementQueryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostContentmanagementQueryServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostContentmanagementQueryGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostContentmanagementQueryOK creates a PostContentmanagementQueryOK with default headers values
func NewPostContentmanagementQueryOK() *PostContentmanagementQueryOK {
	return &PostContentmanagementQueryOK{}
}

/*
PostContentmanagementQueryOK describes a response with status code 200, with default header values.

successful operation
*/
type PostContentmanagementQueryOK struct {
	Payload *models.QueryResults
}

// IsSuccess returns true when this post contentmanagement query o k response has a 2xx status code
func (o *PostContentmanagementQueryOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post contentmanagement query o k response has a 3xx status code
func (o *PostContentmanagementQueryOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post contentmanagement query o k response has a 4xx status code
func (o *PostContentmanagementQueryOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post contentmanagement query o k response has a 5xx status code
func (o *PostContentmanagementQueryOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post contentmanagement query o k response a status code equal to that given
func (o *PostContentmanagementQueryOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostContentmanagementQueryOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/query][%d] postContentmanagementQueryOK  %+v", 200, o.Payload)
}

func (o *PostContentmanagementQueryOK) String() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/query][%d] postContentmanagementQueryOK  %+v", 200, o.Payload)
}

func (o *PostContentmanagementQueryOK) GetPayload() *models.QueryResults {
	return o.Payload
}

func (o *PostContentmanagementQueryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.QueryResults)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementQueryBadRequest creates a PostContentmanagementQueryBadRequest with default headers values
func NewPostContentmanagementQueryBadRequest() *PostContentmanagementQueryBadRequest {
	return &PostContentmanagementQueryBadRequest{}
}

/*
PostContentmanagementQueryBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostContentmanagementQueryBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post contentmanagement query bad request response has a 2xx status code
func (o *PostContentmanagementQueryBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post contentmanagement query bad request response has a 3xx status code
func (o *PostContentmanagementQueryBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post contentmanagement query bad request response has a 4xx status code
func (o *PostContentmanagementQueryBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post contentmanagement query bad request response has a 5xx status code
func (o *PostContentmanagementQueryBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post contentmanagement query bad request response a status code equal to that given
func (o *PostContentmanagementQueryBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostContentmanagementQueryBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/query][%d] postContentmanagementQueryBadRequest  %+v", 400, o.Payload)
}

func (o *PostContentmanagementQueryBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/query][%d] postContentmanagementQueryBadRequest  %+v", 400, o.Payload)
}

func (o *PostContentmanagementQueryBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementQueryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementQueryUnauthorized creates a PostContentmanagementQueryUnauthorized with default headers values
func NewPostContentmanagementQueryUnauthorized() *PostContentmanagementQueryUnauthorized {
	return &PostContentmanagementQueryUnauthorized{}
}

/*
PostContentmanagementQueryUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostContentmanagementQueryUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post contentmanagement query unauthorized response has a 2xx status code
func (o *PostContentmanagementQueryUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post contentmanagement query unauthorized response has a 3xx status code
func (o *PostContentmanagementQueryUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post contentmanagement query unauthorized response has a 4xx status code
func (o *PostContentmanagementQueryUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post contentmanagement query unauthorized response has a 5xx status code
func (o *PostContentmanagementQueryUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post contentmanagement query unauthorized response a status code equal to that given
func (o *PostContentmanagementQueryUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostContentmanagementQueryUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/query][%d] postContentmanagementQueryUnauthorized  %+v", 401, o.Payload)
}

func (o *PostContentmanagementQueryUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/query][%d] postContentmanagementQueryUnauthorized  %+v", 401, o.Payload)
}

func (o *PostContentmanagementQueryUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementQueryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementQueryForbidden creates a PostContentmanagementQueryForbidden with default headers values
func NewPostContentmanagementQueryForbidden() *PostContentmanagementQueryForbidden {
	return &PostContentmanagementQueryForbidden{}
}

/*
PostContentmanagementQueryForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostContentmanagementQueryForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post contentmanagement query forbidden response has a 2xx status code
func (o *PostContentmanagementQueryForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post contentmanagement query forbidden response has a 3xx status code
func (o *PostContentmanagementQueryForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post contentmanagement query forbidden response has a 4xx status code
func (o *PostContentmanagementQueryForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post contentmanagement query forbidden response has a 5xx status code
func (o *PostContentmanagementQueryForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post contentmanagement query forbidden response a status code equal to that given
func (o *PostContentmanagementQueryForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostContentmanagementQueryForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/query][%d] postContentmanagementQueryForbidden  %+v", 403, o.Payload)
}

func (o *PostContentmanagementQueryForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/query][%d] postContentmanagementQueryForbidden  %+v", 403, o.Payload)
}

func (o *PostContentmanagementQueryForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementQueryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementQueryNotFound creates a PostContentmanagementQueryNotFound with default headers values
func NewPostContentmanagementQueryNotFound() *PostContentmanagementQueryNotFound {
	return &PostContentmanagementQueryNotFound{}
}

/*
PostContentmanagementQueryNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostContentmanagementQueryNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post contentmanagement query not found response has a 2xx status code
func (o *PostContentmanagementQueryNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post contentmanagement query not found response has a 3xx status code
func (o *PostContentmanagementQueryNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post contentmanagement query not found response has a 4xx status code
func (o *PostContentmanagementQueryNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post contentmanagement query not found response has a 5xx status code
func (o *PostContentmanagementQueryNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post contentmanagement query not found response a status code equal to that given
func (o *PostContentmanagementQueryNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostContentmanagementQueryNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/query][%d] postContentmanagementQueryNotFound  %+v", 404, o.Payload)
}

func (o *PostContentmanagementQueryNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/query][%d] postContentmanagementQueryNotFound  %+v", 404, o.Payload)
}

func (o *PostContentmanagementQueryNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementQueryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementQueryRequestTimeout creates a PostContentmanagementQueryRequestTimeout with default headers values
func NewPostContentmanagementQueryRequestTimeout() *PostContentmanagementQueryRequestTimeout {
	return &PostContentmanagementQueryRequestTimeout{}
}

/*
PostContentmanagementQueryRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostContentmanagementQueryRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post contentmanagement query request timeout response has a 2xx status code
func (o *PostContentmanagementQueryRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post contentmanagement query request timeout response has a 3xx status code
func (o *PostContentmanagementQueryRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post contentmanagement query request timeout response has a 4xx status code
func (o *PostContentmanagementQueryRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post contentmanagement query request timeout response has a 5xx status code
func (o *PostContentmanagementQueryRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post contentmanagement query request timeout response a status code equal to that given
func (o *PostContentmanagementQueryRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostContentmanagementQueryRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/query][%d] postContentmanagementQueryRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostContentmanagementQueryRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/query][%d] postContentmanagementQueryRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostContentmanagementQueryRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementQueryRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementQueryRequestEntityTooLarge creates a PostContentmanagementQueryRequestEntityTooLarge with default headers values
func NewPostContentmanagementQueryRequestEntityTooLarge() *PostContentmanagementQueryRequestEntityTooLarge {
	return &PostContentmanagementQueryRequestEntityTooLarge{}
}

/*
PostContentmanagementQueryRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PostContentmanagementQueryRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post contentmanagement query request entity too large response has a 2xx status code
func (o *PostContentmanagementQueryRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post contentmanagement query request entity too large response has a 3xx status code
func (o *PostContentmanagementQueryRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post contentmanagement query request entity too large response has a 4xx status code
func (o *PostContentmanagementQueryRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post contentmanagement query request entity too large response has a 5xx status code
func (o *PostContentmanagementQueryRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post contentmanagement query request entity too large response a status code equal to that given
func (o *PostContentmanagementQueryRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostContentmanagementQueryRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/query][%d] postContentmanagementQueryRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostContentmanagementQueryRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/query][%d] postContentmanagementQueryRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostContentmanagementQueryRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementQueryRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementQueryUnsupportedMediaType creates a PostContentmanagementQueryUnsupportedMediaType with default headers values
func NewPostContentmanagementQueryUnsupportedMediaType() *PostContentmanagementQueryUnsupportedMediaType {
	return &PostContentmanagementQueryUnsupportedMediaType{}
}

/*
PostContentmanagementQueryUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostContentmanagementQueryUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post contentmanagement query unsupported media type response has a 2xx status code
func (o *PostContentmanagementQueryUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post contentmanagement query unsupported media type response has a 3xx status code
func (o *PostContentmanagementQueryUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post contentmanagement query unsupported media type response has a 4xx status code
func (o *PostContentmanagementQueryUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post contentmanagement query unsupported media type response has a 5xx status code
func (o *PostContentmanagementQueryUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post contentmanagement query unsupported media type response a status code equal to that given
func (o *PostContentmanagementQueryUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostContentmanagementQueryUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/query][%d] postContentmanagementQueryUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostContentmanagementQueryUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/query][%d] postContentmanagementQueryUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostContentmanagementQueryUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementQueryUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementQueryTooManyRequests creates a PostContentmanagementQueryTooManyRequests with default headers values
func NewPostContentmanagementQueryTooManyRequests() *PostContentmanagementQueryTooManyRequests {
	return &PostContentmanagementQueryTooManyRequests{}
}

/*
PostContentmanagementQueryTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostContentmanagementQueryTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post contentmanagement query too many requests response has a 2xx status code
func (o *PostContentmanagementQueryTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post contentmanagement query too many requests response has a 3xx status code
func (o *PostContentmanagementQueryTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post contentmanagement query too many requests response has a 4xx status code
func (o *PostContentmanagementQueryTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post contentmanagement query too many requests response has a 5xx status code
func (o *PostContentmanagementQueryTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post contentmanagement query too many requests response a status code equal to that given
func (o *PostContentmanagementQueryTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostContentmanagementQueryTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/query][%d] postContentmanagementQueryTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostContentmanagementQueryTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/query][%d] postContentmanagementQueryTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostContentmanagementQueryTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementQueryTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementQueryInternalServerError creates a PostContentmanagementQueryInternalServerError with default headers values
func NewPostContentmanagementQueryInternalServerError() *PostContentmanagementQueryInternalServerError {
	return &PostContentmanagementQueryInternalServerError{}
}

/*
PostContentmanagementQueryInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostContentmanagementQueryInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post contentmanagement query internal server error response has a 2xx status code
func (o *PostContentmanagementQueryInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post contentmanagement query internal server error response has a 3xx status code
func (o *PostContentmanagementQueryInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post contentmanagement query internal server error response has a 4xx status code
func (o *PostContentmanagementQueryInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post contentmanagement query internal server error response has a 5xx status code
func (o *PostContentmanagementQueryInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post contentmanagement query internal server error response a status code equal to that given
func (o *PostContentmanagementQueryInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostContentmanagementQueryInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/query][%d] postContentmanagementQueryInternalServerError  %+v", 500, o.Payload)
}

func (o *PostContentmanagementQueryInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/query][%d] postContentmanagementQueryInternalServerError  %+v", 500, o.Payload)
}

func (o *PostContentmanagementQueryInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementQueryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementQueryServiceUnavailable creates a PostContentmanagementQueryServiceUnavailable with default headers values
func NewPostContentmanagementQueryServiceUnavailable() *PostContentmanagementQueryServiceUnavailable {
	return &PostContentmanagementQueryServiceUnavailable{}
}

/*
PostContentmanagementQueryServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostContentmanagementQueryServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post contentmanagement query service unavailable response has a 2xx status code
func (o *PostContentmanagementQueryServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post contentmanagement query service unavailable response has a 3xx status code
func (o *PostContentmanagementQueryServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post contentmanagement query service unavailable response has a 4xx status code
func (o *PostContentmanagementQueryServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post contentmanagement query service unavailable response has a 5xx status code
func (o *PostContentmanagementQueryServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post contentmanagement query service unavailable response a status code equal to that given
func (o *PostContentmanagementQueryServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostContentmanagementQueryServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/query][%d] postContentmanagementQueryServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostContentmanagementQueryServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/query][%d] postContentmanagementQueryServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostContentmanagementQueryServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementQueryServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementQueryGatewayTimeout creates a PostContentmanagementQueryGatewayTimeout with default headers values
func NewPostContentmanagementQueryGatewayTimeout() *PostContentmanagementQueryGatewayTimeout {
	return &PostContentmanagementQueryGatewayTimeout{}
}

/*
PostContentmanagementQueryGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostContentmanagementQueryGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post contentmanagement query gateway timeout response has a 2xx status code
func (o *PostContentmanagementQueryGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post contentmanagement query gateway timeout response has a 3xx status code
func (o *PostContentmanagementQueryGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post contentmanagement query gateway timeout response has a 4xx status code
func (o *PostContentmanagementQueryGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post contentmanagement query gateway timeout response has a 5xx status code
func (o *PostContentmanagementQueryGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post contentmanagement query gateway timeout response a status code equal to that given
func (o *PostContentmanagementQueryGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostContentmanagementQueryGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/query][%d] postContentmanagementQueryGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostContentmanagementQueryGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/query][%d] postContentmanagementQueryGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostContentmanagementQueryGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementQueryGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
