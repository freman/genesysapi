// Code generated by go-swagger; DO NOT EDIT.

package content_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetContentmanagementWorkspaceParams creates a new GetContentmanagementWorkspaceParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetContentmanagementWorkspaceParams() *GetContentmanagementWorkspaceParams {
	return &GetContentmanagementWorkspaceParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetContentmanagementWorkspaceParamsWithTimeout creates a new GetContentmanagementWorkspaceParams object
// with the ability to set a timeout on a request.
func NewGetContentmanagementWorkspaceParamsWithTimeout(timeout time.Duration) *GetContentmanagementWorkspaceParams {
	return &GetContentmanagementWorkspaceParams{
		timeout: timeout,
	}
}

// NewGetContentmanagementWorkspaceParamsWithContext creates a new GetContentmanagementWorkspaceParams object
// with the ability to set a context for a request.
func NewGetContentmanagementWorkspaceParamsWithContext(ctx context.Context) *GetContentmanagementWorkspaceParams {
	return &GetContentmanagementWorkspaceParams{
		Context: ctx,
	}
}

// NewGetContentmanagementWorkspaceParamsWithHTTPClient creates a new GetContentmanagementWorkspaceParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetContentmanagementWorkspaceParamsWithHTTPClient(client *http.Client) *GetContentmanagementWorkspaceParams {
	return &GetContentmanagementWorkspaceParams{
		HTTPClient: client,
	}
}

/*
GetContentmanagementWorkspaceParams contains all the parameters to send to the API endpoint

	for the get contentmanagement workspace operation.

	Typically these are written to a http.Request.
*/
type GetContentmanagementWorkspaceParams struct {

	/* Expand.

	   Which fields, if any, to expand.
	*/
	Expand []string

	/* WorkspaceID.

	   Workspace ID
	*/
	WorkspaceID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get contentmanagement workspace params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetContentmanagementWorkspaceParams) WithDefaults() *GetContentmanagementWorkspaceParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get contentmanagement workspace params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetContentmanagementWorkspaceParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get contentmanagement workspace params
func (o *GetContentmanagementWorkspaceParams) WithTimeout(timeout time.Duration) *GetContentmanagementWorkspaceParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get contentmanagement workspace params
func (o *GetContentmanagementWorkspaceParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get contentmanagement workspace params
func (o *GetContentmanagementWorkspaceParams) WithContext(ctx context.Context) *GetContentmanagementWorkspaceParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get contentmanagement workspace params
func (o *GetContentmanagementWorkspaceParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get contentmanagement workspace params
func (o *GetContentmanagementWorkspaceParams) WithHTTPClient(client *http.Client) *GetContentmanagementWorkspaceParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get contentmanagement workspace params
func (o *GetContentmanagementWorkspaceParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithExpand adds the expand to the get contentmanagement workspace params
func (o *GetContentmanagementWorkspaceParams) WithExpand(expand []string) *GetContentmanagementWorkspaceParams {
	o.SetExpand(expand)
	return o
}

// SetExpand adds the expand to the get contentmanagement workspace params
func (o *GetContentmanagementWorkspaceParams) SetExpand(expand []string) {
	o.Expand = expand
}

// WithWorkspaceID adds the workspaceID to the get contentmanagement workspace params
func (o *GetContentmanagementWorkspaceParams) WithWorkspaceID(workspaceID string) *GetContentmanagementWorkspaceParams {
	o.SetWorkspaceID(workspaceID)
	return o
}

// SetWorkspaceID adds the workspaceId to the get contentmanagement workspace params
func (o *GetContentmanagementWorkspaceParams) SetWorkspaceID(workspaceID string) {
	o.WorkspaceID = workspaceID
}

// WriteToRequest writes these params to a swagger request
func (o *GetContentmanagementWorkspaceParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Expand != nil {

		// binding items for expand
		joinedExpand := o.bindParamExpand(reg)

		// query array param expand
		if err := r.SetQueryParam("expand", joinedExpand...); err != nil {
			return err
		}
	}

	// path param workspaceId
	if err := r.SetPathParam("workspaceId", o.WorkspaceID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetContentmanagementWorkspace binds the parameter expand
func (o *GetContentmanagementWorkspaceParams) bindParamExpand(formats strfmt.Registry) []string {
	expandIR := o.Expand

	var expandIC []string
	for _, expandIIR := range expandIR { // explode []string

		expandIIV := expandIIR // string as string
		expandIC = append(expandIC, expandIIV)
	}

	// items.CollectionFormat: "multi"
	expandIS := swag.JoinByFormat(expandIC, "multi")

	return expandIS
}
