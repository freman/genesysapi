// Code generated by go-swagger; DO NOT EDIT.

package content_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostContentmanagementDocumentReader is a Reader for the PostContentmanagementDocument structure.
type PostContentmanagementDocumentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostContentmanagementDocumentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostContentmanagementDocumentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostContentmanagementDocumentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostContentmanagementDocumentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostContentmanagementDocumentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostContentmanagementDocumentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostContentmanagementDocumentRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPostContentmanagementDocumentConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostContentmanagementDocumentRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostContentmanagementDocumentUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 423:
		result := NewPostContentmanagementDocumentLocked()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostContentmanagementDocumentTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostContentmanagementDocumentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostContentmanagementDocumentServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostContentmanagementDocumentGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostContentmanagementDocumentOK creates a PostContentmanagementDocumentOK with default headers values
func NewPostContentmanagementDocumentOK() *PostContentmanagementDocumentOK {
	return &PostContentmanagementDocumentOK{}
}

/*PostContentmanagementDocumentOK handles this case with default header values.

successful operation
*/
type PostContentmanagementDocumentOK struct {
	Payload *models.Document
}

func (o *PostContentmanagementDocumentOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/documents/{documentId}][%d] postContentmanagementDocumentOK  %+v", 200, o.Payload)
}

func (o *PostContentmanagementDocumentOK) GetPayload() *models.Document {
	return o.Payload
}

func (o *PostContentmanagementDocumentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Document)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementDocumentBadRequest creates a PostContentmanagementDocumentBadRequest with default headers values
func NewPostContentmanagementDocumentBadRequest() *PostContentmanagementDocumentBadRequest {
	return &PostContentmanagementDocumentBadRequest{}
}

/*PostContentmanagementDocumentBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostContentmanagementDocumentBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PostContentmanagementDocumentBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/documents/{documentId}][%d] postContentmanagementDocumentBadRequest  %+v", 400, o.Payload)
}

func (o *PostContentmanagementDocumentBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementDocumentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementDocumentUnauthorized creates a PostContentmanagementDocumentUnauthorized with default headers values
func NewPostContentmanagementDocumentUnauthorized() *PostContentmanagementDocumentUnauthorized {
	return &PostContentmanagementDocumentUnauthorized{}
}

/*PostContentmanagementDocumentUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PostContentmanagementDocumentUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PostContentmanagementDocumentUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/documents/{documentId}][%d] postContentmanagementDocumentUnauthorized  %+v", 401, o.Payload)
}

func (o *PostContentmanagementDocumentUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementDocumentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementDocumentForbidden creates a PostContentmanagementDocumentForbidden with default headers values
func NewPostContentmanagementDocumentForbidden() *PostContentmanagementDocumentForbidden {
	return &PostContentmanagementDocumentForbidden{}
}

/*PostContentmanagementDocumentForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PostContentmanagementDocumentForbidden struct {
	Payload *models.ErrorBody
}

func (o *PostContentmanagementDocumentForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/documents/{documentId}][%d] postContentmanagementDocumentForbidden  %+v", 403, o.Payload)
}

func (o *PostContentmanagementDocumentForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementDocumentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementDocumentNotFound creates a PostContentmanagementDocumentNotFound with default headers values
func NewPostContentmanagementDocumentNotFound() *PostContentmanagementDocumentNotFound {
	return &PostContentmanagementDocumentNotFound{}
}

/*PostContentmanagementDocumentNotFound handles this case with default header values.

The requested resource was not found.
*/
type PostContentmanagementDocumentNotFound struct {
	Payload *models.ErrorBody
}

func (o *PostContentmanagementDocumentNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/documents/{documentId}][%d] postContentmanagementDocumentNotFound  %+v", 404, o.Payload)
}

func (o *PostContentmanagementDocumentNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementDocumentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementDocumentRequestTimeout creates a PostContentmanagementDocumentRequestTimeout with default headers values
func NewPostContentmanagementDocumentRequestTimeout() *PostContentmanagementDocumentRequestTimeout {
	return &PostContentmanagementDocumentRequestTimeout{}
}

/*PostContentmanagementDocumentRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostContentmanagementDocumentRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostContentmanagementDocumentRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/documents/{documentId}][%d] postContentmanagementDocumentRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostContentmanagementDocumentRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementDocumentRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementDocumentConflict creates a PostContentmanagementDocumentConflict with default headers values
func NewPostContentmanagementDocumentConflict() *PostContentmanagementDocumentConflict {
	return &PostContentmanagementDocumentConflict{}
}

/*PostContentmanagementDocumentConflict handles this case with default header values.

Resource conflict - Unexpected changeNumber was provided
*/
type PostContentmanagementDocumentConflict struct {
}

func (o *PostContentmanagementDocumentConflict) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/documents/{documentId}][%d] postContentmanagementDocumentConflict ", 409)
}

func (o *PostContentmanagementDocumentConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostContentmanagementDocumentRequestEntityTooLarge creates a PostContentmanagementDocumentRequestEntityTooLarge with default headers values
func NewPostContentmanagementDocumentRequestEntityTooLarge() *PostContentmanagementDocumentRequestEntityTooLarge {
	return &PostContentmanagementDocumentRequestEntityTooLarge{}
}

/*PostContentmanagementDocumentRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PostContentmanagementDocumentRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PostContentmanagementDocumentRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/documents/{documentId}][%d] postContentmanagementDocumentRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostContentmanagementDocumentRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementDocumentRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementDocumentUnsupportedMediaType creates a PostContentmanagementDocumentUnsupportedMediaType with default headers values
func NewPostContentmanagementDocumentUnsupportedMediaType() *PostContentmanagementDocumentUnsupportedMediaType {
	return &PostContentmanagementDocumentUnsupportedMediaType{}
}

/*PostContentmanagementDocumentUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostContentmanagementDocumentUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PostContentmanagementDocumentUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/documents/{documentId}][%d] postContentmanagementDocumentUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostContentmanagementDocumentUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementDocumentUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementDocumentLocked creates a PostContentmanagementDocumentLocked with default headers values
func NewPostContentmanagementDocumentLocked() *PostContentmanagementDocumentLocked {
	return &PostContentmanagementDocumentLocked{}
}

/*PostContentmanagementDocumentLocked handles this case with default header values.

Locked - The document is locked by another operation
*/
type PostContentmanagementDocumentLocked struct {
}

func (o *PostContentmanagementDocumentLocked) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/documents/{documentId}][%d] postContentmanagementDocumentLocked ", 423)
}

func (o *PostContentmanagementDocumentLocked) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostContentmanagementDocumentTooManyRequests creates a PostContentmanagementDocumentTooManyRequests with default headers values
func NewPostContentmanagementDocumentTooManyRequests() *PostContentmanagementDocumentTooManyRequests {
	return &PostContentmanagementDocumentTooManyRequests{}
}

/*PostContentmanagementDocumentTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostContentmanagementDocumentTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PostContentmanagementDocumentTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/documents/{documentId}][%d] postContentmanagementDocumentTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostContentmanagementDocumentTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementDocumentTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementDocumentInternalServerError creates a PostContentmanagementDocumentInternalServerError with default headers values
func NewPostContentmanagementDocumentInternalServerError() *PostContentmanagementDocumentInternalServerError {
	return &PostContentmanagementDocumentInternalServerError{}
}

/*PostContentmanagementDocumentInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostContentmanagementDocumentInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PostContentmanagementDocumentInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/documents/{documentId}][%d] postContentmanagementDocumentInternalServerError  %+v", 500, o.Payload)
}

func (o *PostContentmanagementDocumentInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementDocumentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementDocumentServiceUnavailable creates a PostContentmanagementDocumentServiceUnavailable with default headers values
func NewPostContentmanagementDocumentServiceUnavailable() *PostContentmanagementDocumentServiceUnavailable {
	return &PostContentmanagementDocumentServiceUnavailable{}
}

/*PostContentmanagementDocumentServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostContentmanagementDocumentServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PostContentmanagementDocumentServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/documents/{documentId}][%d] postContentmanagementDocumentServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostContentmanagementDocumentServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementDocumentServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContentmanagementDocumentGatewayTimeout creates a PostContentmanagementDocumentGatewayTimeout with default headers values
func NewPostContentmanagementDocumentGatewayTimeout() *PostContentmanagementDocumentGatewayTimeout {
	return &PostContentmanagementDocumentGatewayTimeout{}
}

/*PostContentmanagementDocumentGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PostContentmanagementDocumentGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostContentmanagementDocumentGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/contentmanagement/documents/{documentId}][%d] postContentmanagementDocumentGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostContentmanagementDocumentGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostContentmanagementDocumentGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
