// Code generated by go-swagger; DO NOT EDIT.

package content_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetContentmanagementDocumentReader is a Reader for the GetContentmanagementDocument structure.
type GetContentmanagementDocumentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetContentmanagementDocumentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetContentmanagementDocumentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetContentmanagementDocumentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetContentmanagementDocumentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetContentmanagementDocumentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetContentmanagementDocumentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetContentmanagementDocumentRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetContentmanagementDocumentRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetContentmanagementDocumentUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetContentmanagementDocumentTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetContentmanagementDocumentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetContentmanagementDocumentServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetContentmanagementDocumentGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetContentmanagementDocumentOK creates a GetContentmanagementDocumentOK with default headers values
func NewGetContentmanagementDocumentOK() *GetContentmanagementDocumentOK {
	return &GetContentmanagementDocumentOK{}
}

/*
GetContentmanagementDocumentOK describes a response with status code 200, with default header values.

successful operation
*/
type GetContentmanagementDocumentOK struct {
	Payload *models.Document
}

// IsSuccess returns true when this get contentmanagement document o k response has a 2xx status code
func (o *GetContentmanagementDocumentOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get contentmanagement document o k response has a 3xx status code
func (o *GetContentmanagementDocumentOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement document o k response has a 4xx status code
func (o *GetContentmanagementDocumentOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get contentmanagement document o k response has a 5xx status code
func (o *GetContentmanagementDocumentOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get contentmanagement document o k response a status code equal to that given
func (o *GetContentmanagementDocumentOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetContentmanagementDocumentOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/documents/{documentId}][%d] getContentmanagementDocumentOK  %+v", 200, o.Payload)
}

func (o *GetContentmanagementDocumentOK) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/documents/{documentId}][%d] getContentmanagementDocumentOK  %+v", 200, o.Payload)
}

func (o *GetContentmanagementDocumentOK) GetPayload() *models.Document {
	return o.Payload
}

func (o *GetContentmanagementDocumentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Document)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementDocumentBadRequest creates a GetContentmanagementDocumentBadRequest with default headers values
func NewGetContentmanagementDocumentBadRequest() *GetContentmanagementDocumentBadRequest {
	return &GetContentmanagementDocumentBadRequest{}
}

/*
GetContentmanagementDocumentBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetContentmanagementDocumentBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement document bad request response has a 2xx status code
func (o *GetContentmanagementDocumentBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement document bad request response has a 3xx status code
func (o *GetContentmanagementDocumentBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement document bad request response has a 4xx status code
func (o *GetContentmanagementDocumentBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get contentmanagement document bad request response has a 5xx status code
func (o *GetContentmanagementDocumentBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get contentmanagement document bad request response a status code equal to that given
func (o *GetContentmanagementDocumentBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetContentmanagementDocumentBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/documents/{documentId}][%d] getContentmanagementDocumentBadRequest  %+v", 400, o.Payload)
}

func (o *GetContentmanagementDocumentBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/documents/{documentId}][%d] getContentmanagementDocumentBadRequest  %+v", 400, o.Payload)
}

func (o *GetContentmanagementDocumentBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementDocumentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementDocumentUnauthorized creates a GetContentmanagementDocumentUnauthorized with default headers values
func NewGetContentmanagementDocumentUnauthorized() *GetContentmanagementDocumentUnauthorized {
	return &GetContentmanagementDocumentUnauthorized{}
}

/*
GetContentmanagementDocumentUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetContentmanagementDocumentUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement document unauthorized response has a 2xx status code
func (o *GetContentmanagementDocumentUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement document unauthorized response has a 3xx status code
func (o *GetContentmanagementDocumentUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement document unauthorized response has a 4xx status code
func (o *GetContentmanagementDocumentUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get contentmanagement document unauthorized response has a 5xx status code
func (o *GetContentmanagementDocumentUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get contentmanagement document unauthorized response a status code equal to that given
func (o *GetContentmanagementDocumentUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetContentmanagementDocumentUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/documents/{documentId}][%d] getContentmanagementDocumentUnauthorized  %+v", 401, o.Payload)
}

func (o *GetContentmanagementDocumentUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/documents/{documentId}][%d] getContentmanagementDocumentUnauthorized  %+v", 401, o.Payload)
}

func (o *GetContentmanagementDocumentUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementDocumentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementDocumentForbidden creates a GetContentmanagementDocumentForbidden with default headers values
func NewGetContentmanagementDocumentForbidden() *GetContentmanagementDocumentForbidden {
	return &GetContentmanagementDocumentForbidden{}
}

/*
GetContentmanagementDocumentForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetContentmanagementDocumentForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement document forbidden response has a 2xx status code
func (o *GetContentmanagementDocumentForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement document forbidden response has a 3xx status code
func (o *GetContentmanagementDocumentForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement document forbidden response has a 4xx status code
func (o *GetContentmanagementDocumentForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get contentmanagement document forbidden response has a 5xx status code
func (o *GetContentmanagementDocumentForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get contentmanagement document forbidden response a status code equal to that given
func (o *GetContentmanagementDocumentForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetContentmanagementDocumentForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/documents/{documentId}][%d] getContentmanagementDocumentForbidden  %+v", 403, o.Payload)
}

func (o *GetContentmanagementDocumentForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/documents/{documentId}][%d] getContentmanagementDocumentForbidden  %+v", 403, o.Payload)
}

func (o *GetContentmanagementDocumentForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementDocumentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementDocumentNotFound creates a GetContentmanagementDocumentNotFound with default headers values
func NewGetContentmanagementDocumentNotFound() *GetContentmanagementDocumentNotFound {
	return &GetContentmanagementDocumentNotFound{}
}

/*
GetContentmanagementDocumentNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetContentmanagementDocumentNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement document not found response has a 2xx status code
func (o *GetContentmanagementDocumentNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement document not found response has a 3xx status code
func (o *GetContentmanagementDocumentNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement document not found response has a 4xx status code
func (o *GetContentmanagementDocumentNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get contentmanagement document not found response has a 5xx status code
func (o *GetContentmanagementDocumentNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get contentmanagement document not found response a status code equal to that given
func (o *GetContentmanagementDocumentNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetContentmanagementDocumentNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/documents/{documentId}][%d] getContentmanagementDocumentNotFound  %+v", 404, o.Payload)
}

func (o *GetContentmanagementDocumentNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/documents/{documentId}][%d] getContentmanagementDocumentNotFound  %+v", 404, o.Payload)
}

func (o *GetContentmanagementDocumentNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementDocumentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementDocumentRequestTimeout creates a GetContentmanagementDocumentRequestTimeout with default headers values
func NewGetContentmanagementDocumentRequestTimeout() *GetContentmanagementDocumentRequestTimeout {
	return &GetContentmanagementDocumentRequestTimeout{}
}

/*
GetContentmanagementDocumentRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetContentmanagementDocumentRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement document request timeout response has a 2xx status code
func (o *GetContentmanagementDocumentRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement document request timeout response has a 3xx status code
func (o *GetContentmanagementDocumentRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement document request timeout response has a 4xx status code
func (o *GetContentmanagementDocumentRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get contentmanagement document request timeout response has a 5xx status code
func (o *GetContentmanagementDocumentRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get contentmanagement document request timeout response a status code equal to that given
func (o *GetContentmanagementDocumentRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetContentmanagementDocumentRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/documents/{documentId}][%d] getContentmanagementDocumentRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetContentmanagementDocumentRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/documents/{documentId}][%d] getContentmanagementDocumentRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetContentmanagementDocumentRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementDocumentRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementDocumentRequestEntityTooLarge creates a GetContentmanagementDocumentRequestEntityTooLarge with default headers values
func NewGetContentmanagementDocumentRequestEntityTooLarge() *GetContentmanagementDocumentRequestEntityTooLarge {
	return &GetContentmanagementDocumentRequestEntityTooLarge{}
}

/*
GetContentmanagementDocumentRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetContentmanagementDocumentRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement document request entity too large response has a 2xx status code
func (o *GetContentmanagementDocumentRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement document request entity too large response has a 3xx status code
func (o *GetContentmanagementDocumentRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement document request entity too large response has a 4xx status code
func (o *GetContentmanagementDocumentRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get contentmanagement document request entity too large response has a 5xx status code
func (o *GetContentmanagementDocumentRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get contentmanagement document request entity too large response a status code equal to that given
func (o *GetContentmanagementDocumentRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetContentmanagementDocumentRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/documents/{documentId}][%d] getContentmanagementDocumentRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetContentmanagementDocumentRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/documents/{documentId}][%d] getContentmanagementDocumentRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetContentmanagementDocumentRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementDocumentRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementDocumentUnsupportedMediaType creates a GetContentmanagementDocumentUnsupportedMediaType with default headers values
func NewGetContentmanagementDocumentUnsupportedMediaType() *GetContentmanagementDocumentUnsupportedMediaType {
	return &GetContentmanagementDocumentUnsupportedMediaType{}
}

/*
GetContentmanagementDocumentUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetContentmanagementDocumentUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement document unsupported media type response has a 2xx status code
func (o *GetContentmanagementDocumentUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement document unsupported media type response has a 3xx status code
func (o *GetContentmanagementDocumentUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement document unsupported media type response has a 4xx status code
func (o *GetContentmanagementDocumentUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get contentmanagement document unsupported media type response has a 5xx status code
func (o *GetContentmanagementDocumentUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get contentmanagement document unsupported media type response a status code equal to that given
func (o *GetContentmanagementDocumentUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetContentmanagementDocumentUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/documents/{documentId}][%d] getContentmanagementDocumentUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetContentmanagementDocumentUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/documents/{documentId}][%d] getContentmanagementDocumentUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetContentmanagementDocumentUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementDocumentUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementDocumentTooManyRequests creates a GetContentmanagementDocumentTooManyRequests with default headers values
func NewGetContentmanagementDocumentTooManyRequests() *GetContentmanagementDocumentTooManyRequests {
	return &GetContentmanagementDocumentTooManyRequests{}
}

/*
GetContentmanagementDocumentTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetContentmanagementDocumentTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement document too many requests response has a 2xx status code
func (o *GetContentmanagementDocumentTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement document too many requests response has a 3xx status code
func (o *GetContentmanagementDocumentTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement document too many requests response has a 4xx status code
func (o *GetContentmanagementDocumentTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get contentmanagement document too many requests response has a 5xx status code
func (o *GetContentmanagementDocumentTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get contentmanagement document too many requests response a status code equal to that given
func (o *GetContentmanagementDocumentTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetContentmanagementDocumentTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/documents/{documentId}][%d] getContentmanagementDocumentTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetContentmanagementDocumentTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/documents/{documentId}][%d] getContentmanagementDocumentTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetContentmanagementDocumentTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementDocumentTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementDocumentInternalServerError creates a GetContentmanagementDocumentInternalServerError with default headers values
func NewGetContentmanagementDocumentInternalServerError() *GetContentmanagementDocumentInternalServerError {
	return &GetContentmanagementDocumentInternalServerError{}
}

/*
GetContentmanagementDocumentInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetContentmanagementDocumentInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement document internal server error response has a 2xx status code
func (o *GetContentmanagementDocumentInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement document internal server error response has a 3xx status code
func (o *GetContentmanagementDocumentInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement document internal server error response has a 4xx status code
func (o *GetContentmanagementDocumentInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get contentmanagement document internal server error response has a 5xx status code
func (o *GetContentmanagementDocumentInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get contentmanagement document internal server error response a status code equal to that given
func (o *GetContentmanagementDocumentInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetContentmanagementDocumentInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/documents/{documentId}][%d] getContentmanagementDocumentInternalServerError  %+v", 500, o.Payload)
}

func (o *GetContentmanagementDocumentInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/documents/{documentId}][%d] getContentmanagementDocumentInternalServerError  %+v", 500, o.Payload)
}

func (o *GetContentmanagementDocumentInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementDocumentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementDocumentServiceUnavailable creates a GetContentmanagementDocumentServiceUnavailable with default headers values
func NewGetContentmanagementDocumentServiceUnavailable() *GetContentmanagementDocumentServiceUnavailable {
	return &GetContentmanagementDocumentServiceUnavailable{}
}

/*
GetContentmanagementDocumentServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetContentmanagementDocumentServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement document service unavailable response has a 2xx status code
func (o *GetContentmanagementDocumentServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement document service unavailable response has a 3xx status code
func (o *GetContentmanagementDocumentServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement document service unavailable response has a 4xx status code
func (o *GetContentmanagementDocumentServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get contentmanagement document service unavailable response has a 5xx status code
func (o *GetContentmanagementDocumentServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get contentmanagement document service unavailable response a status code equal to that given
func (o *GetContentmanagementDocumentServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetContentmanagementDocumentServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/documents/{documentId}][%d] getContentmanagementDocumentServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetContentmanagementDocumentServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/documents/{documentId}][%d] getContentmanagementDocumentServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetContentmanagementDocumentServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementDocumentServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentmanagementDocumentGatewayTimeout creates a GetContentmanagementDocumentGatewayTimeout with default headers values
func NewGetContentmanagementDocumentGatewayTimeout() *GetContentmanagementDocumentGatewayTimeout {
	return &GetContentmanagementDocumentGatewayTimeout{}
}

/*
GetContentmanagementDocumentGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetContentmanagementDocumentGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get contentmanagement document gateway timeout response has a 2xx status code
func (o *GetContentmanagementDocumentGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contentmanagement document gateway timeout response has a 3xx status code
func (o *GetContentmanagementDocumentGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contentmanagement document gateway timeout response has a 4xx status code
func (o *GetContentmanagementDocumentGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get contentmanagement document gateway timeout response has a 5xx status code
func (o *GetContentmanagementDocumentGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get contentmanagement document gateway timeout response a status code equal to that given
func (o *GetContentmanagementDocumentGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetContentmanagementDocumentGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/documents/{documentId}][%d] getContentmanagementDocumentGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetContentmanagementDocumentGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/contentmanagement/documents/{documentId}][%d] getContentmanagementDocumentGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetContentmanagementDocumentGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetContentmanagementDocumentGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
