// Code generated by go-swagger; DO NOT EDIT.

package content_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// DeleteContentmanagementDocumentReader is a Reader for the DeleteContentmanagementDocument structure.
type DeleteContentmanagementDocumentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteContentmanagementDocumentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewDeleteContentmanagementDocumentAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteContentmanagementDocumentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteContentmanagementDocumentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteContentmanagementDocumentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteContentmanagementDocumentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewDeleteContentmanagementDocumentRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewDeleteContentmanagementDocumentRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDeleteContentmanagementDocumentUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 423:
		result := NewDeleteContentmanagementDocumentLocked()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteContentmanagementDocumentTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteContentmanagementDocumentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteContentmanagementDocumentServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteContentmanagementDocumentGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteContentmanagementDocumentAccepted creates a DeleteContentmanagementDocumentAccepted with default headers values
func NewDeleteContentmanagementDocumentAccepted() *DeleteContentmanagementDocumentAccepted {
	return &DeleteContentmanagementDocumentAccepted{}
}

/*
DeleteContentmanagementDocumentAccepted describes a response with status code 202, with default header values.

Accepted - Processing Delete
*/
type DeleteContentmanagementDocumentAccepted struct {
}

// IsSuccess returns true when this delete contentmanagement document accepted response has a 2xx status code
func (o *DeleteContentmanagementDocumentAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete contentmanagement document accepted response has a 3xx status code
func (o *DeleteContentmanagementDocumentAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete contentmanagement document accepted response has a 4xx status code
func (o *DeleteContentmanagementDocumentAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete contentmanagement document accepted response has a 5xx status code
func (o *DeleteContentmanagementDocumentAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this delete contentmanagement document accepted response a status code equal to that given
func (o *DeleteContentmanagementDocumentAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *DeleteContentmanagementDocumentAccepted) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/documents/{documentId}][%d] deleteContentmanagementDocumentAccepted ", 202)
}

func (o *DeleteContentmanagementDocumentAccepted) String() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/documents/{documentId}][%d] deleteContentmanagementDocumentAccepted ", 202)
}

func (o *DeleteContentmanagementDocumentAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteContentmanagementDocumentBadRequest creates a DeleteContentmanagementDocumentBadRequest with default headers values
func NewDeleteContentmanagementDocumentBadRequest() *DeleteContentmanagementDocumentBadRequest {
	return &DeleteContentmanagementDocumentBadRequest{}
}

/*
DeleteContentmanagementDocumentBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type DeleteContentmanagementDocumentBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete contentmanagement document bad request response has a 2xx status code
func (o *DeleteContentmanagementDocumentBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete contentmanagement document bad request response has a 3xx status code
func (o *DeleteContentmanagementDocumentBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete contentmanagement document bad request response has a 4xx status code
func (o *DeleteContentmanagementDocumentBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete contentmanagement document bad request response has a 5xx status code
func (o *DeleteContentmanagementDocumentBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete contentmanagement document bad request response a status code equal to that given
func (o *DeleteContentmanagementDocumentBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteContentmanagementDocumentBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/documents/{documentId}][%d] deleteContentmanagementDocumentBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteContentmanagementDocumentBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/documents/{documentId}][%d] deleteContentmanagementDocumentBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteContentmanagementDocumentBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteContentmanagementDocumentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteContentmanagementDocumentUnauthorized creates a DeleteContentmanagementDocumentUnauthorized with default headers values
func NewDeleteContentmanagementDocumentUnauthorized() *DeleteContentmanagementDocumentUnauthorized {
	return &DeleteContentmanagementDocumentUnauthorized{}
}

/*
DeleteContentmanagementDocumentUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type DeleteContentmanagementDocumentUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete contentmanagement document unauthorized response has a 2xx status code
func (o *DeleteContentmanagementDocumentUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete contentmanagement document unauthorized response has a 3xx status code
func (o *DeleteContentmanagementDocumentUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete contentmanagement document unauthorized response has a 4xx status code
func (o *DeleteContentmanagementDocumentUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete contentmanagement document unauthorized response has a 5xx status code
func (o *DeleteContentmanagementDocumentUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete contentmanagement document unauthorized response a status code equal to that given
func (o *DeleteContentmanagementDocumentUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteContentmanagementDocumentUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/documents/{documentId}][%d] deleteContentmanagementDocumentUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteContentmanagementDocumentUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/documents/{documentId}][%d] deleteContentmanagementDocumentUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteContentmanagementDocumentUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteContentmanagementDocumentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteContentmanagementDocumentForbidden creates a DeleteContentmanagementDocumentForbidden with default headers values
func NewDeleteContentmanagementDocumentForbidden() *DeleteContentmanagementDocumentForbidden {
	return &DeleteContentmanagementDocumentForbidden{}
}

/*
DeleteContentmanagementDocumentForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type DeleteContentmanagementDocumentForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete contentmanagement document forbidden response has a 2xx status code
func (o *DeleteContentmanagementDocumentForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete contentmanagement document forbidden response has a 3xx status code
func (o *DeleteContentmanagementDocumentForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete contentmanagement document forbidden response has a 4xx status code
func (o *DeleteContentmanagementDocumentForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete contentmanagement document forbidden response has a 5xx status code
func (o *DeleteContentmanagementDocumentForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete contentmanagement document forbidden response a status code equal to that given
func (o *DeleteContentmanagementDocumentForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteContentmanagementDocumentForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/documents/{documentId}][%d] deleteContentmanagementDocumentForbidden  %+v", 403, o.Payload)
}

func (o *DeleteContentmanagementDocumentForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/documents/{documentId}][%d] deleteContentmanagementDocumentForbidden  %+v", 403, o.Payload)
}

func (o *DeleteContentmanagementDocumentForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteContentmanagementDocumentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteContentmanagementDocumentNotFound creates a DeleteContentmanagementDocumentNotFound with default headers values
func NewDeleteContentmanagementDocumentNotFound() *DeleteContentmanagementDocumentNotFound {
	return &DeleteContentmanagementDocumentNotFound{}
}

/*
DeleteContentmanagementDocumentNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type DeleteContentmanagementDocumentNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete contentmanagement document not found response has a 2xx status code
func (o *DeleteContentmanagementDocumentNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete contentmanagement document not found response has a 3xx status code
func (o *DeleteContentmanagementDocumentNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete contentmanagement document not found response has a 4xx status code
func (o *DeleteContentmanagementDocumentNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete contentmanagement document not found response has a 5xx status code
func (o *DeleteContentmanagementDocumentNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete contentmanagement document not found response a status code equal to that given
func (o *DeleteContentmanagementDocumentNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteContentmanagementDocumentNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/documents/{documentId}][%d] deleteContentmanagementDocumentNotFound  %+v", 404, o.Payload)
}

func (o *DeleteContentmanagementDocumentNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/documents/{documentId}][%d] deleteContentmanagementDocumentNotFound  %+v", 404, o.Payload)
}

func (o *DeleteContentmanagementDocumentNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteContentmanagementDocumentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteContentmanagementDocumentRequestTimeout creates a DeleteContentmanagementDocumentRequestTimeout with default headers values
func NewDeleteContentmanagementDocumentRequestTimeout() *DeleteContentmanagementDocumentRequestTimeout {
	return &DeleteContentmanagementDocumentRequestTimeout{}
}

/*
DeleteContentmanagementDocumentRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type DeleteContentmanagementDocumentRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete contentmanagement document request timeout response has a 2xx status code
func (o *DeleteContentmanagementDocumentRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete contentmanagement document request timeout response has a 3xx status code
func (o *DeleteContentmanagementDocumentRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete contentmanagement document request timeout response has a 4xx status code
func (o *DeleteContentmanagementDocumentRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete contentmanagement document request timeout response has a 5xx status code
func (o *DeleteContentmanagementDocumentRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this delete contentmanagement document request timeout response a status code equal to that given
func (o *DeleteContentmanagementDocumentRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *DeleteContentmanagementDocumentRequestTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/documents/{documentId}][%d] deleteContentmanagementDocumentRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteContentmanagementDocumentRequestTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/documents/{documentId}][%d] deleteContentmanagementDocumentRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteContentmanagementDocumentRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteContentmanagementDocumentRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteContentmanagementDocumentRequestEntityTooLarge creates a DeleteContentmanagementDocumentRequestEntityTooLarge with default headers values
func NewDeleteContentmanagementDocumentRequestEntityTooLarge() *DeleteContentmanagementDocumentRequestEntityTooLarge {
	return &DeleteContentmanagementDocumentRequestEntityTooLarge{}
}

/*
DeleteContentmanagementDocumentRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type DeleteContentmanagementDocumentRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete contentmanagement document request entity too large response has a 2xx status code
func (o *DeleteContentmanagementDocumentRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete contentmanagement document request entity too large response has a 3xx status code
func (o *DeleteContentmanagementDocumentRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete contentmanagement document request entity too large response has a 4xx status code
func (o *DeleteContentmanagementDocumentRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete contentmanagement document request entity too large response has a 5xx status code
func (o *DeleteContentmanagementDocumentRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this delete contentmanagement document request entity too large response a status code equal to that given
func (o *DeleteContentmanagementDocumentRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *DeleteContentmanagementDocumentRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/documents/{documentId}][%d] deleteContentmanagementDocumentRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteContentmanagementDocumentRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/documents/{documentId}][%d] deleteContentmanagementDocumentRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteContentmanagementDocumentRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteContentmanagementDocumentRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteContentmanagementDocumentUnsupportedMediaType creates a DeleteContentmanagementDocumentUnsupportedMediaType with default headers values
func NewDeleteContentmanagementDocumentUnsupportedMediaType() *DeleteContentmanagementDocumentUnsupportedMediaType {
	return &DeleteContentmanagementDocumentUnsupportedMediaType{}
}

/*
DeleteContentmanagementDocumentUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type DeleteContentmanagementDocumentUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete contentmanagement document unsupported media type response has a 2xx status code
func (o *DeleteContentmanagementDocumentUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete contentmanagement document unsupported media type response has a 3xx status code
func (o *DeleteContentmanagementDocumentUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete contentmanagement document unsupported media type response has a 4xx status code
func (o *DeleteContentmanagementDocumentUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete contentmanagement document unsupported media type response has a 5xx status code
func (o *DeleteContentmanagementDocumentUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this delete contentmanagement document unsupported media type response a status code equal to that given
func (o *DeleteContentmanagementDocumentUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *DeleteContentmanagementDocumentUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/documents/{documentId}][%d] deleteContentmanagementDocumentUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteContentmanagementDocumentUnsupportedMediaType) String() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/documents/{documentId}][%d] deleteContentmanagementDocumentUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteContentmanagementDocumentUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteContentmanagementDocumentUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteContentmanagementDocumentLocked creates a DeleteContentmanagementDocumentLocked with default headers values
func NewDeleteContentmanagementDocumentLocked() *DeleteContentmanagementDocumentLocked {
	return &DeleteContentmanagementDocumentLocked{}
}

/*
DeleteContentmanagementDocumentLocked describes a response with status code 423, with default header values.

Locked - The document is locked by another operation
*/
type DeleteContentmanagementDocumentLocked struct {
}

// IsSuccess returns true when this delete contentmanagement document locked response has a 2xx status code
func (o *DeleteContentmanagementDocumentLocked) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete contentmanagement document locked response has a 3xx status code
func (o *DeleteContentmanagementDocumentLocked) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete contentmanagement document locked response has a 4xx status code
func (o *DeleteContentmanagementDocumentLocked) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete contentmanagement document locked response has a 5xx status code
func (o *DeleteContentmanagementDocumentLocked) IsServerError() bool {
	return false
}

// IsCode returns true when this delete contentmanagement document locked response a status code equal to that given
func (o *DeleteContentmanagementDocumentLocked) IsCode(code int) bool {
	return code == 423
}

func (o *DeleteContentmanagementDocumentLocked) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/documents/{documentId}][%d] deleteContentmanagementDocumentLocked ", 423)
}

func (o *DeleteContentmanagementDocumentLocked) String() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/documents/{documentId}][%d] deleteContentmanagementDocumentLocked ", 423)
}

func (o *DeleteContentmanagementDocumentLocked) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteContentmanagementDocumentTooManyRequests creates a DeleteContentmanagementDocumentTooManyRequests with default headers values
func NewDeleteContentmanagementDocumentTooManyRequests() *DeleteContentmanagementDocumentTooManyRequests {
	return &DeleteContentmanagementDocumentTooManyRequests{}
}

/*
DeleteContentmanagementDocumentTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type DeleteContentmanagementDocumentTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete contentmanagement document too many requests response has a 2xx status code
func (o *DeleteContentmanagementDocumentTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete contentmanagement document too many requests response has a 3xx status code
func (o *DeleteContentmanagementDocumentTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete contentmanagement document too many requests response has a 4xx status code
func (o *DeleteContentmanagementDocumentTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete contentmanagement document too many requests response has a 5xx status code
func (o *DeleteContentmanagementDocumentTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete contentmanagement document too many requests response a status code equal to that given
func (o *DeleteContentmanagementDocumentTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *DeleteContentmanagementDocumentTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/documents/{documentId}][%d] deleteContentmanagementDocumentTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteContentmanagementDocumentTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/documents/{documentId}][%d] deleteContentmanagementDocumentTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteContentmanagementDocumentTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteContentmanagementDocumentTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteContentmanagementDocumentInternalServerError creates a DeleteContentmanagementDocumentInternalServerError with default headers values
func NewDeleteContentmanagementDocumentInternalServerError() *DeleteContentmanagementDocumentInternalServerError {
	return &DeleteContentmanagementDocumentInternalServerError{}
}

/*
DeleteContentmanagementDocumentInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type DeleteContentmanagementDocumentInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete contentmanagement document internal server error response has a 2xx status code
func (o *DeleteContentmanagementDocumentInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete contentmanagement document internal server error response has a 3xx status code
func (o *DeleteContentmanagementDocumentInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete contentmanagement document internal server error response has a 4xx status code
func (o *DeleteContentmanagementDocumentInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete contentmanagement document internal server error response has a 5xx status code
func (o *DeleteContentmanagementDocumentInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete contentmanagement document internal server error response a status code equal to that given
func (o *DeleteContentmanagementDocumentInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteContentmanagementDocumentInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/documents/{documentId}][%d] deleteContentmanagementDocumentInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteContentmanagementDocumentInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/documents/{documentId}][%d] deleteContentmanagementDocumentInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteContentmanagementDocumentInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteContentmanagementDocumentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteContentmanagementDocumentServiceUnavailable creates a DeleteContentmanagementDocumentServiceUnavailable with default headers values
func NewDeleteContentmanagementDocumentServiceUnavailable() *DeleteContentmanagementDocumentServiceUnavailable {
	return &DeleteContentmanagementDocumentServiceUnavailable{}
}

/*
DeleteContentmanagementDocumentServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type DeleteContentmanagementDocumentServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete contentmanagement document service unavailable response has a 2xx status code
func (o *DeleteContentmanagementDocumentServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete contentmanagement document service unavailable response has a 3xx status code
func (o *DeleteContentmanagementDocumentServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete contentmanagement document service unavailable response has a 4xx status code
func (o *DeleteContentmanagementDocumentServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete contentmanagement document service unavailable response has a 5xx status code
func (o *DeleteContentmanagementDocumentServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this delete contentmanagement document service unavailable response a status code equal to that given
func (o *DeleteContentmanagementDocumentServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *DeleteContentmanagementDocumentServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/documents/{documentId}][%d] deleteContentmanagementDocumentServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteContentmanagementDocumentServiceUnavailable) String() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/documents/{documentId}][%d] deleteContentmanagementDocumentServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteContentmanagementDocumentServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteContentmanagementDocumentServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteContentmanagementDocumentGatewayTimeout creates a DeleteContentmanagementDocumentGatewayTimeout with default headers values
func NewDeleteContentmanagementDocumentGatewayTimeout() *DeleteContentmanagementDocumentGatewayTimeout {
	return &DeleteContentmanagementDocumentGatewayTimeout{}
}

/*
DeleteContentmanagementDocumentGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type DeleteContentmanagementDocumentGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete contentmanagement document gateway timeout response has a 2xx status code
func (o *DeleteContentmanagementDocumentGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete contentmanagement document gateway timeout response has a 3xx status code
func (o *DeleteContentmanagementDocumentGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete contentmanagement document gateway timeout response has a 4xx status code
func (o *DeleteContentmanagementDocumentGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete contentmanagement document gateway timeout response has a 5xx status code
func (o *DeleteContentmanagementDocumentGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this delete contentmanagement document gateway timeout response a status code equal to that given
func (o *DeleteContentmanagementDocumentGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *DeleteContentmanagementDocumentGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/documents/{documentId}][%d] deleteContentmanagementDocumentGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteContentmanagementDocumentGatewayTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/contentmanagement/documents/{documentId}][%d] deleteContentmanagementDocumentGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteContentmanagementDocumentGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteContentmanagementDocumentGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
