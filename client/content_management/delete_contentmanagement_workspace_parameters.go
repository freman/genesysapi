// Code generated by go-swagger; DO NOT EDIT.

package content_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewDeleteContentmanagementWorkspaceParams creates a new DeleteContentmanagementWorkspaceParams object
// with the default values initialized.
func NewDeleteContentmanagementWorkspaceParams() *DeleteContentmanagementWorkspaceParams {
	var ()
	return &DeleteContentmanagementWorkspaceParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteContentmanagementWorkspaceParamsWithTimeout creates a new DeleteContentmanagementWorkspaceParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteContentmanagementWorkspaceParamsWithTimeout(timeout time.Duration) *DeleteContentmanagementWorkspaceParams {
	var ()
	return &DeleteContentmanagementWorkspaceParams{

		timeout: timeout,
	}
}

// NewDeleteContentmanagementWorkspaceParamsWithContext creates a new DeleteContentmanagementWorkspaceParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteContentmanagementWorkspaceParamsWithContext(ctx context.Context) *DeleteContentmanagementWorkspaceParams {
	var ()
	return &DeleteContentmanagementWorkspaceParams{

		Context: ctx,
	}
}

// NewDeleteContentmanagementWorkspaceParamsWithHTTPClient creates a new DeleteContentmanagementWorkspaceParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteContentmanagementWorkspaceParamsWithHTTPClient(client *http.Client) *DeleteContentmanagementWorkspaceParams {
	var ()
	return &DeleteContentmanagementWorkspaceParams{
		HTTPClient: client,
	}
}

/*DeleteContentmanagementWorkspaceParams contains all the parameters to send to the API endpoint
for the delete contentmanagement workspace operation typically these are written to a http.Request
*/
type DeleteContentmanagementWorkspaceParams struct {

	/*MoveChildrenToWorkspaceID
	  New location for objects in deleted workspace.

	*/
	MoveChildrenToWorkspaceID *string
	/*WorkspaceID
	  Workspace ID

	*/
	WorkspaceID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete contentmanagement workspace params
func (o *DeleteContentmanagementWorkspaceParams) WithTimeout(timeout time.Duration) *DeleteContentmanagementWorkspaceParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete contentmanagement workspace params
func (o *DeleteContentmanagementWorkspaceParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete contentmanagement workspace params
func (o *DeleteContentmanagementWorkspaceParams) WithContext(ctx context.Context) *DeleteContentmanagementWorkspaceParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete contentmanagement workspace params
func (o *DeleteContentmanagementWorkspaceParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete contentmanagement workspace params
func (o *DeleteContentmanagementWorkspaceParams) WithHTTPClient(client *http.Client) *DeleteContentmanagementWorkspaceParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete contentmanagement workspace params
func (o *DeleteContentmanagementWorkspaceParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithMoveChildrenToWorkspaceID adds the moveChildrenToWorkspaceID to the delete contentmanagement workspace params
func (o *DeleteContentmanagementWorkspaceParams) WithMoveChildrenToWorkspaceID(moveChildrenToWorkspaceID *string) *DeleteContentmanagementWorkspaceParams {
	o.SetMoveChildrenToWorkspaceID(moveChildrenToWorkspaceID)
	return o
}

// SetMoveChildrenToWorkspaceID adds the moveChildrenToWorkspaceId to the delete contentmanagement workspace params
func (o *DeleteContentmanagementWorkspaceParams) SetMoveChildrenToWorkspaceID(moveChildrenToWorkspaceID *string) {
	o.MoveChildrenToWorkspaceID = moveChildrenToWorkspaceID
}

// WithWorkspaceID adds the workspaceID to the delete contentmanagement workspace params
func (o *DeleteContentmanagementWorkspaceParams) WithWorkspaceID(workspaceID string) *DeleteContentmanagementWorkspaceParams {
	o.SetWorkspaceID(workspaceID)
	return o
}

// SetWorkspaceID adds the workspaceId to the delete contentmanagement workspace params
func (o *DeleteContentmanagementWorkspaceParams) SetWorkspaceID(workspaceID string) {
	o.WorkspaceID = workspaceID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteContentmanagementWorkspaceParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.MoveChildrenToWorkspaceID != nil {

		// query param moveChildrenToWorkspaceId
		var qrMoveChildrenToWorkspaceID string
		if o.MoveChildrenToWorkspaceID != nil {
			qrMoveChildrenToWorkspaceID = *o.MoveChildrenToWorkspaceID
		}
		qMoveChildrenToWorkspaceID := qrMoveChildrenToWorkspaceID
		if qMoveChildrenToWorkspaceID != "" {
			if err := r.SetQueryParam("moveChildrenToWorkspaceId", qMoveChildrenToWorkspaceID); err != nil {
				return err
			}
		}

	}

	// path param workspaceId
	if err := r.SetPathParam("workspaceId", o.WorkspaceID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
