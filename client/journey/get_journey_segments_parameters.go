// Code generated by go-swagger; DO NOT EDIT.

package journey

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetJourneySegmentsParams creates a new GetJourneySegmentsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetJourneySegmentsParams() *GetJourneySegmentsParams {
	return &GetJourneySegmentsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetJourneySegmentsParamsWithTimeout creates a new GetJourneySegmentsParams object
// with the ability to set a timeout on a request.
func NewGetJourneySegmentsParamsWithTimeout(timeout time.Duration) *GetJourneySegmentsParams {
	return &GetJourneySegmentsParams{
		timeout: timeout,
	}
}

// NewGetJourneySegmentsParamsWithContext creates a new GetJourneySegmentsParams object
// with the ability to set a context for a request.
func NewGetJourneySegmentsParamsWithContext(ctx context.Context) *GetJourneySegmentsParams {
	return &GetJourneySegmentsParams{
		Context: ctx,
	}
}

// NewGetJourneySegmentsParamsWithHTTPClient creates a new GetJourneySegmentsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetJourneySegmentsParamsWithHTTPClient(client *http.Client) *GetJourneySegmentsParams {
	return &GetJourneySegmentsParams{
		HTTPClient: client,
	}
}

/*
GetJourneySegmentsParams contains all the parameters to send to the API endpoint

	for the get journey segments operation.

	Typically these are written to a http.Request.
*/
type GetJourneySegmentsParams struct {

	/* IsActive.

	   Determines whether or not to show only active segments.
	*/
	IsActive *bool

	/* PageNumber.

	   Page number

	   Format: int32
	   Default: 1
	*/
	PageNumber *int32

	/* PageSize.

	   Page size

	   Format: int32
	   Default: 25
	*/
	PageSize *int32

	/* QueryFields.

	   Segment field(s) to query on. Requires 'queryValue' to also be set.
	*/
	QueryFields []string

	/* QueryValue.

	   Value to query on. Requires 'queryFields' to also be set.
	*/
	QueryValue *string

	/* SegmentIds.

	   IDs of segments to return. Use of this parameter is not compatible with pagination, sorting or querying. A maximum of 100 segments are allowed per request.
	*/
	SegmentIds []string

	/* SortBy.

	   Field(s) to sort by. The response can be sorted by any first level property on the Outcome response. Prefix with '-' for descending (e.g. sortBy=displayName,-createdDate).
	*/
	SortBy *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get journey segments params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetJourneySegmentsParams) WithDefaults() *GetJourneySegmentsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get journey segments params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetJourneySegmentsParams) SetDefaults() {
	var (
		pageNumberDefault = int32(1)

		pageSizeDefault = int32(25)
	)

	val := GetJourneySegmentsParams{
		PageNumber: &pageNumberDefault,
		PageSize:   &pageSizeDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the get journey segments params
func (o *GetJourneySegmentsParams) WithTimeout(timeout time.Duration) *GetJourneySegmentsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get journey segments params
func (o *GetJourneySegmentsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get journey segments params
func (o *GetJourneySegmentsParams) WithContext(ctx context.Context) *GetJourneySegmentsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get journey segments params
func (o *GetJourneySegmentsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get journey segments params
func (o *GetJourneySegmentsParams) WithHTTPClient(client *http.Client) *GetJourneySegmentsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get journey segments params
func (o *GetJourneySegmentsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIsActive adds the isActive to the get journey segments params
func (o *GetJourneySegmentsParams) WithIsActive(isActive *bool) *GetJourneySegmentsParams {
	o.SetIsActive(isActive)
	return o
}

// SetIsActive adds the isActive to the get journey segments params
func (o *GetJourneySegmentsParams) SetIsActive(isActive *bool) {
	o.IsActive = isActive
}

// WithPageNumber adds the pageNumber to the get journey segments params
func (o *GetJourneySegmentsParams) WithPageNumber(pageNumber *int32) *GetJourneySegmentsParams {
	o.SetPageNumber(pageNumber)
	return o
}

// SetPageNumber adds the pageNumber to the get journey segments params
func (o *GetJourneySegmentsParams) SetPageNumber(pageNumber *int32) {
	o.PageNumber = pageNumber
}

// WithPageSize adds the pageSize to the get journey segments params
func (o *GetJourneySegmentsParams) WithPageSize(pageSize *int32) *GetJourneySegmentsParams {
	o.SetPageSize(pageSize)
	return o
}

// SetPageSize adds the pageSize to the get journey segments params
func (o *GetJourneySegmentsParams) SetPageSize(pageSize *int32) {
	o.PageSize = pageSize
}

// WithQueryFields adds the queryFields to the get journey segments params
func (o *GetJourneySegmentsParams) WithQueryFields(queryFields []string) *GetJourneySegmentsParams {
	o.SetQueryFields(queryFields)
	return o
}

// SetQueryFields adds the queryFields to the get journey segments params
func (o *GetJourneySegmentsParams) SetQueryFields(queryFields []string) {
	o.QueryFields = queryFields
}

// WithQueryValue adds the queryValue to the get journey segments params
func (o *GetJourneySegmentsParams) WithQueryValue(queryValue *string) *GetJourneySegmentsParams {
	o.SetQueryValue(queryValue)
	return o
}

// SetQueryValue adds the queryValue to the get journey segments params
func (o *GetJourneySegmentsParams) SetQueryValue(queryValue *string) {
	o.QueryValue = queryValue
}

// WithSegmentIds adds the segmentIds to the get journey segments params
func (o *GetJourneySegmentsParams) WithSegmentIds(segmentIds []string) *GetJourneySegmentsParams {
	o.SetSegmentIds(segmentIds)
	return o
}

// SetSegmentIds adds the segmentIds to the get journey segments params
func (o *GetJourneySegmentsParams) SetSegmentIds(segmentIds []string) {
	o.SegmentIds = segmentIds
}

// WithSortBy adds the sortBy to the get journey segments params
func (o *GetJourneySegmentsParams) WithSortBy(sortBy *string) *GetJourneySegmentsParams {
	o.SetSortBy(sortBy)
	return o
}

// SetSortBy adds the sortBy to the get journey segments params
func (o *GetJourneySegmentsParams) SetSortBy(sortBy *string) {
	o.SortBy = sortBy
}

// WriteToRequest writes these params to a swagger request
func (o *GetJourneySegmentsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.IsActive != nil {

		// query param isActive
		var qrIsActive bool

		if o.IsActive != nil {
			qrIsActive = *o.IsActive
		}
		qIsActive := swag.FormatBool(qrIsActive)
		if qIsActive != "" {

			if err := r.SetQueryParam("isActive", qIsActive); err != nil {
				return err
			}
		}
	}

	if o.PageNumber != nil {

		// query param pageNumber
		var qrPageNumber int32

		if o.PageNumber != nil {
			qrPageNumber = *o.PageNumber
		}
		qPageNumber := swag.FormatInt32(qrPageNumber)
		if qPageNumber != "" {

			if err := r.SetQueryParam("pageNumber", qPageNumber); err != nil {
				return err
			}
		}
	}

	if o.PageSize != nil {

		// query param pageSize
		var qrPageSize int32

		if o.PageSize != nil {
			qrPageSize = *o.PageSize
		}
		qPageSize := swag.FormatInt32(qrPageSize)
		if qPageSize != "" {

			if err := r.SetQueryParam("pageSize", qPageSize); err != nil {
				return err
			}
		}
	}

	if o.QueryFields != nil {

		// binding items for queryFields
		joinedQueryFields := o.bindParamQueryFields(reg)

		// query array param queryFields
		if err := r.SetQueryParam("queryFields", joinedQueryFields...); err != nil {
			return err
		}
	}

	if o.QueryValue != nil {

		// query param queryValue
		var qrQueryValue string

		if o.QueryValue != nil {
			qrQueryValue = *o.QueryValue
		}
		qQueryValue := qrQueryValue
		if qQueryValue != "" {

			if err := r.SetQueryParam("queryValue", qQueryValue); err != nil {
				return err
			}
		}
	}

	if o.SegmentIds != nil {

		// binding items for segmentIds
		joinedSegmentIds := o.bindParamSegmentIds(reg)

		// query array param segmentIds
		if err := r.SetQueryParam("segmentIds", joinedSegmentIds...); err != nil {
			return err
		}
	}

	if o.SortBy != nil {

		// query param sortBy
		var qrSortBy string

		if o.SortBy != nil {
			qrSortBy = *o.SortBy
		}
		qSortBy := qrSortBy
		if qSortBy != "" {

			if err := r.SetQueryParam("sortBy", qSortBy); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetJourneySegments binds the parameter queryFields
func (o *GetJourneySegmentsParams) bindParamQueryFields(formats strfmt.Registry) []string {
	queryFieldsIR := o.QueryFields

	var queryFieldsIC []string
	for _, queryFieldsIIR := range queryFieldsIR { // explode []string

		queryFieldsIIV := queryFieldsIIR // string as string
		queryFieldsIC = append(queryFieldsIC, queryFieldsIIV)
	}

	// items.CollectionFormat: "multi"
	queryFieldsIS := swag.JoinByFormat(queryFieldsIC, "multi")

	return queryFieldsIS
}

// bindParamGetJourneySegments binds the parameter segmentIds
func (o *GetJourneySegmentsParams) bindParamSegmentIds(formats strfmt.Registry) []string {
	segmentIdsIR := o.SegmentIds

	var segmentIdsIC []string
	for _, segmentIdsIIR := range segmentIdsIR { // explode []string

		segmentIdsIIV := segmentIdsIIR // string as string
		segmentIdsIC = append(segmentIdsIC, segmentIdsIIV)
	}

	// items.CollectionFormat: "multi"
	segmentIdsIS := swag.JoinByFormat(segmentIdsIC, "multi")

	return segmentIdsIS
}
