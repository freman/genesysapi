// Code generated by go-swagger; DO NOT EDIT.

package journey

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PatchJourneyActiontemplateReader is a Reader for the PatchJourneyActiontemplate structure.
type PatchJourneyActiontemplateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchJourneyActiontemplateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchJourneyActiontemplateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchJourneyActiontemplateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPatchJourneyActiontemplateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchJourneyActiontemplateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchJourneyActiontemplateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPatchJourneyActiontemplateRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPatchJourneyActiontemplateConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPatchJourneyActiontemplateRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPatchJourneyActiontemplateUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPatchJourneyActiontemplateTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchJourneyActiontemplateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPatchJourneyActiontemplateServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPatchJourneyActiontemplateGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchJourneyActiontemplateOK creates a PatchJourneyActiontemplateOK with default headers values
func NewPatchJourneyActiontemplateOK() *PatchJourneyActiontemplateOK {
	return &PatchJourneyActiontemplateOK{}
}

/*
PatchJourneyActiontemplateOK describes a response with status code 200, with default header values.

successful operation
*/
type PatchJourneyActiontemplateOK struct {
	Payload *models.ActionTemplate
}

// IsSuccess returns true when this patch journey actiontemplate o k response has a 2xx status code
func (o *PatchJourneyActiontemplateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this patch journey actiontemplate o k response has a 3xx status code
func (o *PatchJourneyActiontemplateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch journey actiontemplate o k response has a 4xx status code
func (o *PatchJourneyActiontemplateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch journey actiontemplate o k response has a 5xx status code
func (o *PatchJourneyActiontemplateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this patch journey actiontemplate o k response a status code equal to that given
func (o *PatchJourneyActiontemplateOK) IsCode(code int) bool {
	return code == 200
}

func (o *PatchJourneyActiontemplateOK) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/journey/actiontemplates/{actionTemplateId}][%d] patchJourneyActiontemplateOK  %+v", 200, o.Payload)
}

func (o *PatchJourneyActiontemplateOK) String() string {
	return fmt.Sprintf("[PATCH /api/v2/journey/actiontemplates/{actionTemplateId}][%d] patchJourneyActiontemplateOK  %+v", 200, o.Payload)
}

func (o *PatchJourneyActiontemplateOK) GetPayload() *models.ActionTemplate {
	return o.Payload
}

func (o *PatchJourneyActiontemplateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ActionTemplate)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchJourneyActiontemplateBadRequest creates a PatchJourneyActiontemplateBadRequest with default headers values
func NewPatchJourneyActiontemplateBadRequest() *PatchJourneyActiontemplateBadRequest {
	return &PatchJourneyActiontemplateBadRequest{}
}

/*
PatchJourneyActiontemplateBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PatchJourneyActiontemplateBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch journey actiontemplate bad request response has a 2xx status code
func (o *PatchJourneyActiontemplateBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch journey actiontemplate bad request response has a 3xx status code
func (o *PatchJourneyActiontemplateBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch journey actiontemplate bad request response has a 4xx status code
func (o *PatchJourneyActiontemplateBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch journey actiontemplate bad request response has a 5xx status code
func (o *PatchJourneyActiontemplateBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this patch journey actiontemplate bad request response a status code equal to that given
func (o *PatchJourneyActiontemplateBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PatchJourneyActiontemplateBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/journey/actiontemplates/{actionTemplateId}][%d] patchJourneyActiontemplateBadRequest  %+v", 400, o.Payload)
}

func (o *PatchJourneyActiontemplateBadRequest) String() string {
	return fmt.Sprintf("[PATCH /api/v2/journey/actiontemplates/{actionTemplateId}][%d] patchJourneyActiontemplateBadRequest  %+v", 400, o.Payload)
}

func (o *PatchJourneyActiontemplateBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchJourneyActiontemplateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchJourneyActiontemplateUnauthorized creates a PatchJourneyActiontemplateUnauthorized with default headers values
func NewPatchJourneyActiontemplateUnauthorized() *PatchJourneyActiontemplateUnauthorized {
	return &PatchJourneyActiontemplateUnauthorized{}
}

/*
PatchJourneyActiontemplateUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PatchJourneyActiontemplateUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch journey actiontemplate unauthorized response has a 2xx status code
func (o *PatchJourneyActiontemplateUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch journey actiontemplate unauthorized response has a 3xx status code
func (o *PatchJourneyActiontemplateUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch journey actiontemplate unauthorized response has a 4xx status code
func (o *PatchJourneyActiontemplateUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch journey actiontemplate unauthorized response has a 5xx status code
func (o *PatchJourneyActiontemplateUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this patch journey actiontemplate unauthorized response a status code equal to that given
func (o *PatchJourneyActiontemplateUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PatchJourneyActiontemplateUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/journey/actiontemplates/{actionTemplateId}][%d] patchJourneyActiontemplateUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchJourneyActiontemplateUnauthorized) String() string {
	return fmt.Sprintf("[PATCH /api/v2/journey/actiontemplates/{actionTemplateId}][%d] patchJourneyActiontemplateUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchJourneyActiontemplateUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchJourneyActiontemplateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchJourneyActiontemplateForbidden creates a PatchJourneyActiontemplateForbidden with default headers values
func NewPatchJourneyActiontemplateForbidden() *PatchJourneyActiontemplateForbidden {
	return &PatchJourneyActiontemplateForbidden{}
}

/*
PatchJourneyActiontemplateForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PatchJourneyActiontemplateForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch journey actiontemplate forbidden response has a 2xx status code
func (o *PatchJourneyActiontemplateForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch journey actiontemplate forbidden response has a 3xx status code
func (o *PatchJourneyActiontemplateForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch journey actiontemplate forbidden response has a 4xx status code
func (o *PatchJourneyActiontemplateForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch journey actiontemplate forbidden response has a 5xx status code
func (o *PatchJourneyActiontemplateForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this patch journey actiontemplate forbidden response a status code equal to that given
func (o *PatchJourneyActiontemplateForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PatchJourneyActiontemplateForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/journey/actiontemplates/{actionTemplateId}][%d] patchJourneyActiontemplateForbidden  %+v", 403, o.Payload)
}

func (o *PatchJourneyActiontemplateForbidden) String() string {
	return fmt.Sprintf("[PATCH /api/v2/journey/actiontemplates/{actionTemplateId}][%d] patchJourneyActiontemplateForbidden  %+v", 403, o.Payload)
}

func (o *PatchJourneyActiontemplateForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchJourneyActiontemplateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchJourneyActiontemplateNotFound creates a PatchJourneyActiontemplateNotFound with default headers values
func NewPatchJourneyActiontemplateNotFound() *PatchJourneyActiontemplateNotFound {
	return &PatchJourneyActiontemplateNotFound{}
}

/*
PatchJourneyActiontemplateNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PatchJourneyActiontemplateNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch journey actiontemplate not found response has a 2xx status code
func (o *PatchJourneyActiontemplateNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch journey actiontemplate not found response has a 3xx status code
func (o *PatchJourneyActiontemplateNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch journey actiontemplate not found response has a 4xx status code
func (o *PatchJourneyActiontemplateNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch journey actiontemplate not found response has a 5xx status code
func (o *PatchJourneyActiontemplateNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this patch journey actiontemplate not found response a status code equal to that given
func (o *PatchJourneyActiontemplateNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PatchJourneyActiontemplateNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/journey/actiontemplates/{actionTemplateId}][%d] patchJourneyActiontemplateNotFound  %+v", 404, o.Payload)
}

func (o *PatchJourneyActiontemplateNotFound) String() string {
	return fmt.Sprintf("[PATCH /api/v2/journey/actiontemplates/{actionTemplateId}][%d] patchJourneyActiontemplateNotFound  %+v", 404, o.Payload)
}

func (o *PatchJourneyActiontemplateNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchJourneyActiontemplateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchJourneyActiontemplateRequestTimeout creates a PatchJourneyActiontemplateRequestTimeout with default headers values
func NewPatchJourneyActiontemplateRequestTimeout() *PatchJourneyActiontemplateRequestTimeout {
	return &PatchJourneyActiontemplateRequestTimeout{}
}

/*
PatchJourneyActiontemplateRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PatchJourneyActiontemplateRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch journey actiontemplate request timeout response has a 2xx status code
func (o *PatchJourneyActiontemplateRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch journey actiontemplate request timeout response has a 3xx status code
func (o *PatchJourneyActiontemplateRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch journey actiontemplate request timeout response has a 4xx status code
func (o *PatchJourneyActiontemplateRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch journey actiontemplate request timeout response has a 5xx status code
func (o *PatchJourneyActiontemplateRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this patch journey actiontemplate request timeout response a status code equal to that given
func (o *PatchJourneyActiontemplateRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PatchJourneyActiontemplateRequestTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/journey/actiontemplates/{actionTemplateId}][%d] patchJourneyActiontemplateRequestTimeout  %+v", 408, o.Payload)
}

func (o *PatchJourneyActiontemplateRequestTimeout) String() string {
	return fmt.Sprintf("[PATCH /api/v2/journey/actiontemplates/{actionTemplateId}][%d] patchJourneyActiontemplateRequestTimeout  %+v", 408, o.Payload)
}

func (o *PatchJourneyActiontemplateRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchJourneyActiontemplateRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchJourneyActiontemplateConflict creates a PatchJourneyActiontemplateConflict with default headers values
func NewPatchJourneyActiontemplateConflict() *PatchJourneyActiontemplateConflict {
	return &PatchJourneyActiontemplateConflict{}
}

/*
PatchJourneyActiontemplateConflict describes a response with status code 409, with default header values.

Conflict
*/
type PatchJourneyActiontemplateConflict struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch journey actiontemplate conflict response has a 2xx status code
func (o *PatchJourneyActiontemplateConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch journey actiontemplate conflict response has a 3xx status code
func (o *PatchJourneyActiontemplateConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch journey actiontemplate conflict response has a 4xx status code
func (o *PatchJourneyActiontemplateConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch journey actiontemplate conflict response has a 5xx status code
func (o *PatchJourneyActiontemplateConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this patch journey actiontemplate conflict response a status code equal to that given
func (o *PatchJourneyActiontemplateConflict) IsCode(code int) bool {
	return code == 409
}

func (o *PatchJourneyActiontemplateConflict) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/journey/actiontemplates/{actionTemplateId}][%d] patchJourneyActiontemplateConflict  %+v", 409, o.Payload)
}

func (o *PatchJourneyActiontemplateConflict) String() string {
	return fmt.Sprintf("[PATCH /api/v2/journey/actiontemplates/{actionTemplateId}][%d] patchJourneyActiontemplateConflict  %+v", 409, o.Payload)
}

func (o *PatchJourneyActiontemplateConflict) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchJourneyActiontemplateConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchJourneyActiontemplateRequestEntityTooLarge creates a PatchJourneyActiontemplateRequestEntityTooLarge with default headers values
func NewPatchJourneyActiontemplateRequestEntityTooLarge() *PatchJourneyActiontemplateRequestEntityTooLarge {
	return &PatchJourneyActiontemplateRequestEntityTooLarge{}
}

/*
PatchJourneyActiontemplateRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PatchJourneyActiontemplateRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch journey actiontemplate request entity too large response has a 2xx status code
func (o *PatchJourneyActiontemplateRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch journey actiontemplate request entity too large response has a 3xx status code
func (o *PatchJourneyActiontemplateRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch journey actiontemplate request entity too large response has a 4xx status code
func (o *PatchJourneyActiontemplateRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch journey actiontemplate request entity too large response has a 5xx status code
func (o *PatchJourneyActiontemplateRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this patch journey actiontemplate request entity too large response a status code equal to that given
func (o *PatchJourneyActiontemplateRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PatchJourneyActiontemplateRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/journey/actiontemplates/{actionTemplateId}][%d] patchJourneyActiontemplateRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PatchJourneyActiontemplateRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PATCH /api/v2/journey/actiontemplates/{actionTemplateId}][%d] patchJourneyActiontemplateRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PatchJourneyActiontemplateRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchJourneyActiontemplateRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchJourneyActiontemplateUnsupportedMediaType creates a PatchJourneyActiontemplateUnsupportedMediaType with default headers values
func NewPatchJourneyActiontemplateUnsupportedMediaType() *PatchJourneyActiontemplateUnsupportedMediaType {
	return &PatchJourneyActiontemplateUnsupportedMediaType{}
}

/*
PatchJourneyActiontemplateUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PatchJourneyActiontemplateUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch journey actiontemplate unsupported media type response has a 2xx status code
func (o *PatchJourneyActiontemplateUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch journey actiontemplate unsupported media type response has a 3xx status code
func (o *PatchJourneyActiontemplateUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch journey actiontemplate unsupported media type response has a 4xx status code
func (o *PatchJourneyActiontemplateUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch journey actiontemplate unsupported media type response has a 5xx status code
func (o *PatchJourneyActiontemplateUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this patch journey actiontemplate unsupported media type response a status code equal to that given
func (o *PatchJourneyActiontemplateUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PatchJourneyActiontemplateUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/journey/actiontemplates/{actionTemplateId}][%d] patchJourneyActiontemplateUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchJourneyActiontemplateUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PATCH /api/v2/journey/actiontemplates/{actionTemplateId}][%d] patchJourneyActiontemplateUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchJourneyActiontemplateUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchJourneyActiontemplateUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchJourneyActiontemplateTooManyRequests creates a PatchJourneyActiontemplateTooManyRequests with default headers values
func NewPatchJourneyActiontemplateTooManyRequests() *PatchJourneyActiontemplateTooManyRequests {
	return &PatchJourneyActiontemplateTooManyRequests{}
}

/*
PatchJourneyActiontemplateTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PatchJourneyActiontemplateTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch journey actiontemplate too many requests response has a 2xx status code
func (o *PatchJourneyActiontemplateTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch journey actiontemplate too many requests response has a 3xx status code
func (o *PatchJourneyActiontemplateTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch journey actiontemplate too many requests response has a 4xx status code
func (o *PatchJourneyActiontemplateTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch journey actiontemplate too many requests response has a 5xx status code
func (o *PatchJourneyActiontemplateTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this patch journey actiontemplate too many requests response a status code equal to that given
func (o *PatchJourneyActiontemplateTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PatchJourneyActiontemplateTooManyRequests) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/journey/actiontemplates/{actionTemplateId}][%d] patchJourneyActiontemplateTooManyRequests  %+v", 429, o.Payload)
}

func (o *PatchJourneyActiontemplateTooManyRequests) String() string {
	return fmt.Sprintf("[PATCH /api/v2/journey/actiontemplates/{actionTemplateId}][%d] patchJourneyActiontemplateTooManyRequests  %+v", 429, o.Payload)
}

func (o *PatchJourneyActiontemplateTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchJourneyActiontemplateTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchJourneyActiontemplateInternalServerError creates a PatchJourneyActiontemplateInternalServerError with default headers values
func NewPatchJourneyActiontemplateInternalServerError() *PatchJourneyActiontemplateInternalServerError {
	return &PatchJourneyActiontemplateInternalServerError{}
}

/*
PatchJourneyActiontemplateInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PatchJourneyActiontemplateInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch journey actiontemplate internal server error response has a 2xx status code
func (o *PatchJourneyActiontemplateInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch journey actiontemplate internal server error response has a 3xx status code
func (o *PatchJourneyActiontemplateInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch journey actiontemplate internal server error response has a 4xx status code
func (o *PatchJourneyActiontemplateInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch journey actiontemplate internal server error response has a 5xx status code
func (o *PatchJourneyActiontemplateInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this patch journey actiontemplate internal server error response a status code equal to that given
func (o *PatchJourneyActiontemplateInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PatchJourneyActiontemplateInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/journey/actiontemplates/{actionTemplateId}][%d] patchJourneyActiontemplateInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchJourneyActiontemplateInternalServerError) String() string {
	return fmt.Sprintf("[PATCH /api/v2/journey/actiontemplates/{actionTemplateId}][%d] patchJourneyActiontemplateInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchJourneyActiontemplateInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchJourneyActiontemplateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchJourneyActiontemplateServiceUnavailable creates a PatchJourneyActiontemplateServiceUnavailable with default headers values
func NewPatchJourneyActiontemplateServiceUnavailable() *PatchJourneyActiontemplateServiceUnavailable {
	return &PatchJourneyActiontemplateServiceUnavailable{}
}

/*
PatchJourneyActiontemplateServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PatchJourneyActiontemplateServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch journey actiontemplate service unavailable response has a 2xx status code
func (o *PatchJourneyActiontemplateServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch journey actiontemplate service unavailable response has a 3xx status code
func (o *PatchJourneyActiontemplateServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch journey actiontemplate service unavailable response has a 4xx status code
func (o *PatchJourneyActiontemplateServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch journey actiontemplate service unavailable response has a 5xx status code
func (o *PatchJourneyActiontemplateServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this patch journey actiontemplate service unavailable response a status code equal to that given
func (o *PatchJourneyActiontemplateServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PatchJourneyActiontemplateServiceUnavailable) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/journey/actiontemplates/{actionTemplateId}][%d] patchJourneyActiontemplateServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PatchJourneyActiontemplateServiceUnavailable) String() string {
	return fmt.Sprintf("[PATCH /api/v2/journey/actiontemplates/{actionTemplateId}][%d] patchJourneyActiontemplateServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PatchJourneyActiontemplateServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchJourneyActiontemplateServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchJourneyActiontemplateGatewayTimeout creates a PatchJourneyActiontemplateGatewayTimeout with default headers values
func NewPatchJourneyActiontemplateGatewayTimeout() *PatchJourneyActiontemplateGatewayTimeout {
	return &PatchJourneyActiontemplateGatewayTimeout{}
}

/*
PatchJourneyActiontemplateGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PatchJourneyActiontemplateGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch journey actiontemplate gateway timeout response has a 2xx status code
func (o *PatchJourneyActiontemplateGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch journey actiontemplate gateway timeout response has a 3xx status code
func (o *PatchJourneyActiontemplateGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch journey actiontemplate gateway timeout response has a 4xx status code
func (o *PatchJourneyActiontemplateGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch journey actiontemplate gateway timeout response has a 5xx status code
func (o *PatchJourneyActiontemplateGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this patch journey actiontemplate gateway timeout response a status code equal to that given
func (o *PatchJourneyActiontemplateGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PatchJourneyActiontemplateGatewayTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/journey/actiontemplates/{actionTemplateId}][%d] patchJourneyActiontemplateGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PatchJourneyActiontemplateGatewayTimeout) String() string {
	return fmt.Sprintf("[PATCH /api/v2/journey/actiontemplates/{actionTemplateId}][%d] patchJourneyActiontemplateGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PatchJourneyActiontemplateGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchJourneyActiontemplateGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
