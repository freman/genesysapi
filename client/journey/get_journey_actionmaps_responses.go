// Code generated by go-swagger; DO NOT EDIT.

package journey

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetJourneyActionmapsReader is a Reader for the GetJourneyActionmaps structure.
type GetJourneyActionmapsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetJourneyActionmapsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetJourneyActionmapsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetJourneyActionmapsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetJourneyActionmapsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetJourneyActionmapsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetJourneyActionmapsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetJourneyActionmapsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetJourneyActionmapsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetJourneyActionmapsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetJourneyActionmapsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetJourneyActionmapsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetJourneyActionmapsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetJourneyActionmapsOK creates a GetJourneyActionmapsOK with default headers values
func NewGetJourneyActionmapsOK() *GetJourneyActionmapsOK {
	return &GetJourneyActionmapsOK{}
}

/*GetJourneyActionmapsOK handles this case with default header values.

successful operation
*/
type GetJourneyActionmapsOK struct {
	Payload *models.ActionMapListing
}

func (o *GetJourneyActionmapsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/actionmaps][%d] getJourneyActionmapsOK  %+v", 200, o.Payload)
}

func (o *GetJourneyActionmapsOK) GetPayload() *models.ActionMapListing {
	return o.Payload
}

func (o *GetJourneyActionmapsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ActionMapListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneyActionmapsBadRequest creates a GetJourneyActionmapsBadRequest with default headers values
func NewGetJourneyActionmapsBadRequest() *GetJourneyActionmapsBadRequest {
	return &GetJourneyActionmapsBadRequest{}
}

/*GetJourneyActionmapsBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetJourneyActionmapsBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetJourneyActionmapsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/actionmaps][%d] getJourneyActionmapsBadRequest  %+v", 400, o.Payload)
}

func (o *GetJourneyActionmapsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneyActionmapsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneyActionmapsUnauthorized creates a GetJourneyActionmapsUnauthorized with default headers values
func NewGetJourneyActionmapsUnauthorized() *GetJourneyActionmapsUnauthorized {
	return &GetJourneyActionmapsUnauthorized{}
}

/*GetJourneyActionmapsUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetJourneyActionmapsUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetJourneyActionmapsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/actionmaps][%d] getJourneyActionmapsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetJourneyActionmapsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneyActionmapsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneyActionmapsForbidden creates a GetJourneyActionmapsForbidden with default headers values
func NewGetJourneyActionmapsForbidden() *GetJourneyActionmapsForbidden {
	return &GetJourneyActionmapsForbidden{}
}

/*GetJourneyActionmapsForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetJourneyActionmapsForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetJourneyActionmapsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/actionmaps][%d] getJourneyActionmapsForbidden  %+v", 403, o.Payload)
}

func (o *GetJourneyActionmapsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneyActionmapsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneyActionmapsNotFound creates a GetJourneyActionmapsNotFound with default headers values
func NewGetJourneyActionmapsNotFound() *GetJourneyActionmapsNotFound {
	return &GetJourneyActionmapsNotFound{}
}

/*GetJourneyActionmapsNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetJourneyActionmapsNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetJourneyActionmapsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/actionmaps][%d] getJourneyActionmapsNotFound  %+v", 404, o.Payload)
}

func (o *GetJourneyActionmapsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneyActionmapsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneyActionmapsRequestEntityTooLarge creates a GetJourneyActionmapsRequestEntityTooLarge with default headers values
func NewGetJourneyActionmapsRequestEntityTooLarge() *GetJourneyActionmapsRequestEntityTooLarge {
	return &GetJourneyActionmapsRequestEntityTooLarge{}
}

/*GetJourneyActionmapsRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetJourneyActionmapsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetJourneyActionmapsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/actionmaps][%d] getJourneyActionmapsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetJourneyActionmapsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneyActionmapsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneyActionmapsUnsupportedMediaType creates a GetJourneyActionmapsUnsupportedMediaType with default headers values
func NewGetJourneyActionmapsUnsupportedMediaType() *GetJourneyActionmapsUnsupportedMediaType {
	return &GetJourneyActionmapsUnsupportedMediaType{}
}

/*GetJourneyActionmapsUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetJourneyActionmapsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetJourneyActionmapsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/actionmaps][%d] getJourneyActionmapsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetJourneyActionmapsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneyActionmapsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneyActionmapsTooManyRequests creates a GetJourneyActionmapsTooManyRequests with default headers values
func NewGetJourneyActionmapsTooManyRequests() *GetJourneyActionmapsTooManyRequests {
	return &GetJourneyActionmapsTooManyRequests{}
}

/*GetJourneyActionmapsTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type GetJourneyActionmapsTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetJourneyActionmapsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/actionmaps][%d] getJourneyActionmapsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetJourneyActionmapsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneyActionmapsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneyActionmapsInternalServerError creates a GetJourneyActionmapsInternalServerError with default headers values
func NewGetJourneyActionmapsInternalServerError() *GetJourneyActionmapsInternalServerError {
	return &GetJourneyActionmapsInternalServerError{}
}

/*GetJourneyActionmapsInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetJourneyActionmapsInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetJourneyActionmapsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/actionmaps][%d] getJourneyActionmapsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetJourneyActionmapsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneyActionmapsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneyActionmapsServiceUnavailable creates a GetJourneyActionmapsServiceUnavailable with default headers values
func NewGetJourneyActionmapsServiceUnavailable() *GetJourneyActionmapsServiceUnavailable {
	return &GetJourneyActionmapsServiceUnavailable{}
}

/*GetJourneyActionmapsServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetJourneyActionmapsServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetJourneyActionmapsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/actionmaps][%d] getJourneyActionmapsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetJourneyActionmapsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneyActionmapsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneyActionmapsGatewayTimeout creates a GetJourneyActionmapsGatewayTimeout with default headers values
func NewGetJourneyActionmapsGatewayTimeout() *GetJourneyActionmapsGatewayTimeout {
	return &GetJourneyActionmapsGatewayTimeout{}
}

/*GetJourneyActionmapsGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetJourneyActionmapsGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetJourneyActionmapsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/actionmaps][%d] getJourneyActionmapsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetJourneyActionmapsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneyActionmapsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
