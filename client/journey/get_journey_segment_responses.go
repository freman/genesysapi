// Code generated by go-swagger; DO NOT EDIT.

package journey

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetJourneySegmentReader is a Reader for the GetJourneySegment structure.
type GetJourneySegmentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetJourneySegmentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetJourneySegmentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetJourneySegmentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetJourneySegmentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetJourneySegmentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetJourneySegmentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetJourneySegmentRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetJourneySegmentRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetJourneySegmentUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetJourneySegmentTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetJourneySegmentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetJourneySegmentServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetJourneySegmentGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetJourneySegmentOK creates a GetJourneySegmentOK with default headers values
func NewGetJourneySegmentOK() *GetJourneySegmentOK {
	return &GetJourneySegmentOK{}
}

/*
GetJourneySegmentOK describes a response with status code 200, with default header values.

successful operation
*/
type GetJourneySegmentOK struct {
	Payload *models.JourneySegment
}

// IsSuccess returns true when this get journey segment o k response has a 2xx status code
func (o *GetJourneySegmentOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get journey segment o k response has a 3xx status code
func (o *GetJourneySegmentOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get journey segment o k response has a 4xx status code
func (o *GetJourneySegmentOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get journey segment o k response has a 5xx status code
func (o *GetJourneySegmentOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get journey segment o k response a status code equal to that given
func (o *GetJourneySegmentOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetJourneySegmentOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/segments/{segmentId}][%d] getJourneySegmentOK  %+v", 200, o.Payload)
}

func (o *GetJourneySegmentOK) String() string {
	return fmt.Sprintf("[GET /api/v2/journey/segments/{segmentId}][%d] getJourneySegmentOK  %+v", 200, o.Payload)
}

func (o *GetJourneySegmentOK) GetPayload() *models.JourneySegment {
	return o.Payload
}

func (o *GetJourneySegmentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.JourneySegment)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneySegmentBadRequest creates a GetJourneySegmentBadRequest with default headers values
func NewGetJourneySegmentBadRequest() *GetJourneySegmentBadRequest {
	return &GetJourneySegmentBadRequest{}
}

/*
GetJourneySegmentBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetJourneySegmentBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get journey segment bad request response has a 2xx status code
func (o *GetJourneySegmentBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get journey segment bad request response has a 3xx status code
func (o *GetJourneySegmentBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get journey segment bad request response has a 4xx status code
func (o *GetJourneySegmentBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get journey segment bad request response has a 5xx status code
func (o *GetJourneySegmentBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get journey segment bad request response a status code equal to that given
func (o *GetJourneySegmentBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetJourneySegmentBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/segments/{segmentId}][%d] getJourneySegmentBadRequest  %+v", 400, o.Payload)
}

func (o *GetJourneySegmentBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/journey/segments/{segmentId}][%d] getJourneySegmentBadRequest  %+v", 400, o.Payload)
}

func (o *GetJourneySegmentBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneySegmentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneySegmentUnauthorized creates a GetJourneySegmentUnauthorized with default headers values
func NewGetJourneySegmentUnauthorized() *GetJourneySegmentUnauthorized {
	return &GetJourneySegmentUnauthorized{}
}

/*
GetJourneySegmentUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetJourneySegmentUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get journey segment unauthorized response has a 2xx status code
func (o *GetJourneySegmentUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get journey segment unauthorized response has a 3xx status code
func (o *GetJourneySegmentUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get journey segment unauthorized response has a 4xx status code
func (o *GetJourneySegmentUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get journey segment unauthorized response has a 5xx status code
func (o *GetJourneySegmentUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get journey segment unauthorized response a status code equal to that given
func (o *GetJourneySegmentUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetJourneySegmentUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/segments/{segmentId}][%d] getJourneySegmentUnauthorized  %+v", 401, o.Payload)
}

func (o *GetJourneySegmentUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/journey/segments/{segmentId}][%d] getJourneySegmentUnauthorized  %+v", 401, o.Payload)
}

func (o *GetJourneySegmentUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneySegmentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneySegmentForbidden creates a GetJourneySegmentForbidden with default headers values
func NewGetJourneySegmentForbidden() *GetJourneySegmentForbidden {
	return &GetJourneySegmentForbidden{}
}

/*
GetJourneySegmentForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetJourneySegmentForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get journey segment forbidden response has a 2xx status code
func (o *GetJourneySegmentForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get journey segment forbidden response has a 3xx status code
func (o *GetJourneySegmentForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get journey segment forbidden response has a 4xx status code
func (o *GetJourneySegmentForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get journey segment forbidden response has a 5xx status code
func (o *GetJourneySegmentForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get journey segment forbidden response a status code equal to that given
func (o *GetJourneySegmentForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetJourneySegmentForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/segments/{segmentId}][%d] getJourneySegmentForbidden  %+v", 403, o.Payload)
}

func (o *GetJourneySegmentForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/journey/segments/{segmentId}][%d] getJourneySegmentForbidden  %+v", 403, o.Payload)
}

func (o *GetJourneySegmentForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneySegmentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneySegmentNotFound creates a GetJourneySegmentNotFound with default headers values
func NewGetJourneySegmentNotFound() *GetJourneySegmentNotFound {
	return &GetJourneySegmentNotFound{}
}

/*
GetJourneySegmentNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetJourneySegmentNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get journey segment not found response has a 2xx status code
func (o *GetJourneySegmentNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get journey segment not found response has a 3xx status code
func (o *GetJourneySegmentNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get journey segment not found response has a 4xx status code
func (o *GetJourneySegmentNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get journey segment not found response has a 5xx status code
func (o *GetJourneySegmentNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get journey segment not found response a status code equal to that given
func (o *GetJourneySegmentNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetJourneySegmentNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/segments/{segmentId}][%d] getJourneySegmentNotFound  %+v", 404, o.Payload)
}

func (o *GetJourneySegmentNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/journey/segments/{segmentId}][%d] getJourneySegmentNotFound  %+v", 404, o.Payload)
}

func (o *GetJourneySegmentNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneySegmentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneySegmentRequestTimeout creates a GetJourneySegmentRequestTimeout with default headers values
func NewGetJourneySegmentRequestTimeout() *GetJourneySegmentRequestTimeout {
	return &GetJourneySegmentRequestTimeout{}
}

/*
GetJourneySegmentRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetJourneySegmentRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get journey segment request timeout response has a 2xx status code
func (o *GetJourneySegmentRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get journey segment request timeout response has a 3xx status code
func (o *GetJourneySegmentRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get journey segment request timeout response has a 4xx status code
func (o *GetJourneySegmentRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get journey segment request timeout response has a 5xx status code
func (o *GetJourneySegmentRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get journey segment request timeout response a status code equal to that given
func (o *GetJourneySegmentRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetJourneySegmentRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/segments/{segmentId}][%d] getJourneySegmentRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetJourneySegmentRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/journey/segments/{segmentId}][%d] getJourneySegmentRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetJourneySegmentRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneySegmentRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneySegmentRequestEntityTooLarge creates a GetJourneySegmentRequestEntityTooLarge with default headers values
func NewGetJourneySegmentRequestEntityTooLarge() *GetJourneySegmentRequestEntityTooLarge {
	return &GetJourneySegmentRequestEntityTooLarge{}
}

/*
GetJourneySegmentRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetJourneySegmentRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get journey segment request entity too large response has a 2xx status code
func (o *GetJourneySegmentRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get journey segment request entity too large response has a 3xx status code
func (o *GetJourneySegmentRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get journey segment request entity too large response has a 4xx status code
func (o *GetJourneySegmentRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get journey segment request entity too large response has a 5xx status code
func (o *GetJourneySegmentRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get journey segment request entity too large response a status code equal to that given
func (o *GetJourneySegmentRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetJourneySegmentRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/segments/{segmentId}][%d] getJourneySegmentRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetJourneySegmentRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/journey/segments/{segmentId}][%d] getJourneySegmentRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetJourneySegmentRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneySegmentRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneySegmentUnsupportedMediaType creates a GetJourneySegmentUnsupportedMediaType with default headers values
func NewGetJourneySegmentUnsupportedMediaType() *GetJourneySegmentUnsupportedMediaType {
	return &GetJourneySegmentUnsupportedMediaType{}
}

/*
GetJourneySegmentUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetJourneySegmentUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get journey segment unsupported media type response has a 2xx status code
func (o *GetJourneySegmentUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get journey segment unsupported media type response has a 3xx status code
func (o *GetJourneySegmentUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get journey segment unsupported media type response has a 4xx status code
func (o *GetJourneySegmentUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get journey segment unsupported media type response has a 5xx status code
func (o *GetJourneySegmentUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get journey segment unsupported media type response a status code equal to that given
func (o *GetJourneySegmentUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetJourneySegmentUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/segments/{segmentId}][%d] getJourneySegmentUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetJourneySegmentUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/journey/segments/{segmentId}][%d] getJourneySegmentUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetJourneySegmentUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneySegmentUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneySegmentTooManyRequests creates a GetJourneySegmentTooManyRequests with default headers values
func NewGetJourneySegmentTooManyRequests() *GetJourneySegmentTooManyRequests {
	return &GetJourneySegmentTooManyRequests{}
}

/*
GetJourneySegmentTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetJourneySegmentTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get journey segment too many requests response has a 2xx status code
func (o *GetJourneySegmentTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get journey segment too many requests response has a 3xx status code
func (o *GetJourneySegmentTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get journey segment too many requests response has a 4xx status code
func (o *GetJourneySegmentTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get journey segment too many requests response has a 5xx status code
func (o *GetJourneySegmentTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get journey segment too many requests response a status code equal to that given
func (o *GetJourneySegmentTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetJourneySegmentTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/segments/{segmentId}][%d] getJourneySegmentTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetJourneySegmentTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/journey/segments/{segmentId}][%d] getJourneySegmentTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetJourneySegmentTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneySegmentTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneySegmentInternalServerError creates a GetJourneySegmentInternalServerError with default headers values
func NewGetJourneySegmentInternalServerError() *GetJourneySegmentInternalServerError {
	return &GetJourneySegmentInternalServerError{}
}

/*
GetJourneySegmentInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetJourneySegmentInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get journey segment internal server error response has a 2xx status code
func (o *GetJourneySegmentInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get journey segment internal server error response has a 3xx status code
func (o *GetJourneySegmentInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get journey segment internal server error response has a 4xx status code
func (o *GetJourneySegmentInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get journey segment internal server error response has a 5xx status code
func (o *GetJourneySegmentInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get journey segment internal server error response a status code equal to that given
func (o *GetJourneySegmentInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetJourneySegmentInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/segments/{segmentId}][%d] getJourneySegmentInternalServerError  %+v", 500, o.Payload)
}

func (o *GetJourneySegmentInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/journey/segments/{segmentId}][%d] getJourneySegmentInternalServerError  %+v", 500, o.Payload)
}

func (o *GetJourneySegmentInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneySegmentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneySegmentServiceUnavailable creates a GetJourneySegmentServiceUnavailable with default headers values
func NewGetJourneySegmentServiceUnavailable() *GetJourneySegmentServiceUnavailable {
	return &GetJourneySegmentServiceUnavailable{}
}

/*
GetJourneySegmentServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetJourneySegmentServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get journey segment service unavailable response has a 2xx status code
func (o *GetJourneySegmentServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get journey segment service unavailable response has a 3xx status code
func (o *GetJourneySegmentServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get journey segment service unavailable response has a 4xx status code
func (o *GetJourneySegmentServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get journey segment service unavailable response has a 5xx status code
func (o *GetJourneySegmentServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get journey segment service unavailable response a status code equal to that given
func (o *GetJourneySegmentServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetJourneySegmentServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/segments/{segmentId}][%d] getJourneySegmentServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetJourneySegmentServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/journey/segments/{segmentId}][%d] getJourneySegmentServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetJourneySegmentServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneySegmentServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneySegmentGatewayTimeout creates a GetJourneySegmentGatewayTimeout with default headers values
func NewGetJourneySegmentGatewayTimeout() *GetJourneySegmentGatewayTimeout {
	return &GetJourneySegmentGatewayTimeout{}
}

/*
GetJourneySegmentGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetJourneySegmentGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get journey segment gateway timeout response has a 2xx status code
func (o *GetJourneySegmentGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get journey segment gateway timeout response has a 3xx status code
func (o *GetJourneySegmentGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get journey segment gateway timeout response has a 4xx status code
func (o *GetJourneySegmentGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get journey segment gateway timeout response has a 5xx status code
func (o *GetJourneySegmentGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get journey segment gateway timeout response a status code equal to that given
func (o *GetJourneySegmentGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetJourneySegmentGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/segments/{segmentId}][%d] getJourneySegmentGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetJourneySegmentGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/journey/segments/{segmentId}][%d] getJourneySegmentGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetJourneySegmentGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneySegmentGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
