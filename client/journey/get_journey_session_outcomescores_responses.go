// Code generated by go-swagger; DO NOT EDIT.

package journey

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetJourneySessionOutcomescoresReader is a Reader for the GetJourneySessionOutcomescores structure.
type GetJourneySessionOutcomescoresReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetJourneySessionOutcomescoresReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetJourneySessionOutcomescoresOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetJourneySessionOutcomescoresBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetJourneySessionOutcomescoresUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetJourneySessionOutcomescoresForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetJourneySessionOutcomescoresNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetJourneySessionOutcomescoresRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetJourneySessionOutcomescoresRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetJourneySessionOutcomescoresUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetJourneySessionOutcomescoresTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetJourneySessionOutcomescoresInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetJourneySessionOutcomescoresServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetJourneySessionOutcomescoresGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetJourneySessionOutcomescoresOK creates a GetJourneySessionOutcomescoresOK with default headers values
func NewGetJourneySessionOutcomescoresOK() *GetJourneySessionOutcomescoresOK {
	return &GetJourneySessionOutcomescoresOK{}
}

/*GetJourneySessionOutcomescoresOK handles this case with default header values.

successful operation
*/
type GetJourneySessionOutcomescoresOK struct {
	Payload *models.OutcomeScoresResult
}

func (o *GetJourneySessionOutcomescoresOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/sessions/{sessionId}/outcomescores][%d] getJourneySessionOutcomescoresOK  %+v", 200, o.Payload)
}

func (o *GetJourneySessionOutcomescoresOK) GetPayload() *models.OutcomeScoresResult {
	return o.Payload
}

func (o *GetJourneySessionOutcomescoresOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OutcomeScoresResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneySessionOutcomescoresBadRequest creates a GetJourneySessionOutcomescoresBadRequest with default headers values
func NewGetJourneySessionOutcomescoresBadRequest() *GetJourneySessionOutcomescoresBadRequest {
	return &GetJourneySessionOutcomescoresBadRequest{}
}

/*GetJourneySessionOutcomescoresBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetJourneySessionOutcomescoresBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetJourneySessionOutcomescoresBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/sessions/{sessionId}/outcomescores][%d] getJourneySessionOutcomescoresBadRequest  %+v", 400, o.Payload)
}

func (o *GetJourneySessionOutcomescoresBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneySessionOutcomescoresBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneySessionOutcomescoresUnauthorized creates a GetJourneySessionOutcomescoresUnauthorized with default headers values
func NewGetJourneySessionOutcomescoresUnauthorized() *GetJourneySessionOutcomescoresUnauthorized {
	return &GetJourneySessionOutcomescoresUnauthorized{}
}

/*GetJourneySessionOutcomescoresUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetJourneySessionOutcomescoresUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetJourneySessionOutcomescoresUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/sessions/{sessionId}/outcomescores][%d] getJourneySessionOutcomescoresUnauthorized  %+v", 401, o.Payload)
}

func (o *GetJourneySessionOutcomescoresUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneySessionOutcomescoresUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneySessionOutcomescoresForbidden creates a GetJourneySessionOutcomescoresForbidden with default headers values
func NewGetJourneySessionOutcomescoresForbidden() *GetJourneySessionOutcomescoresForbidden {
	return &GetJourneySessionOutcomescoresForbidden{}
}

/*GetJourneySessionOutcomescoresForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetJourneySessionOutcomescoresForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetJourneySessionOutcomescoresForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/sessions/{sessionId}/outcomescores][%d] getJourneySessionOutcomescoresForbidden  %+v", 403, o.Payload)
}

func (o *GetJourneySessionOutcomescoresForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneySessionOutcomescoresForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneySessionOutcomescoresNotFound creates a GetJourneySessionOutcomescoresNotFound with default headers values
func NewGetJourneySessionOutcomescoresNotFound() *GetJourneySessionOutcomescoresNotFound {
	return &GetJourneySessionOutcomescoresNotFound{}
}

/*GetJourneySessionOutcomescoresNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetJourneySessionOutcomescoresNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetJourneySessionOutcomescoresNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/sessions/{sessionId}/outcomescores][%d] getJourneySessionOutcomescoresNotFound  %+v", 404, o.Payload)
}

func (o *GetJourneySessionOutcomescoresNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneySessionOutcomescoresNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneySessionOutcomescoresRequestTimeout creates a GetJourneySessionOutcomescoresRequestTimeout with default headers values
func NewGetJourneySessionOutcomescoresRequestTimeout() *GetJourneySessionOutcomescoresRequestTimeout {
	return &GetJourneySessionOutcomescoresRequestTimeout{}
}

/*GetJourneySessionOutcomescoresRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetJourneySessionOutcomescoresRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetJourneySessionOutcomescoresRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/sessions/{sessionId}/outcomescores][%d] getJourneySessionOutcomescoresRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetJourneySessionOutcomescoresRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneySessionOutcomescoresRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneySessionOutcomescoresRequestEntityTooLarge creates a GetJourneySessionOutcomescoresRequestEntityTooLarge with default headers values
func NewGetJourneySessionOutcomescoresRequestEntityTooLarge() *GetJourneySessionOutcomescoresRequestEntityTooLarge {
	return &GetJourneySessionOutcomescoresRequestEntityTooLarge{}
}

/*GetJourneySessionOutcomescoresRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetJourneySessionOutcomescoresRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetJourneySessionOutcomescoresRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/sessions/{sessionId}/outcomescores][%d] getJourneySessionOutcomescoresRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetJourneySessionOutcomescoresRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneySessionOutcomescoresRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneySessionOutcomescoresUnsupportedMediaType creates a GetJourneySessionOutcomescoresUnsupportedMediaType with default headers values
func NewGetJourneySessionOutcomescoresUnsupportedMediaType() *GetJourneySessionOutcomescoresUnsupportedMediaType {
	return &GetJourneySessionOutcomescoresUnsupportedMediaType{}
}

/*GetJourneySessionOutcomescoresUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetJourneySessionOutcomescoresUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetJourneySessionOutcomescoresUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/sessions/{sessionId}/outcomescores][%d] getJourneySessionOutcomescoresUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetJourneySessionOutcomescoresUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneySessionOutcomescoresUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneySessionOutcomescoresTooManyRequests creates a GetJourneySessionOutcomescoresTooManyRequests with default headers values
func NewGetJourneySessionOutcomescoresTooManyRequests() *GetJourneySessionOutcomescoresTooManyRequests {
	return &GetJourneySessionOutcomescoresTooManyRequests{}
}

/*GetJourneySessionOutcomescoresTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetJourneySessionOutcomescoresTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetJourneySessionOutcomescoresTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/sessions/{sessionId}/outcomescores][%d] getJourneySessionOutcomescoresTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetJourneySessionOutcomescoresTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneySessionOutcomescoresTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneySessionOutcomescoresInternalServerError creates a GetJourneySessionOutcomescoresInternalServerError with default headers values
func NewGetJourneySessionOutcomescoresInternalServerError() *GetJourneySessionOutcomescoresInternalServerError {
	return &GetJourneySessionOutcomescoresInternalServerError{}
}

/*GetJourneySessionOutcomescoresInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetJourneySessionOutcomescoresInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetJourneySessionOutcomescoresInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/sessions/{sessionId}/outcomescores][%d] getJourneySessionOutcomescoresInternalServerError  %+v", 500, o.Payload)
}

func (o *GetJourneySessionOutcomescoresInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneySessionOutcomescoresInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneySessionOutcomescoresServiceUnavailable creates a GetJourneySessionOutcomescoresServiceUnavailable with default headers values
func NewGetJourneySessionOutcomescoresServiceUnavailable() *GetJourneySessionOutcomescoresServiceUnavailable {
	return &GetJourneySessionOutcomescoresServiceUnavailable{}
}

/*GetJourneySessionOutcomescoresServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetJourneySessionOutcomescoresServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetJourneySessionOutcomescoresServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/sessions/{sessionId}/outcomescores][%d] getJourneySessionOutcomescoresServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetJourneySessionOutcomescoresServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneySessionOutcomescoresServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneySessionOutcomescoresGatewayTimeout creates a GetJourneySessionOutcomescoresGatewayTimeout with default headers values
func NewGetJourneySessionOutcomescoresGatewayTimeout() *GetJourneySessionOutcomescoresGatewayTimeout {
	return &GetJourneySessionOutcomescoresGatewayTimeout{}
}

/*GetJourneySessionOutcomescoresGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetJourneySessionOutcomescoresGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetJourneySessionOutcomescoresGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/sessions/{sessionId}/outcomescores][%d] getJourneySessionOutcomescoresGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetJourneySessionOutcomescoresGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneySessionOutcomescoresGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
