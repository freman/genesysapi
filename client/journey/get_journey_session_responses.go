// Code generated by go-swagger; DO NOT EDIT.

package journey

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetJourneySessionReader is a Reader for the GetJourneySession structure.
type GetJourneySessionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetJourneySessionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetJourneySessionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetJourneySessionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetJourneySessionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetJourneySessionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetJourneySessionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetJourneySessionRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetJourneySessionRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetJourneySessionUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetJourneySessionTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetJourneySessionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetJourneySessionServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetJourneySessionGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetJourneySessionOK creates a GetJourneySessionOK with default headers values
func NewGetJourneySessionOK() *GetJourneySessionOK {
	return &GetJourneySessionOK{}
}

/*GetJourneySessionOK handles this case with default header values.

successful operation
*/
type GetJourneySessionOK struct {
	Payload *models.Session
}

func (o *GetJourneySessionOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/sessions/{sessionId}][%d] getJourneySessionOK  %+v", 200, o.Payload)
}

func (o *GetJourneySessionOK) GetPayload() *models.Session {
	return o.Payload
}

func (o *GetJourneySessionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Session)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneySessionBadRequest creates a GetJourneySessionBadRequest with default headers values
func NewGetJourneySessionBadRequest() *GetJourneySessionBadRequest {
	return &GetJourneySessionBadRequest{}
}

/*GetJourneySessionBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetJourneySessionBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetJourneySessionBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/sessions/{sessionId}][%d] getJourneySessionBadRequest  %+v", 400, o.Payload)
}

func (o *GetJourneySessionBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneySessionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneySessionUnauthorized creates a GetJourneySessionUnauthorized with default headers values
func NewGetJourneySessionUnauthorized() *GetJourneySessionUnauthorized {
	return &GetJourneySessionUnauthorized{}
}

/*GetJourneySessionUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetJourneySessionUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetJourneySessionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/sessions/{sessionId}][%d] getJourneySessionUnauthorized  %+v", 401, o.Payload)
}

func (o *GetJourneySessionUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneySessionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneySessionForbidden creates a GetJourneySessionForbidden with default headers values
func NewGetJourneySessionForbidden() *GetJourneySessionForbidden {
	return &GetJourneySessionForbidden{}
}

/*GetJourneySessionForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetJourneySessionForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetJourneySessionForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/sessions/{sessionId}][%d] getJourneySessionForbidden  %+v", 403, o.Payload)
}

func (o *GetJourneySessionForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneySessionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneySessionNotFound creates a GetJourneySessionNotFound with default headers values
func NewGetJourneySessionNotFound() *GetJourneySessionNotFound {
	return &GetJourneySessionNotFound{}
}

/*GetJourneySessionNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetJourneySessionNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetJourneySessionNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/sessions/{sessionId}][%d] getJourneySessionNotFound  %+v", 404, o.Payload)
}

func (o *GetJourneySessionNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneySessionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneySessionRequestTimeout creates a GetJourneySessionRequestTimeout with default headers values
func NewGetJourneySessionRequestTimeout() *GetJourneySessionRequestTimeout {
	return &GetJourneySessionRequestTimeout{}
}

/*GetJourneySessionRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetJourneySessionRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetJourneySessionRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/sessions/{sessionId}][%d] getJourneySessionRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetJourneySessionRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneySessionRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneySessionRequestEntityTooLarge creates a GetJourneySessionRequestEntityTooLarge with default headers values
func NewGetJourneySessionRequestEntityTooLarge() *GetJourneySessionRequestEntityTooLarge {
	return &GetJourneySessionRequestEntityTooLarge{}
}

/*GetJourneySessionRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetJourneySessionRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetJourneySessionRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/sessions/{sessionId}][%d] getJourneySessionRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetJourneySessionRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneySessionRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneySessionUnsupportedMediaType creates a GetJourneySessionUnsupportedMediaType with default headers values
func NewGetJourneySessionUnsupportedMediaType() *GetJourneySessionUnsupportedMediaType {
	return &GetJourneySessionUnsupportedMediaType{}
}

/*GetJourneySessionUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetJourneySessionUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetJourneySessionUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/sessions/{sessionId}][%d] getJourneySessionUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetJourneySessionUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneySessionUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneySessionTooManyRequests creates a GetJourneySessionTooManyRequests with default headers values
func NewGetJourneySessionTooManyRequests() *GetJourneySessionTooManyRequests {
	return &GetJourneySessionTooManyRequests{}
}

/*GetJourneySessionTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetJourneySessionTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetJourneySessionTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/sessions/{sessionId}][%d] getJourneySessionTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetJourneySessionTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneySessionTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneySessionInternalServerError creates a GetJourneySessionInternalServerError with default headers values
func NewGetJourneySessionInternalServerError() *GetJourneySessionInternalServerError {
	return &GetJourneySessionInternalServerError{}
}

/*GetJourneySessionInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetJourneySessionInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetJourneySessionInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/sessions/{sessionId}][%d] getJourneySessionInternalServerError  %+v", 500, o.Payload)
}

func (o *GetJourneySessionInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneySessionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneySessionServiceUnavailable creates a GetJourneySessionServiceUnavailable with default headers values
func NewGetJourneySessionServiceUnavailable() *GetJourneySessionServiceUnavailable {
	return &GetJourneySessionServiceUnavailable{}
}

/*GetJourneySessionServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetJourneySessionServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetJourneySessionServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/sessions/{sessionId}][%d] getJourneySessionServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetJourneySessionServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneySessionServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneySessionGatewayTimeout creates a GetJourneySessionGatewayTimeout with default headers values
func NewGetJourneySessionGatewayTimeout() *GetJourneySessionGatewayTimeout {
	return &GetJourneySessionGatewayTimeout{}
}

/*GetJourneySessionGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetJourneySessionGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetJourneySessionGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/sessions/{sessionId}][%d] getJourneySessionGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetJourneySessionGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneySessionGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
