// Code generated by go-swagger; DO NOT EDIT.

package journey

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// NewPatchJourneyActiontargetParams creates a new PatchJourneyActiontargetParams object
// with the default values initialized.
func NewPatchJourneyActiontargetParams() *PatchJourneyActiontargetParams {
	var ()
	return &PatchJourneyActiontargetParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPatchJourneyActiontargetParamsWithTimeout creates a new PatchJourneyActiontargetParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPatchJourneyActiontargetParamsWithTimeout(timeout time.Duration) *PatchJourneyActiontargetParams {
	var ()
	return &PatchJourneyActiontargetParams{

		timeout: timeout,
	}
}

// NewPatchJourneyActiontargetParamsWithContext creates a new PatchJourneyActiontargetParams object
// with the default values initialized, and the ability to set a context for a request
func NewPatchJourneyActiontargetParamsWithContext(ctx context.Context) *PatchJourneyActiontargetParams {
	var ()
	return &PatchJourneyActiontargetParams{

		Context: ctx,
	}
}

// NewPatchJourneyActiontargetParamsWithHTTPClient creates a new PatchJourneyActiontargetParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPatchJourneyActiontargetParamsWithHTTPClient(client *http.Client) *PatchJourneyActiontargetParams {
	var ()
	return &PatchJourneyActiontargetParams{
		HTTPClient: client,
	}
}

/*PatchJourneyActiontargetParams contains all the parameters to send to the API endpoint
for the patch journey actiontarget operation typically these are written to a http.Request
*/
type PatchJourneyActiontargetParams struct {

	/*ActionTargetID
	  ID of the action target.

	*/
	ActionTargetID string
	/*Body*/
	Body *models.PatchActionTarget

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the patch journey actiontarget params
func (o *PatchJourneyActiontargetParams) WithTimeout(timeout time.Duration) *PatchJourneyActiontargetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the patch journey actiontarget params
func (o *PatchJourneyActiontargetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the patch journey actiontarget params
func (o *PatchJourneyActiontargetParams) WithContext(ctx context.Context) *PatchJourneyActiontargetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the patch journey actiontarget params
func (o *PatchJourneyActiontargetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the patch journey actiontarget params
func (o *PatchJourneyActiontargetParams) WithHTTPClient(client *http.Client) *PatchJourneyActiontargetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the patch journey actiontarget params
func (o *PatchJourneyActiontargetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithActionTargetID adds the actionTargetID to the patch journey actiontarget params
func (o *PatchJourneyActiontargetParams) WithActionTargetID(actionTargetID string) *PatchJourneyActiontargetParams {
	o.SetActionTargetID(actionTargetID)
	return o
}

// SetActionTargetID adds the actionTargetId to the patch journey actiontarget params
func (o *PatchJourneyActiontargetParams) SetActionTargetID(actionTargetID string) {
	o.ActionTargetID = actionTargetID
}

// WithBody adds the body to the patch journey actiontarget params
func (o *PatchJourneyActiontargetParams) WithBody(body *models.PatchActionTarget) *PatchJourneyActiontargetParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the patch journey actiontarget params
func (o *PatchJourneyActiontargetParams) SetBody(body *models.PatchActionTarget) {
	o.Body = body
}

// WriteToRequest writes these params to a swagger request
func (o *PatchJourneyActiontargetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param actionTargetId
	if err := r.SetPathParam("actionTargetId", o.ActionTargetID); err != nil {
		return err
	}

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
