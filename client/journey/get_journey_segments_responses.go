// Code generated by go-swagger; DO NOT EDIT.

package journey

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetJourneySegmentsReader is a Reader for the GetJourneySegments structure.
type GetJourneySegmentsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetJourneySegmentsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetJourneySegmentsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetJourneySegmentsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetJourneySegmentsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetJourneySegmentsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetJourneySegmentsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetJourneySegmentsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetJourneySegmentsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetJourneySegmentsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetJourneySegmentsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetJourneySegmentsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetJourneySegmentsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetJourneySegmentsOK creates a GetJourneySegmentsOK with default headers values
func NewGetJourneySegmentsOK() *GetJourneySegmentsOK {
	return &GetJourneySegmentsOK{}
}

/*GetJourneySegmentsOK handles this case with default header values.

successful operation
*/
type GetJourneySegmentsOK struct {
	Payload *models.SegmentListing
}

func (o *GetJourneySegmentsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/segments][%d] getJourneySegmentsOK  %+v", 200, o.Payload)
}

func (o *GetJourneySegmentsOK) GetPayload() *models.SegmentListing {
	return o.Payload
}

func (o *GetJourneySegmentsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SegmentListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneySegmentsBadRequest creates a GetJourneySegmentsBadRequest with default headers values
func NewGetJourneySegmentsBadRequest() *GetJourneySegmentsBadRequest {
	return &GetJourneySegmentsBadRequest{}
}

/*GetJourneySegmentsBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetJourneySegmentsBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetJourneySegmentsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/segments][%d] getJourneySegmentsBadRequest  %+v", 400, o.Payload)
}

func (o *GetJourneySegmentsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneySegmentsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneySegmentsUnauthorized creates a GetJourneySegmentsUnauthorized with default headers values
func NewGetJourneySegmentsUnauthorized() *GetJourneySegmentsUnauthorized {
	return &GetJourneySegmentsUnauthorized{}
}

/*GetJourneySegmentsUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetJourneySegmentsUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetJourneySegmentsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/segments][%d] getJourneySegmentsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetJourneySegmentsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneySegmentsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneySegmentsForbidden creates a GetJourneySegmentsForbidden with default headers values
func NewGetJourneySegmentsForbidden() *GetJourneySegmentsForbidden {
	return &GetJourneySegmentsForbidden{}
}

/*GetJourneySegmentsForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetJourneySegmentsForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetJourneySegmentsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/segments][%d] getJourneySegmentsForbidden  %+v", 403, o.Payload)
}

func (o *GetJourneySegmentsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneySegmentsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneySegmentsNotFound creates a GetJourneySegmentsNotFound with default headers values
func NewGetJourneySegmentsNotFound() *GetJourneySegmentsNotFound {
	return &GetJourneySegmentsNotFound{}
}

/*GetJourneySegmentsNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetJourneySegmentsNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetJourneySegmentsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/segments][%d] getJourneySegmentsNotFound  %+v", 404, o.Payload)
}

func (o *GetJourneySegmentsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneySegmentsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneySegmentsRequestEntityTooLarge creates a GetJourneySegmentsRequestEntityTooLarge with default headers values
func NewGetJourneySegmentsRequestEntityTooLarge() *GetJourneySegmentsRequestEntityTooLarge {
	return &GetJourneySegmentsRequestEntityTooLarge{}
}

/*GetJourneySegmentsRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetJourneySegmentsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetJourneySegmentsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/segments][%d] getJourneySegmentsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetJourneySegmentsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneySegmentsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneySegmentsUnsupportedMediaType creates a GetJourneySegmentsUnsupportedMediaType with default headers values
func NewGetJourneySegmentsUnsupportedMediaType() *GetJourneySegmentsUnsupportedMediaType {
	return &GetJourneySegmentsUnsupportedMediaType{}
}

/*GetJourneySegmentsUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetJourneySegmentsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetJourneySegmentsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/segments][%d] getJourneySegmentsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetJourneySegmentsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneySegmentsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneySegmentsTooManyRequests creates a GetJourneySegmentsTooManyRequests with default headers values
func NewGetJourneySegmentsTooManyRequests() *GetJourneySegmentsTooManyRequests {
	return &GetJourneySegmentsTooManyRequests{}
}

/*GetJourneySegmentsTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type GetJourneySegmentsTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetJourneySegmentsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/segments][%d] getJourneySegmentsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetJourneySegmentsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneySegmentsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneySegmentsInternalServerError creates a GetJourneySegmentsInternalServerError with default headers values
func NewGetJourneySegmentsInternalServerError() *GetJourneySegmentsInternalServerError {
	return &GetJourneySegmentsInternalServerError{}
}

/*GetJourneySegmentsInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetJourneySegmentsInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetJourneySegmentsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/segments][%d] getJourneySegmentsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetJourneySegmentsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneySegmentsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneySegmentsServiceUnavailable creates a GetJourneySegmentsServiceUnavailable with default headers values
func NewGetJourneySegmentsServiceUnavailable() *GetJourneySegmentsServiceUnavailable {
	return &GetJourneySegmentsServiceUnavailable{}
}

/*GetJourneySegmentsServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetJourneySegmentsServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetJourneySegmentsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/segments][%d] getJourneySegmentsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetJourneySegmentsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneySegmentsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJourneySegmentsGatewayTimeout creates a GetJourneySegmentsGatewayTimeout with default headers values
func NewGetJourneySegmentsGatewayTimeout() *GetJourneySegmentsGatewayTimeout {
	return &GetJourneySegmentsGatewayTimeout{}
}

/*GetJourneySegmentsGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetJourneySegmentsGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetJourneySegmentsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/journey/segments][%d] getJourneySegmentsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetJourneySegmentsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetJourneySegmentsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
