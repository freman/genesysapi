// Code generated by go-swagger; DO NOT EDIT.

package identity_provider

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// DeleteIdentityprovidersAdfsReader is a Reader for the DeleteIdentityprovidersAdfs structure.
type DeleteIdentityprovidersAdfsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteIdentityprovidersAdfsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteIdentityprovidersAdfsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteIdentityprovidersAdfsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteIdentityprovidersAdfsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteIdentityprovidersAdfsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteIdentityprovidersAdfsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewDeleteIdentityprovidersAdfsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewDeleteIdentityprovidersAdfsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDeleteIdentityprovidersAdfsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteIdentityprovidersAdfsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteIdentityprovidersAdfsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteIdentityprovidersAdfsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteIdentityprovidersAdfsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteIdentityprovidersAdfsOK creates a DeleteIdentityprovidersAdfsOK with default headers values
func NewDeleteIdentityprovidersAdfsOK() *DeleteIdentityprovidersAdfsOK {
	return &DeleteIdentityprovidersAdfsOK{}
}

/*
DeleteIdentityprovidersAdfsOK describes a response with status code 200, with default header values.

successful operation
*/
type DeleteIdentityprovidersAdfsOK struct {
	Payload models.Empty
}

// IsSuccess returns true when this delete identityproviders adfs o k response has a 2xx status code
func (o *DeleteIdentityprovidersAdfsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete identityproviders adfs o k response has a 3xx status code
func (o *DeleteIdentityprovidersAdfsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identityproviders adfs o k response has a 4xx status code
func (o *DeleteIdentityprovidersAdfsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete identityproviders adfs o k response has a 5xx status code
func (o *DeleteIdentityprovidersAdfsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete identityproviders adfs o k response a status code equal to that given
func (o *DeleteIdentityprovidersAdfsOK) IsCode(code int) bool {
	return code == 200
}

func (o *DeleteIdentityprovidersAdfsOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/adfs][%d] deleteIdentityprovidersAdfsOK  %+v", 200, o.Payload)
}

func (o *DeleteIdentityprovidersAdfsOK) String() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/adfs][%d] deleteIdentityprovidersAdfsOK  %+v", 200, o.Payload)
}

func (o *DeleteIdentityprovidersAdfsOK) GetPayload() models.Empty {
	return o.Payload
}

func (o *DeleteIdentityprovidersAdfsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIdentityprovidersAdfsBadRequest creates a DeleteIdentityprovidersAdfsBadRequest with default headers values
func NewDeleteIdentityprovidersAdfsBadRequest() *DeleteIdentityprovidersAdfsBadRequest {
	return &DeleteIdentityprovidersAdfsBadRequest{}
}

/*
DeleteIdentityprovidersAdfsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type DeleteIdentityprovidersAdfsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete identityproviders adfs bad request response has a 2xx status code
func (o *DeleteIdentityprovidersAdfsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete identityproviders adfs bad request response has a 3xx status code
func (o *DeleteIdentityprovidersAdfsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identityproviders adfs bad request response has a 4xx status code
func (o *DeleteIdentityprovidersAdfsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete identityproviders adfs bad request response has a 5xx status code
func (o *DeleteIdentityprovidersAdfsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete identityproviders adfs bad request response a status code equal to that given
func (o *DeleteIdentityprovidersAdfsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteIdentityprovidersAdfsBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/adfs][%d] deleteIdentityprovidersAdfsBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteIdentityprovidersAdfsBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/adfs][%d] deleteIdentityprovidersAdfsBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteIdentityprovidersAdfsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteIdentityprovidersAdfsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIdentityprovidersAdfsUnauthorized creates a DeleteIdentityprovidersAdfsUnauthorized with default headers values
func NewDeleteIdentityprovidersAdfsUnauthorized() *DeleteIdentityprovidersAdfsUnauthorized {
	return &DeleteIdentityprovidersAdfsUnauthorized{}
}

/*
DeleteIdentityprovidersAdfsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type DeleteIdentityprovidersAdfsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete identityproviders adfs unauthorized response has a 2xx status code
func (o *DeleteIdentityprovidersAdfsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete identityproviders adfs unauthorized response has a 3xx status code
func (o *DeleteIdentityprovidersAdfsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identityproviders adfs unauthorized response has a 4xx status code
func (o *DeleteIdentityprovidersAdfsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete identityproviders adfs unauthorized response has a 5xx status code
func (o *DeleteIdentityprovidersAdfsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete identityproviders adfs unauthorized response a status code equal to that given
func (o *DeleteIdentityprovidersAdfsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteIdentityprovidersAdfsUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/adfs][%d] deleteIdentityprovidersAdfsUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteIdentityprovidersAdfsUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/adfs][%d] deleteIdentityprovidersAdfsUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteIdentityprovidersAdfsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteIdentityprovidersAdfsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIdentityprovidersAdfsForbidden creates a DeleteIdentityprovidersAdfsForbidden with default headers values
func NewDeleteIdentityprovidersAdfsForbidden() *DeleteIdentityprovidersAdfsForbidden {
	return &DeleteIdentityprovidersAdfsForbidden{}
}

/*
DeleteIdentityprovidersAdfsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type DeleteIdentityprovidersAdfsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete identityproviders adfs forbidden response has a 2xx status code
func (o *DeleteIdentityprovidersAdfsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete identityproviders adfs forbidden response has a 3xx status code
func (o *DeleteIdentityprovidersAdfsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identityproviders adfs forbidden response has a 4xx status code
func (o *DeleteIdentityprovidersAdfsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete identityproviders adfs forbidden response has a 5xx status code
func (o *DeleteIdentityprovidersAdfsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete identityproviders adfs forbidden response a status code equal to that given
func (o *DeleteIdentityprovidersAdfsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteIdentityprovidersAdfsForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/adfs][%d] deleteIdentityprovidersAdfsForbidden  %+v", 403, o.Payload)
}

func (o *DeleteIdentityprovidersAdfsForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/adfs][%d] deleteIdentityprovidersAdfsForbidden  %+v", 403, o.Payload)
}

func (o *DeleteIdentityprovidersAdfsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteIdentityprovidersAdfsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIdentityprovidersAdfsNotFound creates a DeleteIdentityprovidersAdfsNotFound with default headers values
func NewDeleteIdentityprovidersAdfsNotFound() *DeleteIdentityprovidersAdfsNotFound {
	return &DeleteIdentityprovidersAdfsNotFound{}
}

/*
DeleteIdentityprovidersAdfsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type DeleteIdentityprovidersAdfsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete identityproviders adfs not found response has a 2xx status code
func (o *DeleteIdentityprovidersAdfsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete identityproviders adfs not found response has a 3xx status code
func (o *DeleteIdentityprovidersAdfsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identityproviders adfs not found response has a 4xx status code
func (o *DeleteIdentityprovidersAdfsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete identityproviders adfs not found response has a 5xx status code
func (o *DeleteIdentityprovidersAdfsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete identityproviders adfs not found response a status code equal to that given
func (o *DeleteIdentityprovidersAdfsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteIdentityprovidersAdfsNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/adfs][%d] deleteIdentityprovidersAdfsNotFound  %+v", 404, o.Payload)
}

func (o *DeleteIdentityprovidersAdfsNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/adfs][%d] deleteIdentityprovidersAdfsNotFound  %+v", 404, o.Payload)
}

func (o *DeleteIdentityprovidersAdfsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteIdentityprovidersAdfsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIdentityprovidersAdfsRequestTimeout creates a DeleteIdentityprovidersAdfsRequestTimeout with default headers values
func NewDeleteIdentityprovidersAdfsRequestTimeout() *DeleteIdentityprovidersAdfsRequestTimeout {
	return &DeleteIdentityprovidersAdfsRequestTimeout{}
}

/*
DeleteIdentityprovidersAdfsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type DeleteIdentityprovidersAdfsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete identityproviders adfs request timeout response has a 2xx status code
func (o *DeleteIdentityprovidersAdfsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete identityproviders adfs request timeout response has a 3xx status code
func (o *DeleteIdentityprovidersAdfsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identityproviders adfs request timeout response has a 4xx status code
func (o *DeleteIdentityprovidersAdfsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete identityproviders adfs request timeout response has a 5xx status code
func (o *DeleteIdentityprovidersAdfsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this delete identityproviders adfs request timeout response a status code equal to that given
func (o *DeleteIdentityprovidersAdfsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *DeleteIdentityprovidersAdfsRequestTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/adfs][%d] deleteIdentityprovidersAdfsRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteIdentityprovidersAdfsRequestTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/adfs][%d] deleteIdentityprovidersAdfsRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteIdentityprovidersAdfsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteIdentityprovidersAdfsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIdentityprovidersAdfsRequestEntityTooLarge creates a DeleteIdentityprovidersAdfsRequestEntityTooLarge with default headers values
func NewDeleteIdentityprovidersAdfsRequestEntityTooLarge() *DeleteIdentityprovidersAdfsRequestEntityTooLarge {
	return &DeleteIdentityprovidersAdfsRequestEntityTooLarge{}
}

/*
DeleteIdentityprovidersAdfsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type DeleteIdentityprovidersAdfsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete identityproviders adfs request entity too large response has a 2xx status code
func (o *DeleteIdentityprovidersAdfsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete identityproviders adfs request entity too large response has a 3xx status code
func (o *DeleteIdentityprovidersAdfsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identityproviders adfs request entity too large response has a 4xx status code
func (o *DeleteIdentityprovidersAdfsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete identityproviders adfs request entity too large response has a 5xx status code
func (o *DeleteIdentityprovidersAdfsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this delete identityproviders adfs request entity too large response a status code equal to that given
func (o *DeleteIdentityprovidersAdfsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *DeleteIdentityprovidersAdfsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/adfs][%d] deleteIdentityprovidersAdfsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteIdentityprovidersAdfsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/adfs][%d] deleteIdentityprovidersAdfsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteIdentityprovidersAdfsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteIdentityprovidersAdfsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIdentityprovidersAdfsUnsupportedMediaType creates a DeleteIdentityprovidersAdfsUnsupportedMediaType with default headers values
func NewDeleteIdentityprovidersAdfsUnsupportedMediaType() *DeleteIdentityprovidersAdfsUnsupportedMediaType {
	return &DeleteIdentityprovidersAdfsUnsupportedMediaType{}
}

/*
DeleteIdentityprovidersAdfsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type DeleteIdentityprovidersAdfsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete identityproviders adfs unsupported media type response has a 2xx status code
func (o *DeleteIdentityprovidersAdfsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete identityproviders adfs unsupported media type response has a 3xx status code
func (o *DeleteIdentityprovidersAdfsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identityproviders adfs unsupported media type response has a 4xx status code
func (o *DeleteIdentityprovidersAdfsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete identityproviders adfs unsupported media type response has a 5xx status code
func (o *DeleteIdentityprovidersAdfsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this delete identityproviders adfs unsupported media type response a status code equal to that given
func (o *DeleteIdentityprovidersAdfsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *DeleteIdentityprovidersAdfsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/adfs][%d] deleteIdentityprovidersAdfsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteIdentityprovidersAdfsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/adfs][%d] deleteIdentityprovidersAdfsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteIdentityprovidersAdfsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteIdentityprovidersAdfsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIdentityprovidersAdfsTooManyRequests creates a DeleteIdentityprovidersAdfsTooManyRequests with default headers values
func NewDeleteIdentityprovidersAdfsTooManyRequests() *DeleteIdentityprovidersAdfsTooManyRequests {
	return &DeleteIdentityprovidersAdfsTooManyRequests{}
}

/*
DeleteIdentityprovidersAdfsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type DeleteIdentityprovidersAdfsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete identityproviders adfs too many requests response has a 2xx status code
func (o *DeleteIdentityprovidersAdfsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete identityproviders adfs too many requests response has a 3xx status code
func (o *DeleteIdentityprovidersAdfsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identityproviders adfs too many requests response has a 4xx status code
func (o *DeleteIdentityprovidersAdfsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete identityproviders adfs too many requests response has a 5xx status code
func (o *DeleteIdentityprovidersAdfsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete identityproviders adfs too many requests response a status code equal to that given
func (o *DeleteIdentityprovidersAdfsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *DeleteIdentityprovidersAdfsTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/adfs][%d] deleteIdentityprovidersAdfsTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteIdentityprovidersAdfsTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/adfs][%d] deleteIdentityprovidersAdfsTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteIdentityprovidersAdfsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteIdentityprovidersAdfsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIdentityprovidersAdfsInternalServerError creates a DeleteIdentityprovidersAdfsInternalServerError with default headers values
func NewDeleteIdentityprovidersAdfsInternalServerError() *DeleteIdentityprovidersAdfsInternalServerError {
	return &DeleteIdentityprovidersAdfsInternalServerError{}
}

/*
DeleteIdentityprovidersAdfsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type DeleteIdentityprovidersAdfsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete identityproviders adfs internal server error response has a 2xx status code
func (o *DeleteIdentityprovidersAdfsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete identityproviders adfs internal server error response has a 3xx status code
func (o *DeleteIdentityprovidersAdfsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identityproviders adfs internal server error response has a 4xx status code
func (o *DeleteIdentityprovidersAdfsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete identityproviders adfs internal server error response has a 5xx status code
func (o *DeleteIdentityprovidersAdfsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete identityproviders adfs internal server error response a status code equal to that given
func (o *DeleteIdentityprovidersAdfsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteIdentityprovidersAdfsInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/adfs][%d] deleteIdentityprovidersAdfsInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteIdentityprovidersAdfsInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/adfs][%d] deleteIdentityprovidersAdfsInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteIdentityprovidersAdfsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteIdentityprovidersAdfsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIdentityprovidersAdfsServiceUnavailable creates a DeleteIdentityprovidersAdfsServiceUnavailable with default headers values
func NewDeleteIdentityprovidersAdfsServiceUnavailable() *DeleteIdentityprovidersAdfsServiceUnavailable {
	return &DeleteIdentityprovidersAdfsServiceUnavailable{}
}

/*
DeleteIdentityprovidersAdfsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type DeleteIdentityprovidersAdfsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete identityproviders adfs service unavailable response has a 2xx status code
func (o *DeleteIdentityprovidersAdfsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete identityproviders adfs service unavailable response has a 3xx status code
func (o *DeleteIdentityprovidersAdfsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identityproviders adfs service unavailable response has a 4xx status code
func (o *DeleteIdentityprovidersAdfsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete identityproviders adfs service unavailable response has a 5xx status code
func (o *DeleteIdentityprovidersAdfsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this delete identityproviders adfs service unavailable response a status code equal to that given
func (o *DeleteIdentityprovidersAdfsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *DeleteIdentityprovidersAdfsServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/adfs][%d] deleteIdentityprovidersAdfsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteIdentityprovidersAdfsServiceUnavailable) String() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/adfs][%d] deleteIdentityprovidersAdfsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteIdentityprovidersAdfsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteIdentityprovidersAdfsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIdentityprovidersAdfsGatewayTimeout creates a DeleteIdentityprovidersAdfsGatewayTimeout with default headers values
func NewDeleteIdentityprovidersAdfsGatewayTimeout() *DeleteIdentityprovidersAdfsGatewayTimeout {
	return &DeleteIdentityprovidersAdfsGatewayTimeout{}
}

/*
DeleteIdentityprovidersAdfsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type DeleteIdentityprovidersAdfsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete identityproviders adfs gateway timeout response has a 2xx status code
func (o *DeleteIdentityprovidersAdfsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete identityproviders adfs gateway timeout response has a 3xx status code
func (o *DeleteIdentityprovidersAdfsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identityproviders adfs gateway timeout response has a 4xx status code
func (o *DeleteIdentityprovidersAdfsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete identityproviders adfs gateway timeout response has a 5xx status code
func (o *DeleteIdentityprovidersAdfsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this delete identityproviders adfs gateway timeout response a status code equal to that given
func (o *DeleteIdentityprovidersAdfsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *DeleteIdentityprovidersAdfsGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/adfs][%d] deleteIdentityprovidersAdfsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteIdentityprovidersAdfsGatewayTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/adfs][%d] deleteIdentityprovidersAdfsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteIdentityprovidersAdfsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteIdentityprovidersAdfsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
