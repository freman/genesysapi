// Code generated by go-swagger; DO NOT EDIT.

package identity_provider

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetIdentityprovidersOktaReader is a Reader for the GetIdentityprovidersOkta structure.
type GetIdentityprovidersOktaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetIdentityprovidersOktaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetIdentityprovidersOktaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetIdentityprovidersOktaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetIdentityprovidersOktaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetIdentityprovidersOktaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetIdentityprovidersOktaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetIdentityprovidersOktaRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetIdentityprovidersOktaRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetIdentityprovidersOktaUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetIdentityprovidersOktaTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetIdentityprovidersOktaInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetIdentityprovidersOktaServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetIdentityprovidersOktaGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetIdentityprovidersOktaOK creates a GetIdentityprovidersOktaOK with default headers values
func NewGetIdentityprovidersOktaOK() *GetIdentityprovidersOktaOK {
	return &GetIdentityprovidersOktaOK{}
}

/*
GetIdentityprovidersOktaOK describes a response with status code 200, with default header values.

successful operation
*/
type GetIdentityprovidersOktaOK struct {
	Payload *models.Okta
}

// IsSuccess returns true when this get identityproviders okta o k response has a 2xx status code
func (o *GetIdentityprovidersOktaOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get identityproviders okta o k response has a 3xx status code
func (o *GetIdentityprovidersOktaOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders okta o k response has a 4xx status code
func (o *GetIdentityprovidersOktaOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get identityproviders okta o k response has a 5xx status code
func (o *GetIdentityprovidersOktaOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders okta o k response a status code equal to that given
func (o *GetIdentityprovidersOktaOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetIdentityprovidersOktaOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/okta][%d] getIdentityprovidersOktaOK  %+v", 200, o.Payload)
}

func (o *GetIdentityprovidersOktaOK) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/okta][%d] getIdentityprovidersOktaOK  %+v", 200, o.Payload)
}

func (o *GetIdentityprovidersOktaOK) GetPayload() *models.Okta {
	return o.Payload
}

func (o *GetIdentityprovidersOktaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Okta)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersOktaBadRequest creates a GetIdentityprovidersOktaBadRequest with default headers values
func NewGetIdentityprovidersOktaBadRequest() *GetIdentityprovidersOktaBadRequest {
	return &GetIdentityprovidersOktaBadRequest{}
}

/*
GetIdentityprovidersOktaBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetIdentityprovidersOktaBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders okta bad request response has a 2xx status code
func (o *GetIdentityprovidersOktaBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders okta bad request response has a 3xx status code
func (o *GetIdentityprovidersOktaBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders okta bad request response has a 4xx status code
func (o *GetIdentityprovidersOktaBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders okta bad request response has a 5xx status code
func (o *GetIdentityprovidersOktaBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders okta bad request response a status code equal to that given
func (o *GetIdentityprovidersOktaBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetIdentityprovidersOktaBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/okta][%d] getIdentityprovidersOktaBadRequest  %+v", 400, o.Payload)
}

func (o *GetIdentityprovidersOktaBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/okta][%d] getIdentityprovidersOktaBadRequest  %+v", 400, o.Payload)
}

func (o *GetIdentityprovidersOktaBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersOktaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersOktaUnauthorized creates a GetIdentityprovidersOktaUnauthorized with default headers values
func NewGetIdentityprovidersOktaUnauthorized() *GetIdentityprovidersOktaUnauthorized {
	return &GetIdentityprovidersOktaUnauthorized{}
}

/*
GetIdentityprovidersOktaUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetIdentityprovidersOktaUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders okta unauthorized response has a 2xx status code
func (o *GetIdentityprovidersOktaUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders okta unauthorized response has a 3xx status code
func (o *GetIdentityprovidersOktaUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders okta unauthorized response has a 4xx status code
func (o *GetIdentityprovidersOktaUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders okta unauthorized response has a 5xx status code
func (o *GetIdentityprovidersOktaUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders okta unauthorized response a status code equal to that given
func (o *GetIdentityprovidersOktaUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetIdentityprovidersOktaUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/okta][%d] getIdentityprovidersOktaUnauthorized  %+v", 401, o.Payload)
}

func (o *GetIdentityprovidersOktaUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/okta][%d] getIdentityprovidersOktaUnauthorized  %+v", 401, o.Payload)
}

func (o *GetIdentityprovidersOktaUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersOktaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersOktaForbidden creates a GetIdentityprovidersOktaForbidden with default headers values
func NewGetIdentityprovidersOktaForbidden() *GetIdentityprovidersOktaForbidden {
	return &GetIdentityprovidersOktaForbidden{}
}

/*
GetIdentityprovidersOktaForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetIdentityprovidersOktaForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders okta forbidden response has a 2xx status code
func (o *GetIdentityprovidersOktaForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders okta forbidden response has a 3xx status code
func (o *GetIdentityprovidersOktaForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders okta forbidden response has a 4xx status code
func (o *GetIdentityprovidersOktaForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders okta forbidden response has a 5xx status code
func (o *GetIdentityprovidersOktaForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders okta forbidden response a status code equal to that given
func (o *GetIdentityprovidersOktaForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetIdentityprovidersOktaForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/okta][%d] getIdentityprovidersOktaForbidden  %+v", 403, o.Payload)
}

func (o *GetIdentityprovidersOktaForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/okta][%d] getIdentityprovidersOktaForbidden  %+v", 403, o.Payload)
}

func (o *GetIdentityprovidersOktaForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersOktaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersOktaNotFound creates a GetIdentityprovidersOktaNotFound with default headers values
func NewGetIdentityprovidersOktaNotFound() *GetIdentityprovidersOktaNotFound {
	return &GetIdentityprovidersOktaNotFound{}
}

/*
GetIdentityprovidersOktaNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetIdentityprovidersOktaNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders okta not found response has a 2xx status code
func (o *GetIdentityprovidersOktaNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders okta not found response has a 3xx status code
func (o *GetIdentityprovidersOktaNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders okta not found response has a 4xx status code
func (o *GetIdentityprovidersOktaNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders okta not found response has a 5xx status code
func (o *GetIdentityprovidersOktaNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders okta not found response a status code equal to that given
func (o *GetIdentityprovidersOktaNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetIdentityprovidersOktaNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/okta][%d] getIdentityprovidersOktaNotFound  %+v", 404, o.Payload)
}

func (o *GetIdentityprovidersOktaNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/okta][%d] getIdentityprovidersOktaNotFound  %+v", 404, o.Payload)
}

func (o *GetIdentityprovidersOktaNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersOktaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersOktaRequestTimeout creates a GetIdentityprovidersOktaRequestTimeout with default headers values
func NewGetIdentityprovidersOktaRequestTimeout() *GetIdentityprovidersOktaRequestTimeout {
	return &GetIdentityprovidersOktaRequestTimeout{}
}

/*
GetIdentityprovidersOktaRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetIdentityprovidersOktaRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders okta request timeout response has a 2xx status code
func (o *GetIdentityprovidersOktaRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders okta request timeout response has a 3xx status code
func (o *GetIdentityprovidersOktaRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders okta request timeout response has a 4xx status code
func (o *GetIdentityprovidersOktaRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders okta request timeout response has a 5xx status code
func (o *GetIdentityprovidersOktaRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders okta request timeout response a status code equal to that given
func (o *GetIdentityprovidersOktaRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetIdentityprovidersOktaRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/okta][%d] getIdentityprovidersOktaRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetIdentityprovidersOktaRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/okta][%d] getIdentityprovidersOktaRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetIdentityprovidersOktaRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersOktaRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersOktaRequestEntityTooLarge creates a GetIdentityprovidersOktaRequestEntityTooLarge with default headers values
func NewGetIdentityprovidersOktaRequestEntityTooLarge() *GetIdentityprovidersOktaRequestEntityTooLarge {
	return &GetIdentityprovidersOktaRequestEntityTooLarge{}
}

/*
GetIdentityprovidersOktaRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetIdentityprovidersOktaRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders okta request entity too large response has a 2xx status code
func (o *GetIdentityprovidersOktaRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders okta request entity too large response has a 3xx status code
func (o *GetIdentityprovidersOktaRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders okta request entity too large response has a 4xx status code
func (o *GetIdentityprovidersOktaRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders okta request entity too large response has a 5xx status code
func (o *GetIdentityprovidersOktaRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders okta request entity too large response a status code equal to that given
func (o *GetIdentityprovidersOktaRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetIdentityprovidersOktaRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/okta][%d] getIdentityprovidersOktaRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetIdentityprovidersOktaRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/okta][%d] getIdentityprovidersOktaRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetIdentityprovidersOktaRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersOktaRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersOktaUnsupportedMediaType creates a GetIdentityprovidersOktaUnsupportedMediaType with default headers values
func NewGetIdentityprovidersOktaUnsupportedMediaType() *GetIdentityprovidersOktaUnsupportedMediaType {
	return &GetIdentityprovidersOktaUnsupportedMediaType{}
}

/*
GetIdentityprovidersOktaUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetIdentityprovidersOktaUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders okta unsupported media type response has a 2xx status code
func (o *GetIdentityprovidersOktaUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders okta unsupported media type response has a 3xx status code
func (o *GetIdentityprovidersOktaUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders okta unsupported media type response has a 4xx status code
func (o *GetIdentityprovidersOktaUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders okta unsupported media type response has a 5xx status code
func (o *GetIdentityprovidersOktaUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders okta unsupported media type response a status code equal to that given
func (o *GetIdentityprovidersOktaUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetIdentityprovidersOktaUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/okta][%d] getIdentityprovidersOktaUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetIdentityprovidersOktaUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/okta][%d] getIdentityprovidersOktaUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetIdentityprovidersOktaUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersOktaUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersOktaTooManyRequests creates a GetIdentityprovidersOktaTooManyRequests with default headers values
func NewGetIdentityprovidersOktaTooManyRequests() *GetIdentityprovidersOktaTooManyRequests {
	return &GetIdentityprovidersOktaTooManyRequests{}
}

/*
GetIdentityprovidersOktaTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetIdentityprovidersOktaTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders okta too many requests response has a 2xx status code
func (o *GetIdentityprovidersOktaTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders okta too many requests response has a 3xx status code
func (o *GetIdentityprovidersOktaTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders okta too many requests response has a 4xx status code
func (o *GetIdentityprovidersOktaTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders okta too many requests response has a 5xx status code
func (o *GetIdentityprovidersOktaTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders okta too many requests response a status code equal to that given
func (o *GetIdentityprovidersOktaTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetIdentityprovidersOktaTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/okta][%d] getIdentityprovidersOktaTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetIdentityprovidersOktaTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/okta][%d] getIdentityprovidersOktaTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetIdentityprovidersOktaTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersOktaTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersOktaInternalServerError creates a GetIdentityprovidersOktaInternalServerError with default headers values
func NewGetIdentityprovidersOktaInternalServerError() *GetIdentityprovidersOktaInternalServerError {
	return &GetIdentityprovidersOktaInternalServerError{}
}

/*
GetIdentityprovidersOktaInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetIdentityprovidersOktaInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders okta internal server error response has a 2xx status code
func (o *GetIdentityprovidersOktaInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders okta internal server error response has a 3xx status code
func (o *GetIdentityprovidersOktaInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders okta internal server error response has a 4xx status code
func (o *GetIdentityprovidersOktaInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get identityproviders okta internal server error response has a 5xx status code
func (o *GetIdentityprovidersOktaInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get identityproviders okta internal server error response a status code equal to that given
func (o *GetIdentityprovidersOktaInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetIdentityprovidersOktaInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/okta][%d] getIdentityprovidersOktaInternalServerError  %+v", 500, o.Payload)
}

func (o *GetIdentityprovidersOktaInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/okta][%d] getIdentityprovidersOktaInternalServerError  %+v", 500, o.Payload)
}

func (o *GetIdentityprovidersOktaInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersOktaInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersOktaServiceUnavailable creates a GetIdentityprovidersOktaServiceUnavailable with default headers values
func NewGetIdentityprovidersOktaServiceUnavailable() *GetIdentityprovidersOktaServiceUnavailable {
	return &GetIdentityprovidersOktaServiceUnavailable{}
}

/*
GetIdentityprovidersOktaServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetIdentityprovidersOktaServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders okta service unavailable response has a 2xx status code
func (o *GetIdentityprovidersOktaServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders okta service unavailable response has a 3xx status code
func (o *GetIdentityprovidersOktaServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders okta service unavailable response has a 4xx status code
func (o *GetIdentityprovidersOktaServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get identityproviders okta service unavailable response has a 5xx status code
func (o *GetIdentityprovidersOktaServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get identityproviders okta service unavailable response a status code equal to that given
func (o *GetIdentityprovidersOktaServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetIdentityprovidersOktaServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/okta][%d] getIdentityprovidersOktaServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetIdentityprovidersOktaServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/okta][%d] getIdentityprovidersOktaServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetIdentityprovidersOktaServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersOktaServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersOktaGatewayTimeout creates a GetIdentityprovidersOktaGatewayTimeout with default headers values
func NewGetIdentityprovidersOktaGatewayTimeout() *GetIdentityprovidersOktaGatewayTimeout {
	return &GetIdentityprovidersOktaGatewayTimeout{}
}

/*
GetIdentityprovidersOktaGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetIdentityprovidersOktaGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders okta gateway timeout response has a 2xx status code
func (o *GetIdentityprovidersOktaGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders okta gateway timeout response has a 3xx status code
func (o *GetIdentityprovidersOktaGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders okta gateway timeout response has a 4xx status code
func (o *GetIdentityprovidersOktaGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get identityproviders okta gateway timeout response has a 5xx status code
func (o *GetIdentityprovidersOktaGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get identityproviders okta gateway timeout response a status code equal to that given
func (o *GetIdentityprovidersOktaGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetIdentityprovidersOktaGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/okta][%d] getIdentityprovidersOktaGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetIdentityprovidersOktaGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/okta][%d] getIdentityprovidersOktaGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetIdentityprovidersOktaGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersOktaGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
