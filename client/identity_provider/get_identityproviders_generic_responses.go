// Code generated by go-swagger; DO NOT EDIT.

package identity_provider

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetIdentityprovidersGenericReader is a Reader for the GetIdentityprovidersGeneric structure.
type GetIdentityprovidersGenericReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetIdentityprovidersGenericReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetIdentityprovidersGenericOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetIdentityprovidersGenericBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetIdentityprovidersGenericUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetIdentityprovidersGenericForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetIdentityprovidersGenericNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetIdentityprovidersGenericRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetIdentityprovidersGenericRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetIdentityprovidersGenericUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetIdentityprovidersGenericTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetIdentityprovidersGenericInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetIdentityprovidersGenericServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetIdentityprovidersGenericGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetIdentityprovidersGenericOK creates a GetIdentityprovidersGenericOK with default headers values
func NewGetIdentityprovidersGenericOK() *GetIdentityprovidersGenericOK {
	return &GetIdentityprovidersGenericOK{}
}

/*
GetIdentityprovidersGenericOK describes a response with status code 200, with default header values.

successful operation
*/
type GetIdentityprovidersGenericOK struct {
	Payload *models.GenericSAML
}

// IsSuccess returns true when this get identityproviders generic o k response has a 2xx status code
func (o *GetIdentityprovidersGenericOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get identityproviders generic o k response has a 3xx status code
func (o *GetIdentityprovidersGenericOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders generic o k response has a 4xx status code
func (o *GetIdentityprovidersGenericOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get identityproviders generic o k response has a 5xx status code
func (o *GetIdentityprovidersGenericOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders generic o k response a status code equal to that given
func (o *GetIdentityprovidersGenericOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetIdentityprovidersGenericOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/generic][%d] getIdentityprovidersGenericOK  %+v", 200, o.Payload)
}

func (o *GetIdentityprovidersGenericOK) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/generic][%d] getIdentityprovidersGenericOK  %+v", 200, o.Payload)
}

func (o *GetIdentityprovidersGenericOK) GetPayload() *models.GenericSAML {
	return o.Payload
}

func (o *GetIdentityprovidersGenericOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericSAML)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersGenericBadRequest creates a GetIdentityprovidersGenericBadRequest with default headers values
func NewGetIdentityprovidersGenericBadRequest() *GetIdentityprovidersGenericBadRequest {
	return &GetIdentityprovidersGenericBadRequest{}
}

/*
GetIdentityprovidersGenericBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetIdentityprovidersGenericBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders generic bad request response has a 2xx status code
func (o *GetIdentityprovidersGenericBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders generic bad request response has a 3xx status code
func (o *GetIdentityprovidersGenericBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders generic bad request response has a 4xx status code
func (o *GetIdentityprovidersGenericBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders generic bad request response has a 5xx status code
func (o *GetIdentityprovidersGenericBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders generic bad request response a status code equal to that given
func (o *GetIdentityprovidersGenericBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetIdentityprovidersGenericBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/generic][%d] getIdentityprovidersGenericBadRequest  %+v", 400, o.Payload)
}

func (o *GetIdentityprovidersGenericBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/generic][%d] getIdentityprovidersGenericBadRequest  %+v", 400, o.Payload)
}

func (o *GetIdentityprovidersGenericBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersGenericBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersGenericUnauthorized creates a GetIdentityprovidersGenericUnauthorized with default headers values
func NewGetIdentityprovidersGenericUnauthorized() *GetIdentityprovidersGenericUnauthorized {
	return &GetIdentityprovidersGenericUnauthorized{}
}

/*
GetIdentityprovidersGenericUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetIdentityprovidersGenericUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders generic unauthorized response has a 2xx status code
func (o *GetIdentityprovidersGenericUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders generic unauthorized response has a 3xx status code
func (o *GetIdentityprovidersGenericUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders generic unauthorized response has a 4xx status code
func (o *GetIdentityprovidersGenericUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders generic unauthorized response has a 5xx status code
func (o *GetIdentityprovidersGenericUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders generic unauthorized response a status code equal to that given
func (o *GetIdentityprovidersGenericUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetIdentityprovidersGenericUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/generic][%d] getIdentityprovidersGenericUnauthorized  %+v", 401, o.Payload)
}

func (o *GetIdentityprovidersGenericUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/generic][%d] getIdentityprovidersGenericUnauthorized  %+v", 401, o.Payload)
}

func (o *GetIdentityprovidersGenericUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersGenericUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersGenericForbidden creates a GetIdentityprovidersGenericForbidden with default headers values
func NewGetIdentityprovidersGenericForbidden() *GetIdentityprovidersGenericForbidden {
	return &GetIdentityprovidersGenericForbidden{}
}

/*
GetIdentityprovidersGenericForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetIdentityprovidersGenericForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders generic forbidden response has a 2xx status code
func (o *GetIdentityprovidersGenericForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders generic forbidden response has a 3xx status code
func (o *GetIdentityprovidersGenericForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders generic forbidden response has a 4xx status code
func (o *GetIdentityprovidersGenericForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders generic forbidden response has a 5xx status code
func (o *GetIdentityprovidersGenericForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders generic forbidden response a status code equal to that given
func (o *GetIdentityprovidersGenericForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetIdentityprovidersGenericForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/generic][%d] getIdentityprovidersGenericForbidden  %+v", 403, o.Payload)
}

func (o *GetIdentityprovidersGenericForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/generic][%d] getIdentityprovidersGenericForbidden  %+v", 403, o.Payload)
}

func (o *GetIdentityprovidersGenericForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersGenericForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersGenericNotFound creates a GetIdentityprovidersGenericNotFound with default headers values
func NewGetIdentityprovidersGenericNotFound() *GetIdentityprovidersGenericNotFound {
	return &GetIdentityprovidersGenericNotFound{}
}

/*
GetIdentityprovidersGenericNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetIdentityprovidersGenericNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders generic not found response has a 2xx status code
func (o *GetIdentityprovidersGenericNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders generic not found response has a 3xx status code
func (o *GetIdentityprovidersGenericNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders generic not found response has a 4xx status code
func (o *GetIdentityprovidersGenericNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders generic not found response has a 5xx status code
func (o *GetIdentityprovidersGenericNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders generic not found response a status code equal to that given
func (o *GetIdentityprovidersGenericNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetIdentityprovidersGenericNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/generic][%d] getIdentityprovidersGenericNotFound  %+v", 404, o.Payload)
}

func (o *GetIdentityprovidersGenericNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/generic][%d] getIdentityprovidersGenericNotFound  %+v", 404, o.Payload)
}

func (o *GetIdentityprovidersGenericNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersGenericNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersGenericRequestTimeout creates a GetIdentityprovidersGenericRequestTimeout with default headers values
func NewGetIdentityprovidersGenericRequestTimeout() *GetIdentityprovidersGenericRequestTimeout {
	return &GetIdentityprovidersGenericRequestTimeout{}
}

/*
GetIdentityprovidersGenericRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetIdentityprovidersGenericRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders generic request timeout response has a 2xx status code
func (o *GetIdentityprovidersGenericRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders generic request timeout response has a 3xx status code
func (o *GetIdentityprovidersGenericRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders generic request timeout response has a 4xx status code
func (o *GetIdentityprovidersGenericRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders generic request timeout response has a 5xx status code
func (o *GetIdentityprovidersGenericRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders generic request timeout response a status code equal to that given
func (o *GetIdentityprovidersGenericRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetIdentityprovidersGenericRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/generic][%d] getIdentityprovidersGenericRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetIdentityprovidersGenericRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/generic][%d] getIdentityprovidersGenericRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetIdentityprovidersGenericRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersGenericRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersGenericRequestEntityTooLarge creates a GetIdentityprovidersGenericRequestEntityTooLarge with default headers values
func NewGetIdentityprovidersGenericRequestEntityTooLarge() *GetIdentityprovidersGenericRequestEntityTooLarge {
	return &GetIdentityprovidersGenericRequestEntityTooLarge{}
}

/*
GetIdentityprovidersGenericRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetIdentityprovidersGenericRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders generic request entity too large response has a 2xx status code
func (o *GetIdentityprovidersGenericRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders generic request entity too large response has a 3xx status code
func (o *GetIdentityprovidersGenericRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders generic request entity too large response has a 4xx status code
func (o *GetIdentityprovidersGenericRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders generic request entity too large response has a 5xx status code
func (o *GetIdentityprovidersGenericRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders generic request entity too large response a status code equal to that given
func (o *GetIdentityprovidersGenericRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetIdentityprovidersGenericRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/generic][%d] getIdentityprovidersGenericRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetIdentityprovidersGenericRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/generic][%d] getIdentityprovidersGenericRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetIdentityprovidersGenericRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersGenericRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersGenericUnsupportedMediaType creates a GetIdentityprovidersGenericUnsupportedMediaType with default headers values
func NewGetIdentityprovidersGenericUnsupportedMediaType() *GetIdentityprovidersGenericUnsupportedMediaType {
	return &GetIdentityprovidersGenericUnsupportedMediaType{}
}

/*
GetIdentityprovidersGenericUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetIdentityprovidersGenericUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders generic unsupported media type response has a 2xx status code
func (o *GetIdentityprovidersGenericUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders generic unsupported media type response has a 3xx status code
func (o *GetIdentityprovidersGenericUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders generic unsupported media type response has a 4xx status code
func (o *GetIdentityprovidersGenericUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders generic unsupported media type response has a 5xx status code
func (o *GetIdentityprovidersGenericUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders generic unsupported media type response a status code equal to that given
func (o *GetIdentityprovidersGenericUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetIdentityprovidersGenericUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/generic][%d] getIdentityprovidersGenericUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetIdentityprovidersGenericUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/generic][%d] getIdentityprovidersGenericUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetIdentityprovidersGenericUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersGenericUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersGenericTooManyRequests creates a GetIdentityprovidersGenericTooManyRequests with default headers values
func NewGetIdentityprovidersGenericTooManyRequests() *GetIdentityprovidersGenericTooManyRequests {
	return &GetIdentityprovidersGenericTooManyRequests{}
}

/*
GetIdentityprovidersGenericTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetIdentityprovidersGenericTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders generic too many requests response has a 2xx status code
func (o *GetIdentityprovidersGenericTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders generic too many requests response has a 3xx status code
func (o *GetIdentityprovidersGenericTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders generic too many requests response has a 4xx status code
func (o *GetIdentityprovidersGenericTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders generic too many requests response has a 5xx status code
func (o *GetIdentityprovidersGenericTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders generic too many requests response a status code equal to that given
func (o *GetIdentityprovidersGenericTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetIdentityprovidersGenericTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/generic][%d] getIdentityprovidersGenericTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetIdentityprovidersGenericTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/generic][%d] getIdentityprovidersGenericTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetIdentityprovidersGenericTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersGenericTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersGenericInternalServerError creates a GetIdentityprovidersGenericInternalServerError with default headers values
func NewGetIdentityprovidersGenericInternalServerError() *GetIdentityprovidersGenericInternalServerError {
	return &GetIdentityprovidersGenericInternalServerError{}
}

/*
GetIdentityprovidersGenericInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetIdentityprovidersGenericInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders generic internal server error response has a 2xx status code
func (o *GetIdentityprovidersGenericInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders generic internal server error response has a 3xx status code
func (o *GetIdentityprovidersGenericInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders generic internal server error response has a 4xx status code
func (o *GetIdentityprovidersGenericInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get identityproviders generic internal server error response has a 5xx status code
func (o *GetIdentityprovidersGenericInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get identityproviders generic internal server error response a status code equal to that given
func (o *GetIdentityprovidersGenericInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetIdentityprovidersGenericInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/generic][%d] getIdentityprovidersGenericInternalServerError  %+v", 500, o.Payload)
}

func (o *GetIdentityprovidersGenericInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/generic][%d] getIdentityprovidersGenericInternalServerError  %+v", 500, o.Payload)
}

func (o *GetIdentityprovidersGenericInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersGenericInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersGenericServiceUnavailable creates a GetIdentityprovidersGenericServiceUnavailable with default headers values
func NewGetIdentityprovidersGenericServiceUnavailable() *GetIdentityprovidersGenericServiceUnavailable {
	return &GetIdentityprovidersGenericServiceUnavailable{}
}

/*
GetIdentityprovidersGenericServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetIdentityprovidersGenericServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders generic service unavailable response has a 2xx status code
func (o *GetIdentityprovidersGenericServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders generic service unavailable response has a 3xx status code
func (o *GetIdentityprovidersGenericServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders generic service unavailable response has a 4xx status code
func (o *GetIdentityprovidersGenericServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get identityproviders generic service unavailable response has a 5xx status code
func (o *GetIdentityprovidersGenericServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get identityproviders generic service unavailable response a status code equal to that given
func (o *GetIdentityprovidersGenericServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetIdentityprovidersGenericServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/generic][%d] getIdentityprovidersGenericServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetIdentityprovidersGenericServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/generic][%d] getIdentityprovidersGenericServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetIdentityprovidersGenericServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersGenericServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersGenericGatewayTimeout creates a GetIdentityprovidersGenericGatewayTimeout with default headers values
func NewGetIdentityprovidersGenericGatewayTimeout() *GetIdentityprovidersGenericGatewayTimeout {
	return &GetIdentityprovidersGenericGatewayTimeout{}
}

/*
GetIdentityprovidersGenericGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetIdentityprovidersGenericGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders generic gateway timeout response has a 2xx status code
func (o *GetIdentityprovidersGenericGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders generic gateway timeout response has a 3xx status code
func (o *GetIdentityprovidersGenericGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders generic gateway timeout response has a 4xx status code
func (o *GetIdentityprovidersGenericGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get identityproviders generic gateway timeout response has a 5xx status code
func (o *GetIdentityprovidersGenericGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get identityproviders generic gateway timeout response a status code equal to that given
func (o *GetIdentityprovidersGenericGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetIdentityprovidersGenericGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/generic][%d] getIdentityprovidersGenericGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetIdentityprovidersGenericGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/generic][%d] getIdentityprovidersGenericGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetIdentityprovidersGenericGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersGenericGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
