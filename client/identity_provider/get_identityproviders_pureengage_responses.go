// Code generated by go-swagger; DO NOT EDIT.

package identity_provider

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetIdentityprovidersPureengageReader is a Reader for the GetIdentityprovidersPureengage structure.
type GetIdentityprovidersPureengageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetIdentityprovidersPureengageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetIdentityprovidersPureengageOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetIdentityprovidersPureengageBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetIdentityprovidersPureengageUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetIdentityprovidersPureengageForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetIdentityprovidersPureengageNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetIdentityprovidersPureengageRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetIdentityprovidersPureengageRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetIdentityprovidersPureengageUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetIdentityprovidersPureengageTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetIdentityprovidersPureengageInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetIdentityprovidersPureengageServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetIdentityprovidersPureengageGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetIdentityprovidersPureengageOK creates a GetIdentityprovidersPureengageOK with default headers values
func NewGetIdentityprovidersPureengageOK() *GetIdentityprovidersPureengageOK {
	return &GetIdentityprovidersPureengageOK{}
}

/*
GetIdentityprovidersPureengageOK describes a response with status code 200, with default header values.

successful operation
*/
type GetIdentityprovidersPureengageOK struct {
	Payload *models.PureEngage
}

// IsSuccess returns true when this get identityproviders pureengage o k response has a 2xx status code
func (o *GetIdentityprovidersPureengageOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get identityproviders pureengage o k response has a 3xx status code
func (o *GetIdentityprovidersPureengageOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders pureengage o k response has a 4xx status code
func (o *GetIdentityprovidersPureengageOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get identityproviders pureengage o k response has a 5xx status code
func (o *GetIdentityprovidersPureengageOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders pureengage o k response a status code equal to that given
func (o *GetIdentityprovidersPureengageOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetIdentityprovidersPureengageOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/pureengage][%d] getIdentityprovidersPureengageOK  %+v", 200, o.Payload)
}

func (o *GetIdentityprovidersPureengageOK) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/pureengage][%d] getIdentityprovidersPureengageOK  %+v", 200, o.Payload)
}

func (o *GetIdentityprovidersPureengageOK) GetPayload() *models.PureEngage {
	return o.Payload
}

func (o *GetIdentityprovidersPureengageOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PureEngage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersPureengageBadRequest creates a GetIdentityprovidersPureengageBadRequest with default headers values
func NewGetIdentityprovidersPureengageBadRequest() *GetIdentityprovidersPureengageBadRequest {
	return &GetIdentityprovidersPureengageBadRequest{}
}

/*
GetIdentityprovidersPureengageBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetIdentityprovidersPureengageBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders pureengage bad request response has a 2xx status code
func (o *GetIdentityprovidersPureengageBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders pureengage bad request response has a 3xx status code
func (o *GetIdentityprovidersPureengageBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders pureengage bad request response has a 4xx status code
func (o *GetIdentityprovidersPureengageBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders pureengage bad request response has a 5xx status code
func (o *GetIdentityprovidersPureengageBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders pureengage bad request response a status code equal to that given
func (o *GetIdentityprovidersPureengageBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetIdentityprovidersPureengageBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/pureengage][%d] getIdentityprovidersPureengageBadRequest  %+v", 400, o.Payload)
}

func (o *GetIdentityprovidersPureengageBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/pureengage][%d] getIdentityprovidersPureengageBadRequest  %+v", 400, o.Payload)
}

func (o *GetIdentityprovidersPureengageBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersPureengageBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersPureengageUnauthorized creates a GetIdentityprovidersPureengageUnauthorized with default headers values
func NewGetIdentityprovidersPureengageUnauthorized() *GetIdentityprovidersPureengageUnauthorized {
	return &GetIdentityprovidersPureengageUnauthorized{}
}

/*
GetIdentityprovidersPureengageUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetIdentityprovidersPureengageUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders pureengage unauthorized response has a 2xx status code
func (o *GetIdentityprovidersPureengageUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders pureengage unauthorized response has a 3xx status code
func (o *GetIdentityprovidersPureengageUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders pureengage unauthorized response has a 4xx status code
func (o *GetIdentityprovidersPureengageUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders pureengage unauthorized response has a 5xx status code
func (o *GetIdentityprovidersPureengageUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders pureengage unauthorized response a status code equal to that given
func (o *GetIdentityprovidersPureengageUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetIdentityprovidersPureengageUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/pureengage][%d] getIdentityprovidersPureengageUnauthorized  %+v", 401, o.Payload)
}

func (o *GetIdentityprovidersPureengageUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/pureengage][%d] getIdentityprovidersPureengageUnauthorized  %+v", 401, o.Payload)
}

func (o *GetIdentityprovidersPureengageUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersPureengageUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersPureengageForbidden creates a GetIdentityprovidersPureengageForbidden with default headers values
func NewGetIdentityprovidersPureengageForbidden() *GetIdentityprovidersPureengageForbidden {
	return &GetIdentityprovidersPureengageForbidden{}
}

/*
GetIdentityprovidersPureengageForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetIdentityprovidersPureengageForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders pureengage forbidden response has a 2xx status code
func (o *GetIdentityprovidersPureengageForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders pureengage forbidden response has a 3xx status code
func (o *GetIdentityprovidersPureengageForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders pureengage forbidden response has a 4xx status code
func (o *GetIdentityprovidersPureengageForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders pureengage forbidden response has a 5xx status code
func (o *GetIdentityprovidersPureengageForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders pureengage forbidden response a status code equal to that given
func (o *GetIdentityprovidersPureengageForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetIdentityprovidersPureengageForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/pureengage][%d] getIdentityprovidersPureengageForbidden  %+v", 403, o.Payload)
}

func (o *GetIdentityprovidersPureengageForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/pureengage][%d] getIdentityprovidersPureengageForbidden  %+v", 403, o.Payload)
}

func (o *GetIdentityprovidersPureengageForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersPureengageForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersPureengageNotFound creates a GetIdentityprovidersPureengageNotFound with default headers values
func NewGetIdentityprovidersPureengageNotFound() *GetIdentityprovidersPureengageNotFound {
	return &GetIdentityprovidersPureengageNotFound{}
}

/*
GetIdentityprovidersPureengageNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetIdentityprovidersPureengageNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders pureengage not found response has a 2xx status code
func (o *GetIdentityprovidersPureengageNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders pureengage not found response has a 3xx status code
func (o *GetIdentityprovidersPureengageNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders pureengage not found response has a 4xx status code
func (o *GetIdentityprovidersPureengageNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders pureengage not found response has a 5xx status code
func (o *GetIdentityprovidersPureengageNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders pureengage not found response a status code equal to that given
func (o *GetIdentityprovidersPureengageNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetIdentityprovidersPureengageNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/pureengage][%d] getIdentityprovidersPureengageNotFound  %+v", 404, o.Payload)
}

func (o *GetIdentityprovidersPureengageNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/pureengage][%d] getIdentityprovidersPureengageNotFound  %+v", 404, o.Payload)
}

func (o *GetIdentityprovidersPureengageNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersPureengageNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersPureengageRequestTimeout creates a GetIdentityprovidersPureengageRequestTimeout with default headers values
func NewGetIdentityprovidersPureengageRequestTimeout() *GetIdentityprovidersPureengageRequestTimeout {
	return &GetIdentityprovidersPureengageRequestTimeout{}
}

/*
GetIdentityprovidersPureengageRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetIdentityprovidersPureengageRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders pureengage request timeout response has a 2xx status code
func (o *GetIdentityprovidersPureengageRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders pureengage request timeout response has a 3xx status code
func (o *GetIdentityprovidersPureengageRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders pureengage request timeout response has a 4xx status code
func (o *GetIdentityprovidersPureengageRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders pureengage request timeout response has a 5xx status code
func (o *GetIdentityprovidersPureengageRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders pureengage request timeout response a status code equal to that given
func (o *GetIdentityprovidersPureengageRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetIdentityprovidersPureengageRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/pureengage][%d] getIdentityprovidersPureengageRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetIdentityprovidersPureengageRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/pureengage][%d] getIdentityprovidersPureengageRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetIdentityprovidersPureengageRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersPureengageRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersPureengageRequestEntityTooLarge creates a GetIdentityprovidersPureengageRequestEntityTooLarge with default headers values
func NewGetIdentityprovidersPureengageRequestEntityTooLarge() *GetIdentityprovidersPureengageRequestEntityTooLarge {
	return &GetIdentityprovidersPureengageRequestEntityTooLarge{}
}

/*
GetIdentityprovidersPureengageRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetIdentityprovidersPureengageRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders pureengage request entity too large response has a 2xx status code
func (o *GetIdentityprovidersPureengageRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders pureengage request entity too large response has a 3xx status code
func (o *GetIdentityprovidersPureengageRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders pureengage request entity too large response has a 4xx status code
func (o *GetIdentityprovidersPureengageRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders pureengage request entity too large response has a 5xx status code
func (o *GetIdentityprovidersPureengageRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders pureengage request entity too large response a status code equal to that given
func (o *GetIdentityprovidersPureengageRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetIdentityprovidersPureengageRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/pureengage][%d] getIdentityprovidersPureengageRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetIdentityprovidersPureengageRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/pureengage][%d] getIdentityprovidersPureengageRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetIdentityprovidersPureengageRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersPureengageRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersPureengageUnsupportedMediaType creates a GetIdentityprovidersPureengageUnsupportedMediaType with default headers values
func NewGetIdentityprovidersPureengageUnsupportedMediaType() *GetIdentityprovidersPureengageUnsupportedMediaType {
	return &GetIdentityprovidersPureengageUnsupportedMediaType{}
}

/*
GetIdentityprovidersPureengageUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetIdentityprovidersPureengageUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders pureengage unsupported media type response has a 2xx status code
func (o *GetIdentityprovidersPureengageUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders pureengage unsupported media type response has a 3xx status code
func (o *GetIdentityprovidersPureengageUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders pureengage unsupported media type response has a 4xx status code
func (o *GetIdentityprovidersPureengageUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders pureengage unsupported media type response has a 5xx status code
func (o *GetIdentityprovidersPureengageUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders pureengage unsupported media type response a status code equal to that given
func (o *GetIdentityprovidersPureengageUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetIdentityprovidersPureengageUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/pureengage][%d] getIdentityprovidersPureengageUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetIdentityprovidersPureengageUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/pureengage][%d] getIdentityprovidersPureengageUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetIdentityprovidersPureengageUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersPureengageUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersPureengageTooManyRequests creates a GetIdentityprovidersPureengageTooManyRequests with default headers values
func NewGetIdentityprovidersPureengageTooManyRequests() *GetIdentityprovidersPureengageTooManyRequests {
	return &GetIdentityprovidersPureengageTooManyRequests{}
}

/*
GetIdentityprovidersPureengageTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetIdentityprovidersPureengageTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders pureengage too many requests response has a 2xx status code
func (o *GetIdentityprovidersPureengageTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders pureengage too many requests response has a 3xx status code
func (o *GetIdentityprovidersPureengageTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders pureengage too many requests response has a 4xx status code
func (o *GetIdentityprovidersPureengageTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders pureengage too many requests response has a 5xx status code
func (o *GetIdentityprovidersPureengageTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders pureengage too many requests response a status code equal to that given
func (o *GetIdentityprovidersPureengageTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetIdentityprovidersPureengageTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/pureengage][%d] getIdentityprovidersPureengageTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetIdentityprovidersPureengageTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/pureengage][%d] getIdentityprovidersPureengageTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetIdentityprovidersPureengageTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersPureengageTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersPureengageInternalServerError creates a GetIdentityprovidersPureengageInternalServerError with default headers values
func NewGetIdentityprovidersPureengageInternalServerError() *GetIdentityprovidersPureengageInternalServerError {
	return &GetIdentityprovidersPureengageInternalServerError{}
}

/*
GetIdentityprovidersPureengageInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetIdentityprovidersPureengageInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders pureengage internal server error response has a 2xx status code
func (o *GetIdentityprovidersPureengageInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders pureengage internal server error response has a 3xx status code
func (o *GetIdentityprovidersPureengageInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders pureengage internal server error response has a 4xx status code
func (o *GetIdentityprovidersPureengageInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get identityproviders pureengage internal server error response has a 5xx status code
func (o *GetIdentityprovidersPureengageInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get identityproviders pureengage internal server error response a status code equal to that given
func (o *GetIdentityprovidersPureengageInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetIdentityprovidersPureengageInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/pureengage][%d] getIdentityprovidersPureengageInternalServerError  %+v", 500, o.Payload)
}

func (o *GetIdentityprovidersPureengageInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/pureengage][%d] getIdentityprovidersPureengageInternalServerError  %+v", 500, o.Payload)
}

func (o *GetIdentityprovidersPureengageInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersPureengageInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersPureengageServiceUnavailable creates a GetIdentityprovidersPureengageServiceUnavailable with default headers values
func NewGetIdentityprovidersPureengageServiceUnavailable() *GetIdentityprovidersPureengageServiceUnavailable {
	return &GetIdentityprovidersPureengageServiceUnavailable{}
}

/*
GetIdentityprovidersPureengageServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetIdentityprovidersPureengageServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders pureengage service unavailable response has a 2xx status code
func (o *GetIdentityprovidersPureengageServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders pureengage service unavailable response has a 3xx status code
func (o *GetIdentityprovidersPureengageServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders pureengage service unavailable response has a 4xx status code
func (o *GetIdentityprovidersPureengageServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get identityproviders pureengage service unavailable response has a 5xx status code
func (o *GetIdentityprovidersPureengageServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get identityproviders pureengage service unavailable response a status code equal to that given
func (o *GetIdentityprovidersPureengageServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetIdentityprovidersPureengageServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/pureengage][%d] getIdentityprovidersPureengageServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetIdentityprovidersPureengageServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/pureengage][%d] getIdentityprovidersPureengageServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetIdentityprovidersPureengageServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersPureengageServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersPureengageGatewayTimeout creates a GetIdentityprovidersPureengageGatewayTimeout with default headers values
func NewGetIdentityprovidersPureengageGatewayTimeout() *GetIdentityprovidersPureengageGatewayTimeout {
	return &GetIdentityprovidersPureengageGatewayTimeout{}
}

/*
GetIdentityprovidersPureengageGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetIdentityprovidersPureengageGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders pureengage gateway timeout response has a 2xx status code
func (o *GetIdentityprovidersPureengageGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders pureengage gateway timeout response has a 3xx status code
func (o *GetIdentityprovidersPureengageGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders pureengage gateway timeout response has a 4xx status code
func (o *GetIdentityprovidersPureengageGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get identityproviders pureengage gateway timeout response has a 5xx status code
func (o *GetIdentityprovidersPureengageGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get identityproviders pureengage gateway timeout response a status code equal to that given
func (o *GetIdentityprovidersPureengageGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetIdentityprovidersPureengageGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/pureengage][%d] getIdentityprovidersPureengageGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetIdentityprovidersPureengageGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/pureengage][%d] getIdentityprovidersPureengageGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetIdentityprovidersPureengageGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersPureengageGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
