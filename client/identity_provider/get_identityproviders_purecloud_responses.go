// Code generated by go-swagger; DO NOT EDIT.

package identity_provider

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetIdentityprovidersPurecloudReader is a Reader for the GetIdentityprovidersPurecloud structure.
type GetIdentityprovidersPurecloudReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetIdentityprovidersPurecloudReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetIdentityprovidersPurecloudOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetIdentityprovidersPurecloudBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetIdentityprovidersPurecloudUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetIdentityprovidersPurecloudForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetIdentityprovidersPurecloudNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetIdentityprovidersPurecloudRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetIdentityprovidersPurecloudRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetIdentityprovidersPurecloudUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetIdentityprovidersPurecloudTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetIdentityprovidersPurecloudInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetIdentityprovidersPurecloudServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetIdentityprovidersPurecloudGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetIdentityprovidersPurecloudOK creates a GetIdentityprovidersPurecloudOK with default headers values
func NewGetIdentityprovidersPurecloudOK() *GetIdentityprovidersPurecloudOK {
	return &GetIdentityprovidersPurecloudOK{}
}

/*
GetIdentityprovidersPurecloudOK describes a response with status code 200, with default header values.

successful operation
*/
type GetIdentityprovidersPurecloudOK struct {
	Payload *models.PureCloud
}

// IsSuccess returns true when this get identityproviders purecloud o k response has a 2xx status code
func (o *GetIdentityprovidersPurecloudOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get identityproviders purecloud o k response has a 3xx status code
func (o *GetIdentityprovidersPurecloudOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders purecloud o k response has a 4xx status code
func (o *GetIdentityprovidersPurecloudOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get identityproviders purecloud o k response has a 5xx status code
func (o *GetIdentityprovidersPurecloudOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders purecloud o k response a status code equal to that given
func (o *GetIdentityprovidersPurecloudOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetIdentityprovidersPurecloudOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/purecloud][%d] getIdentityprovidersPurecloudOK  %+v", 200, o.Payload)
}

func (o *GetIdentityprovidersPurecloudOK) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/purecloud][%d] getIdentityprovidersPurecloudOK  %+v", 200, o.Payload)
}

func (o *GetIdentityprovidersPurecloudOK) GetPayload() *models.PureCloud {
	return o.Payload
}

func (o *GetIdentityprovidersPurecloudOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PureCloud)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersPurecloudBadRequest creates a GetIdentityprovidersPurecloudBadRequest with default headers values
func NewGetIdentityprovidersPurecloudBadRequest() *GetIdentityprovidersPurecloudBadRequest {
	return &GetIdentityprovidersPurecloudBadRequest{}
}

/*
GetIdentityprovidersPurecloudBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetIdentityprovidersPurecloudBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders purecloud bad request response has a 2xx status code
func (o *GetIdentityprovidersPurecloudBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders purecloud bad request response has a 3xx status code
func (o *GetIdentityprovidersPurecloudBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders purecloud bad request response has a 4xx status code
func (o *GetIdentityprovidersPurecloudBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders purecloud bad request response has a 5xx status code
func (o *GetIdentityprovidersPurecloudBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders purecloud bad request response a status code equal to that given
func (o *GetIdentityprovidersPurecloudBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetIdentityprovidersPurecloudBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/purecloud][%d] getIdentityprovidersPurecloudBadRequest  %+v", 400, o.Payload)
}

func (o *GetIdentityprovidersPurecloudBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/purecloud][%d] getIdentityprovidersPurecloudBadRequest  %+v", 400, o.Payload)
}

func (o *GetIdentityprovidersPurecloudBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersPurecloudBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersPurecloudUnauthorized creates a GetIdentityprovidersPurecloudUnauthorized with default headers values
func NewGetIdentityprovidersPurecloudUnauthorized() *GetIdentityprovidersPurecloudUnauthorized {
	return &GetIdentityprovidersPurecloudUnauthorized{}
}

/*
GetIdentityprovidersPurecloudUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetIdentityprovidersPurecloudUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders purecloud unauthorized response has a 2xx status code
func (o *GetIdentityprovidersPurecloudUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders purecloud unauthorized response has a 3xx status code
func (o *GetIdentityprovidersPurecloudUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders purecloud unauthorized response has a 4xx status code
func (o *GetIdentityprovidersPurecloudUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders purecloud unauthorized response has a 5xx status code
func (o *GetIdentityprovidersPurecloudUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders purecloud unauthorized response a status code equal to that given
func (o *GetIdentityprovidersPurecloudUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetIdentityprovidersPurecloudUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/purecloud][%d] getIdentityprovidersPurecloudUnauthorized  %+v", 401, o.Payload)
}

func (o *GetIdentityprovidersPurecloudUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/purecloud][%d] getIdentityprovidersPurecloudUnauthorized  %+v", 401, o.Payload)
}

func (o *GetIdentityprovidersPurecloudUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersPurecloudUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersPurecloudForbidden creates a GetIdentityprovidersPurecloudForbidden with default headers values
func NewGetIdentityprovidersPurecloudForbidden() *GetIdentityprovidersPurecloudForbidden {
	return &GetIdentityprovidersPurecloudForbidden{}
}

/*
GetIdentityprovidersPurecloudForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetIdentityprovidersPurecloudForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders purecloud forbidden response has a 2xx status code
func (o *GetIdentityprovidersPurecloudForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders purecloud forbidden response has a 3xx status code
func (o *GetIdentityprovidersPurecloudForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders purecloud forbidden response has a 4xx status code
func (o *GetIdentityprovidersPurecloudForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders purecloud forbidden response has a 5xx status code
func (o *GetIdentityprovidersPurecloudForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders purecloud forbidden response a status code equal to that given
func (o *GetIdentityprovidersPurecloudForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetIdentityprovidersPurecloudForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/purecloud][%d] getIdentityprovidersPurecloudForbidden  %+v", 403, o.Payload)
}

func (o *GetIdentityprovidersPurecloudForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/purecloud][%d] getIdentityprovidersPurecloudForbidden  %+v", 403, o.Payload)
}

func (o *GetIdentityprovidersPurecloudForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersPurecloudForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersPurecloudNotFound creates a GetIdentityprovidersPurecloudNotFound with default headers values
func NewGetIdentityprovidersPurecloudNotFound() *GetIdentityprovidersPurecloudNotFound {
	return &GetIdentityprovidersPurecloudNotFound{}
}

/*
GetIdentityprovidersPurecloudNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetIdentityprovidersPurecloudNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders purecloud not found response has a 2xx status code
func (o *GetIdentityprovidersPurecloudNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders purecloud not found response has a 3xx status code
func (o *GetIdentityprovidersPurecloudNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders purecloud not found response has a 4xx status code
func (o *GetIdentityprovidersPurecloudNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders purecloud not found response has a 5xx status code
func (o *GetIdentityprovidersPurecloudNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders purecloud not found response a status code equal to that given
func (o *GetIdentityprovidersPurecloudNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetIdentityprovidersPurecloudNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/purecloud][%d] getIdentityprovidersPurecloudNotFound  %+v", 404, o.Payload)
}

func (o *GetIdentityprovidersPurecloudNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/purecloud][%d] getIdentityprovidersPurecloudNotFound  %+v", 404, o.Payload)
}

func (o *GetIdentityprovidersPurecloudNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersPurecloudNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersPurecloudRequestTimeout creates a GetIdentityprovidersPurecloudRequestTimeout with default headers values
func NewGetIdentityprovidersPurecloudRequestTimeout() *GetIdentityprovidersPurecloudRequestTimeout {
	return &GetIdentityprovidersPurecloudRequestTimeout{}
}

/*
GetIdentityprovidersPurecloudRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetIdentityprovidersPurecloudRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders purecloud request timeout response has a 2xx status code
func (o *GetIdentityprovidersPurecloudRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders purecloud request timeout response has a 3xx status code
func (o *GetIdentityprovidersPurecloudRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders purecloud request timeout response has a 4xx status code
func (o *GetIdentityprovidersPurecloudRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders purecloud request timeout response has a 5xx status code
func (o *GetIdentityprovidersPurecloudRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders purecloud request timeout response a status code equal to that given
func (o *GetIdentityprovidersPurecloudRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetIdentityprovidersPurecloudRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/purecloud][%d] getIdentityprovidersPurecloudRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetIdentityprovidersPurecloudRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/purecloud][%d] getIdentityprovidersPurecloudRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetIdentityprovidersPurecloudRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersPurecloudRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersPurecloudRequestEntityTooLarge creates a GetIdentityprovidersPurecloudRequestEntityTooLarge with default headers values
func NewGetIdentityprovidersPurecloudRequestEntityTooLarge() *GetIdentityprovidersPurecloudRequestEntityTooLarge {
	return &GetIdentityprovidersPurecloudRequestEntityTooLarge{}
}

/*
GetIdentityprovidersPurecloudRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetIdentityprovidersPurecloudRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders purecloud request entity too large response has a 2xx status code
func (o *GetIdentityprovidersPurecloudRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders purecloud request entity too large response has a 3xx status code
func (o *GetIdentityprovidersPurecloudRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders purecloud request entity too large response has a 4xx status code
func (o *GetIdentityprovidersPurecloudRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders purecloud request entity too large response has a 5xx status code
func (o *GetIdentityprovidersPurecloudRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders purecloud request entity too large response a status code equal to that given
func (o *GetIdentityprovidersPurecloudRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetIdentityprovidersPurecloudRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/purecloud][%d] getIdentityprovidersPurecloudRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetIdentityprovidersPurecloudRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/purecloud][%d] getIdentityprovidersPurecloudRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetIdentityprovidersPurecloudRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersPurecloudRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersPurecloudUnsupportedMediaType creates a GetIdentityprovidersPurecloudUnsupportedMediaType with default headers values
func NewGetIdentityprovidersPurecloudUnsupportedMediaType() *GetIdentityprovidersPurecloudUnsupportedMediaType {
	return &GetIdentityprovidersPurecloudUnsupportedMediaType{}
}

/*
GetIdentityprovidersPurecloudUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetIdentityprovidersPurecloudUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders purecloud unsupported media type response has a 2xx status code
func (o *GetIdentityprovidersPurecloudUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders purecloud unsupported media type response has a 3xx status code
func (o *GetIdentityprovidersPurecloudUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders purecloud unsupported media type response has a 4xx status code
func (o *GetIdentityprovidersPurecloudUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders purecloud unsupported media type response has a 5xx status code
func (o *GetIdentityprovidersPurecloudUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders purecloud unsupported media type response a status code equal to that given
func (o *GetIdentityprovidersPurecloudUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetIdentityprovidersPurecloudUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/purecloud][%d] getIdentityprovidersPurecloudUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetIdentityprovidersPurecloudUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/purecloud][%d] getIdentityprovidersPurecloudUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetIdentityprovidersPurecloudUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersPurecloudUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersPurecloudTooManyRequests creates a GetIdentityprovidersPurecloudTooManyRequests with default headers values
func NewGetIdentityprovidersPurecloudTooManyRequests() *GetIdentityprovidersPurecloudTooManyRequests {
	return &GetIdentityprovidersPurecloudTooManyRequests{}
}

/*
GetIdentityprovidersPurecloudTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetIdentityprovidersPurecloudTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders purecloud too many requests response has a 2xx status code
func (o *GetIdentityprovidersPurecloudTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders purecloud too many requests response has a 3xx status code
func (o *GetIdentityprovidersPurecloudTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders purecloud too many requests response has a 4xx status code
func (o *GetIdentityprovidersPurecloudTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders purecloud too many requests response has a 5xx status code
func (o *GetIdentityprovidersPurecloudTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders purecloud too many requests response a status code equal to that given
func (o *GetIdentityprovidersPurecloudTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetIdentityprovidersPurecloudTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/purecloud][%d] getIdentityprovidersPurecloudTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetIdentityprovidersPurecloudTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/purecloud][%d] getIdentityprovidersPurecloudTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetIdentityprovidersPurecloudTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersPurecloudTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersPurecloudInternalServerError creates a GetIdentityprovidersPurecloudInternalServerError with default headers values
func NewGetIdentityprovidersPurecloudInternalServerError() *GetIdentityprovidersPurecloudInternalServerError {
	return &GetIdentityprovidersPurecloudInternalServerError{}
}

/*
GetIdentityprovidersPurecloudInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetIdentityprovidersPurecloudInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders purecloud internal server error response has a 2xx status code
func (o *GetIdentityprovidersPurecloudInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders purecloud internal server error response has a 3xx status code
func (o *GetIdentityprovidersPurecloudInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders purecloud internal server error response has a 4xx status code
func (o *GetIdentityprovidersPurecloudInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get identityproviders purecloud internal server error response has a 5xx status code
func (o *GetIdentityprovidersPurecloudInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get identityproviders purecloud internal server error response a status code equal to that given
func (o *GetIdentityprovidersPurecloudInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetIdentityprovidersPurecloudInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/purecloud][%d] getIdentityprovidersPurecloudInternalServerError  %+v", 500, o.Payload)
}

func (o *GetIdentityprovidersPurecloudInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/purecloud][%d] getIdentityprovidersPurecloudInternalServerError  %+v", 500, o.Payload)
}

func (o *GetIdentityprovidersPurecloudInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersPurecloudInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersPurecloudServiceUnavailable creates a GetIdentityprovidersPurecloudServiceUnavailable with default headers values
func NewGetIdentityprovidersPurecloudServiceUnavailable() *GetIdentityprovidersPurecloudServiceUnavailable {
	return &GetIdentityprovidersPurecloudServiceUnavailable{}
}

/*
GetIdentityprovidersPurecloudServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetIdentityprovidersPurecloudServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders purecloud service unavailable response has a 2xx status code
func (o *GetIdentityprovidersPurecloudServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders purecloud service unavailable response has a 3xx status code
func (o *GetIdentityprovidersPurecloudServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders purecloud service unavailable response has a 4xx status code
func (o *GetIdentityprovidersPurecloudServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get identityproviders purecloud service unavailable response has a 5xx status code
func (o *GetIdentityprovidersPurecloudServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get identityproviders purecloud service unavailable response a status code equal to that given
func (o *GetIdentityprovidersPurecloudServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetIdentityprovidersPurecloudServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/purecloud][%d] getIdentityprovidersPurecloudServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetIdentityprovidersPurecloudServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/purecloud][%d] getIdentityprovidersPurecloudServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetIdentityprovidersPurecloudServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersPurecloudServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersPurecloudGatewayTimeout creates a GetIdentityprovidersPurecloudGatewayTimeout with default headers values
func NewGetIdentityprovidersPurecloudGatewayTimeout() *GetIdentityprovidersPurecloudGatewayTimeout {
	return &GetIdentityprovidersPurecloudGatewayTimeout{}
}

/*
GetIdentityprovidersPurecloudGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetIdentityprovidersPurecloudGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders purecloud gateway timeout response has a 2xx status code
func (o *GetIdentityprovidersPurecloudGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders purecloud gateway timeout response has a 3xx status code
func (o *GetIdentityprovidersPurecloudGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders purecloud gateway timeout response has a 4xx status code
func (o *GetIdentityprovidersPurecloudGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get identityproviders purecloud gateway timeout response has a 5xx status code
func (o *GetIdentityprovidersPurecloudGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get identityproviders purecloud gateway timeout response a status code equal to that given
func (o *GetIdentityprovidersPurecloudGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetIdentityprovidersPurecloudGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/purecloud][%d] getIdentityprovidersPurecloudGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetIdentityprovidersPurecloudGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/purecloud][%d] getIdentityprovidersPurecloudGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetIdentityprovidersPurecloudGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersPurecloudGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
