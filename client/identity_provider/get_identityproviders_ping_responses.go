// Code generated by go-swagger; DO NOT EDIT.

package identity_provider

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetIdentityprovidersPingReader is a Reader for the GetIdentityprovidersPing structure.
type GetIdentityprovidersPingReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetIdentityprovidersPingReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetIdentityprovidersPingOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetIdentityprovidersPingBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetIdentityprovidersPingUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetIdentityprovidersPingForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetIdentityprovidersPingNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetIdentityprovidersPingRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetIdentityprovidersPingRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetIdentityprovidersPingUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetIdentityprovidersPingTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetIdentityprovidersPingInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetIdentityprovidersPingServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetIdentityprovidersPingGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetIdentityprovidersPingOK creates a GetIdentityprovidersPingOK with default headers values
func NewGetIdentityprovidersPingOK() *GetIdentityprovidersPingOK {
	return &GetIdentityprovidersPingOK{}
}

/*
GetIdentityprovidersPingOK describes a response with status code 200, with default header values.

successful operation
*/
type GetIdentityprovidersPingOK struct {
	Payload *models.PingIdentity
}

// IsSuccess returns true when this get identityproviders ping o k response has a 2xx status code
func (o *GetIdentityprovidersPingOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get identityproviders ping o k response has a 3xx status code
func (o *GetIdentityprovidersPingOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders ping o k response has a 4xx status code
func (o *GetIdentityprovidersPingOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get identityproviders ping o k response has a 5xx status code
func (o *GetIdentityprovidersPingOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders ping o k response a status code equal to that given
func (o *GetIdentityprovidersPingOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetIdentityprovidersPingOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/ping][%d] getIdentityprovidersPingOK  %+v", 200, o.Payload)
}

func (o *GetIdentityprovidersPingOK) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/ping][%d] getIdentityprovidersPingOK  %+v", 200, o.Payload)
}

func (o *GetIdentityprovidersPingOK) GetPayload() *models.PingIdentity {
	return o.Payload
}

func (o *GetIdentityprovidersPingOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PingIdentity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersPingBadRequest creates a GetIdentityprovidersPingBadRequest with default headers values
func NewGetIdentityprovidersPingBadRequest() *GetIdentityprovidersPingBadRequest {
	return &GetIdentityprovidersPingBadRequest{}
}

/*
GetIdentityprovidersPingBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetIdentityprovidersPingBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders ping bad request response has a 2xx status code
func (o *GetIdentityprovidersPingBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders ping bad request response has a 3xx status code
func (o *GetIdentityprovidersPingBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders ping bad request response has a 4xx status code
func (o *GetIdentityprovidersPingBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders ping bad request response has a 5xx status code
func (o *GetIdentityprovidersPingBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders ping bad request response a status code equal to that given
func (o *GetIdentityprovidersPingBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetIdentityprovidersPingBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/ping][%d] getIdentityprovidersPingBadRequest  %+v", 400, o.Payload)
}

func (o *GetIdentityprovidersPingBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/ping][%d] getIdentityprovidersPingBadRequest  %+v", 400, o.Payload)
}

func (o *GetIdentityprovidersPingBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersPingBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersPingUnauthorized creates a GetIdentityprovidersPingUnauthorized with default headers values
func NewGetIdentityprovidersPingUnauthorized() *GetIdentityprovidersPingUnauthorized {
	return &GetIdentityprovidersPingUnauthorized{}
}

/*
GetIdentityprovidersPingUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetIdentityprovidersPingUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders ping unauthorized response has a 2xx status code
func (o *GetIdentityprovidersPingUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders ping unauthorized response has a 3xx status code
func (o *GetIdentityprovidersPingUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders ping unauthorized response has a 4xx status code
func (o *GetIdentityprovidersPingUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders ping unauthorized response has a 5xx status code
func (o *GetIdentityprovidersPingUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders ping unauthorized response a status code equal to that given
func (o *GetIdentityprovidersPingUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetIdentityprovidersPingUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/ping][%d] getIdentityprovidersPingUnauthorized  %+v", 401, o.Payload)
}

func (o *GetIdentityprovidersPingUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/ping][%d] getIdentityprovidersPingUnauthorized  %+v", 401, o.Payload)
}

func (o *GetIdentityprovidersPingUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersPingUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersPingForbidden creates a GetIdentityprovidersPingForbidden with default headers values
func NewGetIdentityprovidersPingForbidden() *GetIdentityprovidersPingForbidden {
	return &GetIdentityprovidersPingForbidden{}
}

/*
GetIdentityprovidersPingForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetIdentityprovidersPingForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders ping forbidden response has a 2xx status code
func (o *GetIdentityprovidersPingForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders ping forbidden response has a 3xx status code
func (o *GetIdentityprovidersPingForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders ping forbidden response has a 4xx status code
func (o *GetIdentityprovidersPingForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders ping forbidden response has a 5xx status code
func (o *GetIdentityprovidersPingForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders ping forbidden response a status code equal to that given
func (o *GetIdentityprovidersPingForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetIdentityprovidersPingForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/ping][%d] getIdentityprovidersPingForbidden  %+v", 403, o.Payload)
}

func (o *GetIdentityprovidersPingForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/ping][%d] getIdentityprovidersPingForbidden  %+v", 403, o.Payload)
}

func (o *GetIdentityprovidersPingForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersPingForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersPingNotFound creates a GetIdentityprovidersPingNotFound with default headers values
func NewGetIdentityprovidersPingNotFound() *GetIdentityprovidersPingNotFound {
	return &GetIdentityprovidersPingNotFound{}
}

/*
GetIdentityprovidersPingNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetIdentityprovidersPingNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders ping not found response has a 2xx status code
func (o *GetIdentityprovidersPingNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders ping not found response has a 3xx status code
func (o *GetIdentityprovidersPingNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders ping not found response has a 4xx status code
func (o *GetIdentityprovidersPingNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders ping not found response has a 5xx status code
func (o *GetIdentityprovidersPingNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders ping not found response a status code equal to that given
func (o *GetIdentityprovidersPingNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetIdentityprovidersPingNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/ping][%d] getIdentityprovidersPingNotFound  %+v", 404, o.Payload)
}

func (o *GetIdentityprovidersPingNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/ping][%d] getIdentityprovidersPingNotFound  %+v", 404, o.Payload)
}

func (o *GetIdentityprovidersPingNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersPingNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersPingRequestTimeout creates a GetIdentityprovidersPingRequestTimeout with default headers values
func NewGetIdentityprovidersPingRequestTimeout() *GetIdentityprovidersPingRequestTimeout {
	return &GetIdentityprovidersPingRequestTimeout{}
}

/*
GetIdentityprovidersPingRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetIdentityprovidersPingRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders ping request timeout response has a 2xx status code
func (o *GetIdentityprovidersPingRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders ping request timeout response has a 3xx status code
func (o *GetIdentityprovidersPingRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders ping request timeout response has a 4xx status code
func (o *GetIdentityprovidersPingRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders ping request timeout response has a 5xx status code
func (o *GetIdentityprovidersPingRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders ping request timeout response a status code equal to that given
func (o *GetIdentityprovidersPingRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetIdentityprovidersPingRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/ping][%d] getIdentityprovidersPingRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetIdentityprovidersPingRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/ping][%d] getIdentityprovidersPingRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetIdentityprovidersPingRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersPingRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersPingRequestEntityTooLarge creates a GetIdentityprovidersPingRequestEntityTooLarge with default headers values
func NewGetIdentityprovidersPingRequestEntityTooLarge() *GetIdentityprovidersPingRequestEntityTooLarge {
	return &GetIdentityprovidersPingRequestEntityTooLarge{}
}

/*
GetIdentityprovidersPingRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetIdentityprovidersPingRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders ping request entity too large response has a 2xx status code
func (o *GetIdentityprovidersPingRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders ping request entity too large response has a 3xx status code
func (o *GetIdentityprovidersPingRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders ping request entity too large response has a 4xx status code
func (o *GetIdentityprovidersPingRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders ping request entity too large response has a 5xx status code
func (o *GetIdentityprovidersPingRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders ping request entity too large response a status code equal to that given
func (o *GetIdentityprovidersPingRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetIdentityprovidersPingRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/ping][%d] getIdentityprovidersPingRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetIdentityprovidersPingRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/ping][%d] getIdentityprovidersPingRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetIdentityprovidersPingRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersPingRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersPingUnsupportedMediaType creates a GetIdentityprovidersPingUnsupportedMediaType with default headers values
func NewGetIdentityprovidersPingUnsupportedMediaType() *GetIdentityprovidersPingUnsupportedMediaType {
	return &GetIdentityprovidersPingUnsupportedMediaType{}
}

/*
GetIdentityprovidersPingUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetIdentityprovidersPingUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders ping unsupported media type response has a 2xx status code
func (o *GetIdentityprovidersPingUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders ping unsupported media type response has a 3xx status code
func (o *GetIdentityprovidersPingUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders ping unsupported media type response has a 4xx status code
func (o *GetIdentityprovidersPingUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders ping unsupported media type response has a 5xx status code
func (o *GetIdentityprovidersPingUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders ping unsupported media type response a status code equal to that given
func (o *GetIdentityprovidersPingUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetIdentityprovidersPingUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/ping][%d] getIdentityprovidersPingUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetIdentityprovidersPingUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/ping][%d] getIdentityprovidersPingUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetIdentityprovidersPingUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersPingUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersPingTooManyRequests creates a GetIdentityprovidersPingTooManyRequests with default headers values
func NewGetIdentityprovidersPingTooManyRequests() *GetIdentityprovidersPingTooManyRequests {
	return &GetIdentityprovidersPingTooManyRequests{}
}

/*
GetIdentityprovidersPingTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetIdentityprovidersPingTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders ping too many requests response has a 2xx status code
func (o *GetIdentityprovidersPingTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders ping too many requests response has a 3xx status code
func (o *GetIdentityprovidersPingTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders ping too many requests response has a 4xx status code
func (o *GetIdentityprovidersPingTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders ping too many requests response has a 5xx status code
func (o *GetIdentityprovidersPingTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders ping too many requests response a status code equal to that given
func (o *GetIdentityprovidersPingTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetIdentityprovidersPingTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/ping][%d] getIdentityprovidersPingTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetIdentityprovidersPingTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/ping][%d] getIdentityprovidersPingTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetIdentityprovidersPingTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersPingTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersPingInternalServerError creates a GetIdentityprovidersPingInternalServerError with default headers values
func NewGetIdentityprovidersPingInternalServerError() *GetIdentityprovidersPingInternalServerError {
	return &GetIdentityprovidersPingInternalServerError{}
}

/*
GetIdentityprovidersPingInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetIdentityprovidersPingInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders ping internal server error response has a 2xx status code
func (o *GetIdentityprovidersPingInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders ping internal server error response has a 3xx status code
func (o *GetIdentityprovidersPingInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders ping internal server error response has a 4xx status code
func (o *GetIdentityprovidersPingInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get identityproviders ping internal server error response has a 5xx status code
func (o *GetIdentityprovidersPingInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get identityproviders ping internal server error response a status code equal to that given
func (o *GetIdentityprovidersPingInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetIdentityprovidersPingInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/ping][%d] getIdentityprovidersPingInternalServerError  %+v", 500, o.Payload)
}

func (o *GetIdentityprovidersPingInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/ping][%d] getIdentityprovidersPingInternalServerError  %+v", 500, o.Payload)
}

func (o *GetIdentityprovidersPingInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersPingInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersPingServiceUnavailable creates a GetIdentityprovidersPingServiceUnavailable with default headers values
func NewGetIdentityprovidersPingServiceUnavailable() *GetIdentityprovidersPingServiceUnavailable {
	return &GetIdentityprovidersPingServiceUnavailable{}
}

/*
GetIdentityprovidersPingServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetIdentityprovidersPingServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders ping service unavailable response has a 2xx status code
func (o *GetIdentityprovidersPingServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders ping service unavailable response has a 3xx status code
func (o *GetIdentityprovidersPingServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders ping service unavailable response has a 4xx status code
func (o *GetIdentityprovidersPingServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get identityproviders ping service unavailable response has a 5xx status code
func (o *GetIdentityprovidersPingServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get identityproviders ping service unavailable response a status code equal to that given
func (o *GetIdentityprovidersPingServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetIdentityprovidersPingServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/ping][%d] getIdentityprovidersPingServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetIdentityprovidersPingServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/ping][%d] getIdentityprovidersPingServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetIdentityprovidersPingServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersPingServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersPingGatewayTimeout creates a GetIdentityprovidersPingGatewayTimeout with default headers values
func NewGetIdentityprovidersPingGatewayTimeout() *GetIdentityprovidersPingGatewayTimeout {
	return &GetIdentityprovidersPingGatewayTimeout{}
}

/*
GetIdentityprovidersPingGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetIdentityprovidersPingGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders ping gateway timeout response has a 2xx status code
func (o *GetIdentityprovidersPingGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders ping gateway timeout response has a 3xx status code
func (o *GetIdentityprovidersPingGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders ping gateway timeout response has a 4xx status code
func (o *GetIdentityprovidersPingGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get identityproviders ping gateway timeout response has a 5xx status code
func (o *GetIdentityprovidersPingGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get identityproviders ping gateway timeout response a status code equal to that given
func (o *GetIdentityprovidersPingGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetIdentityprovidersPingGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/ping][%d] getIdentityprovidersPingGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetIdentityprovidersPingGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/ping][%d] getIdentityprovidersPingGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetIdentityprovidersPingGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersPingGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
