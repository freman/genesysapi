// Code generated by go-swagger; DO NOT EDIT.

package identity_provider

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// DeleteIdentityprovidersPurecloudReader is a Reader for the DeleteIdentityprovidersPurecloud structure.
type DeleteIdentityprovidersPurecloudReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteIdentityprovidersPurecloudReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteIdentityprovidersPurecloudOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteIdentityprovidersPurecloudBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteIdentityprovidersPurecloudUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteIdentityprovidersPurecloudForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteIdentityprovidersPurecloudNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewDeleteIdentityprovidersPurecloudRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewDeleteIdentityprovidersPurecloudRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDeleteIdentityprovidersPurecloudUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteIdentityprovidersPurecloudTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteIdentityprovidersPurecloudInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteIdentityprovidersPurecloudServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteIdentityprovidersPurecloudGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteIdentityprovidersPurecloudOK creates a DeleteIdentityprovidersPurecloudOK with default headers values
func NewDeleteIdentityprovidersPurecloudOK() *DeleteIdentityprovidersPurecloudOK {
	return &DeleteIdentityprovidersPurecloudOK{}
}

/*
DeleteIdentityprovidersPurecloudOK describes a response with status code 200, with default header values.

successful operation
*/
type DeleteIdentityprovidersPurecloudOK struct {
	Payload models.Empty
}

// IsSuccess returns true when this delete identityproviders purecloud o k response has a 2xx status code
func (o *DeleteIdentityprovidersPurecloudOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete identityproviders purecloud o k response has a 3xx status code
func (o *DeleteIdentityprovidersPurecloudOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identityproviders purecloud o k response has a 4xx status code
func (o *DeleteIdentityprovidersPurecloudOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete identityproviders purecloud o k response has a 5xx status code
func (o *DeleteIdentityprovidersPurecloudOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete identityproviders purecloud o k response a status code equal to that given
func (o *DeleteIdentityprovidersPurecloudOK) IsCode(code int) bool {
	return code == 200
}

func (o *DeleteIdentityprovidersPurecloudOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/purecloud][%d] deleteIdentityprovidersPurecloudOK  %+v", 200, o.Payload)
}

func (o *DeleteIdentityprovidersPurecloudOK) String() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/purecloud][%d] deleteIdentityprovidersPurecloudOK  %+v", 200, o.Payload)
}

func (o *DeleteIdentityprovidersPurecloudOK) GetPayload() models.Empty {
	return o.Payload
}

func (o *DeleteIdentityprovidersPurecloudOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIdentityprovidersPurecloudBadRequest creates a DeleteIdentityprovidersPurecloudBadRequest with default headers values
func NewDeleteIdentityprovidersPurecloudBadRequest() *DeleteIdentityprovidersPurecloudBadRequest {
	return &DeleteIdentityprovidersPurecloudBadRequest{}
}

/*
DeleteIdentityprovidersPurecloudBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type DeleteIdentityprovidersPurecloudBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete identityproviders purecloud bad request response has a 2xx status code
func (o *DeleteIdentityprovidersPurecloudBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete identityproviders purecloud bad request response has a 3xx status code
func (o *DeleteIdentityprovidersPurecloudBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identityproviders purecloud bad request response has a 4xx status code
func (o *DeleteIdentityprovidersPurecloudBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete identityproviders purecloud bad request response has a 5xx status code
func (o *DeleteIdentityprovidersPurecloudBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete identityproviders purecloud bad request response a status code equal to that given
func (o *DeleteIdentityprovidersPurecloudBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteIdentityprovidersPurecloudBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/purecloud][%d] deleteIdentityprovidersPurecloudBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteIdentityprovidersPurecloudBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/purecloud][%d] deleteIdentityprovidersPurecloudBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteIdentityprovidersPurecloudBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteIdentityprovidersPurecloudBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIdentityprovidersPurecloudUnauthorized creates a DeleteIdentityprovidersPurecloudUnauthorized with default headers values
func NewDeleteIdentityprovidersPurecloudUnauthorized() *DeleteIdentityprovidersPurecloudUnauthorized {
	return &DeleteIdentityprovidersPurecloudUnauthorized{}
}

/*
DeleteIdentityprovidersPurecloudUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type DeleteIdentityprovidersPurecloudUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete identityproviders purecloud unauthorized response has a 2xx status code
func (o *DeleteIdentityprovidersPurecloudUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete identityproviders purecloud unauthorized response has a 3xx status code
func (o *DeleteIdentityprovidersPurecloudUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identityproviders purecloud unauthorized response has a 4xx status code
func (o *DeleteIdentityprovidersPurecloudUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete identityproviders purecloud unauthorized response has a 5xx status code
func (o *DeleteIdentityprovidersPurecloudUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete identityproviders purecloud unauthorized response a status code equal to that given
func (o *DeleteIdentityprovidersPurecloudUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteIdentityprovidersPurecloudUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/purecloud][%d] deleteIdentityprovidersPurecloudUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteIdentityprovidersPurecloudUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/purecloud][%d] deleteIdentityprovidersPurecloudUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteIdentityprovidersPurecloudUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteIdentityprovidersPurecloudUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIdentityprovidersPurecloudForbidden creates a DeleteIdentityprovidersPurecloudForbidden with default headers values
func NewDeleteIdentityprovidersPurecloudForbidden() *DeleteIdentityprovidersPurecloudForbidden {
	return &DeleteIdentityprovidersPurecloudForbidden{}
}

/*
DeleteIdentityprovidersPurecloudForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type DeleteIdentityprovidersPurecloudForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete identityproviders purecloud forbidden response has a 2xx status code
func (o *DeleteIdentityprovidersPurecloudForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete identityproviders purecloud forbidden response has a 3xx status code
func (o *DeleteIdentityprovidersPurecloudForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identityproviders purecloud forbidden response has a 4xx status code
func (o *DeleteIdentityprovidersPurecloudForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete identityproviders purecloud forbidden response has a 5xx status code
func (o *DeleteIdentityprovidersPurecloudForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete identityproviders purecloud forbidden response a status code equal to that given
func (o *DeleteIdentityprovidersPurecloudForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteIdentityprovidersPurecloudForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/purecloud][%d] deleteIdentityprovidersPurecloudForbidden  %+v", 403, o.Payload)
}

func (o *DeleteIdentityprovidersPurecloudForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/purecloud][%d] deleteIdentityprovidersPurecloudForbidden  %+v", 403, o.Payload)
}

func (o *DeleteIdentityprovidersPurecloudForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteIdentityprovidersPurecloudForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIdentityprovidersPurecloudNotFound creates a DeleteIdentityprovidersPurecloudNotFound with default headers values
func NewDeleteIdentityprovidersPurecloudNotFound() *DeleteIdentityprovidersPurecloudNotFound {
	return &DeleteIdentityprovidersPurecloudNotFound{}
}

/*
DeleteIdentityprovidersPurecloudNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type DeleteIdentityprovidersPurecloudNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete identityproviders purecloud not found response has a 2xx status code
func (o *DeleteIdentityprovidersPurecloudNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete identityproviders purecloud not found response has a 3xx status code
func (o *DeleteIdentityprovidersPurecloudNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identityproviders purecloud not found response has a 4xx status code
func (o *DeleteIdentityprovidersPurecloudNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete identityproviders purecloud not found response has a 5xx status code
func (o *DeleteIdentityprovidersPurecloudNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete identityproviders purecloud not found response a status code equal to that given
func (o *DeleteIdentityprovidersPurecloudNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteIdentityprovidersPurecloudNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/purecloud][%d] deleteIdentityprovidersPurecloudNotFound  %+v", 404, o.Payload)
}

func (o *DeleteIdentityprovidersPurecloudNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/purecloud][%d] deleteIdentityprovidersPurecloudNotFound  %+v", 404, o.Payload)
}

func (o *DeleteIdentityprovidersPurecloudNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteIdentityprovidersPurecloudNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIdentityprovidersPurecloudRequestTimeout creates a DeleteIdentityprovidersPurecloudRequestTimeout with default headers values
func NewDeleteIdentityprovidersPurecloudRequestTimeout() *DeleteIdentityprovidersPurecloudRequestTimeout {
	return &DeleteIdentityprovidersPurecloudRequestTimeout{}
}

/*
DeleteIdentityprovidersPurecloudRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type DeleteIdentityprovidersPurecloudRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete identityproviders purecloud request timeout response has a 2xx status code
func (o *DeleteIdentityprovidersPurecloudRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete identityproviders purecloud request timeout response has a 3xx status code
func (o *DeleteIdentityprovidersPurecloudRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identityproviders purecloud request timeout response has a 4xx status code
func (o *DeleteIdentityprovidersPurecloudRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete identityproviders purecloud request timeout response has a 5xx status code
func (o *DeleteIdentityprovidersPurecloudRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this delete identityproviders purecloud request timeout response a status code equal to that given
func (o *DeleteIdentityprovidersPurecloudRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *DeleteIdentityprovidersPurecloudRequestTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/purecloud][%d] deleteIdentityprovidersPurecloudRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteIdentityprovidersPurecloudRequestTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/purecloud][%d] deleteIdentityprovidersPurecloudRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteIdentityprovidersPurecloudRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteIdentityprovidersPurecloudRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIdentityprovidersPurecloudRequestEntityTooLarge creates a DeleteIdentityprovidersPurecloudRequestEntityTooLarge with default headers values
func NewDeleteIdentityprovidersPurecloudRequestEntityTooLarge() *DeleteIdentityprovidersPurecloudRequestEntityTooLarge {
	return &DeleteIdentityprovidersPurecloudRequestEntityTooLarge{}
}

/*
DeleteIdentityprovidersPurecloudRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type DeleteIdentityprovidersPurecloudRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete identityproviders purecloud request entity too large response has a 2xx status code
func (o *DeleteIdentityprovidersPurecloudRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete identityproviders purecloud request entity too large response has a 3xx status code
func (o *DeleteIdentityprovidersPurecloudRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identityproviders purecloud request entity too large response has a 4xx status code
func (o *DeleteIdentityprovidersPurecloudRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete identityproviders purecloud request entity too large response has a 5xx status code
func (o *DeleteIdentityprovidersPurecloudRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this delete identityproviders purecloud request entity too large response a status code equal to that given
func (o *DeleteIdentityprovidersPurecloudRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *DeleteIdentityprovidersPurecloudRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/purecloud][%d] deleteIdentityprovidersPurecloudRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteIdentityprovidersPurecloudRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/purecloud][%d] deleteIdentityprovidersPurecloudRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteIdentityprovidersPurecloudRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteIdentityprovidersPurecloudRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIdentityprovidersPurecloudUnsupportedMediaType creates a DeleteIdentityprovidersPurecloudUnsupportedMediaType with default headers values
func NewDeleteIdentityprovidersPurecloudUnsupportedMediaType() *DeleteIdentityprovidersPurecloudUnsupportedMediaType {
	return &DeleteIdentityprovidersPurecloudUnsupportedMediaType{}
}

/*
DeleteIdentityprovidersPurecloudUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type DeleteIdentityprovidersPurecloudUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete identityproviders purecloud unsupported media type response has a 2xx status code
func (o *DeleteIdentityprovidersPurecloudUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete identityproviders purecloud unsupported media type response has a 3xx status code
func (o *DeleteIdentityprovidersPurecloudUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identityproviders purecloud unsupported media type response has a 4xx status code
func (o *DeleteIdentityprovidersPurecloudUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete identityproviders purecloud unsupported media type response has a 5xx status code
func (o *DeleteIdentityprovidersPurecloudUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this delete identityproviders purecloud unsupported media type response a status code equal to that given
func (o *DeleteIdentityprovidersPurecloudUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *DeleteIdentityprovidersPurecloudUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/purecloud][%d] deleteIdentityprovidersPurecloudUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteIdentityprovidersPurecloudUnsupportedMediaType) String() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/purecloud][%d] deleteIdentityprovidersPurecloudUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteIdentityprovidersPurecloudUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteIdentityprovidersPurecloudUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIdentityprovidersPurecloudTooManyRequests creates a DeleteIdentityprovidersPurecloudTooManyRequests with default headers values
func NewDeleteIdentityprovidersPurecloudTooManyRequests() *DeleteIdentityprovidersPurecloudTooManyRequests {
	return &DeleteIdentityprovidersPurecloudTooManyRequests{}
}

/*
DeleteIdentityprovidersPurecloudTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type DeleteIdentityprovidersPurecloudTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete identityproviders purecloud too many requests response has a 2xx status code
func (o *DeleteIdentityprovidersPurecloudTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete identityproviders purecloud too many requests response has a 3xx status code
func (o *DeleteIdentityprovidersPurecloudTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identityproviders purecloud too many requests response has a 4xx status code
func (o *DeleteIdentityprovidersPurecloudTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete identityproviders purecloud too many requests response has a 5xx status code
func (o *DeleteIdentityprovidersPurecloudTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete identityproviders purecloud too many requests response a status code equal to that given
func (o *DeleteIdentityprovidersPurecloudTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *DeleteIdentityprovidersPurecloudTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/purecloud][%d] deleteIdentityprovidersPurecloudTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteIdentityprovidersPurecloudTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/purecloud][%d] deleteIdentityprovidersPurecloudTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteIdentityprovidersPurecloudTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteIdentityprovidersPurecloudTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIdentityprovidersPurecloudInternalServerError creates a DeleteIdentityprovidersPurecloudInternalServerError with default headers values
func NewDeleteIdentityprovidersPurecloudInternalServerError() *DeleteIdentityprovidersPurecloudInternalServerError {
	return &DeleteIdentityprovidersPurecloudInternalServerError{}
}

/*
DeleteIdentityprovidersPurecloudInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type DeleteIdentityprovidersPurecloudInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete identityproviders purecloud internal server error response has a 2xx status code
func (o *DeleteIdentityprovidersPurecloudInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete identityproviders purecloud internal server error response has a 3xx status code
func (o *DeleteIdentityprovidersPurecloudInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identityproviders purecloud internal server error response has a 4xx status code
func (o *DeleteIdentityprovidersPurecloudInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete identityproviders purecloud internal server error response has a 5xx status code
func (o *DeleteIdentityprovidersPurecloudInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete identityproviders purecloud internal server error response a status code equal to that given
func (o *DeleteIdentityprovidersPurecloudInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteIdentityprovidersPurecloudInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/purecloud][%d] deleteIdentityprovidersPurecloudInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteIdentityprovidersPurecloudInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/purecloud][%d] deleteIdentityprovidersPurecloudInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteIdentityprovidersPurecloudInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteIdentityprovidersPurecloudInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIdentityprovidersPurecloudServiceUnavailable creates a DeleteIdentityprovidersPurecloudServiceUnavailable with default headers values
func NewDeleteIdentityprovidersPurecloudServiceUnavailable() *DeleteIdentityprovidersPurecloudServiceUnavailable {
	return &DeleteIdentityprovidersPurecloudServiceUnavailable{}
}

/*
DeleteIdentityprovidersPurecloudServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type DeleteIdentityprovidersPurecloudServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete identityproviders purecloud service unavailable response has a 2xx status code
func (o *DeleteIdentityprovidersPurecloudServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete identityproviders purecloud service unavailable response has a 3xx status code
func (o *DeleteIdentityprovidersPurecloudServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identityproviders purecloud service unavailable response has a 4xx status code
func (o *DeleteIdentityprovidersPurecloudServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete identityproviders purecloud service unavailable response has a 5xx status code
func (o *DeleteIdentityprovidersPurecloudServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this delete identityproviders purecloud service unavailable response a status code equal to that given
func (o *DeleteIdentityprovidersPurecloudServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *DeleteIdentityprovidersPurecloudServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/purecloud][%d] deleteIdentityprovidersPurecloudServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteIdentityprovidersPurecloudServiceUnavailable) String() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/purecloud][%d] deleteIdentityprovidersPurecloudServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteIdentityprovidersPurecloudServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteIdentityprovidersPurecloudServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIdentityprovidersPurecloudGatewayTimeout creates a DeleteIdentityprovidersPurecloudGatewayTimeout with default headers values
func NewDeleteIdentityprovidersPurecloudGatewayTimeout() *DeleteIdentityprovidersPurecloudGatewayTimeout {
	return &DeleteIdentityprovidersPurecloudGatewayTimeout{}
}

/*
DeleteIdentityprovidersPurecloudGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type DeleteIdentityprovidersPurecloudGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete identityproviders purecloud gateway timeout response has a 2xx status code
func (o *DeleteIdentityprovidersPurecloudGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete identityproviders purecloud gateway timeout response has a 3xx status code
func (o *DeleteIdentityprovidersPurecloudGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identityproviders purecloud gateway timeout response has a 4xx status code
func (o *DeleteIdentityprovidersPurecloudGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete identityproviders purecloud gateway timeout response has a 5xx status code
func (o *DeleteIdentityprovidersPurecloudGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this delete identityproviders purecloud gateway timeout response a status code equal to that given
func (o *DeleteIdentityprovidersPurecloudGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *DeleteIdentityprovidersPurecloudGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/purecloud][%d] deleteIdentityprovidersPurecloudGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteIdentityprovidersPurecloudGatewayTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/purecloud][%d] deleteIdentityprovidersPurecloudGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteIdentityprovidersPurecloudGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteIdentityprovidersPurecloudGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
