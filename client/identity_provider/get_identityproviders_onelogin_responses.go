// Code generated by go-swagger; DO NOT EDIT.

package identity_provider

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetIdentityprovidersOneloginReader is a Reader for the GetIdentityprovidersOnelogin structure.
type GetIdentityprovidersOneloginReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetIdentityprovidersOneloginReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetIdentityprovidersOneloginOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetIdentityprovidersOneloginBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetIdentityprovidersOneloginUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetIdentityprovidersOneloginForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetIdentityprovidersOneloginNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetIdentityprovidersOneloginRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetIdentityprovidersOneloginRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetIdentityprovidersOneloginUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetIdentityprovidersOneloginTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetIdentityprovidersOneloginInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetIdentityprovidersOneloginServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetIdentityprovidersOneloginGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetIdentityprovidersOneloginOK creates a GetIdentityprovidersOneloginOK with default headers values
func NewGetIdentityprovidersOneloginOK() *GetIdentityprovidersOneloginOK {
	return &GetIdentityprovidersOneloginOK{}
}

/*
GetIdentityprovidersOneloginOK describes a response with status code 200, with default header values.

successful operation
*/
type GetIdentityprovidersOneloginOK struct {
	Payload *models.OneLogin
}

// IsSuccess returns true when this get identityproviders onelogin o k response has a 2xx status code
func (o *GetIdentityprovidersOneloginOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get identityproviders onelogin o k response has a 3xx status code
func (o *GetIdentityprovidersOneloginOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders onelogin o k response has a 4xx status code
func (o *GetIdentityprovidersOneloginOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get identityproviders onelogin o k response has a 5xx status code
func (o *GetIdentityprovidersOneloginOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders onelogin o k response a status code equal to that given
func (o *GetIdentityprovidersOneloginOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetIdentityprovidersOneloginOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/onelogin][%d] getIdentityprovidersOneloginOK  %+v", 200, o.Payload)
}

func (o *GetIdentityprovidersOneloginOK) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/onelogin][%d] getIdentityprovidersOneloginOK  %+v", 200, o.Payload)
}

func (o *GetIdentityprovidersOneloginOK) GetPayload() *models.OneLogin {
	return o.Payload
}

func (o *GetIdentityprovidersOneloginOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OneLogin)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersOneloginBadRequest creates a GetIdentityprovidersOneloginBadRequest with default headers values
func NewGetIdentityprovidersOneloginBadRequest() *GetIdentityprovidersOneloginBadRequest {
	return &GetIdentityprovidersOneloginBadRequest{}
}

/*
GetIdentityprovidersOneloginBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetIdentityprovidersOneloginBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders onelogin bad request response has a 2xx status code
func (o *GetIdentityprovidersOneloginBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders onelogin bad request response has a 3xx status code
func (o *GetIdentityprovidersOneloginBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders onelogin bad request response has a 4xx status code
func (o *GetIdentityprovidersOneloginBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders onelogin bad request response has a 5xx status code
func (o *GetIdentityprovidersOneloginBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders onelogin bad request response a status code equal to that given
func (o *GetIdentityprovidersOneloginBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetIdentityprovidersOneloginBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/onelogin][%d] getIdentityprovidersOneloginBadRequest  %+v", 400, o.Payload)
}

func (o *GetIdentityprovidersOneloginBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/onelogin][%d] getIdentityprovidersOneloginBadRequest  %+v", 400, o.Payload)
}

func (o *GetIdentityprovidersOneloginBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersOneloginBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersOneloginUnauthorized creates a GetIdentityprovidersOneloginUnauthorized with default headers values
func NewGetIdentityprovidersOneloginUnauthorized() *GetIdentityprovidersOneloginUnauthorized {
	return &GetIdentityprovidersOneloginUnauthorized{}
}

/*
GetIdentityprovidersOneloginUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetIdentityprovidersOneloginUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders onelogin unauthorized response has a 2xx status code
func (o *GetIdentityprovidersOneloginUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders onelogin unauthorized response has a 3xx status code
func (o *GetIdentityprovidersOneloginUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders onelogin unauthorized response has a 4xx status code
func (o *GetIdentityprovidersOneloginUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders onelogin unauthorized response has a 5xx status code
func (o *GetIdentityprovidersOneloginUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders onelogin unauthorized response a status code equal to that given
func (o *GetIdentityprovidersOneloginUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetIdentityprovidersOneloginUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/onelogin][%d] getIdentityprovidersOneloginUnauthorized  %+v", 401, o.Payload)
}

func (o *GetIdentityprovidersOneloginUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/onelogin][%d] getIdentityprovidersOneloginUnauthorized  %+v", 401, o.Payload)
}

func (o *GetIdentityprovidersOneloginUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersOneloginUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersOneloginForbidden creates a GetIdentityprovidersOneloginForbidden with default headers values
func NewGetIdentityprovidersOneloginForbidden() *GetIdentityprovidersOneloginForbidden {
	return &GetIdentityprovidersOneloginForbidden{}
}

/*
GetIdentityprovidersOneloginForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetIdentityprovidersOneloginForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders onelogin forbidden response has a 2xx status code
func (o *GetIdentityprovidersOneloginForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders onelogin forbidden response has a 3xx status code
func (o *GetIdentityprovidersOneloginForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders onelogin forbidden response has a 4xx status code
func (o *GetIdentityprovidersOneloginForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders onelogin forbidden response has a 5xx status code
func (o *GetIdentityprovidersOneloginForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders onelogin forbidden response a status code equal to that given
func (o *GetIdentityprovidersOneloginForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetIdentityprovidersOneloginForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/onelogin][%d] getIdentityprovidersOneloginForbidden  %+v", 403, o.Payload)
}

func (o *GetIdentityprovidersOneloginForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/onelogin][%d] getIdentityprovidersOneloginForbidden  %+v", 403, o.Payload)
}

func (o *GetIdentityprovidersOneloginForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersOneloginForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersOneloginNotFound creates a GetIdentityprovidersOneloginNotFound with default headers values
func NewGetIdentityprovidersOneloginNotFound() *GetIdentityprovidersOneloginNotFound {
	return &GetIdentityprovidersOneloginNotFound{}
}

/*
GetIdentityprovidersOneloginNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetIdentityprovidersOneloginNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders onelogin not found response has a 2xx status code
func (o *GetIdentityprovidersOneloginNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders onelogin not found response has a 3xx status code
func (o *GetIdentityprovidersOneloginNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders onelogin not found response has a 4xx status code
func (o *GetIdentityprovidersOneloginNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders onelogin not found response has a 5xx status code
func (o *GetIdentityprovidersOneloginNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders onelogin not found response a status code equal to that given
func (o *GetIdentityprovidersOneloginNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetIdentityprovidersOneloginNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/onelogin][%d] getIdentityprovidersOneloginNotFound  %+v", 404, o.Payload)
}

func (o *GetIdentityprovidersOneloginNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/onelogin][%d] getIdentityprovidersOneloginNotFound  %+v", 404, o.Payload)
}

func (o *GetIdentityprovidersOneloginNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersOneloginNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersOneloginRequestTimeout creates a GetIdentityprovidersOneloginRequestTimeout with default headers values
func NewGetIdentityprovidersOneloginRequestTimeout() *GetIdentityprovidersOneloginRequestTimeout {
	return &GetIdentityprovidersOneloginRequestTimeout{}
}

/*
GetIdentityprovidersOneloginRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetIdentityprovidersOneloginRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders onelogin request timeout response has a 2xx status code
func (o *GetIdentityprovidersOneloginRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders onelogin request timeout response has a 3xx status code
func (o *GetIdentityprovidersOneloginRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders onelogin request timeout response has a 4xx status code
func (o *GetIdentityprovidersOneloginRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders onelogin request timeout response has a 5xx status code
func (o *GetIdentityprovidersOneloginRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders onelogin request timeout response a status code equal to that given
func (o *GetIdentityprovidersOneloginRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetIdentityprovidersOneloginRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/onelogin][%d] getIdentityprovidersOneloginRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetIdentityprovidersOneloginRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/onelogin][%d] getIdentityprovidersOneloginRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetIdentityprovidersOneloginRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersOneloginRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersOneloginRequestEntityTooLarge creates a GetIdentityprovidersOneloginRequestEntityTooLarge with default headers values
func NewGetIdentityprovidersOneloginRequestEntityTooLarge() *GetIdentityprovidersOneloginRequestEntityTooLarge {
	return &GetIdentityprovidersOneloginRequestEntityTooLarge{}
}

/*
GetIdentityprovidersOneloginRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetIdentityprovidersOneloginRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders onelogin request entity too large response has a 2xx status code
func (o *GetIdentityprovidersOneloginRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders onelogin request entity too large response has a 3xx status code
func (o *GetIdentityprovidersOneloginRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders onelogin request entity too large response has a 4xx status code
func (o *GetIdentityprovidersOneloginRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders onelogin request entity too large response has a 5xx status code
func (o *GetIdentityprovidersOneloginRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders onelogin request entity too large response a status code equal to that given
func (o *GetIdentityprovidersOneloginRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetIdentityprovidersOneloginRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/onelogin][%d] getIdentityprovidersOneloginRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetIdentityprovidersOneloginRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/onelogin][%d] getIdentityprovidersOneloginRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetIdentityprovidersOneloginRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersOneloginRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersOneloginUnsupportedMediaType creates a GetIdentityprovidersOneloginUnsupportedMediaType with default headers values
func NewGetIdentityprovidersOneloginUnsupportedMediaType() *GetIdentityprovidersOneloginUnsupportedMediaType {
	return &GetIdentityprovidersOneloginUnsupportedMediaType{}
}

/*
GetIdentityprovidersOneloginUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetIdentityprovidersOneloginUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders onelogin unsupported media type response has a 2xx status code
func (o *GetIdentityprovidersOneloginUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders onelogin unsupported media type response has a 3xx status code
func (o *GetIdentityprovidersOneloginUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders onelogin unsupported media type response has a 4xx status code
func (o *GetIdentityprovidersOneloginUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders onelogin unsupported media type response has a 5xx status code
func (o *GetIdentityprovidersOneloginUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders onelogin unsupported media type response a status code equal to that given
func (o *GetIdentityprovidersOneloginUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetIdentityprovidersOneloginUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/onelogin][%d] getIdentityprovidersOneloginUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetIdentityprovidersOneloginUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/onelogin][%d] getIdentityprovidersOneloginUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetIdentityprovidersOneloginUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersOneloginUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersOneloginTooManyRequests creates a GetIdentityprovidersOneloginTooManyRequests with default headers values
func NewGetIdentityprovidersOneloginTooManyRequests() *GetIdentityprovidersOneloginTooManyRequests {
	return &GetIdentityprovidersOneloginTooManyRequests{}
}

/*
GetIdentityprovidersOneloginTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetIdentityprovidersOneloginTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders onelogin too many requests response has a 2xx status code
func (o *GetIdentityprovidersOneloginTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders onelogin too many requests response has a 3xx status code
func (o *GetIdentityprovidersOneloginTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders onelogin too many requests response has a 4xx status code
func (o *GetIdentityprovidersOneloginTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders onelogin too many requests response has a 5xx status code
func (o *GetIdentityprovidersOneloginTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders onelogin too many requests response a status code equal to that given
func (o *GetIdentityprovidersOneloginTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetIdentityprovidersOneloginTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/onelogin][%d] getIdentityprovidersOneloginTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetIdentityprovidersOneloginTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/onelogin][%d] getIdentityprovidersOneloginTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetIdentityprovidersOneloginTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersOneloginTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersOneloginInternalServerError creates a GetIdentityprovidersOneloginInternalServerError with default headers values
func NewGetIdentityprovidersOneloginInternalServerError() *GetIdentityprovidersOneloginInternalServerError {
	return &GetIdentityprovidersOneloginInternalServerError{}
}

/*
GetIdentityprovidersOneloginInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetIdentityprovidersOneloginInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders onelogin internal server error response has a 2xx status code
func (o *GetIdentityprovidersOneloginInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders onelogin internal server error response has a 3xx status code
func (o *GetIdentityprovidersOneloginInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders onelogin internal server error response has a 4xx status code
func (o *GetIdentityprovidersOneloginInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get identityproviders onelogin internal server error response has a 5xx status code
func (o *GetIdentityprovidersOneloginInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get identityproviders onelogin internal server error response a status code equal to that given
func (o *GetIdentityprovidersOneloginInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetIdentityprovidersOneloginInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/onelogin][%d] getIdentityprovidersOneloginInternalServerError  %+v", 500, o.Payload)
}

func (o *GetIdentityprovidersOneloginInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/onelogin][%d] getIdentityprovidersOneloginInternalServerError  %+v", 500, o.Payload)
}

func (o *GetIdentityprovidersOneloginInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersOneloginInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersOneloginServiceUnavailable creates a GetIdentityprovidersOneloginServiceUnavailable with default headers values
func NewGetIdentityprovidersOneloginServiceUnavailable() *GetIdentityprovidersOneloginServiceUnavailable {
	return &GetIdentityprovidersOneloginServiceUnavailable{}
}

/*
GetIdentityprovidersOneloginServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetIdentityprovidersOneloginServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders onelogin service unavailable response has a 2xx status code
func (o *GetIdentityprovidersOneloginServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders onelogin service unavailable response has a 3xx status code
func (o *GetIdentityprovidersOneloginServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders onelogin service unavailable response has a 4xx status code
func (o *GetIdentityprovidersOneloginServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get identityproviders onelogin service unavailable response has a 5xx status code
func (o *GetIdentityprovidersOneloginServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get identityproviders onelogin service unavailable response a status code equal to that given
func (o *GetIdentityprovidersOneloginServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetIdentityprovidersOneloginServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/onelogin][%d] getIdentityprovidersOneloginServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetIdentityprovidersOneloginServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/onelogin][%d] getIdentityprovidersOneloginServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetIdentityprovidersOneloginServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersOneloginServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersOneloginGatewayTimeout creates a GetIdentityprovidersOneloginGatewayTimeout with default headers values
func NewGetIdentityprovidersOneloginGatewayTimeout() *GetIdentityprovidersOneloginGatewayTimeout {
	return &GetIdentityprovidersOneloginGatewayTimeout{}
}

/*
GetIdentityprovidersOneloginGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetIdentityprovidersOneloginGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders onelogin gateway timeout response has a 2xx status code
func (o *GetIdentityprovidersOneloginGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders onelogin gateway timeout response has a 3xx status code
func (o *GetIdentityprovidersOneloginGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders onelogin gateway timeout response has a 4xx status code
func (o *GetIdentityprovidersOneloginGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get identityproviders onelogin gateway timeout response has a 5xx status code
func (o *GetIdentityprovidersOneloginGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get identityproviders onelogin gateway timeout response a status code equal to that given
func (o *GetIdentityprovidersOneloginGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetIdentityprovidersOneloginGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/onelogin][%d] getIdentityprovidersOneloginGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetIdentityprovidersOneloginGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/onelogin][%d] getIdentityprovidersOneloginGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetIdentityprovidersOneloginGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersOneloginGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
