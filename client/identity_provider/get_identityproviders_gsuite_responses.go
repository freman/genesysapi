// Code generated by go-swagger; DO NOT EDIT.

package identity_provider

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetIdentityprovidersGsuiteReader is a Reader for the GetIdentityprovidersGsuite structure.
type GetIdentityprovidersGsuiteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetIdentityprovidersGsuiteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetIdentityprovidersGsuiteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetIdentityprovidersGsuiteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetIdentityprovidersGsuiteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetIdentityprovidersGsuiteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetIdentityprovidersGsuiteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetIdentityprovidersGsuiteRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetIdentityprovidersGsuiteRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetIdentityprovidersGsuiteUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetIdentityprovidersGsuiteTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetIdentityprovidersGsuiteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetIdentityprovidersGsuiteServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetIdentityprovidersGsuiteGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetIdentityprovidersGsuiteOK creates a GetIdentityprovidersGsuiteOK with default headers values
func NewGetIdentityprovidersGsuiteOK() *GetIdentityprovidersGsuiteOK {
	return &GetIdentityprovidersGsuiteOK{}
}

/*GetIdentityprovidersGsuiteOK handles this case with default header values.

successful operation
*/
type GetIdentityprovidersGsuiteOK struct {
	Payload *models.GSuite
}

func (o *GetIdentityprovidersGsuiteOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/gsuite][%d] getIdentityprovidersGsuiteOK  %+v", 200, o.Payload)
}

func (o *GetIdentityprovidersGsuiteOK) GetPayload() *models.GSuite {
	return o.Payload
}

func (o *GetIdentityprovidersGsuiteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GSuite)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersGsuiteBadRequest creates a GetIdentityprovidersGsuiteBadRequest with default headers values
func NewGetIdentityprovidersGsuiteBadRequest() *GetIdentityprovidersGsuiteBadRequest {
	return &GetIdentityprovidersGsuiteBadRequest{}
}

/*GetIdentityprovidersGsuiteBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetIdentityprovidersGsuiteBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetIdentityprovidersGsuiteBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/gsuite][%d] getIdentityprovidersGsuiteBadRequest  %+v", 400, o.Payload)
}

func (o *GetIdentityprovidersGsuiteBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersGsuiteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersGsuiteUnauthorized creates a GetIdentityprovidersGsuiteUnauthorized with default headers values
func NewGetIdentityprovidersGsuiteUnauthorized() *GetIdentityprovidersGsuiteUnauthorized {
	return &GetIdentityprovidersGsuiteUnauthorized{}
}

/*GetIdentityprovidersGsuiteUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetIdentityprovidersGsuiteUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetIdentityprovidersGsuiteUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/gsuite][%d] getIdentityprovidersGsuiteUnauthorized  %+v", 401, o.Payload)
}

func (o *GetIdentityprovidersGsuiteUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersGsuiteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersGsuiteForbidden creates a GetIdentityprovidersGsuiteForbidden with default headers values
func NewGetIdentityprovidersGsuiteForbidden() *GetIdentityprovidersGsuiteForbidden {
	return &GetIdentityprovidersGsuiteForbidden{}
}

/*GetIdentityprovidersGsuiteForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetIdentityprovidersGsuiteForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetIdentityprovidersGsuiteForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/gsuite][%d] getIdentityprovidersGsuiteForbidden  %+v", 403, o.Payload)
}

func (o *GetIdentityprovidersGsuiteForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersGsuiteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersGsuiteNotFound creates a GetIdentityprovidersGsuiteNotFound with default headers values
func NewGetIdentityprovidersGsuiteNotFound() *GetIdentityprovidersGsuiteNotFound {
	return &GetIdentityprovidersGsuiteNotFound{}
}

/*GetIdentityprovidersGsuiteNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetIdentityprovidersGsuiteNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetIdentityprovidersGsuiteNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/gsuite][%d] getIdentityprovidersGsuiteNotFound  %+v", 404, o.Payload)
}

func (o *GetIdentityprovidersGsuiteNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersGsuiteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersGsuiteRequestTimeout creates a GetIdentityprovidersGsuiteRequestTimeout with default headers values
func NewGetIdentityprovidersGsuiteRequestTimeout() *GetIdentityprovidersGsuiteRequestTimeout {
	return &GetIdentityprovidersGsuiteRequestTimeout{}
}

/*GetIdentityprovidersGsuiteRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetIdentityprovidersGsuiteRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetIdentityprovidersGsuiteRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/gsuite][%d] getIdentityprovidersGsuiteRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetIdentityprovidersGsuiteRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersGsuiteRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersGsuiteRequestEntityTooLarge creates a GetIdentityprovidersGsuiteRequestEntityTooLarge with default headers values
func NewGetIdentityprovidersGsuiteRequestEntityTooLarge() *GetIdentityprovidersGsuiteRequestEntityTooLarge {
	return &GetIdentityprovidersGsuiteRequestEntityTooLarge{}
}

/*GetIdentityprovidersGsuiteRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetIdentityprovidersGsuiteRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetIdentityprovidersGsuiteRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/gsuite][%d] getIdentityprovidersGsuiteRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetIdentityprovidersGsuiteRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersGsuiteRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersGsuiteUnsupportedMediaType creates a GetIdentityprovidersGsuiteUnsupportedMediaType with default headers values
func NewGetIdentityprovidersGsuiteUnsupportedMediaType() *GetIdentityprovidersGsuiteUnsupportedMediaType {
	return &GetIdentityprovidersGsuiteUnsupportedMediaType{}
}

/*GetIdentityprovidersGsuiteUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetIdentityprovidersGsuiteUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetIdentityprovidersGsuiteUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/gsuite][%d] getIdentityprovidersGsuiteUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetIdentityprovidersGsuiteUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersGsuiteUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersGsuiteTooManyRequests creates a GetIdentityprovidersGsuiteTooManyRequests with default headers values
func NewGetIdentityprovidersGsuiteTooManyRequests() *GetIdentityprovidersGsuiteTooManyRequests {
	return &GetIdentityprovidersGsuiteTooManyRequests{}
}

/*GetIdentityprovidersGsuiteTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetIdentityprovidersGsuiteTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetIdentityprovidersGsuiteTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/gsuite][%d] getIdentityprovidersGsuiteTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetIdentityprovidersGsuiteTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersGsuiteTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersGsuiteInternalServerError creates a GetIdentityprovidersGsuiteInternalServerError with default headers values
func NewGetIdentityprovidersGsuiteInternalServerError() *GetIdentityprovidersGsuiteInternalServerError {
	return &GetIdentityprovidersGsuiteInternalServerError{}
}

/*GetIdentityprovidersGsuiteInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetIdentityprovidersGsuiteInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetIdentityprovidersGsuiteInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/gsuite][%d] getIdentityprovidersGsuiteInternalServerError  %+v", 500, o.Payload)
}

func (o *GetIdentityprovidersGsuiteInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersGsuiteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersGsuiteServiceUnavailable creates a GetIdentityprovidersGsuiteServiceUnavailable with default headers values
func NewGetIdentityprovidersGsuiteServiceUnavailable() *GetIdentityprovidersGsuiteServiceUnavailable {
	return &GetIdentityprovidersGsuiteServiceUnavailable{}
}

/*GetIdentityprovidersGsuiteServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetIdentityprovidersGsuiteServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetIdentityprovidersGsuiteServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/gsuite][%d] getIdentityprovidersGsuiteServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetIdentityprovidersGsuiteServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersGsuiteServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersGsuiteGatewayTimeout creates a GetIdentityprovidersGsuiteGatewayTimeout with default headers values
func NewGetIdentityprovidersGsuiteGatewayTimeout() *GetIdentityprovidersGsuiteGatewayTimeout {
	return &GetIdentityprovidersGsuiteGatewayTimeout{}
}

/*GetIdentityprovidersGsuiteGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetIdentityprovidersGsuiteGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetIdentityprovidersGsuiteGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/gsuite][%d] getIdentityprovidersGsuiteGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetIdentityprovidersGsuiteGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersGsuiteGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
