// Code generated by go-swagger; DO NOT EDIT.

package identity_provider

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetIdentityprovidersCicReader is a Reader for the GetIdentityprovidersCic structure.
type GetIdentityprovidersCicReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetIdentityprovidersCicReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetIdentityprovidersCicOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetIdentityprovidersCicBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetIdentityprovidersCicUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetIdentityprovidersCicForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetIdentityprovidersCicNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetIdentityprovidersCicRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetIdentityprovidersCicRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetIdentityprovidersCicUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetIdentityprovidersCicTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetIdentityprovidersCicInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetIdentityprovidersCicServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetIdentityprovidersCicGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetIdentityprovidersCicOK creates a GetIdentityprovidersCicOK with default headers values
func NewGetIdentityprovidersCicOK() *GetIdentityprovidersCicOK {
	return &GetIdentityprovidersCicOK{}
}

/*
GetIdentityprovidersCicOK describes a response with status code 200, with default header values.

successful operation
*/
type GetIdentityprovidersCicOK struct {
	Payload *models.CustomerInteractionCenter
}

// IsSuccess returns true when this get identityproviders cic o k response has a 2xx status code
func (o *GetIdentityprovidersCicOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get identityproviders cic o k response has a 3xx status code
func (o *GetIdentityprovidersCicOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders cic o k response has a 4xx status code
func (o *GetIdentityprovidersCicOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get identityproviders cic o k response has a 5xx status code
func (o *GetIdentityprovidersCicOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders cic o k response a status code equal to that given
func (o *GetIdentityprovidersCicOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetIdentityprovidersCicOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/cic][%d] getIdentityprovidersCicOK  %+v", 200, o.Payload)
}

func (o *GetIdentityprovidersCicOK) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/cic][%d] getIdentityprovidersCicOK  %+v", 200, o.Payload)
}

func (o *GetIdentityprovidersCicOK) GetPayload() *models.CustomerInteractionCenter {
	return o.Payload
}

func (o *GetIdentityprovidersCicOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CustomerInteractionCenter)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersCicBadRequest creates a GetIdentityprovidersCicBadRequest with default headers values
func NewGetIdentityprovidersCicBadRequest() *GetIdentityprovidersCicBadRequest {
	return &GetIdentityprovidersCicBadRequest{}
}

/*
GetIdentityprovidersCicBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetIdentityprovidersCicBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders cic bad request response has a 2xx status code
func (o *GetIdentityprovidersCicBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders cic bad request response has a 3xx status code
func (o *GetIdentityprovidersCicBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders cic bad request response has a 4xx status code
func (o *GetIdentityprovidersCicBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders cic bad request response has a 5xx status code
func (o *GetIdentityprovidersCicBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders cic bad request response a status code equal to that given
func (o *GetIdentityprovidersCicBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetIdentityprovidersCicBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/cic][%d] getIdentityprovidersCicBadRequest  %+v", 400, o.Payload)
}

func (o *GetIdentityprovidersCicBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/cic][%d] getIdentityprovidersCicBadRequest  %+v", 400, o.Payload)
}

func (o *GetIdentityprovidersCicBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersCicBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersCicUnauthorized creates a GetIdentityprovidersCicUnauthorized with default headers values
func NewGetIdentityprovidersCicUnauthorized() *GetIdentityprovidersCicUnauthorized {
	return &GetIdentityprovidersCicUnauthorized{}
}

/*
GetIdentityprovidersCicUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetIdentityprovidersCicUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders cic unauthorized response has a 2xx status code
func (o *GetIdentityprovidersCicUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders cic unauthorized response has a 3xx status code
func (o *GetIdentityprovidersCicUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders cic unauthorized response has a 4xx status code
func (o *GetIdentityprovidersCicUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders cic unauthorized response has a 5xx status code
func (o *GetIdentityprovidersCicUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders cic unauthorized response a status code equal to that given
func (o *GetIdentityprovidersCicUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetIdentityprovidersCicUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/cic][%d] getIdentityprovidersCicUnauthorized  %+v", 401, o.Payload)
}

func (o *GetIdentityprovidersCicUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/cic][%d] getIdentityprovidersCicUnauthorized  %+v", 401, o.Payload)
}

func (o *GetIdentityprovidersCicUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersCicUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersCicForbidden creates a GetIdentityprovidersCicForbidden with default headers values
func NewGetIdentityprovidersCicForbidden() *GetIdentityprovidersCicForbidden {
	return &GetIdentityprovidersCicForbidden{}
}

/*
GetIdentityprovidersCicForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetIdentityprovidersCicForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders cic forbidden response has a 2xx status code
func (o *GetIdentityprovidersCicForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders cic forbidden response has a 3xx status code
func (o *GetIdentityprovidersCicForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders cic forbidden response has a 4xx status code
func (o *GetIdentityprovidersCicForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders cic forbidden response has a 5xx status code
func (o *GetIdentityprovidersCicForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders cic forbidden response a status code equal to that given
func (o *GetIdentityprovidersCicForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetIdentityprovidersCicForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/cic][%d] getIdentityprovidersCicForbidden  %+v", 403, o.Payload)
}

func (o *GetIdentityprovidersCicForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/cic][%d] getIdentityprovidersCicForbidden  %+v", 403, o.Payload)
}

func (o *GetIdentityprovidersCicForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersCicForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersCicNotFound creates a GetIdentityprovidersCicNotFound with default headers values
func NewGetIdentityprovidersCicNotFound() *GetIdentityprovidersCicNotFound {
	return &GetIdentityprovidersCicNotFound{}
}

/*
GetIdentityprovidersCicNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetIdentityprovidersCicNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders cic not found response has a 2xx status code
func (o *GetIdentityprovidersCicNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders cic not found response has a 3xx status code
func (o *GetIdentityprovidersCicNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders cic not found response has a 4xx status code
func (o *GetIdentityprovidersCicNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders cic not found response has a 5xx status code
func (o *GetIdentityprovidersCicNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders cic not found response a status code equal to that given
func (o *GetIdentityprovidersCicNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetIdentityprovidersCicNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/cic][%d] getIdentityprovidersCicNotFound  %+v", 404, o.Payload)
}

func (o *GetIdentityprovidersCicNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/cic][%d] getIdentityprovidersCicNotFound  %+v", 404, o.Payload)
}

func (o *GetIdentityprovidersCicNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersCicNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersCicRequestTimeout creates a GetIdentityprovidersCicRequestTimeout with default headers values
func NewGetIdentityprovidersCicRequestTimeout() *GetIdentityprovidersCicRequestTimeout {
	return &GetIdentityprovidersCicRequestTimeout{}
}

/*
GetIdentityprovidersCicRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetIdentityprovidersCicRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders cic request timeout response has a 2xx status code
func (o *GetIdentityprovidersCicRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders cic request timeout response has a 3xx status code
func (o *GetIdentityprovidersCicRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders cic request timeout response has a 4xx status code
func (o *GetIdentityprovidersCicRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders cic request timeout response has a 5xx status code
func (o *GetIdentityprovidersCicRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders cic request timeout response a status code equal to that given
func (o *GetIdentityprovidersCicRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetIdentityprovidersCicRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/cic][%d] getIdentityprovidersCicRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetIdentityprovidersCicRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/cic][%d] getIdentityprovidersCicRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetIdentityprovidersCicRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersCicRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersCicRequestEntityTooLarge creates a GetIdentityprovidersCicRequestEntityTooLarge with default headers values
func NewGetIdentityprovidersCicRequestEntityTooLarge() *GetIdentityprovidersCicRequestEntityTooLarge {
	return &GetIdentityprovidersCicRequestEntityTooLarge{}
}

/*
GetIdentityprovidersCicRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetIdentityprovidersCicRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders cic request entity too large response has a 2xx status code
func (o *GetIdentityprovidersCicRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders cic request entity too large response has a 3xx status code
func (o *GetIdentityprovidersCicRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders cic request entity too large response has a 4xx status code
func (o *GetIdentityprovidersCicRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders cic request entity too large response has a 5xx status code
func (o *GetIdentityprovidersCicRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders cic request entity too large response a status code equal to that given
func (o *GetIdentityprovidersCicRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetIdentityprovidersCicRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/cic][%d] getIdentityprovidersCicRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetIdentityprovidersCicRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/cic][%d] getIdentityprovidersCicRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetIdentityprovidersCicRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersCicRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersCicUnsupportedMediaType creates a GetIdentityprovidersCicUnsupportedMediaType with default headers values
func NewGetIdentityprovidersCicUnsupportedMediaType() *GetIdentityprovidersCicUnsupportedMediaType {
	return &GetIdentityprovidersCicUnsupportedMediaType{}
}

/*
GetIdentityprovidersCicUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetIdentityprovidersCicUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders cic unsupported media type response has a 2xx status code
func (o *GetIdentityprovidersCicUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders cic unsupported media type response has a 3xx status code
func (o *GetIdentityprovidersCicUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders cic unsupported media type response has a 4xx status code
func (o *GetIdentityprovidersCicUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders cic unsupported media type response has a 5xx status code
func (o *GetIdentityprovidersCicUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders cic unsupported media type response a status code equal to that given
func (o *GetIdentityprovidersCicUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetIdentityprovidersCicUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/cic][%d] getIdentityprovidersCicUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetIdentityprovidersCicUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/cic][%d] getIdentityprovidersCicUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetIdentityprovidersCicUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersCicUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersCicTooManyRequests creates a GetIdentityprovidersCicTooManyRequests with default headers values
func NewGetIdentityprovidersCicTooManyRequests() *GetIdentityprovidersCicTooManyRequests {
	return &GetIdentityprovidersCicTooManyRequests{}
}

/*
GetIdentityprovidersCicTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetIdentityprovidersCicTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders cic too many requests response has a 2xx status code
func (o *GetIdentityprovidersCicTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders cic too many requests response has a 3xx status code
func (o *GetIdentityprovidersCicTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders cic too many requests response has a 4xx status code
func (o *GetIdentityprovidersCicTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identityproviders cic too many requests response has a 5xx status code
func (o *GetIdentityprovidersCicTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get identityproviders cic too many requests response a status code equal to that given
func (o *GetIdentityprovidersCicTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetIdentityprovidersCicTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/cic][%d] getIdentityprovidersCicTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetIdentityprovidersCicTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/cic][%d] getIdentityprovidersCicTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetIdentityprovidersCicTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersCicTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersCicInternalServerError creates a GetIdentityprovidersCicInternalServerError with default headers values
func NewGetIdentityprovidersCicInternalServerError() *GetIdentityprovidersCicInternalServerError {
	return &GetIdentityprovidersCicInternalServerError{}
}

/*
GetIdentityprovidersCicInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetIdentityprovidersCicInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders cic internal server error response has a 2xx status code
func (o *GetIdentityprovidersCicInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders cic internal server error response has a 3xx status code
func (o *GetIdentityprovidersCicInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders cic internal server error response has a 4xx status code
func (o *GetIdentityprovidersCicInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get identityproviders cic internal server error response has a 5xx status code
func (o *GetIdentityprovidersCicInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get identityproviders cic internal server error response a status code equal to that given
func (o *GetIdentityprovidersCicInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetIdentityprovidersCicInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/cic][%d] getIdentityprovidersCicInternalServerError  %+v", 500, o.Payload)
}

func (o *GetIdentityprovidersCicInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/cic][%d] getIdentityprovidersCicInternalServerError  %+v", 500, o.Payload)
}

func (o *GetIdentityprovidersCicInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersCicInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersCicServiceUnavailable creates a GetIdentityprovidersCicServiceUnavailable with default headers values
func NewGetIdentityprovidersCicServiceUnavailable() *GetIdentityprovidersCicServiceUnavailable {
	return &GetIdentityprovidersCicServiceUnavailable{}
}

/*
GetIdentityprovidersCicServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetIdentityprovidersCicServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders cic service unavailable response has a 2xx status code
func (o *GetIdentityprovidersCicServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders cic service unavailable response has a 3xx status code
func (o *GetIdentityprovidersCicServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders cic service unavailable response has a 4xx status code
func (o *GetIdentityprovidersCicServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get identityproviders cic service unavailable response has a 5xx status code
func (o *GetIdentityprovidersCicServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get identityproviders cic service unavailable response a status code equal to that given
func (o *GetIdentityprovidersCicServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetIdentityprovidersCicServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/cic][%d] getIdentityprovidersCicServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetIdentityprovidersCicServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/cic][%d] getIdentityprovidersCicServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetIdentityprovidersCicServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersCicServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityprovidersCicGatewayTimeout creates a GetIdentityprovidersCicGatewayTimeout with default headers values
func NewGetIdentityprovidersCicGatewayTimeout() *GetIdentityprovidersCicGatewayTimeout {
	return &GetIdentityprovidersCicGatewayTimeout{}
}

/*
GetIdentityprovidersCicGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetIdentityprovidersCicGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get identityproviders cic gateway timeout response has a 2xx status code
func (o *GetIdentityprovidersCicGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identityproviders cic gateway timeout response has a 3xx status code
func (o *GetIdentityprovidersCicGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identityproviders cic gateway timeout response has a 4xx status code
func (o *GetIdentityprovidersCicGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get identityproviders cic gateway timeout response has a 5xx status code
func (o *GetIdentityprovidersCicGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get identityproviders cic gateway timeout response a status code equal to that given
func (o *GetIdentityprovidersCicGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetIdentityprovidersCicGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/cic][%d] getIdentityprovidersCicGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetIdentityprovidersCicGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/identityproviders/cic][%d] getIdentityprovidersCicGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetIdentityprovidersCicGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIdentityprovidersCicGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
