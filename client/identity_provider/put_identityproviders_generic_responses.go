// Code generated by go-swagger; DO NOT EDIT.

package identity_provider

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutIdentityprovidersGenericReader is a Reader for the PutIdentityprovidersGeneric structure.
type PutIdentityprovidersGenericReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutIdentityprovidersGenericReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutIdentityprovidersGenericOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutIdentityprovidersGenericBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutIdentityprovidersGenericUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutIdentityprovidersGenericForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutIdentityprovidersGenericNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutIdentityprovidersGenericRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutIdentityprovidersGenericRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutIdentityprovidersGenericUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutIdentityprovidersGenericTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutIdentityprovidersGenericInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutIdentityprovidersGenericServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutIdentityprovidersGenericGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutIdentityprovidersGenericOK creates a PutIdentityprovidersGenericOK with default headers values
func NewPutIdentityprovidersGenericOK() *PutIdentityprovidersGenericOK {
	return &PutIdentityprovidersGenericOK{}
}

/*
PutIdentityprovidersGenericOK describes a response with status code 200, with default header values.

successful operation
*/
type PutIdentityprovidersGenericOK struct {
	Payload *models.OAuthProvider
}

// IsSuccess returns true when this put identityproviders generic o k response has a 2xx status code
func (o *PutIdentityprovidersGenericOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put identityproviders generic o k response has a 3xx status code
func (o *PutIdentityprovidersGenericOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders generic o k response has a 4xx status code
func (o *PutIdentityprovidersGenericOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put identityproviders generic o k response has a 5xx status code
func (o *PutIdentityprovidersGenericOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put identityproviders generic o k response a status code equal to that given
func (o *PutIdentityprovidersGenericOK) IsCode(code int) bool {
	return code == 200
}

func (o *PutIdentityprovidersGenericOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/generic][%d] putIdentityprovidersGenericOK  %+v", 200, o.Payload)
}

func (o *PutIdentityprovidersGenericOK) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/generic][%d] putIdentityprovidersGenericOK  %+v", 200, o.Payload)
}

func (o *PutIdentityprovidersGenericOK) GetPayload() *models.OAuthProvider {
	return o.Payload
}

func (o *PutIdentityprovidersGenericOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OAuthProvider)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersGenericBadRequest creates a PutIdentityprovidersGenericBadRequest with default headers values
func NewPutIdentityprovidersGenericBadRequest() *PutIdentityprovidersGenericBadRequest {
	return &PutIdentityprovidersGenericBadRequest{}
}

/*
PutIdentityprovidersGenericBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutIdentityprovidersGenericBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders generic bad request response has a 2xx status code
func (o *PutIdentityprovidersGenericBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders generic bad request response has a 3xx status code
func (o *PutIdentityprovidersGenericBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders generic bad request response has a 4xx status code
func (o *PutIdentityprovidersGenericBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put identityproviders generic bad request response has a 5xx status code
func (o *PutIdentityprovidersGenericBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put identityproviders generic bad request response a status code equal to that given
func (o *PutIdentityprovidersGenericBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PutIdentityprovidersGenericBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/generic][%d] putIdentityprovidersGenericBadRequest  %+v", 400, o.Payload)
}

func (o *PutIdentityprovidersGenericBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/generic][%d] putIdentityprovidersGenericBadRequest  %+v", 400, o.Payload)
}

func (o *PutIdentityprovidersGenericBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersGenericBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersGenericUnauthorized creates a PutIdentityprovidersGenericUnauthorized with default headers values
func NewPutIdentityprovidersGenericUnauthorized() *PutIdentityprovidersGenericUnauthorized {
	return &PutIdentityprovidersGenericUnauthorized{}
}

/*
PutIdentityprovidersGenericUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PutIdentityprovidersGenericUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders generic unauthorized response has a 2xx status code
func (o *PutIdentityprovidersGenericUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders generic unauthorized response has a 3xx status code
func (o *PutIdentityprovidersGenericUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders generic unauthorized response has a 4xx status code
func (o *PutIdentityprovidersGenericUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put identityproviders generic unauthorized response has a 5xx status code
func (o *PutIdentityprovidersGenericUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put identityproviders generic unauthorized response a status code equal to that given
func (o *PutIdentityprovidersGenericUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PutIdentityprovidersGenericUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/generic][%d] putIdentityprovidersGenericUnauthorized  %+v", 401, o.Payload)
}

func (o *PutIdentityprovidersGenericUnauthorized) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/generic][%d] putIdentityprovidersGenericUnauthorized  %+v", 401, o.Payload)
}

func (o *PutIdentityprovidersGenericUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersGenericUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersGenericForbidden creates a PutIdentityprovidersGenericForbidden with default headers values
func NewPutIdentityprovidersGenericForbidden() *PutIdentityprovidersGenericForbidden {
	return &PutIdentityprovidersGenericForbidden{}
}

/*
PutIdentityprovidersGenericForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PutIdentityprovidersGenericForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders generic forbidden response has a 2xx status code
func (o *PutIdentityprovidersGenericForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders generic forbidden response has a 3xx status code
func (o *PutIdentityprovidersGenericForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders generic forbidden response has a 4xx status code
func (o *PutIdentityprovidersGenericForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put identityproviders generic forbidden response has a 5xx status code
func (o *PutIdentityprovidersGenericForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put identityproviders generic forbidden response a status code equal to that given
func (o *PutIdentityprovidersGenericForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PutIdentityprovidersGenericForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/generic][%d] putIdentityprovidersGenericForbidden  %+v", 403, o.Payload)
}

func (o *PutIdentityprovidersGenericForbidden) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/generic][%d] putIdentityprovidersGenericForbidden  %+v", 403, o.Payload)
}

func (o *PutIdentityprovidersGenericForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersGenericForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersGenericNotFound creates a PutIdentityprovidersGenericNotFound with default headers values
func NewPutIdentityprovidersGenericNotFound() *PutIdentityprovidersGenericNotFound {
	return &PutIdentityprovidersGenericNotFound{}
}

/*
PutIdentityprovidersGenericNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PutIdentityprovidersGenericNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders generic not found response has a 2xx status code
func (o *PutIdentityprovidersGenericNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders generic not found response has a 3xx status code
func (o *PutIdentityprovidersGenericNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders generic not found response has a 4xx status code
func (o *PutIdentityprovidersGenericNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put identityproviders generic not found response has a 5xx status code
func (o *PutIdentityprovidersGenericNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put identityproviders generic not found response a status code equal to that given
func (o *PutIdentityprovidersGenericNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PutIdentityprovidersGenericNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/generic][%d] putIdentityprovidersGenericNotFound  %+v", 404, o.Payload)
}

func (o *PutIdentityprovidersGenericNotFound) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/generic][%d] putIdentityprovidersGenericNotFound  %+v", 404, o.Payload)
}

func (o *PutIdentityprovidersGenericNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersGenericNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersGenericRequestTimeout creates a PutIdentityprovidersGenericRequestTimeout with default headers values
func NewPutIdentityprovidersGenericRequestTimeout() *PutIdentityprovidersGenericRequestTimeout {
	return &PutIdentityprovidersGenericRequestTimeout{}
}

/*
PutIdentityprovidersGenericRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutIdentityprovidersGenericRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders generic request timeout response has a 2xx status code
func (o *PutIdentityprovidersGenericRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders generic request timeout response has a 3xx status code
func (o *PutIdentityprovidersGenericRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders generic request timeout response has a 4xx status code
func (o *PutIdentityprovidersGenericRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this put identityproviders generic request timeout response has a 5xx status code
func (o *PutIdentityprovidersGenericRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this put identityproviders generic request timeout response a status code equal to that given
func (o *PutIdentityprovidersGenericRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PutIdentityprovidersGenericRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/generic][%d] putIdentityprovidersGenericRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutIdentityprovidersGenericRequestTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/generic][%d] putIdentityprovidersGenericRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutIdentityprovidersGenericRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersGenericRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersGenericRequestEntityTooLarge creates a PutIdentityprovidersGenericRequestEntityTooLarge with default headers values
func NewPutIdentityprovidersGenericRequestEntityTooLarge() *PutIdentityprovidersGenericRequestEntityTooLarge {
	return &PutIdentityprovidersGenericRequestEntityTooLarge{}
}

/*
PutIdentityprovidersGenericRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PutIdentityprovidersGenericRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders generic request entity too large response has a 2xx status code
func (o *PutIdentityprovidersGenericRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders generic request entity too large response has a 3xx status code
func (o *PutIdentityprovidersGenericRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders generic request entity too large response has a 4xx status code
func (o *PutIdentityprovidersGenericRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this put identityproviders generic request entity too large response has a 5xx status code
func (o *PutIdentityprovidersGenericRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this put identityproviders generic request entity too large response a status code equal to that given
func (o *PutIdentityprovidersGenericRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PutIdentityprovidersGenericRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/generic][%d] putIdentityprovidersGenericRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutIdentityprovidersGenericRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/generic][%d] putIdentityprovidersGenericRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutIdentityprovidersGenericRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersGenericRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersGenericUnsupportedMediaType creates a PutIdentityprovidersGenericUnsupportedMediaType with default headers values
func NewPutIdentityprovidersGenericUnsupportedMediaType() *PutIdentityprovidersGenericUnsupportedMediaType {
	return &PutIdentityprovidersGenericUnsupportedMediaType{}
}

/*
PutIdentityprovidersGenericUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutIdentityprovidersGenericUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders generic unsupported media type response has a 2xx status code
func (o *PutIdentityprovidersGenericUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders generic unsupported media type response has a 3xx status code
func (o *PutIdentityprovidersGenericUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders generic unsupported media type response has a 4xx status code
func (o *PutIdentityprovidersGenericUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this put identityproviders generic unsupported media type response has a 5xx status code
func (o *PutIdentityprovidersGenericUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this put identityproviders generic unsupported media type response a status code equal to that given
func (o *PutIdentityprovidersGenericUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PutIdentityprovidersGenericUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/generic][%d] putIdentityprovidersGenericUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutIdentityprovidersGenericUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/generic][%d] putIdentityprovidersGenericUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutIdentityprovidersGenericUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersGenericUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersGenericTooManyRequests creates a PutIdentityprovidersGenericTooManyRequests with default headers values
func NewPutIdentityprovidersGenericTooManyRequests() *PutIdentityprovidersGenericTooManyRequests {
	return &PutIdentityprovidersGenericTooManyRequests{}
}

/*
PutIdentityprovidersGenericTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutIdentityprovidersGenericTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders generic too many requests response has a 2xx status code
func (o *PutIdentityprovidersGenericTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders generic too many requests response has a 3xx status code
func (o *PutIdentityprovidersGenericTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders generic too many requests response has a 4xx status code
func (o *PutIdentityprovidersGenericTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this put identityproviders generic too many requests response has a 5xx status code
func (o *PutIdentityprovidersGenericTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this put identityproviders generic too many requests response a status code equal to that given
func (o *PutIdentityprovidersGenericTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PutIdentityprovidersGenericTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/generic][%d] putIdentityprovidersGenericTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutIdentityprovidersGenericTooManyRequests) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/generic][%d] putIdentityprovidersGenericTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutIdentityprovidersGenericTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersGenericTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersGenericInternalServerError creates a PutIdentityprovidersGenericInternalServerError with default headers values
func NewPutIdentityprovidersGenericInternalServerError() *PutIdentityprovidersGenericInternalServerError {
	return &PutIdentityprovidersGenericInternalServerError{}
}

/*
PutIdentityprovidersGenericInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutIdentityprovidersGenericInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders generic internal server error response has a 2xx status code
func (o *PutIdentityprovidersGenericInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders generic internal server error response has a 3xx status code
func (o *PutIdentityprovidersGenericInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders generic internal server error response has a 4xx status code
func (o *PutIdentityprovidersGenericInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this put identityproviders generic internal server error response has a 5xx status code
func (o *PutIdentityprovidersGenericInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this put identityproviders generic internal server error response a status code equal to that given
func (o *PutIdentityprovidersGenericInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PutIdentityprovidersGenericInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/generic][%d] putIdentityprovidersGenericInternalServerError  %+v", 500, o.Payload)
}

func (o *PutIdentityprovidersGenericInternalServerError) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/generic][%d] putIdentityprovidersGenericInternalServerError  %+v", 500, o.Payload)
}

func (o *PutIdentityprovidersGenericInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersGenericInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersGenericServiceUnavailable creates a PutIdentityprovidersGenericServiceUnavailable with default headers values
func NewPutIdentityprovidersGenericServiceUnavailable() *PutIdentityprovidersGenericServiceUnavailable {
	return &PutIdentityprovidersGenericServiceUnavailable{}
}

/*
PutIdentityprovidersGenericServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutIdentityprovidersGenericServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders generic service unavailable response has a 2xx status code
func (o *PutIdentityprovidersGenericServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders generic service unavailable response has a 3xx status code
func (o *PutIdentityprovidersGenericServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders generic service unavailable response has a 4xx status code
func (o *PutIdentityprovidersGenericServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this put identityproviders generic service unavailable response has a 5xx status code
func (o *PutIdentityprovidersGenericServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this put identityproviders generic service unavailable response a status code equal to that given
func (o *PutIdentityprovidersGenericServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PutIdentityprovidersGenericServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/generic][%d] putIdentityprovidersGenericServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutIdentityprovidersGenericServiceUnavailable) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/generic][%d] putIdentityprovidersGenericServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutIdentityprovidersGenericServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersGenericServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersGenericGatewayTimeout creates a PutIdentityprovidersGenericGatewayTimeout with default headers values
func NewPutIdentityprovidersGenericGatewayTimeout() *PutIdentityprovidersGenericGatewayTimeout {
	return &PutIdentityprovidersGenericGatewayTimeout{}
}

/*
PutIdentityprovidersGenericGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PutIdentityprovidersGenericGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders generic gateway timeout response has a 2xx status code
func (o *PutIdentityprovidersGenericGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders generic gateway timeout response has a 3xx status code
func (o *PutIdentityprovidersGenericGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders generic gateway timeout response has a 4xx status code
func (o *PutIdentityprovidersGenericGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this put identityproviders generic gateway timeout response has a 5xx status code
func (o *PutIdentityprovidersGenericGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this put identityproviders generic gateway timeout response a status code equal to that given
func (o *PutIdentityprovidersGenericGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PutIdentityprovidersGenericGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/generic][%d] putIdentityprovidersGenericGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutIdentityprovidersGenericGatewayTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/generic][%d] putIdentityprovidersGenericGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutIdentityprovidersGenericGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersGenericGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
