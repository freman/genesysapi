// Code generated by go-swagger; DO NOT EDIT.

package identity_provider

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// DeleteIdentityprovidersPureengageReader is a Reader for the DeleteIdentityprovidersPureengage structure.
type DeleteIdentityprovidersPureengageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteIdentityprovidersPureengageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteIdentityprovidersPureengageOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteIdentityprovidersPureengageBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteIdentityprovidersPureengageUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteIdentityprovidersPureengageForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteIdentityprovidersPureengageNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewDeleteIdentityprovidersPureengageRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewDeleteIdentityprovidersPureengageRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDeleteIdentityprovidersPureengageUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteIdentityprovidersPureengageTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteIdentityprovidersPureengageInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteIdentityprovidersPureengageServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteIdentityprovidersPureengageGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteIdentityprovidersPureengageOK creates a DeleteIdentityprovidersPureengageOK with default headers values
func NewDeleteIdentityprovidersPureengageOK() *DeleteIdentityprovidersPureengageOK {
	return &DeleteIdentityprovidersPureengageOK{}
}

/*
DeleteIdentityprovidersPureengageOK describes a response with status code 200, with default header values.

successful operation
*/
type DeleteIdentityprovidersPureengageOK struct {
	Payload models.Empty
}

// IsSuccess returns true when this delete identityproviders pureengage o k response has a 2xx status code
func (o *DeleteIdentityprovidersPureengageOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete identityproviders pureengage o k response has a 3xx status code
func (o *DeleteIdentityprovidersPureengageOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identityproviders pureengage o k response has a 4xx status code
func (o *DeleteIdentityprovidersPureengageOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete identityproviders pureengage o k response has a 5xx status code
func (o *DeleteIdentityprovidersPureengageOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete identityproviders pureengage o k response a status code equal to that given
func (o *DeleteIdentityprovidersPureengageOK) IsCode(code int) bool {
	return code == 200
}

func (o *DeleteIdentityprovidersPureengageOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/pureengage][%d] deleteIdentityprovidersPureengageOK  %+v", 200, o.Payload)
}

func (o *DeleteIdentityprovidersPureengageOK) String() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/pureengage][%d] deleteIdentityprovidersPureengageOK  %+v", 200, o.Payload)
}

func (o *DeleteIdentityprovidersPureengageOK) GetPayload() models.Empty {
	return o.Payload
}

func (o *DeleteIdentityprovidersPureengageOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIdentityprovidersPureengageBadRequest creates a DeleteIdentityprovidersPureengageBadRequest with default headers values
func NewDeleteIdentityprovidersPureengageBadRequest() *DeleteIdentityprovidersPureengageBadRequest {
	return &DeleteIdentityprovidersPureengageBadRequest{}
}

/*
DeleteIdentityprovidersPureengageBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type DeleteIdentityprovidersPureengageBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete identityproviders pureengage bad request response has a 2xx status code
func (o *DeleteIdentityprovidersPureengageBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete identityproviders pureengage bad request response has a 3xx status code
func (o *DeleteIdentityprovidersPureengageBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identityproviders pureengage bad request response has a 4xx status code
func (o *DeleteIdentityprovidersPureengageBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete identityproviders pureengage bad request response has a 5xx status code
func (o *DeleteIdentityprovidersPureengageBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete identityproviders pureengage bad request response a status code equal to that given
func (o *DeleteIdentityprovidersPureengageBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteIdentityprovidersPureengageBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/pureengage][%d] deleteIdentityprovidersPureengageBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteIdentityprovidersPureengageBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/pureengage][%d] deleteIdentityprovidersPureengageBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteIdentityprovidersPureengageBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteIdentityprovidersPureengageBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIdentityprovidersPureengageUnauthorized creates a DeleteIdentityprovidersPureengageUnauthorized with default headers values
func NewDeleteIdentityprovidersPureengageUnauthorized() *DeleteIdentityprovidersPureengageUnauthorized {
	return &DeleteIdentityprovidersPureengageUnauthorized{}
}

/*
DeleteIdentityprovidersPureengageUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type DeleteIdentityprovidersPureengageUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete identityproviders pureengage unauthorized response has a 2xx status code
func (o *DeleteIdentityprovidersPureengageUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete identityproviders pureengage unauthorized response has a 3xx status code
func (o *DeleteIdentityprovidersPureengageUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identityproviders pureengage unauthorized response has a 4xx status code
func (o *DeleteIdentityprovidersPureengageUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete identityproviders pureengage unauthorized response has a 5xx status code
func (o *DeleteIdentityprovidersPureengageUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete identityproviders pureengage unauthorized response a status code equal to that given
func (o *DeleteIdentityprovidersPureengageUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteIdentityprovidersPureengageUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/pureengage][%d] deleteIdentityprovidersPureengageUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteIdentityprovidersPureengageUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/pureengage][%d] deleteIdentityprovidersPureengageUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteIdentityprovidersPureengageUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteIdentityprovidersPureengageUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIdentityprovidersPureengageForbidden creates a DeleteIdentityprovidersPureengageForbidden with default headers values
func NewDeleteIdentityprovidersPureengageForbidden() *DeleteIdentityprovidersPureengageForbidden {
	return &DeleteIdentityprovidersPureengageForbidden{}
}

/*
DeleteIdentityprovidersPureengageForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type DeleteIdentityprovidersPureengageForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete identityproviders pureengage forbidden response has a 2xx status code
func (o *DeleteIdentityprovidersPureengageForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete identityproviders pureengage forbidden response has a 3xx status code
func (o *DeleteIdentityprovidersPureengageForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identityproviders pureengage forbidden response has a 4xx status code
func (o *DeleteIdentityprovidersPureengageForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete identityproviders pureengage forbidden response has a 5xx status code
func (o *DeleteIdentityprovidersPureengageForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete identityproviders pureengage forbidden response a status code equal to that given
func (o *DeleteIdentityprovidersPureengageForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteIdentityprovidersPureengageForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/pureengage][%d] deleteIdentityprovidersPureengageForbidden  %+v", 403, o.Payload)
}

func (o *DeleteIdentityprovidersPureengageForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/pureengage][%d] deleteIdentityprovidersPureengageForbidden  %+v", 403, o.Payload)
}

func (o *DeleteIdentityprovidersPureengageForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteIdentityprovidersPureengageForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIdentityprovidersPureengageNotFound creates a DeleteIdentityprovidersPureengageNotFound with default headers values
func NewDeleteIdentityprovidersPureengageNotFound() *DeleteIdentityprovidersPureengageNotFound {
	return &DeleteIdentityprovidersPureengageNotFound{}
}

/*
DeleteIdentityprovidersPureengageNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type DeleteIdentityprovidersPureengageNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete identityproviders pureengage not found response has a 2xx status code
func (o *DeleteIdentityprovidersPureengageNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete identityproviders pureengage not found response has a 3xx status code
func (o *DeleteIdentityprovidersPureengageNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identityproviders pureengage not found response has a 4xx status code
func (o *DeleteIdentityprovidersPureengageNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete identityproviders pureengage not found response has a 5xx status code
func (o *DeleteIdentityprovidersPureengageNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete identityproviders pureengage not found response a status code equal to that given
func (o *DeleteIdentityprovidersPureengageNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteIdentityprovidersPureengageNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/pureengage][%d] deleteIdentityprovidersPureengageNotFound  %+v", 404, o.Payload)
}

func (o *DeleteIdentityprovidersPureengageNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/pureengage][%d] deleteIdentityprovidersPureengageNotFound  %+v", 404, o.Payload)
}

func (o *DeleteIdentityprovidersPureengageNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteIdentityprovidersPureengageNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIdentityprovidersPureengageRequestTimeout creates a DeleteIdentityprovidersPureengageRequestTimeout with default headers values
func NewDeleteIdentityprovidersPureengageRequestTimeout() *DeleteIdentityprovidersPureengageRequestTimeout {
	return &DeleteIdentityprovidersPureengageRequestTimeout{}
}

/*
DeleteIdentityprovidersPureengageRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type DeleteIdentityprovidersPureengageRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete identityproviders pureengage request timeout response has a 2xx status code
func (o *DeleteIdentityprovidersPureengageRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete identityproviders pureengage request timeout response has a 3xx status code
func (o *DeleteIdentityprovidersPureengageRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identityproviders pureengage request timeout response has a 4xx status code
func (o *DeleteIdentityprovidersPureengageRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete identityproviders pureengage request timeout response has a 5xx status code
func (o *DeleteIdentityprovidersPureengageRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this delete identityproviders pureengage request timeout response a status code equal to that given
func (o *DeleteIdentityprovidersPureengageRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *DeleteIdentityprovidersPureengageRequestTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/pureengage][%d] deleteIdentityprovidersPureengageRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteIdentityprovidersPureengageRequestTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/pureengage][%d] deleteIdentityprovidersPureengageRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteIdentityprovidersPureengageRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteIdentityprovidersPureengageRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIdentityprovidersPureengageRequestEntityTooLarge creates a DeleteIdentityprovidersPureengageRequestEntityTooLarge with default headers values
func NewDeleteIdentityprovidersPureengageRequestEntityTooLarge() *DeleteIdentityprovidersPureengageRequestEntityTooLarge {
	return &DeleteIdentityprovidersPureengageRequestEntityTooLarge{}
}

/*
DeleteIdentityprovidersPureengageRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type DeleteIdentityprovidersPureengageRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete identityproviders pureengage request entity too large response has a 2xx status code
func (o *DeleteIdentityprovidersPureengageRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete identityproviders pureengage request entity too large response has a 3xx status code
func (o *DeleteIdentityprovidersPureengageRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identityproviders pureengage request entity too large response has a 4xx status code
func (o *DeleteIdentityprovidersPureengageRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete identityproviders pureengage request entity too large response has a 5xx status code
func (o *DeleteIdentityprovidersPureengageRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this delete identityproviders pureengage request entity too large response a status code equal to that given
func (o *DeleteIdentityprovidersPureengageRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *DeleteIdentityprovidersPureengageRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/pureengage][%d] deleteIdentityprovidersPureengageRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteIdentityprovidersPureengageRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/pureengage][%d] deleteIdentityprovidersPureengageRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteIdentityprovidersPureengageRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteIdentityprovidersPureengageRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIdentityprovidersPureengageUnsupportedMediaType creates a DeleteIdentityprovidersPureengageUnsupportedMediaType with default headers values
func NewDeleteIdentityprovidersPureengageUnsupportedMediaType() *DeleteIdentityprovidersPureengageUnsupportedMediaType {
	return &DeleteIdentityprovidersPureengageUnsupportedMediaType{}
}

/*
DeleteIdentityprovidersPureengageUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type DeleteIdentityprovidersPureengageUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete identityproviders pureengage unsupported media type response has a 2xx status code
func (o *DeleteIdentityprovidersPureengageUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete identityproviders pureengage unsupported media type response has a 3xx status code
func (o *DeleteIdentityprovidersPureengageUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identityproviders pureengage unsupported media type response has a 4xx status code
func (o *DeleteIdentityprovidersPureengageUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete identityproviders pureengage unsupported media type response has a 5xx status code
func (o *DeleteIdentityprovidersPureengageUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this delete identityproviders pureengage unsupported media type response a status code equal to that given
func (o *DeleteIdentityprovidersPureengageUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *DeleteIdentityprovidersPureengageUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/pureengage][%d] deleteIdentityprovidersPureengageUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteIdentityprovidersPureengageUnsupportedMediaType) String() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/pureengage][%d] deleteIdentityprovidersPureengageUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteIdentityprovidersPureengageUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteIdentityprovidersPureengageUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIdentityprovidersPureengageTooManyRequests creates a DeleteIdentityprovidersPureengageTooManyRequests with default headers values
func NewDeleteIdentityprovidersPureengageTooManyRequests() *DeleteIdentityprovidersPureengageTooManyRequests {
	return &DeleteIdentityprovidersPureengageTooManyRequests{}
}

/*
DeleteIdentityprovidersPureengageTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type DeleteIdentityprovidersPureengageTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete identityproviders pureengage too many requests response has a 2xx status code
func (o *DeleteIdentityprovidersPureengageTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete identityproviders pureengage too many requests response has a 3xx status code
func (o *DeleteIdentityprovidersPureengageTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identityproviders pureengage too many requests response has a 4xx status code
func (o *DeleteIdentityprovidersPureengageTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete identityproviders pureengage too many requests response has a 5xx status code
func (o *DeleteIdentityprovidersPureengageTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete identityproviders pureengage too many requests response a status code equal to that given
func (o *DeleteIdentityprovidersPureengageTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *DeleteIdentityprovidersPureengageTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/pureengage][%d] deleteIdentityprovidersPureengageTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteIdentityprovidersPureengageTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/pureengage][%d] deleteIdentityprovidersPureengageTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteIdentityprovidersPureengageTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteIdentityprovidersPureengageTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIdentityprovidersPureengageInternalServerError creates a DeleteIdentityprovidersPureengageInternalServerError with default headers values
func NewDeleteIdentityprovidersPureengageInternalServerError() *DeleteIdentityprovidersPureengageInternalServerError {
	return &DeleteIdentityprovidersPureengageInternalServerError{}
}

/*
DeleteIdentityprovidersPureengageInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type DeleteIdentityprovidersPureengageInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete identityproviders pureengage internal server error response has a 2xx status code
func (o *DeleteIdentityprovidersPureengageInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete identityproviders pureengage internal server error response has a 3xx status code
func (o *DeleteIdentityprovidersPureengageInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identityproviders pureengage internal server error response has a 4xx status code
func (o *DeleteIdentityprovidersPureengageInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete identityproviders pureengage internal server error response has a 5xx status code
func (o *DeleteIdentityprovidersPureengageInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete identityproviders pureengage internal server error response a status code equal to that given
func (o *DeleteIdentityprovidersPureengageInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteIdentityprovidersPureengageInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/pureengage][%d] deleteIdentityprovidersPureengageInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteIdentityprovidersPureengageInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/pureengage][%d] deleteIdentityprovidersPureengageInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteIdentityprovidersPureengageInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteIdentityprovidersPureengageInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIdentityprovidersPureengageServiceUnavailable creates a DeleteIdentityprovidersPureengageServiceUnavailable with default headers values
func NewDeleteIdentityprovidersPureengageServiceUnavailable() *DeleteIdentityprovidersPureengageServiceUnavailable {
	return &DeleteIdentityprovidersPureengageServiceUnavailable{}
}

/*
DeleteIdentityprovidersPureengageServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type DeleteIdentityprovidersPureengageServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete identityproviders pureengage service unavailable response has a 2xx status code
func (o *DeleteIdentityprovidersPureengageServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete identityproviders pureengage service unavailable response has a 3xx status code
func (o *DeleteIdentityprovidersPureengageServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identityproviders pureengage service unavailable response has a 4xx status code
func (o *DeleteIdentityprovidersPureengageServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete identityproviders pureengage service unavailable response has a 5xx status code
func (o *DeleteIdentityprovidersPureengageServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this delete identityproviders pureengage service unavailable response a status code equal to that given
func (o *DeleteIdentityprovidersPureengageServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *DeleteIdentityprovidersPureengageServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/pureengage][%d] deleteIdentityprovidersPureengageServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteIdentityprovidersPureengageServiceUnavailable) String() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/pureengage][%d] deleteIdentityprovidersPureengageServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteIdentityprovidersPureengageServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteIdentityprovidersPureengageServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIdentityprovidersPureengageGatewayTimeout creates a DeleteIdentityprovidersPureengageGatewayTimeout with default headers values
func NewDeleteIdentityprovidersPureengageGatewayTimeout() *DeleteIdentityprovidersPureengageGatewayTimeout {
	return &DeleteIdentityprovidersPureengageGatewayTimeout{}
}

/*
DeleteIdentityprovidersPureengageGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type DeleteIdentityprovidersPureengageGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete identityproviders pureengage gateway timeout response has a 2xx status code
func (o *DeleteIdentityprovidersPureengageGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete identityproviders pureengage gateway timeout response has a 3xx status code
func (o *DeleteIdentityprovidersPureengageGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identityproviders pureengage gateway timeout response has a 4xx status code
func (o *DeleteIdentityprovidersPureengageGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete identityproviders pureengage gateway timeout response has a 5xx status code
func (o *DeleteIdentityprovidersPureengageGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this delete identityproviders pureengage gateway timeout response a status code equal to that given
func (o *DeleteIdentityprovidersPureengageGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *DeleteIdentityprovidersPureengageGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/pureengage][%d] deleteIdentityprovidersPureengageGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteIdentityprovidersPureengageGatewayTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/pureengage][%d] deleteIdentityprovidersPureengageGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteIdentityprovidersPureengageGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteIdentityprovidersPureengageGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
