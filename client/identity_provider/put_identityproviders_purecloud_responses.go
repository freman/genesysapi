// Code generated by go-swagger; DO NOT EDIT.

package identity_provider

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutIdentityprovidersPurecloudReader is a Reader for the PutIdentityprovidersPurecloud structure.
type PutIdentityprovidersPurecloudReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutIdentityprovidersPurecloudReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutIdentityprovidersPurecloudOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutIdentityprovidersPurecloudBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutIdentityprovidersPurecloudUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutIdentityprovidersPurecloudForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutIdentityprovidersPurecloudNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutIdentityprovidersPurecloudRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutIdentityprovidersPurecloudRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutIdentityprovidersPurecloudUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutIdentityprovidersPurecloudTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutIdentityprovidersPurecloudInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutIdentityprovidersPurecloudServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutIdentityprovidersPurecloudGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutIdentityprovidersPurecloudOK creates a PutIdentityprovidersPurecloudOK with default headers values
func NewPutIdentityprovidersPurecloudOK() *PutIdentityprovidersPurecloudOK {
	return &PutIdentityprovidersPurecloudOK{}
}

/*
PutIdentityprovidersPurecloudOK describes a response with status code 200, with default header values.

successful operation
*/
type PutIdentityprovidersPurecloudOK struct {
	Payload *models.OAuthProvider
}

// IsSuccess returns true when this put identityproviders purecloud o k response has a 2xx status code
func (o *PutIdentityprovidersPurecloudOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put identityproviders purecloud o k response has a 3xx status code
func (o *PutIdentityprovidersPurecloudOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders purecloud o k response has a 4xx status code
func (o *PutIdentityprovidersPurecloudOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put identityproviders purecloud o k response has a 5xx status code
func (o *PutIdentityprovidersPurecloudOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put identityproviders purecloud o k response a status code equal to that given
func (o *PutIdentityprovidersPurecloudOK) IsCode(code int) bool {
	return code == 200
}

func (o *PutIdentityprovidersPurecloudOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/purecloud][%d] putIdentityprovidersPurecloudOK  %+v", 200, o.Payload)
}

func (o *PutIdentityprovidersPurecloudOK) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/purecloud][%d] putIdentityprovidersPurecloudOK  %+v", 200, o.Payload)
}

func (o *PutIdentityprovidersPurecloudOK) GetPayload() *models.OAuthProvider {
	return o.Payload
}

func (o *PutIdentityprovidersPurecloudOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OAuthProvider)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersPurecloudBadRequest creates a PutIdentityprovidersPurecloudBadRequest with default headers values
func NewPutIdentityprovidersPurecloudBadRequest() *PutIdentityprovidersPurecloudBadRequest {
	return &PutIdentityprovidersPurecloudBadRequest{}
}

/*
PutIdentityprovidersPurecloudBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutIdentityprovidersPurecloudBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders purecloud bad request response has a 2xx status code
func (o *PutIdentityprovidersPurecloudBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders purecloud bad request response has a 3xx status code
func (o *PutIdentityprovidersPurecloudBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders purecloud bad request response has a 4xx status code
func (o *PutIdentityprovidersPurecloudBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put identityproviders purecloud bad request response has a 5xx status code
func (o *PutIdentityprovidersPurecloudBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put identityproviders purecloud bad request response a status code equal to that given
func (o *PutIdentityprovidersPurecloudBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PutIdentityprovidersPurecloudBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/purecloud][%d] putIdentityprovidersPurecloudBadRequest  %+v", 400, o.Payload)
}

func (o *PutIdentityprovidersPurecloudBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/purecloud][%d] putIdentityprovidersPurecloudBadRequest  %+v", 400, o.Payload)
}

func (o *PutIdentityprovidersPurecloudBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersPurecloudBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersPurecloudUnauthorized creates a PutIdentityprovidersPurecloudUnauthorized with default headers values
func NewPutIdentityprovidersPurecloudUnauthorized() *PutIdentityprovidersPurecloudUnauthorized {
	return &PutIdentityprovidersPurecloudUnauthorized{}
}

/*
PutIdentityprovidersPurecloudUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PutIdentityprovidersPurecloudUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders purecloud unauthorized response has a 2xx status code
func (o *PutIdentityprovidersPurecloudUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders purecloud unauthorized response has a 3xx status code
func (o *PutIdentityprovidersPurecloudUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders purecloud unauthorized response has a 4xx status code
func (o *PutIdentityprovidersPurecloudUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put identityproviders purecloud unauthorized response has a 5xx status code
func (o *PutIdentityprovidersPurecloudUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put identityproviders purecloud unauthorized response a status code equal to that given
func (o *PutIdentityprovidersPurecloudUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PutIdentityprovidersPurecloudUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/purecloud][%d] putIdentityprovidersPurecloudUnauthorized  %+v", 401, o.Payload)
}

func (o *PutIdentityprovidersPurecloudUnauthorized) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/purecloud][%d] putIdentityprovidersPurecloudUnauthorized  %+v", 401, o.Payload)
}

func (o *PutIdentityprovidersPurecloudUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersPurecloudUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersPurecloudForbidden creates a PutIdentityprovidersPurecloudForbidden with default headers values
func NewPutIdentityprovidersPurecloudForbidden() *PutIdentityprovidersPurecloudForbidden {
	return &PutIdentityprovidersPurecloudForbidden{}
}

/*
PutIdentityprovidersPurecloudForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PutIdentityprovidersPurecloudForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders purecloud forbidden response has a 2xx status code
func (o *PutIdentityprovidersPurecloudForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders purecloud forbidden response has a 3xx status code
func (o *PutIdentityprovidersPurecloudForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders purecloud forbidden response has a 4xx status code
func (o *PutIdentityprovidersPurecloudForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put identityproviders purecloud forbidden response has a 5xx status code
func (o *PutIdentityprovidersPurecloudForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put identityproviders purecloud forbidden response a status code equal to that given
func (o *PutIdentityprovidersPurecloudForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PutIdentityprovidersPurecloudForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/purecloud][%d] putIdentityprovidersPurecloudForbidden  %+v", 403, o.Payload)
}

func (o *PutIdentityprovidersPurecloudForbidden) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/purecloud][%d] putIdentityprovidersPurecloudForbidden  %+v", 403, o.Payload)
}

func (o *PutIdentityprovidersPurecloudForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersPurecloudForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersPurecloudNotFound creates a PutIdentityprovidersPurecloudNotFound with default headers values
func NewPutIdentityprovidersPurecloudNotFound() *PutIdentityprovidersPurecloudNotFound {
	return &PutIdentityprovidersPurecloudNotFound{}
}

/*
PutIdentityprovidersPurecloudNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PutIdentityprovidersPurecloudNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders purecloud not found response has a 2xx status code
func (o *PutIdentityprovidersPurecloudNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders purecloud not found response has a 3xx status code
func (o *PutIdentityprovidersPurecloudNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders purecloud not found response has a 4xx status code
func (o *PutIdentityprovidersPurecloudNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put identityproviders purecloud not found response has a 5xx status code
func (o *PutIdentityprovidersPurecloudNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put identityproviders purecloud not found response a status code equal to that given
func (o *PutIdentityprovidersPurecloudNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PutIdentityprovidersPurecloudNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/purecloud][%d] putIdentityprovidersPurecloudNotFound  %+v", 404, o.Payload)
}

func (o *PutIdentityprovidersPurecloudNotFound) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/purecloud][%d] putIdentityprovidersPurecloudNotFound  %+v", 404, o.Payload)
}

func (o *PutIdentityprovidersPurecloudNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersPurecloudNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersPurecloudRequestTimeout creates a PutIdentityprovidersPurecloudRequestTimeout with default headers values
func NewPutIdentityprovidersPurecloudRequestTimeout() *PutIdentityprovidersPurecloudRequestTimeout {
	return &PutIdentityprovidersPurecloudRequestTimeout{}
}

/*
PutIdentityprovidersPurecloudRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutIdentityprovidersPurecloudRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders purecloud request timeout response has a 2xx status code
func (o *PutIdentityprovidersPurecloudRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders purecloud request timeout response has a 3xx status code
func (o *PutIdentityprovidersPurecloudRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders purecloud request timeout response has a 4xx status code
func (o *PutIdentityprovidersPurecloudRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this put identityproviders purecloud request timeout response has a 5xx status code
func (o *PutIdentityprovidersPurecloudRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this put identityproviders purecloud request timeout response a status code equal to that given
func (o *PutIdentityprovidersPurecloudRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PutIdentityprovidersPurecloudRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/purecloud][%d] putIdentityprovidersPurecloudRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutIdentityprovidersPurecloudRequestTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/purecloud][%d] putIdentityprovidersPurecloudRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutIdentityprovidersPurecloudRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersPurecloudRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersPurecloudRequestEntityTooLarge creates a PutIdentityprovidersPurecloudRequestEntityTooLarge with default headers values
func NewPutIdentityprovidersPurecloudRequestEntityTooLarge() *PutIdentityprovidersPurecloudRequestEntityTooLarge {
	return &PutIdentityprovidersPurecloudRequestEntityTooLarge{}
}

/*
PutIdentityprovidersPurecloudRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PutIdentityprovidersPurecloudRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders purecloud request entity too large response has a 2xx status code
func (o *PutIdentityprovidersPurecloudRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders purecloud request entity too large response has a 3xx status code
func (o *PutIdentityprovidersPurecloudRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders purecloud request entity too large response has a 4xx status code
func (o *PutIdentityprovidersPurecloudRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this put identityproviders purecloud request entity too large response has a 5xx status code
func (o *PutIdentityprovidersPurecloudRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this put identityproviders purecloud request entity too large response a status code equal to that given
func (o *PutIdentityprovidersPurecloudRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PutIdentityprovidersPurecloudRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/purecloud][%d] putIdentityprovidersPurecloudRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutIdentityprovidersPurecloudRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/purecloud][%d] putIdentityprovidersPurecloudRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutIdentityprovidersPurecloudRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersPurecloudRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersPurecloudUnsupportedMediaType creates a PutIdentityprovidersPurecloudUnsupportedMediaType with default headers values
func NewPutIdentityprovidersPurecloudUnsupportedMediaType() *PutIdentityprovidersPurecloudUnsupportedMediaType {
	return &PutIdentityprovidersPurecloudUnsupportedMediaType{}
}

/*
PutIdentityprovidersPurecloudUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutIdentityprovidersPurecloudUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders purecloud unsupported media type response has a 2xx status code
func (o *PutIdentityprovidersPurecloudUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders purecloud unsupported media type response has a 3xx status code
func (o *PutIdentityprovidersPurecloudUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders purecloud unsupported media type response has a 4xx status code
func (o *PutIdentityprovidersPurecloudUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this put identityproviders purecloud unsupported media type response has a 5xx status code
func (o *PutIdentityprovidersPurecloudUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this put identityproviders purecloud unsupported media type response a status code equal to that given
func (o *PutIdentityprovidersPurecloudUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PutIdentityprovidersPurecloudUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/purecloud][%d] putIdentityprovidersPurecloudUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutIdentityprovidersPurecloudUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/purecloud][%d] putIdentityprovidersPurecloudUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutIdentityprovidersPurecloudUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersPurecloudUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersPurecloudTooManyRequests creates a PutIdentityprovidersPurecloudTooManyRequests with default headers values
func NewPutIdentityprovidersPurecloudTooManyRequests() *PutIdentityprovidersPurecloudTooManyRequests {
	return &PutIdentityprovidersPurecloudTooManyRequests{}
}

/*
PutIdentityprovidersPurecloudTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutIdentityprovidersPurecloudTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders purecloud too many requests response has a 2xx status code
func (o *PutIdentityprovidersPurecloudTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders purecloud too many requests response has a 3xx status code
func (o *PutIdentityprovidersPurecloudTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders purecloud too many requests response has a 4xx status code
func (o *PutIdentityprovidersPurecloudTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this put identityproviders purecloud too many requests response has a 5xx status code
func (o *PutIdentityprovidersPurecloudTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this put identityproviders purecloud too many requests response a status code equal to that given
func (o *PutIdentityprovidersPurecloudTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PutIdentityprovidersPurecloudTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/purecloud][%d] putIdentityprovidersPurecloudTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutIdentityprovidersPurecloudTooManyRequests) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/purecloud][%d] putIdentityprovidersPurecloudTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutIdentityprovidersPurecloudTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersPurecloudTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersPurecloudInternalServerError creates a PutIdentityprovidersPurecloudInternalServerError with default headers values
func NewPutIdentityprovidersPurecloudInternalServerError() *PutIdentityprovidersPurecloudInternalServerError {
	return &PutIdentityprovidersPurecloudInternalServerError{}
}

/*
PutIdentityprovidersPurecloudInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutIdentityprovidersPurecloudInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders purecloud internal server error response has a 2xx status code
func (o *PutIdentityprovidersPurecloudInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders purecloud internal server error response has a 3xx status code
func (o *PutIdentityprovidersPurecloudInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders purecloud internal server error response has a 4xx status code
func (o *PutIdentityprovidersPurecloudInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this put identityproviders purecloud internal server error response has a 5xx status code
func (o *PutIdentityprovidersPurecloudInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this put identityproviders purecloud internal server error response a status code equal to that given
func (o *PutIdentityprovidersPurecloudInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PutIdentityprovidersPurecloudInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/purecloud][%d] putIdentityprovidersPurecloudInternalServerError  %+v", 500, o.Payload)
}

func (o *PutIdentityprovidersPurecloudInternalServerError) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/purecloud][%d] putIdentityprovidersPurecloudInternalServerError  %+v", 500, o.Payload)
}

func (o *PutIdentityprovidersPurecloudInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersPurecloudInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersPurecloudServiceUnavailable creates a PutIdentityprovidersPurecloudServiceUnavailable with default headers values
func NewPutIdentityprovidersPurecloudServiceUnavailable() *PutIdentityprovidersPurecloudServiceUnavailable {
	return &PutIdentityprovidersPurecloudServiceUnavailable{}
}

/*
PutIdentityprovidersPurecloudServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutIdentityprovidersPurecloudServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders purecloud service unavailable response has a 2xx status code
func (o *PutIdentityprovidersPurecloudServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders purecloud service unavailable response has a 3xx status code
func (o *PutIdentityprovidersPurecloudServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders purecloud service unavailable response has a 4xx status code
func (o *PutIdentityprovidersPurecloudServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this put identityproviders purecloud service unavailable response has a 5xx status code
func (o *PutIdentityprovidersPurecloudServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this put identityproviders purecloud service unavailable response a status code equal to that given
func (o *PutIdentityprovidersPurecloudServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PutIdentityprovidersPurecloudServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/purecloud][%d] putIdentityprovidersPurecloudServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutIdentityprovidersPurecloudServiceUnavailable) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/purecloud][%d] putIdentityprovidersPurecloudServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutIdentityprovidersPurecloudServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersPurecloudServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersPurecloudGatewayTimeout creates a PutIdentityprovidersPurecloudGatewayTimeout with default headers values
func NewPutIdentityprovidersPurecloudGatewayTimeout() *PutIdentityprovidersPurecloudGatewayTimeout {
	return &PutIdentityprovidersPurecloudGatewayTimeout{}
}

/*
PutIdentityprovidersPurecloudGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PutIdentityprovidersPurecloudGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders purecloud gateway timeout response has a 2xx status code
func (o *PutIdentityprovidersPurecloudGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders purecloud gateway timeout response has a 3xx status code
func (o *PutIdentityprovidersPurecloudGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders purecloud gateway timeout response has a 4xx status code
func (o *PutIdentityprovidersPurecloudGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this put identityproviders purecloud gateway timeout response has a 5xx status code
func (o *PutIdentityprovidersPurecloudGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this put identityproviders purecloud gateway timeout response a status code equal to that given
func (o *PutIdentityprovidersPurecloudGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PutIdentityprovidersPurecloudGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/purecloud][%d] putIdentityprovidersPurecloudGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutIdentityprovidersPurecloudGatewayTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/purecloud][%d] putIdentityprovidersPurecloudGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutIdentityprovidersPurecloudGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersPurecloudGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
