// Code generated by go-swagger; DO NOT EDIT.

package identity_provider

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutIdentityprovidersSalesforceReader is a Reader for the PutIdentityprovidersSalesforce structure.
type PutIdentityprovidersSalesforceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutIdentityprovidersSalesforceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutIdentityprovidersSalesforceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutIdentityprovidersSalesforceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutIdentityprovidersSalesforceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutIdentityprovidersSalesforceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutIdentityprovidersSalesforceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutIdentityprovidersSalesforceRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutIdentityprovidersSalesforceRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutIdentityprovidersSalesforceUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutIdentityprovidersSalesforceTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutIdentityprovidersSalesforceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutIdentityprovidersSalesforceServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutIdentityprovidersSalesforceGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutIdentityprovidersSalesforceOK creates a PutIdentityprovidersSalesforceOK with default headers values
func NewPutIdentityprovidersSalesforceOK() *PutIdentityprovidersSalesforceOK {
	return &PutIdentityprovidersSalesforceOK{}
}

/*
PutIdentityprovidersSalesforceOK describes a response with status code 200, with default header values.

successful operation
*/
type PutIdentityprovidersSalesforceOK struct {
	Payload *models.OAuthProvider
}

// IsSuccess returns true when this put identityproviders salesforce o k response has a 2xx status code
func (o *PutIdentityprovidersSalesforceOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put identityproviders salesforce o k response has a 3xx status code
func (o *PutIdentityprovidersSalesforceOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders salesforce o k response has a 4xx status code
func (o *PutIdentityprovidersSalesforceOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put identityproviders salesforce o k response has a 5xx status code
func (o *PutIdentityprovidersSalesforceOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put identityproviders salesforce o k response a status code equal to that given
func (o *PutIdentityprovidersSalesforceOK) IsCode(code int) bool {
	return code == 200
}

func (o *PutIdentityprovidersSalesforceOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/salesforce][%d] putIdentityprovidersSalesforceOK  %+v", 200, o.Payload)
}

func (o *PutIdentityprovidersSalesforceOK) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/salesforce][%d] putIdentityprovidersSalesforceOK  %+v", 200, o.Payload)
}

func (o *PutIdentityprovidersSalesforceOK) GetPayload() *models.OAuthProvider {
	return o.Payload
}

func (o *PutIdentityprovidersSalesforceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OAuthProvider)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersSalesforceBadRequest creates a PutIdentityprovidersSalesforceBadRequest with default headers values
func NewPutIdentityprovidersSalesforceBadRequest() *PutIdentityprovidersSalesforceBadRequest {
	return &PutIdentityprovidersSalesforceBadRequest{}
}

/*
PutIdentityprovidersSalesforceBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutIdentityprovidersSalesforceBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders salesforce bad request response has a 2xx status code
func (o *PutIdentityprovidersSalesforceBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders salesforce bad request response has a 3xx status code
func (o *PutIdentityprovidersSalesforceBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders salesforce bad request response has a 4xx status code
func (o *PutIdentityprovidersSalesforceBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put identityproviders salesforce bad request response has a 5xx status code
func (o *PutIdentityprovidersSalesforceBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put identityproviders salesforce bad request response a status code equal to that given
func (o *PutIdentityprovidersSalesforceBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PutIdentityprovidersSalesforceBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/salesforce][%d] putIdentityprovidersSalesforceBadRequest  %+v", 400, o.Payload)
}

func (o *PutIdentityprovidersSalesforceBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/salesforce][%d] putIdentityprovidersSalesforceBadRequest  %+v", 400, o.Payload)
}

func (o *PutIdentityprovidersSalesforceBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersSalesforceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersSalesforceUnauthorized creates a PutIdentityprovidersSalesforceUnauthorized with default headers values
func NewPutIdentityprovidersSalesforceUnauthorized() *PutIdentityprovidersSalesforceUnauthorized {
	return &PutIdentityprovidersSalesforceUnauthorized{}
}

/*
PutIdentityprovidersSalesforceUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PutIdentityprovidersSalesforceUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders salesforce unauthorized response has a 2xx status code
func (o *PutIdentityprovidersSalesforceUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders salesforce unauthorized response has a 3xx status code
func (o *PutIdentityprovidersSalesforceUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders salesforce unauthorized response has a 4xx status code
func (o *PutIdentityprovidersSalesforceUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put identityproviders salesforce unauthorized response has a 5xx status code
func (o *PutIdentityprovidersSalesforceUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put identityproviders salesforce unauthorized response a status code equal to that given
func (o *PutIdentityprovidersSalesforceUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PutIdentityprovidersSalesforceUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/salesforce][%d] putIdentityprovidersSalesforceUnauthorized  %+v", 401, o.Payload)
}

func (o *PutIdentityprovidersSalesforceUnauthorized) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/salesforce][%d] putIdentityprovidersSalesforceUnauthorized  %+v", 401, o.Payload)
}

func (o *PutIdentityprovidersSalesforceUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersSalesforceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersSalesforceForbidden creates a PutIdentityprovidersSalesforceForbidden with default headers values
func NewPutIdentityprovidersSalesforceForbidden() *PutIdentityprovidersSalesforceForbidden {
	return &PutIdentityprovidersSalesforceForbidden{}
}

/*
PutIdentityprovidersSalesforceForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PutIdentityprovidersSalesforceForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders salesforce forbidden response has a 2xx status code
func (o *PutIdentityprovidersSalesforceForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders salesforce forbidden response has a 3xx status code
func (o *PutIdentityprovidersSalesforceForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders salesforce forbidden response has a 4xx status code
func (o *PutIdentityprovidersSalesforceForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put identityproviders salesforce forbidden response has a 5xx status code
func (o *PutIdentityprovidersSalesforceForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put identityproviders salesforce forbidden response a status code equal to that given
func (o *PutIdentityprovidersSalesforceForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PutIdentityprovidersSalesforceForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/salesforce][%d] putIdentityprovidersSalesforceForbidden  %+v", 403, o.Payload)
}

func (o *PutIdentityprovidersSalesforceForbidden) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/salesforce][%d] putIdentityprovidersSalesforceForbidden  %+v", 403, o.Payload)
}

func (o *PutIdentityprovidersSalesforceForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersSalesforceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersSalesforceNotFound creates a PutIdentityprovidersSalesforceNotFound with default headers values
func NewPutIdentityprovidersSalesforceNotFound() *PutIdentityprovidersSalesforceNotFound {
	return &PutIdentityprovidersSalesforceNotFound{}
}

/*
PutIdentityprovidersSalesforceNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PutIdentityprovidersSalesforceNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders salesforce not found response has a 2xx status code
func (o *PutIdentityprovidersSalesforceNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders salesforce not found response has a 3xx status code
func (o *PutIdentityprovidersSalesforceNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders salesforce not found response has a 4xx status code
func (o *PutIdentityprovidersSalesforceNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put identityproviders salesforce not found response has a 5xx status code
func (o *PutIdentityprovidersSalesforceNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put identityproviders salesforce not found response a status code equal to that given
func (o *PutIdentityprovidersSalesforceNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PutIdentityprovidersSalesforceNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/salesforce][%d] putIdentityprovidersSalesforceNotFound  %+v", 404, o.Payload)
}

func (o *PutIdentityprovidersSalesforceNotFound) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/salesforce][%d] putIdentityprovidersSalesforceNotFound  %+v", 404, o.Payload)
}

func (o *PutIdentityprovidersSalesforceNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersSalesforceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersSalesforceRequestTimeout creates a PutIdentityprovidersSalesforceRequestTimeout with default headers values
func NewPutIdentityprovidersSalesforceRequestTimeout() *PutIdentityprovidersSalesforceRequestTimeout {
	return &PutIdentityprovidersSalesforceRequestTimeout{}
}

/*
PutIdentityprovidersSalesforceRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutIdentityprovidersSalesforceRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders salesforce request timeout response has a 2xx status code
func (o *PutIdentityprovidersSalesforceRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders salesforce request timeout response has a 3xx status code
func (o *PutIdentityprovidersSalesforceRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders salesforce request timeout response has a 4xx status code
func (o *PutIdentityprovidersSalesforceRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this put identityproviders salesforce request timeout response has a 5xx status code
func (o *PutIdentityprovidersSalesforceRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this put identityproviders salesforce request timeout response a status code equal to that given
func (o *PutIdentityprovidersSalesforceRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PutIdentityprovidersSalesforceRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/salesforce][%d] putIdentityprovidersSalesforceRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutIdentityprovidersSalesforceRequestTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/salesforce][%d] putIdentityprovidersSalesforceRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutIdentityprovidersSalesforceRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersSalesforceRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersSalesforceRequestEntityTooLarge creates a PutIdentityprovidersSalesforceRequestEntityTooLarge with default headers values
func NewPutIdentityprovidersSalesforceRequestEntityTooLarge() *PutIdentityprovidersSalesforceRequestEntityTooLarge {
	return &PutIdentityprovidersSalesforceRequestEntityTooLarge{}
}

/*
PutIdentityprovidersSalesforceRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PutIdentityprovidersSalesforceRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders salesforce request entity too large response has a 2xx status code
func (o *PutIdentityprovidersSalesforceRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders salesforce request entity too large response has a 3xx status code
func (o *PutIdentityprovidersSalesforceRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders salesforce request entity too large response has a 4xx status code
func (o *PutIdentityprovidersSalesforceRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this put identityproviders salesforce request entity too large response has a 5xx status code
func (o *PutIdentityprovidersSalesforceRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this put identityproviders salesforce request entity too large response a status code equal to that given
func (o *PutIdentityprovidersSalesforceRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PutIdentityprovidersSalesforceRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/salesforce][%d] putIdentityprovidersSalesforceRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutIdentityprovidersSalesforceRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/salesforce][%d] putIdentityprovidersSalesforceRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutIdentityprovidersSalesforceRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersSalesforceRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersSalesforceUnsupportedMediaType creates a PutIdentityprovidersSalesforceUnsupportedMediaType with default headers values
func NewPutIdentityprovidersSalesforceUnsupportedMediaType() *PutIdentityprovidersSalesforceUnsupportedMediaType {
	return &PutIdentityprovidersSalesforceUnsupportedMediaType{}
}

/*
PutIdentityprovidersSalesforceUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutIdentityprovidersSalesforceUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders salesforce unsupported media type response has a 2xx status code
func (o *PutIdentityprovidersSalesforceUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders salesforce unsupported media type response has a 3xx status code
func (o *PutIdentityprovidersSalesforceUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders salesforce unsupported media type response has a 4xx status code
func (o *PutIdentityprovidersSalesforceUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this put identityproviders salesforce unsupported media type response has a 5xx status code
func (o *PutIdentityprovidersSalesforceUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this put identityproviders salesforce unsupported media type response a status code equal to that given
func (o *PutIdentityprovidersSalesforceUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PutIdentityprovidersSalesforceUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/salesforce][%d] putIdentityprovidersSalesforceUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutIdentityprovidersSalesforceUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/salesforce][%d] putIdentityprovidersSalesforceUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutIdentityprovidersSalesforceUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersSalesforceUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersSalesforceTooManyRequests creates a PutIdentityprovidersSalesforceTooManyRequests with default headers values
func NewPutIdentityprovidersSalesforceTooManyRequests() *PutIdentityprovidersSalesforceTooManyRequests {
	return &PutIdentityprovidersSalesforceTooManyRequests{}
}

/*
PutIdentityprovidersSalesforceTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutIdentityprovidersSalesforceTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders salesforce too many requests response has a 2xx status code
func (o *PutIdentityprovidersSalesforceTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders salesforce too many requests response has a 3xx status code
func (o *PutIdentityprovidersSalesforceTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders salesforce too many requests response has a 4xx status code
func (o *PutIdentityprovidersSalesforceTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this put identityproviders salesforce too many requests response has a 5xx status code
func (o *PutIdentityprovidersSalesforceTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this put identityproviders salesforce too many requests response a status code equal to that given
func (o *PutIdentityprovidersSalesforceTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PutIdentityprovidersSalesforceTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/salesforce][%d] putIdentityprovidersSalesforceTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutIdentityprovidersSalesforceTooManyRequests) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/salesforce][%d] putIdentityprovidersSalesforceTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutIdentityprovidersSalesforceTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersSalesforceTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersSalesforceInternalServerError creates a PutIdentityprovidersSalesforceInternalServerError with default headers values
func NewPutIdentityprovidersSalesforceInternalServerError() *PutIdentityprovidersSalesforceInternalServerError {
	return &PutIdentityprovidersSalesforceInternalServerError{}
}

/*
PutIdentityprovidersSalesforceInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutIdentityprovidersSalesforceInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders salesforce internal server error response has a 2xx status code
func (o *PutIdentityprovidersSalesforceInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders salesforce internal server error response has a 3xx status code
func (o *PutIdentityprovidersSalesforceInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders salesforce internal server error response has a 4xx status code
func (o *PutIdentityprovidersSalesforceInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this put identityproviders salesforce internal server error response has a 5xx status code
func (o *PutIdentityprovidersSalesforceInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this put identityproviders salesforce internal server error response a status code equal to that given
func (o *PutIdentityprovidersSalesforceInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PutIdentityprovidersSalesforceInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/salesforce][%d] putIdentityprovidersSalesforceInternalServerError  %+v", 500, o.Payload)
}

func (o *PutIdentityprovidersSalesforceInternalServerError) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/salesforce][%d] putIdentityprovidersSalesforceInternalServerError  %+v", 500, o.Payload)
}

func (o *PutIdentityprovidersSalesforceInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersSalesforceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersSalesforceServiceUnavailable creates a PutIdentityprovidersSalesforceServiceUnavailable with default headers values
func NewPutIdentityprovidersSalesforceServiceUnavailable() *PutIdentityprovidersSalesforceServiceUnavailable {
	return &PutIdentityprovidersSalesforceServiceUnavailable{}
}

/*
PutIdentityprovidersSalesforceServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutIdentityprovidersSalesforceServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders salesforce service unavailable response has a 2xx status code
func (o *PutIdentityprovidersSalesforceServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders salesforce service unavailable response has a 3xx status code
func (o *PutIdentityprovidersSalesforceServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders salesforce service unavailable response has a 4xx status code
func (o *PutIdentityprovidersSalesforceServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this put identityproviders salesforce service unavailable response has a 5xx status code
func (o *PutIdentityprovidersSalesforceServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this put identityproviders salesforce service unavailable response a status code equal to that given
func (o *PutIdentityprovidersSalesforceServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PutIdentityprovidersSalesforceServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/salesforce][%d] putIdentityprovidersSalesforceServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutIdentityprovidersSalesforceServiceUnavailable) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/salesforce][%d] putIdentityprovidersSalesforceServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutIdentityprovidersSalesforceServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersSalesforceServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersSalesforceGatewayTimeout creates a PutIdentityprovidersSalesforceGatewayTimeout with default headers values
func NewPutIdentityprovidersSalesforceGatewayTimeout() *PutIdentityprovidersSalesforceGatewayTimeout {
	return &PutIdentityprovidersSalesforceGatewayTimeout{}
}

/*
PutIdentityprovidersSalesforceGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PutIdentityprovidersSalesforceGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders salesforce gateway timeout response has a 2xx status code
func (o *PutIdentityprovidersSalesforceGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders salesforce gateway timeout response has a 3xx status code
func (o *PutIdentityprovidersSalesforceGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders salesforce gateway timeout response has a 4xx status code
func (o *PutIdentityprovidersSalesforceGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this put identityproviders salesforce gateway timeout response has a 5xx status code
func (o *PutIdentityprovidersSalesforceGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this put identityproviders salesforce gateway timeout response a status code equal to that given
func (o *PutIdentityprovidersSalesforceGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PutIdentityprovidersSalesforceGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/salesforce][%d] putIdentityprovidersSalesforceGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutIdentityprovidersSalesforceGatewayTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/salesforce][%d] putIdentityprovidersSalesforceGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutIdentityprovidersSalesforceGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersSalesforceGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
