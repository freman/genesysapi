// Code generated by go-swagger; DO NOT EDIT.

package identity_provider

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// DeleteIdentityprovidersIdentitynowReader is a Reader for the DeleteIdentityprovidersIdentitynow structure.
type DeleteIdentityprovidersIdentitynowReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteIdentityprovidersIdentitynowReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteIdentityprovidersIdentitynowOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteIdentityprovidersIdentitynowBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteIdentityprovidersIdentitynowUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteIdentityprovidersIdentitynowForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteIdentityprovidersIdentitynowNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewDeleteIdentityprovidersIdentitynowRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewDeleteIdentityprovidersIdentitynowRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDeleteIdentityprovidersIdentitynowUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteIdentityprovidersIdentitynowTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteIdentityprovidersIdentitynowInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteIdentityprovidersIdentitynowServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteIdentityprovidersIdentitynowGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteIdentityprovidersIdentitynowOK creates a DeleteIdentityprovidersIdentitynowOK with default headers values
func NewDeleteIdentityprovidersIdentitynowOK() *DeleteIdentityprovidersIdentitynowOK {
	return &DeleteIdentityprovidersIdentitynowOK{}
}

/*
DeleteIdentityprovidersIdentitynowOK describes a response with status code 200, with default header values.

successful operation
*/
type DeleteIdentityprovidersIdentitynowOK struct {
	Payload models.Empty
}

// IsSuccess returns true when this delete identityproviders identitynow o k response has a 2xx status code
func (o *DeleteIdentityprovidersIdentitynowOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete identityproviders identitynow o k response has a 3xx status code
func (o *DeleteIdentityprovidersIdentitynowOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identityproviders identitynow o k response has a 4xx status code
func (o *DeleteIdentityprovidersIdentitynowOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete identityproviders identitynow o k response has a 5xx status code
func (o *DeleteIdentityprovidersIdentitynowOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete identityproviders identitynow o k response a status code equal to that given
func (o *DeleteIdentityprovidersIdentitynowOK) IsCode(code int) bool {
	return code == 200
}

func (o *DeleteIdentityprovidersIdentitynowOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/identitynow][%d] deleteIdentityprovidersIdentitynowOK  %+v", 200, o.Payload)
}

func (o *DeleteIdentityprovidersIdentitynowOK) String() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/identitynow][%d] deleteIdentityprovidersIdentitynowOK  %+v", 200, o.Payload)
}

func (o *DeleteIdentityprovidersIdentitynowOK) GetPayload() models.Empty {
	return o.Payload
}

func (o *DeleteIdentityprovidersIdentitynowOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIdentityprovidersIdentitynowBadRequest creates a DeleteIdentityprovidersIdentitynowBadRequest with default headers values
func NewDeleteIdentityprovidersIdentitynowBadRequest() *DeleteIdentityprovidersIdentitynowBadRequest {
	return &DeleteIdentityprovidersIdentitynowBadRequest{}
}

/*
DeleteIdentityprovidersIdentitynowBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type DeleteIdentityprovidersIdentitynowBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete identityproviders identitynow bad request response has a 2xx status code
func (o *DeleteIdentityprovidersIdentitynowBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete identityproviders identitynow bad request response has a 3xx status code
func (o *DeleteIdentityprovidersIdentitynowBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identityproviders identitynow bad request response has a 4xx status code
func (o *DeleteIdentityprovidersIdentitynowBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete identityproviders identitynow bad request response has a 5xx status code
func (o *DeleteIdentityprovidersIdentitynowBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete identityproviders identitynow bad request response a status code equal to that given
func (o *DeleteIdentityprovidersIdentitynowBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteIdentityprovidersIdentitynowBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/identitynow][%d] deleteIdentityprovidersIdentitynowBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteIdentityprovidersIdentitynowBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/identitynow][%d] deleteIdentityprovidersIdentitynowBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteIdentityprovidersIdentitynowBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteIdentityprovidersIdentitynowBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIdentityprovidersIdentitynowUnauthorized creates a DeleteIdentityprovidersIdentitynowUnauthorized with default headers values
func NewDeleteIdentityprovidersIdentitynowUnauthorized() *DeleteIdentityprovidersIdentitynowUnauthorized {
	return &DeleteIdentityprovidersIdentitynowUnauthorized{}
}

/*
DeleteIdentityprovidersIdentitynowUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type DeleteIdentityprovidersIdentitynowUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete identityproviders identitynow unauthorized response has a 2xx status code
func (o *DeleteIdentityprovidersIdentitynowUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete identityproviders identitynow unauthorized response has a 3xx status code
func (o *DeleteIdentityprovidersIdentitynowUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identityproviders identitynow unauthorized response has a 4xx status code
func (o *DeleteIdentityprovidersIdentitynowUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete identityproviders identitynow unauthorized response has a 5xx status code
func (o *DeleteIdentityprovidersIdentitynowUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete identityproviders identitynow unauthorized response a status code equal to that given
func (o *DeleteIdentityprovidersIdentitynowUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteIdentityprovidersIdentitynowUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/identitynow][%d] deleteIdentityprovidersIdentitynowUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteIdentityprovidersIdentitynowUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/identitynow][%d] deleteIdentityprovidersIdentitynowUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteIdentityprovidersIdentitynowUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteIdentityprovidersIdentitynowUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIdentityprovidersIdentitynowForbidden creates a DeleteIdentityprovidersIdentitynowForbidden with default headers values
func NewDeleteIdentityprovidersIdentitynowForbidden() *DeleteIdentityprovidersIdentitynowForbidden {
	return &DeleteIdentityprovidersIdentitynowForbidden{}
}

/*
DeleteIdentityprovidersIdentitynowForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type DeleteIdentityprovidersIdentitynowForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete identityproviders identitynow forbidden response has a 2xx status code
func (o *DeleteIdentityprovidersIdentitynowForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete identityproviders identitynow forbidden response has a 3xx status code
func (o *DeleteIdentityprovidersIdentitynowForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identityproviders identitynow forbidden response has a 4xx status code
func (o *DeleteIdentityprovidersIdentitynowForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete identityproviders identitynow forbidden response has a 5xx status code
func (o *DeleteIdentityprovidersIdentitynowForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete identityproviders identitynow forbidden response a status code equal to that given
func (o *DeleteIdentityprovidersIdentitynowForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteIdentityprovidersIdentitynowForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/identitynow][%d] deleteIdentityprovidersIdentitynowForbidden  %+v", 403, o.Payload)
}

func (o *DeleteIdentityprovidersIdentitynowForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/identitynow][%d] deleteIdentityprovidersIdentitynowForbidden  %+v", 403, o.Payload)
}

func (o *DeleteIdentityprovidersIdentitynowForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteIdentityprovidersIdentitynowForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIdentityprovidersIdentitynowNotFound creates a DeleteIdentityprovidersIdentitynowNotFound with default headers values
func NewDeleteIdentityprovidersIdentitynowNotFound() *DeleteIdentityprovidersIdentitynowNotFound {
	return &DeleteIdentityprovidersIdentitynowNotFound{}
}

/*
DeleteIdentityprovidersIdentitynowNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type DeleteIdentityprovidersIdentitynowNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete identityproviders identitynow not found response has a 2xx status code
func (o *DeleteIdentityprovidersIdentitynowNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete identityproviders identitynow not found response has a 3xx status code
func (o *DeleteIdentityprovidersIdentitynowNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identityproviders identitynow not found response has a 4xx status code
func (o *DeleteIdentityprovidersIdentitynowNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete identityproviders identitynow not found response has a 5xx status code
func (o *DeleteIdentityprovidersIdentitynowNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete identityproviders identitynow not found response a status code equal to that given
func (o *DeleteIdentityprovidersIdentitynowNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteIdentityprovidersIdentitynowNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/identitynow][%d] deleteIdentityprovidersIdentitynowNotFound  %+v", 404, o.Payload)
}

func (o *DeleteIdentityprovidersIdentitynowNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/identitynow][%d] deleteIdentityprovidersIdentitynowNotFound  %+v", 404, o.Payload)
}

func (o *DeleteIdentityprovidersIdentitynowNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteIdentityprovidersIdentitynowNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIdentityprovidersIdentitynowRequestTimeout creates a DeleteIdentityprovidersIdentitynowRequestTimeout with default headers values
func NewDeleteIdentityprovidersIdentitynowRequestTimeout() *DeleteIdentityprovidersIdentitynowRequestTimeout {
	return &DeleteIdentityprovidersIdentitynowRequestTimeout{}
}

/*
DeleteIdentityprovidersIdentitynowRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type DeleteIdentityprovidersIdentitynowRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete identityproviders identitynow request timeout response has a 2xx status code
func (o *DeleteIdentityprovidersIdentitynowRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete identityproviders identitynow request timeout response has a 3xx status code
func (o *DeleteIdentityprovidersIdentitynowRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identityproviders identitynow request timeout response has a 4xx status code
func (o *DeleteIdentityprovidersIdentitynowRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete identityproviders identitynow request timeout response has a 5xx status code
func (o *DeleteIdentityprovidersIdentitynowRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this delete identityproviders identitynow request timeout response a status code equal to that given
func (o *DeleteIdentityprovidersIdentitynowRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *DeleteIdentityprovidersIdentitynowRequestTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/identitynow][%d] deleteIdentityprovidersIdentitynowRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteIdentityprovidersIdentitynowRequestTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/identitynow][%d] deleteIdentityprovidersIdentitynowRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteIdentityprovidersIdentitynowRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteIdentityprovidersIdentitynowRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIdentityprovidersIdentitynowRequestEntityTooLarge creates a DeleteIdentityprovidersIdentitynowRequestEntityTooLarge with default headers values
func NewDeleteIdentityprovidersIdentitynowRequestEntityTooLarge() *DeleteIdentityprovidersIdentitynowRequestEntityTooLarge {
	return &DeleteIdentityprovidersIdentitynowRequestEntityTooLarge{}
}

/*
DeleteIdentityprovidersIdentitynowRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type DeleteIdentityprovidersIdentitynowRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete identityproviders identitynow request entity too large response has a 2xx status code
func (o *DeleteIdentityprovidersIdentitynowRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete identityproviders identitynow request entity too large response has a 3xx status code
func (o *DeleteIdentityprovidersIdentitynowRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identityproviders identitynow request entity too large response has a 4xx status code
func (o *DeleteIdentityprovidersIdentitynowRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete identityproviders identitynow request entity too large response has a 5xx status code
func (o *DeleteIdentityprovidersIdentitynowRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this delete identityproviders identitynow request entity too large response a status code equal to that given
func (o *DeleteIdentityprovidersIdentitynowRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *DeleteIdentityprovidersIdentitynowRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/identitynow][%d] deleteIdentityprovidersIdentitynowRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteIdentityprovidersIdentitynowRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/identitynow][%d] deleteIdentityprovidersIdentitynowRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteIdentityprovidersIdentitynowRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteIdentityprovidersIdentitynowRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIdentityprovidersIdentitynowUnsupportedMediaType creates a DeleteIdentityprovidersIdentitynowUnsupportedMediaType with default headers values
func NewDeleteIdentityprovidersIdentitynowUnsupportedMediaType() *DeleteIdentityprovidersIdentitynowUnsupportedMediaType {
	return &DeleteIdentityprovidersIdentitynowUnsupportedMediaType{}
}

/*
DeleteIdentityprovidersIdentitynowUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type DeleteIdentityprovidersIdentitynowUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete identityproviders identitynow unsupported media type response has a 2xx status code
func (o *DeleteIdentityprovidersIdentitynowUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete identityproviders identitynow unsupported media type response has a 3xx status code
func (o *DeleteIdentityprovidersIdentitynowUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identityproviders identitynow unsupported media type response has a 4xx status code
func (o *DeleteIdentityprovidersIdentitynowUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete identityproviders identitynow unsupported media type response has a 5xx status code
func (o *DeleteIdentityprovidersIdentitynowUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this delete identityproviders identitynow unsupported media type response a status code equal to that given
func (o *DeleteIdentityprovidersIdentitynowUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *DeleteIdentityprovidersIdentitynowUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/identitynow][%d] deleteIdentityprovidersIdentitynowUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteIdentityprovidersIdentitynowUnsupportedMediaType) String() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/identitynow][%d] deleteIdentityprovidersIdentitynowUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteIdentityprovidersIdentitynowUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteIdentityprovidersIdentitynowUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIdentityprovidersIdentitynowTooManyRequests creates a DeleteIdentityprovidersIdentitynowTooManyRequests with default headers values
func NewDeleteIdentityprovidersIdentitynowTooManyRequests() *DeleteIdentityprovidersIdentitynowTooManyRequests {
	return &DeleteIdentityprovidersIdentitynowTooManyRequests{}
}

/*
DeleteIdentityprovidersIdentitynowTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type DeleteIdentityprovidersIdentitynowTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete identityproviders identitynow too many requests response has a 2xx status code
func (o *DeleteIdentityprovidersIdentitynowTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete identityproviders identitynow too many requests response has a 3xx status code
func (o *DeleteIdentityprovidersIdentitynowTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identityproviders identitynow too many requests response has a 4xx status code
func (o *DeleteIdentityprovidersIdentitynowTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete identityproviders identitynow too many requests response has a 5xx status code
func (o *DeleteIdentityprovidersIdentitynowTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete identityproviders identitynow too many requests response a status code equal to that given
func (o *DeleteIdentityprovidersIdentitynowTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *DeleteIdentityprovidersIdentitynowTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/identitynow][%d] deleteIdentityprovidersIdentitynowTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteIdentityprovidersIdentitynowTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/identitynow][%d] deleteIdentityprovidersIdentitynowTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteIdentityprovidersIdentitynowTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteIdentityprovidersIdentitynowTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIdentityprovidersIdentitynowInternalServerError creates a DeleteIdentityprovidersIdentitynowInternalServerError with default headers values
func NewDeleteIdentityprovidersIdentitynowInternalServerError() *DeleteIdentityprovidersIdentitynowInternalServerError {
	return &DeleteIdentityprovidersIdentitynowInternalServerError{}
}

/*
DeleteIdentityprovidersIdentitynowInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type DeleteIdentityprovidersIdentitynowInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete identityproviders identitynow internal server error response has a 2xx status code
func (o *DeleteIdentityprovidersIdentitynowInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete identityproviders identitynow internal server error response has a 3xx status code
func (o *DeleteIdentityprovidersIdentitynowInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identityproviders identitynow internal server error response has a 4xx status code
func (o *DeleteIdentityprovidersIdentitynowInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete identityproviders identitynow internal server error response has a 5xx status code
func (o *DeleteIdentityprovidersIdentitynowInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete identityproviders identitynow internal server error response a status code equal to that given
func (o *DeleteIdentityprovidersIdentitynowInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteIdentityprovidersIdentitynowInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/identitynow][%d] deleteIdentityprovidersIdentitynowInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteIdentityprovidersIdentitynowInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/identitynow][%d] deleteIdentityprovidersIdentitynowInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteIdentityprovidersIdentitynowInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteIdentityprovidersIdentitynowInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIdentityprovidersIdentitynowServiceUnavailable creates a DeleteIdentityprovidersIdentitynowServiceUnavailable with default headers values
func NewDeleteIdentityprovidersIdentitynowServiceUnavailable() *DeleteIdentityprovidersIdentitynowServiceUnavailable {
	return &DeleteIdentityprovidersIdentitynowServiceUnavailable{}
}

/*
DeleteIdentityprovidersIdentitynowServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type DeleteIdentityprovidersIdentitynowServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete identityproviders identitynow service unavailable response has a 2xx status code
func (o *DeleteIdentityprovidersIdentitynowServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete identityproviders identitynow service unavailable response has a 3xx status code
func (o *DeleteIdentityprovidersIdentitynowServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identityproviders identitynow service unavailable response has a 4xx status code
func (o *DeleteIdentityprovidersIdentitynowServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete identityproviders identitynow service unavailable response has a 5xx status code
func (o *DeleteIdentityprovidersIdentitynowServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this delete identityproviders identitynow service unavailable response a status code equal to that given
func (o *DeleteIdentityprovidersIdentitynowServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *DeleteIdentityprovidersIdentitynowServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/identitynow][%d] deleteIdentityprovidersIdentitynowServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteIdentityprovidersIdentitynowServiceUnavailable) String() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/identitynow][%d] deleteIdentityprovidersIdentitynowServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteIdentityprovidersIdentitynowServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteIdentityprovidersIdentitynowServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIdentityprovidersIdentitynowGatewayTimeout creates a DeleteIdentityprovidersIdentitynowGatewayTimeout with default headers values
func NewDeleteIdentityprovidersIdentitynowGatewayTimeout() *DeleteIdentityprovidersIdentitynowGatewayTimeout {
	return &DeleteIdentityprovidersIdentitynowGatewayTimeout{}
}

/*
DeleteIdentityprovidersIdentitynowGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type DeleteIdentityprovidersIdentitynowGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete identityproviders identitynow gateway timeout response has a 2xx status code
func (o *DeleteIdentityprovidersIdentitynowGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete identityproviders identitynow gateway timeout response has a 3xx status code
func (o *DeleteIdentityprovidersIdentitynowGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identityproviders identitynow gateway timeout response has a 4xx status code
func (o *DeleteIdentityprovidersIdentitynowGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete identityproviders identitynow gateway timeout response has a 5xx status code
func (o *DeleteIdentityprovidersIdentitynowGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this delete identityproviders identitynow gateway timeout response a status code equal to that given
func (o *DeleteIdentityprovidersIdentitynowGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *DeleteIdentityprovidersIdentitynowGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/identitynow][%d] deleteIdentityprovidersIdentitynowGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteIdentityprovidersIdentitynowGatewayTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/identityproviders/identitynow][%d] deleteIdentityprovidersIdentitynowGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteIdentityprovidersIdentitynowGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteIdentityprovidersIdentitynowGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
