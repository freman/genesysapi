// Code generated by go-swagger; DO NOT EDIT.

package identity_provider

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutIdentityprovidersAdfsReader is a Reader for the PutIdentityprovidersAdfs structure.
type PutIdentityprovidersAdfsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutIdentityprovidersAdfsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutIdentityprovidersAdfsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutIdentityprovidersAdfsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutIdentityprovidersAdfsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutIdentityprovidersAdfsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutIdentityprovidersAdfsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutIdentityprovidersAdfsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutIdentityprovidersAdfsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutIdentityprovidersAdfsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutIdentityprovidersAdfsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutIdentityprovidersAdfsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutIdentityprovidersAdfsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutIdentityprovidersAdfsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutIdentityprovidersAdfsOK creates a PutIdentityprovidersAdfsOK with default headers values
func NewPutIdentityprovidersAdfsOK() *PutIdentityprovidersAdfsOK {
	return &PutIdentityprovidersAdfsOK{}
}

/*
PutIdentityprovidersAdfsOK describes a response with status code 200, with default header values.

successful operation
*/
type PutIdentityprovidersAdfsOK struct {
	Payload *models.OAuthProvider
}

// IsSuccess returns true when this put identityproviders adfs o k response has a 2xx status code
func (o *PutIdentityprovidersAdfsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put identityproviders adfs o k response has a 3xx status code
func (o *PutIdentityprovidersAdfsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders adfs o k response has a 4xx status code
func (o *PutIdentityprovidersAdfsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put identityproviders adfs o k response has a 5xx status code
func (o *PutIdentityprovidersAdfsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put identityproviders adfs o k response a status code equal to that given
func (o *PutIdentityprovidersAdfsOK) IsCode(code int) bool {
	return code == 200
}

func (o *PutIdentityprovidersAdfsOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/adfs][%d] putIdentityprovidersAdfsOK  %+v", 200, o.Payload)
}

func (o *PutIdentityprovidersAdfsOK) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/adfs][%d] putIdentityprovidersAdfsOK  %+v", 200, o.Payload)
}

func (o *PutIdentityprovidersAdfsOK) GetPayload() *models.OAuthProvider {
	return o.Payload
}

func (o *PutIdentityprovidersAdfsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OAuthProvider)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersAdfsBadRequest creates a PutIdentityprovidersAdfsBadRequest with default headers values
func NewPutIdentityprovidersAdfsBadRequest() *PutIdentityprovidersAdfsBadRequest {
	return &PutIdentityprovidersAdfsBadRequest{}
}

/*
PutIdentityprovidersAdfsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutIdentityprovidersAdfsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders adfs bad request response has a 2xx status code
func (o *PutIdentityprovidersAdfsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders adfs bad request response has a 3xx status code
func (o *PutIdentityprovidersAdfsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders adfs bad request response has a 4xx status code
func (o *PutIdentityprovidersAdfsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put identityproviders adfs bad request response has a 5xx status code
func (o *PutIdentityprovidersAdfsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put identityproviders adfs bad request response a status code equal to that given
func (o *PutIdentityprovidersAdfsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PutIdentityprovidersAdfsBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/adfs][%d] putIdentityprovidersAdfsBadRequest  %+v", 400, o.Payload)
}

func (o *PutIdentityprovidersAdfsBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/adfs][%d] putIdentityprovidersAdfsBadRequest  %+v", 400, o.Payload)
}

func (o *PutIdentityprovidersAdfsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersAdfsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersAdfsUnauthorized creates a PutIdentityprovidersAdfsUnauthorized with default headers values
func NewPutIdentityprovidersAdfsUnauthorized() *PutIdentityprovidersAdfsUnauthorized {
	return &PutIdentityprovidersAdfsUnauthorized{}
}

/*
PutIdentityprovidersAdfsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PutIdentityprovidersAdfsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders adfs unauthorized response has a 2xx status code
func (o *PutIdentityprovidersAdfsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders adfs unauthorized response has a 3xx status code
func (o *PutIdentityprovidersAdfsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders adfs unauthorized response has a 4xx status code
func (o *PutIdentityprovidersAdfsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put identityproviders adfs unauthorized response has a 5xx status code
func (o *PutIdentityprovidersAdfsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put identityproviders adfs unauthorized response a status code equal to that given
func (o *PutIdentityprovidersAdfsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PutIdentityprovidersAdfsUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/adfs][%d] putIdentityprovidersAdfsUnauthorized  %+v", 401, o.Payload)
}

func (o *PutIdentityprovidersAdfsUnauthorized) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/adfs][%d] putIdentityprovidersAdfsUnauthorized  %+v", 401, o.Payload)
}

func (o *PutIdentityprovidersAdfsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersAdfsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersAdfsForbidden creates a PutIdentityprovidersAdfsForbidden with default headers values
func NewPutIdentityprovidersAdfsForbidden() *PutIdentityprovidersAdfsForbidden {
	return &PutIdentityprovidersAdfsForbidden{}
}

/*
PutIdentityprovidersAdfsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PutIdentityprovidersAdfsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders adfs forbidden response has a 2xx status code
func (o *PutIdentityprovidersAdfsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders adfs forbidden response has a 3xx status code
func (o *PutIdentityprovidersAdfsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders adfs forbidden response has a 4xx status code
func (o *PutIdentityprovidersAdfsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put identityproviders adfs forbidden response has a 5xx status code
func (o *PutIdentityprovidersAdfsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put identityproviders adfs forbidden response a status code equal to that given
func (o *PutIdentityprovidersAdfsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PutIdentityprovidersAdfsForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/adfs][%d] putIdentityprovidersAdfsForbidden  %+v", 403, o.Payload)
}

func (o *PutIdentityprovidersAdfsForbidden) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/adfs][%d] putIdentityprovidersAdfsForbidden  %+v", 403, o.Payload)
}

func (o *PutIdentityprovidersAdfsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersAdfsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersAdfsNotFound creates a PutIdentityprovidersAdfsNotFound with default headers values
func NewPutIdentityprovidersAdfsNotFound() *PutIdentityprovidersAdfsNotFound {
	return &PutIdentityprovidersAdfsNotFound{}
}

/*
PutIdentityprovidersAdfsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PutIdentityprovidersAdfsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders adfs not found response has a 2xx status code
func (o *PutIdentityprovidersAdfsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders adfs not found response has a 3xx status code
func (o *PutIdentityprovidersAdfsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders adfs not found response has a 4xx status code
func (o *PutIdentityprovidersAdfsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put identityproviders adfs not found response has a 5xx status code
func (o *PutIdentityprovidersAdfsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put identityproviders adfs not found response a status code equal to that given
func (o *PutIdentityprovidersAdfsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PutIdentityprovidersAdfsNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/adfs][%d] putIdentityprovidersAdfsNotFound  %+v", 404, o.Payload)
}

func (o *PutIdentityprovidersAdfsNotFound) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/adfs][%d] putIdentityprovidersAdfsNotFound  %+v", 404, o.Payload)
}

func (o *PutIdentityprovidersAdfsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersAdfsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersAdfsRequestTimeout creates a PutIdentityprovidersAdfsRequestTimeout with default headers values
func NewPutIdentityprovidersAdfsRequestTimeout() *PutIdentityprovidersAdfsRequestTimeout {
	return &PutIdentityprovidersAdfsRequestTimeout{}
}

/*
PutIdentityprovidersAdfsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutIdentityprovidersAdfsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders adfs request timeout response has a 2xx status code
func (o *PutIdentityprovidersAdfsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders adfs request timeout response has a 3xx status code
func (o *PutIdentityprovidersAdfsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders adfs request timeout response has a 4xx status code
func (o *PutIdentityprovidersAdfsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this put identityproviders adfs request timeout response has a 5xx status code
func (o *PutIdentityprovidersAdfsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this put identityproviders adfs request timeout response a status code equal to that given
func (o *PutIdentityprovidersAdfsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PutIdentityprovidersAdfsRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/adfs][%d] putIdentityprovidersAdfsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutIdentityprovidersAdfsRequestTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/adfs][%d] putIdentityprovidersAdfsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutIdentityprovidersAdfsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersAdfsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersAdfsRequestEntityTooLarge creates a PutIdentityprovidersAdfsRequestEntityTooLarge with default headers values
func NewPutIdentityprovidersAdfsRequestEntityTooLarge() *PutIdentityprovidersAdfsRequestEntityTooLarge {
	return &PutIdentityprovidersAdfsRequestEntityTooLarge{}
}

/*
PutIdentityprovidersAdfsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PutIdentityprovidersAdfsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders adfs request entity too large response has a 2xx status code
func (o *PutIdentityprovidersAdfsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders adfs request entity too large response has a 3xx status code
func (o *PutIdentityprovidersAdfsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders adfs request entity too large response has a 4xx status code
func (o *PutIdentityprovidersAdfsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this put identityproviders adfs request entity too large response has a 5xx status code
func (o *PutIdentityprovidersAdfsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this put identityproviders adfs request entity too large response a status code equal to that given
func (o *PutIdentityprovidersAdfsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PutIdentityprovidersAdfsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/adfs][%d] putIdentityprovidersAdfsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutIdentityprovidersAdfsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/adfs][%d] putIdentityprovidersAdfsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutIdentityprovidersAdfsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersAdfsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersAdfsUnsupportedMediaType creates a PutIdentityprovidersAdfsUnsupportedMediaType with default headers values
func NewPutIdentityprovidersAdfsUnsupportedMediaType() *PutIdentityprovidersAdfsUnsupportedMediaType {
	return &PutIdentityprovidersAdfsUnsupportedMediaType{}
}

/*
PutIdentityprovidersAdfsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutIdentityprovidersAdfsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders adfs unsupported media type response has a 2xx status code
func (o *PutIdentityprovidersAdfsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders adfs unsupported media type response has a 3xx status code
func (o *PutIdentityprovidersAdfsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders adfs unsupported media type response has a 4xx status code
func (o *PutIdentityprovidersAdfsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this put identityproviders adfs unsupported media type response has a 5xx status code
func (o *PutIdentityprovidersAdfsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this put identityproviders adfs unsupported media type response a status code equal to that given
func (o *PutIdentityprovidersAdfsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PutIdentityprovidersAdfsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/adfs][%d] putIdentityprovidersAdfsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutIdentityprovidersAdfsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/adfs][%d] putIdentityprovidersAdfsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutIdentityprovidersAdfsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersAdfsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersAdfsTooManyRequests creates a PutIdentityprovidersAdfsTooManyRequests with default headers values
func NewPutIdentityprovidersAdfsTooManyRequests() *PutIdentityprovidersAdfsTooManyRequests {
	return &PutIdentityprovidersAdfsTooManyRequests{}
}

/*
PutIdentityprovidersAdfsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutIdentityprovidersAdfsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders adfs too many requests response has a 2xx status code
func (o *PutIdentityprovidersAdfsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders adfs too many requests response has a 3xx status code
func (o *PutIdentityprovidersAdfsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders adfs too many requests response has a 4xx status code
func (o *PutIdentityprovidersAdfsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this put identityproviders adfs too many requests response has a 5xx status code
func (o *PutIdentityprovidersAdfsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this put identityproviders adfs too many requests response a status code equal to that given
func (o *PutIdentityprovidersAdfsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PutIdentityprovidersAdfsTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/adfs][%d] putIdentityprovidersAdfsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutIdentityprovidersAdfsTooManyRequests) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/adfs][%d] putIdentityprovidersAdfsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutIdentityprovidersAdfsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersAdfsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersAdfsInternalServerError creates a PutIdentityprovidersAdfsInternalServerError with default headers values
func NewPutIdentityprovidersAdfsInternalServerError() *PutIdentityprovidersAdfsInternalServerError {
	return &PutIdentityprovidersAdfsInternalServerError{}
}

/*
PutIdentityprovidersAdfsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutIdentityprovidersAdfsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders adfs internal server error response has a 2xx status code
func (o *PutIdentityprovidersAdfsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders adfs internal server error response has a 3xx status code
func (o *PutIdentityprovidersAdfsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders adfs internal server error response has a 4xx status code
func (o *PutIdentityprovidersAdfsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this put identityproviders adfs internal server error response has a 5xx status code
func (o *PutIdentityprovidersAdfsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this put identityproviders adfs internal server error response a status code equal to that given
func (o *PutIdentityprovidersAdfsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PutIdentityprovidersAdfsInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/adfs][%d] putIdentityprovidersAdfsInternalServerError  %+v", 500, o.Payload)
}

func (o *PutIdentityprovidersAdfsInternalServerError) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/adfs][%d] putIdentityprovidersAdfsInternalServerError  %+v", 500, o.Payload)
}

func (o *PutIdentityprovidersAdfsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersAdfsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersAdfsServiceUnavailable creates a PutIdentityprovidersAdfsServiceUnavailable with default headers values
func NewPutIdentityprovidersAdfsServiceUnavailable() *PutIdentityprovidersAdfsServiceUnavailable {
	return &PutIdentityprovidersAdfsServiceUnavailable{}
}

/*
PutIdentityprovidersAdfsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutIdentityprovidersAdfsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders adfs service unavailable response has a 2xx status code
func (o *PutIdentityprovidersAdfsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders adfs service unavailable response has a 3xx status code
func (o *PutIdentityprovidersAdfsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders adfs service unavailable response has a 4xx status code
func (o *PutIdentityprovidersAdfsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this put identityproviders adfs service unavailable response has a 5xx status code
func (o *PutIdentityprovidersAdfsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this put identityproviders adfs service unavailable response a status code equal to that given
func (o *PutIdentityprovidersAdfsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PutIdentityprovidersAdfsServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/adfs][%d] putIdentityprovidersAdfsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutIdentityprovidersAdfsServiceUnavailable) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/adfs][%d] putIdentityprovidersAdfsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutIdentityprovidersAdfsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersAdfsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersAdfsGatewayTimeout creates a PutIdentityprovidersAdfsGatewayTimeout with default headers values
func NewPutIdentityprovidersAdfsGatewayTimeout() *PutIdentityprovidersAdfsGatewayTimeout {
	return &PutIdentityprovidersAdfsGatewayTimeout{}
}

/*
PutIdentityprovidersAdfsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PutIdentityprovidersAdfsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders adfs gateway timeout response has a 2xx status code
func (o *PutIdentityprovidersAdfsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders adfs gateway timeout response has a 3xx status code
func (o *PutIdentityprovidersAdfsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders adfs gateway timeout response has a 4xx status code
func (o *PutIdentityprovidersAdfsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this put identityproviders adfs gateway timeout response has a 5xx status code
func (o *PutIdentityprovidersAdfsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this put identityproviders adfs gateway timeout response a status code equal to that given
func (o *PutIdentityprovidersAdfsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PutIdentityprovidersAdfsGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/adfs][%d] putIdentityprovidersAdfsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutIdentityprovidersAdfsGatewayTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/adfs][%d] putIdentityprovidersAdfsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutIdentityprovidersAdfsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersAdfsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
