// Code generated by go-swagger; DO NOT EDIT.

package identity_provider

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutIdentityprovidersAdfsReader is a Reader for the PutIdentityprovidersAdfs structure.
type PutIdentityprovidersAdfsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutIdentityprovidersAdfsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutIdentityprovidersAdfsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutIdentityprovidersAdfsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutIdentityprovidersAdfsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutIdentityprovidersAdfsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutIdentityprovidersAdfsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutIdentityprovidersAdfsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutIdentityprovidersAdfsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutIdentityprovidersAdfsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutIdentityprovidersAdfsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutIdentityprovidersAdfsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutIdentityprovidersAdfsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutIdentityprovidersAdfsOK creates a PutIdentityprovidersAdfsOK with default headers values
func NewPutIdentityprovidersAdfsOK() *PutIdentityprovidersAdfsOK {
	return &PutIdentityprovidersAdfsOK{}
}

/*PutIdentityprovidersAdfsOK handles this case with default header values.

successful operation
*/
type PutIdentityprovidersAdfsOK struct {
	Payload *models.OAuthProvider
}

func (o *PutIdentityprovidersAdfsOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/adfs][%d] putIdentityprovidersAdfsOK  %+v", 200, o.Payload)
}

func (o *PutIdentityprovidersAdfsOK) GetPayload() *models.OAuthProvider {
	return o.Payload
}

func (o *PutIdentityprovidersAdfsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OAuthProvider)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersAdfsBadRequest creates a PutIdentityprovidersAdfsBadRequest with default headers values
func NewPutIdentityprovidersAdfsBadRequest() *PutIdentityprovidersAdfsBadRequest {
	return &PutIdentityprovidersAdfsBadRequest{}
}

/*PutIdentityprovidersAdfsBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutIdentityprovidersAdfsBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PutIdentityprovidersAdfsBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/adfs][%d] putIdentityprovidersAdfsBadRequest  %+v", 400, o.Payload)
}

func (o *PutIdentityprovidersAdfsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersAdfsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersAdfsUnauthorized creates a PutIdentityprovidersAdfsUnauthorized with default headers values
func NewPutIdentityprovidersAdfsUnauthorized() *PutIdentityprovidersAdfsUnauthorized {
	return &PutIdentityprovidersAdfsUnauthorized{}
}

/*PutIdentityprovidersAdfsUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PutIdentityprovidersAdfsUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PutIdentityprovidersAdfsUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/adfs][%d] putIdentityprovidersAdfsUnauthorized  %+v", 401, o.Payload)
}

func (o *PutIdentityprovidersAdfsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersAdfsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersAdfsForbidden creates a PutIdentityprovidersAdfsForbidden with default headers values
func NewPutIdentityprovidersAdfsForbidden() *PutIdentityprovidersAdfsForbidden {
	return &PutIdentityprovidersAdfsForbidden{}
}

/*PutIdentityprovidersAdfsForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PutIdentityprovidersAdfsForbidden struct {
	Payload *models.ErrorBody
}

func (o *PutIdentityprovidersAdfsForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/adfs][%d] putIdentityprovidersAdfsForbidden  %+v", 403, o.Payload)
}

func (o *PutIdentityprovidersAdfsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersAdfsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersAdfsNotFound creates a PutIdentityprovidersAdfsNotFound with default headers values
func NewPutIdentityprovidersAdfsNotFound() *PutIdentityprovidersAdfsNotFound {
	return &PutIdentityprovidersAdfsNotFound{}
}

/*PutIdentityprovidersAdfsNotFound handles this case with default header values.

The requested resource was not found.
*/
type PutIdentityprovidersAdfsNotFound struct {
	Payload *models.ErrorBody
}

func (o *PutIdentityprovidersAdfsNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/adfs][%d] putIdentityprovidersAdfsNotFound  %+v", 404, o.Payload)
}

func (o *PutIdentityprovidersAdfsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersAdfsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersAdfsRequestEntityTooLarge creates a PutIdentityprovidersAdfsRequestEntityTooLarge with default headers values
func NewPutIdentityprovidersAdfsRequestEntityTooLarge() *PutIdentityprovidersAdfsRequestEntityTooLarge {
	return &PutIdentityprovidersAdfsRequestEntityTooLarge{}
}

/*PutIdentityprovidersAdfsRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type PutIdentityprovidersAdfsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PutIdentityprovidersAdfsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/adfs][%d] putIdentityprovidersAdfsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutIdentityprovidersAdfsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersAdfsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersAdfsUnsupportedMediaType creates a PutIdentityprovidersAdfsUnsupportedMediaType with default headers values
func NewPutIdentityprovidersAdfsUnsupportedMediaType() *PutIdentityprovidersAdfsUnsupportedMediaType {
	return &PutIdentityprovidersAdfsUnsupportedMediaType{}
}

/*PutIdentityprovidersAdfsUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutIdentityprovidersAdfsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PutIdentityprovidersAdfsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/adfs][%d] putIdentityprovidersAdfsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutIdentityprovidersAdfsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersAdfsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersAdfsTooManyRequests creates a PutIdentityprovidersAdfsTooManyRequests with default headers values
func NewPutIdentityprovidersAdfsTooManyRequests() *PutIdentityprovidersAdfsTooManyRequests {
	return &PutIdentityprovidersAdfsTooManyRequests{}
}

/*PutIdentityprovidersAdfsTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type PutIdentityprovidersAdfsTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PutIdentityprovidersAdfsTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/adfs][%d] putIdentityprovidersAdfsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutIdentityprovidersAdfsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersAdfsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersAdfsInternalServerError creates a PutIdentityprovidersAdfsInternalServerError with default headers values
func NewPutIdentityprovidersAdfsInternalServerError() *PutIdentityprovidersAdfsInternalServerError {
	return &PutIdentityprovidersAdfsInternalServerError{}
}

/*PutIdentityprovidersAdfsInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutIdentityprovidersAdfsInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PutIdentityprovidersAdfsInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/adfs][%d] putIdentityprovidersAdfsInternalServerError  %+v", 500, o.Payload)
}

func (o *PutIdentityprovidersAdfsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersAdfsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersAdfsServiceUnavailable creates a PutIdentityprovidersAdfsServiceUnavailable with default headers values
func NewPutIdentityprovidersAdfsServiceUnavailable() *PutIdentityprovidersAdfsServiceUnavailable {
	return &PutIdentityprovidersAdfsServiceUnavailable{}
}

/*PutIdentityprovidersAdfsServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutIdentityprovidersAdfsServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PutIdentityprovidersAdfsServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/adfs][%d] putIdentityprovidersAdfsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutIdentityprovidersAdfsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersAdfsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersAdfsGatewayTimeout creates a PutIdentityprovidersAdfsGatewayTimeout with default headers values
func NewPutIdentityprovidersAdfsGatewayTimeout() *PutIdentityprovidersAdfsGatewayTimeout {
	return &PutIdentityprovidersAdfsGatewayTimeout{}
}

/*PutIdentityprovidersAdfsGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PutIdentityprovidersAdfsGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PutIdentityprovidersAdfsGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/adfs][%d] putIdentityprovidersAdfsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutIdentityprovidersAdfsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersAdfsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
