// Code generated by go-swagger; DO NOT EDIT.

package identity_provider

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutIdentityprovidersIdentitynowReader is a Reader for the PutIdentityprovidersIdentitynow structure.
type PutIdentityprovidersIdentitynowReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutIdentityprovidersIdentitynowReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutIdentityprovidersIdentitynowOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutIdentityprovidersIdentitynowBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutIdentityprovidersIdentitynowUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutIdentityprovidersIdentitynowForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutIdentityprovidersIdentitynowNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutIdentityprovidersIdentitynowRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutIdentityprovidersIdentitynowRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutIdentityprovidersIdentitynowUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutIdentityprovidersIdentitynowTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutIdentityprovidersIdentitynowInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutIdentityprovidersIdentitynowServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutIdentityprovidersIdentitynowGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutIdentityprovidersIdentitynowOK creates a PutIdentityprovidersIdentitynowOK with default headers values
func NewPutIdentityprovidersIdentitynowOK() *PutIdentityprovidersIdentitynowOK {
	return &PutIdentityprovidersIdentitynowOK{}
}

/*
PutIdentityprovidersIdentitynowOK describes a response with status code 200, with default header values.

successful operation
*/
type PutIdentityprovidersIdentitynowOK struct {
	Payload *models.IdentityNow
}

// IsSuccess returns true when this put identityproviders identitynow o k response has a 2xx status code
func (o *PutIdentityprovidersIdentitynowOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put identityproviders identitynow o k response has a 3xx status code
func (o *PutIdentityprovidersIdentitynowOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders identitynow o k response has a 4xx status code
func (o *PutIdentityprovidersIdentitynowOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put identityproviders identitynow o k response has a 5xx status code
func (o *PutIdentityprovidersIdentitynowOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put identityproviders identitynow o k response a status code equal to that given
func (o *PutIdentityprovidersIdentitynowOK) IsCode(code int) bool {
	return code == 200
}

func (o *PutIdentityprovidersIdentitynowOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/identitynow][%d] putIdentityprovidersIdentitynowOK  %+v", 200, o.Payload)
}

func (o *PutIdentityprovidersIdentitynowOK) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/identitynow][%d] putIdentityprovidersIdentitynowOK  %+v", 200, o.Payload)
}

func (o *PutIdentityprovidersIdentitynowOK) GetPayload() *models.IdentityNow {
	return o.Payload
}

func (o *PutIdentityprovidersIdentitynowOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IdentityNow)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersIdentitynowBadRequest creates a PutIdentityprovidersIdentitynowBadRequest with default headers values
func NewPutIdentityprovidersIdentitynowBadRequest() *PutIdentityprovidersIdentitynowBadRequest {
	return &PutIdentityprovidersIdentitynowBadRequest{}
}

/*
PutIdentityprovidersIdentitynowBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutIdentityprovidersIdentitynowBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders identitynow bad request response has a 2xx status code
func (o *PutIdentityprovidersIdentitynowBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders identitynow bad request response has a 3xx status code
func (o *PutIdentityprovidersIdentitynowBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders identitynow bad request response has a 4xx status code
func (o *PutIdentityprovidersIdentitynowBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put identityproviders identitynow bad request response has a 5xx status code
func (o *PutIdentityprovidersIdentitynowBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put identityproviders identitynow bad request response a status code equal to that given
func (o *PutIdentityprovidersIdentitynowBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PutIdentityprovidersIdentitynowBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/identitynow][%d] putIdentityprovidersIdentitynowBadRequest  %+v", 400, o.Payload)
}

func (o *PutIdentityprovidersIdentitynowBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/identitynow][%d] putIdentityprovidersIdentitynowBadRequest  %+v", 400, o.Payload)
}

func (o *PutIdentityprovidersIdentitynowBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersIdentitynowBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersIdentitynowUnauthorized creates a PutIdentityprovidersIdentitynowUnauthorized with default headers values
func NewPutIdentityprovidersIdentitynowUnauthorized() *PutIdentityprovidersIdentitynowUnauthorized {
	return &PutIdentityprovidersIdentitynowUnauthorized{}
}

/*
PutIdentityprovidersIdentitynowUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PutIdentityprovidersIdentitynowUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders identitynow unauthorized response has a 2xx status code
func (o *PutIdentityprovidersIdentitynowUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders identitynow unauthorized response has a 3xx status code
func (o *PutIdentityprovidersIdentitynowUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders identitynow unauthorized response has a 4xx status code
func (o *PutIdentityprovidersIdentitynowUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put identityproviders identitynow unauthorized response has a 5xx status code
func (o *PutIdentityprovidersIdentitynowUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put identityproviders identitynow unauthorized response a status code equal to that given
func (o *PutIdentityprovidersIdentitynowUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PutIdentityprovidersIdentitynowUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/identitynow][%d] putIdentityprovidersIdentitynowUnauthorized  %+v", 401, o.Payload)
}

func (o *PutIdentityprovidersIdentitynowUnauthorized) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/identitynow][%d] putIdentityprovidersIdentitynowUnauthorized  %+v", 401, o.Payload)
}

func (o *PutIdentityprovidersIdentitynowUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersIdentitynowUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersIdentitynowForbidden creates a PutIdentityprovidersIdentitynowForbidden with default headers values
func NewPutIdentityprovidersIdentitynowForbidden() *PutIdentityprovidersIdentitynowForbidden {
	return &PutIdentityprovidersIdentitynowForbidden{}
}

/*
PutIdentityprovidersIdentitynowForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PutIdentityprovidersIdentitynowForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders identitynow forbidden response has a 2xx status code
func (o *PutIdentityprovidersIdentitynowForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders identitynow forbidden response has a 3xx status code
func (o *PutIdentityprovidersIdentitynowForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders identitynow forbidden response has a 4xx status code
func (o *PutIdentityprovidersIdentitynowForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put identityproviders identitynow forbidden response has a 5xx status code
func (o *PutIdentityprovidersIdentitynowForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put identityproviders identitynow forbidden response a status code equal to that given
func (o *PutIdentityprovidersIdentitynowForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PutIdentityprovidersIdentitynowForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/identitynow][%d] putIdentityprovidersIdentitynowForbidden  %+v", 403, o.Payload)
}

func (o *PutIdentityprovidersIdentitynowForbidden) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/identitynow][%d] putIdentityprovidersIdentitynowForbidden  %+v", 403, o.Payload)
}

func (o *PutIdentityprovidersIdentitynowForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersIdentitynowForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersIdentitynowNotFound creates a PutIdentityprovidersIdentitynowNotFound with default headers values
func NewPutIdentityprovidersIdentitynowNotFound() *PutIdentityprovidersIdentitynowNotFound {
	return &PutIdentityprovidersIdentitynowNotFound{}
}

/*
PutIdentityprovidersIdentitynowNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PutIdentityprovidersIdentitynowNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders identitynow not found response has a 2xx status code
func (o *PutIdentityprovidersIdentitynowNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders identitynow not found response has a 3xx status code
func (o *PutIdentityprovidersIdentitynowNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders identitynow not found response has a 4xx status code
func (o *PutIdentityprovidersIdentitynowNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put identityproviders identitynow not found response has a 5xx status code
func (o *PutIdentityprovidersIdentitynowNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put identityproviders identitynow not found response a status code equal to that given
func (o *PutIdentityprovidersIdentitynowNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PutIdentityprovidersIdentitynowNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/identitynow][%d] putIdentityprovidersIdentitynowNotFound  %+v", 404, o.Payload)
}

func (o *PutIdentityprovidersIdentitynowNotFound) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/identitynow][%d] putIdentityprovidersIdentitynowNotFound  %+v", 404, o.Payload)
}

func (o *PutIdentityprovidersIdentitynowNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersIdentitynowNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersIdentitynowRequestTimeout creates a PutIdentityprovidersIdentitynowRequestTimeout with default headers values
func NewPutIdentityprovidersIdentitynowRequestTimeout() *PutIdentityprovidersIdentitynowRequestTimeout {
	return &PutIdentityprovidersIdentitynowRequestTimeout{}
}

/*
PutIdentityprovidersIdentitynowRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutIdentityprovidersIdentitynowRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders identitynow request timeout response has a 2xx status code
func (o *PutIdentityprovidersIdentitynowRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders identitynow request timeout response has a 3xx status code
func (o *PutIdentityprovidersIdentitynowRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders identitynow request timeout response has a 4xx status code
func (o *PutIdentityprovidersIdentitynowRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this put identityproviders identitynow request timeout response has a 5xx status code
func (o *PutIdentityprovidersIdentitynowRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this put identityproviders identitynow request timeout response a status code equal to that given
func (o *PutIdentityprovidersIdentitynowRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PutIdentityprovidersIdentitynowRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/identitynow][%d] putIdentityprovidersIdentitynowRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutIdentityprovidersIdentitynowRequestTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/identitynow][%d] putIdentityprovidersIdentitynowRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutIdentityprovidersIdentitynowRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersIdentitynowRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersIdentitynowRequestEntityTooLarge creates a PutIdentityprovidersIdentitynowRequestEntityTooLarge with default headers values
func NewPutIdentityprovidersIdentitynowRequestEntityTooLarge() *PutIdentityprovidersIdentitynowRequestEntityTooLarge {
	return &PutIdentityprovidersIdentitynowRequestEntityTooLarge{}
}

/*
PutIdentityprovidersIdentitynowRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PutIdentityprovidersIdentitynowRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders identitynow request entity too large response has a 2xx status code
func (o *PutIdentityprovidersIdentitynowRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders identitynow request entity too large response has a 3xx status code
func (o *PutIdentityprovidersIdentitynowRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders identitynow request entity too large response has a 4xx status code
func (o *PutIdentityprovidersIdentitynowRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this put identityproviders identitynow request entity too large response has a 5xx status code
func (o *PutIdentityprovidersIdentitynowRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this put identityproviders identitynow request entity too large response a status code equal to that given
func (o *PutIdentityprovidersIdentitynowRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PutIdentityprovidersIdentitynowRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/identitynow][%d] putIdentityprovidersIdentitynowRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutIdentityprovidersIdentitynowRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/identitynow][%d] putIdentityprovidersIdentitynowRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutIdentityprovidersIdentitynowRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersIdentitynowRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersIdentitynowUnsupportedMediaType creates a PutIdentityprovidersIdentitynowUnsupportedMediaType with default headers values
func NewPutIdentityprovidersIdentitynowUnsupportedMediaType() *PutIdentityprovidersIdentitynowUnsupportedMediaType {
	return &PutIdentityprovidersIdentitynowUnsupportedMediaType{}
}

/*
PutIdentityprovidersIdentitynowUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutIdentityprovidersIdentitynowUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders identitynow unsupported media type response has a 2xx status code
func (o *PutIdentityprovidersIdentitynowUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders identitynow unsupported media type response has a 3xx status code
func (o *PutIdentityprovidersIdentitynowUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders identitynow unsupported media type response has a 4xx status code
func (o *PutIdentityprovidersIdentitynowUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this put identityproviders identitynow unsupported media type response has a 5xx status code
func (o *PutIdentityprovidersIdentitynowUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this put identityproviders identitynow unsupported media type response a status code equal to that given
func (o *PutIdentityprovidersIdentitynowUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PutIdentityprovidersIdentitynowUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/identitynow][%d] putIdentityprovidersIdentitynowUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutIdentityprovidersIdentitynowUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/identitynow][%d] putIdentityprovidersIdentitynowUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutIdentityprovidersIdentitynowUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersIdentitynowUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersIdentitynowTooManyRequests creates a PutIdentityprovidersIdentitynowTooManyRequests with default headers values
func NewPutIdentityprovidersIdentitynowTooManyRequests() *PutIdentityprovidersIdentitynowTooManyRequests {
	return &PutIdentityprovidersIdentitynowTooManyRequests{}
}

/*
PutIdentityprovidersIdentitynowTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutIdentityprovidersIdentitynowTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders identitynow too many requests response has a 2xx status code
func (o *PutIdentityprovidersIdentitynowTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders identitynow too many requests response has a 3xx status code
func (o *PutIdentityprovidersIdentitynowTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders identitynow too many requests response has a 4xx status code
func (o *PutIdentityprovidersIdentitynowTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this put identityproviders identitynow too many requests response has a 5xx status code
func (o *PutIdentityprovidersIdentitynowTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this put identityproviders identitynow too many requests response a status code equal to that given
func (o *PutIdentityprovidersIdentitynowTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PutIdentityprovidersIdentitynowTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/identitynow][%d] putIdentityprovidersIdentitynowTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutIdentityprovidersIdentitynowTooManyRequests) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/identitynow][%d] putIdentityprovidersIdentitynowTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutIdentityprovidersIdentitynowTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersIdentitynowTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersIdentitynowInternalServerError creates a PutIdentityprovidersIdentitynowInternalServerError with default headers values
func NewPutIdentityprovidersIdentitynowInternalServerError() *PutIdentityprovidersIdentitynowInternalServerError {
	return &PutIdentityprovidersIdentitynowInternalServerError{}
}

/*
PutIdentityprovidersIdentitynowInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutIdentityprovidersIdentitynowInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders identitynow internal server error response has a 2xx status code
func (o *PutIdentityprovidersIdentitynowInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders identitynow internal server error response has a 3xx status code
func (o *PutIdentityprovidersIdentitynowInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders identitynow internal server error response has a 4xx status code
func (o *PutIdentityprovidersIdentitynowInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this put identityproviders identitynow internal server error response has a 5xx status code
func (o *PutIdentityprovidersIdentitynowInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this put identityproviders identitynow internal server error response a status code equal to that given
func (o *PutIdentityprovidersIdentitynowInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PutIdentityprovidersIdentitynowInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/identitynow][%d] putIdentityprovidersIdentitynowInternalServerError  %+v", 500, o.Payload)
}

func (o *PutIdentityprovidersIdentitynowInternalServerError) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/identitynow][%d] putIdentityprovidersIdentitynowInternalServerError  %+v", 500, o.Payload)
}

func (o *PutIdentityprovidersIdentitynowInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersIdentitynowInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersIdentitynowServiceUnavailable creates a PutIdentityprovidersIdentitynowServiceUnavailable with default headers values
func NewPutIdentityprovidersIdentitynowServiceUnavailable() *PutIdentityprovidersIdentitynowServiceUnavailable {
	return &PutIdentityprovidersIdentitynowServiceUnavailable{}
}

/*
PutIdentityprovidersIdentitynowServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutIdentityprovidersIdentitynowServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders identitynow service unavailable response has a 2xx status code
func (o *PutIdentityprovidersIdentitynowServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders identitynow service unavailable response has a 3xx status code
func (o *PutIdentityprovidersIdentitynowServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders identitynow service unavailable response has a 4xx status code
func (o *PutIdentityprovidersIdentitynowServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this put identityproviders identitynow service unavailable response has a 5xx status code
func (o *PutIdentityprovidersIdentitynowServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this put identityproviders identitynow service unavailable response a status code equal to that given
func (o *PutIdentityprovidersIdentitynowServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PutIdentityprovidersIdentitynowServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/identitynow][%d] putIdentityprovidersIdentitynowServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutIdentityprovidersIdentitynowServiceUnavailable) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/identitynow][%d] putIdentityprovidersIdentitynowServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutIdentityprovidersIdentitynowServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersIdentitynowServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIdentityprovidersIdentitynowGatewayTimeout creates a PutIdentityprovidersIdentitynowGatewayTimeout with default headers values
func NewPutIdentityprovidersIdentitynowGatewayTimeout() *PutIdentityprovidersIdentitynowGatewayTimeout {
	return &PutIdentityprovidersIdentitynowGatewayTimeout{}
}

/*
PutIdentityprovidersIdentitynowGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PutIdentityprovidersIdentitynowGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put identityproviders identitynow gateway timeout response has a 2xx status code
func (o *PutIdentityprovidersIdentitynowGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put identityproviders identitynow gateway timeout response has a 3xx status code
func (o *PutIdentityprovidersIdentitynowGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put identityproviders identitynow gateway timeout response has a 4xx status code
func (o *PutIdentityprovidersIdentitynowGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this put identityproviders identitynow gateway timeout response has a 5xx status code
func (o *PutIdentityprovidersIdentitynowGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this put identityproviders identitynow gateway timeout response a status code equal to that given
func (o *PutIdentityprovidersIdentitynowGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PutIdentityprovidersIdentitynowGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/identitynow][%d] putIdentityprovidersIdentitynowGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutIdentityprovidersIdentitynowGatewayTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/identityproviders/identitynow][%d] putIdentityprovidersIdentitynowGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutIdentityprovidersIdentitynowGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutIdentityprovidersIdentitynowGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
