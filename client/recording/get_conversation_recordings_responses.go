// Code generated by go-swagger; DO NOT EDIT.

package recording

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetConversationRecordingsReader is a Reader for the GetConversationRecordings structure.
type GetConversationRecordingsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConversationRecordingsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConversationRecordingsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewGetConversationRecordingsAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetConversationRecordingsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetConversationRecordingsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetConversationRecordingsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetConversationRecordingsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetConversationRecordingsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetConversationRecordingsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetConversationRecordingsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetConversationRecordingsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetConversationRecordingsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetConversationRecordingsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetConversationRecordingsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetConversationRecordingsOK creates a GetConversationRecordingsOK with default headers values
func NewGetConversationRecordingsOK() *GetConversationRecordingsOK {
	return &GetConversationRecordingsOK{}
}

/*
GetConversationRecordingsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetConversationRecordingsOK struct {
	Payload []*models.Recording
}

// IsSuccess returns true when this get conversation recordings o k response has a 2xx status code
func (o *GetConversationRecordingsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get conversation recordings o k response has a 3xx status code
func (o *GetConversationRecordingsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversation recordings o k response has a 4xx status code
func (o *GetConversationRecordingsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversation recordings o k response has a 5xx status code
func (o *GetConversationRecordingsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversation recordings o k response a status code equal to that given
func (o *GetConversationRecordingsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetConversationRecordingsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/recordings][%d] getConversationRecordingsOK  %+v", 200, o.Payload)
}

func (o *GetConversationRecordingsOK) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/recordings][%d] getConversationRecordingsOK  %+v", 200, o.Payload)
}

func (o *GetConversationRecordingsOK) GetPayload() []*models.Recording {
	return o.Payload
}

func (o *GetConversationRecordingsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationRecordingsAccepted creates a GetConversationRecordingsAccepted with default headers values
func NewGetConversationRecordingsAccepted() *GetConversationRecordingsAccepted {
	return &GetConversationRecordingsAccepted{}
}

/*
GetConversationRecordingsAccepted describes a response with status code 202, with default header values.

Success - recording is transcoding
*/
type GetConversationRecordingsAccepted struct {
}

// IsSuccess returns true when this get conversation recordings accepted response has a 2xx status code
func (o *GetConversationRecordingsAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get conversation recordings accepted response has a 3xx status code
func (o *GetConversationRecordingsAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversation recordings accepted response has a 4xx status code
func (o *GetConversationRecordingsAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversation recordings accepted response has a 5xx status code
func (o *GetConversationRecordingsAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversation recordings accepted response a status code equal to that given
func (o *GetConversationRecordingsAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *GetConversationRecordingsAccepted) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/recordings][%d] getConversationRecordingsAccepted ", 202)
}

func (o *GetConversationRecordingsAccepted) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/recordings][%d] getConversationRecordingsAccepted ", 202)
}

func (o *GetConversationRecordingsAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetConversationRecordingsBadRequest creates a GetConversationRecordingsBadRequest with default headers values
func NewGetConversationRecordingsBadRequest() *GetConversationRecordingsBadRequest {
	return &GetConversationRecordingsBadRequest{}
}

/*
GetConversationRecordingsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetConversationRecordingsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversation recordings bad request response has a 2xx status code
func (o *GetConversationRecordingsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversation recordings bad request response has a 3xx status code
func (o *GetConversationRecordingsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversation recordings bad request response has a 4xx status code
func (o *GetConversationRecordingsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversation recordings bad request response has a 5xx status code
func (o *GetConversationRecordingsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversation recordings bad request response a status code equal to that given
func (o *GetConversationRecordingsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetConversationRecordingsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/recordings][%d] getConversationRecordingsBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationRecordingsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/recordings][%d] getConversationRecordingsBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationRecordingsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationRecordingsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationRecordingsUnauthorized creates a GetConversationRecordingsUnauthorized with default headers values
func NewGetConversationRecordingsUnauthorized() *GetConversationRecordingsUnauthorized {
	return &GetConversationRecordingsUnauthorized{}
}

/*
GetConversationRecordingsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetConversationRecordingsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversation recordings unauthorized response has a 2xx status code
func (o *GetConversationRecordingsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversation recordings unauthorized response has a 3xx status code
func (o *GetConversationRecordingsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversation recordings unauthorized response has a 4xx status code
func (o *GetConversationRecordingsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversation recordings unauthorized response has a 5xx status code
func (o *GetConversationRecordingsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversation recordings unauthorized response a status code equal to that given
func (o *GetConversationRecordingsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetConversationRecordingsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/recordings][%d] getConversationRecordingsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationRecordingsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/recordings][%d] getConversationRecordingsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationRecordingsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationRecordingsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationRecordingsForbidden creates a GetConversationRecordingsForbidden with default headers values
func NewGetConversationRecordingsForbidden() *GetConversationRecordingsForbidden {
	return &GetConversationRecordingsForbidden{}
}

/*
GetConversationRecordingsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetConversationRecordingsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversation recordings forbidden response has a 2xx status code
func (o *GetConversationRecordingsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversation recordings forbidden response has a 3xx status code
func (o *GetConversationRecordingsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversation recordings forbidden response has a 4xx status code
func (o *GetConversationRecordingsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversation recordings forbidden response has a 5xx status code
func (o *GetConversationRecordingsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversation recordings forbidden response a status code equal to that given
func (o *GetConversationRecordingsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetConversationRecordingsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/recordings][%d] getConversationRecordingsForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationRecordingsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/recordings][%d] getConversationRecordingsForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationRecordingsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationRecordingsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationRecordingsNotFound creates a GetConversationRecordingsNotFound with default headers values
func NewGetConversationRecordingsNotFound() *GetConversationRecordingsNotFound {
	return &GetConversationRecordingsNotFound{}
}

/*
GetConversationRecordingsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetConversationRecordingsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversation recordings not found response has a 2xx status code
func (o *GetConversationRecordingsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversation recordings not found response has a 3xx status code
func (o *GetConversationRecordingsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversation recordings not found response has a 4xx status code
func (o *GetConversationRecordingsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversation recordings not found response has a 5xx status code
func (o *GetConversationRecordingsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversation recordings not found response a status code equal to that given
func (o *GetConversationRecordingsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetConversationRecordingsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/recordings][%d] getConversationRecordingsNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationRecordingsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/recordings][%d] getConversationRecordingsNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationRecordingsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationRecordingsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationRecordingsRequestTimeout creates a GetConversationRecordingsRequestTimeout with default headers values
func NewGetConversationRecordingsRequestTimeout() *GetConversationRecordingsRequestTimeout {
	return &GetConversationRecordingsRequestTimeout{}
}

/*
GetConversationRecordingsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetConversationRecordingsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversation recordings request timeout response has a 2xx status code
func (o *GetConversationRecordingsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversation recordings request timeout response has a 3xx status code
func (o *GetConversationRecordingsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversation recordings request timeout response has a 4xx status code
func (o *GetConversationRecordingsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversation recordings request timeout response has a 5xx status code
func (o *GetConversationRecordingsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversation recordings request timeout response a status code equal to that given
func (o *GetConversationRecordingsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetConversationRecordingsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/recordings][%d] getConversationRecordingsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationRecordingsRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/recordings][%d] getConversationRecordingsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationRecordingsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationRecordingsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationRecordingsRequestEntityTooLarge creates a GetConversationRecordingsRequestEntityTooLarge with default headers values
func NewGetConversationRecordingsRequestEntityTooLarge() *GetConversationRecordingsRequestEntityTooLarge {
	return &GetConversationRecordingsRequestEntityTooLarge{}
}

/*
GetConversationRecordingsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetConversationRecordingsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversation recordings request entity too large response has a 2xx status code
func (o *GetConversationRecordingsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversation recordings request entity too large response has a 3xx status code
func (o *GetConversationRecordingsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversation recordings request entity too large response has a 4xx status code
func (o *GetConversationRecordingsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversation recordings request entity too large response has a 5xx status code
func (o *GetConversationRecordingsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversation recordings request entity too large response a status code equal to that given
func (o *GetConversationRecordingsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetConversationRecordingsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/recordings][%d] getConversationRecordingsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationRecordingsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/recordings][%d] getConversationRecordingsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationRecordingsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationRecordingsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationRecordingsUnsupportedMediaType creates a GetConversationRecordingsUnsupportedMediaType with default headers values
func NewGetConversationRecordingsUnsupportedMediaType() *GetConversationRecordingsUnsupportedMediaType {
	return &GetConversationRecordingsUnsupportedMediaType{}
}

/*
GetConversationRecordingsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetConversationRecordingsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversation recordings unsupported media type response has a 2xx status code
func (o *GetConversationRecordingsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversation recordings unsupported media type response has a 3xx status code
func (o *GetConversationRecordingsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversation recordings unsupported media type response has a 4xx status code
func (o *GetConversationRecordingsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversation recordings unsupported media type response has a 5xx status code
func (o *GetConversationRecordingsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversation recordings unsupported media type response a status code equal to that given
func (o *GetConversationRecordingsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetConversationRecordingsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/recordings][%d] getConversationRecordingsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationRecordingsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/recordings][%d] getConversationRecordingsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationRecordingsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationRecordingsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationRecordingsTooManyRequests creates a GetConversationRecordingsTooManyRequests with default headers values
func NewGetConversationRecordingsTooManyRequests() *GetConversationRecordingsTooManyRequests {
	return &GetConversationRecordingsTooManyRequests{}
}

/*
GetConversationRecordingsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetConversationRecordingsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversation recordings too many requests response has a 2xx status code
func (o *GetConversationRecordingsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversation recordings too many requests response has a 3xx status code
func (o *GetConversationRecordingsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversation recordings too many requests response has a 4xx status code
func (o *GetConversationRecordingsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversation recordings too many requests response has a 5xx status code
func (o *GetConversationRecordingsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversation recordings too many requests response a status code equal to that given
func (o *GetConversationRecordingsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetConversationRecordingsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/recordings][%d] getConversationRecordingsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationRecordingsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/recordings][%d] getConversationRecordingsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationRecordingsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationRecordingsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationRecordingsInternalServerError creates a GetConversationRecordingsInternalServerError with default headers values
func NewGetConversationRecordingsInternalServerError() *GetConversationRecordingsInternalServerError {
	return &GetConversationRecordingsInternalServerError{}
}

/*
GetConversationRecordingsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetConversationRecordingsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversation recordings internal server error response has a 2xx status code
func (o *GetConversationRecordingsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversation recordings internal server error response has a 3xx status code
func (o *GetConversationRecordingsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversation recordings internal server error response has a 4xx status code
func (o *GetConversationRecordingsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversation recordings internal server error response has a 5xx status code
func (o *GetConversationRecordingsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversation recordings internal server error response a status code equal to that given
func (o *GetConversationRecordingsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetConversationRecordingsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/recordings][%d] getConversationRecordingsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationRecordingsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/recordings][%d] getConversationRecordingsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationRecordingsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationRecordingsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationRecordingsServiceUnavailable creates a GetConversationRecordingsServiceUnavailable with default headers values
func NewGetConversationRecordingsServiceUnavailable() *GetConversationRecordingsServiceUnavailable {
	return &GetConversationRecordingsServiceUnavailable{}
}

/*
GetConversationRecordingsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetConversationRecordingsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversation recordings service unavailable response has a 2xx status code
func (o *GetConversationRecordingsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversation recordings service unavailable response has a 3xx status code
func (o *GetConversationRecordingsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversation recordings service unavailable response has a 4xx status code
func (o *GetConversationRecordingsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversation recordings service unavailable response has a 5xx status code
func (o *GetConversationRecordingsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversation recordings service unavailable response a status code equal to that given
func (o *GetConversationRecordingsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetConversationRecordingsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/recordings][%d] getConversationRecordingsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationRecordingsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/recordings][%d] getConversationRecordingsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationRecordingsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationRecordingsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationRecordingsGatewayTimeout creates a GetConversationRecordingsGatewayTimeout with default headers values
func NewGetConversationRecordingsGatewayTimeout() *GetConversationRecordingsGatewayTimeout {
	return &GetConversationRecordingsGatewayTimeout{}
}

/*
GetConversationRecordingsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetConversationRecordingsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get conversation recordings gateway timeout response has a 2xx status code
func (o *GetConversationRecordingsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversation recordings gateway timeout response has a 3xx status code
func (o *GetConversationRecordingsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversation recordings gateway timeout response has a 4xx status code
func (o *GetConversationRecordingsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversation recordings gateway timeout response has a 5xx status code
func (o *GetConversationRecordingsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversation recordings gateway timeout response a status code equal to that given
func (o *GetConversationRecordingsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetConversationRecordingsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/recordings][%d] getConversationRecordingsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationRecordingsGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/recordings][%d] getConversationRecordingsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationRecordingsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationRecordingsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
