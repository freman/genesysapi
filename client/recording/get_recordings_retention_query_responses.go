// Code generated by go-swagger; DO NOT EDIT.

package recording

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetRecordingsRetentionQueryReader is a Reader for the GetRecordingsRetentionQuery structure.
type GetRecordingsRetentionQueryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRecordingsRetentionQueryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRecordingsRetentionQueryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRecordingsRetentionQueryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetRecordingsRetentionQueryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRecordingsRetentionQueryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRecordingsRetentionQueryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetRecordingsRetentionQueryRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetRecordingsRetentionQueryRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetRecordingsRetentionQueryUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetRecordingsRetentionQueryTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRecordingsRetentionQueryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetRecordingsRetentionQueryServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetRecordingsRetentionQueryGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRecordingsRetentionQueryOK creates a GetRecordingsRetentionQueryOK with default headers values
func NewGetRecordingsRetentionQueryOK() *GetRecordingsRetentionQueryOK {
	return &GetRecordingsRetentionQueryOK{}
}

/*GetRecordingsRetentionQueryOK handles this case with default header values.

successful operation
*/
type GetRecordingsRetentionQueryOK struct {
	Payload *models.RecordingRetentionCursorEntityListing
}

func (o *GetRecordingsRetentionQueryOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/recordings/retention/query][%d] getRecordingsRetentionQueryOK  %+v", 200, o.Payload)
}

func (o *GetRecordingsRetentionQueryOK) GetPayload() *models.RecordingRetentionCursorEntityListing {
	return o.Payload
}

func (o *GetRecordingsRetentionQueryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RecordingRetentionCursorEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingsRetentionQueryBadRequest creates a GetRecordingsRetentionQueryBadRequest with default headers values
func NewGetRecordingsRetentionQueryBadRequest() *GetRecordingsRetentionQueryBadRequest {
	return &GetRecordingsRetentionQueryBadRequest{}
}

/*GetRecordingsRetentionQueryBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetRecordingsRetentionQueryBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingsRetentionQueryBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/recordings/retention/query][%d] getRecordingsRetentionQueryBadRequest  %+v", 400, o.Payload)
}

func (o *GetRecordingsRetentionQueryBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingsRetentionQueryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingsRetentionQueryUnauthorized creates a GetRecordingsRetentionQueryUnauthorized with default headers values
func NewGetRecordingsRetentionQueryUnauthorized() *GetRecordingsRetentionQueryUnauthorized {
	return &GetRecordingsRetentionQueryUnauthorized{}
}

/*GetRecordingsRetentionQueryUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetRecordingsRetentionQueryUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingsRetentionQueryUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/recordings/retention/query][%d] getRecordingsRetentionQueryUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRecordingsRetentionQueryUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingsRetentionQueryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingsRetentionQueryForbidden creates a GetRecordingsRetentionQueryForbidden with default headers values
func NewGetRecordingsRetentionQueryForbidden() *GetRecordingsRetentionQueryForbidden {
	return &GetRecordingsRetentionQueryForbidden{}
}

/*GetRecordingsRetentionQueryForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetRecordingsRetentionQueryForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingsRetentionQueryForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/recordings/retention/query][%d] getRecordingsRetentionQueryForbidden  %+v", 403, o.Payload)
}

func (o *GetRecordingsRetentionQueryForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingsRetentionQueryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingsRetentionQueryNotFound creates a GetRecordingsRetentionQueryNotFound with default headers values
func NewGetRecordingsRetentionQueryNotFound() *GetRecordingsRetentionQueryNotFound {
	return &GetRecordingsRetentionQueryNotFound{}
}

/*GetRecordingsRetentionQueryNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetRecordingsRetentionQueryNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingsRetentionQueryNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/recordings/retention/query][%d] getRecordingsRetentionQueryNotFound  %+v", 404, o.Payload)
}

func (o *GetRecordingsRetentionQueryNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingsRetentionQueryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingsRetentionQueryRequestTimeout creates a GetRecordingsRetentionQueryRequestTimeout with default headers values
func NewGetRecordingsRetentionQueryRequestTimeout() *GetRecordingsRetentionQueryRequestTimeout {
	return &GetRecordingsRetentionQueryRequestTimeout{}
}

/*GetRecordingsRetentionQueryRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetRecordingsRetentionQueryRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingsRetentionQueryRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/recordings/retention/query][%d] getRecordingsRetentionQueryRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetRecordingsRetentionQueryRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingsRetentionQueryRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingsRetentionQueryRequestEntityTooLarge creates a GetRecordingsRetentionQueryRequestEntityTooLarge with default headers values
func NewGetRecordingsRetentionQueryRequestEntityTooLarge() *GetRecordingsRetentionQueryRequestEntityTooLarge {
	return &GetRecordingsRetentionQueryRequestEntityTooLarge{}
}

/*GetRecordingsRetentionQueryRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetRecordingsRetentionQueryRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingsRetentionQueryRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/recordings/retention/query][%d] getRecordingsRetentionQueryRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetRecordingsRetentionQueryRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingsRetentionQueryRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingsRetentionQueryUnsupportedMediaType creates a GetRecordingsRetentionQueryUnsupportedMediaType with default headers values
func NewGetRecordingsRetentionQueryUnsupportedMediaType() *GetRecordingsRetentionQueryUnsupportedMediaType {
	return &GetRecordingsRetentionQueryUnsupportedMediaType{}
}

/*GetRecordingsRetentionQueryUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetRecordingsRetentionQueryUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingsRetentionQueryUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/recordings/retention/query][%d] getRecordingsRetentionQueryUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetRecordingsRetentionQueryUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingsRetentionQueryUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingsRetentionQueryTooManyRequests creates a GetRecordingsRetentionQueryTooManyRequests with default headers values
func NewGetRecordingsRetentionQueryTooManyRequests() *GetRecordingsRetentionQueryTooManyRequests {
	return &GetRecordingsRetentionQueryTooManyRequests{}
}

/*GetRecordingsRetentionQueryTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetRecordingsRetentionQueryTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingsRetentionQueryTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/recordings/retention/query][%d] getRecordingsRetentionQueryTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetRecordingsRetentionQueryTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingsRetentionQueryTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingsRetentionQueryInternalServerError creates a GetRecordingsRetentionQueryInternalServerError with default headers values
func NewGetRecordingsRetentionQueryInternalServerError() *GetRecordingsRetentionQueryInternalServerError {
	return &GetRecordingsRetentionQueryInternalServerError{}
}

/*GetRecordingsRetentionQueryInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetRecordingsRetentionQueryInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingsRetentionQueryInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/recordings/retention/query][%d] getRecordingsRetentionQueryInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRecordingsRetentionQueryInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingsRetentionQueryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingsRetentionQueryServiceUnavailable creates a GetRecordingsRetentionQueryServiceUnavailable with default headers values
func NewGetRecordingsRetentionQueryServiceUnavailable() *GetRecordingsRetentionQueryServiceUnavailable {
	return &GetRecordingsRetentionQueryServiceUnavailable{}
}

/*GetRecordingsRetentionQueryServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetRecordingsRetentionQueryServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingsRetentionQueryServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/recordings/retention/query][%d] getRecordingsRetentionQueryServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetRecordingsRetentionQueryServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingsRetentionQueryServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingsRetentionQueryGatewayTimeout creates a GetRecordingsRetentionQueryGatewayTimeout with default headers values
func NewGetRecordingsRetentionQueryGatewayTimeout() *GetRecordingsRetentionQueryGatewayTimeout {
	return &GetRecordingsRetentionQueryGatewayTimeout{}
}

/*GetRecordingsRetentionQueryGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetRecordingsRetentionQueryGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingsRetentionQueryGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/recordings/retention/query][%d] getRecordingsRetentionQueryGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetRecordingsRetentionQueryGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingsRetentionQueryGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
