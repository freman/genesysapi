// Code generated by go-swagger; DO NOT EDIT.

package recording

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostRecordingKeyconfigurationsValidateReader is a Reader for the PostRecordingKeyconfigurationsValidate structure.
type PostRecordingKeyconfigurationsValidateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostRecordingKeyconfigurationsValidateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostRecordingKeyconfigurationsValidateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostRecordingKeyconfigurationsValidateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostRecordingKeyconfigurationsValidateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostRecordingKeyconfigurationsValidateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostRecordingKeyconfigurationsValidateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostRecordingKeyconfigurationsValidateRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostRecordingKeyconfigurationsValidateRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostRecordingKeyconfigurationsValidateUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostRecordingKeyconfigurationsValidateTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostRecordingKeyconfigurationsValidateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostRecordingKeyconfigurationsValidateServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostRecordingKeyconfigurationsValidateGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostRecordingKeyconfigurationsValidateOK creates a PostRecordingKeyconfigurationsValidateOK with default headers values
func NewPostRecordingKeyconfigurationsValidateOK() *PostRecordingKeyconfigurationsValidateOK {
	return &PostRecordingKeyconfigurationsValidateOK{}
}

/*PostRecordingKeyconfigurationsValidateOK handles this case with default header values.

successful operation
*/
type PostRecordingKeyconfigurationsValidateOK struct {
	Payload *models.RecordingEncryptionConfiguration
}

func (o *PostRecordingKeyconfigurationsValidateOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/recording/keyconfigurations/validate][%d] postRecordingKeyconfigurationsValidateOK  %+v", 200, o.Payload)
}

func (o *PostRecordingKeyconfigurationsValidateOK) GetPayload() *models.RecordingEncryptionConfiguration {
	return o.Payload
}

func (o *PostRecordingKeyconfigurationsValidateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RecordingEncryptionConfiguration)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRecordingKeyconfigurationsValidateBadRequest creates a PostRecordingKeyconfigurationsValidateBadRequest with default headers values
func NewPostRecordingKeyconfigurationsValidateBadRequest() *PostRecordingKeyconfigurationsValidateBadRequest {
	return &PostRecordingKeyconfigurationsValidateBadRequest{}
}

/*PostRecordingKeyconfigurationsValidateBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostRecordingKeyconfigurationsValidateBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PostRecordingKeyconfigurationsValidateBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/recording/keyconfigurations/validate][%d] postRecordingKeyconfigurationsValidateBadRequest  %+v", 400, o.Payload)
}

func (o *PostRecordingKeyconfigurationsValidateBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRecordingKeyconfigurationsValidateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRecordingKeyconfigurationsValidateUnauthorized creates a PostRecordingKeyconfigurationsValidateUnauthorized with default headers values
func NewPostRecordingKeyconfigurationsValidateUnauthorized() *PostRecordingKeyconfigurationsValidateUnauthorized {
	return &PostRecordingKeyconfigurationsValidateUnauthorized{}
}

/*PostRecordingKeyconfigurationsValidateUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PostRecordingKeyconfigurationsValidateUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PostRecordingKeyconfigurationsValidateUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/recording/keyconfigurations/validate][%d] postRecordingKeyconfigurationsValidateUnauthorized  %+v", 401, o.Payload)
}

func (o *PostRecordingKeyconfigurationsValidateUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRecordingKeyconfigurationsValidateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRecordingKeyconfigurationsValidateForbidden creates a PostRecordingKeyconfigurationsValidateForbidden with default headers values
func NewPostRecordingKeyconfigurationsValidateForbidden() *PostRecordingKeyconfigurationsValidateForbidden {
	return &PostRecordingKeyconfigurationsValidateForbidden{}
}

/*PostRecordingKeyconfigurationsValidateForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PostRecordingKeyconfigurationsValidateForbidden struct {
	Payload *models.ErrorBody
}

func (o *PostRecordingKeyconfigurationsValidateForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/recording/keyconfigurations/validate][%d] postRecordingKeyconfigurationsValidateForbidden  %+v", 403, o.Payload)
}

func (o *PostRecordingKeyconfigurationsValidateForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRecordingKeyconfigurationsValidateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRecordingKeyconfigurationsValidateNotFound creates a PostRecordingKeyconfigurationsValidateNotFound with default headers values
func NewPostRecordingKeyconfigurationsValidateNotFound() *PostRecordingKeyconfigurationsValidateNotFound {
	return &PostRecordingKeyconfigurationsValidateNotFound{}
}

/*PostRecordingKeyconfigurationsValidateNotFound handles this case with default header values.

The requested resource was not found.
*/
type PostRecordingKeyconfigurationsValidateNotFound struct {
	Payload *models.ErrorBody
}

func (o *PostRecordingKeyconfigurationsValidateNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/recording/keyconfigurations/validate][%d] postRecordingKeyconfigurationsValidateNotFound  %+v", 404, o.Payload)
}

func (o *PostRecordingKeyconfigurationsValidateNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRecordingKeyconfigurationsValidateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRecordingKeyconfigurationsValidateRequestTimeout creates a PostRecordingKeyconfigurationsValidateRequestTimeout with default headers values
func NewPostRecordingKeyconfigurationsValidateRequestTimeout() *PostRecordingKeyconfigurationsValidateRequestTimeout {
	return &PostRecordingKeyconfigurationsValidateRequestTimeout{}
}

/*PostRecordingKeyconfigurationsValidateRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostRecordingKeyconfigurationsValidateRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostRecordingKeyconfigurationsValidateRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/recording/keyconfigurations/validate][%d] postRecordingKeyconfigurationsValidateRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostRecordingKeyconfigurationsValidateRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRecordingKeyconfigurationsValidateRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRecordingKeyconfigurationsValidateRequestEntityTooLarge creates a PostRecordingKeyconfigurationsValidateRequestEntityTooLarge with default headers values
func NewPostRecordingKeyconfigurationsValidateRequestEntityTooLarge() *PostRecordingKeyconfigurationsValidateRequestEntityTooLarge {
	return &PostRecordingKeyconfigurationsValidateRequestEntityTooLarge{}
}

/*PostRecordingKeyconfigurationsValidateRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PostRecordingKeyconfigurationsValidateRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PostRecordingKeyconfigurationsValidateRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/recording/keyconfigurations/validate][%d] postRecordingKeyconfigurationsValidateRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostRecordingKeyconfigurationsValidateRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRecordingKeyconfigurationsValidateRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRecordingKeyconfigurationsValidateUnsupportedMediaType creates a PostRecordingKeyconfigurationsValidateUnsupportedMediaType with default headers values
func NewPostRecordingKeyconfigurationsValidateUnsupportedMediaType() *PostRecordingKeyconfigurationsValidateUnsupportedMediaType {
	return &PostRecordingKeyconfigurationsValidateUnsupportedMediaType{}
}

/*PostRecordingKeyconfigurationsValidateUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostRecordingKeyconfigurationsValidateUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PostRecordingKeyconfigurationsValidateUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/recording/keyconfigurations/validate][%d] postRecordingKeyconfigurationsValidateUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostRecordingKeyconfigurationsValidateUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRecordingKeyconfigurationsValidateUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRecordingKeyconfigurationsValidateTooManyRequests creates a PostRecordingKeyconfigurationsValidateTooManyRequests with default headers values
func NewPostRecordingKeyconfigurationsValidateTooManyRequests() *PostRecordingKeyconfigurationsValidateTooManyRequests {
	return &PostRecordingKeyconfigurationsValidateTooManyRequests{}
}

/*PostRecordingKeyconfigurationsValidateTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostRecordingKeyconfigurationsValidateTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PostRecordingKeyconfigurationsValidateTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/recording/keyconfigurations/validate][%d] postRecordingKeyconfigurationsValidateTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostRecordingKeyconfigurationsValidateTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRecordingKeyconfigurationsValidateTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRecordingKeyconfigurationsValidateInternalServerError creates a PostRecordingKeyconfigurationsValidateInternalServerError with default headers values
func NewPostRecordingKeyconfigurationsValidateInternalServerError() *PostRecordingKeyconfigurationsValidateInternalServerError {
	return &PostRecordingKeyconfigurationsValidateInternalServerError{}
}

/*PostRecordingKeyconfigurationsValidateInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostRecordingKeyconfigurationsValidateInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PostRecordingKeyconfigurationsValidateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/recording/keyconfigurations/validate][%d] postRecordingKeyconfigurationsValidateInternalServerError  %+v", 500, o.Payload)
}

func (o *PostRecordingKeyconfigurationsValidateInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRecordingKeyconfigurationsValidateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRecordingKeyconfigurationsValidateServiceUnavailable creates a PostRecordingKeyconfigurationsValidateServiceUnavailable with default headers values
func NewPostRecordingKeyconfigurationsValidateServiceUnavailable() *PostRecordingKeyconfigurationsValidateServiceUnavailable {
	return &PostRecordingKeyconfigurationsValidateServiceUnavailable{}
}

/*PostRecordingKeyconfigurationsValidateServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostRecordingKeyconfigurationsValidateServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PostRecordingKeyconfigurationsValidateServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/recording/keyconfigurations/validate][%d] postRecordingKeyconfigurationsValidateServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostRecordingKeyconfigurationsValidateServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRecordingKeyconfigurationsValidateServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRecordingKeyconfigurationsValidateGatewayTimeout creates a PostRecordingKeyconfigurationsValidateGatewayTimeout with default headers values
func NewPostRecordingKeyconfigurationsValidateGatewayTimeout() *PostRecordingKeyconfigurationsValidateGatewayTimeout {
	return &PostRecordingKeyconfigurationsValidateGatewayTimeout{}
}

/*PostRecordingKeyconfigurationsValidateGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PostRecordingKeyconfigurationsValidateGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostRecordingKeyconfigurationsValidateGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/recording/keyconfigurations/validate][%d] postRecordingKeyconfigurationsValidateGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostRecordingKeyconfigurationsValidateGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRecordingKeyconfigurationsValidateGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
