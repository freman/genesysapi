// Code generated by go-swagger; DO NOT EDIT.

package recording

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetConversationRecordingAnnotationsReader is a Reader for the GetConversationRecordingAnnotations structure.
type GetConversationRecordingAnnotationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConversationRecordingAnnotationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConversationRecordingAnnotationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetConversationRecordingAnnotationsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetConversationRecordingAnnotationsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetConversationRecordingAnnotationsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetConversationRecordingAnnotationsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetConversationRecordingAnnotationsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetConversationRecordingAnnotationsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetConversationRecordingAnnotationsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetConversationRecordingAnnotationsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetConversationRecordingAnnotationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetConversationRecordingAnnotationsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetConversationRecordingAnnotationsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetConversationRecordingAnnotationsOK creates a GetConversationRecordingAnnotationsOK with default headers values
func NewGetConversationRecordingAnnotationsOK() *GetConversationRecordingAnnotationsOK {
	return &GetConversationRecordingAnnotationsOK{}
}

/*GetConversationRecordingAnnotationsOK handles this case with default header values.

successful operation
*/
type GetConversationRecordingAnnotationsOK struct {
	Payload []*models.Annotation
}

func (o *GetConversationRecordingAnnotationsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations][%d] getConversationRecordingAnnotationsOK  %+v", 200, o.Payload)
}

func (o *GetConversationRecordingAnnotationsOK) GetPayload() []*models.Annotation {
	return o.Payload
}

func (o *GetConversationRecordingAnnotationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationRecordingAnnotationsBadRequest creates a GetConversationRecordingAnnotationsBadRequest with default headers values
func NewGetConversationRecordingAnnotationsBadRequest() *GetConversationRecordingAnnotationsBadRequest {
	return &GetConversationRecordingAnnotationsBadRequest{}
}

/*GetConversationRecordingAnnotationsBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetConversationRecordingAnnotationsBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetConversationRecordingAnnotationsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations][%d] getConversationRecordingAnnotationsBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversationRecordingAnnotationsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationRecordingAnnotationsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationRecordingAnnotationsUnauthorized creates a GetConversationRecordingAnnotationsUnauthorized with default headers values
func NewGetConversationRecordingAnnotationsUnauthorized() *GetConversationRecordingAnnotationsUnauthorized {
	return &GetConversationRecordingAnnotationsUnauthorized{}
}

/*GetConversationRecordingAnnotationsUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetConversationRecordingAnnotationsUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetConversationRecordingAnnotationsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations][%d] getConversationRecordingAnnotationsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConversationRecordingAnnotationsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationRecordingAnnotationsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationRecordingAnnotationsForbidden creates a GetConversationRecordingAnnotationsForbidden with default headers values
func NewGetConversationRecordingAnnotationsForbidden() *GetConversationRecordingAnnotationsForbidden {
	return &GetConversationRecordingAnnotationsForbidden{}
}

/*GetConversationRecordingAnnotationsForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetConversationRecordingAnnotationsForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetConversationRecordingAnnotationsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations][%d] getConversationRecordingAnnotationsForbidden  %+v", 403, o.Payload)
}

func (o *GetConversationRecordingAnnotationsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationRecordingAnnotationsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationRecordingAnnotationsNotFound creates a GetConversationRecordingAnnotationsNotFound with default headers values
func NewGetConversationRecordingAnnotationsNotFound() *GetConversationRecordingAnnotationsNotFound {
	return &GetConversationRecordingAnnotationsNotFound{}
}

/*GetConversationRecordingAnnotationsNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetConversationRecordingAnnotationsNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetConversationRecordingAnnotationsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations][%d] getConversationRecordingAnnotationsNotFound  %+v", 404, o.Payload)
}

func (o *GetConversationRecordingAnnotationsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationRecordingAnnotationsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationRecordingAnnotationsRequestTimeout creates a GetConversationRecordingAnnotationsRequestTimeout with default headers values
func NewGetConversationRecordingAnnotationsRequestTimeout() *GetConversationRecordingAnnotationsRequestTimeout {
	return &GetConversationRecordingAnnotationsRequestTimeout{}
}

/*GetConversationRecordingAnnotationsRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetConversationRecordingAnnotationsRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetConversationRecordingAnnotationsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations][%d] getConversationRecordingAnnotationsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetConversationRecordingAnnotationsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationRecordingAnnotationsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationRecordingAnnotationsRequestEntityTooLarge creates a GetConversationRecordingAnnotationsRequestEntityTooLarge with default headers values
func NewGetConversationRecordingAnnotationsRequestEntityTooLarge() *GetConversationRecordingAnnotationsRequestEntityTooLarge {
	return &GetConversationRecordingAnnotationsRequestEntityTooLarge{}
}

/*GetConversationRecordingAnnotationsRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetConversationRecordingAnnotationsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetConversationRecordingAnnotationsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations][%d] getConversationRecordingAnnotationsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetConversationRecordingAnnotationsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationRecordingAnnotationsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationRecordingAnnotationsUnsupportedMediaType creates a GetConversationRecordingAnnotationsUnsupportedMediaType with default headers values
func NewGetConversationRecordingAnnotationsUnsupportedMediaType() *GetConversationRecordingAnnotationsUnsupportedMediaType {
	return &GetConversationRecordingAnnotationsUnsupportedMediaType{}
}

/*GetConversationRecordingAnnotationsUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetConversationRecordingAnnotationsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetConversationRecordingAnnotationsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations][%d] getConversationRecordingAnnotationsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetConversationRecordingAnnotationsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationRecordingAnnotationsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationRecordingAnnotationsTooManyRequests creates a GetConversationRecordingAnnotationsTooManyRequests with default headers values
func NewGetConversationRecordingAnnotationsTooManyRequests() *GetConversationRecordingAnnotationsTooManyRequests {
	return &GetConversationRecordingAnnotationsTooManyRequests{}
}

/*GetConversationRecordingAnnotationsTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetConversationRecordingAnnotationsTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetConversationRecordingAnnotationsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations][%d] getConversationRecordingAnnotationsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetConversationRecordingAnnotationsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationRecordingAnnotationsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationRecordingAnnotationsInternalServerError creates a GetConversationRecordingAnnotationsInternalServerError with default headers values
func NewGetConversationRecordingAnnotationsInternalServerError() *GetConversationRecordingAnnotationsInternalServerError {
	return &GetConversationRecordingAnnotationsInternalServerError{}
}

/*GetConversationRecordingAnnotationsInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetConversationRecordingAnnotationsInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetConversationRecordingAnnotationsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations][%d] getConversationRecordingAnnotationsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversationRecordingAnnotationsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationRecordingAnnotationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationRecordingAnnotationsServiceUnavailable creates a GetConversationRecordingAnnotationsServiceUnavailable with default headers values
func NewGetConversationRecordingAnnotationsServiceUnavailable() *GetConversationRecordingAnnotationsServiceUnavailable {
	return &GetConversationRecordingAnnotationsServiceUnavailable{}
}

/*GetConversationRecordingAnnotationsServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetConversationRecordingAnnotationsServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetConversationRecordingAnnotationsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations][%d] getConversationRecordingAnnotationsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetConversationRecordingAnnotationsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationRecordingAnnotationsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversationRecordingAnnotationsGatewayTimeout creates a GetConversationRecordingAnnotationsGatewayTimeout with default headers values
func NewGetConversationRecordingAnnotationsGatewayTimeout() *GetConversationRecordingAnnotationsGatewayTimeout {
	return &GetConversationRecordingAnnotationsGatewayTimeout{}
}

/*GetConversationRecordingAnnotationsGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetConversationRecordingAnnotationsGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetConversationRecordingAnnotationsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations][%d] getConversationRecordingAnnotationsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetConversationRecordingAnnotationsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConversationRecordingAnnotationsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
