// Code generated by go-swagger; DO NOT EDIT.

package recording

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetRecordingKeyconfigurationsReader is a Reader for the GetRecordingKeyconfigurations structure.
type GetRecordingKeyconfigurationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRecordingKeyconfigurationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRecordingKeyconfigurationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRecordingKeyconfigurationsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetRecordingKeyconfigurationsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRecordingKeyconfigurationsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRecordingKeyconfigurationsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetRecordingKeyconfigurationsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetRecordingKeyconfigurationsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetRecordingKeyconfigurationsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetRecordingKeyconfigurationsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRecordingKeyconfigurationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetRecordingKeyconfigurationsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetRecordingKeyconfigurationsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRecordingKeyconfigurationsOK creates a GetRecordingKeyconfigurationsOK with default headers values
func NewGetRecordingKeyconfigurationsOK() *GetRecordingKeyconfigurationsOK {
	return &GetRecordingKeyconfigurationsOK{}
}

/*GetRecordingKeyconfigurationsOK handles this case with default header values.

successful operation
*/
type GetRecordingKeyconfigurationsOK struct {
	Payload *models.RecordingEncryptionConfigurationListing
}

func (o *GetRecordingKeyconfigurationsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/recording/keyconfigurations][%d] getRecordingKeyconfigurationsOK  %+v", 200, o.Payload)
}

func (o *GetRecordingKeyconfigurationsOK) GetPayload() *models.RecordingEncryptionConfigurationListing {
	return o.Payload
}

func (o *GetRecordingKeyconfigurationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RecordingEncryptionConfigurationListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingKeyconfigurationsBadRequest creates a GetRecordingKeyconfigurationsBadRequest with default headers values
func NewGetRecordingKeyconfigurationsBadRequest() *GetRecordingKeyconfigurationsBadRequest {
	return &GetRecordingKeyconfigurationsBadRequest{}
}

/*GetRecordingKeyconfigurationsBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetRecordingKeyconfigurationsBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingKeyconfigurationsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/recording/keyconfigurations][%d] getRecordingKeyconfigurationsBadRequest  %+v", 400, o.Payload)
}

func (o *GetRecordingKeyconfigurationsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingKeyconfigurationsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingKeyconfigurationsUnauthorized creates a GetRecordingKeyconfigurationsUnauthorized with default headers values
func NewGetRecordingKeyconfigurationsUnauthorized() *GetRecordingKeyconfigurationsUnauthorized {
	return &GetRecordingKeyconfigurationsUnauthorized{}
}

/*GetRecordingKeyconfigurationsUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetRecordingKeyconfigurationsUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingKeyconfigurationsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/recording/keyconfigurations][%d] getRecordingKeyconfigurationsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRecordingKeyconfigurationsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingKeyconfigurationsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingKeyconfigurationsForbidden creates a GetRecordingKeyconfigurationsForbidden with default headers values
func NewGetRecordingKeyconfigurationsForbidden() *GetRecordingKeyconfigurationsForbidden {
	return &GetRecordingKeyconfigurationsForbidden{}
}

/*GetRecordingKeyconfigurationsForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetRecordingKeyconfigurationsForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingKeyconfigurationsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/recording/keyconfigurations][%d] getRecordingKeyconfigurationsForbidden  %+v", 403, o.Payload)
}

func (o *GetRecordingKeyconfigurationsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingKeyconfigurationsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingKeyconfigurationsNotFound creates a GetRecordingKeyconfigurationsNotFound with default headers values
func NewGetRecordingKeyconfigurationsNotFound() *GetRecordingKeyconfigurationsNotFound {
	return &GetRecordingKeyconfigurationsNotFound{}
}

/*GetRecordingKeyconfigurationsNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetRecordingKeyconfigurationsNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingKeyconfigurationsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/recording/keyconfigurations][%d] getRecordingKeyconfigurationsNotFound  %+v", 404, o.Payload)
}

func (o *GetRecordingKeyconfigurationsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingKeyconfigurationsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingKeyconfigurationsRequestTimeout creates a GetRecordingKeyconfigurationsRequestTimeout with default headers values
func NewGetRecordingKeyconfigurationsRequestTimeout() *GetRecordingKeyconfigurationsRequestTimeout {
	return &GetRecordingKeyconfigurationsRequestTimeout{}
}

/*GetRecordingKeyconfigurationsRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetRecordingKeyconfigurationsRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingKeyconfigurationsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/recording/keyconfigurations][%d] getRecordingKeyconfigurationsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetRecordingKeyconfigurationsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingKeyconfigurationsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingKeyconfigurationsRequestEntityTooLarge creates a GetRecordingKeyconfigurationsRequestEntityTooLarge with default headers values
func NewGetRecordingKeyconfigurationsRequestEntityTooLarge() *GetRecordingKeyconfigurationsRequestEntityTooLarge {
	return &GetRecordingKeyconfigurationsRequestEntityTooLarge{}
}

/*GetRecordingKeyconfigurationsRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetRecordingKeyconfigurationsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingKeyconfigurationsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/recording/keyconfigurations][%d] getRecordingKeyconfigurationsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetRecordingKeyconfigurationsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingKeyconfigurationsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingKeyconfigurationsUnsupportedMediaType creates a GetRecordingKeyconfigurationsUnsupportedMediaType with default headers values
func NewGetRecordingKeyconfigurationsUnsupportedMediaType() *GetRecordingKeyconfigurationsUnsupportedMediaType {
	return &GetRecordingKeyconfigurationsUnsupportedMediaType{}
}

/*GetRecordingKeyconfigurationsUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetRecordingKeyconfigurationsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingKeyconfigurationsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/recording/keyconfigurations][%d] getRecordingKeyconfigurationsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetRecordingKeyconfigurationsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingKeyconfigurationsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingKeyconfigurationsTooManyRequests creates a GetRecordingKeyconfigurationsTooManyRequests with default headers values
func NewGetRecordingKeyconfigurationsTooManyRequests() *GetRecordingKeyconfigurationsTooManyRequests {
	return &GetRecordingKeyconfigurationsTooManyRequests{}
}

/*GetRecordingKeyconfigurationsTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetRecordingKeyconfigurationsTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingKeyconfigurationsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/recording/keyconfigurations][%d] getRecordingKeyconfigurationsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetRecordingKeyconfigurationsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingKeyconfigurationsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingKeyconfigurationsInternalServerError creates a GetRecordingKeyconfigurationsInternalServerError with default headers values
func NewGetRecordingKeyconfigurationsInternalServerError() *GetRecordingKeyconfigurationsInternalServerError {
	return &GetRecordingKeyconfigurationsInternalServerError{}
}

/*GetRecordingKeyconfigurationsInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetRecordingKeyconfigurationsInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingKeyconfigurationsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/recording/keyconfigurations][%d] getRecordingKeyconfigurationsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRecordingKeyconfigurationsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingKeyconfigurationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingKeyconfigurationsServiceUnavailable creates a GetRecordingKeyconfigurationsServiceUnavailable with default headers values
func NewGetRecordingKeyconfigurationsServiceUnavailable() *GetRecordingKeyconfigurationsServiceUnavailable {
	return &GetRecordingKeyconfigurationsServiceUnavailable{}
}

/*GetRecordingKeyconfigurationsServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetRecordingKeyconfigurationsServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingKeyconfigurationsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/recording/keyconfigurations][%d] getRecordingKeyconfigurationsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetRecordingKeyconfigurationsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingKeyconfigurationsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingKeyconfigurationsGatewayTimeout creates a GetRecordingKeyconfigurationsGatewayTimeout with default headers values
func NewGetRecordingKeyconfigurationsGatewayTimeout() *GetRecordingKeyconfigurationsGatewayTimeout {
	return &GetRecordingKeyconfigurationsGatewayTimeout{}
}

/*GetRecordingKeyconfigurationsGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetRecordingKeyconfigurationsGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingKeyconfigurationsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/recording/keyconfigurations][%d] getRecordingKeyconfigurationsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetRecordingKeyconfigurationsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingKeyconfigurationsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
