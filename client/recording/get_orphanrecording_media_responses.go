// Code generated by go-swagger; DO NOT EDIT.

package recording

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetOrphanrecordingMediaReader is a Reader for the GetOrphanrecordingMedia structure.
type GetOrphanrecordingMediaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOrphanrecordingMediaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOrphanrecordingMediaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewGetOrphanrecordingMediaAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOrphanrecordingMediaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetOrphanrecordingMediaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetOrphanrecordingMediaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOrphanrecordingMediaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetOrphanrecordingMediaRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetOrphanrecordingMediaRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetOrphanrecordingMediaUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetOrphanrecordingMediaTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOrphanrecordingMediaInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetOrphanrecordingMediaServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetOrphanrecordingMediaGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetOrphanrecordingMediaOK creates a GetOrphanrecordingMediaOK with default headers values
func NewGetOrphanrecordingMediaOK() *GetOrphanrecordingMediaOK {
	return &GetOrphanrecordingMediaOK{}
}

/*
GetOrphanrecordingMediaOK describes a response with status code 200, with default header values.

successful operation
*/
type GetOrphanrecordingMediaOK struct {
	Payload *models.Recording
}

// IsSuccess returns true when this get orphanrecording media o k response has a 2xx status code
func (o *GetOrphanrecordingMediaOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get orphanrecording media o k response has a 3xx status code
func (o *GetOrphanrecordingMediaOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get orphanrecording media o k response has a 4xx status code
func (o *GetOrphanrecordingMediaOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get orphanrecording media o k response has a 5xx status code
func (o *GetOrphanrecordingMediaOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get orphanrecording media o k response a status code equal to that given
func (o *GetOrphanrecordingMediaOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetOrphanrecordingMediaOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/orphanrecordings/{orphanId}/media][%d] getOrphanrecordingMediaOK  %+v", 200, o.Payload)
}

func (o *GetOrphanrecordingMediaOK) String() string {
	return fmt.Sprintf("[GET /api/v2/orphanrecordings/{orphanId}/media][%d] getOrphanrecordingMediaOK  %+v", 200, o.Payload)
}

func (o *GetOrphanrecordingMediaOK) GetPayload() *models.Recording {
	return o.Payload
}

func (o *GetOrphanrecordingMediaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Recording)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrphanrecordingMediaAccepted creates a GetOrphanrecordingMediaAccepted with default headers values
func NewGetOrphanrecordingMediaAccepted() *GetOrphanrecordingMediaAccepted {
	return &GetOrphanrecordingMediaAccepted{}
}

/*
GetOrphanrecordingMediaAccepted describes a response with status code 202, with default header values.

Accepted - Transcoding orphan media
*/
type GetOrphanrecordingMediaAccepted struct {
}

// IsSuccess returns true when this get orphanrecording media accepted response has a 2xx status code
func (o *GetOrphanrecordingMediaAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get orphanrecording media accepted response has a 3xx status code
func (o *GetOrphanrecordingMediaAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get orphanrecording media accepted response has a 4xx status code
func (o *GetOrphanrecordingMediaAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this get orphanrecording media accepted response has a 5xx status code
func (o *GetOrphanrecordingMediaAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this get orphanrecording media accepted response a status code equal to that given
func (o *GetOrphanrecordingMediaAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *GetOrphanrecordingMediaAccepted) Error() string {
	return fmt.Sprintf("[GET /api/v2/orphanrecordings/{orphanId}/media][%d] getOrphanrecordingMediaAccepted ", 202)
}

func (o *GetOrphanrecordingMediaAccepted) String() string {
	return fmt.Sprintf("[GET /api/v2/orphanrecordings/{orphanId}/media][%d] getOrphanrecordingMediaAccepted ", 202)
}

func (o *GetOrphanrecordingMediaAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOrphanrecordingMediaBadRequest creates a GetOrphanrecordingMediaBadRequest with default headers values
func NewGetOrphanrecordingMediaBadRequest() *GetOrphanrecordingMediaBadRequest {
	return &GetOrphanrecordingMediaBadRequest{}
}

/*
GetOrphanrecordingMediaBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetOrphanrecordingMediaBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get orphanrecording media bad request response has a 2xx status code
func (o *GetOrphanrecordingMediaBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get orphanrecording media bad request response has a 3xx status code
func (o *GetOrphanrecordingMediaBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get orphanrecording media bad request response has a 4xx status code
func (o *GetOrphanrecordingMediaBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get orphanrecording media bad request response has a 5xx status code
func (o *GetOrphanrecordingMediaBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get orphanrecording media bad request response a status code equal to that given
func (o *GetOrphanrecordingMediaBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetOrphanrecordingMediaBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/orphanrecordings/{orphanId}/media][%d] getOrphanrecordingMediaBadRequest  %+v", 400, o.Payload)
}

func (o *GetOrphanrecordingMediaBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/orphanrecordings/{orphanId}/media][%d] getOrphanrecordingMediaBadRequest  %+v", 400, o.Payload)
}

func (o *GetOrphanrecordingMediaBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrphanrecordingMediaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrphanrecordingMediaUnauthorized creates a GetOrphanrecordingMediaUnauthorized with default headers values
func NewGetOrphanrecordingMediaUnauthorized() *GetOrphanrecordingMediaUnauthorized {
	return &GetOrphanrecordingMediaUnauthorized{}
}

/*
GetOrphanrecordingMediaUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetOrphanrecordingMediaUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get orphanrecording media unauthorized response has a 2xx status code
func (o *GetOrphanrecordingMediaUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get orphanrecording media unauthorized response has a 3xx status code
func (o *GetOrphanrecordingMediaUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get orphanrecording media unauthorized response has a 4xx status code
func (o *GetOrphanrecordingMediaUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get orphanrecording media unauthorized response has a 5xx status code
func (o *GetOrphanrecordingMediaUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get orphanrecording media unauthorized response a status code equal to that given
func (o *GetOrphanrecordingMediaUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetOrphanrecordingMediaUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/orphanrecordings/{orphanId}/media][%d] getOrphanrecordingMediaUnauthorized  %+v", 401, o.Payload)
}

func (o *GetOrphanrecordingMediaUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/orphanrecordings/{orphanId}/media][%d] getOrphanrecordingMediaUnauthorized  %+v", 401, o.Payload)
}

func (o *GetOrphanrecordingMediaUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrphanrecordingMediaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrphanrecordingMediaForbidden creates a GetOrphanrecordingMediaForbidden with default headers values
func NewGetOrphanrecordingMediaForbidden() *GetOrphanrecordingMediaForbidden {
	return &GetOrphanrecordingMediaForbidden{}
}

/*
GetOrphanrecordingMediaForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetOrphanrecordingMediaForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get orphanrecording media forbidden response has a 2xx status code
func (o *GetOrphanrecordingMediaForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get orphanrecording media forbidden response has a 3xx status code
func (o *GetOrphanrecordingMediaForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get orphanrecording media forbidden response has a 4xx status code
func (o *GetOrphanrecordingMediaForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get orphanrecording media forbidden response has a 5xx status code
func (o *GetOrphanrecordingMediaForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get orphanrecording media forbidden response a status code equal to that given
func (o *GetOrphanrecordingMediaForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetOrphanrecordingMediaForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/orphanrecordings/{orphanId}/media][%d] getOrphanrecordingMediaForbidden  %+v", 403, o.Payload)
}

func (o *GetOrphanrecordingMediaForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/orphanrecordings/{orphanId}/media][%d] getOrphanrecordingMediaForbidden  %+v", 403, o.Payload)
}

func (o *GetOrphanrecordingMediaForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrphanrecordingMediaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrphanrecordingMediaNotFound creates a GetOrphanrecordingMediaNotFound with default headers values
func NewGetOrphanrecordingMediaNotFound() *GetOrphanrecordingMediaNotFound {
	return &GetOrphanrecordingMediaNotFound{}
}

/*
GetOrphanrecordingMediaNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetOrphanrecordingMediaNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get orphanrecording media not found response has a 2xx status code
func (o *GetOrphanrecordingMediaNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get orphanrecording media not found response has a 3xx status code
func (o *GetOrphanrecordingMediaNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get orphanrecording media not found response has a 4xx status code
func (o *GetOrphanrecordingMediaNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get orphanrecording media not found response has a 5xx status code
func (o *GetOrphanrecordingMediaNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get orphanrecording media not found response a status code equal to that given
func (o *GetOrphanrecordingMediaNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetOrphanrecordingMediaNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/orphanrecordings/{orphanId}/media][%d] getOrphanrecordingMediaNotFound  %+v", 404, o.Payload)
}

func (o *GetOrphanrecordingMediaNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/orphanrecordings/{orphanId}/media][%d] getOrphanrecordingMediaNotFound  %+v", 404, o.Payload)
}

func (o *GetOrphanrecordingMediaNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrphanrecordingMediaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrphanrecordingMediaRequestTimeout creates a GetOrphanrecordingMediaRequestTimeout with default headers values
func NewGetOrphanrecordingMediaRequestTimeout() *GetOrphanrecordingMediaRequestTimeout {
	return &GetOrphanrecordingMediaRequestTimeout{}
}

/*
GetOrphanrecordingMediaRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetOrphanrecordingMediaRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get orphanrecording media request timeout response has a 2xx status code
func (o *GetOrphanrecordingMediaRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get orphanrecording media request timeout response has a 3xx status code
func (o *GetOrphanrecordingMediaRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get orphanrecording media request timeout response has a 4xx status code
func (o *GetOrphanrecordingMediaRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get orphanrecording media request timeout response has a 5xx status code
func (o *GetOrphanrecordingMediaRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get orphanrecording media request timeout response a status code equal to that given
func (o *GetOrphanrecordingMediaRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetOrphanrecordingMediaRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/orphanrecordings/{orphanId}/media][%d] getOrphanrecordingMediaRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetOrphanrecordingMediaRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/orphanrecordings/{orphanId}/media][%d] getOrphanrecordingMediaRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetOrphanrecordingMediaRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrphanrecordingMediaRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrphanrecordingMediaRequestEntityTooLarge creates a GetOrphanrecordingMediaRequestEntityTooLarge with default headers values
func NewGetOrphanrecordingMediaRequestEntityTooLarge() *GetOrphanrecordingMediaRequestEntityTooLarge {
	return &GetOrphanrecordingMediaRequestEntityTooLarge{}
}

/*
GetOrphanrecordingMediaRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetOrphanrecordingMediaRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get orphanrecording media request entity too large response has a 2xx status code
func (o *GetOrphanrecordingMediaRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get orphanrecording media request entity too large response has a 3xx status code
func (o *GetOrphanrecordingMediaRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get orphanrecording media request entity too large response has a 4xx status code
func (o *GetOrphanrecordingMediaRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get orphanrecording media request entity too large response has a 5xx status code
func (o *GetOrphanrecordingMediaRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get orphanrecording media request entity too large response a status code equal to that given
func (o *GetOrphanrecordingMediaRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetOrphanrecordingMediaRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/orphanrecordings/{orphanId}/media][%d] getOrphanrecordingMediaRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetOrphanrecordingMediaRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/orphanrecordings/{orphanId}/media][%d] getOrphanrecordingMediaRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetOrphanrecordingMediaRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrphanrecordingMediaRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrphanrecordingMediaUnsupportedMediaType creates a GetOrphanrecordingMediaUnsupportedMediaType with default headers values
func NewGetOrphanrecordingMediaUnsupportedMediaType() *GetOrphanrecordingMediaUnsupportedMediaType {
	return &GetOrphanrecordingMediaUnsupportedMediaType{}
}

/*
GetOrphanrecordingMediaUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetOrphanrecordingMediaUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get orphanrecording media unsupported media type response has a 2xx status code
func (o *GetOrphanrecordingMediaUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get orphanrecording media unsupported media type response has a 3xx status code
func (o *GetOrphanrecordingMediaUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get orphanrecording media unsupported media type response has a 4xx status code
func (o *GetOrphanrecordingMediaUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get orphanrecording media unsupported media type response has a 5xx status code
func (o *GetOrphanrecordingMediaUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get orphanrecording media unsupported media type response a status code equal to that given
func (o *GetOrphanrecordingMediaUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetOrphanrecordingMediaUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/orphanrecordings/{orphanId}/media][%d] getOrphanrecordingMediaUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetOrphanrecordingMediaUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/orphanrecordings/{orphanId}/media][%d] getOrphanrecordingMediaUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetOrphanrecordingMediaUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrphanrecordingMediaUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrphanrecordingMediaTooManyRequests creates a GetOrphanrecordingMediaTooManyRequests with default headers values
func NewGetOrphanrecordingMediaTooManyRequests() *GetOrphanrecordingMediaTooManyRequests {
	return &GetOrphanrecordingMediaTooManyRequests{}
}

/*
GetOrphanrecordingMediaTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetOrphanrecordingMediaTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get orphanrecording media too many requests response has a 2xx status code
func (o *GetOrphanrecordingMediaTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get orphanrecording media too many requests response has a 3xx status code
func (o *GetOrphanrecordingMediaTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get orphanrecording media too many requests response has a 4xx status code
func (o *GetOrphanrecordingMediaTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get orphanrecording media too many requests response has a 5xx status code
func (o *GetOrphanrecordingMediaTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get orphanrecording media too many requests response a status code equal to that given
func (o *GetOrphanrecordingMediaTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetOrphanrecordingMediaTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/orphanrecordings/{orphanId}/media][%d] getOrphanrecordingMediaTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetOrphanrecordingMediaTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/orphanrecordings/{orphanId}/media][%d] getOrphanrecordingMediaTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetOrphanrecordingMediaTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrphanrecordingMediaTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrphanrecordingMediaInternalServerError creates a GetOrphanrecordingMediaInternalServerError with default headers values
func NewGetOrphanrecordingMediaInternalServerError() *GetOrphanrecordingMediaInternalServerError {
	return &GetOrphanrecordingMediaInternalServerError{}
}

/*
GetOrphanrecordingMediaInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetOrphanrecordingMediaInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get orphanrecording media internal server error response has a 2xx status code
func (o *GetOrphanrecordingMediaInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get orphanrecording media internal server error response has a 3xx status code
func (o *GetOrphanrecordingMediaInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get orphanrecording media internal server error response has a 4xx status code
func (o *GetOrphanrecordingMediaInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get orphanrecording media internal server error response has a 5xx status code
func (o *GetOrphanrecordingMediaInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get orphanrecording media internal server error response a status code equal to that given
func (o *GetOrphanrecordingMediaInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetOrphanrecordingMediaInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/orphanrecordings/{orphanId}/media][%d] getOrphanrecordingMediaInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOrphanrecordingMediaInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/orphanrecordings/{orphanId}/media][%d] getOrphanrecordingMediaInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOrphanrecordingMediaInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrphanrecordingMediaInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrphanrecordingMediaServiceUnavailable creates a GetOrphanrecordingMediaServiceUnavailable with default headers values
func NewGetOrphanrecordingMediaServiceUnavailable() *GetOrphanrecordingMediaServiceUnavailable {
	return &GetOrphanrecordingMediaServiceUnavailable{}
}

/*
GetOrphanrecordingMediaServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetOrphanrecordingMediaServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get orphanrecording media service unavailable response has a 2xx status code
func (o *GetOrphanrecordingMediaServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get orphanrecording media service unavailable response has a 3xx status code
func (o *GetOrphanrecordingMediaServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get orphanrecording media service unavailable response has a 4xx status code
func (o *GetOrphanrecordingMediaServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get orphanrecording media service unavailable response has a 5xx status code
func (o *GetOrphanrecordingMediaServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get orphanrecording media service unavailable response a status code equal to that given
func (o *GetOrphanrecordingMediaServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetOrphanrecordingMediaServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/orphanrecordings/{orphanId}/media][%d] getOrphanrecordingMediaServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetOrphanrecordingMediaServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/orphanrecordings/{orphanId}/media][%d] getOrphanrecordingMediaServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetOrphanrecordingMediaServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrphanrecordingMediaServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrphanrecordingMediaGatewayTimeout creates a GetOrphanrecordingMediaGatewayTimeout with default headers values
func NewGetOrphanrecordingMediaGatewayTimeout() *GetOrphanrecordingMediaGatewayTimeout {
	return &GetOrphanrecordingMediaGatewayTimeout{}
}

/*
GetOrphanrecordingMediaGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetOrphanrecordingMediaGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get orphanrecording media gateway timeout response has a 2xx status code
func (o *GetOrphanrecordingMediaGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get orphanrecording media gateway timeout response has a 3xx status code
func (o *GetOrphanrecordingMediaGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get orphanrecording media gateway timeout response has a 4xx status code
func (o *GetOrphanrecordingMediaGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get orphanrecording media gateway timeout response has a 5xx status code
func (o *GetOrphanrecordingMediaGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get orphanrecording media gateway timeout response a status code equal to that given
func (o *GetOrphanrecordingMediaGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetOrphanrecordingMediaGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/orphanrecordings/{orphanId}/media][%d] getOrphanrecordingMediaGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetOrphanrecordingMediaGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/orphanrecordings/{orphanId}/media][%d] getOrphanrecordingMediaGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetOrphanrecordingMediaGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrphanrecordingMediaGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
