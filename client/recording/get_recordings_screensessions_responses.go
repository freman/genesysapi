// Code generated by go-swagger; DO NOT EDIT.

package recording

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetRecordingsScreensessionsReader is a Reader for the GetRecordingsScreensessions structure.
type GetRecordingsScreensessionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRecordingsScreensessionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRecordingsScreensessionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRecordingsScreensessionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetRecordingsScreensessionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRecordingsScreensessionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRecordingsScreensessionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetRecordingsScreensessionsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetRecordingsScreensessionsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetRecordingsScreensessionsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetRecordingsScreensessionsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRecordingsScreensessionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetRecordingsScreensessionsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetRecordingsScreensessionsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRecordingsScreensessionsOK creates a GetRecordingsScreensessionsOK with default headers values
func NewGetRecordingsScreensessionsOK() *GetRecordingsScreensessionsOK {
	return &GetRecordingsScreensessionsOK{}
}

/*
GetRecordingsScreensessionsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetRecordingsScreensessionsOK struct {
	Payload *models.ScreenRecordingSessionListing
}

// IsSuccess returns true when this get recordings screensessions o k response has a 2xx status code
func (o *GetRecordingsScreensessionsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get recordings screensessions o k response has a 3xx status code
func (o *GetRecordingsScreensessionsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get recordings screensessions o k response has a 4xx status code
func (o *GetRecordingsScreensessionsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get recordings screensessions o k response has a 5xx status code
func (o *GetRecordingsScreensessionsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get recordings screensessions o k response a status code equal to that given
func (o *GetRecordingsScreensessionsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetRecordingsScreensessionsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/recordings/screensessions][%d] getRecordingsScreensessionsOK  %+v", 200, o.Payload)
}

func (o *GetRecordingsScreensessionsOK) String() string {
	return fmt.Sprintf("[GET /api/v2/recordings/screensessions][%d] getRecordingsScreensessionsOK  %+v", 200, o.Payload)
}

func (o *GetRecordingsScreensessionsOK) GetPayload() *models.ScreenRecordingSessionListing {
	return o.Payload
}

func (o *GetRecordingsScreensessionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ScreenRecordingSessionListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingsScreensessionsBadRequest creates a GetRecordingsScreensessionsBadRequest with default headers values
func NewGetRecordingsScreensessionsBadRequest() *GetRecordingsScreensessionsBadRequest {
	return &GetRecordingsScreensessionsBadRequest{}
}

/*
GetRecordingsScreensessionsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetRecordingsScreensessionsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get recordings screensessions bad request response has a 2xx status code
func (o *GetRecordingsScreensessionsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get recordings screensessions bad request response has a 3xx status code
func (o *GetRecordingsScreensessionsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get recordings screensessions bad request response has a 4xx status code
func (o *GetRecordingsScreensessionsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get recordings screensessions bad request response has a 5xx status code
func (o *GetRecordingsScreensessionsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get recordings screensessions bad request response a status code equal to that given
func (o *GetRecordingsScreensessionsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetRecordingsScreensessionsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/recordings/screensessions][%d] getRecordingsScreensessionsBadRequest  %+v", 400, o.Payload)
}

func (o *GetRecordingsScreensessionsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/recordings/screensessions][%d] getRecordingsScreensessionsBadRequest  %+v", 400, o.Payload)
}

func (o *GetRecordingsScreensessionsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingsScreensessionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingsScreensessionsUnauthorized creates a GetRecordingsScreensessionsUnauthorized with default headers values
func NewGetRecordingsScreensessionsUnauthorized() *GetRecordingsScreensessionsUnauthorized {
	return &GetRecordingsScreensessionsUnauthorized{}
}

/*
GetRecordingsScreensessionsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetRecordingsScreensessionsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get recordings screensessions unauthorized response has a 2xx status code
func (o *GetRecordingsScreensessionsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get recordings screensessions unauthorized response has a 3xx status code
func (o *GetRecordingsScreensessionsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get recordings screensessions unauthorized response has a 4xx status code
func (o *GetRecordingsScreensessionsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get recordings screensessions unauthorized response has a 5xx status code
func (o *GetRecordingsScreensessionsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get recordings screensessions unauthorized response a status code equal to that given
func (o *GetRecordingsScreensessionsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetRecordingsScreensessionsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/recordings/screensessions][%d] getRecordingsScreensessionsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRecordingsScreensessionsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/recordings/screensessions][%d] getRecordingsScreensessionsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRecordingsScreensessionsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingsScreensessionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingsScreensessionsForbidden creates a GetRecordingsScreensessionsForbidden with default headers values
func NewGetRecordingsScreensessionsForbidden() *GetRecordingsScreensessionsForbidden {
	return &GetRecordingsScreensessionsForbidden{}
}

/*
GetRecordingsScreensessionsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetRecordingsScreensessionsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get recordings screensessions forbidden response has a 2xx status code
func (o *GetRecordingsScreensessionsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get recordings screensessions forbidden response has a 3xx status code
func (o *GetRecordingsScreensessionsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get recordings screensessions forbidden response has a 4xx status code
func (o *GetRecordingsScreensessionsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get recordings screensessions forbidden response has a 5xx status code
func (o *GetRecordingsScreensessionsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get recordings screensessions forbidden response a status code equal to that given
func (o *GetRecordingsScreensessionsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetRecordingsScreensessionsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/recordings/screensessions][%d] getRecordingsScreensessionsForbidden  %+v", 403, o.Payload)
}

func (o *GetRecordingsScreensessionsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/recordings/screensessions][%d] getRecordingsScreensessionsForbidden  %+v", 403, o.Payload)
}

func (o *GetRecordingsScreensessionsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingsScreensessionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingsScreensessionsNotFound creates a GetRecordingsScreensessionsNotFound with default headers values
func NewGetRecordingsScreensessionsNotFound() *GetRecordingsScreensessionsNotFound {
	return &GetRecordingsScreensessionsNotFound{}
}

/*
GetRecordingsScreensessionsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetRecordingsScreensessionsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get recordings screensessions not found response has a 2xx status code
func (o *GetRecordingsScreensessionsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get recordings screensessions not found response has a 3xx status code
func (o *GetRecordingsScreensessionsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get recordings screensessions not found response has a 4xx status code
func (o *GetRecordingsScreensessionsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get recordings screensessions not found response has a 5xx status code
func (o *GetRecordingsScreensessionsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get recordings screensessions not found response a status code equal to that given
func (o *GetRecordingsScreensessionsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetRecordingsScreensessionsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/recordings/screensessions][%d] getRecordingsScreensessionsNotFound  %+v", 404, o.Payload)
}

func (o *GetRecordingsScreensessionsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/recordings/screensessions][%d] getRecordingsScreensessionsNotFound  %+v", 404, o.Payload)
}

func (o *GetRecordingsScreensessionsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingsScreensessionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingsScreensessionsRequestTimeout creates a GetRecordingsScreensessionsRequestTimeout with default headers values
func NewGetRecordingsScreensessionsRequestTimeout() *GetRecordingsScreensessionsRequestTimeout {
	return &GetRecordingsScreensessionsRequestTimeout{}
}

/*
GetRecordingsScreensessionsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetRecordingsScreensessionsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get recordings screensessions request timeout response has a 2xx status code
func (o *GetRecordingsScreensessionsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get recordings screensessions request timeout response has a 3xx status code
func (o *GetRecordingsScreensessionsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get recordings screensessions request timeout response has a 4xx status code
func (o *GetRecordingsScreensessionsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get recordings screensessions request timeout response has a 5xx status code
func (o *GetRecordingsScreensessionsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get recordings screensessions request timeout response a status code equal to that given
func (o *GetRecordingsScreensessionsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetRecordingsScreensessionsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/recordings/screensessions][%d] getRecordingsScreensessionsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetRecordingsScreensessionsRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/recordings/screensessions][%d] getRecordingsScreensessionsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetRecordingsScreensessionsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingsScreensessionsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingsScreensessionsRequestEntityTooLarge creates a GetRecordingsScreensessionsRequestEntityTooLarge with default headers values
func NewGetRecordingsScreensessionsRequestEntityTooLarge() *GetRecordingsScreensessionsRequestEntityTooLarge {
	return &GetRecordingsScreensessionsRequestEntityTooLarge{}
}

/*
GetRecordingsScreensessionsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetRecordingsScreensessionsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get recordings screensessions request entity too large response has a 2xx status code
func (o *GetRecordingsScreensessionsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get recordings screensessions request entity too large response has a 3xx status code
func (o *GetRecordingsScreensessionsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get recordings screensessions request entity too large response has a 4xx status code
func (o *GetRecordingsScreensessionsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get recordings screensessions request entity too large response has a 5xx status code
func (o *GetRecordingsScreensessionsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get recordings screensessions request entity too large response a status code equal to that given
func (o *GetRecordingsScreensessionsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetRecordingsScreensessionsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/recordings/screensessions][%d] getRecordingsScreensessionsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetRecordingsScreensessionsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/recordings/screensessions][%d] getRecordingsScreensessionsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetRecordingsScreensessionsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingsScreensessionsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingsScreensessionsUnsupportedMediaType creates a GetRecordingsScreensessionsUnsupportedMediaType with default headers values
func NewGetRecordingsScreensessionsUnsupportedMediaType() *GetRecordingsScreensessionsUnsupportedMediaType {
	return &GetRecordingsScreensessionsUnsupportedMediaType{}
}

/*
GetRecordingsScreensessionsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetRecordingsScreensessionsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get recordings screensessions unsupported media type response has a 2xx status code
func (o *GetRecordingsScreensessionsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get recordings screensessions unsupported media type response has a 3xx status code
func (o *GetRecordingsScreensessionsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get recordings screensessions unsupported media type response has a 4xx status code
func (o *GetRecordingsScreensessionsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get recordings screensessions unsupported media type response has a 5xx status code
func (o *GetRecordingsScreensessionsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get recordings screensessions unsupported media type response a status code equal to that given
func (o *GetRecordingsScreensessionsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetRecordingsScreensessionsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/recordings/screensessions][%d] getRecordingsScreensessionsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetRecordingsScreensessionsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/recordings/screensessions][%d] getRecordingsScreensessionsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetRecordingsScreensessionsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingsScreensessionsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingsScreensessionsTooManyRequests creates a GetRecordingsScreensessionsTooManyRequests with default headers values
func NewGetRecordingsScreensessionsTooManyRequests() *GetRecordingsScreensessionsTooManyRequests {
	return &GetRecordingsScreensessionsTooManyRequests{}
}

/*
GetRecordingsScreensessionsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetRecordingsScreensessionsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get recordings screensessions too many requests response has a 2xx status code
func (o *GetRecordingsScreensessionsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get recordings screensessions too many requests response has a 3xx status code
func (o *GetRecordingsScreensessionsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get recordings screensessions too many requests response has a 4xx status code
func (o *GetRecordingsScreensessionsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get recordings screensessions too many requests response has a 5xx status code
func (o *GetRecordingsScreensessionsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get recordings screensessions too many requests response a status code equal to that given
func (o *GetRecordingsScreensessionsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetRecordingsScreensessionsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/recordings/screensessions][%d] getRecordingsScreensessionsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetRecordingsScreensessionsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/recordings/screensessions][%d] getRecordingsScreensessionsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetRecordingsScreensessionsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingsScreensessionsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingsScreensessionsInternalServerError creates a GetRecordingsScreensessionsInternalServerError with default headers values
func NewGetRecordingsScreensessionsInternalServerError() *GetRecordingsScreensessionsInternalServerError {
	return &GetRecordingsScreensessionsInternalServerError{}
}

/*
GetRecordingsScreensessionsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetRecordingsScreensessionsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get recordings screensessions internal server error response has a 2xx status code
func (o *GetRecordingsScreensessionsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get recordings screensessions internal server error response has a 3xx status code
func (o *GetRecordingsScreensessionsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get recordings screensessions internal server error response has a 4xx status code
func (o *GetRecordingsScreensessionsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get recordings screensessions internal server error response has a 5xx status code
func (o *GetRecordingsScreensessionsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get recordings screensessions internal server error response a status code equal to that given
func (o *GetRecordingsScreensessionsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetRecordingsScreensessionsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/recordings/screensessions][%d] getRecordingsScreensessionsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRecordingsScreensessionsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/recordings/screensessions][%d] getRecordingsScreensessionsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRecordingsScreensessionsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingsScreensessionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingsScreensessionsServiceUnavailable creates a GetRecordingsScreensessionsServiceUnavailable with default headers values
func NewGetRecordingsScreensessionsServiceUnavailable() *GetRecordingsScreensessionsServiceUnavailable {
	return &GetRecordingsScreensessionsServiceUnavailable{}
}

/*
GetRecordingsScreensessionsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetRecordingsScreensessionsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get recordings screensessions service unavailable response has a 2xx status code
func (o *GetRecordingsScreensessionsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get recordings screensessions service unavailable response has a 3xx status code
func (o *GetRecordingsScreensessionsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get recordings screensessions service unavailable response has a 4xx status code
func (o *GetRecordingsScreensessionsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get recordings screensessions service unavailable response has a 5xx status code
func (o *GetRecordingsScreensessionsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get recordings screensessions service unavailable response a status code equal to that given
func (o *GetRecordingsScreensessionsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetRecordingsScreensessionsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/recordings/screensessions][%d] getRecordingsScreensessionsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetRecordingsScreensessionsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/recordings/screensessions][%d] getRecordingsScreensessionsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetRecordingsScreensessionsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingsScreensessionsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingsScreensessionsGatewayTimeout creates a GetRecordingsScreensessionsGatewayTimeout with default headers values
func NewGetRecordingsScreensessionsGatewayTimeout() *GetRecordingsScreensessionsGatewayTimeout {
	return &GetRecordingsScreensessionsGatewayTimeout{}
}

/*
GetRecordingsScreensessionsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetRecordingsScreensessionsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get recordings screensessions gateway timeout response has a 2xx status code
func (o *GetRecordingsScreensessionsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get recordings screensessions gateway timeout response has a 3xx status code
func (o *GetRecordingsScreensessionsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get recordings screensessions gateway timeout response has a 4xx status code
func (o *GetRecordingsScreensessionsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get recordings screensessions gateway timeout response has a 5xx status code
func (o *GetRecordingsScreensessionsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get recordings screensessions gateway timeout response a status code equal to that given
func (o *GetRecordingsScreensessionsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetRecordingsScreensessionsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/recordings/screensessions][%d] getRecordingsScreensessionsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetRecordingsScreensessionsGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/recordings/screensessions][%d] getRecordingsScreensessionsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetRecordingsScreensessionsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingsScreensessionsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
