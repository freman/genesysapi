// Code generated by go-swagger; DO NOT EDIT.

package recording

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetRecordingsScreensessionsReader is a Reader for the GetRecordingsScreensessions structure.
type GetRecordingsScreensessionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRecordingsScreensessionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRecordingsScreensessionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRecordingsScreensessionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetRecordingsScreensessionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRecordingsScreensessionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRecordingsScreensessionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetRecordingsScreensessionsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetRecordingsScreensessionsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetRecordingsScreensessionsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRecordingsScreensessionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetRecordingsScreensessionsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetRecordingsScreensessionsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRecordingsScreensessionsOK creates a GetRecordingsScreensessionsOK with default headers values
func NewGetRecordingsScreensessionsOK() *GetRecordingsScreensessionsOK {
	return &GetRecordingsScreensessionsOK{}
}

/*GetRecordingsScreensessionsOK handles this case with default header values.

successful operation
*/
type GetRecordingsScreensessionsOK struct {
	Payload *models.ScreenRecordingSessionListing
}

func (o *GetRecordingsScreensessionsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/recordings/screensessions][%d] getRecordingsScreensessionsOK  %+v", 200, o.Payload)
}

func (o *GetRecordingsScreensessionsOK) GetPayload() *models.ScreenRecordingSessionListing {
	return o.Payload
}

func (o *GetRecordingsScreensessionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ScreenRecordingSessionListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingsScreensessionsBadRequest creates a GetRecordingsScreensessionsBadRequest with default headers values
func NewGetRecordingsScreensessionsBadRequest() *GetRecordingsScreensessionsBadRequest {
	return &GetRecordingsScreensessionsBadRequest{}
}

/*GetRecordingsScreensessionsBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetRecordingsScreensessionsBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingsScreensessionsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/recordings/screensessions][%d] getRecordingsScreensessionsBadRequest  %+v", 400, o.Payload)
}

func (o *GetRecordingsScreensessionsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingsScreensessionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingsScreensessionsUnauthorized creates a GetRecordingsScreensessionsUnauthorized with default headers values
func NewGetRecordingsScreensessionsUnauthorized() *GetRecordingsScreensessionsUnauthorized {
	return &GetRecordingsScreensessionsUnauthorized{}
}

/*GetRecordingsScreensessionsUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetRecordingsScreensessionsUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingsScreensessionsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/recordings/screensessions][%d] getRecordingsScreensessionsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRecordingsScreensessionsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingsScreensessionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingsScreensessionsForbidden creates a GetRecordingsScreensessionsForbidden with default headers values
func NewGetRecordingsScreensessionsForbidden() *GetRecordingsScreensessionsForbidden {
	return &GetRecordingsScreensessionsForbidden{}
}

/*GetRecordingsScreensessionsForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetRecordingsScreensessionsForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingsScreensessionsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/recordings/screensessions][%d] getRecordingsScreensessionsForbidden  %+v", 403, o.Payload)
}

func (o *GetRecordingsScreensessionsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingsScreensessionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingsScreensessionsNotFound creates a GetRecordingsScreensessionsNotFound with default headers values
func NewGetRecordingsScreensessionsNotFound() *GetRecordingsScreensessionsNotFound {
	return &GetRecordingsScreensessionsNotFound{}
}

/*GetRecordingsScreensessionsNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetRecordingsScreensessionsNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingsScreensessionsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/recordings/screensessions][%d] getRecordingsScreensessionsNotFound  %+v", 404, o.Payload)
}

func (o *GetRecordingsScreensessionsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingsScreensessionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingsScreensessionsRequestEntityTooLarge creates a GetRecordingsScreensessionsRequestEntityTooLarge with default headers values
func NewGetRecordingsScreensessionsRequestEntityTooLarge() *GetRecordingsScreensessionsRequestEntityTooLarge {
	return &GetRecordingsScreensessionsRequestEntityTooLarge{}
}

/*GetRecordingsScreensessionsRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetRecordingsScreensessionsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingsScreensessionsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/recordings/screensessions][%d] getRecordingsScreensessionsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetRecordingsScreensessionsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingsScreensessionsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingsScreensessionsUnsupportedMediaType creates a GetRecordingsScreensessionsUnsupportedMediaType with default headers values
func NewGetRecordingsScreensessionsUnsupportedMediaType() *GetRecordingsScreensessionsUnsupportedMediaType {
	return &GetRecordingsScreensessionsUnsupportedMediaType{}
}

/*GetRecordingsScreensessionsUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetRecordingsScreensessionsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingsScreensessionsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/recordings/screensessions][%d] getRecordingsScreensessionsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetRecordingsScreensessionsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingsScreensessionsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingsScreensessionsTooManyRequests creates a GetRecordingsScreensessionsTooManyRequests with default headers values
func NewGetRecordingsScreensessionsTooManyRequests() *GetRecordingsScreensessionsTooManyRequests {
	return &GetRecordingsScreensessionsTooManyRequests{}
}

/*GetRecordingsScreensessionsTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type GetRecordingsScreensessionsTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingsScreensessionsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/recordings/screensessions][%d] getRecordingsScreensessionsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetRecordingsScreensessionsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingsScreensessionsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingsScreensessionsInternalServerError creates a GetRecordingsScreensessionsInternalServerError with default headers values
func NewGetRecordingsScreensessionsInternalServerError() *GetRecordingsScreensessionsInternalServerError {
	return &GetRecordingsScreensessionsInternalServerError{}
}

/*GetRecordingsScreensessionsInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetRecordingsScreensessionsInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingsScreensessionsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/recordings/screensessions][%d] getRecordingsScreensessionsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRecordingsScreensessionsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingsScreensessionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingsScreensessionsServiceUnavailable creates a GetRecordingsScreensessionsServiceUnavailable with default headers values
func NewGetRecordingsScreensessionsServiceUnavailable() *GetRecordingsScreensessionsServiceUnavailable {
	return &GetRecordingsScreensessionsServiceUnavailable{}
}

/*GetRecordingsScreensessionsServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetRecordingsScreensessionsServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingsScreensessionsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/recordings/screensessions][%d] getRecordingsScreensessionsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetRecordingsScreensessionsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingsScreensessionsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingsScreensessionsGatewayTimeout creates a GetRecordingsScreensessionsGatewayTimeout with default headers values
func NewGetRecordingsScreensessionsGatewayTimeout() *GetRecordingsScreensessionsGatewayTimeout {
	return &GetRecordingsScreensessionsGatewayTimeout{}
}

/*GetRecordingsScreensessionsGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetRecordingsScreensessionsGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingsScreensessionsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/recordings/screensessions][%d] getRecordingsScreensessionsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetRecordingsScreensessionsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingsScreensessionsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
