// Code generated by go-swagger; DO NOT EDIT.

package recording

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostRecordingsDeletionprotectionReader is a Reader for the PostRecordingsDeletionprotection structure.
type PostRecordingsDeletionprotectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostRecordingsDeletionprotectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostRecordingsDeletionprotectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostRecordingsDeletionprotectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostRecordingsDeletionprotectionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostRecordingsDeletionprotectionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostRecordingsDeletionprotectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostRecordingsDeletionprotectionRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostRecordingsDeletionprotectionRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostRecordingsDeletionprotectionUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostRecordingsDeletionprotectionTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostRecordingsDeletionprotectionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostRecordingsDeletionprotectionServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostRecordingsDeletionprotectionGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostRecordingsDeletionprotectionOK creates a PostRecordingsDeletionprotectionOK with default headers values
func NewPostRecordingsDeletionprotectionOK() *PostRecordingsDeletionprotectionOK {
	return &PostRecordingsDeletionprotectionOK{}
}

/*
PostRecordingsDeletionprotectionOK describes a response with status code 200, with default header values.

successful operation
*/
type PostRecordingsDeletionprotectionOK struct {
	Payload []*models.AddressableEntityRef
}

// IsSuccess returns true when this post recordings deletionprotection o k response has a 2xx status code
func (o *PostRecordingsDeletionprotectionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post recordings deletionprotection o k response has a 3xx status code
func (o *PostRecordingsDeletionprotectionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post recordings deletionprotection o k response has a 4xx status code
func (o *PostRecordingsDeletionprotectionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post recordings deletionprotection o k response has a 5xx status code
func (o *PostRecordingsDeletionprotectionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post recordings deletionprotection o k response a status code equal to that given
func (o *PostRecordingsDeletionprotectionOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostRecordingsDeletionprotectionOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/recordings/deletionprotection][%d] postRecordingsDeletionprotectionOK  %+v", 200, o.Payload)
}

func (o *PostRecordingsDeletionprotectionOK) String() string {
	return fmt.Sprintf("[POST /api/v2/recordings/deletionprotection][%d] postRecordingsDeletionprotectionOK  %+v", 200, o.Payload)
}

func (o *PostRecordingsDeletionprotectionOK) GetPayload() []*models.AddressableEntityRef {
	return o.Payload
}

func (o *PostRecordingsDeletionprotectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRecordingsDeletionprotectionBadRequest creates a PostRecordingsDeletionprotectionBadRequest with default headers values
func NewPostRecordingsDeletionprotectionBadRequest() *PostRecordingsDeletionprotectionBadRequest {
	return &PostRecordingsDeletionprotectionBadRequest{}
}

/*
PostRecordingsDeletionprotectionBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostRecordingsDeletionprotectionBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post recordings deletionprotection bad request response has a 2xx status code
func (o *PostRecordingsDeletionprotectionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post recordings deletionprotection bad request response has a 3xx status code
func (o *PostRecordingsDeletionprotectionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post recordings deletionprotection bad request response has a 4xx status code
func (o *PostRecordingsDeletionprotectionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post recordings deletionprotection bad request response has a 5xx status code
func (o *PostRecordingsDeletionprotectionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post recordings deletionprotection bad request response a status code equal to that given
func (o *PostRecordingsDeletionprotectionBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostRecordingsDeletionprotectionBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/recordings/deletionprotection][%d] postRecordingsDeletionprotectionBadRequest  %+v", 400, o.Payload)
}

func (o *PostRecordingsDeletionprotectionBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/recordings/deletionprotection][%d] postRecordingsDeletionprotectionBadRequest  %+v", 400, o.Payload)
}

func (o *PostRecordingsDeletionprotectionBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRecordingsDeletionprotectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRecordingsDeletionprotectionUnauthorized creates a PostRecordingsDeletionprotectionUnauthorized with default headers values
func NewPostRecordingsDeletionprotectionUnauthorized() *PostRecordingsDeletionprotectionUnauthorized {
	return &PostRecordingsDeletionprotectionUnauthorized{}
}

/*
PostRecordingsDeletionprotectionUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostRecordingsDeletionprotectionUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post recordings deletionprotection unauthorized response has a 2xx status code
func (o *PostRecordingsDeletionprotectionUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post recordings deletionprotection unauthorized response has a 3xx status code
func (o *PostRecordingsDeletionprotectionUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post recordings deletionprotection unauthorized response has a 4xx status code
func (o *PostRecordingsDeletionprotectionUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post recordings deletionprotection unauthorized response has a 5xx status code
func (o *PostRecordingsDeletionprotectionUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post recordings deletionprotection unauthorized response a status code equal to that given
func (o *PostRecordingsDeletionprotectionUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostRecordingsDeletionprotectionUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/recordings/deletionprotection][%d] postRecordingsDeletionprotectionUnauthorized  %+v", 401, o.Payload)
}

func (o *PostRecordingsDeletionprotectionUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/recordings/deletionprotection][%d] postRecordingsDeletionprotectionUnauthorized  %+v", 401, o.Payload)
}

func (o *PostRecordingsDeletionprotectionUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRecordingsDeletionprotectionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRecordingsDeletionprotectionForbidden creates a PostRecordingsDeletionprotectionForbidden with default headers values
func NewPostRecordingsDeletionprotectionForbidden() *PostRecordingsDeletionprotectionForbidden {
	return &PostRecordingsDeletionprotectionForbidden{}
}

/*
PostRecordingsDeletionprotectionForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostRecordingsDeletionprotectionForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post recordings deletionprotection forbidden response has a 2xx status code
func (o *PostRecordingsDeletionprotectionForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post recordings deletionprotection forbidden response has a 3xx status code
func (o *PostRecordingsDeletionprotectionForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post recordings deletionprotection forbidden response has a 4xx status code
func (o *PostRecordingsDeletionprotectionForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post recordings deletionprotection forbidden response has a 5xx status code
func (o *PostRecordingsDeletionprotectionForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post recordings deletionprotection forbidden response a status code equal to that given
func (o *PostRecordingsDeletionprotectionForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostRecordingsDeletionprotectionForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/recordings/deletionprotection][%d] postRecordingsDeletionprotectionForbidden  %+v", 403, o.Payload)
}

func (o *PostRecordingsDeletionprotectionForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/recordings/deletionprotection][%d] postRecordingsDeletionprotectionForbidden  %+v", 403, o.Payload)
}

func (o *PostRecordingsDeletionprotectionForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRecordingsDeletionprotectionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRecordingsDeletionprotectionNotFound creates a PostRecordingsDeletionprotectionNotFound with default headers values
func NewPostRecordingsDeletionprotectionNotFound() *PostRecordingsDeletionprotectionNotFound {
	return &PostRecordingsDeletionprotectionNotFound{}
}

/*
PostRecordingsDeletionprotectionNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostRecordingsDeletionprotectionNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post recordings deletionprotection not found response has a 2xx status code
func (o *PostRecordingsDeletionprotectionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post recordings deletionprotection not found response has a 3xx status code
func (o *PostRecordingsDeletionprotectionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post recordings deletionprotection not found response has a 4xx status code
func (o *PostRecordingsDeletionprotectionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post recordings deletionprotection not found response has a 5xx status code
func (o *PostRecordingsDeletionprotectionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post recordings deletionprotection not found response a status code equal to that given
func (o *PostRecordingsDeletionprotectionNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostRecordingsDeletionprotectionNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/recordings/deletionprotection][%d] postRecordingsDeletionprotectionNotFound  %+v", 404, o.Payload)
}

func (o *PostRecordingsDeletionprotectionNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/recordings/deletionprotection][%d] postRecordingsDeletionprotectionNotFound  %+v", 404, o.Payload)
}

func (o *PostRecordingsDeletionprotectionNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRecordingsDeletionprotectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRecordingsDeletionprotectionRequestTimeout creates a PostRecordingsDeletionprotectionRequestTimeout with default headers values
func NewPostRecordingsDeletionprotectionRequestTimeout() *PostRecordingsDeletionprotectionRequestTimeout {
	return &PostRecordingsDeletionprotectionRequestTimeout{}
}

/*
PostRecordingsDeletionprotectionRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostRecordingsDeletionprotectionRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post recordings deletionprotection request timeout response has a 2xx status code
func (o *PostRecordingsDeletionprotectionRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post recordings deletionprotection request timeout response has a 3xx status code
func (o *PostRecordingsDeletionprotectionRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post recordings deletionprotection request timeout response has a 4xx status code
func (o *PostRecordingsDeletionprotectionRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post recordings deletionprotection request timeout response has a 5xx status code
func (o *PostRecordingsDeletionprotectionRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post recordings deletionprotection request timeout response a status code equal to that given
func (o *PostRecordingsDeletionprotectionRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostRecordingsDeletionprotectionRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/recordings/deletionprotection][%d] postRecordingsDeletionprotectionRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostRecordingsDeletionprotectionRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/recordings/deletionprotection][%d] postRecordingsDeletionprotectionRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostRecordingsDeletionprotectionRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRecordingsDeletionprotectionRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRecordingsDeletionprotectionRequestEntityTooLarge creates a PostRecordingsDeletionprotectionRequestEntityTooLarge with default headers values
func NewPostRecordingsDeletionprotectionRequestEntityTooLarge() *PostRecordingsDeletionprotectionRequestEntityTooLarge {
	return &PostRecordingsDeletionprotectionRequestEntityTooLarge{}
}

/*
PostRecordingsDeletionprotectionRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PostRecordingsDeletionprotectionRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post recordings deletionprotection request entity too large response has a 2xx status code
func (o *PostRecordingsDeletionprotectionRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post recordings deletionprotection request entity too large response has a 3xx status code
func (o *PostRecordingsDeletionprotectionRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post recordings deletionprotection request entity too large response has a 4xx status code
func (o *PostRecordingsDeletionprotectionRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post recordings deletionprotection request entity too large response has a 5xx status code
func (o *PostRecordingsDeletionprotectionRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post recordings deletionprotection request entity too large response a status code equal to that given
func (o *PostRecordingsDeletionprotectionRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostRecordingsDeletionprotectionRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/recordings/deletionprotection][%d] postRecordingsDeletionprotectionRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostRecordingsDeletionprotectionRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/recordings/deletionprotection][%d] postRecordingsDeletionprotectionRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostRecordingsDeletionprotectionRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRecordingsDeletionprotectionRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRecordingsDeletionprotectionUnsupportedMediaType creates a PostRecordingsDeletionprotectionUnsupportedMediaType with default headers values
func NewPostRecordingsDeletionprotectionUnsupportedMediaType() *PostRecordingsDeletionprotectionUnsupportedMediaType {
	return &PostRecordingsDeletionprotectionUnsupportedMediaType{}
}

/*
PostRecordingsDeletionprotectionUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostRecordingsDeletionprotectionUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post recordings deletionprotection unsupported media type response has a 2xx status code
func (o *PostRecordingsDeletionprotectionUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post recordings deletionprotection unsupported media type response has a 3xx status code
func (o *PostRecordingsDeletionprotectionUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post recordings deletionprotection unsupported media type response has a 4xx status code
func (o *PostRecordingsDeletionprotectionUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post recordings deletionprotection unsupported media type response has a 5xx status code
func (o *PostRecordingsDeletionprotectionUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post recordings deletionprotection unsupported media type response a status code equal to that given
func (o *PostRecordingsDeletionprotectionUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostRecordingsDeletionprotectionUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/recordings/deletionprotection][%d] postRecordingsDeletionprotectionUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostRecordingsDeletionprotectionUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/recordings/deletionprotection][%d] postRecordingsDeletionprotectionUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostRecordingsDeletionprotectionUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRecordingsDeletionprotectionUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRecordingsDeletionprotectionTooManyRequests creates a PostRecordingsDeletionprotectionTooManyRequests with default headers values
func NewPostRecordingsDeletionprotectionTooManyRequests() *PostRecordingsDeletionprotectionTooManyRequests {
	return &PostRecordingsDeletionprotectionTooManyRequests{}
}

/*
PostRecordingsDeletionprotectionTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostRecordingsDeletionprotectionTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post recordings deletionprotection too many requests response has a 2xx status code
func (o *PostRecordingsDeletionprotectionTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post recordings deletionprotection too many requests response has a 3xx status code
func (o *PostRecordingsDeletionprotectionTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post recordings deletionprotection too many requests response has a 4xx status code
func (o *PostRecordingsDeletionprotectionTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post recordings deletionprotection too many requests response has a 5xx status code
func (o *PostRecordingsDeletionprotectionTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post recordings deletionprotection too many requests response a status code equal to that given
func (o *PostRecordingsDeletionprotectionTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostRecordingsDeletionprotectionTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/recordings/deletionprotection][%d] postRecordingsDeletionprotectionTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostRecordingsDeletionprotectionTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/recordings/deletionprotection][%d] postRecordingsDeletionprotectionTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostRecordingsDeletionprotectionTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRecordingsDeletionprotectionTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRecordingsDeletionprotectionInternalServerError creates a PostRecordingsDeletionprotectionInternalServerError with default headers values
func NewPostRecordingsDeletionprotectionInternalServerError() *PostRecordingsDeletionprotectionInternalServerError {
	return &PostRecordingsDeletionprotectionInternalServerError{}
}

/*
PostRecordingsDeletionprotectionInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostRecordingsDeletionprotectionInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post recordings deletionprotection internal server error response has a 2xx status code
func (o *PostRecordingsDeletionprotectionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post recordings deletionprotection internal server error response has a 3xx status code
func (o *PostRecordingsDeletionprotectionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post recordings deletionprotection internal server error response has a 4xx status code
func (o *PostRecordingsDeletionprotectionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post recordings deletionprotection internal server error response has a 5xx status code
func (o *PostRecordingsDeletionprotectionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post recordings deletionprotection internal server error response a status code equal to that given
func (o *PostRecordingsDeletionprotectionInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostRecordingsDeletionprotectionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/recordings/deletionprotection][%d] postRecordingsDeletionprotectionInternalServerError  %+v", 500, o.Payload)
}

func (o *PostRecordingsDeletionprotectionInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/recordings/deletionprotection][%d] postRecordingsDeletionprotectionInternalServerError  %+v", 500, o.Payload)
}

func (o *PostRecordingsDeletionprotectionInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRecordingsDeletionprotectionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRecordingsDeletionprotectionServiceUnavailable creates a PostRecordingsDeletionprotectionServiceUnavailable with default headers values
func NewPostRecordingsDeletionprotectionServiceUnavailable() *PostRecordingsDeletionprotectionServiceUnavailable {
	return &PostRecordingsDeletionprotectionServiceUnavailable{}
}

/*
PostRecordingsDeletionprotectionServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostRecordingsDeletionprotectionServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post recordings deletionprotection service unavailable response has a 2xx status code
func (o *PostRecordingsDeletionprotectionServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post recordings deletionprotection service unavailable response has a 3xx status code
func (o *PostRecordingsDeletionprotectionServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post recordings deletionprotection service unavailable response has a 4xx status code
func (o *PostRecordingsDeletionprotectionServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post recordings deletionprotection service unavailable response has a 5xx status code
func (o *PostRecordingsDeletionprotectionServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post recordings deletionprotection service unavailable response a status code equal to that given
func (o *PostRecordingsDeletionprotectionServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostRecordingsDeletionprotectionServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/recordings/deletionprotection][%d] postRecordingsDeletionprotectionServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostRecordingsDeletionprotectionServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/recordings/deletionprotection][%d] postRecordingsDeletionprotectionServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostRecordingsDeletionprotectionServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRecordingsDeletionprotectionServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRecordingsDeletionprotectionGatewayTimeout creates a PostRecordingsDeletionprotectionGatewayTimeout with default headers values
func NewPostRecordingsDeletionprotectionGatewayTimeout() *PostRecordingsDeletionprotectionGatewayTimeout {
	return &PostRecordingsDeletionprotectionGatewayTimeout{}
}

/*
PostRecordingsDeletionprotectionGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostRecordingsDeletionprotectionGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post recordings deletionprotection gateway timeout response has a 2xx status code
func (o *PostRecordingsDeletionprotectionGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post recordings deletionprotection gateway timeout response has a 3xx status code
func (o *PostRecordingsDeletionprotectionGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post recordings deletionprotection gateway timeout response has a 4xx status code
func (o *PostRecordingsDeletionprotectionGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post recordings deletionprotection gateway timeout response has a 5xx status code
func (o *PostRecordingsDeletionprotectionGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post recordings deletionprotection gateway timeout response a status code equal to that given
func (o *PostRecordingsDeletionprotectionGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostRecordingsDeletionprotectionGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/recordings/deletionprotection][%d] postRecordingsDeletionprotectionGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostRecordingsDeletionprotectionGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/recordings/deletionprotection][%d] postRecordingsDeletionprotectionGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostRecordingsDeletionprotectionGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRecordingsDeletionprotectionGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
