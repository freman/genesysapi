// Code generated by go-swagger; DO NOT EDIT.

package recording

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetRecordingJobsReader is a Reader for the GetRecordingJobs structure.
type GetRecordingJobsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRecordingJobsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRecordingJobsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRecordingJobsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetRecordingJobsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRecordingJobsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRecordingJobsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetRecordingJobsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetRecordingJobsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetRecordingJobsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRecordingJobsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetRecordingJobsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetRecordingJobsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRecordingJobsOK creates a GetRecordingJobsOK with default headers values
func NewGetRecordingJobsOK() *GetRecordingJobsOK {
	return &GetRecordingJobsOK{}
}

/*GetRecordingJobsOK handles this case with default header values.

successful operation
*/
type GetRecordingJobsOK struct {
	Payload *models.RecordingJobEntityListing
}

func (o *GetRecordingJobsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/recording/jobs][%d] getRecordingJobsOK  %+v", 200, o.Payload)
}

func (o *GetRecordingJobsOK) GetPayload() *models.RecordingJobEntityListing {
	return o.Payload
}

func (o *GetRecordingJobsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RecordingJobEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingJobsBadRequest creates a GetRecordingJobsBadRequest with default headers values
func NewGetRecordingJobsBadRequest() *GetRecordingJobsBadRequest {
	return &GetRecordingJobsBadRequest{}
}

/*GetRecordingJobsBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetRecordingJobsBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingJobsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/recording/jobs][%d] getRecordingJobsBadRequest  %+v", 400, o.Payload)
}

func (o *GetRecordingJobsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingJobsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingJobsUnauthorized creates a GetRecordingJobsUnauthorized with default headers values
func NewGetRecordingJobsUnauthorized() *GetRecordingJobsUnauthorized {
	return &GetRecordingJobsUnauthorized{}
}

/*GetRecordingJobsUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetRecordingJobsUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingJobsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/recording/jobs][%d] getRecordingJobsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRecordingJobsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingJobsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingJobsForbidden creates a GetRecordingJobsForbidden with default headers values
func NewGetRecordingJobsForbidden() *GetRecordingJobsForbidden {
	return &GetRecordingJobsForbidden{}
}

/*GetRecordingJobsForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetRecordingJobsForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingJobsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/recording/jobs][%d] getRecordingJobsForbidden  %+v", 403, o.Payload)
}

func (o *GetRecordingJobsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingJobsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingJobsNotFound creates a GetRecordingJobsNotFound with default headers values
func NewGetRecordingJobsNotFound() *GetRecordingJobsNotFound {
	return &GetRecordingJobsNotFound{}
}

/*GetRecordingJobsNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetRecordingJobsNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingJobsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/recording/jobs][%d] getRecordingJobsNotFound  %+v", 404, o.Payload)
}

func (o *GetRecordingJobsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingJobsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingJobsRequestEntityTooLarge creates a GetRecordingJobsRequestEntityTooLarge with default headers values
func NewGetRecordingJobsRequestEntityTooLarge() *GetRecordingJobsRequestEntityTooLarge {
	return &GetRecordingJobsRequestEntityTooLarge{}
}

/*GetRecordingJobsRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetRecordingJobsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingJobsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/recording/jobs][%d] getRecordingJobsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetRecordingJobsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingJobsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingJobsUnsupportedMediaType creates a GetRecordingJobsUnsupportedMediaType with default headers values
func NewGetRecordingJobsUnsupportedMediaType() *GetRecordingJobsUnsupportedMediaType {
	return &GetRecordingJobsUnsupportedMediaType{}
}

/*GetRecordingJobsUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetRecordingJobsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingJobsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/recording/jobs][%d] getRecordingJobsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetRecordingJobsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingJobsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingJobsTooManyRequests creates a GetRecordingJobsTooManyRequests with default headers values
func NewGetRecordingJobsTooManyRequests() *GetRecordingJobsTooManyRequests {
	return &GetRecordingJobsTooManyRequests{}
}

/*GetRecordingJobsTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type GetRecordingJobsTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingJobsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/recording/jobs][%d] getRecordingJobsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetRecordingJobsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingJobsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingJobsInternalServerError creates a GetRecordingJobsInternalServerError with default headers values
func NewGetRecordingJobsInternalServerError() *GetRecordingJobsInternalServerError {
	return &GetRecordingJobsInternalServerError{}
}

/*GetRecordingJobsInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetRecordingJobsInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingJobsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/recording/jobs][%d] getRecordingJobsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRecordingJobsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingJobsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingJobsServiceUnavailable creates a GetRecordingJobsServiceUnavailable with default headers values
func NewGetRecordingJobsServiceUnavailable() *GetRecordingJobsServiceUnavailable {
	return &GetRecordingJobsServiceUnavailable{}
}

/*GetRecordingJobsServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetRecordingJobsServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingJobsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/recording/jobs][%d] getRecordingJobsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetRecordingJobsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingJobsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingJobsGatewayTimeout creates a GetRecordingJobsGatewayTimeout with default headers values
func NewGetRecordingJobsGatewayTimeout() *GetRecordingJobsGatewayTimeout {
	return &GetRecordingJobsGatewayTimeout{}
}

/*GetRecordingJobsGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetRecordingJobsGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingJobsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/recording/jobs][%d] getRecordingJobsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetRecordingJobsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingJobsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
