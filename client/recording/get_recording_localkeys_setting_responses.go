// Code generated by go-swagger; DO NOT EDIT.

package recording

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetRecordingLocalkeysSettingReader is a Reader for the GetRecordingLocalkeysSetting structure.
type GetRecordingLocalkeysSettingReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRecordingLocalkeysSettingReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRecordingLocalkeysSettingOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRecordingLocalkeysSettingBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetRecordingLocalkeysSettingUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRecordingLocalkeysSettingForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRecordingLocalkeysSettingNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetRecordingLocalkeysSettingRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetRecordingLocalkeysSettingUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetRecordingLocalkeysSettingTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRecordingLocalkeysSettingInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetRecordingLocalkeysSettingServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetRecordingLocalkeysSettingGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRecordingLocalkeysSettingOK creates a GetRecordingLocalkeysSettingOK with default headers values
func NewGetRecordingLocalkeysSettingOK() *GetRecordingLocalkeysSettingOK {
	return &GetRecordingLocalkeysSettingOK{}
}

/*GetRecordingLocalkeysSettingOK handles this case with default header values.

successful operation
*/
type GetRecordingLocalkeysSettingOK struct {
	Payload *models.LocalEncryptionConfiguration
}

func (o *GetRecordingLocalkeysSettingOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/recording/localkeys/settings/{settingsId}][%d] getRecordingLocalkeysSettingOK  %+v", 200, o.Payload)
}

func (o *GetRecordingLocalkeysSettingOK) GetPayload() *models.LocalEncryptionConfiguration {
	return o.Payload
}

func (o *GetRecordingLocalkeysSettingOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LocalEncryptionConfiguration)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingLocalkeysSettingBadRequest creates a GetRecordingLocalkeysSettingBadRequest with default headers values
func NewGetRecordingLocalkeysSettingBadRequest() *GetRecordingLocalkeysSettingBadRequest {
	return &GetRecordingLocalkeysSettingBadRequest{}
}

/*GetRecordingLocalkeysSettingBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetRecordingLocalkeysSettingBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingLocalkeysSettingBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/recording/localkeys/settings/{settingsId}][%d] getRecordingLocalkeysSettingBadRequest  %+v", 400, o.Payload)
}

func (o *GetRecordingLocalkeysSettingBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingLocalkeysSettingBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingLocalkeysSettingUnauthorized creates a GetRecordingLocalkeysSettingUnauthorized with default headers values
func NewGetRecordingLocalkeysSettingUnauthorized() *GetRecordingLocalkeysSettingUnauthorized {
	return &GetRecordingLocalkeysSettingUnauthorized{}
}

/*GetRecordingLocalkeysSettingUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetRecordingLocalkeysSettingUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingLocalkeysSettingUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/recording/localkeys/settings/{settingsId}][%d] getRecordingLocalkeysSettingUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRecordingLocalkeysSettingUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingLocalkeysSettingUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingLocalkeysSettingForbidden creates a GetRecordingLocalkeysSettingForbidden with default headers values
func NewGetRecordingLocalkeysSettingForbidden() *GetRecordingLocalkeysSettingForbidden {
	return &GetRecordingLocalkeysSettingForbidden{}
}

/*GetRecordingLocalkeysSettingForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetRecordingLocalkeysSettingForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingLocalkeysSettingForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/recording/localkeys/settings/{settingsId}][%d] getRecordingLocalkeysSettingForbidden  %+v", 403, o.Payload)
}

func (o *GetRecordingLocalkeysSettingForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingLocalkeysSettingForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingLocalkeysSettingNotFound creates a GetRecordingLocalkeysSettingNotFound with default headers values
func NewGetRecordingLocalkeysSettingNotFound() *GetRecordingLocalkeysSettingNotFound {
	return &GetRecordingLocalkeysSettingNotFound{}
}

/*GetRecordingLocalkeysSettingNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetRecordingLocalkeysSettingNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingLocalkeysSettingNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/recording/localkeys/settings/{settingsId}][%d] getRecordingLocalkeysSettingNotFound  %+v", 404, o.Payload)
}

func (o *GetRecordingLocalkeysSettingNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingLocalkeysSettingNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingLocalkeysSettingRequestEntityTooLarge creates a GetRecordingLocalkeysSettingRequestEntityTooLarge with default headers values
func NewGetRecordingLocalkeysSettingRequestEntityTooLarge() *GetRecordingLocalkeysSettingRequestEntityTooLarge {
	return &GetRecordingLocalkeysSettingRequestEntityTooLarge{}
}

/*GetRecordingLocalkeysSettingRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetRecordingLocalkeysSettingRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingLocalkeysSettingRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/recording/localkeys/settings/{settingsId}][%d] getRecordingLocalkeysSettingRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetRecordingLocalkeysSettingRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingLocalkeysSettingRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingLocalkeysSettingUnsupportedMediaType creates a GetRecordingLocalkeysSettingUnsupportedMediaType with default headers values
func NewGetRecordingLocalkeysSettingUnsupportedMediaType() *GetRecordingLocalkeysSettingUnsupportedMediaType {
	return &GetRecordingLocalkeysSettingUnsupportedMediaType{}
}

/*GetRecordingLocalkeysSettingUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetRecordingLocalkeysSettingUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingLocalkeysSettingUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/recording/localkeys/settings/{settingsId}][%d] getRecordingLocalkeysSettingUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetRecordingLocalkeysSettingUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingLocalkeysSettingUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingLocalkeysSettingTooManyRequests creates a GetRecordingLocalkeysSettingTooManyRequests with default headers values
func NewGetRecordingLocalkeysSettingTooManyRequests() *GetRecordingLocalkeysSettingTooManyRequests {
	return &GetRecordingLocalkeysSettingTooManyRequests{}
}

/*GetRecordingLocalkeysSettingTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type GetRecordingLocalkeysSettingTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingLocalkeysSettingTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/recording/localkeys/settings/{settingsId}][%d] getRecordingLocalkeysSettingTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetRecordingLocalkeysSettingTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingLocalkeysSettingTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingLocalkeysSettingInternalServerError creates a GetRecordingLocalkeysSettingInternalServerError with default headers values
func NewGetRecordingLocalkeysSettingInternalServerError() *GetRecordingLocalkeysSettingInternalServerError {
	return &GetRecordingLocalkeysSettingInternalServerError{}
}

/*GetRecordingLocalkeysSettingInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetRecordingLocalkeysSettingInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingLocalkeysSettingInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/recording/localkeys/settings/{settingsId}][%d] getRecordingLocalkeysSettingInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRecordingLocalkeysSettingInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingLocalkeysSettingInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingLocalkeysSettingServiceUnavailable creates a GetRecordingLocalkeysSettingServiceUnavailable with default headers values
func NewGetRecordingLocalkeysSettingServiceUnavailable() *GetRecordingLocalkeysSettingServiceUnavailable {
	return &GetRecordingLocalkeysSettingServiceUnavailable{}
}

/*GetRecordingLocalkeysSettingServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetRecordingLocalkeysSettingServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingLocalkeysSettingServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/recording/localkeys/settings/{settingsId}][%d] getRecordingLocalkeysSettingServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetRecordingLocalkeysSettingServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingLocalkeysSettingServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecordingLocalkeysSettingGatewayTimeout creates a GetRecordingLocalkeysSettingGatewayTimeout with default headers values
func NewGetRecordingLocalkeysSettingGatewayTimeout() *GetRecordingLocalkeysSettingGatewayTimeout {
	return &GetRecordingLocalkeysSettingGatewayTimeout{}
}

/*GetRecordingLocalkeysSettingGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetRecordingLocalkeysSettingGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetRecordingLocalkeysSettingGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/recording/localkeys/settings/{settingsId}][%d] getRecordingLocalkeysSettingGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetRecordingLocalkeysSettingGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRecordingLocalkeysSettingGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
