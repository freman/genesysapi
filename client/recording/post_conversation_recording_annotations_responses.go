// Code generated by go-swagger; DO NOT EDIT.

package recording

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostConversationRecordingAnnotationsReader is a Reader for the PostConversationRecordingAnnotations structure.
type PostConversationRecordingAnnotationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostConversationRecordingAnnotationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostConversationRecordingAnnotationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostConversationRecordingAnnotationsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostConversationRecordingAnnotationsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostConversationRecordingAnnotationsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostConversationRecordingAnnotationsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostConversationRecordingAnnotationsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostConversationRecordingAnnotationsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostConversationRecordingAnnotationsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostConversationRecordingAnnotationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostConversationRecordingAnnotationsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostConversationRecordingAnnotationsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostConversationRecordingAnnotationsOK creates a PostConversationRecordingAnnotationsOK with default headers values
func NewPostConversationRecordingAnnotationsOK() *PostConversationRecordingAnnotationsOK {
	return &PostConversationRecordingAnnotationsOK{}
}

/*PostConversationRecordingAnnotationsOK handles this case with default header values.

successful operation
*/
type PostConversationRecordingAnnotationsOK struct {
	Payload *models.Annotation
}

func (o *PostConversationRecordingAnnotationsOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations][%d] postConversationRecordingAnnotationsOK  %+v", 200, o.Payload)
}

func (o *PostConversationRecordingAnnotationsOK) GetPayload() *models.Annotation {
	return o.Payload
}

func (o *PostConversationRecordingAnnotationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Annotation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationRecordingAnnotationsBadRequest creates a PostConversationRecordingAnnotationsBadRequest with default headers values
func NewPostConversationRecordingAnnotationsBadRequest() *PostConversationRecordingAnnotationsBadRequest {
	return &PostConversationRecordingAnnotationsBadRequest{}
}

/*PostConversationRecordingAnnotationsBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostConversationRecordingAnnotationsBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PostConversationRecordingAnnotationsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations][%d] postConversationRecordingAnnotationsBadRequest  %+v", 400, o.Payload)
}

func (o *PostConversationRecordingAnnotationsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationRecordingAnnotationsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationRecordingAnnotationsUnauthorized creates a PostConversationRecordingAnnotationsUnauthorized with default headers values
func NewPostConversationRecordingAnnotationsUnauthorized() *PostConversationRecordingAnnotationsUnauthorized {
	return &PostConversationRecordingAnnotationsUnauthorized{}
}

/*PostConversationRecordingAnnotationsUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PostConversationRecordingAnnotationsUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PostConversationRecordingAnnotationsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations][%d] postConversationRecordingAnnotationsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostConversationRecordingAnnotationsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationRecordingAnnotationsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationRecordingAnnotationsForbidden creates a PostConversationRecordingAnnotationsForbidden with default headers values
func NewPostConversationRecordingAnnotationsForbidden() *PostConversationRecordingAnnotationsForbidden {
	return &PostConversationRecordingAnnotationsForbidden{}
}

/*PostConversationRecordingAnnotationsForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PostConversationRecordingAnnotationsForbidden struct {
	Payload *models.ErrorBody
}

func (o *PostConversationRecordingAnnotationsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations][%d] postConversationRecordingAnnotationsForbidden  %+v", 403, o.Payload)
}

func (o *PostConversationRecordingAnnotationsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationRecordingAnnotationsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationRecordingAnnotationsNotFound creates a PostConversationRecordingAnnotationsNotFound with default headers values
func NewPostConversationRecordingAnnotationsNotFound() *PostConversationRecordingAnnotationsNotFound {
	return &PostConversationRecordingAnnotationsNotFound{}
}

/*PostConversationRecordingAnnotationsNotFound handles this case with default header values.

The requested resource was not found.
*/
type PostConversationRecordingAnnotationsNotFound struct {
	Payload *models.ErrorBody
}

func (o *PostConversationRecordingAnnotationsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations][%d] postConversationRecordingAnnotationsNotFound  %+v", 404, o.Payload)
}

func (o *PostConversationRecordingAnnotationsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationRecordingAnnotationsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationRecordingAnnotationsRequestEntityTooLarge creates a PostConversationRecordingAnnotationsRequestEntityTooLarge with default headers values
func NewPostConversationRecordingAnnotationsRequestEntityTooLarge() *PostConversationRecordingAnnotationsRequestEntityTooLarge {
	return &PostConversationRecordingAnnotationsRequestEntityTooLarge{}
}

/*PostConversationRecordingAnnotationsRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type PostConversationRecordingAnnotationsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PostConversationRecordingAnnotationsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations][%d] postConversationRecordingAnnotationsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostConversationRecordingAnnotationsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationRecordingAnnotationsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationRecordingAnnotationsUnsupportedMediaType creates a PostConversationRecordingAnnotationsUnsupportedMediaType with default headers values
func NewPostConversationRecordingAnnotationsUnsupportedMediaType() *PostConversationRecordingAnnotationsUnsupportedMediaType {
	return &PostConversationRecordingAnnotationsUnsupportedMediaType{}
}

/*PostConversationRecordingAnnotationsUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostConversationRecordingAnnotationsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PostConversationRecordingAnnotationsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations][%d] postConversationRecordingAnnotationsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostConversationRecordingAnnotationsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationRecordingAnnotationsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationRecordingAnnotationsTooManyRequests creates a PostConversationRecordingAnnotationsTooManyRequests with default headers values
func NewPostConversationRecordingAnnotationsTooManyRequests() *PostConversationRecordingAnnotationsTooManyRequests {
	return &PostConversationRecordingAnnotationsTooManyRequests{}
}

/*PostConversationRecordingAnnotationsTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type PostConversationRecordingAnnotationsTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PostConversationRecordingAnnotationsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations][%d] postConversationRecordingAnnotationsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostConversationRecordingAnnotationsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationRecordingAnnotationsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationRecordingAnnotationsInternalServerError creates a PostConversationRecordingAnnotationsInternalServerError with default headers values
func NewPostConversationRecordingAnnotationsInternalServerError() *PostConversationRecordingAnnotationsInternalServerError {
	return &PostConversationRecordingAnnotationsInternalServerError{}
}

/*PostConversationRecordingAnnotationsInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostConversationRecordingAnnotationsInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PostConversationRecordingAnnotationsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations][%d] postConversationRecordingAnnotationsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostConversationRecordingAnnotationsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationRecordingAnnotationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationRecordingAnnotationsServiceUnavailable creates a PostConversationRecordingAnnotationsServiceUnavailable with default headers values
func NewPostConversationRecordingAnnotationsServiceUnavailable() *PostConversationRecordingAnnotationsServiceUnavailable {
	return &PostConversationRecordingAnnotationsServiceUnavailable{}
}

/*PostConversationRecordingAnnotationsServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostConversationRecordingAnnotationsServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PostConversationRecordingAnnotationsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations][%d] postConversationRecordingAnnotationsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostConversationRecordingAnnotationsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationRecordingAnnotationsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationRecordingAnnotationsGatewayTimeout creates a PostConversationRecordingAnnotationsGatewayTimeout with default headers values
func NewPostConversationRecordingAnnotationsGatewayTimeout() *PostConversationRecordingAnnotationsGatewayTimeout {
	return &PostConversationRecordingAnnotationsGatewayTimeout{}
}

/*PostConversationRecordingAnnotationsGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PostConversationRecordingAnnotationsGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostConversationRecordingAnnotationsGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations][%d] postConversationRecordingAnnotationsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostConversationRecordingAnnotationsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationRecordingAnnotationsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
