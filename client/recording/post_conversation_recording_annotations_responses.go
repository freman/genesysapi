// Code generated by go-swagger; DO NOT EDIT.

package recording

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostConversationRecordingAnnotationsReader is a Reader for the PostConversationRecordingAnnotations structure.
type PostConversationRecordingAnnotationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostConversationRecordingAnnotationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostConversationRecordingAnnotationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostConversationRecordingAnnotationsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostConversationRecordingAnnotationsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostConversationRecordingAnnotationsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostConversationRecordingAnnotationsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostConversationRecordingAnnotationsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostConversationRecordingAnnotationsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostConversationRecordingAnnotationsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostConversationRecordingAnnotationsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostConversationRecordingAnnotationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostConversationRecordingAnnotationsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostConversationRecordingAnnotationsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostConversationRecordingAnnotationsOK creates a PostConversationRecordingAnnotationsOK with default headers values
func NewPostConversationRecordingAnnotationsOK() *PostConversationRecordingAnnotationsOK {
	return &PostConversationRecordingAnnotationsOK{}
}

/*
PostConversationRecordingAnnotationsOK describes a response with status code 200, with default header values.

successful operation
*/
type PostConversationRecordingAnnotationsOK struct {
	Payload *models.Annotation
}

// IsSuccess returns true when this post conversation recording annotations o k response has a 2xx status code
func (o *PostConversationRecordingAnnotationsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post conversation recording annotations o k response has a 3xx status code
func (o *PostConversationRecordingAnnotationsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversation recording annotations o k response has a 4xx status code
func (o *PostConversationRecordingAnnotationsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversation recording annotations o k response has a 5xx status code
func (o *PostConversationRecordingAnnotationsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversation recording annotations o k response a status code equal to that given
func (o *PostConversationRecordingAnnotationsOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostConversationRecordingAnnotationsOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations][%d] postConversationRecordingAnnotationsOK  %+v", 200, o.Payload)
}

func (o *PostConversationRecordingAnnotationsOK) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations][%d] postConversationRecordingAnnotationsOK  %+v", 200, o.Payload)
}

func (o *PostConversationRecordingAnnotationsOK) GetPayload() *models.Annotation {
	return o.Payload
}

func (o *PostConversationRecordingAnnotationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Annotation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationRecordingAnnotationsBadRequest creates a PostConversationRecordingAnnotationsBadRequest with default headers values
func NewPostConversationRecordingAnnotationsBadRequest() *PostConversationRecordingAnnotationsBadRequest {
	return &PostConversationRecordingAnnotationsBadRequest{}
}

/*
PostConversationRecordingAnnotationsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostConversationRecordingAnnotationsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversation recording annotations bad request response has a 2xx status code
func (o *PostConversationRecordingAnnotationsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversation recording annotations bad request response has a 3xx status code
func (o *PostConversationRecordingAnnotationsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversation recording annotations bad request response has a 4xx status code
func (o *PostConversationRecordingAnnotationsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversation recording annotations bad request response has a 5xx status code
func (o *PostConversationRecordingAnnotationsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversation recording annotations bad request response a status code equal to that given
func (o *PostConversationRecordingAnnotationsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostConversationRecordingAnnotationsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations][%d] postConversationRecordingAnnotationsBadRequest  %+v", 400, o.Payload)
}

func (o *PostConversationRecordingAnnotationsBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations][%d] postConversationRecordingAnnotationsBadRequest  %+v", 400, o.Payload)
}

func (o *PostConversationRecordingAnnotationsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationRecordingAnnotationsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationRecordingAnnotationsUnauthorized creates a PostConversationRecordingAnnotationsUnauthorized with default headers values
func NewPostConversationRecordingAnnotationsUnauthorized() *PostConversationRecordingAnnotationsUnauthorized {
	return &PostConversationRecordingAnnotationsUnauthorized{}
}

/*
PostConversationRecordingAnnotationsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostConversationRecordingAnnotationsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversation recording annotations unauthorized response has a 2xx status code
func (o *PostConversationRecordingAnnotationsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversation recording annotations unauthorized response has a 3xx status code
func (o *PostConversationRecordingAnnotationsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversation recording annotations unauthorized response has a 4xx status code
func (o *PostConversationRecordingAnnotationsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversation recording annotations unauthorized response has a 5xx status code
func (o *PostConversationRecordingAnnotationsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversation recording annotations unauthorized response a status code equal to that given
func (o *PostConversationRecordingAnnotationsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostConversationRecordingAnnotationsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations][%d] postConversationRecordingAnnotationsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostConversationRecordingAnnotationsUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations][%d] postConversationRecordingAnnotationsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostConversationRecordingAnnotationsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationRecordingAnnotationsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationRecordingAnnotationsForbidden creates a PostConversationRecordingAnnotationsForbidden with default headers values
func NewPostConversationRecordingAnnotationsForbidden() *PostConversationRecordingAnnotationsForbidden {
	return &PostConversationRecordingAnnotationsForbidden{}
}

/*
PostConversationRecordingAnnotationsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostConversationRecordingAnnotationsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversation recording annotations forbidden response has a 2xx status code
func (o *PostConversationRecordingAnnotationsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversation recording annotations forbidden response has a 3xx status code
func (o *PostConversationRecordingAnnotationsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversation recording annotations forbidden response has a 4xx status code
func (o *PostConversationRecordingAnnotationsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversation recording annotations forbidden response has a 5xx status code
func (o *PostConversationRecordingAnnotationsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversation recording annotations forbidden response a status code equal to that given
func (o *PostConversationRecordingAnnotationsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostConversationRecordingAnnotationsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations][%d] postConversationRecordingAnnotationsForbidden  %+v", 403, o.Payload)
}

func (o *PostConversationRecordingAnnotationsForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations][%d] postConversationRecordingAnnotationsForbidden  %+v", 403, o.Payload)
}

func (o *PostConversationRecordingAnnotationsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationRecordingAnnotationsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationRecordingAnnotationsNotFound creates a PostConversationRecordingAnnotationsNotFound with default headers values
func NewPostConversationRecordingAnnotationsNotFound() *PostConversationRecordingAnnotationsNotFound {
	return &PostConversationRecordingAnnotationsNotFound{}
}

/*
PostConversationRecordingAnnotationsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostConversationRecordingAnnotationsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversation recording annotations not found response has a 2xx status code
func (o *PostConversationRecordingAnnotationsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversation recording annotations not found response has a 3xx status code
func (o *PostConversationRecordingAnnotationsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversation recording annotations not found response has a 4xx status code
func (o *PostConversationRecordingAnnotationsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversation recording annotations not found response has a 5xx status code
func (o *PostConversationRecordingAnnotationsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversation recording annotations not found response a status code equal to that given
func (o *PostConversationRecordingAnnotationsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostConversationRecordingAnnotationsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations][%d] postConversationRecordingAnnotationsNotFound  %+v", 404, o.Payload)
}

func (o *PostConversationRecordingAnnotationsNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations][%d] postConversationRecordingAnnotationsNotFound  %+v", 404, o.Payload)
}

func (o *PostConversationRecordingAnnotationsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationRecordingAnnotationsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationRecordingAnnotationsRequestTimeout creates a PostConversationRecordingAnnotationsRequestTimeout with default headers values
func NewPostConversationRecordingAnnotationsRequestTimeout() *PostConversationRecordingAnnotationsRequestTimeout {
	return &PostConversationRecordingAnnotationsRequestTimeout{}
}

/*
PostConversationRecordingAnnotationsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostConversationRecordingAnnotationsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversation recording annotations request timeout response has a 2xx status code
func (o *PostConversationRecordingAnnotationsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversation recording annotations request timeout response has a 3xx status code
func (o *PostConversationRecordingAnnotationsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversation recording annotations request timeout response has a 4xx status code
func (o *PostConversationRecordingAnnotationsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversation recording annotations request timeout response has a 5xx status code
func (o *PostConversationRecordingAnnotationsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversation recording annotations request timeout response a status code equal to that given
func (o *PostConversationRecordingAnnotationsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostConversationRecordingAnnotationsRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations][%d] postConversationRecordingAnnotationsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostConversationRecordingAnnotationsRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations][%d] postConversationRecordingAnnotationsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostConversationRecordingAnnotationsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationRecordingAnnotationsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationRecordingAnnotationsRequestEntityTooLarge creates a PostConversationRecordingAnnotationsRequestEntityTooLarge with default headers values
func NewPostConversationRecordingAnnotationsRequestEntityTooLarge() *PostConversationRecordingAnnotationsRequestEntityTooLarge {
	return &PostConversationRecordingAnnotationsRequestEntityTooLarge{}
}

/*
PostConversationRecordingAnnotationsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PostConversationRecordingAnnotationsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversation recording annotations request entity too large response has a 2xx status code
func (o *PostConversationRecordingAnnotationsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversation recording annotations request entity too large response has a 3xx status code
func (o *PostConversationRecordingAnnotationsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversation recording annotations request entity too large response has a 4xx status code
func (o *PostConversationRecordingAnnotationsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversation recording annotations request entity too large response has a 5xx status code
func (o *PostConversationRecordingAnnotationsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversation recording annotations request entity too large response a status code equal to that given
func (o *PostConversationRecordingAnnotationsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostConversationRecordingAnnotationsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations][%d] postConversationRecordingAnnotationsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostConversationRecordingAnnotationsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations][%d] postConversationRecordingAnnotationsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostConversationRecordingAnnotationsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationRecordingAnnotationsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationRecordingAnnotationsUnsupportedMediaType creates a PostConversationRecordingAnnotationsUnsupportedMediaType with default headers values
func NewPostConversationRecordingAnnotationsUnsupportedMediaType() *PostConversationRecordingAnnotationsUnsupportedMediaType {
	return &PostConversationRecordingAnnotationsUnsupportedMediaType{}
}

/*
PostConversationRecordingAnnotationsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostConversationRecordingAnnotationsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversation recording annotations unsupported media type response has a 2xx status code
func (o *PostConversationRecordingAnnotationsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversation recording annotations unsupported media type response has a 3xx status code
func (o *PostConversationRecordingAnnotationsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversation recording annotations unsupported media type response has a 4xx status code
func (o *PostConversationRecordingAnnotationsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversation recording annotations unsupported media type response has a 5xx status code
func (o *PostConversationRecordingAnnotationsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversation recording annotations unsupported media type response a status code equal to that given
func (o *PostConversationRecordingAnnotationsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostConversationRecordingAnnotationsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations][%d] postConversationRecordingAnnotationsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostConversationRecordingAnnotationsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations][%d] postConversationRecordingAnnotationsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostConversationRecordingAnnotationsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationRecordingAnnotationsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationRecordingAnnotationsTooManyRequests creates a PostConversationRecordingAnnotationsTooManyRequests with default headers values
func NewPostConversationRecordingAnnotationsTooManyRequests() *PostConversationRecordingAnnotationsTooManyRequests {
	return &PostConversationRecordingAnnotationsTooManyRequests{}
}

/*
PostConversationRecordingAnnotationsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostConversationRecordingAnnotationsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversation recording annotations too many requests response has a 2xx status code
func (o *PostConversationRecordingAnnotationsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversation recording annotations too many requests response has a 3xx status code
func (o *PostConversationRecordingAnnotationsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversation recording annotations too many requests response has a 4xx status code
func (o *PostConversationRecordingAnnotationsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post conversation recording annotations too many requests response has a 5xx status code
func (o *PostConversationRecordingAnnotationsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post conversation recording annotations too many requests response a status code equal to that given
func (o *PostConversationRecordingAnnotationsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostConversationRecordingAnnotationsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations][%d] postConversationRecordingAnnotationsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostConversationRecordingAnnotationsTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations][%d] postConversationRecordingAnnotationsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostConversationRecordingAnnotationsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationRecordingAnnotationsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationRecordingAnnotationsInternalServerError creates a PostConversationRecordingAnnotationsInternalServerError with default headers values
func NewPostConversationRecordingAnnotationsInternalServerError() *PostConversationRecordingAnnotationsInternalServerError {
	return &PostConversationRecordingAnnotationsInternalServerError{}
}

/*
PostConversationRecordingAnnotationsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostConversationRecordingAnnotationsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversation recording annotations internal server error response has a 2xx status code
func (o *PostConversationRecordingAnnotationsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversation recording annotations internal server error response has a 3xx status code
func (o *PostConversationRecordingAnnotationsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversation recording annotations internal server error response has a 4xx status code
func (o *PostConversationRecordingAnnotationsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversation recording annotations internal server error response has a 5xx status code
func (o *PostConversationRecordingAnnotationsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversation recording annotations internal server error response a status code equal to that given
func (o *PostConversationRecordingAnnotationsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostConversationRecordingAnnotationsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations][%d] postConversationRecordingAnnotationsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostConversationRecordingAnnotationsInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations][%d] postConversationRecordingAnnotationsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostConversationRecordingAnnotationsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationRecordingAnnotationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationRecordingAnnotationsServiceUnavailable creates a PostConversationRecordingAnnotationsServiceUnavailable with default headers values
func NewPostConversationRecordingAnnotationsServiceUnavailable() *PostConversationRecordingAnnotationsServiceUnavailable {
	return &PostConversationRecordingAnnotationsServiceUnavailable{}
}

/*
PostConversationRecordingAnnotationsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostConversationRecordingAnnotationsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversation recording annotations service unavailable response has a 2xx status code
func (o *PostConversationRecordingAnnotationsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversation recording annotations service unavailable response has a 3xx status code
func (o *PostConversationRecordingAnnotationsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversation recording annotations service unavailable response has a 4xx status code
func (o *PostConversationRecordingAnnotationsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversation recording annotations service unavailable response has a 5xx status code
func (o *PostConversationRecordingAnnotationsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversation recording annotations service unavailable response a status code equal to that given
func (o *PostConversationRecordingAnnotationsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostConversationRecordingAnnotationsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations][%d] postConversationRecordingAnnotationsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostConversationRecordingAnnotationsServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations][%d] postConversationRecordingAnnotationsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostConversationRecordingAnnotationsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationRecordingAnnotationsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConversationRecordingAnnotationsGatewayTimeout creates a PostConversationRecordingAnnotationsGatewayTimeout with default headers values
func NewPostConversationRecordingAnnotationsGatewayTimeout() *PostConversationRecordingAnnotationsGatewayTimeout {
	return &PostConversationRecordingAnnotationsGatewayTimeout{}
}

/*
PostConversationRecordingAnnotationsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostConversationRecordingAnnotationsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post conversation recording annotations gateway timeout response has a 2xx status code
func (o *PostConversationRecordingAnnotationsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post conversation recording annotations gateway timeout response has a 3xx status code
func (o *PostConversationRecordingAnnotationsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post conversation recording annotations gateway timeout response has a 4xx status code
func (o *PostConversationRecordingAnnotationsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post conversation recording annotations gateway timeout response has a 5xx status code
func (o *PostConversationRecordingAnnotationsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post conversation recording annotations gateway timeout response a status code equal to that given
func (o *PostConversationRecordingAnnotationsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostConversationRecordingAnnotationsGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations][%d] postConversationRecordingAnnotationsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostConversationRecordingAnnotationsGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations][%d] postConversationRecordingAnnotationsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostConversationRecordingAnnotationsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostConversationRecordingAnnotationsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
