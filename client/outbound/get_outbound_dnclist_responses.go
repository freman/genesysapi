// Code generated by go-swagger; DO NOT EDIT.

package outbound

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetOutboundDnclistReader is a Reader for the GetOutboundDnclist structure.
type GetOutboundDnclistReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOutboundDnclistReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOutboundDnclistOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOutboundDnclistBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetOutboundDnclistUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetOutboundDnclistForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOutboundDnclistNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetOutboundDnclistRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetOutboundDnclistRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetOutboundDnclistUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetOutboundDnclistTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOutboundDnclistInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetOutboundDnclistServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetOutboundDnclistGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetOutboundDnclistOK creates a GetOutboundDnclistOK with default headers values
func NewGetOutboundDnclistOK() *GetOutboundDnclistOK {
	return &GetOutboundDnclistOK{}
}

/*GetOutboundDnclistOK handles this case with default header values.

successful operation
*/
type GetOutboundDnclistOK struct {
	Payload *models.DncList
}

func (o *GetOutboundDnclistOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/dnclists/{dncListId}][%d] getOutboundDnclistOK  %+v", 200, o.Payload)
}

func (o *GetOutboundDnclistOK) GetPayload() *models.DncList {
	return o.Payload
}

func (o *GetOutboundDnclistOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DncList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundDnclistBadRequest creates a GetOutboundDnclistBadRequest with default headers values
func NewGetOutboundDnclistBadRequest() *GetOutboundDnclistBadRequest {
	return &GetOutboundDnclistBadRequest{}
}

/*GetOutboundDnclistBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetOutboundDnclistBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundDnclistBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/dnclists/{dncListId}][%d] getOutboundDnclistBadRequest  %+v", 400, o.Payload)
}

func (o *GetOutboundDnclistBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundDnclistBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundDnclistUnauthorized creates a GetOutboundDnclistUnauthorized with default headers values
func NewGetOutboundDnclistUnauthorized() *GetOutboundDnclistUnauthorized {
	return &GetOutboundDnclistUnauthorized{}
}

/*GetOutboundDnclistUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetOutboundDnclistUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundDnclistUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/dnclists/{dncListId}][%d] getOutboundDnclistUnauthorized  %+v", 401, o.Payload)
}

func (o *GetOutboundDnclistUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundDnclistUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundDnclistForbidden creates a GetOutboundDnclistForbidden with default headers values
func NewGetOutboundDnclistForbidden() *GetOutboundDnclistForbidden {
	return &GetOutboundDnclistForbidden{}
}

/*GetOutboundDnclistForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetOutboundDnclistForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundDnclistForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/dnclists/{dncListId}][%d] getOutboundDnclistForbidden  %+v", 403, o.Payload)
}

func (o *GetOutboundDnclistForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundDnclistForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundDnclistNotFound creates a GetOutboundDnclistNotFound with default headers values
func NewGetOutboundDnclistNotFound() *GetOutboundDnclistNotFound {
	return &GetOutboundDnclistNotFound{}
}

/*GetOutboundDnclistNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetOutboundDnclistNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundDnclistNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/dnclists/{dncListId}][%d] getOutboundDnclistNotFound  %+v", 404, o.Payload)
}

func (o *GetOutboundDnclistNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundDnclistNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundDnclistRequestTimeout creates a GetOutboundDnclistRequestTimeout with default headers values
func NewGetOutboundDnclistRequestTimeout() *GetOutboundDnclistRequestTimeout {
	return &GetOutboundDnclistRequestTimeout{}
}

/*GetOutboundDnclistRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetOutboundDnclistRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundDnclistRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/dnclists/{dncListId}][%d] getOutboundDnclistRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetOutboundDnclistRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundDnclistRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundDnclistRequestEntityTooLarge creates a GetOutboundDnclistRequestEntityTooLarge with default headers values
func NewGetOutboundDnclistRequestEntityTooLarge() *GetOutboundDnclistRequestEntityTooLarge {
	return &GetOutboundDnclistRequestEntityTooLarge{}
}

/*GetOutboundDnclistRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetOutboundDnclistRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundDnclistRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/dnclists/{dncListId}][%d] getOutboundDnclistRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetOutboundDnclistRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundDnclistRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundDnclistUnsupportedMediaType creates a GetOutboundDnclistUnsupportedMediaType with default headers values
func NewGetOutboundDnclistUnsupportedMediaType() *GetOutboundDnclistUnsupportedMediaType {
	return &GetOutboundDnclistUnsupportedMediaType{}
}

/*GetOutboundDnclistUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetOutboundDnclistUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundDnclistUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/dnclists/{dncListId}][%d] getOutboundDnclistUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetOutboundDnclistUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundDnclistUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundDnclistTooManyRequests creates a GetOutboundDnclistTooManyRequests with default headers values
func NewGetOutboundDnclistTooManyRequests() *GetOutboundDnclistTooManyRequests {
	return &GetOutboundDnclistTooManyRequests{}
}

/*GetOutboundDnclistTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetOutboundDnclistTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundDnclistTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/dnclists/{dncListId}][%d] getOutboundDnclistTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetOutboundDnclistTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundDnclistTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundDnclistInternalServerError creates a GetOutboundDnclistInternalServerError with default headers values
func NewGetOutboundDnclistInternalServerError() *GetOutboundDnclistInternalServerError {
	return &GetOutboundDnclistInternalServerError{}
}

/*GetOutboundDnclistInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetOutboundDnclistInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundDnclistInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/dnclists/{dncListId}][%d] getOutboundDnclistInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOutboundDnclistInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundDnclistInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundDnclistServiceUnavailable creates a GetOutboundDnclistServiceUnavailable with default headers values
func NewGetOutboundDnclistServiceUnavailable() *GetOutboundDnclistServiceUnavailable {
	return &GetOutboundDnclistServiceUnavailable{}
}

/*GetOutboundDnclistServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetOutboundDnclistServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundDnclistServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/dnclists/{dncListId}][%d] getOutboundDnclistServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetOutboundDnclistServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundDnclistServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundDnclistGatewayTimeout creates a GetOutboundDnclistGatewayTimeout with default headers values
func NewGetOutboundDnclistGatewayTimeout() *GetOutboundDnclistGatewayTimeout {
	return &GetOutboundDnclistGatewayTimeout{}
}

/*GetOutboundDnclistGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetOutboundDnclistGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundDnclistGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/dnclists/{dncListId}][%d] getOutboundDnclistGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetOutboundDnclistGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundDnclistGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
