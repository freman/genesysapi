// Code generated by go-swagger; DO NOT EDIT.

package outbound

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutOutboundCampaignruleReader is a Reader for the PutOutboundCampaignrule structure.
type PutOutboundCampaignruleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutOutboundCampaignruleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutOutboundCampaignruleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutOutboundCampaignruleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutOutboundCampaignruleUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutOutboundCampaignruleForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutOutboundCampaignruleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutOutboundCampaignruleRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPutOutboundCampaignruleConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutOutboundCampaignruleRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutOutboundCampaignruleUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutOutboundCampaignruleTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutOutboundCampaignruleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutOutboundCampaignruleServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutOutboundCampaignruleGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutOutboundCampaignruleOK creates a PutOutboundCampaignruleOK with default headers values
func NewPutOutboundCampaignruleOK() *PutOutboundCampaignruleOK {
	return &PutOutboundCampaignruleOK{}
}

/*
PutOutboundCampaignruleOK describes a response with status code 200, with default header values.

successful operation
*/
type PutOutboundCampaignruleOK struct {
	Payload *models.CampaignRule
}

// IsSuccess returns true when this put outbound campaignrule o k response has a 2xx status code
func (o *PutOutboundCampaignruleOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put outbound campaignrule o k response has a 3xx status code
func (o *PutOutboundCampaignruleOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put outbound campaignrule o k response has a 4xx status code
func (o *PutOutboundCampaignruleOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put outbound campaignrule o k response has a 5xx status code
func (o *PutOutboundCampaignruleOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put outbound campaignrule o k response a status code equal to that given
func (o *PutOutboundCampaignruleOK) IsCode(code int) bool {
	return code == 200
}

func (o *PutOutboundCampaignruleOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/campaignrules/{campaignRuleId}][%d] putOutboundCampaignruleOK  %+v", 200, o.Payload)
}

func (o *PutOutboundCampaignruleOK) String() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/campaignrules/{campaignRuleId}][%d] putOutboundCampaignruleOK  %+v", 200, o.Payload)
}

func (o *PutOutboundCampaignruleOK) GetPayload() *models.CampaignRule {
	return o.Payload
}

func (o *PutOutboundCampaignruleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CampaignRule)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundCampaignruleBadRequest creates a PutOutboundCampaignruleBadRequest with default headers values
func NewPutOutboundCampaignruleBadRequest() *PutOutboundCampaignruleBadRequest {
	return &PutOutboundCampaignruleBadRequest{}
}

/*
PutOutboundCampaignruleBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutOutboundCampaignruleBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put outbound campaignrule bad request response has a 2xx status code
func (o *PutOutboundCampaignruleBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put outbound campaignrule bad request response has a 3xx status code
func (o *PutOutboundCampaignruleBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put outbound campaignrule bad request response has a 4xx status code
func (o *PutOutboundCampaignruleBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put outbound campaignrule bad request response has a 5xx status code
func (o *PutOutboundCampaignruleBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put outbound campaignrule bad request response a status code equal to that given
func (o *PutOutboundCampaignruleBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PutOutboundCampaignruleBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/campaignrules/{campaignRuleId}][%d] putOutboundCampaignruleBadRequest  %+v", 400, o.Payload)
}

func (o *PutOutboundCampaignruleBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/campaignrules/{campaignRuleId}][%d] putOutboundCampaignruleBadRequest  %+v", 400, o.Payload)
}

func (o *PutOutboundCampaignruleBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundCampaignruleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundCampaignruleUnauthorized creates a PutOutboundCampaignruleUnauthorized with default headers values
func NewPutOutboundCampaignruleUnauthorized() *PutOutboundCampaignruleUnauthorized {
	return &PutOutboundCampaignruleUnauthorized{}
}

/*
PutOutboundCampaignruleUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PutOutboundCampaignruleUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put outbound campaignrule unauthorized response has a 2xx status code
func (o *PutOutboundCampaignruleUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put outbound campaignrule unauthorized response has a 3xx status code
func (o *PutOutboundCampaignruleUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put outbound campaignrule unauthorized response has a 4xx status code
func (o *PutOutboundCampaignruleUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put outbound campaignrule unauthorized response has a 5xx status code
func (o *PutOutboundCampaignruleUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put outbound campaignrule unauthorized response a status code equal to that given
func (o *PutOutboundCampaignruleUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PutOutboundCampaignruleUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/campaignrules/{campaignRuleId}][%d] putOutboundCampaignruleUnauthorized  %+v", 401, o.Payload)
}

func (o *PutOutboundCampaignruleUnauthorized) String() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/campaignrules/{campaignRuleId}][%d] putOutboundCampaignruleUnauthorized  %+v", 401, o.Payload)
}

func (o *PutOutboundCampaignruleUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundCampaignruleUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundCampaignruleForbidden creates a PutOutboundCampaignruleForbidden with default headers values
func NewPutOutboundCampaignruleForbidden() *PutOutboundCampaignruleForbidden {
	return &PutOutboundCampaignruleForbidden{}
}

/*
PutOutboundCampaignruleForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PutOutboundCampaignruleForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put outbound campaignrule forbidden response has a 2xx status code
func (o *PutOutboundCampaignruleForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put outbound campaignrule forbidden response has a 3xx status code
func (o *PutOutboundCampaignruleForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put outbound campaignrule forbidden response has a 4xx status code
func (o *PutOutboundCampaignruleForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put outbound campaignrule forbidden response has a 5xx status code
func (o *PutOutboundCampaignruleForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put outbound campaignrule forbidden response a status code equal to that given
func (o *PutOutboundCampaignruleForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PutOutboundCampaignruleForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/campaignrules/{campaignRuleId}][%d] putOutboundCampaignruleForbidden  %+v", 403, o.Payload)
}

func (o *PutOutboundCampaignruleForbidden) String() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/campaignrules/{campaignRuleId}][%d] putOutboundCampaignruleForbidden  %+v", 403, o.Payload)
}

func (o *PutOutboundCampaignruleForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundCampaignruleForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundCampaignruleNotFound creates a PutOutboundCampaignruleNotFound with default headers values
func NewPutOutboundCampaignruleNotFound() *PutOutboundCampaignruleNotFound {
	return &PutOutboundCampaignruleNotFound{}
}

/*
PutOutboundCampaignruleNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PutOutboundCampaignruleNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put outbound campaignrule not found response has a 2xx status code
func (o *PutOutboundCampaignruleNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put outbound campaignrule not found response has a 3xx status code
func (o *PutOutboundCampaignruleNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put outbound campaignrule not found response has a 4xx status code
func (o *PutOutboundCampaignruleNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put outbound campaignrule not found response has a 5xx status code
func (o *PutOutboundCampaignruleNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put outbound campaignrule not found response a status code equal to that given
func (o *PutOutboundCampaignruleNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PutOutboundCampaignruleNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/campaignrules/{campaignRuleId}][%d] putOutboundCampaignruleNotFound  %+v", 404, o.Payload)
}

func (o *PutOutboundCampaignruleNotFound) String() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/campaignrules/{campaignRuleId}][%d] putOutboundCampaignruleNotFound  %+v", 404, o.Payload)
}

func (o *PutOutboundCampaignruleNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundCampaignruleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundCampaignruleRequestTimeout creates a PutOutboundCampaignruleRequestTimeout with default headers values
func NewPutOutboundCampaignruleRequestTimeout() *PutOutboundCampaignruleRequestTimeout {
	return &PutOutboundCampaignruleRequestTimeout{}
}

/*
PutOutboundCampaignruleRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutOutboundCampaignruleRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put outbound campaignrule request timeout response has a 2xx status code
func (o *PutOutboundCampaignruleRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put outbound campaignrule request timeout response has a 3xx status code
func (o *PutOutboundCampaignruleRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put outbound campaignrule request timeout response has a 4xx status code
func (o *PutOutboundCampaignruleRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this put outbound campaignrule request timeout response has a 5xx status code
func (o *PutOutboundCampaignruleRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this put outbound campaignrule request timeout response a status code equal to that given
func (o *PutOutboundCampaignruleRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PutOutboundCampaignruleRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/campaignrules/{campaignRuleId}][%d] putOutboundCampaignruleRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutOutboundCampaignruleRequestTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/campaignrules/{campaignRuleId}][%d] putOutboundCampaignruleRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutOutboundCampaignruleRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundCampaignruleRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundCampaignruleConflict creates a PutOutboundCampaignruleConflict with default headers values
func NewPutOutboundCampaignruleConflict() *PutOutboundCampaignruleConflict {
	return &PutOutboundCampaignruleConflict{}
}

/*
PutOutboundCampaignruleConflict describes a response with status code 409, with default header values.

Conflict
*/
type PutOutboundCampaignruleConflict struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put outbound campaignrule conflict response has a 2xx status code
func (o *PutOutboundCampaignruleConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put outbound campaignrule conflict response has a 3xx status code
func (o *PutOutboundCampaignruleConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put outbound campaignrule conflict response has a 4xx status code
func (o *PutOutboundCampaignruleConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this put outbound campaignrule conflict response has a 5xx status code
func (o *PutOutboundCampaignruleConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this put outbound campaignrule conflict response a status code equal to that given
func (o *PutOutboundCampaignruleConflict) IsCode(code int) bool {
	return code == 409
}

func (o *PutOutboundCampaignruleConflict) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/campaignrules/{campaignRuleId}][%d] putOutboundCampaignruleConflict  %+v", 409, o.Payload)
}

func (o *PutOutboundCampaignruleConflict) String() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/campaignrules/{campaignRuleId}][%d] putOutboundCampaignruleConflict  %+v", 409, o.Payload)
}

func (o *PutOutboundCampaignruleConflict) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundCampaignruleConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundCampaignruleRequestEntityTooLarge creates a PutOutboundCampaignruleRequestEntityTooLarge with default headers values
func NewPutOutboundCampaignruleRequestEntityTooLarge() *PutOutboundCampaignruleRequestEntityTooLarge {
	return &PutOutboundCampaignruleRequestEntityTooLarge{}
}

/*
PutOutboundCampaignruleRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PutOutboundCampaignruleRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put outbound campaignrule request entity too large response has a 2xx status code
func (o *PutOutboundCampaignruleRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put outbound campaignrule request entity too large response has a 3xx status code
func (o *PutOutboundCampaignruleRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put outbound campaignrule request entity too large response has a 4xx status code
func (o *PutOutboundCampaignruleRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this put outbound campaignrule request entity too large response has a 5xx status code
func (o *PutOutboundCampaignruleRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this put outbound campaignrule request entity too large response a status code equal to that given
func (o *PutOutboundCampaignruleRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PutOutboundCampaignruleRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/campaignrules/{campaignRuleId}][%d] putOutboundCampaignruleRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutOutboundCampaignruleRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/campaignrules/{campaignRuleId}][%d] putOutboundCampaignruleRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutOutboundCampaignruleRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundCampaignruleRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundCampaignruleUnsupportedMediaType creates a PutOutboundCampaignruleUnsupportedMediaType with default headers values
func NewPutOutboundCampaignruleUnsupportedMediaType() *PutOutboundCampaignruleUnsupportedMediaType {
	return &PutOutboundCampaignruleUnsupportedMediaType{}
}

/*
PutOutboundCampaignruleUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutOutboundCampaignruleUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put outbound campaignrule unsupported media type response has a 2xx status code
func (o *PutOutboundCampaignruleUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put outbound campaignrule unsupported media type response has a 3xx status code
func (o *PutOutboundCampaignruleUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put outbound campaignrule unsupported media type response has a 4xx status code
func (o *PutOutboundCampaignruleUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this put outbound campaignrule unsupported media type response has a 5xx status code
func (o *PutOutboundCampaignruleUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this put outbound campaignrule unsupported media type response a status code equal to that given
func (o *PutOutboundCampaignruleUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PutOutboundCampaignruleUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/campaignrules/{campaignRuleId}][%d] putOutboundCampaignruleUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutOutboundCampaignruleUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/campaignrules/{campaignRuleId}][%d] putOutboundCampaignruleUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutOutboundCampaignruleUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundCampaignruleUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundCampaignruleTooManyRequests creates a PutOutboundCampaignruleTooManyRequests with default headers values
func NewPutOutboundCampaignruleTooManyRequests() *PutOutboundCampaignruleTooManyRequests {
	return &PutOutboundCampaignruleTooManyRequests{}
}

/*
PutOutboundCampaignruleTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutOutboundCampaignruleTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put outbound campaignrule too many requests response has a 2xx status code
func (o *PutOutboundCampaignruleTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put outbound campaignrule too many requests response has a 3xx status code
func (o *PutOutboundCampaignruleTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put outbound campaignrule too many requests response has a 4xx status code
func (o *PutOutboundCampaignruleTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this put outbound campaignrule too many requests response has a 5xx status code
func (o *PutOutboundCampaignruleTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this put outbound campaignrule too many requests response a status code equal to that given
func (o *PutOutboundCampaignruleTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PutOutboundCampaignruleTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/campaignrules/{campaignRuleId}][%d] putOutboundCampaignruleTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutOutboundCampaignruleTooManyRequests) String() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/campaignrules/{campaignRuleId}][%d] putOutboundCampaignruleTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutOutboundCampaignruleTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundCampaignruleTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundCampaignruleInternalServerError creates a PutOutboundCampaignruleInternalServerError with default headers values
func NewPutOutboundCampaignruleInternalServerError() *PutOutboundCampaignruleInternalServerError {
	return &PutOutboundCampaignruleInternalServerError{}
}

/*
PutOutboundCampaignruleInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutOutboundCampaignruleInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put outbound campaignrule internal server error response has a 2xx status code
func (o *PutOutboundCampaignruleInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put outbound campaignrule internal server error response has a 3xx status code
func (o *PutOutboundCampaignruleInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put outbound campaignrule internal server error response has a 4xx status code
func (o *PutOutboundCampaignruleInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this put outbound campaignrule internal server error response has a 5xx status code
func (o *PutOutboundCampaignruleInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this put outbound campaignrule internal server error response a status code equal to that given
func (o *PutOutboundCampaignruleInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PutOutboundCampaignruleInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/campaignrules/{campaignRuleId}][%d] putOutboundCampaignruleInternalServerError  %+v", 500, o.Payload)
}

func (o *PutOutboundCampaignruleInternalServerError) String() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/campaignrules/{campaignRuleId}][%d] putOutboundCampaignruleInternalServerError  %+v", 500, o.Payload)
}

func (o *PutOutboundCampaignruleInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundCampaignruleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundCampaignruleServiceUnavailable creates a PutOutboundCampaignruleServiceUnavailable with default headers values
func NewPutOutboundCampaignruleServiceUnavailable() *PutOutboundCampaignruleServiceUnavailable {
	return &PutOutboundCampaignruleServiceUnavailable{}
}

/*
PutOutboundCampaignruleServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutOutboundCampaignruleServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put outbound campaignrule service unavailable response has a 2xx status code
func (o *PutOutboundCampaignruleServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put outbound campaignrule service unavailable response has a 3xx status code
func (o *PutOutboundCampaignruleServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put outbound campaignrule service unavailable response has a 4xx status code
func (o *PutOutboundCampaignruleServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this put outbound campaignrule service unavailable response has a 5xx status code
func (o *PutOutboundCampaignruleServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this put outbound campaignrule service unavailable response a status code equal to that given
func (o *PutOutboundCampaignruleServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PutOutboundCampaignruleServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/campaignrules/{campaignRuleId}][%d] putOutboundCampaignruleServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutOutboundCampaignruleServiceUnavailable) String() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/campaignrules/{campaignRuleId}][%d] putOutboundCampaignruleServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutOutboundCampaignruleServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundCampaignruleServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundCampaignruleGatewayTimeout creates a PutOutboundCampaignruleGatewayTimeout with default headers values
func NewPutOutboundCampaignruleGatewayTimeout() *PutOutboundCampaignruleGatewayTimeout {
	return &PutOutboundCampaignruleGatewayTimeout{}
}

/*
PutOutboundCampaignruleGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PutOutboundCampaignruleGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put outbound campaignrule gateway timeout response has a 2xx status code
func (o *PutOutboundCampaignruleGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put outbound campaignrule gateway timeout response has a 3xx status code
func (o *PutOutboundCampaignruleGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put outbound campaignrule gateway timeout response has a 4xx status code
func (o *PutOutboundCampaignruleGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this put outbound campaignrule gateway timeout response has a 5xx status code
func (o *PutOutboundCampaignruleGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this put outbound campaignrule gateway timeout response a status code equal to that given
func (o *PutOutboundCampaignruleGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PutOutboundCampaignruleGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/campaignrules/{campaignRuleId}][%d] putOutboundCampaignruleGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutOutboundCampaignruleGatewayTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/campaignrules/{campaignRuleId}][%d] putOutboundCampaignruleGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutOutboundCampaignruleGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundCampaignruleGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
