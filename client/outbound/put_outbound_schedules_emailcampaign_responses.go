// Code generated by go-swagger; DO NOT EDIT.

package outbound

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutOutboundSchedulesEmailcampaignReader is a Reader for the PutOutboundSchedulesEmailcampaign structure.
type PutOutboundSchedulesEmailcampaignReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutOutboundSchedulesEmailcampaignReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutOutboundSchedulesEmailcampaignOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutOutboundSchedulesEmailcampaignBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutOutboundSchedulesEmailcampaignUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutOutboundSchedulesEmailcampaignForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutOutboundSchedulesEmailcampaignNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutOutboundSchedulesEmailcampaignRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutOutboundSchedulesEmailcampaignRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutOutboundSchedulesEmailcampaignUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutOutboundSchedulesEmailcampaignTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutOutboundSchedulesEmailcampaignInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutOutboundSchedulesEmailcampaignServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutOutboundSchedulesEmailcampaignGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutOutboundSchedulesEmailcampaignOK creates a PutOutboundSchedulesEmailcampaignOK with default headers values
func NewPutOutboundSchedulesEmailcampaignOK() *PutOutboundSchedulesEmailcampaignOK {
	return &PutOutboundSchedulesEmailcampaignOK{}
}

/*PutOutboundSchedulesEmailcampaignOK handles this case with default header values.

successful operation
*/
type PutOutboundSchedulesEmailcampaignOK struct {
	Payload *models.EmailCampaignSchedule
}

func (o *PutOutboundSchedulesEmailcampaignOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/schedules/emailcampaigns/{emailCampaignId}][%d] putOutboundSchedulesEmailcampaignOK  %+v", 200, o.Payload)
}

func (o *PutOutboundSchedulesEmailcampaignOK) GetPayload() *models.EmailCampaignSchedule {
	return o.Payload
}

func (o *PutOutboundSchedulesEmailcampaignOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EmailCampaignSchedule)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundSchedulesEmailcampaignBadRequest creates a PutOutboundSchedulesEmailcampaignBadRequest with default headers values
func NewPutOutboundSchedulesEmailcampaignBadRequest() *PutOutboundSchedulesEmailcampaignBadRequest {
	return &PutOutboundSchedulesEmailcampaignBadRequest{}
}

/*PutOutboundSchedulesEmailcampaignBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutOutboundSchedulesEmailcampaignBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PutOutboundSchedulesEmailcampaignBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/schedules/emailcampaigns/{emailCampaignId}][%d] putOutboundSchedulesEmailcampaignBadRequest  %+v", 400, o.Payload)
}

func (o *PutOutboundSchedulesEmailcampaignBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundSchedulesEmailcampaignBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundSchedulesEmailcampaignUnauthorized creates a PutOutboundSchedulesEmailcampaignUnauthorized with default headers values
func NewPutOutboundSchedulesEmailcampaignUnauthorized() *PutOutboundSchedulesEmailcampaignUnauthorized {
	return &PutOutboundSchedulesEmailcampaignUnauthorized{}
}

/*PutOutboundSchedulesEmailcampaignUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PutOutboundSchedulesEmailcampaignUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PutOutboundSchedulesEmailcampaignUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/schedules/emailcampaigns/{emailCampaignId}][%d] putOutboundSchedulesEmailcampaignUnauthorized  %+v", 401, o.Payload)
}

func (o *PutOutboundSchedulesEmailcampaignUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundSchedulesEmailcampaignUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundSchedulesEmailcampaignForbidden creates a PutOutboundSchedulesEmailcampaignForbidden with default headers values
func NewPutOutboundSchedulesEmailcampaignForbidden() *PutOutboundSchedulesEmailcampaignForbidden {
	return &PutOutboundSchedulesEmailcampaignForbidden{}
}

/*PutOutboundSchedulesEmailcampaignForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PutOutboundSchedulesEmailcampaignForbidden struct {
	Payload *models.ErrorBody
}

func (o *PutOutboundSchedulesEmailcampaignForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/schedules/emailcampaigns/{emailCampaignId}][%d] putOutboundSchedulesEmailcampaignForbidden  %+v", 403, o.Payload)
}

func (o *PutOutboundSchedulesEmailcampaignForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundSchedulesEmailcampaignForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundSchedulesEmailcampaignNotFound creates a PutOutboundSchedulesEmailcampaignNotFound with default headers values
func NewPutOutboundSchedulesEmailcampaignNotFound() *PutOutboundSchedulesEmailcampaignNotFound {
	return &PutOutboundSchedulesEmailcampaignNotFound{}
}

/*PutOutboundSchedulesEmailcampaignNotFound handles this case with default header values.

The requested resource was not found.
*/
type PutOutboundSchedulesEmailcampaignNotFound struct {
	Payload *models.ErrorBody
}

func (o *PutOutboundSchedulesEmailcampaignNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/schedules/emailcampaigns/{emailCampaignId}][%d] putOutboundSchedulesEmailcampaignNotFound  %+v", 404, o.Payload)
}

func (o *PutOutboundSchedulesEmailcampaignNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundSchedulesEmailcampaignNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundSchedulesEmailcampaignRequestTimeout creates a PutOutboundSchedulesEmailcampaignRequestTimeout with default headers values
func NewPutOutboundSchedulesEmailcampaignRequestTimeout() *PutOutboundSchedulesEmailcampaignRequestTimeout {
	return &PutOutboundSchedulesEmailcampaignRequestTimeout{}
}

/*PutOutboundSchedulesEmailcampaignRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutOutboundSchedulesEmailcampaignRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PutOutboundSchedulesEmailcampaignRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/schedules/emailcampaigns/{emailCampaignId}][%d] putOutboundSchedulesEmailcampaignRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutOutboundSchedulesEmailcampaignRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundSchedulesEmailcampaignRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundSchedulesEmailcampaignRequestEntityTooLarge creates a PutOutboundSchedulesEmailcampaignRequestEntityTooLarge with default headers values
func NewPutOutboundSchedulesEmailcampaignRequestEntityTooLarge() *PutOutboundSchedulesEmailcampaignRequestEntityTooLarge {
	return &PutOutboundSchedulesEmailcampaignRequestEntityTooLarge{}
}

/*PutOutboundSchedulesEmailcampaignRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PutOutboundSchedulesEmailcampaignRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PutOutboundSchedulesEmailcampaignRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/schedules/emailcampaigns/{emailCampaignId}][%d] putOutboundSchedulesEmailcampaignRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutOutboundSchedulesEmailcampaignRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundSchedulesEmailcampaignRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundSchedulesEmailcampaignUnsupportedMediaType creates a PutOutboundSchedulesEmailcampaignUnsupportedMediaType with default headers values
func NewPutOutboundSchedulesEmailcampaignUnsupportedMediaType() *PutOutboundSchedulesEmailcampaignUnsupportedMediaType {
	return &PutOutboundSchedulesEmailcampaignUnsupportedMediaType{}
}

/*PutOutboundSchedulesEmailcampaignUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutOutboundSchedulesEmailcampaignUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PutOutboundSchedulesEmailcampaignUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/schedules/emailcampaigns/{emailCampaignId}][%d] putOutboundSchedulesEmailcampaignUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutOutboundSchedulesEmailcampaignUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundSchedulesEmailcampaignUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundSchedulesEmailcampaignTooManyRequests creates a PutOutboundSchedulesEmailcampaignTooManyRequests with default headers values
func NewPutOutboundSchedulesEmailcampaignTooManyRequests() *PutOutboundSchedulesEmailcampaignTooManyRequests {
	return &PutOutboundSchedulesEmailcampaignTooManyRequests{}
}

/*PutOutboundSchedulesEmailcampaignTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutOutboundSchedulesEmailcampaignTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PutOutboundSchedulesEmailcampaignTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/schedules/emailcampaigns/{emailCampaignId}][%d] putOutboundSchedulesEmailcampaignTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutOutboundSchedulesEmailcampaignTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundSchedulesEmailcampaignTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundSchedulesEmailcampaignInternalServerError creates a PutOutboundSchedulesEmailcampaignInternalServerError with default headers values
func NewPutOutboundSchedulesEmailcampaignInternalServerError() *PutOutboundSchedulesEmailcampaignInternalServerError {
	return &PutOutboundSchedulesEmailcampaignInternalServerError{}
}

/*PutOutboundSchedulesEmailcampaignInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutOutboundSchedulesEmailcampaignInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PutOutboundSchedulesEmailcampaignInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/schedules/emailcampaigns/{emailCampaignId}][%d] putOutboundSchedulesEmailcampaignInternalServerError  %+v", 500, o.Payload)
}

func (o *PutOutboundSchedulesEmailcampaignInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundSchedulesEmailcampaignInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundSchedulesEmailcampaignServiceUnavailable creates a PutOutboundSchedulesEmailcampaignServiceUnavailable with default headers values
func NewPutOutboundSchedulesEmailcampaignServiceUnavailable() *PutOutboundSchedulesEmailcampaignServiceUnavailable {
	return &PutOutboundSchedulesEmailcampaignServiceUnavailable{}
}

/*PutOutboundSchedulesEmailcampaignServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutOutboundSchedulesEmailcampaignServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PutOutboundSchedulesEmailcampaignServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/schedules/emailcampaigns/{emailCampaignId}][%d] putOutboundSchedulesEmailcampaignServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutOutboundSchedulesEmailcampaignServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundSchedulesEmailcampaignServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundSchedulesEmailcampaignGatewayTimeout creates a PutOutboundSchedulesEmailcampaignGatewayTimeout with default headers values
func NewPutOutboundSchedulesEmailcampaignGatewayTimeout() *PutOutboundSchedulesEmailcampaignGatewayTimeout {
	return &PutOutboundSchedulesEmailcampaignGatewayTimeout{}
}

/*PutOutboundSchedulesEmailcampaignGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PutOutboundSchedulesEmailcampaignGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PutOutboundSchedulesEmailcampaignGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/schedules/emailcampaigns/{emailCampaignId}][%d] putOutboundSchedulesEmailcampaignGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutOutboundSchedulesEmailcampaignGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundSchedulesEmailcampaignGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
