// Code generated by go-swagger; DO NOT EDIT.

package outbound

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostOutboundAuditsReader is a Reader for the PostOutboundAudits structure.
type PostOutboundAuditsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostOutboundAuditsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostOutboundAuditsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostOutboundAuditsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostOutboundAuditsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostOutboundAuditsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostOutboundAuditsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostOutboundAuditsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostOutboundAuditsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostOutboundAuditsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostOutboundAuditsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostOutboundAuditsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostOutboundAuditsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostOutboundAuditsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostOutboundAuditsOK creates a PostOutboundAuditsOK with default headers values
func NewPostOutboundAuditsOK() *PostOutboundAuditsOK {
	return &PostOutboundAuditsOK{}
}

/*
PostOutboundAuditsOK describes a response with status code 200, with default header values.

successful operation
*/
type PostOutboundAuditsOK struct {
	Payload *models.AuditSearchResult
}

// IsSuccess returns true when this post outbound audits o k response has a 2xx status code
func (o *PostOutboundAuditsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post outbound audits o k response has a 3xx status code
func (o *PostOutboundAuditsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post outbound audits o k response has a 4xx status code
func (o *PostOutboundAuditsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post outbound audits o k response has a 5xx status code
func (o *PostOutboundAuditsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post outbound audits o k response a status code equal to that given
func (o *PostOutboundAuditsOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostOutboundAuditsOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/audits][%d] postOutboundAuditsOK  %+v", 200, o.Payload)
}

func (o *PostOutboundAuditsOK) String() string {
	return fmt.Sprintf("[POST /api/v2/outbound/audits][%d] postOutboundAuditsOK  %+v", 200, o.Payload)
}

func (o *PostOutboundAuditsOK) GetPayload() *models.AuditSearchResult {
	return o.Payload
}

func (o *PostOutboundAuditsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuditSearchResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundAuditsBadRequest creates a PostOutboundAuditsBadRequest with default headers values
func NewPostOutboundAuditsBadRequest() *PostOutboundAuditsBadRequest {
	return &PostOutboundAuditsBadRequest{}
}

/*
PostOutboundAuditsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostOutboundAuditsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post outbound audits bad request response has a 2xx status code
func (o *PostOutboundAuditsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post outbound audits bad request response has a 3xx status code
func (o *PostOutboundAuditsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post outbound audits bad request response has a 4xx status code
func (o *PostOutboundAuditsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post outbound audits bad request response has a 5xx status code
func (o *PostOutboundAuditsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post outbound audits bad request response a status code equal to that given
func (o *PostOutboundAuditsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostOutboundAuditsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/audits][%d] postOutboundAuditsBadRequest  %+v", 400, o.Payload)
}

func (o *PostOutboundAuditsBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/outbound/audits][%d] postOutboundAuditsBadRequest  %+v", 400, o.Payload)
}

func (o *PostOutboundAuditsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundAuditsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundAuditsUnauthorized creates a PostOutboundAuditsUnauthorized with default headers values
func NewPostOutboundAuditsUnauthorized() *PostOutboundAuditsUnauthorized {
	return &PostOutboundAuditsUnauthorized{}
}

/*
PostOutboundAuditsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostOutboundAuditsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post outbound audits unauthorized response has a 2xx status code
func (o *PostOutboundAuditsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post outbound audits unauthorized response has a 3xx status code
func (o *PostOutboundAuditsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post outbound audits unauthorized response has a 4xx status code
func (o *PostOutboundAuditsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post outbound audits unauthorized response has a 5xx status code
func (o *PostOutboundAuditsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post outbound audits unauthorized response a status code equal to that given
func (o *PostOutboundAuditsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostOutboundAuditsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/audits][%d] postOutboundAuditsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostOutboundAuditsUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/outbound/audits][%d] postOutboundAuditsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostOutboundAuditsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundAuditsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundAuditsForbidden creates a PostOutboundAuditsForbidden with default headers values
func NewPostOutboundAuditsForbidden() *PostOutboundAuditsForbidden {
	return &PostOutboundAuditsForbidden{}
}

/*
PostOutboundAuditsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostOutboundAuditsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post outbound audits forbidden response has a 2xx status code
func (o *PostOutboundAuditsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post outbound audits forbidden response has a 3xx status code
func (o *PostOutboundAuditsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post outbound audits forbidden response has a 4xx status code
func (o *PostOutboundAuditsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post outbound audits forbidden response has a 5xx status code
func (o *PostOutboundAuditsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post outbound audits forbidden response a status code equal to that given
func (o *PostOutboundAuditsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostOutboundAuditsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/audits][%d] postOutboundAuditsForbidden  %+v", 403, o.Payload)
}

func (o *PostOutboundAuditsForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/outbound/audits][%d] postOutboundAuditsForbidden  %+v", 403, o.Payload)
}

func (o *PostOutboundAuditsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundAuditsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundAuditsNotFound creates a PostOutboundAuditsNotFound with default headers values
func NewPostOutboundAuditsNotFound() *PostOutboundAuditsNotFound {
	return &PostOutboundAuditsNotFound{}
}

/*
PostOutboundAuditsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostOutboundAuditsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post outbound audits not found response has a 2xx status code
func (o *PostOutboundAuditsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post outbound audits not found response has a 3xx status code
func (o *PostOutboundAuditsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post outbound audits not found response has a 4xx status code
func (o *PostOutboundAuditsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post outbound audits not found response has a 5xx status code
func (o *PostOutboundAuditsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post outbound audits not found response a status code equal to that given
func (o *PostOutboundAuditsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostOutboundAuditsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/audits][%d] postOutboundAuditsNotFound  %+v", 404, o.Payload)
}

func (o *PostOutboundAuditsNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/outbound/audits][%d] postOutboundAuditsNotFound  %+v", 404, o.Payload)
}

func (o *PostOutboundAuditsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundAuditsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundAuditsRequestTimeout creates a PostOutboundAuditsRequestTimeout with default headers values
func NewPostOutboundAuditsRequestTimeout() *PostOutboundAuditsRequestTimeout {
	return &PostOutboundAuditsRequestTimeout{}
}

/*
PostOutboundAuditsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostOutboundAuditsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post outbound audits request timeout response has a 2xx status code
func (o *PostOutboundAuditsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post outbound audits request timeout response has a 3xx status code
func (o *PostOutboundAuditsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post outbound audits request timeout response has a 4xx status code
func (o *PostOutboundAuditsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post outbound audits request timeout response has a 5xx status code
func (o *PostOutboundAuditsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post outbound audits request timeout response a status code equal to that given
func (o *PostOutboundAuditsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostOutboundAuditsRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/audits][%d] postOutboundAuditsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostOutboundAuditsRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/outbound/audits][%d] postOutboundAuditsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostOutboundAuditsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundAuditsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundAuditsRequestEntityTooLarge creates a PostOutboundAuditsRequestEntityTooLarge with default headers values
func NewPostOutboundAuditsRequestEntityTooLarge() *PostOutboundAuditsRequestEntityTooLarge {
	return &PostOutboundAuditsRequestEntityTooLarge{}
}

/*
PostOutboundAuditsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PostOutboundAuditsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post outbound audits request entity too large response has a 2xx status code
func (o *PostOutboundAuditsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post outbound audits request entity too large response has a 3xx status code
func (o *PostOutboundAuditsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post outbound audits request entity too large response has a 4xx status code
func (o *PostOutboundAuditsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post outbound audits request entity too large response has a 5xx status code
func (o *PostOutboundAuditsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post outbound audits request entity too large response a status code equal to that given
func (o *PostOutboundAuditsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostOutboundAuditsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/audits][%d] postOutboundAuditsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostOutboundAuditsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/outbound/audits][%d] postOutboundAuditsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostOutboundAuditsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundAuditsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundAuditsUnsupportedMediaType creates a PostOutboundAuditsUnsupportedMediaType with default headers values
func NewPostOutboundAuditsUnsupportedMediaType() *PostOutboundAuditsUnsupportedMediaType {
	return &PostOutboundAuditsUnsupportedMediaType{}
}

/*
PostOutboundAuditsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostOutboundAuditsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post outbound audits unsupported media type response has a 2xx status code
func (o *PostOutboundAuditsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post outbound audits unsupported media type response has a 3xx status code
func (o *PostOutboundAuditsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post outbound audits unsupported media type response has a 4xx status code
func (o *PostOutboundAuditsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post outbound audits unsupported media type response has a 5xx status code
func (o *PostOutboundAuditsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post outbound audits unsupported media type response a status code equal to that given
func (o *PostOutboundAuditsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostOutboundAuditsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/audits][%d] postOutboundAuditsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostOutboundAuditsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/outbound/audits][%d] postOutboundAuditsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostOutboundAuditsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundAuditsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundAuditsTooManyRequests creates a PostOutboundAuditsTooManyRequests with default headers values
func NewPostOutboundAuditsTooManyRequests() *PostOutboundAuditsTooManyRequests {
	return &PostOutboundAuditsTooManyRequests{}
}

/*
PostOutboundAuditsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostOutboundAuditsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post outbound audits too many requests response has a 2xx status code
func (o *PostOutboundAuditsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post outbound audits too many requests response has a 3xx status code
func (o *PostOutboundAuditsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post outbound audits too many requests response has a 4xx status code
func (o *PostOutboundAuditsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post outbound audits too many requests response has a 5xx status code
func (o *PostOutboundAuditsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post outbound audits too many requests response a status code equal to that given
func (o *PostOutboundAuditsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostOutboundAuditsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/audits][%d] postOutboundAuditsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostOutboundAuditsTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/outbound/audits][%d] postOutboundAuditsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostOutboundAuditsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundAuditsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundAuditsInternalServerError creates a PostOutboundAuditsInternalServerError with default headers values
func NewPostOutboundAuditsInternalServerError() *PostOutboundAuditsInternalServerError {
	return &PostOutboundAuditsInternalServerError{}
}

/*
PostOutboundAuditsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostOutboundAuditsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post outbound audits internal server error response has a 2xx status code
func (o *PostOutboundAuditsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post outbound audits internal server error response has a 3xx status code
func (o *PostOutboundAuditsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post outbound audits internal server error response has a 4xx status code
func (o *PostOutboundAuditsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post outbound audits internal server error response has a 5xx status code
func (o *PostOutboundAuditsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post outbound audits internal server error response a status code equal to that given
func (o *PostOutboundAuditsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostOutboundAuditsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/audits][%d] postOutboundAuditsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostOutboundAuditsInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/outbound/audits][%d] postOutboundAuditsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostOutboundAuditsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundAuditsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundAuditsServiceUnavailable creates a PostOutboundAuditsServiceUnavailable with default headers values
func NewPostOutboundAuditsServiceUnavailable() *PostOutboundAuditsServiceUnavailable {
	return &PostOutboundAuditsServiceUnavailable{}
}

/*
PostOutboundAuditsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostOutboundAuditsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post outbound audits service unavailable response has a 2xx status code
func (o *PostOutboundAuditsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post outbound audits service unavailable response has a 3xx status code
func (o *PostOutboundAuditsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post outbound audits service unavailable response has a 4xx status code
func (o *PostOutboundAuditsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post outbound audits service unavailable response has a 5xx status code
func (o *PostOutboundAuditsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post outbound audits service unavailable response a status code equal to that given
func (o *PostOutboundAuditsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostOutboundAuditsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/audits][%d] postOutboundAuditsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostOutboundAuditsServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/outbound/audits][%d] postOutboundAuditsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostOutboundAuditsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundAuditsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundAuditsGatewayTimeout creates a PostOutboundAuditsGatewayTimeout with default headers values
func NewPostOutboundAuditsGatewayTimeout() *PostOutboundAuditsGatewayTimeout {
	return &PostOutboundAuditsGatewayTimeout{}
}

/*
PostOutboundAuditsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostOutboundAuditsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post outbound audits gateway timeout response has a 2xx status code
func (o *PostOutboundAuditsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post outbound audits gateway timeout response has a 3xx status code
func (o *PostOutboundAuditsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post outbound audits gateway timeout response has a 4xx status code
func (o *PostOutboundAuditsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post outbound audits gateway timeout response has a 5xx status code
func (o *PostOutboundAuditsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post outbound audits gateway timeout response a status code equal to that given
func (o *PostOutboundAuditsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostOutboundAuditsGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/audits][%d] postOutboundAuditsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostOutboundAuditsGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/outbound/audits][%d] postOutboundAuditsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostOutboundAuditsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundAuditsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
