// Code generated by go-swagger; DO NOT EDIT.

package outbound

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostOutboundCallabletimesetsReader is a Reader for the PostOutboundCallabletimesets structure.
type PostOutboundCallabletimesetsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostOutboundCallabletimesetsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostOutboundCallabletimesetsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostOutboundCallabletimesetsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostOutboundCallabletimesetsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostOutboundCallabletimesetsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostOutboundCallabletimesetsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostOutboundCallabletimesetsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostOutboundCallabletimesetsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostOutboundCallabletimesetsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostOutboundCallabletimesetsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostOutboundCallabletimesetsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostOutboundCallabletimesetsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostOutboundCallabletimesetsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostOutboundCallabletimesetsOK creates a PostOutboundCallabletimesetsOK with default headers values
func NewPostOutboundCallabletimesetsOK() *PostOutboundCallabletimesetsOK {
	return &PostOutboundCallabletimesetsOK{}
}

/*
PostOutboundCallabletimesetsOK describes a response with status code 200, with default header values.

successful operation
*/
type PostOutboundCallabletimesetsOK struct {
	Payload *models.CallableTimeSet
}

// IsSuccess returns true when this post outbound callabletimesets o k response has a 2xx status code
func (o *PostOutboundCallabletimesetsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post outbound callabletimesets o k response has a 3xx status code
func (o *PostOutboundCallabletimesetsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post outbound callabletimesets o k response has a 4xx status code
func (o *PostOutboundCallabletimesetsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post outbound callabletimesets o k response has a 5xx status code
func (o *PostOutboundCallabletimesetsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post outbound callabletimesets o k response a status code equal to that given
func (o *PostOutboundCallabletimesetsOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostOutboundCallabletimesetsOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/callabletimesets][%d] postOutboundCallabletimesetsOK  %+v", 200, o.Payload)
}

func (o *PostOutboundCallabletimesetsOK) String() string {
	return fmt.Sprintf("[POST /api/v2/outbound/callabletimesets][%d] postOutboundCallabletimesetsOK  %+v", 200, o.Payload)
}

func (o *PostOutboundCallabletimesetsOK) GetPayload() *models.CallableTimeSet {
	return o.Payload
}

func (o *PostOutboundCallabletimesetsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CallableTimeSet)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundCallabletimesetsBadRequest creates a PostOutboundCallabletimesetsBadRequest with default headers values
func NewPostOutboundCallabletimesetsBadRequest() *PostOutboundCallabletimesetsBadRequest {
	return &PostOutboundCallabletimesetsBadRequest{}
}

/*
PostOutboundCallabletimesetsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostOutboundCallabletimesetsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post outbound callabletimesets bad request response has a 2xx status code
func (o *PostOutboundCallabletimesetsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post outbound callabletimesets bad request response has a 3xx status code
func (o *PostOutboundCallabletimesetsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post outbound callabletimesets bad request response has a 4xx status code
func (o *PostOutboundCallabletimesetsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post outbound callabletimesets bad request response has a 5xx status code
func (o *PostOutboundCallabletimesetsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post outbound callabletimesets bad request response a status code equal to that given
func (o *PostOutboundCallabletimesetsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostOutboundCallabletimesetsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/callabletimesets][%d] postOutboundCallabletimesetsBadRequest  %+v", 400, o.Payload)
}

func (o *PostOutboundCallabletimesetsBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/outbound/callabletimesets][%d] postOutboundCallabletimesetsBadRequest  %+v", 400, o.Payload)
}

func (o *PostOutboundCallabletimesetsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundCallabletimesetsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundCallabletimesetsUnauthorized creates a PostOutboundCallabletimesetsUnauthorized with default headers values
func NewPostOutboundCallabletimesetsUnauthorized() *PostOutboundCallabletimesetsUnauthorized {
	return &PostOutboundCallabletimesetsUnauthorized{}
}

/*
PostOutboundCallabletimesetsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostOutboundCallabletimesetsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post outbound callabletimesets unauthorized response has a 2xx status code
func (o *PostOutboundCallabletimesetsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post outbound callabletimesets unauthorized response has a 3xx status code
func (o *PostOutboundCallabletimesetsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post outbound callabletimesets unauthorized response has a 4xx status code
func (o *PostOutboundCallabletimesetsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post outbound callabletimesets unauthorized response has a 5xx status code
func (o *PostOutboundCallabletimesetsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post outbound callabletimesets unauthorized response a status code equal to that given
func (o *PostOutboundCallabletimesetsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostOutboundCallabletimesetsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/callabletimesets][%d] postOutboundCallabletimesetsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostOutboundCallabletimesetsUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/outbound/callabletimesets][%d] postOutboundCallabletimesetsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostOutboundCallabletimesetsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundCallabletimesetsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundCallabletimesetsForbidden creates a PostOutboundCallabletimesetsForbidden with default headers values
func NewPostOutboundCallabletimesetsForbidden() *PostOutboundCallabletimesetsForbidden {
	return &PostOutboundCallabletimesetsForbidden{}
}

/*
PostOutboundCallabletimesetsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostOutboundCallabletimesetsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post outbound callabletimesets forbidden response has a 2xx status code
func (o *PostOutboundCallabletimesetsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post outbound callabletimesets forbidden response has a 3xx status code
func (o *PostOutboundCallabletimesetsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post outbound callabletimesets forbidden response has a 4xx status code
func (o *PostOutboundCallabletimesetsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post outbound callabletimesets forbidden response has a 5xx status code
func (o *PostOutboundCallabletimesetsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post outbound callabletimesets forbidden response a status code equal to that given
func (o *PostOutboundCallabletimesetsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostOutboundCallabletimesetsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/callabletimesets][%d] postOutboundCallabletimesetsForbidden  %+v", 403, o.Payload)
}

func (o *PostOutboundCallabletimesetsForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/outbound/callabletimesets][%d] postOutboundCallabletimesetsForbidden  %+v", 403, o.Payload)
}

func (o *PostOutboundCallabletimesetsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundCallabletimesetsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundCallabletimesetsNotFound creates a PostOutboundCallabletimesetsNotFound with default headers values
func NewPostOutboundCallabletimesetsNotFound() *PostOutboundCallabletimesetsNotFound {
	return &PostOutboundCallabletimesetsNotFound{}
}

/*
PostOutboundCallabletimesetsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostOutboundCallabletimesetsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post outbound callabletimesets not found response has a 2xx status code
func (o *PostOutboundCallabletimesetsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post outbound callabletimesets not found response has a 3xx status code
func (o *PostOutboundCallabletimesetsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post outbound callabletimesets not found response has a 4xx status code
func (o *PostOutboundCallabletimesetsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post outbound callabletimesets not found response has a 5xx status code
func (o *PostOutboundCallabletimesetsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post outbound callabletimesets not found response a status code equal to that given
func (o *PostOutboundCallabletimesetsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostOutboundCallabletimesetsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/callabletimesets][%d] postOutboundCallabletimesetsNotFound  %+v", 404, o.Payload)
}

func (o *PostOutboundCallabletimesetsNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/outbound/callabletimesets][%d] postOutboundCallabletimesetsNotFound  %+v", 404, o.Payload)
}

func (o *PostOutboundCallabletimesetsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundCallabletimesetsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundCallabletimesetsRequestTimeout creates a PostOutboundCallabletimesetsRequestTimeout with default headers values
func NewPostOutboundCallabletimesetsRequestTimeout() *PostOutboundCallabletimesetsRequestTimeout {
	return &PostOutboundCallabletimesetsRequestTimeout{}
}

/*
PostOutboundCallabletimesetsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostOutboundCallabletimesetsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post outbound callabletimesets request timeout response has a 2xx status code
func (o *PostOutboundCallabletimesetsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post outbound callabletimesets request timeout response has a 3xx status code
func (o *PostOutboundCallabletimesetsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post outbound callabletimesets request timeout response has a 4xx status code
func (o *PostOutboundCallabletimesetsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post outbound callabletimesets request timeout response has a 5xx status code
func (o *PostOutboundCallabletimesetsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post outbound callabletimesets request timeout response a status code equal to that given
func (o *PostOutboundCallabletimesetsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostOutboundCallabletimesetsRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/callabletimesets][%d] postOutboundCallabletimesetsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostOutboundCallabletimesetsRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/outbound/callabletimesets][%d] postOutboundCallabletimesetsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostOutboundCallabletimesetsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundCallabletimesetsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundCallabletimesetsRequestEntityTooLarge creates a PostOutboundCallabletimesetsRequestEntityTooLarge with default headers values
func NewPostOutboundCallabletimesetsRequestEntityTooLarge() *PostOutboundCallabletimesetsRequestEntityTooLarge {
	return &PostOutboundCallabletimesetsRequestEntityTooLarge{}
}

/*
PostOutboundCallabletimesetsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PostOutboundCallabletimesetsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post outbound callabletimesets request entity too large response has a 2xx status code
func (o *PostOutboundCallabletimesetsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post outbound callabletimesets request entity too large response has a 3xx status code
func (o *PostOutboundCallabletimesetsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post outbound callabletimesets request entity too large response has a 4xx status code
func (o *PostOutboundCallabletimesetsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post outbound callabletimesets request entity too large response has a 5xx status code
func (o *PostOutboundCallabletimesetsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post outbound callabletimesets request entity too large response a status code equal to that given
func (o *PostOutboundCallabletimesetsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostOutboundCallabletimesetsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/callabletimesets][%d] postOutboundCallabletimesetsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostOutboundCallabletimesetsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/outbound/callabletimesets][%d] postOutboundCallabletimesetsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostOutboundCallabletimesetsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundCallabletimesetsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundCallabletimesetsUnsupportedMediaType creates a PostOutboundCallabletimesetsUnsupportedMediaType with default headers values
func NewPostOutboundCallabletimesetsUnsupportedMediaType() *PostOutboundCallabletimesetsUnsupportedMediaType {
	return &PostOutboundCallabletimesetsUnsupportedMediaType{}
}

/*
PostOutboundCallabletimesetsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostOutboundCallabletimesetsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post outbound callabletimesets unsupported media type response has a 2xx status code
func (o *PostOutboundCallabletimesetsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post outbound callabletimesets unsupported media type response has a 3xx status code
func (o *PostOutboundCallabletimesetsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post outbound callabletimesets unsupported media type response has a 4xx status code
func (o *PostOutboundCallabletimesetsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post outbound callabletimesets unsupported media type response has a 5xx status code
func (o *PostOutboundCallabletimesetsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post outbound callabletimesets unsupported media type response a status code equal to that given
func (o *PostOutboundCallabletimesetsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostOutboundCallabletimesetsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/callabletimesets][%d] postOutboundCallabletimesetsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostOutboundCallabletimesetsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/outbound/callabletimesets][%d] postOutboundCallabletimesetsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostOutboundCallabletimesetsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundCallabletimesetsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundCallabletimesetsTooManyRequests creates a PostOutboundCallabletimesetsTooManyRequests with default headers values
func NewPostOutboundCallabletimesetsTooManyRequests() *PostOutboundCallabletimesetsTooManyRequests {
	return &PostOutboundCallabletimesetsTooManyRequests{}
}

/*
PostOutboundCallabletimesetsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostOutboundCallabletimesetsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post outbound callabletimesets too many requests response has a 2xx status code
func (o *PostOutboundCallabletimesetsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post outbound callabletimesets too many requests response has a 3xx status code
func (o *PostOutboundCallabletimesetsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post outbound callabletimesets too many requests response has a 4xx status code
func (o *PostOutboundCallabletimesetsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post outbound callabletimesets too many requests response has a 5xx status code
func (o *PostOutboundCallabletimesetsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post outbound callabletimesets too many requests response a status code equal to that given
func (o *PostOutboundCallabletimesetsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostOutboundCallabletimesetsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/callabletimesets][%d] postOutboundCallabletimesetsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostOutboundCallabletimesetsTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/outbound/callabletimesets][%d] postOutboundCallabletimesetsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostOutboundCallabletimesetsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundCallabletimesetsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundCallabletimesetsInternalServerError creates a PostOutboundCallabletimesetsInternalServerError with default headers values
func NewPostOutboundCallabletimesetsInternalServerError() *PostOutboundCallabletimesetsInternalServerError {
	return &PostOutboundCallabletimesetsInternalServerError{}
}

/*
PostOutboundCallabletimesetsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostOutboundCallabletimesetsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post outbound callabletimesets internal server error response has a 2xx status code
func (o *PostOutboundCallabletimesetsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post outbound callabletimesets internal server error response has a 3xx status code
func (o *PostOutboundCallabletimesetsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post outbound callabletimesets internal server error response has a 4xx status code
func (o *PostOutboundCallabletimesetsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post outbound callabletimesets internal server error response has a 5xx status code
func (o *PostOutboundCallabletimesetsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post outbound callabletimesets internal server error response a status code equal to that given
func (o *PostOutboundCallabletimesetsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostOutboundCallabletimesetsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/callabletimesets][%d] postOutboundCallabletimesetsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostOutboundCallabletimesetsInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/outbound/callabletimesets][%d] postOutboundCallabletimesetsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostOutboundCallabletimesetsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundCallabletimesetsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundCallabletimesetsServiceUnavailable creates a PostOutboundCallabletimesetsServiceUnavailable with default headers values
func NewPostOutboundCallabletimesetsServiceUnavailable() *PostOutboundCallabletimesetsServiceUnavailable {
	return &PostOutboundCallabletimesetsServiceUnavailable{}
}

/*
PostOutboundCallabletimesetsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostOutboundCallabletimesetsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post outbound callabletimesets service unavailable response has a 2xx status code
func (o *PostOutboundCallabletimesetsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post outbound callabletimesets service unavailable response has a 3xx status code
func (o *PostOutboundCallabletimesetsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post outbound callabletimesets service unavailable response has a 4xx status code
func (o *PostOutboundCallabletimesetsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post outbound callabletimesets service unavailable response has a 5xx status code
func (o *PostOutboundCallabletimesetsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post outbound callabletimesets service unavailable response a status code equal to that given
func (o *PostOutboundCallabletimesetsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostOutboundCallabletimesetsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/callabletimesets][%d] postOutboundCallabletimesetsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostOutboundCallabletimesetsServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/outbound/callabletimesets][%d] postOutboundCallabletimesetsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostOutboundCallabletimesetsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundCallabletimesetsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundCallabletimesetsGatewayTimeout creates a PostOutboundCallabletimesetsGatewayTimeout with default headers values
func NewPostOutboundCallabletimesetsGatewayTimeout() *PostOutboundCallabletimesetsGatewayTimeout {
	return &PostOutboundCallabletimesetsGatewayTimeout{}
}

/*
PostOutboundCallabletimesetsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostOutboundCallabletimesetsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post outbound callabletimesets gateway timeout response has a 2xx status code
func (o *PostOutboundCallabletimesetsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post outbound callabletimesets gateway timeout response has a 3xx status code
func (o *PostOutboundCallabletimesetsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post outbound callabletimesets gateway timeout response has a 4xx status code
func (o *PostOutboundCallabletimesetsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post outbound callabletimesets gateway timeout response has a 5xx status code
func (o *PostOutboundCallabletimesetsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post outbound callabletimesets gateway timeout response a status code equal to that given
func (o *PostOutboundCallabletimesetsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostOutboundCallabletimesetsGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/callabletimesets][%d] postOutboundCallabletimesetsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostOutboundCallabletimesetsGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/outbound/callabletimesets][%d] postOutboundCallabletimesetsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostOutboundCallabletimesetsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundCallabletimesetsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
