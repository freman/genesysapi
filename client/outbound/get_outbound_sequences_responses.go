// Code generated by go-swagger; DO NOT EDIT.

package outbound

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetOutboundSequencesReader is a Reader for the GetOutboundSequences structure.
type GetOutboundSequencesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOutboundSequencesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOutboundSequencesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOutboundSequencesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetOutboundSequencesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetOutboundSequencesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOutboundSequencesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetOutboundSequencesRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetOutboundSequencesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetOutboundSequencesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetOutboundSequencesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOutboundSequencesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetOutboundSequencesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetOutboundSequencesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetOutboundSequencesOK creates a GetOutboundSequencesOK with default headers values
func NewGetOutboundSequencesOK() *GetOutboundSequencesOK {
	return &GetOutboundSequencesOK{}
}

/*
GetOutboundSequencesOK describes a response with status code 200, with default header values.

successful operation
*/
type GetOutboundSequencesOK struct {
	Payload *models.CampaignSequenceEntityListing
}

// IsSuccess returns true when this get outbound sequences o k response has a 2xx status code
func (o *GetOutboundSequencesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get outbound sequences o k response has a 3xx status code
func (o *GetOutboundSequencesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound sequences o k response has a 4xx status code
func (o *GetOutboundSequencesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get outbound sequences o k response has a 5xx status code
func (o *GetOutboundSequencesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound sequences o k response a status code equal to that given
func (o *GetOutboundSequencesOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetOutboundSequencesOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/sequences][%d] getOutboundSequencesOK  %+v", 200, o.Payload)
}

func (o *GetOutboundSequencesOK) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/sequences][%d] getOutboundSequencesOK  %+v", 200, o.Payload)
}

func (o *GetOutboundSequencesOK) GetPayload() *models.CampaignSequenceEntityListing {
	return o.Payload
}

func (o *GetOutboundSequencesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CampaignSequenceEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundSequencesBadRequest creates a GetOutboundSequencesBadRequest with default headers values
func NewGetOutboundSequencesBadRequest() *GetOutboundSequencesBadRequest {
	return &GetOutboundSequencesBadRequest{}
}

/*
GetOutboundSequencesBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetOutboundSequencesBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound sequences bad request response has a 2xx status code
func (o *GetOutboundSequencesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound sequences bad request response has a 3xx status code
func (o *GetOutboundSequencesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound sequences bad request response has a 4xx status code
func (o *GetOutboundSequencesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outbound sequences bad request response has a 5xx status code
func (o *GetOutboundSequencesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound sequences bad request response a status code equal to that given
func (o *GetOutboundSequencesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetOutboundSequencesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/sequences][%d] getOutboundSequencesBadRequest  %+v", 400, o.Payload)
}

func (o *GetOutboundSequencesBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/sequences][%d] getOutboundSequencesBadRequest  %+v", 400, o.Payload)
}

func (o *GetOutboundSequencesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundSequencesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundSequencesUnauthorized creates a GetOutboundSequencesUnauthorized with default headers values
func NewGetOutboundSequencesUnauthorized() *GetOutboundSequencesUnauthorized {
	return &GetOutboundSequencesUnauthorized{}
}

/*
GetOutboundSequencesUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetOutboundSequencesUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound sequences unauthorized response has a 2xx status code
func (o *GetOutboundSequencesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound sequences unauthorized response has a 3xx status code
func (o *GetOutboundSequencesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound sequences unauthorized response has a 4xx status code
func (o *GetOutboundSequencesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outbound sequences unauthorized response has a 5xx status code
func (o *GetOutboundSequencesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound sequences unauthorized response a status code equal to that given
func (o *GetOutboundSequencesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetOutboundSequencesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/sequences][%d] getOutboundSequencesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetOutboundSequencesUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/sequences][%d] getOutboundSequencesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetOutboundSequencesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundSequencesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundSequencesForbidden creates a GetOutboundSequencesForbidden with default headers values
func NewGetOutboundSequencesForbidden() *GetOutboundSequencesForbidden {
	return &GetOutboundSequencesForbidden{}
}

/*
GetOutboundSequencesForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetOutboundSequencesForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound sequences forbidden response has a 2xx status code
func (o *GetOutboundSequencesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound sequences forbidden response has a 3xx status code
func (o *GetOutboundSequencesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound sequences forbidden response has a 4xx status code
func (o *GetOutboundSequencesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outbound sequences forbidden response has a 5xx status code
func (o *GetOutboundSequencesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound sequences forbidden response a status code equal to that given
func (o *GetOutboundSequencesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetOutboundSequencesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/sequences][%d] getOutboundSequencesForbidden  %+v", 403, o.Payload)
}

func (o *GetOutboundSequencesForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/sequences][%d] getOutboundSequencesForbidden  %+v", 403, o.Payload)
}

func (o *GetOutboundSequencesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundSequencesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundSequencesNotFound creates a GetOutboundSequencesNotFound with default headers values
func NewGetOutboundSequencesNotFound() *GetOutboundSequencesNotFound {
	return &GetOutboundSequencesNotFound{}
}

/*
GetOutboundSequencesNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetOutboundSequencesNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound sequences not found response has a 2xx status code
func (o *GetOutboundSequencesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound sequences not found response has a 3xx status code
func (o *GetOutboundSequencesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound sequences not found response has a 4xx status code
func (o *GetOutboundSequencesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outbound sequences not found response has a 5xx status code
func (o *GetOutboundSequencesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound sequences not found response a status code equal to that given
func (o *GetOutboundSequencesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetOutboundSequencesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/sequences][%d] getOutboundSequencesNotFound  %+v", 404, o.Payload)
}

func (o *GetOutboundSequencesNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/sequences][%d] getOutboundSequencesNotFound  %+v", 404, o.Payload)
}

func (o *GetOutboundSequencesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundSequencesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundSequencesRequestTimeout creates a GetOutboundSequencesRequestTimeout with default headers values
func NewGetOutboundSequencesRequestTimeout() *GetOutboundSequencesRequestTimeout {
	return &GetOutboundSequencesRequestTimeout{}
}

/*
GetOutboundSequencesRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetOutboundSequencesRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound sequences request timeout response has a 2xx status code
func (o *GetOutboundSequencesRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound sequences request timeout response has a 3xx status code
func (o *GetOutboundSequencesRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound sequences request timeout response has a 4xx status code
func (o *GetOutboundSequencesRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outbound sequences request timeout response has a 5xx status code
func (o *GetOutboundSequencesRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound sequences request timeout response a status code equal to that given
func (o *GetOutboundSequencesRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetOutboundSequencesRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/sequences][%d] getOutboundSequencesRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetOutboundSequencesRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/sequences][%d] getOutboundSequencesRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetOutboundSequencesRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundSequencesRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundSequencesRequestEntityTooLarge creates a GetOutboundSequencesRequestEntityTooLarge with default headers values
func NewGetOutboundSequencesRequestEntityTooLarge() *GetOutboundSequencesRequestEntityTooLarge {
	return &GetOutboundSequencesRequestEntityTooLarge{}
}

/*
GetOutboundSequencesRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetOutboundSequencesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound sequences request entity too large response has a 2xx status code
func (o *GetOutboundSequencesRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound sequences request entity too large response has a 3xx status code
func (o *GetOutboundSequencesRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound sequences request entity too large response has a 4xx status code
func (o *GetOutboundSequencesRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outbound sequences request entity too large response has a 5xx status code
func (o *GetOutboundSequencesRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound sequences request entity too large response a status code equal to that given
func (o *GetOutboundSequencesRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetOutboundSequencesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/sequences][%d] getOutboundSequencesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetOutboundSequencesRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/sequences][%d] getOutboundSequencesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetOutboundSequencesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundSequencesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundSequencesUnsupportedMediaType creates a GetOutboundSequencesUnsupportedMediaType with default headers values
func NewGetOutboundSequencesUnsupportedMediaType() *GetOutboundSequencesUnsupportedMediaType {
	return &GetOutboundSequencesUnsupportedMediaType{}
}

/*
GetOutboundSequencesUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetOutboundSequencesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound sequences unsupported media type response has a 2xx status code
func (o *GetOutboundSequencesUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound sequences unsupported media type response has a 3xx status code
func (o *GetOutboundSequencesUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound sequences unsupported media type response has a 4xx status code
func (o *GetOutboundSequencesUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outbound sequences unsupported media type response has a 5xx status code
func (o *GetOutboundSequencesUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound sequences unsupported media type response a status code equal to that given
func (o *GetOutboundSequencesUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetOutboundSequencesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/sequences][%d] getOutboundSequencesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetOutboundSequencesUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/sequences][%d] getOutboundSequencesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetOutboundSequencesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundSequencesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundSequencesTooManyRequests creates a GetOutboundSequencesTooManyRequests with default headers values
func NewGetOutboundSequencesTooManyRequests() *GetOutboundSequencesTooManyRequests {
	return &GetOutboundSequencesTooManyRequests{}
}

/*
GetOutboundSequencesTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetOutboundSequencesTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound sequences too many requests response has a 2xx status code
func (o *GetOutboundSequencesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound sequences too many requests response has a 3xx status code
func (o *GetOutboundSequencesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound sequences too many requests response has a 4xx status code
func (o *GetOutboundSequencesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outbound sequences too many requests response has a 5xx status code
func (o *GetOutboundSequencesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound sequences too many requests response a status code equal to that given
func (o *GetOutboundSequencesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetOutboundSequencesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/sequences][%d] getOutboundSequencesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetOutboundSequencesTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/sequences][%d] getOutboundSequencesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetOutboundSequencesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundSequencesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundSequencesInternalServerError creates a GetOutboundSequencesInternalServerError with default headers values
func NewGetOutboundSequencesInternalServerError() *GetOutboundSequencesInternalServerError {
	return &GetOutboundSequencesInternalServerError{}
}

/*
GetOutboundSequencesInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetOutboundSequencesInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound sequences internal server error response has a 2xx status code
func (o *GetOutboundSequencesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound sequences internal server error response has a 3xx status code
func (o *GetOutboundSequencesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound sequences internal server error response has a 4xx status code
func (o *GetOutboundSequencesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get outbound sequences internal server error response has a 5xx status code
func (o *GetOutboundSequencesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get outbound sequences internal server error response a status code equal to that given
func (o *GetOutboundSequencesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetOutboundSequencesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/sequences][%d] getOutboundSequencesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOutboundSequencesInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/sequences][%d] getOutboundSequencesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOutboundSequencesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundSequencesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundSequencesServiceUnavailable creates a GetOutboundSequencesServiceUnavailable with default headers values
func NewGetOutboundSequencesServiceUnavailable() *GetOutboundSequencesServiceUnavailable {
	return &GetOutboundSequencesServiceUnavailable{}
}

/*
GetOutboundSequencesServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetOutboundSequencesServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound sequences service unavailable response has a 2xx status code
func (o *GetOutboundSequencesServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound sequences service unavailable response has a 3xx status code
func (o *GetOutboundSequencesServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound sequences service unavailable response has a 4xx status code
func (o *GetOutboundSequencesServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get outbound sequences service unavailable response has a 5xx status code
func (o *GetOutboundSequencesServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get outbound sequences service unavailable response a status code equal to that given
func (o *GetOutboundSequencesServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetOutboundSequencesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/sequences][%d] getOutboundSequencesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetOutboundSequencesServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/sequences][%d] getOutboundSequencesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetOutboundSequencesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundSequencesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundSequencesGatewayTimeout creates a GetOutboundSequencesGatewayTimeout with default headers values
func NewGetOutboundSequencesGatewayTimeout() *GetOutboundSequencesGatewayTimeout {
	return &GetOutboundSequencesGatewayTimeout{}
}

/*
GetOutboundSequencesGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetOutboundSequencesGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound sequences gateway timeout response has a 2xx status code
func (o *GetOutboundSequencesGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound sequences gateway timeout response has a 3xx status code
func (o *GetOutboundSequencesGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound sequences gateway timeout response has a 4xx status code
func (o *GetOutboundSequencesGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get outbound sequences gateway timeout response has a 5xx status code
func (o *GetOutboundSequencesGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get outbound sequences gateway timeout response a status code equal to that given
func (o *GetOutboundSequencesGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetOutboundSequencesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/sequences][%d] getOutboundSequencesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetOutboundSequencesGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/sequences][%d] getOutboundSequencesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetOutboundSequencesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundSequencesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
