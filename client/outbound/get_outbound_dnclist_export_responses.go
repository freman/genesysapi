// Code generated by go-swagger; DO NOT EDIT.

package outbound

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetOutboundDnclistExportReader is a Reader for the GetOutboundDnclistExport structure.
type GetOutboundDnclistExportReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOutboundDnclistExportReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOutboundDnclistExportOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOutboundDnclistExportBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetOutboundDnclistExportUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetOutboundDnclistExportForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOutboundDnclistExportNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetOutboundDnclistExportRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetOutboundDnclistExportRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetOutboundDnclistExportUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetOutboundDnclistExportTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOutboundDnclistExportInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetOutboundDnclistExportServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetOutboundDnclistExportGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetOutboundDnclistExportOK creates a GetOutboundDnclistExportOK with default headers values
func NewGetOutboundDnclistExportOK() *GetOutboundDnclistExportOK {
	return &GetOutboundDnclistExportOK{}
}

/*GetOutboundDnclistExportOK handles this case with default header values.

successful operation
*/
type GetOutboundDnclistExportOK struct {
	Payload *models.ExportURI
}

func (o *GetOutboundDnclistExportOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/dnclists/{dncListId}/export][%d] getOutboundDnclistExportOK  %+v", 200, o.Payload)
}

func (o *GetOutboundDnclistExportOK) GetPayload() *models.ExportURI {
	return o.Payload
}

func (o *GetOutboundDnclistExportOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ExportURI)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundDnclistExportBadRequest creates a GetOutboundDnclistExportBadRequest with default headers values
func NewGetOutboundDnclistExportBadRequest() *GetOutboundDnclistExportBadRequest {
	return &GetOutboundDnclistExportBadRequest{}
}

/*GetOutboundDnclistExportBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetOutboundDnclistExportBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundDnclistExportBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/dnclists/{dncListId}/export][%d] getOutboundDnclistExportBadRequest  %+v", 400, o.Payload)
}

func (o *GetOutboundDnclistExportBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundDnclistExportBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundDnclistExportUnauthorized creates a GetOutboundDnclistExportUnauthorized with default headers values
func NewGetOutboundDnclistExportUnauthorized() *GetOutboundDnclistExportUnauthorized {
	return &GetOutboundDnclistExportUnauthorized{}
}

/*GetOutboundDnclistExportUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetOutboundDnclistExportUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundDnclistExportUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/dnclists/{dncListId}/export][%d] getOutboundDnclistExportUnauthorized  %+v", 401, o.Payload)
}

func (o *GetOutboundDnclistExportUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundDnclistExportUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundDnclistExportForbidden creates a GetOutboundDnclistExportForbidden with default headers values
func NewGetOutboundDnclistExportForbidden() *GetOutboundDnclistExportForbidden {
	return &GetOutboundDnclistExportForbidden{}
}

/*GetOutboundDnclistExportForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetOutboundDnclistExportForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundDnclistExportForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/dnclists/{dncListId}/export][%d] getOutboundDnclistExportForbidden  %+v", 403, o.Payload)
}

func (o *GetOutboundDnclistExportForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundDnclistExportForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundDnclistExportNotFound creates a GetOutboundDnclistExportNotFound with default headers values
func NewGetOutboundDnclistExportNotFound() *GetOutboundDnclistExportNotFound {
	return &GetOutboundDnclistExportNotFound{}
}

/*GetOutboundDnclistExportNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetOutboundDnclistExportNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundDnclistExportNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/dnclists/{dncListId}/export][%d] getOutboundDnclistExportNotFound  %+v", 404, o.Payload)
}

func (o *GetOutboundDnclistExportNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundDnclistExportNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundDnclistExportRequestTimeout creates a GetOutboundDnclistExportRequestTimeout with default headers values
func NewGetOutboundDnclistExportRequestTimeout() *GetOutboundDnclistExportRequestTimeout {
	return &GetOutboundDnclistExportRequestTimeout{}
}

/*GetOutboundDnclistExportRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetOutboundDnclistExportRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundDnclistExportRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/dnclists/{dncListId}/export][%d] getOutboundDnclistExportRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetOutboundDnclistExportRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundDnclistExportRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundDnclistExportRequestEntityTooLarge creates a GetOutboundDnclistExportRequestEntityTooLarge with default headers values
func NewGetOutboundDnclistExportRequestEntityTooLarge() *GetOutboundDnclistExportRequestEntityTooLarge {
	return &GetOutboundDnclistExportRequestEntityTooLarge{}
}

/*GetOutboundDnclistExportRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetOutboundDnclistExportRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundDnclistExportRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/dnclists/{dncListId}/export][%d] getOutboundDnclistExportRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetOutboundDnclistExportRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundDnclistExportRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundDnclistExportUnsupportedMediaType creates a GetOutboundDnclistExportUnsupportedMediaType with default headers values
func NewGetOutboundDnclistExportUnsupportedMediaType() *GetOutboundDnclistExportUnsupportedMediaType {
	return &GetOutboundDnclistExportUnsupportedMediaType{}
}

/*GetOutboundDnclistExportUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetOutboundDnclistExportUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundDnclistExportUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/dnclists/{dncListId}/export][%d] getOutboundDnclistExportUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetOutboundDnclistExportUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundDnclistExportUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundDnclistExportTooManyRequests creates a GetOutboundDnclistExportTooManyRequests with default headers values
func NewGetOutboundDnclistExportTooManyRequests() *GetOutboundDnclistExportTooManyRequests {
	return &GetOutboundDnclistExportTooManyRequests{}
}

/*GetOutboundDnclistExportTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetOutboundDnclistExportTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundDnclistExportTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/dnclists/{dncListId}/export][%d] getOutboundDnclistExportTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetOutboundDnclistExportTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundDnclistExportTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundDnclistExportInternalServerError creates a GetOutboundDnclistExportInternalServerError with default headers values
func NewGetOutboundDnclistExportInternalServerError() *GetOutboundDnclistExportInternalServerError {
	return &GetOutboundDnclistExportInternalServerError{}
}

/*GetOutboundDnclistExportInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetOutboundDnclistExportInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundDnclistExportInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/dnclists/{dncListId}/export][%d] getOutboundDnclistExportInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOutboundDnclistExportInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundDnclistExportInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundDnclistExportServiceUnavailable creates a GetOutboundDnclistExportServiceUnavailable with default headers values
func NewGetOutboundDnclistExportServiceUnavailable() *GetOutboundDnclistExportServiceUnavailable {
	return &GetOutboundDnclistExportServiceUnavailable{}
}

/*GetOutboundDnclistExportServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetOutboundDnclistExportServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundDnclistExportServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/dnclists/{dncListId}/export][%d] getOutboundDnclistExportServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetOutboundDnclistExportServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundDnclistExportServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundDnclistExportGatewayTimeout creates a GetOutboundDnclistExportGatewayTimeout with default headers values
func NewGetOutboundDnclistExportGatewayTimeout() *GetOutboundDnclistExportGatewayTimeout {
	return &GetOutboundDnclistExportGatewayTimeout{}
}

/*GetOutboundDnclistExportGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetOutboundDnclistExportGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundDnclistExportGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/dnclists/{dncListId}/export][%d] getOutboundDnclistExportGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetOutboundDnclistExportGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundDnclistExportGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
