// Code generated by go-swagger; DO NOT EDIT.

package outbound

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetOutboundContactlistReader is a Reader for the GetOutboundContactlist structure.
type GetOutboundContactlistReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOutboundContactlistReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOutboundContactlistOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOutboundContactlistBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetOutboundContactlistUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetOutboundContactlistForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOutboundContactlistNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetOutboundContactlistRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetOutboundContactlistRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetOutboundContactlistUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetOutboundContactlistTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOutboundContactlistInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetOutboundContactlistServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetOutboundContactlistGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetOutboundContactlistOK creates a GetOutboundContactlistOK with default headers values
func NewGetOutboundContactlistOK() *GetOutboundContactlistOK {
	return &GetOutboundContactlistOK{}
}

/*GetOutboundContactlistOK handles this case with default header values.

successful operation
*/
type GetOutboundContactlistOK struct {
	Payload *models.ContactList
}

func (o *GetOutboundContactlistOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/{contactListId}][%d] getOutboundContactlistOK  %+v", 200, o.Payload)
}

func (o *GetOutboundContactlistOK) GetPayload() *models.ContactList {
	return o.Payload
}

func (o *GetOutboundContactlistOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ContactList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundContactlistBadRequest creates a GetOutboundContactlistBadRequest with default headers values
func NewGetOutboundContactlistBadRequest() *GetOutboundContactlistBadRequest {
	return &GetOutboundContactlistBadRequest{}
}

/*GetOutboundContactlistBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetOutboundContactlistBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundContactlistBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/{contactListId}][%d] getOutboundContactlistBadRequest  %+v", 400, o.Payload)
}

func (o *GetOutboundContactlistBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundContactlistBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundContactlistUnauthorized creates a GetOutboundContactlistUnauthorized with default headers values
func NewGetOutboundContactlistUnauthorized() *GetOutboundContactlistUnauthorized {
	return &GetOutboundContactlistUnauthorized{}
}

/*GetOutboundContactlistUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetOutboundContactlistUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundContactlistUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/{contactListId}][%d] getOutboundContactlistUnauthorized  %+v", 401, o.Payload)
}

func (o *GetOutboundContactlistUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundContactlistUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundContactlistForbidden creates a GetOutboundContactlistForbidden with default headers values
func NewGetOutboundContactlistForbidden() *GetOutboundContactlistForbidden {
	return &GetOutboundContactlistForbidden{}
}

/*GetOutboundContactlistForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetOutboundContactlistForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundContactlistForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/{contactListId}][%d] getOutboundContactlistForbidden  %+v", 403, o.Payload)
}

func (o *GetOutboundContactlistForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundContactlistForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundContactlistNotFound creates a GetOutboundContactlistNotFound with default headers values
func NewGetOutboundContactlistNotFound() *GetOutboundContactlistNotFound {
	return &GetOutboundContactlistNotFound{}
}

/*GetOutboundContactlistNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetOutboundContactlistNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundContactlistNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/{contactListId}][%d] getOutboundContactlistNotFound  %+v", 404, o.Payload)
}

func (o *GetOutboundContactlistNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundContactlistNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundContactlistRequestTimeout creates a GetOutboundContactlistRequestTimeout with default headers values
func NewGetOutboundContactlistRequestTimeout() *GetOutboundContactlistRequestTimeout {
	return &GetOutboundContactlistRequestTimeout{}
}

/*GetOutboundContactlistRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetOutboundContactlistRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundContactlistRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/{contactListId}][%d] getOutboundContactlistRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetOutboundContactlistRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundContactlistRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundContactlistRequestEntityTooLarge creates a GetOutboundContactlistRequestEntityTooLarge with default headers values
func NewGetOutboundContactlistRequestEntityTooLarge() *GetOutboundContactlistRequestEntityTooLarge {
	return &GetOutboundContactlistRequestEntityTooLarge{}
}

/*GetOutboundContactlistRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetOutboundContactlistRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundContactlistRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/{contactListId}][%d] getOutboundContactlistRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetOutboundContactlistRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundContactlistRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundContactlistUnsupportedMediaType creates a GetOutboundContactlistUnsupportedMediaType with default headers values
func NewGetOutboundContactlistUnsupportedMediaType() *GetOutboundContactlistUnsupportedMediaType {
	return &GetOutboundContactlistUnsupportedMediaType{}
}

/*GetOutboundContactlistUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetOutboundContactlistUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundContactlistUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/{contactListId}][%d] getOutboundContactlistUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetOutboundContactlistUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundContactlistUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundContactlistTooManyRequests creates a GetOutboundContactlistTooManyRequests with default headers values
func NewGetOutboundContactlistTooManyRequests() *GetOutboundContactlistTooManyRequests {
	return &GetOutboundContactlistTooManyRequests{}
}

/*GetOutboundContactlistTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetOutboundContactlistTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundContactlistTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/{contactListId}][%d] getOutboundContactlistTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetOutboundContactlistTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundContactlistTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundContactlistInternalServerError creates a GetOutboundContactlistInternalServerError with default headers values
func NewGetOutboundContactlistInternalServerError() *GetOutboundContactlistInternalServerError {
	return &GetOutboundContactlistInternalServerError{}
}

/*GetOutboundContactlistInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetOutboundContactlistInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundContactlistInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/{contactListId}][%d] getOutboundContactlistInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOutboundContactlistInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundContactlistInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundContactlistServiceUnavailable creates a GetOutboundContactlistServiceUnavailable with default headers values
func NewGetOutboundContactlistServiceUnavailable() *GetOutboundContactlistServiceUnavailable {
	return &GetOutboundContactlistServiceUnavailable{}
}

/*GetOutboundContactlistServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetOutboundContactlistServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundContactlistServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/{contactListId}][%d] getOutboundContactlistServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetOutboundContactlistServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundContactlistServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundContactlistGatewayTimeout creates a GetOutboundContactlistGatewayTimeout with default headers values
func NewGetOutboundContactlistGatewayTimeout() *GetOutboundContactlistGatewayTimeout {
	return &GetOutboundContactlistGatewayTimeout{}
}

/*GetOutboundContactlistGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetOutboundContactlistGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundContactlistGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/{contactListId}][%d] getOutboundContactlistGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetOutboundContactlistGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundContactlistGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
