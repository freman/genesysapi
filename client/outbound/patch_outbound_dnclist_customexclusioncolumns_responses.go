// Code generated by go-swagger; DO NOT EDIT.

package outbound

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PatchOutboundDnclistCustomexclusioncolumnsReader is a Reader for the PatchOutboundDnclistCustomexclusioncolumns structure.
type PatchOutboundDnclistCustomexclusioncolumnsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchOutboundDnclistCustomexclusioncolumnsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPatchOutboundDnclistCustomexclusioncolumnsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchOutboundDnclistCustomexclusioncolumnsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPatchOutboundDnclistCustomexclusioncolumnsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchOutboundDnclistCustomexclusioncolumnsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchOutboundDnclistCustomexclusioncolumnsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPatchOutboundDnclistCustomexclusioncolumnsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPatchOutboundDnclistCustomexclusioncolumnsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPatchOutboundDnclistCustomexclusioncolumnsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPatchOutboundDnclistCustomexclusioncolumnsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchOutboundDnclistCustomexclusioncolumnsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 501:
		result := NewPatchOutboundDnclistCustomexclusioncolumnsNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPatchOutboundDnclistCustomexclusioncolumnsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPatchOutboundDnclistCustomexclusioncolumnsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchOutboundDnclistCustomexclusioncolumnsNoContent creates a PatchOutboundDnclistCustomexclusioncolumnsNoContent with default headers values
func NewPatchOutboundDnclistCustomexclusioncolumnsNoContent() *PatchOutboundDnclistCustomexclusioncolumnsNoContent {
	return &PatchOutboundDnclistCustomexclusioncolumnsNoContent{}
}

/*
PatchOutboundDnclistCustomexclusioncolumnsNoContent describes a response with status code 204, with default header values.

No Content
*/
type PatchOutboundDnclistCustomexclusioncolumnsNoContent struct {
}

// IsSuccess returns true when this patch outbound dnclist customexclusioncolumns no content response has a 2xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this patch outbound dnclist customexclusioncolumns no content response has a 3xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch outbound dnclist customexclusioncolumns no content response has a 4xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch outbound dnclist customexclusioncolumns no content response has a 5xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this patch outbound dnclist customexclusioncolumns no content response a status code equal to that given
func (o *PatchOutboundDnclistCustomexclusioncolumnsNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsNoContent) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/customexclusioncolumns][%d] patchOutboundDnclistCustomexclusioncolumnsNoContent ", 204)
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsNoContent) String() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/customexclusioncolumns][%d] patchOutboundDnclistCustomexclusioncolumnsNoContent ", 204)
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchOutboundDnclistCustomexclusioncolumnsBadRequest creates a PatchOutboundDnclistCustomexclusioncolumnsBadRequest with default headers values
func NewPatchOutboundDnclistCustomexclusioncolumnsBadRequest() *PatchOutboundDnclistCustomexclusioncolumnsBadRequest {
	return &PatchOutboundDnclistCustomexclusioncolumnsBadRequest{}
}

/*
PatchOutboundDnclistCustomexclusioncolumnsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PatchOutboundDnclistCustomexclusioncolumnsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch outbound dnclist customexclusioncolumns bad request response has a 2xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch outbound dnclist customexclusioncolumns bad request response has a 3xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch outbound dnclist customexclusioncolumns bad request response has a 4xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch outbound dnclist customexclusioncolumns bad request response has a 5xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this patch outbound dnclist customexclusioncolumns bad request response a status code equal to that given
func (o *PatchOutboundDnclistCustomexclusioncolumnsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/customexclusioncolumns][%d] patchOutboundDnclistCustomexclusioncolumnsBadRequest  %+v", 400, o.Payload)
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsBadRequest) String() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/customexclusioncolumns][%d] patchOutboundDnclistCustomexclusioncolumnsBadRequest  %+v", 400, o.Payload)
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchOutboundDnclistCustomexclusioncolumnsUnauthorized creates a PatchOutboundDnclistCustomexclusioncolumnsUnauthorized with default headers values
func NewPatchOutboundDnclistCustomexclusioncolumnsUnauthorized() *PatchOutboundDnclistCustomexclusioncolumnsUnauthorized {
	return &PatchOutboundDnclistCustomexclusioncolumnsUnauthorized{}
}

/*
PatchOutboundDnclistCustomexclusioncolumnsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PatchOutboundDnclistCustomexclusioncolumnsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch outbound dnclist customexclusioncolumns unauthorized response has a 2xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch outbound dnclist customexclusioncolumns unauthorized response has a 3xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch outbound dnclist customexclusioncolumns unauthorized response has a 4xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch outbound dnclist customexclusioncolumns unauthorized response has a 5xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this patch outbound dnclist customexclusioncolumns unauthorized response a status code equal to that given
func (o *PatchOutboundDnclistCustomexclusioncolumnsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/customexclusioncolumns][%d] patchOutboundDnclistCustomexclusioncolumnsUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsUnauthorized) String() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/customexclusioncolumns][%d] patchOutboundDnclistCustomexclusioncolumnsUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchOutboundDnclistCustomexclusioncolumnsForbidden creates a PatchOutboundDnclistCustomexclusioncolumnsForbidden with default headers values
func NewPatchOutboundDnclistCustomexclusioncolumnsForbidden() *PatchOutboundDnclistCustomexclusioncolumnsForbidden {
	return &PatchOutboundDnclistCustomexclusioncolumnsForbidden{}
}

/*
PatchOutboundDnclistCustomexclusioncolumnsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PatchOutboundDnclistCustomexclusioncolumnsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch outbound dnclist customexclusioncolumns forbidden response has a 2xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch outbound dnclist customexclusioncolumns forbidden response has a 3xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch outbound dnclist customexclusioncolumns forbidden response has a 4xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch outbound dnclist customexclusioncolumns forbidden response has a 5xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this patch outbound dnclist customexclusioncolumns forbidden response a status code equal to that given
func (o *PatchOutboundDnclistCustomexclusioncolumnsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/customexclusioncolumns][%d] patchOutboundDnclistCustomexclusioncolumnsForbidden  %+v", 403, o.Payload)
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsForbidden) String() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/customexclusioncolumns][%d] patchOutboundDnclistCustomexclusioncolumnsForbidden  %+v", 403, o.Payload)
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchOutboundDnclistCustomexclusioncolumnsNotFound creates a PatchOutboundDnclistCustomexclusioncolumnsNotFound with default headers values
func NewPatchOutboundDnclistCustomexclusioncolumnsNotFound() *PatchOutboundDnclistCustomexclusioncolumnsNotFound {
	return &PatchOutboundDnclistCustomexclusioncolumnsNotFound{}
}

/*
PatchOutboundDnclistCustomexclusioncolumnsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PatchOutboundDnclistCustomexclusioncolumnsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch outbound dnclist customexclusioncolumns not found response has a 2xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch outbound dnclist customexclusioncolumns not found response has a 3xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch outbound dnclist customexclusioncolumns not found response has a 4xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch outbound dnclist customexclusioncolumns not found response has a 5xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this patch outbound dnclist customexclusioncolumns not found response a status code equal to that given
func (o *PatchOutboundDnclistCustomexclusioncolumnsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/customexclusioncolumns][%d] patchOutboundDnclistCustomexclusioncolumnsNotFound  %+v", 404, o.Payload)
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsNotFound) String() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/customexclusioncolumns][%d] patchOutboundDnclistCustomexclusioncolumnsNotFound  %+v", 404, o.Payload)
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchOutboundDnclistCustomexclusioncolumnsRequestTimeout creates a PatchOutboundDnclistCustomexclusioncolumnsRequestTimeout with default headers values
func NewPatchOutboundDnclistCustomexclusioncolumnsRequestTimeout() *PatchOutboundDnclistCustomexclusioncolumnsRequestTimeout {
	return &PatchOutboundDnclistCustomexclusioncolumnsRequestTimeout{}
}

/*
PatchOutboundDnclistCustomexclusioncolumnsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PatchOutboundDnclistCustomexclusioncolumnsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch outbound dnclist customexclusioncolumns request timeout response has a 2xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch outbound dnclist customexclusioncolumns request timeout response has a 3xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch outbound dnclist customexclusioncolumns request timeout response has a 4xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch outbound dnclist customexclusioncolumns request timeout response has a 5xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this patch outbound dnclist customexclusioncolumns request timeout response a status code equal to that given
func (o *PatchOutboundDnclistCustomexclusioncolumnsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsRequestTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/customexclusioncolumns][%d] patchOutboundDnclistCustomexclusioncolumnsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsRequestTimeout) String() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/customexclusioncolumns][%d] patchOutboundDnclistCustomexclusioncolumnsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchOutboundDnclistCustomexclusioncolumnsRequestEntityTooLarge creates a PatchOutboundDnclistCustomexclusioncolumnsRequestEntityTooLarge with default headers values
func NewPatchOutboundDnclistCustomexclusioncolumnsRequestEntityTooLarge() *PatchOutboundDnclistCustomexclusioncolumnsRequestEntityTooLarge {
	return &PatchOutboundDnclistCustomexclusioncolumnsRequestEntityTooLarge{}
}

/*
PatchOutboundDnclistCustomexclusioncolumnsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PatchOutboundDnclistCustomexclusioncolumnsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch outbound dnclist customexclusioncolumns request entity too large response has a 2xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch outbound dnclist customexclusioncolumns request entity too large response has a 3xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch outbound dnclist customexclusioncolumns request entity too large response has a 4xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch outbound dnclist customexclusioncolumns request entity too large response has a 5xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this patch outbound dnclist customexclusioncolumns request entity too large response a status code equal to that given
func (o *PatchOutboundDnclistCustomexclusioncolumnsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/customexclusioncolumns][%d] patchOutboundDnclistCustomexclusioncolumnsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/customexclusioncolumns][%d] patchOutboundDnclistCustomexclusioncolumnsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchOutboundDnclistCustomexclusioncolumnsUnsupportedMediaType creates a PatchOutboundDnclistCustomexclusioncolumnsUnsupportedMediaType with default headers values
func NewPatchOutboundDnclistCustomexclusioncolumnsUnsupportedMediaType() *PatchOutboundDnclistCustomexclusioncolumnsUnsupportedMediaType {
	return &PatchOutboundDnclistCustomexclusioncolumnsUnsupportedMediaType{}
}

/*
PatchOutboundDnclistCustomexclusioncolumnsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PatchOutboundDnclistCustomexclusioncolumnsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch outbound dnclist customexclusioncolumns unsupported media type response has a 2xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch outbound dnclist customexclusioncolumns unsupported media type response has a 3xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch outbound dnclist customexclusioncolumns unsupported media type response has a 4xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch outbound dnclist customexclusioncolumns unsupported media type response has a 5xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this patch outbound dnclist customexclusioncolumns unsupported media type response a status code equal to that given
func (o *PatchOutboundDnclistCustomexclusioncolumnsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/customexclusioncolumns][%d] patchOutboundDnclistCustomexclusioncolumnsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/customexclusioncolumns][%d] patchOutboundDnclistCustomexclusioncolumnsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchOutboundDnclistCustomexclusioncolumnsTooManyRequests creates a PatchOutboundDnclistCustomexclusioncolumnsTooManyRequests with default headers values
func NewPatchOutboundDnclistCustomexclusioncolumnsTooManyRequests() *PatchOutboundDnclistCustomexclusioncolumnsTooManyRequests {
	return &PatchOutboundDnclistCustomexclusioncolumnsTooManyRequests{}
}

/*
PatchOutboundDnclistCustomexclusioncolumnsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PatchOutboundDnclistCustomexclusioncolumnsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch outbound dnclist customexclusioncolumns too many requests response has a 2xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch outbound dnclist customexclusioncolumns too many requests response has a 3xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch outbound dnclist customexclusioncolumns too many requests response has a 4xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch outbound dnclist customexclusioncolumns too many requests response has a 5xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this patch outbound dnclist customexclusioncolumns too many requests response a status code equal to that given
func (o *PatchOutboundDnclistCustomexclusioncolumnsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsTooManyRequests) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/customexclusioncolumns][%d] patchOutboundDnclistCustomexclusioncolumnsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsTooManyRequests) String() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/customexclusioncolumns][%d] patchOutboundDnclistCustomexclusioncolumnsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchOutboundDnclistCustomexclusioncolumnsInternalServerError creates a PatchOutboundDnclistCustomexclusioncolumnsInternalServerError with default headers values
func NewPatchOutboundDnclistCustomexclusioncolumnsInternalServerError() *PatchOutboundDnclistCustomexclusioncolumnsInternalServerError {
	return &PatchOutboundDnclistCustomexclusioncolumnsInternalServerError{}
}

/*
PatchOutboundDnclistCustomexclusioncolumnsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PatchOutboundDnclistCustomexclusioncolumnsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch outbound dnclist customexclusioncolumns internal server error response has a 2xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch outbound dnclist customexclusioncolumns internal server error response has a 3xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch outbound dnclist customexclusioncolumns internal server error response has a 4xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch outbound dnclist customexclusioncolumns internal server error response has a 5xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this patch outbound dnclist customexclusioncolumns internal server error response a status code equal to that given
func (o *PatchOutboundDnclistCustomexclusioncolumnsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/customexclusioncolumns][%d] patchOutboundDnclistCustomexclusioncolumnsInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsInternalServerError) String() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/customexclusioncolumns][%d] patchOutboundDnclistCustomexclusioncolumnsInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchOutboundDnclistCustomexclusioncolumnsNotImplemented creates a PatchOutboundDnclistCustomexclusioncolumnsNotImplemented with default headers values
func NewPatchOutboundDnclistCustomexclusioncolumnsNotImplemented() *PatchOutboundDnclistCustomexclusioncolumnsNotImplemented {
	return &PatchOutboundDnclistCustomexclusioncolumnsNotImplemented{}
}

/*
PatchOutboundDnclistCustomexclusioncolumnsNotImplemented describes a response with status code 501, with default header values.

Not Implemented
*/
type PatchOutboundDnclistCustomexclusioncolumnsNotImplemented struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch outbound dnclist customexclusioncolumns not implemented response has a 2xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsNotImplemented) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch outbound dnclist customexclusioncolumns not implemented response has a 3xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsNotImplemented) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch outbound dnclist customexclusioncolumns not implemented response has a 4xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsNotImplemented) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch outbound dnclist customexclusioncolumns not implemented response has a 5xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsNotImplemented) IsServerError() bool {
	return true
}

// IsCode returns true when this patch outbound dnclist customexclusioncolumns not implemented response a status code equal to that given
func (o *PatchOutboundDnclistCustomexclusioncolumnsNotImplemented) IsCode(code int) bool {
	return code == 501
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsNotImplemented) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/customexclusioncolumns][%d] patchOutboundDnclistCustomexclusioncolumnsNotImplemented  %+v", 501, o.Payload)
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsNotImplemented) String() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/customexclusioncolumns][%d] patchOutboundDnclistCustomexclusioncolumnsNotImplemented  %+v", 501, o.Payload)
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsNotImplemented) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchOutboundDnclistCustomexclusioncolumnsServiceUnavailable creates a PatchOutboundDnclistCustomexclusioncolumnsServiceUnavailable with default headers values
func NewPatchOutboundDnclistCustomexclusioncolumnsServiceUnavailable() *PatchOutboundDnclistCustomexclusioncolumnsServiceUnavailable {
	return &PatchOutboundDnclistCustomexclusioncolumnsServiceUnavailable{}
}

/*
PatchOutboundDnclistCustomexclusioncolumnsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PatchOutboundDnclistCustomexclusioncolumnsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch outbound dnclist customexclusioncolumns service unavailable response has a 2xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch outbound dnclist customexclusioncolumns service unavailable response has a 3xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch outbound dnclist customexclusioncolumns service unavailable response has a 4xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch outbound dnclist customexclusioncolumns service unavailable response has a 5xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this patch outbound dnclist customexclusioncolumns service unavailable response a status code equal to that given
func (o *PatchOutboundDnclistCustomexclusioncolumnsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsServiceUnavailable) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/customexclusioncolumns][%d] patchOutboundDnclistCustomexclusioncolumnsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsServiceUnavailable) String() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/customexclusioncolumns][%d] patchOutboundDnclistCustomexclusioncolumnsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchOutboundDnclistCustomexclusioncolumnsGatewayTimeout creates a PatchOutboundDnclistCustomexclusioncolumnsGatewayTimeout with default headers values
func NewPatchOutboundDnclistCustomexclusioncolumnsGatewayTimeout() *PatchOutboundDnclistCustomexclusioncolumnsGatewayTimeout {
	return &PatchOutboundDnclistCustomexclusioncolumnsGatewayTimeout{}
}

/*
PatchOutboundDnclistCustomexclusioncolumnsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PatchOutboundDnclistCustomexclusioncolumnsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch outbound dnclist customexclusioncolumns gateway timeout response has a 2xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch outbound dnclist customexclusioncolumns gateway timeout response has a 3xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch outbound dnclist customexclusioncolumns gateway timeout response has a 4xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch outbound dnclist customexclusioncolumns gateway timeout response has a 5xx status code
func (o *PatchOutboundDnclistCustomexclusioncolumnsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this patch outbound dnclist customexclusioncolumns gateway timeout response a status code equal to that given
func (o *PatchOutboundDnclistCustomexclusioncolumnsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsGatewayTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/customexclusioncolumns][%d] patchOutboundDnclistCustomexclusioncolumnsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsGatewayTimeout) String() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/customexclusioncolumns][%d] patchOutboundDnclistCustomexclusioncolumnsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchOutboundDnclistCustomexclusioncolumnsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
