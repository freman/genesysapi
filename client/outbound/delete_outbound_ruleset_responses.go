// Code generated by go-swagger; DO NOT EDIT.

package outbound

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// DeleteOutboundRulesetReader is a Reader for the DeleteOutboundRuleset structure.
type DeleteOutboundRulesetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteOutboundRulesetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteOutboundRulesetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteOutboundRulesetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteOutboundRulesetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteOutboundRulesetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteOutboundRulesetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewDeleteOutboundRulesetRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewDeleteOutboundRulesetRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDeleteOutboundRulesetUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteOutboundRulesetTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteOutboundRulesetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteOutboundRulesetServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteOutboundRulesetGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteOutboundRulesetOK creates a DeleteOutboundRulesetOK with default headers values
func NewDeleteOutboundRulesetOK() *DeleteOutboundRulesetOK {
	return &DeleteOutboundRulesetOK{}
}

/*DeleteOutboundRulesetOK handles this case with default header values.

Operation was successful.
*/
type DeleteOutboundRulesetOK struct {
}

func (o *DeleteOutboundRulesetOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/outbound/rulesets/{ruleSetId}][%d] deleteOutboundRulesetOK ", 200)
}

func (o *DeleteOutboundRulesetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteOutboundRulesetBadRequest creates a DeleteOutboundRulesetBadRequest with default headers values
func NewDeleteOutboundRulesetBadRequest() *DeleteOutboundRulesetBadRequest {
	return &DeleteOutboundRulesetBadRequest{}
}

/*DeleteOutboundRulesetBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type DeleteOutboundRulesetBadRequest struct {
	Payload *models.ErrorBody
}

func (o *DeleteOutboundRulesetBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/outbound/rulesets/{ruleSetId}][%d] deleteOutboundRulesetBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteOutboundRulesetBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteOutboundRulesetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOutboundRulesetUnauthorized creates a DeleteOutboundRulesetUnauthorized with default headers values
func NewDeleteOutboundRulesetUnauthorized() *DeleteOutboundRulesetUnauthorized {
	return &DeleteOutboundRulesetUnauthorized{}
}

/*DeleteOutboundRulesetUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type DeleteOutboundRulesetUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *DeleteOutboundRulesetUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/outbound/rulesets/{ruleSetId}][%d] deleteOutboundRulesetUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteOutboundRulesetUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteOutboundRulesetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOutboundRulesetForbidden creates a DeleteOutboundRulesetForbidden with default headers values
func NewDeleteOutboundRulesetForbidden() *DeleteOutboundRulesetForbidden {
	return &DeleteOutboundRulesetForbidden{}
}

/*DeleteOutboundRulesetForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type DeleteOutboundRulesetForbidden struct {
	Payload *models.ErrorBody
}

func (o *DeleteOutboundRulesetForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/outbound/rulesets/{ruleSetId}][%d] deleteOutboundRulesetForbidden  %+v", 403, o.Payload)
}

func (o *DeleteOutboundRulesetForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteOutboundRulesetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOutboundRulesetNotFound creates a DeleteOutboundRulesetNotFound with default headers values
func NewDeleteOutboundRulesetNotFound() *DeleteOutboundRulesetNotFound {
	return &DeleteOutboundRulesetNotFound{}
}

/*DeleteOutboundRulesetNotFound handles this case with default header values.

The requested resource was not found.
*/
type DeleteOutboundRulesetNotFound struct {
	Payload *models.ErrorBody
}

func (o *DeleteOutboundRulesetNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/outbound/rulesets/{ruleSetId}][%d] deleteOutboundRulesetNotFound  %+v", 404, o.Payload)
}

func (o *DeleteOutboundRulesetNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteOutboundRulesetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOutboundRulesetRequestTimeout creates a DeleteOutboundRulesetRequestTimeout with default headers values
func NewDeleteOutboundRulesetRequestTimeout() *DeleteOutboundRulesetRequestTimeout {
	return &DeleteOutboundRulesetRequestTimeout{}
}

/*DeleteOutboundRulesetRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type DeleteOutboundRulesetRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *DeleteOutboundRulesetRequestTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/outbound/rulesets/{ruleSetId}][%d] deleteOutboundRulesetRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteOutboundRulesetRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteOutboundRulesetRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOutboundRulesetRequestEntityTooLarge creates a DeleteOutboundRulesetRequestEntityTooLarge with default headers values
func NewDeleteOutboundRulesetRequestEntityTooLarge() *DeleteOutboundRulesetRequestEntityTooLarge {
	return &DeleteOutboundRulesetRequestEntityTooLarge{}
}

/*DeleteOutboundRulesetRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type DeleteOutboundRulesetRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *DeleteOutboundRulesetRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/outbound/rulesets/{ruleSetId}][%d] deleteOutboundRulesetRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteOutboundRulesetRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteOutboundRulesetRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOutboundRulesetUnsupportedMediaType creates a DeleteOutboundRulesetUnsupportedMediaType with default headers values
func NewDeleteOutboundRulesetUnsupportedMediaType() *DeleteOutboundRulesetUnsupportedMediaType {
	return &DeleteOutboundRulesetUnsupportedMediaType{}
}

/*DeleteOutboundRulesetUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type DeleteOutboundRulesetUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *DeleteOutboundRulesetUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/outbound/rulesets/{ruleSetId}][%d] deleteOutboundRulesetUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteOutboundRulesetUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteOutboundRulesetUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOutboundRulesetTooManyRequests creates a DeleteOutboundRulesetTooManyRequests with default headers values
func NewDeleteOutboundRulesetTooManyRequests() *DeleteOutboundRulesetTooManyRequests {
	return &DeleteOutboundRulesetTooManyRequests{}
}

/*DeleteOutboundRulesetTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type DeleteOutboundRulesetTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *DeleteOutboundRulesetTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/outbound/rulesets/{ruleSetId}][%d] deleteOutboundRulesetTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteOutboundRulesetTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteOutboundRulesetTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOutboundRulesetInternalServerError creates a DeleteOutboundRulesetInternalServerError with default headers values
func NewDeleteOutboundRulesetInternalServerError() *DeleteOutboundRulesetInternalServerError {
	return &DeleteOutboundRulesetInternalServerError{}
}

/*DeleteOutboundRulesetInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type DeleteOutboundRulesetInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *DeleteOutboundRulesetInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/outbound/rulesets/{ruleSetId}][%d] deleteOutboundRulesetInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteOutboundRulesetInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteOutboundRulesetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOutboundRulesetServiceUnavailable creates a DeleteOutboundRulesetServiceUnavailable with default headers values
func NewDeleteOutboundRulesetServiceUnavailable() *DeleteOutboundRulesetServiceUnavailable {
	return &DeleteOutboundRulesetServiceUnavailable{}
}

/*DeleteOutboundRulesetServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type DeleteOutboundRulesetServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *DeleteOutboundRulesetServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/outbound/rulesets/{ruleSetId}][%d] deleteOutboundRulesetServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteOutboundRulesetServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteOutboundRulesetServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOutboundRulesetGatewayTimeout creates a DeleteOutboundRulesetGatewayTimeout with default headers values
func NewDeleteOutboundRulesetGatewayTimeout() *DeleteOutboundRulesetGatewayTimeout {
	return &DeleteOutboundRulesetGatewayTimeout{}
}

/*DeleteOutboundRulesetGatewayTimeout handles this case with default header values.

The request timed out.
*/
type DeleteOutboundRulesetGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *DeleteOutboundRulesetGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/outbound/rulesets/{ruleSetId}][%d] deleteOutboundRulesetGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteOutboundRulesetGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteOutboundRulesetGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
