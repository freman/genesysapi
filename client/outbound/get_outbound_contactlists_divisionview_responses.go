// Code generated by go-swagger; DO NOT EDIT.

package outbound

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetOutboundContactlistsDivisionviewReader is a Reader for the GetOutboundContactlistsDivisionview structure.
type GetOutboundContactlistsDivisionviewReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOutboundContactlistsDivisionviewReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOutboundContactlistsDivisionviewOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOutboundContactlistsDivisionviewBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetOutboundContactlistsDivisionviewUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetOutboundContactlistsDivisionviewForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOutboundContactlistsDivisionviewNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetOutboundContactlistsDivisionviewRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetOutboundContactlistsDivisionviewRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetOutboundContactlistsDivisionviewUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetOutboundContactlistsDivisionviewTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOutboundContactlistsDivisionviewInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetOutboundContactlistsDivisionviewServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetOutboundContactlistsDivisionviewGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetOutboundContactlistsDivisionviewOK creates a GetOutboundContactlistsDivisionviewOK with default headers values
func NewGetOutboundContactlistsDivisionviewOK() *GetOutboundContactlistsDivisionviewOK {
	return &GetOutboundContactlistsDivisionviewOK{}
}

/*
GetOutboundContactlistsDivisionviewOK describes a response with status code 200, with default header values.

successful operation
*/
type GetOutboundContactlistsDivisionviewOK struct {
	Payload *models.ContactListDivisionView
}

// IsSuccess returns true when this get outbound contactlists divisionview o k response has a 2xx status code
func (o *GetOutboundContactlistsDivisionviewOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get outbound contactlists divisionview o k response has a 3xx status code
func (o *GetOutboundContactlistsDivisionviewOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound contactlists divisionview o k response has a 4xx status code
func (o *GetOutboundContactlistsDivisionviewOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get outbound contactlists divisionview o k response has a 5xx status code
func (o *GetOutboundContactlistsDivisionviewOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound contactlists divisionview o k response a status code equal to that given
func (o *GetOutboundContactlistsDivisionviewOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetOutboundContactlistsDivisionviewOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/divisionviews/{contactListId}][%d] getOutboundContactlistsDivisionviewOK  %+v", 200, o.Payload)
}

func (o *GetOutboundContactlistsDivisionviewOK) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/divisionviews/{contactListId}][%d] getOutboundContactlistsDivisionviewOK  %+v", 200, o.Payload)
}

func (o *GetOutboundContactlistsDivisionviewOK) GetPayload() *models.ContactListDivisionView {
	return o.Payload
}

func (o *GetOutboundContactlistsDivisionviewOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ContactListDivisionView)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundContactlistsDivisionviewBadRequest creates a GetOutboundContactlistsDivisionviewBadRequest with default headers values
func NewGetOutboundContactlistsDivisionviewBadRequest() *GetOutboundContactlistsDivisionviewBadRequest {
	return &GetOutboundContactlistsDivisionviewBadRequest{}
}

/*
GetOutboundContactlistsDivisionviewBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetOutboundContactlistsDivisionviewBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound contactlists divisionview bad request response has a 2xx status code
func (o *GetOutboundContactlistsDivisionviewBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound contactlists divisionview bad request response has a 3xx status code
func (o *GetOutboundContactlistsDivisionviewBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound contactlists divisionview bad request response has a 4xx status code
func (o *GetOutboundContactlistsDivisionviewBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outbound contactlists divisionview bad request response has a 5xx status code
func (o *GetOutboundContactlistsDivisionviewBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound contactlists divisionview bad request response a status code equal to that given
func (o *GetOutboundContactlistsDivisionviewBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetOutboundContactlistsDivisionviewBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/divisionviews/{contactListId}][%d] getOutboundContactlistsDivisionviewBadRequest  %+v", 400, o.Payload)
}

func (o *GetOutboundContactlistsDivisionviewBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/divisionviews/{contactListId}][%d] getOutboundContactlistsDivisionviewBadRequest  %+v", 400, o.Payload)
}

func (o *GetOutboundContactlistsDivisionviewBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundContactlistsDivisionviewBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundContactlistsDivisionviewUnauthorized creates a GetOutboundContactlistsDivisionviewUnauthorized with default headers values
func NewGetOutboundContactlistsDivisionviewUnauthorized() *GetOutboundContactlistsDivisionviewUnauthorized {
	return &GetOutboundContactlistsDivisionviewUnauthorized{}
}

/*
GetOutboundContactlistsDivisionviewUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetOutboundContactlistsDivisionviewUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound contactlists divisionview unauthorized response has a 2xx status code
func (o *GetOutboundContactlistsDivisionviewUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound contactlists divisionview unauthorized response has a 3xx status code
func (o *GetOutboundContactlistsDivisionviewUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound contactlists divisionview unauthorized response has a 4xx status code
func (o *GetOutboundContactlistsDivisionviewUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outbound contactlists divisionview unauthorized response has a 5xx status code
func (o *GetOutboundContactlistsDivisionviewUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound contactlists divisionview unauthorized response a status code equal to that given
func (o *GetOutboundContactlistsDivisionviewUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetOutboundContactlistsDivisionviewUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/divisionviews/{contactListId}][%d] getOutboundContactlistsDivisionviewUnauthorized  %+v", 401, o.Payload)
}

func (o *GetOutboundContactlistsDivisionviewUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/divisionviews/{contactListId}][%d] getOutboundContactlistsDivisionviewUnauthorized  %+v", 401, o.Payload)
}

func (o *GetOutboundContactlistsDivisionviewUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundContactlistsDivisionviewUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundContactlistsDivisionviewForbidden creates a GetOutboundContactlistsDivisionviewForbidden with default headers values
func NewGetOutboundContactlistsDivisionviewForbidden() *GetOutboundContactlistsDivisionviewForbidden {
	return &GetOutboundContactlistsDivisionviewForbidden{}
}

/*
GetOutboundContactlistsDivisionviewForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetOutboundContactlistsDivisionviewForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound contactlists divisionview forbidden response has a 2xx status code
func (o *GetOutboundContactlistsDivisionviewForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound contactlists divisionview forbidden response has a 3xx status code
func (o *GetOutboundContactlistsDivisionviewForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound contactlists divisionview forbidden response has a 4xx status code
func (o *GetOutboundContactlistsDivisionviewForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outbound contactlists divisionview forbidden response has a 5xx status code
func (o *GetOutboundContactlistsDivisionviewForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound contactlists divisionview forbidden response a status code equal to that given
func (o *GetOutboundContactlistsDivisionviewForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetOutboundContactlistsDivisionviewForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/divisionviews/{contactListId}][%d] getOutboundContactlistsDivisionviewForbidden  %+v", 403, o.Payload)
}

func (o *GetOutboundContactlistsDivisionviewForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/divisionviews/{contactListId}][%d] getOutboundContactlistsDivisionviewForbidden  %+v", 403, o.Payload)
}

func (o *GetOutboundContactlistsDivisionviewForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundContactlistsDivisionviewForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundContactlistsDivisionviewNotFound creates a GetOutboundContactlistsDivisionviewNotFound with default headers values
func NewGetOutboundContactlistsDivisionviewNotFound() *GetOutboundContactlistsDivisionviewNotFound {
	return &GetOutboundContactlistsDivisionviewNotFound{}
}

/*
GetOutboundContactlistsDivisionviewNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetOutboundContactlistsDivisionviewNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound contactlists divisionview not found response has a 2xx status code
func (o *GetOutboundContactlistsDivisionviewNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound contactlists divisionview not found response has a 3xx status code
func (o *GetOutboundContactlistsDivisionviewNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound contactlists divisionview not found response has a 4xx status code
func (o *GetOutboundContactlistsDivisionviewNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outbound contactlists divisionview not found response has a 5xx status code
func (o *GetOutboundContactlistsDivisionviewNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound contactlists divisionview not found response a status code equal to that given
func (o *GetOutboundContactlistsDivisionviewNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetOutboundContactlistsDivisionviewNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/divisionviews/{contactListId}][%d] getOutboundContactlistsDivisionviewNotFound  %+v", 404, o.Payload)
}

func (o *GetOutboundContactlistsDivisionviewNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/divisionviews/{contactListId}][%d] getOutboundContactlistsDivisionviewNotFound  %+v", 404, o.Payload)
}

func (o *GetOutboundContactlistsDivisionviewNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundContactlistsDivisionviewNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundContactlistsDivisionviewRequestTimeout creates a GetOutboundContactlistsDivisionviewRequestTimeout with default headers values
func NewGetOutboundContactlistsDivisionviewRequestTimeout() *GetOutboundContactlistsDivisionviewRequestTimeout {
	return &GetOutboundContactlistsDivisionviewRequestTimeout{}
}

/*
GetOutboundContactlistsDivisionviewRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetOutboundContactlistsDivisionviewRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound contactlists divisionview request timeout response has a 2xx status code
func (o *GetOutboundContactlistsDivisionviewRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound contactlists divisionview request timeout response has a 3xx status code
func (o *GetOutboundContactlistsDivisionviewRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound contactlists divisionview request timeout response has a 4xx status code
func (o *GetOutboundContactlistsDivisionviewRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outbound contactlists divisionview request timeout response has a 5xx status code
func (o *GetOutboundContactlistsDivisionviewRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound contactlists divisionview request timeout response a status code equal to that given
func (o *GetOutboundContactlistsDivisionviewRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetOutboundContactlistsDivisionviewRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/divisionviews/{contactListId}][%d] getOutboundContactlistsDivisionviewRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetOutboundContactlistsDivisionviewRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/divisionviews/{contactListId}][%d] getOutboundContactlistsDivisionviewRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetOutboundContactlistsDivisionviewRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundContactlistsDivisionviewRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundContactlistsDivisionviewRequestEntityTooLarge creates a GetOutboundContactlistsDivisionviewRequestEntityTooLarge with default headers values
func NewGetOutboundContactlistsDivisionviewRequestEntityTooLarge() *GetOutboundContactlistsDivisionviewRequestEntityTooLarge {
	return &GetOutboundContactlistsDivisionviewRequestEntityTooLarge{}
}

/*
GetOutboundContactlistsDivisionviewRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetOutboundContactlistsDivisionviewRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound contactlists divisionview request entity too large response has a 2xx status code
func (o *GetOutboundContactlistsDivisionviewRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound contactlists divisionview request entity too large response has a 3xx status code
func (o *GetOutboundContactlistsDivisionviewRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound contactlists divisionview request entity too large response has a 4xx status code
func (o *GetOutboundContactlistsDivisionviewRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outbound contactlists divisionview request entity too large response has a 5xx status code
func (o *GetOutboundContactlistsDivisionviewRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound contactlists divisionview request entity too large response a status code equal to that given
func (o *GetOutboundContactlistsDivisionviewRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetOutboundContactlistsDivisionviewRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/divisionviews/{contactListId}][%d] getOutboundContactlistsDivisionviewRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetOutboundContactlistsDivisionviewRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/divisionviews/{contactListId}][%d] getOutboundContactlistsDivisionviewRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetOutboundContactlistsDivisionviewRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundContactlistsDivisionviewRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundContactlistsDivisionviewUnsupportedMediaType creates a GetOutboundContactlistsDivisionviewUnsupportedMediaType with default headers values
func NewGetOutboundContactlistsDivisionviewUnsupportedMediaType() *GetOutboundContactlistsDivisionviewUnsupportedMediaType {
	return &GetOutboundContactlistsDivisionviewUnsupportedMediaType{}
}

/*
GetOutboundContactlistsDivisionviewUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetOutboundContactlistsDivisionviewUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound contactlists divisionview unsupported media type response has a 2xx status code
func (o *GetOutboundContactlistsDivisionviewUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound contactlists divisionview unsupported media type response has a 3xx status code
func (o *GetOutboundContactlistsDivisionviewUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound contactlists divisionview unsupported media type response has a 4xx status code
func (o *GetOutboundContactlistsDivisionviewUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outbound contactlists divisionview unsupported media type response has a 5xx status code
func (o *GetOutboundContactlistsDivisionviewUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound contactlists divisionview unsupported media type response a status code equal to that given
func (o *GetOutboundContactlistsDivisionviewUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetOutboundContactlistsDivisionviewUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/divisionviews/{contactListId}][%d] getOutboundContactlistsDivisionviewUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetOutboundContactlistsDivisionviewUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/divisionviews/{contactListId}][%d] getOutboundContactlistsDivisionviewUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetOutboundContactlistsDivisionviewUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundContactlistsDivisionviewUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundContactlistsDivisionviewTooManyRequests creates a GetOutboundContactlistsDivisionviewTooManyRequests with default headers values
func NewGetOutboundContactlistsDivisionviewTooManyRequests() *GetOutboundContactlistsDivisionviewTooManyRequests {
	return &GetOutboundContactlistsDivisionviewTooManyRequests{}
}

/*
GetOutboundContactlistsDivisionviewTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetOutboundContactlistsDivisionviewTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound contactlists divisionview too many requests response has a 2xx status code
func (o *GetOutboundContactlistsDivisionviewTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound contactlists divisionview too many requests response has a 3xx status code
func (o *GetOutboundContactlistsDivisionviewTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound contactlists divisionview too many requests response has a 4xx status code
func (o *GetOutboundContactlistsDivisionviewTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outbound contactlists divisionview too many requests response has a 5xx status code
func (o *GetOutboundContactlistsDivisionviewTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound contactlists divisionview too many requests response a status code equal to that given
func (o *GetOutboundContactlistsDivisionviewTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetOutboundContactlistsDivisionviewTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/divisionviews/{contactListId}][%d] getOutboundContactlistsDivisionviewTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetOutboundContactlistsDivisionviewTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/divisionviews/{contactListId}][%d] getOutboundContactlistsDivisionviewTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetOutboundContactlistsDivisionviewTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundContactlistsDivisionviewTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundContactlistsDivisionviewInternalServerError creates a GetOutboundContactlistsDivisionviewInternalServerError with default headers values
func NewGetOutboundContactlistsDivisionviewInternalServerError() *GetOutboundContactlistsDivisionviewInternalServerError {
	return &GetOutboundContactlistsDivisionviewInternalServerError{}
}

/*
GetOutboundContactlistsDivisionviewInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetOutboundContactlistsDivisionviewInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound contactlists divisionview internal server error response has a 2xx status code
func (o *GetOutboundContactlistsDivisionviewInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound contactlists divisionview internal server error response has a 3xx status code
func (o *GetOutboundContactlistsDivisionviewInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound contactlists divisionview internal server error response has a 4xx status code
func (o *GetOutboundContactlistsDivisionviewInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get outbound contactlists divisionview internal server error response has a 5xx status code
func (o *GetOutboundContactlistsDivisionviewInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get outbound contactlists divisionview internal server error response a status code equal to that given
func (o *GetOutboundContactlistsDivisionviewInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetOutboundContactlistsDivisionviewInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/divisionviews/{contactListId}][%d] getOutboundContactlistsDivisionviewInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOutboundContactlistsDivisionviewInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/divisionviews/{contactListId}][%d] getOutboundContactlistsDivisionviewInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOutboundContactlistsDivisionviewInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundContactlistsDivisionviewInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundContactlistsDivisionviewServiceUnavailable creates a GetOutboundContactlistsDivisionviewServiceUnavailable with default headers values
func NewGetOutboundContactlistsDivisionviewServiceUnavailable() *GetOutboundContactlistsDivisionviewServiceUnavailable {
	return &GetOutboundContactlistsDivisionviewServiceUnavailable{}
}

/*
GetOutboundContactlistsDivisionviewServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetOutboundContactlistsDivisionviewServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound contactlists divisionview service unavailable response has a 2xx status code
func (o *GetOutboundContactlistsDivisionviewServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound contactlists divisionview service unavailable response has a 3xx status code
func (o *GetOutboundContactlistsDivisionviewServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound contactlists divisionview service unavailable response has a 4xx status code
func (o *GetOutboundContactlistsDivisionviewServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get outbound contactlists divisionview service unavailable response has a 5xx status code
func (o *GetOutboundContactlistsDivisionviewServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get outbound contactlists divisionview service unavailable response a status code equal to that given
func (o *GetOutboundContactlistsDivisionviewServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetOutboundContactlistsDivisionviewServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/divisionviews/{contactListId}][%d] getOutboundContactlistsDivisionviewServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetOutboundContactlistsDivisionviewServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/divisionviews/{contactListId}][%d] getOutboundContactlistsDivisionviewServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetOutboundContactlistsDivisionviewServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundContactlistsDivisionviewServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundContactlistsDivisionviewGatewayTimeout creates a GetOutboundContactlistsDivisionviewGatewayTimeout with default headers values
func NewGetOutboundContactlistsDivisionviewGatewayTimeout() *GetOutboundContactlistsDivisionviewGatewayTimeout {
	return &GetOutboundContactlistsDivisionviewGatewayTimeout{}
}

/*
GetOutboundContactlistsDivisionviewGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetOutboundContactlistsDivisionviewGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound contactlists divisionview gateway timeout response has a 2xx status code
func (o *GetOutboundContactlistsDivisionviewGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound contactlists divisionview gateway timeout response has a 3xx status code
func (o *GetOutboundContactlistsDivisionviewGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound contactlists divisionview gateway timeout response has a 4xx status code
func (o *GetOutboundContactlistsDivisionviewGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get outbound contactlists divisionview gateway timeout response has a 5xx status code
func (o *GetOutboundContactlistsDivisionviewGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get outbound contactlists divisionview gateway timeout response a status code equal to that given
func (o *GetOutboundContactlistsDivisionviewGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetOutboundContactlistsDivisionviewGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/divisionviews/{contactListId}][%d] getOutboundContactlistsDivisionviewGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetOutboundContactlistsDivisionviewGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/divisionviews/{contactListId}][%d] getOutboundContactlistsDivisionviewGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetOutboundContactlistsDivisionviewGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundContactlistsDivisionviewGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
