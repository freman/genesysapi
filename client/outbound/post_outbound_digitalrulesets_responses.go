// Code generated by go-swagger; DO NOT EDIT.

package outbound

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostOutboundDigitalrulesetsReader is a Reader for the PostOutboundDigitalrulesets structure.
type PostOutboundDigitalrulesetsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostOutboundDigitalrulesetsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostOutboundDigitalrulesetsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostOutboundDigitalrulesetsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostOutboundDigitalrulesetsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostOutboundDigitalrulesetsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostOutboundDigitalrulesetsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostOutboundDigitalrulesetsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostOutboundDigitalrulesetsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostOutboundDigitalrulesetsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostOutboundDigitalrulesetsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostOutboundDigitalrulesetsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostOutboundDigitalrulesetsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostOutboundDigitalrulesetsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostOutboundDigitalrulesetsOK creates a PostOutboundDigitalrulesetsOK with default headers values
func NewPostOutboundDigitalrulesetsOK() *PostOutboundDigitalrulesetsOK {
	return &PostOutboundDigitalrulesetsOK{}
}

/*PostOutboundDigitalrulesetsOK handles this case with default header values.

successful operation
*/
type PostOutboundDigitalrulesetsOK struct {
	Payload *models.DigitalRuleSet
}

func (o *PostOutboundDigitalrulesetsOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/digitalrulesets][%d] postOutboundDigitalrulesetsOK  %+v", 200, o.Payload)
}

func (o *PostOutboundDigitalrulesetsOK) GetPayload() *models.DigitalRuleSet {
	return o.Payload
}

func (o *PostOutboundDigitalrulesetsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DigitalRuleSet)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundDigitalrulesetsBadRequest creates a PostOutboundDigitalrulesetsBadRequest with default headers values
func NewPostOutboundDigitalrulesetsBadRequest() *PostOutboundDigitalrulesetsBadRequest {
	return &PostOutboundDigitalrulesetsBadRequest{}
}

/*PostOutboundDigitalrulesetsBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostOutboundDigitalrulesetsBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PostOutboundDigitalrulesetsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/digitalrulesets][%d] postOutboundDigitalrulesetsBadRequest  %+v", 400, o.Payload)
}

func (o *PostOutboundDigitalrulesetsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundDigitalrulesetsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundDigitalrulesetsUnauthorized creates a PostOutboundDigitalrulesetsUnauthorized with default headers values
func NewPostOutboundDigitalrulesetsUnauthorized() *PostOutboundDigitalrulesetsUnauthorized {
	return &PostOutboundDigitalrulesetsUnauthorized{}
}

/*PostOutboundDigitalrulesetsUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PostOutboundDigitalrulesetsUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PostOutboundDigitalrulesetsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/digitalrulesets][%d] postOutboundDigitalrulesetsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostOutboundDigitalrulesetsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundDigitalrulesetsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundDigitalrulesetsForbidden creates a PostOutboundDigitalrulesetsForbidden with default headers values
func NewPostOutboundDigitalrulesetsForbidden() *PostOutboundDigitalrulesetsForbidden {
	return &PostOutboundDigitalrulesetsForbidden{}
}

/*PostOutboundDigitalrulesetsForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PostOutboundDigitalrulesetsForbidden struct {
	Payload *models.ErrorBody
}

func (o *PostOutboundDigitalrulesetsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/digitalrulesets][%d] postOutboundDigitalrulesetsForbidden  %+v", 403, o.Payload)
}

func (o *PostOutboundDigitalrulesetsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundDigitalrulesetsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundDigitalrulesetsNotFound creates a PostOutboundDigitalrulesetsNotFound with default headers values
func NewPostOutboundDigitalrulesetsNotFound() *PostOutboundDigitalrulesetsNotFound {
	return &PostOutboundDigitalrulesetsNotFound{}
}

/*PostOutboundDigitalrulesetsNotFound handles this case with default header values.

The requested resource was not found.
*/
type PostOutboundDigitalrulesetsNotFound struct {
	Payload *models.ErrorBody
}

func (o *PostOutboundDigitalrulesetsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/digitalrulesets][%d] postOutboundDigitalrulesetsNotFound  %+v", 404, o.Payload)
}

func (o *PostOutboundDigitalrulesetsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundDigitalrulesetsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundDigitalrulesetsRequestTimeout creates a PostOutboundDigitalrulesetsRequestTimeout with default headers values
func NewPostOutboundDigitalrulesetsRequestTimeout() *PostOutboundDigitalrulesetsRequestTimeout {
	return &PostOutboundDigitalrulesetsRequestTimeout{}
}

/*PostOutboundDigitalrulesetsRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostOutboundDigitalrulesetsRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostOutboundDigitalrulesetsRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/digitalrulesets][%d] postOutboundDigitalrulesetsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostOutboundDigitalrulesetsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundDigitalrulesetsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundDigitalrulesetsRequestEntityTooLarge creates a PostOutboundDigitalrulesetsRequestEntityTooLarge with default headers values
func NewPostOutboundDigitalrulesetsRequestEntityTooLarge() *PostOutboundDigitalrulesetsRequestEntityTooLarge {
	return &PostOutboundDigitalrulesetsRequestEntityTooLarge{}
}

/*PostOutboundDigitalrulesetsRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PostOutboundDigitalrulesetsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PostOutboundDigitalrulesetsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/digitalrulesets][%d] postOutboundDigitalrulesetsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostOutboundDigitalrulesetsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundDigitalrulesetsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundDigitalrulesetsUnsupportedMediaType creates a PostOutboundDigitalrulesetsUnsupportedMediaType with default headers values
func NewPostOutboundDigitalrulesetsUnsupportedMediaType() *PostOutboundDigitalrulesetsUnsupportedMediaType {
	return &PostOutboundDigitalrulesetsUnsupportedMediaType{}
}

/*PostOutboundDigitalrulesetsUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostOutboundDigitalrulesetsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PostOutboundDigitalrulesetsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/digitalrulesets][%d] postOutboundDigitalrulesetsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostOutboundDigitalrulesetsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundDigitalrulesetsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundDigitalrulesetsTooManyRequests creates a PostOutboundDigitalrulesetsTooManyRequests with default headers values
func NewPostOutboundDigitalrulesetsTooManyRequests() *PostOutboundDigitalrulesetsTooManyRequests {
	return &PostOutboundDigitalrulesetsTooManyRequests{}
}

/*PostOutboundDigitalrulesetsTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostOutboundDigitalrulesetsTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PostOutboundDigitalrulesetsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/digitalrulesets][%d] postOutboundDigitalrulesetsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostOutboundDigitalrulesetsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundDigitalrulesetsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundDigitalrulesetsInternalServerError creates a PostOutboundDigitalrulesetsInternalServerError with default headers values
func NewPostOutboundDigitalrulesetsInternalServerError() *PostOutboundDigitalrulesetsInternalServerError {
	return &PostOutboundDigitalrulesetsInternalServerError{}
}

/*PostOutboundDigitalrulesetsInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostOutboundDigitalrulesetsInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PostOutboundDigitalrulesetsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/digitalrulesets][%d] postOutboundDigitalrulesetsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostOutboundDigitalrulesetsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundDigitalrulesetsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundDigitalrulesetsServiceUnavailable creates a PostOutboundDigitalrulesetsServiceUnavailable with default headers values
func NewPostOutboundDigitalrulesetsServiceUnavailable() *PostOutboundDigitalrulesetsServiceUnavailable {
	return &PostOutboundDigitalrulesetsServiceUnavailable{}
}

/*PostOutboundDigitalrulesetsServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostOutboundDigitalrulesetsServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PostOutboundDigitalrulesetsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/digitalrulesets][%d] postOutboundDigitalrulesetsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostOutboundDigitalrulesetsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundDigitalrulesetsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundDigitalrulesetsGatewayTimeout creates a PostOutboundDigitalrulesetsGatewayTimeout with default headers values
func NewPostOutboundDigitalrulesetsGatewayTimeout() *PostOutboundDigitalrulesetsGatewayTimeout {
	return &PostOutboundDigitalrulesetsGatewayTimeout{}
}

/*PostOutboundDigitalrulesetsGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PostOutboundDigitalrulesetsGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostOutboundDigitalrulesetsGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/digitalrulesets][%d] postOutboundDigitalrulesetsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostOutboundDigitalrulesetsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundDigitalrulesetsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
