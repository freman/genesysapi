// Code generated by go-swagger; DO NOT EDIT.

package outbound

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetOutboundContactlistParams creates a new GetOutboundContactlistParams object
// with the default values initialized.
func NewGetOutboundContactlistParams() *GetOutboundContactlistParams {
	var (
		includeImportStatusDefault = bool(false)
		includeSizeDefault         = bool(false)
	)
	return &GetOutboundContactlistParams{
		IncludeImportStatus: &includeImportStatusDefault,
		IncludeSize:         &includeSizeDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewGetOutboundContactlistParamsWithTimeout creates a new GetOutboundContactlistParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetOutboundContactlistParamsWithTimeout(timeout time.Duration) *GetOutboundContactlistParams {
	var (
		includeImportStatusDefault = bool(false)
		includeSizeDefault         = bool(false)
	)
	return &GetOutboundContactlistParams{
		IncludeImportStatus: &includeImportStatusDefault,
		IncludeSize:         &includeSizeDefault,

		timeout: timeout,
	}
}

// NewGetOutboundContactlistParamsWithContext creates a new GetOutboundContactlistParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetOutboundContactlistParamsWithContext(ctx context.Context) *GetOutboundContactlistParams {
	var (
		includeImportStatusDefault = bool(false)
		includeSizeDefault         = bool(false)
	)
	return &GetOutboundContactlistParams{
		IncludeImportStatus: &includeImportStatusDefault,
		IncludeSize:         &includeSizeDefault,

		Context: ctx,
	}
}

// NewGetOutboundContactlistParamsWithHTTPClient creates a new GetOutboundContactlistParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetOutboundContactlistParamsWithHTTPClient(client *http.Client) *GetOutboundContactlistParams {
	var (
		includeImportStatusDefault = bool(false)
		includeSizeDefault         = bool(false)
	)
	return &GetOutboundContactlistParams{
		IncludeImportStatus: &includeImportStatusDefault,
		IncludeSize:         &includeSizeDefault,
		HTTPClient:          client,
	}
}

/*GetOutboundContactlistParams contains all the parameters to send to the API endpoint
for the get outbound contactlist operation typically these are written to a http.Request
*/
type GetOutboundContactlistParams struct {

	/*ContactListID
	  ContactList ID

	*/
	ContactListID string
	/*IncludeImportStatus
	  Import status

	*/
	IncludeImportStatus *bool
	/*IncludeSize
	  Include size

	*/
	IncludeSize *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get outbound contactlist params
func (o *GetOutboundContactlistParams) WithTimeout(timeout time.Duration) *GetOutboundContactlistParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get outbound contactlist params
func (o *GetOutboundContactlistParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get outbound contactlist params
func (o *GetOutboundContactlistParams) WithContext(ctx context.Context) *GetOutboundContactlistParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get outbound contactlist params
func (o *GetOutboundContactlistParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get outbound contactlist params
func (o *GetOutboundContactlistParams) WithHTTPClient(client *http.Client) *GetOutboundContactlistParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get outbound contactlist params
func (o *GetOutboundContactlistParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithContactListID adds the contactListID to the get outbound contactlist params
func (o *GetOutboundContactlistParams) WithContactListID(contactListID string) *GetOutboundContactlistParams {
	o.SetContactListID(contactListID)
	return o
}

// SetContactListID adds the contactListId to the get outbound contactlist params
func (o *GetOutboundContactlistParams) SetContactListID(contactListID string) {
	o.ContactListID = contactListID
}

// WithIncludeImportStatus adds the includeImportStatus to the get outbound contactlist params
func (o *GetOutboundContactlistParams) WithIncludeImportStatus(includeImportStatus *bool) *GetOutboundContactlistParams {
	o.SetIncludeImportStatus(includeImportStatus)
	return o
}

// SetIncludeImportStatus adds the includeImportStatus to the get outbound contactlist params
func (o *GetOutboundContactlistParams) SetIncludeImportStatus(includeImportStatus *bool) {
	o.IncludeImportStatus = includeImportStatus
}

// WithIncludeSize adds the includeSize to the get outbound contactlist params
func (o *GetOutboundContactlistParams) WithIncludeSize(includeSize *bool) *GetOutboundContactlistParams {
	o.SetIncludeSize(includeSize)
	return o
}

// SetIncludeSize adds the includeSize to the get outbound contactlist params
func (o *GetOutboundContactlistParams) SetIncludeSize(includeSize *bool) {
	o.IncludeSize = includeSize
}

// WriteToRequest writes these params to a swagger request
func (o *GetOutboundContactlistParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param contactListId
	if err := r.SetPathParam("contactListId", o.ContactListID); err != nil {
		return err
	}

	if o.IncludeImportStatus != nil {

		// query param includeImportStatus
		var qrIncludeImportStatus bool
		if o.IncludeImportStatus != nil {
			qrIncludeImportStatus = *o.IncludeImportStatus
		}
		qIncludeImportStatus := swag.FormatBool(qrIncludeImportStatus)
		if qIncludeImportStatus != "" {
			if err := r.SetQueryParam("includeImportStatus", qIncludeImportStatus); err != nil {
				return err
			}
		}

	}

	if o.IncludeSize != nil {

		// query param includeSize
		var qrIncludeSize bool
		if o.IncludeSize != nil {
			qrIncludeSize = *o.IncludeSize
		}
		qIncludeSize := swag.FormatBool(qrIncludeSize)
		if qIncludeSize != "" {
			if err := r.SetQueryParam("includeSize", qIncludeSize); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
