// Code generated by go-swagger; DO NOT EDIT.

package outbound

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetOutboundSettingsReader is a Reader for the GetOutboundSettings structure.
type GetOutboundSettingsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOutboundSettingsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOutboundSettingsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOutboundSettingsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetOutboundSettingsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetOutboundSettingsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOutboundSettingsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetOutboundSettingsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetOutboundSettingsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetOutboundSettingsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetOutboundSettingsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOutboundSettingsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetOutboundSettingsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetOutboundSettingsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetOutboundSettingsOK creates a GetOutboundSettingsOK with default headers values
func NewGetOutboundSettingsOK() *GetOutboundSettingsOK {
	return &GetOutboundSettingsOK{}
}

/*GetOutboundSettingsOK handles this case with default header values.

successful operation
*/
type GetOutboundSettingsOK struct {
	Payload *models.OutboundSettings
}

func (o *GetOutboundSettingsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/settings][%d] getOutboundSettingsOK  %+v", 200, o.Payload)
}

func (o *GetOutboundSettingsOK) GetPayload() *models.OutboundSettings {
	return o.Payload
}

func (o *GetOutboundSettingsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OutboundSettings)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundSettingsBadRequest creates a GetOutboundSettingsBadRequest with default headers values
func NewGetOutboundSettingsBadRequest() *GetOutboundSettingsBadRequest {
	return &GetOutboundSettingsBadRequest{}
}

/*GetOutboundSettingsBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetOutboundSettingsBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundSettingsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/settings][%d] getOutboundSettingsBadRequest  %+v", 400, o.Payload)
}

func (o *GetOutboundSettingsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundSettingsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundSettingsUnauthorized creates a GetOutboundSettingsUnauthorized with default headers values
func NewGetOutboundSettingsUnauthorized() *GetOutboundSettingsUnauthorized {
	return &GetOutboundSettingsUnauthorized{}
}

/*GetOutboundSettingsUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetOutboundSettingsUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundSettingsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/settings][%d] getOutboundSettingsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetOutboundSettingsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundSettingsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundSettingsForbidden creates a GetOutboundSettingsForbidden with default headers values
func NewGetOutboundSettingsForbidden() *GetOutboundSettingsForbidden {
	return &GetOutboundSettingsForbidden{}
}

/*GetOutboundSettingsForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetOutboundSettingsForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundSettingsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/settings][%d] getOutboundSettingsForbidden  %+v", 403, o.Payload)
}

func (o *GetOutboundSettingsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundSettingsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundSettingsNotFound creates a GetOutboundSettingsNotFound with default headers values
func NewGetOutboundSettingsNotFound() *GetOutboundSettingsNotFound {
	return &GetOutboundSettingsNotFound{}
}

/*GetOutboundSettingsNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetOutboundSettingsNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundSettingsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/settings][%d] getOutboundSettingsNotFound  %+v", 404, o.Payload)
}

func (o *GetOutboundSettingsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundSettingsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundSettingsRequestTimeout creates a GetOutboundSettingsRequestTimeout with default headers values
func NewGetOutboundSettingsRequestTimeout() *GetOutboundSettingsRequestTimeout {
	return &GetOutboundSettingsRequestTimeout{}
}

/*GetOutboundSettingsRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetOutboundSettingsRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundSettingsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/settings][%d] getOutboundSettingsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetOutboundSettingsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundSettingsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundSettingsRequestEntityTooLarge creates a GetOutboundSettingsRequestEntityTooLarge with default headers values
func NewGetOutboundSettingsRequestEntityTooLarge() *GetOutboundSettingsRequestEntityTooLarge {
	return &GetOutboundSettingsRequestEntityTooLarge{}
}

/*GetOutboundSettingsRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetOutboundSettingsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundSettingsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/settings][%d] getOutboundSettingsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetOutboundSettingsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundSettingsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundSettingsUnsupportedMediaType creates a GetOutboundSettingsUnsupportedMediaType with default headers values
func NewGetOutboundSettingsUnsupportedMediaType() *GetOutboundSettingsUnsupportedMediaType {
	return &GetOutboundSettingsUnsupportedMediaType{}
}

/*GetOutboundSettingsUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetOutboundSettingsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundSettingsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/settings][%d] getOutboundSettingsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetOutboundSettingsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundSettingsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundSettingsTooManyRequests creates a GetOutboundSettingsTooManyRequests with default headers values
func NewGetOutboundSettingsTooManyRequests() *GetOutboundSettingsTooManyRequests {
	return &GetOutboundSettingsTooManyRequests{}
}

/*GetOutboundSettingsTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetOutboundSettingsTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundSettingsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/settings][%d] getOutboundSettingsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetOutboundSettingsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundSettingsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundSettingsInternalServerError creates a GetOutboundSettingsInternalServerError with default headers values
func NewGetOutboundSettingsInternalServerError() *GetOutboundSettingsInternalServerError {
	return &GetOutboundSettingsInternalServerError{}
}

/*GetOutboundSettingsInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetOutboundSettingsInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundSettingsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/settings][%d] getOutboundSettingsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOutboundSettingsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundSettingsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundSettingsServiceUnavailable creates a GetOutboundSettingsServiceUnavailable with default headers values
func NewGetOutboundSettingsServiceUnavailable() *GetOutboundSettingsServiceUnavailable {
	return &GetOutboundSettingsServiceUnavailable{}
}

/*GetOutboundSettingsServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetOutboundSettingsServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundSettingsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/settings][%d] getOutboundSettingsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetOutboundSettingsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundSettingsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundSettingsGatewayTimeout creates a GetOutboundSettingsGatewayTimeout with default headers values
func NewGetOutboundSettingsGatewayTimeout() *GetOutboundSettingsGatewayTimeout {
	return &GetOutboundSettingsGatewayTimeout{}
}

/*GetOutboundSettingsGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetOutboundSettingsGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundSettingsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/settings][%d] getOutboundSettingsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetOutboundSettingsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundSettingsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
