// Code generated by go-swagger; DO NOT EDIT.

package outbound

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetOutboundWrapupcodemappingsReader is a Reader for the GetOutboundWrapupcodemappings structure.
type GetOutboundWrapupcodemappingsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOutboundWrapupcodemappingsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOutboundWrapupcodemappingsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOutboundWrapupcodemappingsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetOutboundWrapupcodemappingsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetOutboundWrapupcodemappingsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOutboundWrapupcodemappingsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetOutboundWrapupcodemappingsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetOutboundWrapupcodemappingsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetOutboundWrapupcodemappingsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetOutboundWrapupcodemappingsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOutboundWrapupcodemappingsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetOutboundWrapupcodemappingsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetOutboundWrapupcodemappingsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetOutboundWrapupcodemappingsOK creates a GetOutboundWrapupcodemappingsOK with default headers values
func NewGetOutboundWrapupcodemappingsOK() *GetOutboundWrapupcodemappingsOK {
	return &GetOutboundWrapupcodemappingsOK{}
}

/*
GetOutboundWrapupcodemappingsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetOutboundWrapupcodemappingsOK struct {
	Payload *models.WrapUpCodeMapping
}

// IsSuccess returns true when this get outbound wrapupcodemappings o k response has a 2xx status code
func (o *GetOutboundWrapupcodemappingsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get outbound wrapupcodemappings o k response has a 3xx status code
func (o *GetOutboundWrapupcodemappingsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound wrapupcodemappings o k response has a 4xx status code
func (o *GetOutboundWrapupcodemappingsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get outbound wrapupcodemappings o k response has a 5xx status code
func (o *GetOutboundWrapupcodemappingsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound wrapupcodemappings o k response a status code equal to that given
func (o *GetOutboundWrapupcodemappingsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetOutboundWrapupcodemappingsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/wrapupcodemappings][%d] getOutboundWrapupcodemappingsOK  %+v", 200, o.Payload)
}

func (o *GetOutboundWrapupcodemappingsOK) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/wrapupcodemappings][%d] getOutboundWrapupcodemappingsOK  %+v", 200, o.Payload)
}

func (o *GetOutboundWrapupcodemappingsOK) GetPayload() *models.WrapUpCodeMapping {
	return o.Payload
}

func (o *GetOutboundWrapupcodemappingsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WrapUpCodeMapping)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundWrapupcodemappingsBadRequest creates a GetOutboundWrapupcodemappingsBadRequest with default headers values
func NewGetOutboundWrapupcodemappingsBadRequest() *GetOutboundWrapupcodemappingsBadRequest {
	return &GetOutboundWrapupcodemappingsBadRequest{}
}

/*
GetOutboundWrapupcodemappingsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetOutboundWrapupcodemappingsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound wrapupcodemappings bad request response has a 2xx status code
func (o *GetOutboundWrapupcodemappingsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound wrapupcodemappings bad request response has a 3xx status code
func (o *GetOutboundWrapupcodemappingsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound wrapupcodemappings bad request response has a 4xx status code
func (o *GetOutboundWrapupcodemappingsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outbound wrapupcodemappings bad request response has a 5xx status code
func (o *GetOutboundWrapupcodemappingsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound wrapupcodemappings bad request response a status code equal to that given
func (o *GetOutboundWrapupcodemappingsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetOutboundWrapupcodemappingsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/wrapupcodemappings][%d] getOutboundWrapupcodemappingsBadRequest  %+v", 400, o.Payload)
}

func (o *GetOutboundWrapupcodemappingsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/wrapupcodemappings][%d] getOutboundWrapupcodemappingsBadRequest  %+v", 400, o.Payload)
}

func (o *GetOutboundWrapupcodemappingsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundWrapupcodemappingsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundWrapupcodemappingsUnauthorized creates a GetOutboundWrapupcodemappingsUnauthorized with default headers values
func NewGetOutboundWrapupcodemappingsUnauthorized() *GetOutboundWrapupcodemappingsUnauthorized {
	return &GetOutboundWrapupcodemappingsUnauthorized{}
}

/*
GetOutboundWrapupcodemappingsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetOutboundWrapupcodemappingsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound wrapupcodemappings unauthorized response has a 2xx status code
func (o *GetOutboundWrapupcodemappingsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound wrapupcodemappings unauthorized response has a 3xx status code
func (o *GetOutboundWrapupcodemappingsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound wrapupcodemappings unauthorized response has a 4xx status code
func (o *GetOutboundWrapupcodemappingsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outbound wrapupcodemappings unauthorized response has a 5xx status code
func (o *GetOutboundWrapupcodemappingsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound wrapupcodemappings unauthorized response a status code equal to that given
func (o *GetOutboundWrapupcodemappingsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetOutboundWrapupcodemappingsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/wrapupcodemappings][%d] getOutboundWrapupcodemappingsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetOutboundWrapupcodemappingsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/wrapupcodemappings][%d] getOutboundWrapupcodemappingsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetOutboundWrapupcodemappingsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundWrapupcodemappingsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundWrapupcodemappingsForbidden creates a GetOutboundWrapupcodemappingsForbidden with default headers values
func NewGetOutboundWrapupcodemappingsForbidden() *GetOutboundWrapupcodemappingsForbidden {
	return &GetOutboundWrapupcodemappingsForbidden{}
}

/*
GetOutboundWrapupcodemappingsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetOutboundWrapupcodemappingsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound wrapupcodemappings forbidden response has a 2xx status code
func (o *GetOutboundWrapupcodemappingsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound wrapupcodemappings forbidden response has a 3xx status code
func (o *GetOutboundWrapupcodemappingsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound wrapupcodemappings forbidden response has a 4xx status code
func (o *GetOutboundWrapupcodemappingsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outbound wrapupcodemappings forbidden response has a 5xx status code
func (o *GetOutboundWrapupcodemappingsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound wrapupcodemappings forbidden response a status code equal to that given
func (o *GetOutboundWrapupcodemappingsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetOutboundWrapupcodemappingsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/wrapupcodemappings][%d] getOutboundWrapupcodemappingsForbidden  %+v", 403, o.Payload)
}

func (o *GetOutboundWrapupcodemappingsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/wrapupcodemappings][%d] getOutboundWrapupcodemappingsForbidden  %+v", 403, o.Payload)
}

func (o *GetOutboundWrapupcodemappingsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundWrapupcodemappingsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundWrapupcodemappingsNotFound creates a GetOutboundWrapupcodemappingsNotFound with default headers values
func NewGetOutboundWrapupcodemappingsNotFound() *GetOutboundWrapupcodemappingsNotFound {
	return &GetOutboundWrapupcodemappingsNotFound{}
}

/*
GetOutboundWrapupcodemappingsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetOutboundWrapupcodemappingsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound wrapupcodemappings not found response has a 2xx status code
func (o *GetOutboundWrapupcodemappingsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound wrapupcodemappings not found response has a 3xx status code
func (o *GetOutboundWrapupcodemappingsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound wrapupcodemappings not found response has a 4xx status code
func (o *GetOutboundWrapupcodemappingsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outbound wrapupcodemappings not found response has a 5xx status code
func (o *GetOutboundWrapupcodemappingsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound wrapupcodemappings not found response a status code equal to that given
func (o *GetOutboundWrapupcodemappingsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetOutboundWrapupcodemappingsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/wrapupcodemappings][%d] getOutboundWrapupcodemappingsNotFound  %+v", 404, o.Payload)
}

func (o *GetOutboundWrapupcodemappingsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/wrapupcodemappings][%d] getOutboundWrapupcodemappingsNotFound  %+v", 404, o.Payload)
}

func (o *GetOutboundWrapupcodemappingsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundWrapupcodemappingsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundWrapupcodemappingsRequestTimeout creates a GetOutboundWrapupcodemappingsRequestTimeout with default headers values
func NewGetOutboundWrapupcodemappingsRequestTimeout() *GetOutboundWrapupcodemappingsRequestTimeout {
	return &GetOutboundWrapupcodemappingsRequestTimeout{}
}

/*
GetOutboundWrapupcodemappingsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetOutboundWrapupcodemappingsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound wrapupcodemappings request timeout response has a 2xx status code
func (o *GetOutboundWrapupcodemappingsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound wrapupcodemappings request timeout response has a 3xx status code
func (o *GetOutboundWrapupcodemappingsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound wrapupcodemappings request timeout response has a 4xx status code
func (o *GetOutboundWrapupcodemappingsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outbound wrapupcodemappings request timeout response has a 5xx status code
func (o *GetOutboundWrapupcodemappingsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound wrapupcodemappings request timeout response a status code equal to that given
func (o *GetOutboundWrapupcodemappingsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetOutboundWrapupcodemappingsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/wrapupcodemappings][%d] getOutboundWrapupcodemappingsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetOutboundWrapupcodemappingsRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/wrapupcodemappings][%d] getOutboundWrapupcodemappingsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetOutboundWrapupcodemappingsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundWrapupcodemappingsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundWrapupcodemappingsRequestEntityTooLarge creates a GetOutboundWrapupcodemappingsRequestEntityTooLarge with default headers values
func NewGetOutboundWrapupcodemappingsRequestEntityTooLarge() *GetOutboundWrapupcodemappingsRequestEntityTooLarge {
	return &GetOutboundWrapupcodemappingsRequestEntityTooLarge{}
}

/*
GetOutboundWrapupcodemappingsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetOutboundWrapupcodemappingsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound wrapupcodemappings request entity too large response has a 2xx status code
func (o *GetOutboundWrapupcodemappingsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound wrapupcodemappings request entity too large response has a 3xx status code
func (o *GetOutboundWrapupcodemappingsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound wrapupcodemappings request entity too large response has a 4xx status code
func (o *GetOutboundWrapupcodemappingsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outbound wrapupcodemappings request entity too large response has a 5xx status code
func (o *GetOutboundWrapupcodemappingsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound wrapupcodemappings request entity too large response a status code equal to that given
func (o *GetOutboundWrapupcodemappingsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetOutboundWrapupcodemappingsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/wrapupcodemappings][%d] getOutboundWrapupcodemappingsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetOutboundWrapupcodemappingsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/wrapupcodemappings][%d] getOutboundWrapupcodemappingsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetOutboundWrapupcodemappingsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundWrapupcodemappingsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundWrapupcodemappingsUnsupportedMediaType creates a GetOutboundWrapupcodemappingsUnsupportedMediaType with default headers values
func NewGetOutboundWrapupcodemappingsUnsupportedMediaType() *GetOutboundWrapupcodemappingsUnsupportedMediaType {
	return &GetOutboundWrapupcodemappingsUnsupportedMediaType{}
}

/*
GetOutboundWrapupcodemappingsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetOutboundWrapupcodemappingsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound wrapupcodemappings unsupported media type response has a 2xx status code
func (o *GetOutboundWrapupcodemappingsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound wrapupcodemappings unsupported media type response has a 3xx status code
func (o *GetOutboundWrapupcodemappingsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound wrapupcodemappings unsupported media type response has a 4xx status code
func (o *GetOutboundWrapupcodemappingsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outbound wrapupcodemappings unsupported media type response has a 5xx status code
func (o *GetOutboundWrapupcodemappingsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound wrapupcodemappings unsupported media type response a status code equal to that given
func (o *GetOutboundWrapupcodemappingsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetOutboundWrapupcodemappingsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/wrapupcodemappings][%d] getOutboundWrapupcodemappingsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetOutboundWrapupcodemappingsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/wrapupcodemappings][%d] getOutboundWrapupcodemappingsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetOutboundWrapupcodemappingsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundWrapupcodemappingsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundWrapupcodemappingsTooManyRequests creates a GetOutboundWrapupcodemappingsTooManyRequests with default headers values
func NewGetOutboundWrapupcodemappingsTooManyRequests() *GetOutboundWrapupcodemappingsTooManyRequests {
	return &GetOutboundWrapupcodemappingsTooManyRequests{}
}

/*
GetOutboundWrapupcodemappingsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetOutboundWrapupcodemappingsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound wrapupcodemappings too many requests response has a 2xx status code
func (o *GetOutboundWrapupcodemappingsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound wrapupcodemappings too many requests response has a 3xx status code
func (o *GetOutboundWrapupcodemappingsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound wrapupcodemappings too many requests response has a 4xx status code
func (o *GetOutboundWrapupcodemappingsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outbound wrapupcodemappings too many requests response has a 5xx status code
func (o *GetOutboundWrapupcodemappingsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound wrapupcodemappings too many requests response a status code equal to that given
func (o *GetOutboundWrapupcodemappingsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetOutboundWrapupcodemappingsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/wrapupcodemappings][%d] getOutboundWrapupcodemappingsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetOutboundWrapupcodemappingsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/wrapupcodemappings][%d] getOutboundWrapupcodemappingsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetOutboundWrapupcodemappingsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundWrapupcodemappingsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundWrapupcodemappingsInternalServerError creates a GetOutboundWrapupcodemappingsInternalServerError with default headers values
func NewGetOutboundWrapupcodemappingsInternalServerError() *GetOutboundWrapupcodemappingsInternalServerError {
	return &GetOutboundWrapupcodemappingsInternalServerError{}
}

/*
GetOutboundWrapupcodemappingsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetOutboundWrapupcodemappingsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound wrapupcodemappings internal server error response has a 2xx status code
func (o *GetOutboundWrapupcodemappingsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound wrapupcodemappings internal server error response has a 3xx status code
func (o *GetOutboundWrapupcodemappingsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound wrapupcodemappings internal server error response has a 4xx status code
func (o *GetOutboundWrapupcodemappingsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get outbound wrapupcodemappings internal server error response has a 5xx status code
func (o *GetOutboundWrapupcodemappingsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get outbound wrapupcodemappings internal server error response a status code equal to that given
func (o *GetOutboundWrapupcodemappingsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetOutboundWrapupcodemappingsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/wrapupcodemappings][%d] getOutboundWrapupcodemappingsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOutboundWrapupcodemappingsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/wrapupcodemappings][%d] getOutboundWrapupcodemappingsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOutboundWrapupcodemappingsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundWrapupcodemappingsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundWrapupcodemappingsServiceUnavailable creates a GetOutboundWrapupcodemappingsServiceUnavailable with default headers values
func NewGetOutboundWrapupcodemappingsServiceUnavailable() *GetOutboundWrapupcodemappingsServiceUnavailable {
	return &GetOutboundWrapupcodemappingsServiceUnavailable{}
}

/*
GetOutboundWrapupcodemappingsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetOutboundWrapupcodemappingsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound wrapupcodemappings service unavailable response has a 2xx status code
func (o *GetOutboundWrapupcodemappingsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound wrapupcodemappings service unavailable response has a 3xx status code
func (o *GetOutboundWrapupcodemappingsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound wrapupcodemappings service unavailable response has a 4xx status code
func (o *GetOutboundWrapupcodemappingsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get outbound wrapupcodemappings service unavailable response has a 5xx status code
func (o *GetOutboundWrapupcodemappingsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get outbound wrapupcodemappings service unavailable response a status code equal to that given
func (o *GetOutboundWrapupcodemappingsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetOutboundWrapupcodemappingsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/wrapupcodemappings][%d] getOutboundWrapupcodemappingsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetOutboundWrapupcodemappingsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/wrapupcodemappings][%d] getOutboundWrapupcodemappingsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetOutboundWrapupcodemappingsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundWrapupcodemappingsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundWrapupcodemappingsGatewayTimeout creates a GetOutboundWrapupcodemappingsGatewayTimeout with default headers values
func NewGetOutboundWrapupcodemappingsGatewayTimeout() *GetOutboundWrapupcodemappingsGatewayTimeout {
	return &GetOutboundWrapupcodemappingsGatewayTimeout{}
}

/*
GetOutboundWrapupcodemappingsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetOutboundWrapupcodemappingsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound wrapupcodemappings gateway timeout response has a 2xx status code
func (o *GetOutboundWrapupcodemappingsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound wrapupcodemappings gateway timeout response has a 3xx status code
func (o *GetOutboundWrapupcodemappingsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound wrapupcodemappings gateway timeout response has a 4xx status code
func (o *GetOutboundWrapupcodemappingsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get outbound wrapupcodemappings gateway timeout response has a 5xx status code
func (o *GetOutboundWrapupcodemappingsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get outbound wrapupcodemappings gateway timeout response a status code equal to that given
func (o *GetOutboundWrapupcodemappingsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetOutboundWrapupcodemappingsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/wrapupcodemappings][%d] getOutboundWrapupcodemappingsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetOutboundWrapupcodemappingsGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/wrapupcodemappings][%d] getOutboundWrapupcodemappingsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetOutboundWrapupcodemappingsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundWrapupcodemappingsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
