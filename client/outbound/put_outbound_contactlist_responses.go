// Code generated by go-swagger; DO NOT EDIT.

package outbound

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutOutboundContactlistReader is a Reader for the PutOutboundContactlist structure.
type PutOutboundContactlistReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutOutboundContactlistReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutOutboundContactlistOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutOutboundContactlistBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutOutboundContactlistUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutOutboundContactlistForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutOutboundContactlistNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutOutboundContactlistRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPutOutboundContactlistConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutOutboundContactlistRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutOutboundContactlistUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutOutboundContactlistTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutOutboundContactlistInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutOutboundContactlistServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutOutboundContactlistGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutOutboundContactlistOK creates a PutOutboundContactlistOK with default headers values
func NewPutOutboundContactlistOK() *PutOutboundContactlistOK {
	return &PutOutboundContactlistOK{}
}

/*
PutOutboundContactlistOK describes a response with status code 200, with default header values.

successful operation
*/
type PutOutboundContactlistOK struct {
	Payload *models.ContactList
}

// IsSuccess returns true when this put outbound contactlist o k response has a 2xx status code
func (o *PutOutboundContactlistOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put outbound contactlist o k response has a 3xx status code
func (o *PutOutboundContactlistOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put outbound contactlist o k response has a 4xx status code
func (o *PutOutboundContactlistOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put outbound contactlist o k response has a 5xx status code
func (o *PutOutboundContactlistOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put outbound contactlist o k response a status code equal to that given
func (o *PutOutboundContactlistOK) IsCode(code int) bool {
	return code == 200
}

func (o *PutOutboundContactlistOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlists/{contactListId}][%d] putOutboundContactlistOK  %+v", 200, o.Payload)
}

func (o *PutOutboundContactlistOK) String() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlists/{contactListId}][%d] putOutboundContactlistOK  %+v", 200, o.Payload)
}

func (o *PutOutboundContactlistOK) GetPayload() *models.ContactList {
	return o.Payload
}

func (o *PutOutboundContactlistOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ContactList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundContactlistBadRequest creates a PutOutboundContactlistBadRequest with default headers values
func NewPutOutboundContactlistBadRequest() *PutOutboundContactlistBadRequest {
	return &PutOutboundContactlistBadRequest{}
}

/*
PutOutboundContactlistBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutOutboundContactlistBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put outbound contactlist bad request response has a 2xx status code
func (o *PutOutboundContactlistBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put outbound contactlist bad request response has a 3xx status code
func (o *PutOutboundContactlistBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put outbound contactlist bad request response has a 4xx status code
func (o *PutOutboundContactlistBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put outbound contactlist bad request response has a 5xx status code
func (o *PutOutboundContactlistBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put outbound contactlist bad request response a status code equal to that given
func (o *PutOutboundContactlistBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PutOutboundContactlistBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlists/{contactListId}][%d] putOutboundContactlistBadRequest  %+v", 400, o.Payload)
}

func (o *PutOutboundContactlistBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlists/{contactListId}][%d] putOutboundContactlistBadRequest  %+v", 400, o.Payload)
}

func (o *PutOutboundContactlistBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundContactlistBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundContactlistUnauthorized creates a PutOutboundContactlistUnauthorized with default headers values
func NewPutOutboundContactlistUnauthorized() *PutOutboundContactlistUnauthorized {
	return &PutOutboundContactlistUnauthorized{}
}

/*
PutOutboundContactlistUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PutOutboundContactlistUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put outbound contactlist unauthorized response has a 2xx status code
func (o *PutOutboundContactlistUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put outbound contactlist unauthorized response has a 3xx status code
func (o *PutOutboundContactlistUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put outbound contactlist unauthorized response has a 4xx status code
func (o *PutOutboundContactlistUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put outbound contactlist unauthorized response has a 5xx status code
func (o *PutOutboundContactlistUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put outbound contactlist unauthorized response a status code equal to that given
func (o *PutOutboundContactlistUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PutOutboundContactlistUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlists/{contactListId}][%d] putOutboundContactlistUnauthorized  %+v", 401, o.Payload)
}

func (o *PutOutboundContactlistUnauthorized) String() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlists/{contactListId}][%d] putOutboundContactlistUnauthorized  %+v", 401, o.Payload)
}

func (o *PutOutboundContactlistUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundContactlistUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundContactlistForbidden creates a PutOutboundContactlistForbidden with default headers values
func NewPutOutboundContactlistForbidden() *PutOutboundContactlistForbidden {
	return &PutOutboundContactlistForbidden{}
}

/*
PutOutboundContactlistForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PutOutboundContactlistForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put outbound contactlist forbidden response has a 2xx status code
func (o *PutOutboundContactlistForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put outbound contactlist forbidden response has a 3xx status code
func (o *PutOutboundContactlistForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put outbound contactlist forbidden response has a 4xx status code
func (o *PutOutboundContactlistForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put outbound contactlist forbidden response has a 5xx status code
func (o *PutOutboundContactlistForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put outbound contactlist forbidden response a status code equal to that given
func (o *PutOutboundContactlistForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PutOutboundContactlistForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlists/{contactListId}][%d] putOutboundContactlistForbidden  %+v", 403, o.Payload)
}

func (o *PutOutboundContactlistForbidden) String() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlists/{contactListId}][%d] putOutboundContactlistForbidden  %+v", 403, o.Payload)
}

func (o *PutOutboundContactlistForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundContactlistForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundContactlistNotFound creates a PutOutboundContactlistNotFound with default headers values
func NewPutOutboundContactlistNotFound() *PutOutboundContactlistNotFound {
	return &PutOutboundContactlistNotFound{}
}

/*
PutOutboundContactlistNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PutOutboundContactlistNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put outbound contactlist not found response has a 2xx status code
func (o *PutOutboundContactlistNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put outbound contactlist not found response has a 3xx status code
func (o *PutOutboundContactlistNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put outbound contactlist not found response has a 4xx status code
func (o *PutOutboundContactlistNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put outbound contactlist not found response has a 5xx status code
func (o *PutOutboundContactlistNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put outbound contactlist not found response a status code equal to that given
func (o *PutOutboundContactlistNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PutOutboundContactlistNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlists/{contactListId}][%d] putOutboundContactlistNotFound  %+v", 404, o.Payload)
}

func (o *PutOutboundContactlistNotFound) String() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlists/{contactListId}][%d] putOutboundContactlistNotFound  %+v", 404, o.Payload)
}

func (o *PutOutboundContactlistNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundContactlistNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundContactlistRequestTimeout creates a PutOutboundContactlistRequestTimeout with default headers values
func NewPutOutboundContactlistRequestTimeout() *PutOutboundContactlistRequestTimeout {
	return &PutOutboundContactlistRequestTimeout{}
}

/*
PutOutboundContactlistRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutOutboundContactlistRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put outbound contactlist request timeout response has a 2xx status code
func (o *PutOutboundContactlistRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put outbound contactlist request timeout response has a 3xx status code
func (o *PutOutboundContactlistRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put outbound contactlist request timeout response has a 4xx status code
func (o *PutOutboundContactlistRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this put outbound contactlist request timeout response has a 5xx status code
func (o *PutOutboundContactlistRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this put outbound contactlist request timeout response a status code equal to that given
func (o *PutOutboundContactlistRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PutOutboundContactlistRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlists/{contactListId}][%d] putOutboundContactlistRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutOutboundContactlistRequestTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlists/{contactListId}][%d] putOutboundContactlistRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutOutboundContactlistRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundContactlistRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundContactlistConflict creates a PutOutboundContactlistConflict with default headers values
func NewPutOutboundContactlistConflict() *PutOutboundContactlistConflict {
	return &PutOutboundContactlistConflict{}
}

/*
PutOutboundContactlistConflict describes a response with status code 409, with default header values.

Conflict
*/
type PutOutboundContactlistConflict struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put outbound contactlist conflict response has a 2xx status code
func (o *PutOutboundContactlistConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put outbound contactlist conflict response has a 3xx status code
func (o *PutOutboundContactlistConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put outbound contactlist conflict response has a 4xx status code
func (o *PutOutboundContactlistConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this put outbound contactlist conflict response has a 5xx status code
func (o *PutOutboundContactlistConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this put outbound contactlist conflict response a status code equal to that given
func (o *PutOutboundContactlistConflict) IsCode(code int) bool {
	return code == 409
}

func (o *PutOutboundContactlistConflict) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlists/{contactListId}][%d] putOutboundContactlistConflict  %+v", 409, o.Payload)
}

func (o *PutOutboundContactlistConflict) String() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlists/{contactListId}][%d] putOutboundContactlistConflict  %+v", 409, o.Payload)
}

func (o *PutOutboundContactlistConflict) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundContactlistConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundContactlistRequestEntityTooLarge creates a PutOutboundContactlistRequestEntityTooLarge with default headers values
func NewPutOutboundContactlistRequestEntityTooLarge() *PutOutboundContactlistRequestEntityTooLarge {
	return &PutOutboundContactlistRequestEntityTooLarge{}
}

/*
PutOutboundContactlistRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PutOutboundContactlistRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put outbound contactlist request entity too large response has a 2xx status code
func (o *PutOutboundContactlistRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put outbound contactlist request entity too large response has a 3xx status code
func (o *PutOutboundContactlistRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put outbound contactlist request entity too large response has a 4xx status code
func (o *PutOutboundContactlistRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this put outbound contactlist request entity too large response has a 5xx status code
func (o *PutOutboundContactlistRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this put outbound contactlist request entity too large response a status code equal to that given
func (o *PutOutboundContactlistRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PutOutboundContactlistRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlists/{contactListId}][%d] putOutboundContactlistRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutOutboundContactlistRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlists/{contactListId}][%d] putOutboundContactlistRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutOutboundContactlistRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundContactlistRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundContactlistUnsupportedMediaType creates a PutOutboundContactlistUnsupportedMediaType with default headers values
func NewPutOutboundContactlistUnsupportedMediaType() *PutOutboundContactlistUnsupportedMediaType {
	return &PutOutboundContactlistUnsupportedMediaType{}
}

/*
PutOutboundContactlistUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutOutboundContactlistUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put outbound contactlist unsupported media type response has a 2xx status code
func (o *PutOutboundContactlistUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put outbound contactlist unsupported media type response has a 3xx status code
func (o *PutOutboundContactlistUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put outbound contactlist unsupported media type response has a 4xx status code
func (o *PutOutboundContactlistUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this put outbound contactlist unsupported media type response has a 5xx status code
func (o *PutOutboundContactlistUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this put outbound contactlist unsupported media type response a status code equal to that given
func (o *PutOutboundContactlistUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PutOutboundContactlistUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlists/{contactListId}][%d] putOutboundContactlistUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutOutboundContactlistUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlists/{contactListId}][%d] putOutboundContactlistUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutOutboundContactlistUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundContactlistUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundContactlistTooManyRequests creates a PutOutboundContactlistTooManyRequests with default headers values
func NewPutOutboundContactlistTooManyRequests() *PutOutboundContactlistTooManyRequests {
	return &PutOutboundContactlistTooManyRequests{}
}

/*
PutOutboundContactlistTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutOutboundContactlistTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put outbound contactlist too many requests response has a 2xx status code
func (o *PutOutboundContactlistTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put outbound contactlist too many requests response has a 3xx status code
func (o *PutOutboundContactlistTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put outbound contactlist too many requests response has a 4xx status code
func (o *PutOutboundContactlistTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this put outbound contactlist too many requests response has a 5xx status code
func (o *PutOutboundContactlistTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this put outbound contactlist too many requests response a status code equal to that given
func (o *PutOutboundContactlistTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PutOutboundContactlistTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlists/{contactListId}][%d] putOutboundContactlistTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutOutboundContactlistTooManyRequests) String() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlists/{contactListId}][%d] putOutboundContactlistTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutOutboundContactlistTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundContactlistTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundContactlistInternalServerError creates a PutOutboundContactlistInternalServerError with default headers values
func NewPutOutboundContactlistInternalServerError() *PutOutboundContactlistInternalServerError {
	return &PutOutboundContactlistInternalServerError{}
}

/*
PutOutboundContactlistInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutOutboundContactlistInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put outbound contactlist internal server error response has a 2xx status code
func (o *PutOutboundContactlistInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put outbound contactlist internal server error response has a 3xx status code
func (o *PutOutboundContactlistInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put outbound contactlist internal server error response has a 4xx status code
func (o *PutOutboundContactlistInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this put outbound contactlist internal server error response has a 5xx status code
func (o *PutOutboundContactlistInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this put outbound contactlist internal server error response a status code equal to that given
func (o *PutOutboundContactlistInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PutOutboundContactlistInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlists/{contactListId}][%d] putOutboundContactlistInternalServerError  %+v", 500, o.Payload)
}

func (o *PutOutboundContactlistInternalServerError) String() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlists/{contactListId}][%d] putOutboundContactlistInternalServerError  %+v", 500, o.Payload)
}

func (o *PutOutboundContactlistInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundContactlistInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundContactlistServiceUnavailable creates a PutOutboundContactlistServiceUnavailable with default headers values
func NewPutOutboundContactlistServiceUnavailable() *PutOutboundContactlistServiceUnavailable {
	return &PutOutboundContactlistServiceUnavailable{}
}

/*
PutOutboundContactlistServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutOutboundContactlistServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put outbound contactlist service unavailable response has a 2xx status code
func (o *PutOutboundContactlistServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put outbound contactlist service unavailable response has a 3xx status code
func (o *PutOutboundContactlistServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put outbound contactlist service unavailable response has a 4xx status code
func (o *PutOutboundContactlistServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this put outbound contactlist service unavailable response has a 5xx status code
func (o *PutOutboundContactlistServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this put outbound contactlist service unavailable response a status code equal to that given
func (o *PutOutboundContactlistServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PutOutboundContactlistServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlists/{contactListId}][%d] putOutboundContactlistServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutOutboundContactlistServiceUnavailable) String() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlists/{contactListId}][%d] putOutboundContactlistServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutOutboundContactlistServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundContactlistServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundContactlistGatewayTimeout creates a PutOutboundContactlistGatewayTimeout with default headers values
func NewPutOutboundContactlistGatewayTimeout() *PutOutboundContactlistGatewayTimeout {
	return &PutOutboundContactlistGatewayTimeout{}
}

/*
PutOutboundContactlistGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PutOutboundContactlistGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put outbound contactlist gateway timeout response has a 2xx status code
func (o *PutOutboundContactlistGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put outbound contactlist gateway timeout response has a 3xx status code
func (o *PutOutboundContactlistGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put outbound contactlist gateway timeout response has a 4xx status code
func (o *PutOutboundContactlistGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this put outbound contactlist gateway timeout response has a 5xx status code
func (o *PutOutboundContactlistGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this put outbound contactlist gateway timeout response a status code equal to that given
func (o *PutOutboundContactlistGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PutOutboundContactlistGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlists/{contactListId}][%d] putOutboundContactlistGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutOutboundContactlistGatewayTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlists/{contactListId}][%d] putOutboundContactlistGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutOutboundContactlistGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundContactlistGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
