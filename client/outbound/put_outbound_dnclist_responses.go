// Code generated by go-swagger; DO NOT EDIT.

package outbound

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutOutboundDnclistReader is a Reader for the PutOutboundDnclist structure.
type PutOutboundDnclistReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutOutboundDnclistReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutOutboundDnclistOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutOutboundDnclistBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutOutboundDnclistUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutOutboundDnclistForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutOutboundDnclistNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutOutboundDnclistRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPutOutboundDnclistConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutOutboundDnclistRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutOutboundDnclistUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutOutboundDnclistTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutOutboundDnclistInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutOutboundDnclistServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutOutboundDnclistGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutOutboundDnclistOK creates a PutOutboundDnclistOK with default headers values
func NewPutOutboundDnclistOK() *PutOutboundDnclistOK {
	return &PutOutboundDnclistOK{}
}

/*PutOutboundDnclistOK handles this case with default header values.

successful operation
*/
type PutOutboundDnclistOK struct {
	Payload *models.DncList
}

func (o *PutOutboundDnclistOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/dnclists/{dncListId}][%d] putOutboundDnclistOK  %+v", 200, o.Payload)
}

func (o *PutOutboundDnclistOK) GetPayload() *models.DncList {
	return o.Payload
}

func (o *PutOutboundDnclistOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DncList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundDnclistBadRequest creates a PutOutboundDnclistBadRequest with default headers values
func NewPutOutboundDnclistBadRequest() *PutOutboundDnclistBadRequest {
	return &PutOutboundDnclistBadRequest{}
}

/*PutOutboundDnclistBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutOutboundDnclistBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PutOutboundDnclistBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/dnclists/{dncListId}][%d] putOutboundDnclistBadRequest  %+v", 400, o.Payload)
}

func (o *PutOutboundDnclistBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundDnclistBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundDnclistUnauthorized creates a PutOutboundDnclistUnauthorized with default headers values
func NewPutOutboundDnclistUnauthorized() *PutOutboundDnclistUnauthorized {
	return &PutOutboundDnclistUnauthorized{}
}

/*PutOutboundDnclistUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PutOutboundDnclistUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PutOutboundDnclistUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/dnclists/{dncListId}][%d] putOutboundDnclistUnauthorized  %+v", 401, o.Payload)
}

func (o *PutOutboundDnclistUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundDnclistUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundDnclistForbidden creates a PutOutboundDnclistForbidden with default headers values
func NewPutOutboundDnclistForbidden() *PutOutboundDnclistForbidden {
	return &PutOutboundDnclistForbidden{}
}

/*PutOutboundDnclistForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PutOutboundDnclistForbidden struct {
	Payload *models.ErrorBody
}

func (o *PutOutboundDnclistForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/dnclists/{dncListId}][%d] putOutboundDnclistForbidden  %+v", 403, o.Payload)
}

func (o *PutOutboundDnclistForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundDnclistForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundDnclistNotFound creates a PutOutboundDnclistNotFound with default headers values
func NewPutOutboundDnclistNotFound() *PutOutboundDnclistNotFound {
	return &PutOutboundDnclistNotFound{}
}

/*PutOutboundDnclistNotFound handles this case with default header values.

The requested resource was not found.
*/
type PutOutboundDnclistNotFound struct {
	Payload *models.ErrorBody
}

func (o *PutOutboundDnclistNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/dnclists/{dncListId}][%d] putOutboundDnclistNotFound  %+v", 404, o.Payload)
}

func (o *PutOutboundDnclistNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundDnclistNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundDnclistRequestTimeout creates a PutOutboundDnclistRequestTimeout with default headers values
func NewPutOutboundDnclistRequestTimeout() *PutOutboundDnclistRequestTimeout {
	return &PutOutboundDnclistRequestTimeout{}
}

/*PutOutboundDnclistRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutOutboundDnclistRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PutOutboundDnclistRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/dnclists/{dncListId}][%d] putOutboundDnclistRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutOutboundDnclistRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundDnclistRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundDnclistConflict creates a PutOutboundDnclistConflict with default headers values
func NewPutOutboundDnclistConflict() *PutOutboundDnclistConflict {
	return &PutOutboundDnclistConflict{}
}

/*PutOutboundDnclistConflict handles this case with default header values.

Conflict
*/
type PutOutboundDnclistConflict struct {
	Payload *models.ErrorBody
}

func (o *PutOutboundDnclistConflict) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/dnclists/{dncListId}][%d] putOutboundDnclistConflict  %+v", 409, o.Payload)
}

func (o *PutOutboundDnclistConflict) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundDnclistConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundDnclistRequestEntityTooLarge creates a PutOutboundDnclistRequestEntityTooLarge with default headers values
func NewPutOutboundDnclistRequestEntityTooLarge() *PutOutboundDnclistRequestEntityTooLarge {
	return &PutOutboundDnclistRequestEntityTooLarge{}
}

/*PutOutboundDnclistRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type PutOutboundDnclistRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PutOutboundDnclistRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/dnclists/{dncListId}][%d] putOutboundDnclistRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutOutboundDnclistRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundDnclistRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundDnclistUnsupportedMediaType creates a PutOutboundDnclistUnsupportedMediaType with default headers values
func NewPutOutboundDnclistUnsupportedMediaType() *PutOutboundDnclistUnsupportedMediaType {
	return &PutOutboundDnclistUnsupportedMediaType{}
}

/*PutOutboundDnclistUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutOutboundDnclistUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PutOutboundDnclistUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/dnclists/{dncListId}][%d] putOutboundDnclistUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutOutboundDnclistUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundDnclistUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundDnclistTooManyRequests creates a PutOutboundDnclistTooManyRequests with default headers values
func NewPutOutboundDnclistTooManyRequests() *PutOutboundDnclistTooManyRequests {
	return &PutOutboundDnclistTooManyRequests{}
}

/*PutOutboundDnclistTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutOutboundDnclistTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PutOutboundDnclistTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/dnclists/{dncListId}][%d] putOutboundDnclistTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutOutboundDnclistTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundDnclistTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundDnclistInternalServerError creates a PutOutboundDnclistInternalServerError with default headers values
func NewPutOutboundDnclistInternalServerError() *PutOutboundDnclistInternalServerError {
	return &PutOutboundDnclistInternalServerError{}
}

/*PutOutboundDnclistInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutOutboundDnclistInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PutOutboundDnclistInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/dnclists/{dncListId}][%d] putOutboundDnclistInternalServerError  %+v", 500, o.Payload)
}

func (o *PutOutboundDnclistInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundDnclistInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundDnclistServiceUnavailable creates a PutOutboundDnclistServiceUnavailable with default headers values
func NewPutOutboundDnclistServiceUnavailable() *PutOutboundDnclistServiceUnavailable {
	return &PutOutboundDnclistServiceUnavailable{}
}

/*PutOutboundDnclistServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutOutboundDnclistServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PutOutboundDnclistServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/dnclists/{dncListId}][%d] putOutboundDnclistServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutOutboundDnclistServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundDnclistServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundDnclistGatewayTimeout creates a PutOutboundDnclistGatewayTimeout with default headers values
func NewPutOutboundDnclistGatewayTimeout() *PutOutboundDnclistGatewayTimeout {
	return &PutOutboundDnclistGatewayTimeout{}
}

/*PutOutboundDnclistGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PutOutboundDnclistGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PutOutboundDnclistGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/dnclists/{dncListId}][%d] putOutboundDnclistGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutOutboundDnclistGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundDnclistGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
