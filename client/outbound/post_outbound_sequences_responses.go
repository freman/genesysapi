// Code generated by go-swagger; DO NOT EDIT.

package outbound

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostOutboundSequencesReader is a Reader for the PostOutboundSequences structure.
type PostOutboundSequencesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostOutboundSequencesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostOutboundSequencesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostOutboundSequencesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostOutboundSequencesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostOutboundSequencesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostOutboundSequencesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostOutboundSequencesRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostOutboundSequencesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostOutboundSequencesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostOutboundSequencesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostOutboundSequencesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostOutboundSequencesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostOutboundSequencesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostOutboundSequencesOK creates a PostOutboundSequencesOK with default headers values
func NewPostOutboundSequencesOK() *PostOutboundSequencesOK {
	return &PostOutboundSequencesOK{}
}

/*
PostOutboundSequencesOK describes a response with status code 200, with default header values.

successful operation
*/
type PostOutboundSequencesOK struct {
	Payload *models.CampaignSequence
}

// IsSuccess returns true when this post outbound sequences o k response has a 2xx status code
func (o *PostOutboundSequencesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post outbound sequences o k response has a 3xx status code
func (o *PostOutboundSequencesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post outbound sequences o k response has a 4xx status code
func (o *PostOutboundSequencesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post outbound sequences o k response has a 5xx status code
func (o *PostOutboundSequencesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post outbound sequences o k response a status code equal to that given
func (o *PostOutboundSequencesOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostOutboundSequencesOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/sequences][%d] postOutboundSequencesOK  %+v", 200, o.Payload)
}

func (o *PostOutboundSequencesOK) String() string {
	return fmt.Sprintf("[POST /api/v2/outbound/sequences][%d] postOutboundSequencesOK  %+v", 200, o.Payload)
}

func (o *PostOutboundSequencesOK) GetPayload() *models.CampaignSequence {
	return o.Payload
}

func (o *PostOutboundSequencesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CampaignSequence)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundSequencesBadRequest creates a PostOutboundSequencesBadRequest with default headers values
func NewPostOutboundSequencesBadRequest() *PostOutboundSequencesBadRequest {
	return &PostOutboundSequencesBadRequest{}
}

/*
PostOutboundSequencesBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostOutboundSequencesBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post outbound sequences bad request response has a 2xx status code
func (o *PostOutboundSequencesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post outbound sequences bad request response has a 3xx status code
func (o *PostOutboundSequencesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post outbound sequences bad request response has a 4xx status code
func (o *PostOutboundSequencesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post outbound sequences bad request response has a 5xx status code
func (o *PostOutboundSequencesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post outbound sequences bad request response a status code equal to that given
func (o *PostOutboundSequencesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostOutboundSequencesBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/sequences][%d] postOutboundSequencesBadRequest  %+v", 400, o.Payload)
}

func (o *PostOutboundSequencesBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/outbound/sequences][%d] postOutboundSequencesBadRequest  %+v", 400, o.Payload)
}

func (o *PostOutboundSequencesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundSequencesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundSequencesUnauthorized creates a PostOutboundSequencesUnauthorized with default headers values
func NewPostOutboundSequencesUnauthorized() *PostOutboundSequencesUnauthorized {
	return &PostOutboundSequencesUnauthorized{}
}

/*
PostOutboundSequencesUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostOutboundSequencesUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post outbound sequences unauthorized response has a 2xx status code
func (o *PostOutboundSequencesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post outbound sequences unauthorized response has a 3xx status code
func (o *PostOutboundSequencesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post outbound sequences unauthorized response has a 4xx status code
func (o *PostOutboundSequencesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post outbound sequences unauthorized response has a 5xx status code
func (o *PostOutboundSequencesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post outbound sequences unauthorized response a status code equal to that given
func (o *PostOutboundSequencesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostOutboundSequencesUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/sequences][%d] postOutboundSequencesUnauthorized  %+v", 401, o.Payload)
}

func (o *PostOutboundSequencesUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/outbound/sequences][%d] postOutboundSequencesUnauthorized  %+v", 401, o.Payload)
}

func (o *PostOutboundSequencesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundSequencesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundSequencesForbidden creates a PostOutboundSequencesForbidden with default headers values
func NewPostOutboundSequencesForbidden() *PostOutboundSequencesForbidden {
	return &PostOutboundSequencesForbidden{}
}

/*
PostOutboundSequencesForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostOutboundSequencesForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post outbound sequences forbidden response has a 2xx status code
func (o *PostOutboundSequencesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post outbound sequences forbidden response has a 3xx status code
func (o *PostOutboundSequencesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post outbound sequences forbidden response has a 4xx status code
func (o *PostOutboundSequencesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post outbound sequences forbidden response has a 5xx status code
func (o *PostOutboundSequencesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post outbound sequences forbidden response a status code equal to that given
func (o *PostOutboundSequencesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostOutboundSequencesForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/sequences][%d] postOutboundSequencesForbidden  %+v", 403, o.Payload)
}

func (o *PostOutboundSequencesForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/outbound/sequences][%d] postOutboundSequencesForbidden  %+v", 403, o.Payload)
}

func (o *PostOutboundSequencesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundSequencesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundSequencesNotFound creates a PostOutboundSequencesNotFound with default headers values
func NewPostOutboundSequencesNotFound() *PostOutboundSequencesNotFound {
	return &PostOutboundSequencesNotFound{}
}

/*
PostOutboundSequencesNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostOutboundSequencesNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post outbound sequences not found response has a 2xx status code
func (o *PostOutboundSequencesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post outbound sequences not found response has a 3xx status code
func (o *PostOutboundSequencesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post outbound sequences not found response has a 4xx status code
func (o *PostOutboundSequencesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post outbound sequences not found response has a 5xx status code
func (o *PostOutboundSequencesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post outbound sequences not found response a status code equal to that given
func (o *PostOutboundSequencesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostOutboundSequencesNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/sequences][%d] postOutboundSequencesNotFound  %+v", 404, o.Payload)
}

func (o *PostOutboundSequencesNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/outbound/sequences][%d] postOutboundSequencesNotFound  %+v", 404, o.Payload)
}

func (o *PostOutboundSequencesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundSequencesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundSequencesRequestTimeout creates a PostOutboundSequencesRequestTimeout with default headers values
func NewPostOutboundSequencesRequestTimeout() *PostOutboundSequencesRequestTimeout {
	return &PostOutboundSequencesRequestTimeout{}
}

/*
PostOutboundSequencesRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostOutboundSequencesRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post outbound sequences request timeout response has a 2xx status code
func (o *PostOutboundSequencesRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post outbound sequences request timeout response has a 3xx status code
func (o *PostOutboundSequencesRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post outbound sequences request timeout response has a 4xx status code
func (o *PostOutboundSequencesRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post outbound sequences request timeout response has a 5xx status code
func (o *PostOutboundSequencesRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post outbound sequences request timeout response a status code equal to that given
func (o *PostOutboundSequencesRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostOutboundSequencesRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/sequences][%d] postOutboundSequencesRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostOutboundSequencesRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/outbound/sequences][%d] postOutboundSequencesRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostOutboundSequencesRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundSequencesRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundSequencesRequestEntityTooLarge creates a PostOutboundSequencesRequestEntityTooLarge with default headers values
func NewPostOutboundSequencesRequestEntityTooLarge() *PostOutboundSequencesRequestEntityTooLarge {
	return &PostOutboundSequencesRequestEntityTooLarge{}
}

/*
PostOutboundSequencesRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PostOutboundSequencesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post outbound sequences request entity too large response has a 2xx status code
func (o *PostOutboundSequencesRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post outbound sequences request entity too large response has a 3xx status code
func (o *PostOutboundSequencesRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post outbound sequences request entity too large response has a 4xx status code
func (o *PostOutboundSequencesRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post outbound sequences request entity too large response has a 5xx status code
func (o *PostOutboundSequencesRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post outbound sequences request entity too large response a status code equal to that given
func (o *PostOutboundSequencesRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostOutboundSequencesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/sequences][%d] postOutboundSequencesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostOutboundSequencesRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/outbound/sequences][%d] postOutboundSequencesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostOutboundSequencesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundSequencesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundSequencesUnsupportedMediaType creates a PostOutboundSequencesUnsupportedMediaType with default headers values
func NewPostOutboundSequencesUnsupportedMediaType() *PostOutboundSequencesUnsupportedMediaType {
	return &PostOutboundSequencesUnsupportedMediaType{}
}

/*
PostOutboundSequencesUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostOutboundSequencesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post outbound sequences unsupported media type response has a 2xx status code
func (o *PostOutboundSequencesUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post outbound sequences unsupported media type response has a 3xx status code
func (o *PostOutboundSequencesUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post outbound sequences unsupported media type response has a 4xx status code
func (o *PostOutboundSequencesUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post outbound sequences unsupported media type response has a 5xx status code
func (o *PostOutboundSequencesUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post outbound sequences unsupported media type response a status code equal to that given
func (o *PostOutboundSequencesUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostOutboundSequencesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/sequences][%d] postOutboundSequencesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostOutboundSequencesUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/outbound/sequences][%d] postOutboundSequencesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostOutboundSequencesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundSequencesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundSequencesTooManyRequests creates a PostOutboundSequencesTooManyRequests with default headers values
func NewPostOutboundSequencesTooManyRequests() *PostOutboundSequencesTooManyRequests {
	return &PostOutboundSequencesTooManyRequests{}
}

/*
PostOutboundSequencesTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostOutboundSequencesTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post outbound sequences too many requests response has a 2xx status code
func (o *PostOutboundSequencesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post outbound sequences too many requests response has a 3xx status code
func (o *PostOutboundSequencesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post outbound sequences too many requests response has a 4xx status code
func (o *PostOutboundSequencesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post outbound sequences too many requests response has a 5xx status code
func (o *PostOutboundSequencesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post outbound sequences too many requests response a status code equal to that given
func (o *PostOutboundSequencesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostOutboundSequencesTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/sequences][%d] postOutboundSequencesTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostOutboundSequencesTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/outbound/sequences][%d] postOutboundSequencesTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostOutboundSequencesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundSequencesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundSequencesInternalServerError creates a PostOutboundSequencesInternalServerError with default headers values
func NewPostOutboundSequencesInternalServerError() *PostOutboundSequencesInternalServerError {
	return &PostOutboundSequencesInternalServerError{}
}

/*
PostOutboundSequencesInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostOutboundSequencesInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post outbound sequences internal server error response has a 2xx status code
func (o *PostOutboundSequencesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post outbound sequences internal server error response has a 3xx status code
func (o *PostOutboundSequencesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post outbound sequences internal server error response has a 4xx status code
func (o *PostOutboundSequencesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post outbound sequences internal server error response has a 5xx status code
func (o *PostOutboundSequencesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post outbound sequences internal server error response a status code equal to that given
func (o *PostOutboundSequencesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostOutboundSequencesInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/sequences][%d] postOutboundSequencesInternalServerError  %+v", 500, o.Payload)
}

func (o *PostOutboundSequencesInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/outbound/sequences][%d] postOutboundSequencesInternalServerError  %+v", 500, o.Payload)
}

func (o *PostOutboundSequencesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundSequencesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundSequencesServiceUnavailable creates a PostOutboundSequencesServiceUnavailable with default headers values
func NewPostOutboundSequencesServiceUnavailable() *PostOutboundSequencesServiceUnavailable {
	return &PostOutboundSequencesServiceUnavailable{}
}

/*
PostOutboundSequencesServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostOutboundSequencesServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post outbound sequences service unavailable response has a 2xx status code
func (o *PostOutboundSequencesServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post outbound sequences service unavailable response has a 3xx status code
func (o *PostOutboundSequencesServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post outbound sequences service unavailable response has a 4xx status code
func (o *PostOutboundSequencesServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post outbound sequences service unavailable response has a 5xx status code
func (o *PostOutboundSequencesServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post outbound sequences service unavailable response a status code equal to that given
func (o *PostOutboundSequencesServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostOutboundSequencesServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/sequences][%d] postOutboundSequencesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostOutboundSequencesServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/outbound/sequences][%d] postOutboundSequencesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostOutboundSequencesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundSequencesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundSequencesGatewayTimeout creates a PostOutboundSequencesGatewayTimeout with default headers values
func NewPostOutboundSequencesGatewayTimeout() *PostOutboundSequencesGatewayTimeout {
	return &PostOutboundSequencesGatewayTimeout{}
}

/*
PostOutboundSequencesGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostOutboundSequencesGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post outbound sequences gateway timeout response has a 2xx status code
func (o *PostOutboundSequencesGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post outbound sequences gateway timeout response has a 3xx status code
func (o *PostOutboundSequencesGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post outbound sequences gateway timeout response has a 4xx status code
func (o *PostOutboundSequencesGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post outbound sequences gateway timeout response has a 5xx status code
func (o *PostOutboundSequencesGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post outbound sequences gateway timeout response a status code equal to that given
func (o *PostOutboundSequencesGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostOutboundSequencesGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/sequences][%d] postOutboundSequencesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostOutboundSequencesGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/outbound/sequences][%d] postOutboundSequencesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostOutboundSequencesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundSequencesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
