// Code generated by go-swagger; DO NOT EDIT.

package outbound

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutOutboundContactlistfilterReader is a Reader for the PutOutboundContactlistfilter structure.
type PutOutboundContactlistfilterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutOutboundContactlistfilterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutOutboundContactlistfilterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutOutboundContactlistfilterBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutOutboundContactlistfilterUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutOutboundContactlistfilterForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutOutboundContactlistfilterNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutOutboundContactlistfilterRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutOutboundContactlistfilterRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutOutboundContactlistfilterUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutOutboundContactlistfilterTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutOutboundContactlistfilterInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutOutboundContactlistfilterServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutOutboundContactlistfilterGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutOutboundContactlistfilterOK creates a PutOutboundContactlistfilterOK with default headers values
func NewPutOutboundContactlistfilterOK() *PutOutboundContactlistfilterOK {
	return &PutOutboundContactlistfilterOK{}
}

/*
PutOutboundContactlistfilterOK describes a response with status code 200, with default header values.

successful operation
*/
type PutOutboundContactlistfilterOK struct {
	Payload *models.ContactListFilter
}

// IsSuccess returns true when this put outbound contactlistfilter o k response has a 2xx status code
func (o *PutOutboundContactlistfilterOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put outbound contactlistfilter o k response has a 3xx status code
func (o *PutOutboundContactlistfilterOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put outbound contactlistfilter o k response has a 4xx status code
func (o *PutOutboundContactlistfilterOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put outbound contactlistfilter o k response has a 5xx status code
func (o *PutOutboundContactlistfilterOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put outbound contactlistfilter o k response a status code equal to that given
func (o *PutOutboundContactlistfilterOK) IsCode(code int) bool {
	return code == 200
}

func (o *PutOutboundContactlistfilterOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlistfilters/{contactListFilterId}][%d] putOutboundContactlistfilterOK  %+v", 200, o.Payload)
}

func (o *PutOutboundContactlistfilterOK) String() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlistfilters/{contactListFilterId}][%d] putOutboundContactlistfilterOK  %+v", 200, o.Payload)
}

func (o *PutOutboundContactlistfilterOK) GetPayload() *models.ContactListFilter {
	return o.Payload
}

func (o *PutOutboundContactlistfilterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ContactListFilter)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundContactlistfilterBadRequest creates a PutOutboundContactlistfilterBadRequest with default headers values
func NewPutOutboundContactlistfilterBadRequest() *PutOutboundContactlistfilterBadRequest {
	return &PutOutboundContactlistfilterBadRequest{}
}

/*
PutOutboundContactlistfilterBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutOutboundContactlistfilterBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put outbound contactlistfilter bad request response has a 2xx status code
func (o *PutOutboundContactlistfilterBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put outbound contactlistfilter bad request response has a 3xx status code
func (o *PutOutboundContactlistfilterBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put outbound contactlistfilter bad request response has a 4xx status code
func (o *PutOutboundContactlistfilterBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put outbound contactlistfilter bad request response has a 5xx status code
func (o *PutOutboundContactlistfilterBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put outbound contactlistfilter bad request response a status code equal to that given
func (o *PutOutboundContactlistfilterBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PutOutboundContactlistfilterBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlistfilters/{contactListFilterId}][%d] putOutboundContactlistfilterBadRequest  %+v", 400, o.Payload)
}

func (o *PutOutboundContactlistfilterBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlistfilters/{contactListFilterId}][%d] putOutboundContactlistfilterBadRequest  %+v", 400, o.Payload)
}

func (o *PutOutboundContactlistfilterBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundContactlistfilterBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundContactlistfilterUnauthorized creates a PutOutboundContactlistfilterUnauthorized with default headers values
func NewPutOutboundContactlistfilterUnauthorized() *PutOutboundContactlistfilterUnauthorized {
	return &PutOutboundContactlistfilterUnauthorized{}
}

/*
PutOutboundContactlistfilterUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PutOutboundContactlistfilterUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put outbound contactlistfilter unauthorized response has a 2xx status code
func (o *PutOutboundContactlistfilterUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put outbound contactlistfilter unauthorized response has a 3xx status code
func (o *PutOutboundContactlistfilterUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put outbound contactlistfilter unauthorized response has a 4xx status code
func (o *PutOutboundContactlistfilterUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put outbound contactlistfilter unauthorized response has a 5xx status code
func (o *PutOutboundContactlistfilterUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put outbound contactlistfilter unauthorized response a status code equal to that given
func (o *PutOutboundContactlistfilterUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PutOutboundContactlistfilterUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlistfilters/{contactListFilterId}][%d] putOutboundContactlistfilterUnauthorized  %+v", 401, o.Payload)
}

func (o *PutOutboundContactlistfilterUnauthorized) String() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlistfilters/{contactListFilterId}][%d] putOutboundContactlistfilterUnauthorized  %+v", 401, o.Payload)
}

func (o *PutOutboundContactlistfilterUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundContactlistfilterUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundContactlistfilterForbidden creates a PutOutboundContactlistfilterForbidden with default headers values
func NewPutOutboundContactlistfilterForbidden() *PutOutboundContactlistfilterForbidden {
	return &PutOutboundContactlistfilterForbidden{}
}

/*
PutOutboundContactlistfilterForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PutOutboundContactlistfilterForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put outbound contactlistfilter forbidden response has a 2xx status code
func (o *PutOutboundContactlistfilterForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put outbound contactlistfilter forbidden response has a 3xx status code
func (o *PutOutboundContactlistfilterForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put outbound contactlistfilter forbidden response has a 4xx status code
func (o *PutOutboundContactlistfilterForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put outbound contactlistfilter forbidden response has a 5xx status code
func (o *PutOutboundContactlistfilterForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put outbound contactlistfilter forbidden response a status code equal to that given
func (o *PutOutboundContactlistfilterForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PutOutboundContactlistfilterForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlistfilters/{contactListFilterId}][%d] putOutboundContactlistfilterForbidden  %+v", 403, o.Payload)
}

func (o *PutOutboundContactlistfilterForbidden) String() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlistfilters/{contactListFilterId}][%d] putOutboundContactlistfilterForbidden  %+v", 403, o.Payload)
}

func (o *PutOutboundContactlistfilterForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundContactlistfilterForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundContactlistfilterNotFound creates a PutOutboundContactlistfilterNotFound with default headers values
func NewPutOutboundContactlistfilterNotFound() *PutOutboundContactlistfilterNotFound {
	return &PutOutboundContactlistfilterNotFound{}
}

/*
PutOutboundContactlistfilterNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PutOutboundContactlistfilterNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put outbound contactlistfilter not found response has a 2xx status code
func (o *PutOutboundContactlistfilterNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put outbound contactlistfilter not found response has a 3xx status code
func (o *PutOutboundContactlistfilterNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put outbound contactlistfilter not found response has a 4xx status code
func (o *PutOutboundContactlistfilterNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put outbound contactlistfilter not found response has a 5xx status code
func (o *PutOutboundContactlistfilterNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put outbound contactlistfilter not found response a status code equal to that given
func (o *PutOutboundContactlistfilterNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PutOutboundContactlistfilterNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlistfilters/{contactListFilterId}][%d] putOutboundContactlistfilterNotFound  %+v", 404, o.Payload)
}

func (o *PutOutboundContactlistfilterNotFound) String() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlistfilters/{contactListFilterId}][%d] putOutboundContactlistfilterNotFound  %+v", 404, o.Payload)
}

func (o *PutOutboundContactlistfilterNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundContactlistfilterNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundContactlistfilterRequestTimeout creates a PutOutboundContactlistfilterRequestTimeout with default headers values
func NewPutOutboundContactlistfilterRequestTimeout() *PutOutboundContactlistfilterRequestTimeout {
	return &PutOutboundContactlistfilterRequestTimeout{}
}

/*
PutOutboundContactlistfilterRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutOutboundContactlistfilterRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put outbound contactlistfilter request timeout response has a 2xx status code
func (o *PutOutboundContactlistfilterRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put outbound contactlistfilter request timeout response has a 3xx status code
func (o *PutOutboundContactlistfilterRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put outbound contactlistfilter request timeout response has a 4xx status code
func (o *PutOutboundContactlistfilterRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this put outbound contactlistfilter request timeout response has a 5xx status code
func (o *PutOutboundContactlistfilterRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this put outbound contactlistfilter request timeout response a status code equal to that given
func (o *PutOutboundContactlistfilterRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PutOutboundContactlistfilterRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlistfilters/{contactListFilterId}][%d] putOutboundContactlistfilterRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutOutboundContactlistfilterRequestTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlistfilters/{contactListFilterId}][%d] putOutboundContactlistfilterRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutOutboundContactlistfilterRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundContactlistfilterRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundContactlistfilterRequestEntityTooLarge creates a PutOutboundContactlistfilterRequestEntityTooLarge with default headers values
func NewPutOutboundContactlistfilterRequestEntityTooLarge() *PutOutboundContactlistfilterRequestEntityTooLarge {
	return &PutOutboundContactlistfilterRequestEntityTooLarge{}
}

/*
PutOutboundContactlistfilterRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PutOutboundContactlistfilterRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put outbound contactlistfilter request entity too large response has a 2xx status code
func (o *PutOutboundContactlistfilterRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put outbound contactlistfilter request entity too large response has a 3xx status code
func (o *PutOutboundContactlistfilterRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put outbound contactlistfilter request entity too large response has a 4xx status code
func (o *PutOutboundContactlistfilterRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this put outbound contactlistfilter request entity too large response has a 5xx status code
func (o *PutOutboundContactlistfilterRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this put outbound contactlistfilter request entity too large response a status code equal to that given
func (o *PutOutboundContactlistfilterRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PutOutboundContactlistfilterRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlistfilters/{contactListFilterId}][%d] putOutboundContactlistfilterRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutOutboundContactlistfilterRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlistfilters/{contactListFilterId}][%d] putOutboundContactlistfilterRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutOutboundContactlistfilterRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundContactlistfilterRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundContactlistfilterUnsupportedMediaType creates a PutOutboundContactlistfilterUnsupportedMediaType with default headers values
func NewPutOutboundContactlistfilterUnsupportedMediaType() *PutOutboundContactlistfilterUnsupportedMediaType {
	return &PutOutboundContactlistfilterUnsupportedMediaType{}
}

/*
PutOutboundContactlistfilterUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutOutboundContactlistfilterUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put outbound contactlistfilter unsupported media type response has a 2xx status code
func (o *PutOutboundContactlistfilterUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put outbound contactlistfilter unsupported media type response has a 3xx status code
func (o *PutOutboundContactlistfilterUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put outbound contactlistfilter unsupported media type response has a 4xx status code
func (o *PutOutboundContactlistfilterUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this put outbound contactlistfilter unsupported media type response has a 5xx status code
func (o *PutOutboundContactlistfilterUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this put outbound contactlistfilter unsupported media type response a status code equal to that given
func (o *PutOutboundContactlistfilterUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PutOutboundContactlistfilterUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlistfilters/{contactListFilterId}][%d] putOutboundContactlistfilterUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutOutboundContactlistfilterUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlistfilters/{contactListFilterId}][%d] putOutboundContactlistfilterUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutOutboundContactlistfilterUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundContactlistfilterUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundContactlistfilterTooManyRequests creates a PutOutboundContactlistfilterTooManyRequests with default headers values
func NewPutOutboundContactlistfilterTooManyRequests() *PutOutboundContactlistfilterTooManyRequests {
	return &PutOutboundContactlistfilterTooManyRequests{}
}

/*
PutOutboundContactlistfilterTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutOutboundContactlistfilterTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put outbound contactlistfilter too many requests response has a 2xx status code
func (o *PutOutboundContactlistfilterTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put outbound contactlistfilter too many requests response has a 3xx status code
func (o *PutOutboundContactlistfilterTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put outbound contactlistfilter too many requests response has a 4xx status code
func (o *PutOutboundContactlistfilterTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this put outbound contactlistfilter too many requests response has a 5xx status code
func (o *PutOutboundContactlistfilterTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this put outbound contactlistfilter too many requests response a status code equal to that given
func (o *PutOutboundContactlistfilterTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PutOutboundContactlistfilterTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlistfilters/{contactListFilterId}][%d] putOutboundContactlistfilterTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutOutboundContactlistfilterTooManyRequests) String() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlistfilters/{contactListFilterId}][%d] putOutboundContactlistfilterTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutOutboundContactlistfilterTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundContactlistfilterTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundContactlistfilterInternalServerError creates a PutOutboundContactlistfilterInternalServerError with default headers values
func NewPutOutboundContactlistfilterInternalServerError() *PutOutboundContactlistfilterInternalServerError {
	return &PutOutboundContactlistfilterInternalServerError{}
}

/*
PutOutboundContactlistfilterInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutOutboundContactlistfilterInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put outbound contactlistfilter internal server error response has a 2xx status code
func (o *PutOutboundContactlistfilterInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put outbound contactlistfilter internal server error response has a 3xx status code
func (o *PutOutboundContactlistfilterInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put outbound contactlistfilter internal server error response has a 4xx status code
func (o *PutOutboundContactlistfilterInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this put outbound contactlistfilter internal server error response has a 5xx status code
func (o *PutOutboundContactlistfilterInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this put outbound contactlistfilter internal server error response a status code equal to that given
func (o *PutOutboundContactlistfilterInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PutOutboundContactlistfilterInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlistfilters/{contactListFilterId}][%d] putOutboundContactlistfilterInternalServerError  %+v", 500, o.Payload)
}

func (o *PutOutboundContactlistfilterInternalServerError) String() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlistfilters/{contactListFilterId}][%d] putOutboundContactlistfilterInternalServerError  %+v", 500, o.Payload)
}

func (o *PutOutboundContactlistfilterInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundContactlistfilterInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundContactlistfilterServiceUnavailable creates a PutOutboundContactlistfilterServiceUnavailable with default headers values
func NewPutOutboundContactlistfilterServiceUnavailable() *PutOutboundContactlistfilterServiceUnavailable {
	return &PutOutboundContactlistfilterServiceUnavailable{}
}

/*
PutOutboundContactlistfilterServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutOutboundContactlistfilterServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put outbound contactlistfilter service unavailable response has a 2xx status code
func (o *PutOutboundContactlistfilterServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put outbound contactlistfilter service unavailable response has a 3xx status code
func (o *PutOutboundContactlistfilterServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put outbound contactlistfilter service unavailable response has a 4xx status code
func (o *PutOutboundContactlistfilterServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this put outbound contactlistfilter service unavailable response has a 5xx status code
func (o *PutOutboundContactlistfilterServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this put outbound contactlistfilter service unavailable response a status code equal to that given
func (o *PutOutboundContactlistfilterServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PutOutboundContactlistfilterServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlistfilters/{contactListFilterId}][%d] putOutboundContactlistfilterServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutOutboundContactlistfilterServiceUnavailable) String() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlistfilters/{contactListFilterId}][%d] putOutboundContactlistfilterServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutOutboundContactlistfilterServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundContactlistfilterServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOutboundContactlistfilterGatewayTimeout creates a PutOutboundContactlistfilterGatewayTimeout with default headers values
func NewPutOutboundContactlistfilterGatewayTimeout() *PutOutboundContactlistfilterGatewayTimeout {
	return &PutOutboundContactlistfilterGatewayTimeout{}
}

/*
PutOutboundContactlistfilterGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PutOutboundContactlistfilterGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put outbound contactlistfilter gateway timeout response has a 2xx status code
func (o *PutOutboundContactlistfilterGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put outbound contactlistfilter gateway timeout response has a 3xx status code
func (o *PutOutboundContactlistfilterGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put outbound contactlistfilter gateway timeout response has a 4xx status code
func (o *PutOutboundContactlistfilterGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this put outbound contactlistfilter gateway timeout response has a 5xx status code
func (o *PutOutboundContactlistfilterGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this put outbound contactlistfilter gateway timeout response a status code equal to that given
func (o *PutOutboundContactlistfilterGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PutOutboundContactlistfilterGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlistfilters/{contactListFilterId}][%d] putOutboundContactlistfilterGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutOutboundContactlistfilterGatewayTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/outbound/contactlistfilters/{contactListFilterId}][%d] putOutboundContactlistfilterGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutOutboundContactlistfilterGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOutboundContactlistfilterGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
