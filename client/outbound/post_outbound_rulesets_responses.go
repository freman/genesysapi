// Code generated by go-swagger; DO NOT EDIT.

package outbound

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostOutboundRulesetsReader is a Reader for the PostOutboundRulesets structure.
type PostOutboundRulesetsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostOutboundRulesetsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostOutboundRulesetsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostOutboundRulesetsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostOutboundRulesetsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostOutboundRulesetsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostOutboundRulesetsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostOutboundRulesetsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostOutboundRulesetsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostOutboundRulesetsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostOutboundRulesetsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostOutboundRulesetsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostOutboundRulesetsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostOutboundRulesetsOK creates a PostOutboundRulesetsOK with default headers values
func NewPostOutboundRulesetsOK() *PostOutboundRulesetsOK {
	return &PostOutboundRulesetsOK{}
}

/*PostOutboundRulesetsOK handles this case with default header values.

successful operation
*/
type PostOutboundRulesetsOK struct {
	Payload *models.RuleSet
}

func (o *PostOutboundRulesetsOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/rulesets][%d] postOutboundRulesetsOK  %+v", 200, o.Payload)
}

func (o *PostOutboundRulesetsOK) GetPayload() *models.RuleSet {
	return o.Payload
}

func (o *PostOutboundRulesetsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RuleSet)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundRulesetsBadRequest creates a PostOutboundRulesetsBadRequest with default headers values
func NewPostOutboundRulesetsBadRequest() *PostOutboundRulesetsBadRequest {
	return &PostOutboundRulesetsBadRequest{}
}

/*PostOutboundRulesetsBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostOutboundRulesetsBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PostOutboundRulesetsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/rulesets][%d] postOutboundRulesetsBadRequest  %+v", 400, o.Payload)
}

func (o *PostOutboundRulesetsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundRulesetsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundRulesetsUnauthorized creates a PostOutboundRulesetsUnauthorized with default headers values
func NewPostOutboundRulesetsUnauthorized() *PostOutboundRulesetsUnauthorized {
	return &PostOutboundRulesetsUnauthorized{}
}

/*PostOutboundRulesetsUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PostOutboundRulesetsUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PostOutboundRulesetsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/rulesets][%d] postOutboundRulesetsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostOutboundRulesetsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundRulesetsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundRulesetsForbidden creates a PostOutboundRulesetsForbidden with default headers values
func NewPostOutboundRulesetsForbidden() *PostOutboundRulesetsForbidden {
	return &PostOutboundRulesetsForbidden{}
}

/*PostOutboundRulesetsForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PostOutboundRulesetsForbidden struct {
	Payload *models.ErrorBody
}

func (o *PostOutboundRulesetsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/rulesets][%d] postOutboundRulesetsForbidden  %+v", 403, o.Payload)
}

func (o *PostOutboundRulesetsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundRulesetsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundRulesetsNotFound creates a PostOutboundRulesetsNotFound with default headers values
func NewPostOutboundRulesetsNotFound() *PostOutboundRulesetsNotFound {
	return &PostOutboundRulesetsNotFound{}
}

/*PostOutboundRulesetsNotFound handles this case with default header values.

The requested resource was not found.
*/
type PostOutboundRulesetsNotFound struct {
	Payload *models.ErrorBody
}

func (o *PostOutboundRulesetsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/rulesets][%d] postOutboundRulesetsNotFound  %+v", 404, o.Payload)
}

func (o *PostOutboundRulesetsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundRulesetsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundRulesetsRequestEntityTooLarge creates a PostOutboundRulesetsRequestEntityTooLarge with default headers values
func NewPostOutboundRulesetsRequestEntityTooLarge() *PostOutboundRulesetsRequestEntityTooLarge {
	return &PostOutboundRulesetsRequestEntityTooLarge{}
}

/*PostOutboundRulesetsRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type PostOutboundRulesetsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PostOutboundRulesetsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/rulesets][%d] postOutboundRulesetsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostOutboundRulesetsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundRulesetsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundRulesetsUnsupportedMediaType creates a PostOutboundRulesetsUnsupportedMediaType with default headers values
func NewPostOutboundRulesetsUnsupportedMediaType() *PostOutboundRulesetsUnsupportedMediaType {
	return &PostOutboundRulesetsUnsupportedMediaType{}
}

/*PostOutboundRulesetsUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostOutboundRulesetsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PostOutboundRulesetsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/rulesets][%d] postOutboundRulesetsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostOutboundRulesetsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundRulesetsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundRulesetsTooManyRequests creates a PostOutboundRulesetsTooManyRequests with default headers values
func NewPostOutboundRulesetsTooManyRequests() *PostOutboundRulesetsTooManyRequests {
	return &PostOutboundRulesetsTooManyRequests{}
}

/*PostOutboundRulesetsTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type PostOutboundRulesetsTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PostOutboundRulesetsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/rulesets][%d] postOutboundRulesetsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostOutboundRulesetsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundRulesetsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundRulesetsInternalServerError creates a PostOutboundRulesetsInternalServerError with default headers values
func NewPostOutboundRulesetsInternalServerError() *PostOutboundRulesetsInternalServerError {
	return &PostOutboundRulesetsInternalServerError{}
}

/*PostOutboundRulesetsInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostOutboundRulesetsInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PostOutboundRulesetsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/rulesets][%d] postOutboundRulesetsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostOutboundRulesetsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundRulesetsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundRulesetsServiceUnavailable creates a PostOutboundRulesetsServiceUnavailable with default headers values
func NewPostOutboundRulesetsServiceUnavailable() *PostOutboundRulesetsServiceUnavailable {
	return &PostOutboundRulesetsServiceUnavailable{}
}

/*PostOutboundRulesetsServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostOutboundRulesetsServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PostOutboundRulesetsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/rulesets][%d] postOutboundRulesetsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostOutboundRulesetsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundRulesetsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundRulesetsGatewayTimeout creates a PostOutboundRulesetsGatewayTimeout with default headers values
func NewPostOutboundRulesetsGatewayTimeout() *PostOutboundRulesetsGatewayTimeout {
	return &PostOutboundRulesetsGatewayTimeout{}
}

/*PostOutboundRulesetsGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PostOutboundRulesetsGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostOutboundRulesetsGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/rulesets][%d] postOutboundRulesetsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostOutboundRulesetsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundRulesetsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
