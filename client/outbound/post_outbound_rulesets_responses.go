// Code generated by go-swagger; DO NOT EDIT.

package outbound

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostOutboundRulesetsReader is a Reader for the PostOutboundRulesets structure.
type PostOutboundRulesetsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostOutboundRulesetsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostOutboundRulesetsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostOutboundRulesetsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostOutboundRulesetsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostOutboundRulesetsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostOutboundRulesetsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostOutboundRulesetsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostOutboundRulesetsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostOutboundRulesetsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostOutboundRulesetsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostOutboundRulesetsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostOutboundRulesetsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostOutboundRulesetsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostOutboundRulesetsOK creates a PostOutboundRulesetsOK with default headers values
func NewPostOutboundRulesetsOK() *PostOutboundRulesetsOK {
	return &PostOutboundRulesetsOK{}
}

/*
PostOutboundRulesetsOK describes a response with status code 200, with default header values.

successful operation
*/
type PostOutboundRulesetsOK struct {
	Payload *models.RuleSet
}

// IsSuccess returns true when this post outbound rulesets o k response has a 2xx status code
func (o *PostOutboundRulesetsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post outbound rulesets o k response has a 3xx status code
func (o *PostOutboundRulesetsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post outbound rulesets o k response has a 4xx status code
func (o *PostOutboundRulesetsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post outbound rulesets o k response has a 5xx status code
func (o *PostOutboundRulesetsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post outbound rulesets o k response a status code equal to that given
func (o *PostOutboundRulesetsOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostOutboundRulesetsOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/rulesets][%d] postOutboundRulesetsOK  %+v", 200, o.Payload)
}

func (o *PostOutboundRulesetsOK) String() string {
	return fmt.Sprintf("[POST /api/v2/outbound/rulesets][%d] postOutboundRulesetsOK  %+v", 200, o.Payload)
}

func (o *PostOutboundRulesetsOK) GetPayload() *models.RuleSet {
	return o.Payload
}

func (o *PostOutboundRulesetsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RuleSet)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundRulesetsBadRequest creates a PostOutboundRulesetsBadRequest with default headers values
func NewPostOutboundRulesetsBadRequest() *PostOutboundRulesetsBadRequest {
	return &PostOutboundRulesetsBadRequest{}
}

/*
PostOutboundRulesetsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostOutboundRulesetsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post outbound rulesets bad request response has a 2xx status code
func (o *PostOutboundRulesetsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post outbound rulesets bad request response has a 3xx status code
func (o *PostOutboundRulesetsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post outbound rulesets bad request response has a 4xx status code
func (o *PostOutboundRulesetsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post outbound rulesets bad request response has a 5xx status code
func (o *PostOutboundRulesetsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post outbound rulesets bad request response a status code equal to that given
func (o *PostOutboundRulesetsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostOutboundRulesetsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/rulesets][%d] postOutboundRulesetsBadRequest  %+v", 400, o.Payload)
}

func (o *PostOutboundRulesetsBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/outbound/rulesets][%d] postOutboundRulesetsBadRequest  %+v", 400, o.Payload)
}

func (o *PostOutboundRulesetsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundRulesetsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundRulesetsUnauthorized creates a PostOutboundRulesetsUnauthorized with default headers values
func NewPostOutboundRulesetsUnauthorized() *PostOutboundRulesetsUnauthorized {
	return &PostOutboundRulesetsUnauthorized{}
}

/*
PostOutboundRulesetsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostOutboundRulesetsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post outbound rulesets unauthorized response has a 2xx status code
func (o *PostOutboundRulesetsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post outbound rulesets unauthorized response has a 3xx status code
func (o *PostOutboundRulesetsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post outbound rulesets unauthorized response has a 4xx status code
func (o *PostOutboundRulesetsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post outbound rulesets unauthorized response has a 5xx status code
func (o *PostOutboundRulesetsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post outbound rulesets unauthorized response a status code equal to that given
func (o *PostOutboundRulesetsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostOutboundRulesetsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/rulesets][%d] postOutboundRulesetsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostOutboundRulesetsUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/outbound/rulesets][%d] postOutboundRulesetsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostOutboundRulesetsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundRulesetsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundRulesetsForbidden creates a PostOutboundRulesetsForbidden with default headers values
func NewPostOutboundRulesetsForbidden() *PostOutboundRulesetsForbidden {
	return &PostOutboundRulesetsForbidden{}
}

/*
PostOutboundRulesetsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostOutboundRulesetsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post outbound rulesets forbidden response has a 2xx status code
func (o *PostOutboundRulesetsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post outbound rulesets forbidden response has a 3xx status code
func (o *PostOutboundRulesetsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post outbound rulesets forbidden response has a 4xx status code
func (o *PostOutboundRulesetsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post outbound rulesets forbidden response has a 5xx status code
func (o *PostOutboundRulesetsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post outbound rulesets forbidden response a status code equal to that given
func (o *PostOutboundRulesetsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostOutboundRulesetsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/rulesets][%d] postOutboundRulesetsForbidden  %+v", 403, o.Payload)
}

func (o *PostOutboundRulesetsForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/outbound/rulesets][%d] postOutboundRulesetsForbidden  %+v", 403, o.Payload)
}

func (o *PostOutboundRulesetsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundRulesetsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundRulesetsNotFound creates a PostOutboundRulesetsNotFound with default headers values
func NewPostOutboundRulesetsNotFound() *PostOutboundRulesetsNotFound {
	return &PostOutboundRulesetsNotFound{}
}

/*
PostOutboundRulesetsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostOutboundRulesetsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post outbound rulesets not found response has a 2xx status code
func (o *PostOutboundRulesetsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post outbound rulesets not found response has a 3xx status code
func (o *PostOutboundRulesetsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post outbound rulesets not found response has a 4xx status code
func (o *PostOutboundRulesetsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post outbound rulesets not found response has a 5xx status code
func (o *PostOutboundRulesetsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post outbound rulesets not found response a status code equal to that given
func (o *PostOutboundRulesetsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostOutboundRulesetsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/rulesets][%d] postOutboundRulesetsNotFound  %+v", 404, o.Payload)
}

func (o *PostOutboundRulesetsNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/outbound/rulesets][%d] postOutboundRulesetsNotFound  %+v", 404, o.Payload)
}

func (o *PostOutboundRulesetsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundRulesetsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundRulesetsRequestTimeout creates a PostOutboundRulesetsRequestTimeout with default headers values
func NewPostOutboundRulesetsRequestTimeout() *PostOutboundRulesetsRequestTimeout {
	return &PostOutboundRulesetsRequestTimeout{}
}

/*
PostOutboundRulesetsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostOutboundRulesetsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post outbound rulesets request timeout response has a 2xx status code
func (o *PostOutboundRulesetsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post outbound rulesets request timeout response has a 3xx status code
func (o *PostOutboundRulesetsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post outbound rulesets request timeout response has a 4xx status code
func (o *PostOutboundRulesetsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post outbound rulesets request timeout response has a 5xx status code
func (o *PostOutboundRulesetsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post outbound rulesets request timeout response a status code equal to that given
func (o *PostOutboundRulesetsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostOutboundRulesetsRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/rulesets][%d] postOutboundRulesetsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostOutboundRulesetsRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/outbound/rulesets][%d] postOutboundRulesetsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostOutboundRulesetsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundRulesetsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundRulesetsRequestEntityTooLarge creates a PostOutboundRulesetsRequestEntityTooLarge with default headers values
func NewPostOutboundRulesetsRequestEntityTooLarge() *PostOutboundRulesetsRequestEntityTooLarge {
	return &PostOutboundRulesetsRequestEntityTooLarge{}
}

/*
PostOutboundRulesetsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PostOutboundRulesetsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post outbound rulesets request entity too large response has a 2xx status code
func (o *PostOutboundRulesetsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post outbound rulesets request entity too large response has a 3xx status code
func (o *PostOutboundRulesetsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post outbound rulesets request entity too large response has a 4xx status code
func (o *PostOutboundRulesetsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post outbound rulesets request entity too large response has a 5xx status code
func (o *PostOutboundRulesetsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post outbound rulesets request entity too large response a status code equal to that given
func (o *PostOutboundRulesetsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostOutboundRulesetsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/rulesets][%d] postOutboundRulesetsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostOutboundRulesetsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/outbound/rulesets][%d] postOutboundRulesetsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostOutboundRulesetsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundRulesetsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundRulesetsUnsupportedMediaType creates a PostOutboundRulesetsUnsupportedMediaType with default headers values
func NewPostOutboundRulesetsUnsupportedMediaType() *PostOutboundRulesetsUnsupportedMediaType {
	return &PostOutboundRulesetsUnsupportedMediaType{}
}

/*
PostOutboundRulesetsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostOutboundRulesetsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post outbound rulesets unsupported media type response has a 2xx status code
func (o *PostOutboundRulesetsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post outbound rulesets unsupported media type response has a 3xx status code
func (o *PostOutboundRulesetsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post outbound rulesets unsupported media type response has a 4xx status code
func (o *PostOutboundRulesetsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post outbound rulesets unsupported media type response has a 5xx status code
func (o *PostOutboundRulesetsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post outbound rulesets unsupported media type response a status code equal to that given
func (o *PostOutboundRulesetsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostOutboundRulesetsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/rulesets][%d] postOutboundRulesetsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostOutboundRulesetsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/outbound/rulesets][%d] postOutboundRulesetsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostOutboundRulesetsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundRulesetsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundRulesetsTooManyRequests creates a PostOutboundRulesetsTooManyRequests with default headers values
func NewPostOutboundRulesetsTooManyRequests() *PostOutboundRulesetsTooManyRequests {
	return &PostOutboundRulesetsTooManyRequests{}
}

/*
PostOutboundRulesetsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostOutboundRulesetsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post outbound rulesets too many requests response has a 2xx status code
func (o *PostOutboundRulesetsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post outbound rulesets too many requests response has a 3xx status code
func (o *PostOutboundRulesetsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post outbound rulesets too many requests response has a 4xx status code
func (o *PostOutboundRulesetsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post outbound rulesets too many requests response has a 5xx status code
func (o *PostOutboundRulesetsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post outbound rulesets too many requests response a status code equal to that given
func (o *PostOutboundRulesetsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostOutboundRulesetsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/rulesets][%d] postOutboundRulesetsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostOutboundRulesetsTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/outbound/rulesets][%d] postOutboundRulesetsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostOutboundRulesetsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundRulesetsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundRulesetsInternalServerError creates a PostOutboundRulesetsInternalServerError with default headers values
func NewPostOutboundRulesetsInternalServerError() *PostOutboundRulesetsInternalServerError {
	return &PostOutboundRulesetsInternalServerError{}
}

/*
PostOutboundRulesetsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostOutboundRulesetsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post outbound rulesets internal server error response has a 2xx status code
func (o *PostOutboundRulesetsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post outbound rulesets internal server error response has a 3xx status code
func (o *PostOutboundRulesetsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post outbound rulesets internal server error response has a 4xx status code
func (o *PostOutboundRulesetsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post outbound rulesets internal server error response has a 5xx status code
func (o *PostOutboundRulesetsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post outbound rulesets internal server error response a status code equal to that given
func (o *PostOutboundRulesetsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostOutboundRulesetsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/rulesets][%d] postOutboundRulesetsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostOutboundRulesetsInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/outbound/rulesets][%d] postOutboundRulesetsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostOutboundRulesetsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundRulesetsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundRulesetsServiceUnavailable creates a PostOutboundRulesetsServiceUnavailable with default headers values
func NewPostOutboundRulesetsServiceUnavailable() *PostOutboundRulesetsServiceUnavailable {
	return &PostOutboundRulesetsServiceUnavailable{}
}

/*
PostOutboundRulesetsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostOutboundRulesetsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post outbound rulesets service unavailable response has a 2xx status code
func (o *PostOutboundRulesetsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post outbound rulesets service unavailable response has a 3xx status code
func (o *PostOutboundRulesetsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post outbound rulesets service unavailable response has a 4xx status code
func (o *PostOutboundRulesetsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post outbound rulesets service unavailable response has a 5xx status code
func (o *PostOutboundRulesetsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post outbound rulesets service unavailable response a status code equal to that given
func (o *PostOutboundRulesetsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostOutboundRulesetsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/rulesets][%d] postOutboundRulesetsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostOutboundRulesetsServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/outbound/rulesets][%d] postOutboundRulesetsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostOutboundRulesetsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundRulesetsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOutboundRulesetsGatewayTimeout creates a PostOutboundRulesetsGatewayTimeout with default headers values
func NewPostOutboundRulesetsGatewayTimeout() *PostOutboundRulesetsGatewayTimeout {
	return &PostOutboundRulesetsGatewayTimeout{}
}

/*
PostOutboundRulesetsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostOutboundRulesetsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post outbound rulesets gateway timeout response has a 2xx status code
func (o *PostOutboundRulesetsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post outbound rulesets gateway timeout response has a 3xx status code
func (o *PostOutboundRulesetsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post outbound rulesets gateway timeout response has a 4xx status code
func (o *PostOutboundRulesetsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post outbound rulesets gateway timeout response has a 5xx status code
func (o *PostOutboundRulesetsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post outbound rulesets gateway timeout response a status code equal to that given
func (o *PostOutboundRulesetsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostOutboundRulesetsGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/outbound/rulesets][%d] postOutboundRulesetsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostOutboundRulesetsGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/outbound/rulesets][%d] postOutboundRulesetsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostOutboundRulesetsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOutboundRulesetsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
