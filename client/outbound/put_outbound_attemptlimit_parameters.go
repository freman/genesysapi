// Code generated by go-swagger; DO NOT EDIT.

package outbound

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// NewPutOutboundAttemptlimitParams creates a new PutOutboundAttemptlimitParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPutOutboundAttemptlimitParams() *PutOutboundAttemptlimitParams {
	return &PutOutboundAttemptlimitParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPutOutboundAttemptlimitParamsWithTimeout creates a new PutOutboundAttemptlimitParams object
// with the ability to set a timeout on a request.
func NewPutOutboundAttemptlimitParamsWithTimeout(timeout time.Duration) *PutOutboundAttemptlimitParams {
	return &PutOutboundAttemptlimitParams{
		timeout: timeout,
	}
}

// NewPutOutboundAttemptlimitParamsWithContext creates a new PutOutboundAttemptlimitParams object
// with the ability to set a context for a request.
func NewPutOutboundAttemptlimitParamsWithContext(ctx context.Context) *PutOutboundAttemptlimitParams {
	return &PutOutboundAttemptlimitParams{
		Context: ctx,
	}
}

// NewPutOutboundAttemptlimitParamsWithHTTPClient creates a new PutOutboundAttemptlimitParams object
// with the ability to set a custom HTTPClient for a request.
func NewPutOutboundAttemptlimitParamsWithHTTPClient(client *http.Client) *PutOutboundAttemptlimitParams {
	return &PutOutboundAttemptlimitParams{
		HTTPClient: client,
	}
}

/*
PutOutboundAttemptlimitParams contains all the parameters to send to the API endpoint

	for the put outbound attemptlimit operation.

	Typically these are written to a http.Request.
*/
type PutOutboundAttemptlimitParams struct {

	/* AttemptLimitsID.

	   Attempt limits ID
	*/
	AttemptLimitsID string

	/* Body.

	   AttemptLimits
	*/
	Body *models.AttemptLimits

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the put outbound attemptlimit params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PutOutboundAttemptlimitParams) WithDefaults() *PutOutboundAttemptlimitParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the put outbound attemptlimit params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PutOutboundAttemptlimitParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the put outbound attemptlimit params
func (o *PutOutboundAttemptlimitParams) WithTimeout(timeout time.Duration) *PutOutboundAttemptlimitParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put outbound attemptlimit params
func (o *PutOutboundAttemptlimitParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put outbound attemptlimit params
func (o *PutOutboundAttemptlimitParams) WithContext(ctx context.Context) *PutOutboundAttemptlimitParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put outbound attemptlimit params
func (o *PutOutboundAttemptlimitParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put outbound attemptlimit params
func (o *PutOutboundAttemptlimitParams) WithHTTPClient(client *http.Client) *PutOutboundAttemptlimitParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put outbound attemptlimit params
func (o *PutOutboundAttemptlimitParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAttemptLimitsID adds the attemptLimitsID to the put outbound attemptlimit params
func (o *PutOutboundAttemptlimitParams) WithAttemptLimitsID(attemptLimitsID string) *PutOutboundAttemptlimitParams {
	o.SetAttemptLimitsID(attemptLimitsID)
	return o
}

// SetAttemptLimitsID adds the attemptLimitsId to the put outbound attemptlimit params
func (o *PutOutboundAttemptlimitParams) SetAttemptLimitsID(attemptLimitsID string) {
	o.AttemptLimitsID = attemptLimitsID
}

// WithBody adds the body to the put outbound attemptlimit params
func (o *PutOutboundAttemptlimitParams) WithBody(body *models.AttemptLimits) *PutOutboundAttemptlimitParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the put outbound attemptlimit params
func (o *PutOutboundAttemptlimitParams) SetBody(body *models.AttemptLimits) {
	o.Body = body
}

// WriteToRequest writes these params to a swagger request
func (o *PutOutboundAttemptlimitParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param attemptLimitsId
	if err := r.SetPathParam("attemptLimitsId", o.AttemptLimitsID); err != nil {
		return err
	}
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
