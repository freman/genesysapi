// Code generated by go-swagger; DO NOT EDIT.

package outbound

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PatchOutboundDnclistPhonenumbersReader is a Reader for the PatchOutboundDnclistPhonenumbers structure.
type PatchOutboundDnclistPhonenumbersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchOutboundDnclistPhonenumbersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPatchOutboundDnclistPhonenumbersNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchOutboundDnclistPhonenumbersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPatchOutboundDnclistPhonenumbersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchOutboundDnclistPhonenumbersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchOutboundDnclistPhonenumbersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPatchOutboundDnclistPhonenumbersRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPatchOutboundDnclistPhonenumbersRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPatchOutboundDnclistPhonenumbersUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPatchOutboundDnclistPhonenumbersTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchOutboundDnclistPhonenumbersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 501:
		result := NewPatchOutboundDnclistPhonenumbersNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPatchOutboundDnclistPhonenumbersServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPatchOutboundDnclistPhonenumbersGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchOutboundDnclistPhonenumbersNoContent creates a PatchOutboundDnclistPhonenumbersNoContent with default headers values
func NewPatchOutboundDnclistPhonenumbersNoContent() *PatchOutboundDnclistPhonenumbersNoContent {
	return &PatchOutboundDnclistPhonenumbersNoContent{}
}

/*
PatchOutboundDnclistPhonenumbersNoContent describes a response with status code 204, with default header values.

No Content
*/
type PatchOutboundDnclistPhonenumbersNoContent struct {
}

// IsSuccess returns true when this patch outbound dnclist phonenumbers no content response has a 2xx status code
func (o *PatchOutboundDnclistPhonenumbersNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this patch outbound dnclist phonenumbers no content response has a 3xx status code
func (o *PatchOutboundDnclistPhonenumbersNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch outbound dnclist phonenumbers no content response has a 4xx status code
func (o *PatchOutboundDnclistPhonenumbersNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch outbound dnclist phonenumbers no content response has a 5xx status code
func (o *PatchOutboundDnclistPhonenumbersNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this patch outbound dnclist phonenumbers no content response a status code equal to that given
func (o *PatchOutboundDnclistPhonenumbersNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *PatchOutboundDnclistPhonenumbersNoContent) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/phonenumbers][%d] patchOutboundDnclistPhonenumbersNoContent ", 204)
}

func (o *PatchOutboundDnclistPhonenumbersNoContent) String() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/phonenumbers][%d] patchOutboundDnclistPhonenumbersNoContent ", 204)
}

func (o *PatchOutboundDnclistPhonenumbersNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchOutboundDnclistPhonenumbersBadRequest creates a PatchOutboundDnclistPhonenumbersBadRequest with default headers values
func NewPatchOutboundDnclistPhonenumbersBadRequest() *PatchOutboundDnclistPhonenumbersBadRequest {
	return &PatchOutboundDnclistPhonenumbersBadRequest{}
}

/*
PatchOutboundDnclistPhonenumbersBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PatchOutboundDnclistPhonenumbersBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch outbound dnclist phonenumbers bad request response has a 2xx status code
func (o *PatchOutboundDnclistPhonenumbersBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch outbound dnclist phonenumbers bad request response has a 3xx status code
func (o *PatchOutboundDnclistPhonenumbersBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch outbound dnclist phonenumbers bad request response has a 4xx status code
func (o *PatchOutboundDnclistPhonenumbersBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch outbound dnclist phonenumbers bad request response has a 5xx status code
func (o *PatchOutboundDnclistPhonenumbersBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this patch outbound dnclist phonenumbers bad request response a status code equal to that given
func (o *PatchOutboundDnclistPhonenumbersBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PatchOutboundDnclistPhonenumbersBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/phonenumbers][%d] patchOutboundDnclistPhonenumbersBadRequest  %+v", 400, o.Payload)
}

func (o *PatchOutboundDnclistPhonenumbersBadRequest) String() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/phonenumbers][%d] patchOutboundDnclistPhonenumbersBadRequest  %+v", 400, o.Payload)
}

func (o *PatchOutboundDnclistPhonenumbersBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchOutboundDnclistPhonenumbersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchOutboundDnclistPhonenumbersUnauthorized creates a PatchOutboundDnclistPhonenumbersUnauthorized with default headers values
func NewPatchOutboundDnclistPhonenumbersUnauthorized() *PatchOutboundDnclistPhonenumbersUnauthorized {
	return &PatchOutboundDnclistPhonenumbersUnauthorized{}
}

/*
PatchOutboundDnclistPhonenumbersUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PatchOutboundDnclistPhonenumbersUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch outbound dnclist phonenumbers unauthorized response has a 2xx status code
func (o *PatchOutboundDnclistPhonenumbersUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch outbound dnclist phonenumbers unauthorized response has a 3xx status code
func (o *PatchOutboundDnclistPhonenumbersUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch outbound dnclist phonenumbers unauthorized response has a 4xx status code
func (o *PatchOutboundDnclistPhonenumbersUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch outbound dnclist phonenumbers unauthorized response has a 5xx status code
func (o *PatchOutboundDnclistPhonenumbersUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this patch outbound dnclist phonenumbers unauthorized response a status code equal to that given
func (o *PatchOutboundDnclistPhonenumbersUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PatchOutboundDnclistPhonenumbersUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/phonenumbers][%d] patchOutboundDnclistPhonenumbersUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchOutboundDnclistPhonenumbersUnauthorized) String() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/phonenumbers][%d] patchOutboundDnclistPhonenumbersUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchOutboundDnclistPhonenumbersUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchOutboundDnclistPhonenumbersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchOutboundDnclistPhonenumbersForbidden creates a PatchOutboundDnclistPhonenumbersForbidden with default headers values
func NewPatchOutboundDnclistPhonenumbersForbidden() *PatchOutboundDnclistPhonenumbersForbidden {
	return &PatchOutboundDnclistPhonenumbersForbidden{}
}

/*
PatchOutboundDnclistPhonenumbersForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PatchOutboundDnclistPhonenumbersForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch outbound dnclist phonenumbers forbidden response has a 2xx status code
func (o *PatchOutboundDnclistPhonenumbersForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch outbound dnclist phonenumbers forbidden response has a 3xx status code
func (o *PatchOutboundDnclistPhonenumbersForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch outbound dnclist phonenumbers forbidden response has a 4xx status code
func (o *PatchOutboundDnclistPhonenumbersForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch outbound dnclist phonenumbers forbidden response has a 5xx status code
func (o *PatchOutboundDnclistPhonenumbersForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this patch outbound dnclist phonenumbers forbidden response a status code equal to that given
func (o *PatchOutboundDnclistPhonenumbersForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PatchOutboundDnclistPhonenumbersForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/phonenumbers][%d] patchOutboundDnclistPhonenumbersForbidden  %+v", 403, o.Payload)
}

func (o *PatchOutboundDnclistPhonenumbersForbidden) String() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/phonenumbers][%d] patchOutboundDnclistPhonenumbersForbidden  %+v", 403, o.Payload)
}

func (o *PatchOutboundDnclistPhonenumbersForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchOutboundDnclistPhonenumbersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchOutboundDnclistPhonenumbersNotFound creates a PatchOutboundDnclistPhonenumbersNotFound with default headers values
func NewPatchOutboundDnclistPhonenumbersNotFound() *PatchOutboundDnclistPhonenumbersNotFound {
	return &PatchOutboundDnclistPhonenumbersNotFound{}
}

/*
PatchOutboundDnclistPhonenumbersNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PatchOutboundDnclistPhonenumbersNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch outbound dnclist phonenumbers not found response has a 2xx status code
func (o *PatchOutboundDnclistPhonenumbersNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch outbound dnclist phonenumbers not found response has a 3xx status code
func (o *PatchOutboundDnclistPhonenumbersNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch outbound dnclist phonenumbers not found response has a 4xx status code
func (o *PatchOutboundDnclistPhonenumbersNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch outbound dnclist phonenumbers not found response has a 5xx status code
func (o *PatchOutboundDnclistPhonenumbersNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this patch outbound dnclist phonenumbers not found response a status code equal to that given
func (o *PatchOutboundDnclistPhonenumbersNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PatchOutboundDnclistPhonenumbersNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/phonenumbers][%d] patchOutboundDnclistPhonenumbersNotFound  %+v", 404, o.Payload)
}

func (o *PatchOutboundDnclistPhonenumbersNotFound) String() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/phonenumbers][%d] patchOutboundDnclistPhonenumbersNotFound  %+v", 404, o.Payload)
}

func (o *PatchOutboundDnclistPhonenumbersNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchOutboundDnclistPhonenumbersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchOutboundDnclistPhonenumbersRequestTimeout creates a PatchOutboundDnclistPhonenumbersRequestTimeout with default headers values
func NewPatchOutboundDnclistPhonenumbersRequestTimeout() *PatchOutboundDnclistPhonenumbersRequestTimeout {
	return &PatchOutboundDnclistPhonenumbersRequestTimeout{}
}

/*
PatchOutboundDnclistPhonenumbersRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PatchOutboundDnclistPhonenumbersRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch outbound dnclist phonenumbers request timeout response has a 2xx status code
func (o *PatchOutboundDnclistPhonenumbersRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch outbound dnclist phonenumbers request timeout response has a 3xx status code
func (o *PatchOutboundDnclistPhonenumbersRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch outbound dnclist phonenumbers request timeout response has a 4xx status code
func (o *PatchOutboundDnclistPhonenumbersRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch outbound dnclist phonenumbers request timeout response has a 5xx status code
func (o *PatchOutboundDnclistPhonenumbersRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this patch outbound dnclist phonenumbers request timeout response a status code equal to that given
func (o *PatchOutboundDnclistPhonenumbersRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PatchOutboundDnclistPhonenumbersRequestTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/phonenumbers][%d] patchOutboundDnclistPhonenumbersRequestTimeout  %+v", 408, o.Payload)
}

func (o *PatchOutboundDnclistPhonenumbersRequestTimeout) String() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/phonenumbers][%d] patchOutboundDnclistPhonenumbersRequestTimeout  %+v", 408, o.Payload)
}

func (o *PatchOutboundDnclistPhonenumbersRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchOutboundDnclistPhonenumbersRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchOutboundDnclistPhonenumbersRequestEntityTooLarge creates a PatchOutboundDnclistPhonenumbersRequestEntityTooLarge with default headers values
func NewPatchOutboundDnclistPhonenumbersRequestEntityTooLarge() *PatchOutboundDnclistPhonenumbersRequestEntityTooLarge {
	return &PatchOutboundDnclistPhonenumbersRequestEntityTooLarge{}
}

/*
PatchOutboundDnclistPhonenumbersRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PatchOutboundDnclistPhonenumbersRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch outbound dnclist phonenumbers request entity too large response has a 2xx status code
func (o *PatchOutboundDnclistPhonenumbersRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch outbound dnclist phonenumbers request entity too large response has a 3xx status code
func (o *PatchOutboundDnclistPhonenumbersRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch outbound dnclist phonenumbers request entity too large response has a 4xx status code
func (o *PatchOutboundDnclistPhonenumbersRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch outbound dnclist phonenumbers request entity too large response has a 5xx status code
func (o *PatchOutboundDnclistPhonenumbersRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this patch outbound dnclist phonenumbers request entity too large response a status code equal to that given
func (o *PatchOutboundDnclistPhonenumbersRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PatchOutboundDnclistPhonenumbersRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/phonenumbers][%d] patchOutboundDnclistPhonenumbersRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PatchOutboundDnclistPhonenumbersRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/phonenumbers][%d] patchOutboundDnclistPhonenumbersRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PatchOutboundDnclistPhonenumbersRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchOutboundDnclistPhonenumbersRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchOutboundDnclistPhonenumbersUnsupportedMediaType creates a PatchOutboundDnclistPhonenumbersUnsupportedMediaType with default headers values
func NewPatchOutboundDnclistPhonenumbersUnsupportedMediaType() *PatchOutboundDnclistPhonenumbersUnsupportedMediaType {
	return &PatchOutboundDnclistPhonenumbersUnsupportedMediaType{}
}

/*
PatchOutboundDnclistPhonenumbersUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PatchOutboundDnclistPhonenumbersUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch outbound dnclist phonenumbers unsupported media type response has a 2xx status code
func (o *PatchOutboundDnclistPhonenumbersUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch outbound dnclist phonenumbers unsupported media type response has a 3xx status code
func (o *PatchOutboundDnclistPhonenumbersUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch outbound dnclist phonenumbers unsupported media type response has a 4xx status code
func (o *PatchOutboundDnclistPhonenumbersUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch outbound dnclist phonenumbers unsupported media type response has a 5xx status code
func (o *PatchOutboundDnclistPhonenumbersUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this patch outbound dnclist phonenumbers unsupported media type response a status code equal to that given
func (o *PatchOutboundDnclistPhonenumbersUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PatchOutboundDnclistPhonenumbersUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/phonenumbers][%d] patchOutboundDnclistPhonenumbersUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchOutboundDnclistPhonenumbersUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/phonenumbers][%d] patchOutboundDnclistPhonenumbersUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchOutboundDnclistPhonenumbersUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchOutboundDnclistPhonenumbersUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchOutboundDnclistPhonenumbersTooManyRequests creates a PatchOutboundDnclistPhonenumbersTooManyRequests with default headers values
func NewPatchOutboundDnclistPhonenumbersTooManyRequests() *PatchOutboundDnclistPhonenumbersTooManyRequests {
	return &PatchOutboundDnclistPhonenumbersTooManyRequests{}
}

/*
PatchOutboundDnclistPhonenumbersTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PatchOutboundDnclistPhonenumbersTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch outbound dnclist phonenumbers too many requests response has a 2xx status code
func (o *PatchOutboundDnclistPhonenumbersTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch outbound dnclist phonenumbers too many requests response has a 3xx status code
func (o *PatchOutboundDnclistPhonenumbersTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch outbound dnclist phonenumbers too many requests response has a 4xx status code
func (o *PatchOutboundDnclistPhonenumbersTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch outbound dnclist phonenumbers too many requests response has a 5xx status code
func (o *PatchOutboundDnclistPhonenumbersTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this patch outbound dnclist phonenumbers too many requests response a status code equal to that given
func (o *PatchOutboundDnclistPhonenumbersTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PatchOutboundDnclistPhonenumbersTooManyRequests) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/phonenumbers][%d] patchOutboundDnclistPhonenumbersTooManyRequests  %+v", 429, o.Payload)
}

func (o *PatchOutboundDnclistPhonenumbersTooManyRequests) String() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/phonenumbers][%d] patchOutboundDnclistPhonenumbersTooManyRequests  %+v", 429, o.Payload)
}

func (o *PatchOutboundDnclistPhonenumbersTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchOutboundDnclistPhonenumbersTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchOutboundDnclistPhonenumbersInternalServerError creates a PatchOutboundDnclistPhonenumbersInternalServerError with default headers values
func NewPatchOutboundDnclistPhonenumbersInternalServerError() *PatchOutboundDnclistPhonenumbersInternalServerError {
	return &PatchOutboundDnclistPhonenumbersInternalServerError{}
}

/*
PatchOutboundDnclistPhonenumbersInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PatchOutboundDnclistPhonenumbersInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch outbound dnclist phonenumbers internal server error response has a 2xx status code
func (o *PatchOutboundDnclistPhonenumbersInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch outbound dnclist phonenumbers internal server error response has a 3xx status code
func (o *PatchOutboundDnclistPhonenumbersInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch outbound dnclist phonenumbers internal server error response has a 4xx status code
func (o *PatchOutboundDnclistPhonenumbersInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch outbound dnclist phonenumbers internal server error response has a 5xx status code
func (o *PatchOutboundDnclistPhonenumbersInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this patch outbound dnclist phonenumbers internal server error response a status code equal to that given
func (o *PatchOutboundDnclistPhonenumbersInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PatchOutboundDnclistPhonenumbersInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/phonenumbers][%d] patchOutboundDnclistPhonenumbersInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchOutboundDnclistPhonenumbersInternalServerError) String() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/phonenumbers][%d] patchOutboundDnclistPhonenumbersInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchOutboundDnclistPhonenumbersInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchOutboundDnclistPhonenumbersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchOutboundDnclistPhonenumbersNotImplemented creates a PatchOutboundDnclistPhonenumbersNotImplemented with default headers values
func NewPatchOutboundDnclistPhonenumbersNotImplemented() *PatchOutboundDnclistPhonenumbersNotImplemented {
	return &PatchOutboundDnclistPhonenumbersNotImplemented{}
}

/*
PatchOutboundDnclistPhonenumbersNotImplemented describes a response with status code 501, with default header values.

Not Implemented
*/
type PatchOutboundDnclistPhonenumbersNotImplemented struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch outbound dnclist phonenumbers not implemented response has a 2xx status code
func (o *PatchOutboundDnclistPhonenumbersNotImplemented) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch outbound dnclist phonenumbers not implemented response has a 3xx status code
func (o *PatchOutboundDnclistPhonenumbersNotImplemented) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch outbound dnclist phonenumbers not implemented response has a 4xx status code
func (o *PatchOutboundDnclistPhonenumbersNotImplemented) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch outbound dnclist phonenumbers not implemented response has a 5xx status code
func (o *PatchOutboundDnclistPhonenumbersNotImplemented) IsServerError() bool {
	return true
}

// IsCode returns true when this patch outbound dnclist phonenumbers not implemented response a status code equal to that given
func (o *PatchOutboundDnclistPhonenumbersNotImplemented) IsCode(code int) bool {
	return code == 501
}

func (o *PatchOutboundDnclistPhonenumbersNotImplemented) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/phonenumbers][%d] patchOutboundDnclistPhonenumbersNotImplemented  %+v", 501, o.Payload)
}

func (o *PatchOutboundDnclistPhonenumbersNotImplemented) String() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/phonenumbers][%d] patchOutboundDnclistPhonenumbersNotImplemented  %+v", 501, o.Payload)
}

func (o *PatchOutboundDnclistPhonenumbersNotImplemented) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchOutboundDnclistPhonenumbersNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchOutboundDnclistPhonenumbersServiceUnavailable creates a PatchOutboundDnclistPhonenumbersServiceUnavailable with default headers values
func NewPatchOutboundDnclistPhonenumbersServiceUnavailable() *PatchOutboundDnclistPhonenumbersServiceUnavailable {
	return &PatchOutboundDnclistPhonenumbersServiceUnavailable{}
}

/*
PatchOutboundDnclistPhonenumbersServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PatchOutboundDnclistPhonenumbersServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch outbound dnclist phonenumbers service unavailable response has a 2xx status code
func (o *PatchOutboundDnclistPhonenumbersServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch outbound dnclist phonenumbers service unavailable response has a 3xx status code
func (o *PatchOutboundDnclistPhonenumbersServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch outbound dnclist phonenumbers service unavailable response has a 4xx status code
func (o *PatchOutboundDnclistPhonenumbersServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch outbound dnclist phonenumbers service unavailable response has a 5xx status code
func (o *PatchOutboundDnclistPhonenumbersServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this patch outbound dnclist phonenumbers service unavailable response a status code equal to that given
func (o *PatchOutboundDnclistPhonenumbersServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PatchOutboundDnclistPhonenumbersServiceUnavailable) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/phonenumbers][%d] patchOutboundDnclistPhonenumbersServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PatchOutboundDnclistPhonenumbersServiceUnavailable) String() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/phonenumbers][%d] patchOutboundDnclistPhonenumbersServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PatchOutboundDnclistPhonenumbersServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchOutboundDnclistPhonenumbersServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchOutboundDnclistPhonenumbersGatewayTimeout creates a PatchOutboundDnclistPhonenumbersGatewayTimeout with default headers values
func NewPatchOutboundDnclistPhonenumbersGatewayTimeout() *PatchOutboundDnclistPhonenumbersGatewayTimeout {
	return &PatchOutboundDnclistPhonenumbersGatewayTimeout{}
}

/*
PatchOutboundDnclistPhonenumbersGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PatchOutboundDnclistPhonenumbersGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch outbound dnclist phonenumbers gateway timeout response has a 2xx status code
func (o *PatchOutboundDnclistPhonenumbersGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch outbound dnclist phonenumbers gateway timeout response has a 3xx status code
func (o *PatchOutboundDnclistPhonenumbersGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch outbound dnclist phonenumbers gateway timeout response has a 4xx status code
func (o *PatchOutboundDnclistPhonenumbersGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch outbound dnclist phonenumbers gateway timeout response has a 5xx status code
func (o *PatchOutboundDnclistPhonenumbersGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this patch outbound dnclist phonenumbers gateway timeout response a status code equal to that given
func (o *PatchOutboundDnclistPhonenumbersGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PatchOutboundDnclistPhonenumbersGatewayTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/phonenumbers][%d] patchOutboundDnclistPhonenumbersGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PatchOutboundDnclistPhonenumbersGatewayTimeout) String() string {
	return fmt.Sprintf("[PATCH /api/v2/outbound/dnclists/{dncListId}/phonenumbers][%d] patchOutboundDnclistPhonenumbersGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PatchOutboundDnclistPhonenumbersGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchOutboundDnclistPhonenumbersGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
