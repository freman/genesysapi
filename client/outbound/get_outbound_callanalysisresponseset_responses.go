// Code generated by go-swagger; DO NOT EDIT.

package outbound

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetOutboundCallanalysisresponsesetReader is a Reader for the GetOutboundCallanalysisresponseset structure.
type GetOutboundCallanalysisresponsesetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOutboundCallanalysisresponsesetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOutboundCallanalysisresponsesetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOutboundCallanalysisresponsesetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetOutboundCallanalysisresponsesetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetOutboundCallanalysisresponsesetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOutboundCallanalysisresponsesetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetOutboundCallanalysisresponsesetRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetOutboundCallanalysisresponsesetRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetOutboundCallanalysisresponsesetUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetOutboundCallanalysisresponsesetTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOutboundCallanalysisresponsesetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetOutboundCallanalysisresponsesetServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetOutboundCallanalysisresponsesetGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetOutboundCallanalysisresponsesetOK creates a GetOutboundCallanalysisresponsesetOK with default headers values
func NewGetOutboundCallanalysisresponsesetOK() *GetOutboundCallanalysisresponsesetOK {
	return &GetOutboundCallanalysisresponsesetOK{}
}

/*
GetOutboundCallanalysisresponsesetOK describes a response with status code 200, with default header values.

successful operation
*/
type GetOutboundCallanalysisresponsesetOK struct {
	Payload *models.ResponseSet
}

// IsSuccess returns true when this get outbound callanalysisresponseset o k response has a 2xx status code
func (o *GetOutboundCallanalysisresponsesetOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get outbound callanalysisresponseset o k response has a 3xx status code
func (o *GetOutboundCallanalysisresponsesetOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound callanalysisresponseset o k response has a 4xx status code
func (o *GetOutboundCallanalysisresponsesetOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get outbound callanalysisresponseset o k response has a 5xx status code
func (o *GetOutboundCallanalysisresponsesetOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound callanalysisresponseset o k response a status code equal to that given
func (o *GetOutboundCallanalysisresponsesetOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetOutboundCallanalysisresponsesetOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/callanalysisresponsesets/{callAnalysisSetId}][%d] getOutboundCallanalysisresponsesetOK  %+v", 200, o.Payload)
}

func (o *GetOutboundCallanalysisresponsesetOK) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/callanalysisresponsesets/{callAnalysisSetId}][%d] getOutboundCallanalysisresponsesetOK  %+v", 200, o.Payload)
}

func (o *GetOutboundCallanalysisresponsesetOK) GetPayload() *models.ResponseSet {
	return o.Payload
}

func (o *GetOutboundCallanalysisresponsesetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseSet)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundCallanalysisresponsesetBadRequest creates a GetOutboundCallanalysisresponsesetBadRequest with default headers values
func NewGetOutboundCallanalysisresponsesetBadRequest() *GetOutboundCallanalysisresponsesetBadRequest {
	return &GetOutboundCallanalysisresponsesetBadRequest{}
}

/*
GetOutboundCallanalysisresponsesetBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetOutboundCallanalysisresponsesetBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound callanalysisresponseset bad request response has a 2xx status code
func (o *GetOutboundCallanalysisresponsesetBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound callanalysisresponseset bad request response has a 3xx status code
func (o *GetOutboundCallanalysisresponsesetBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound callanalysisresponseset bad request response has a 4xx status code
func (o *GetOutboundCallanalysisresponsesetBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outbound callanalysisresponseset bad request response has a 5xx status code
func (o *GetOutboundCallanalysisresponsesetBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound callanalysisresponseset bad request response a status code equal to that given
func (o *GetOutboundCallanalysisresponsesetBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetOutboundCallanalysisresponsesetBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/callanalysisresponsesets/{callAnalysisSetId}][%d] getOutboundCallanalysisresponsesetBadRequest  %+v", 400, o.Payload)
}

func (o *GetOutboundCallanalysisresponsesetBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/callanalysisresponsesets/{callAnalysisSetId}][%d] getOutboundCallanalysisresponsesetBadRequest  %+v", 400, o.Payload)
}

func (o *GetOutboundCallanalysisresponsesetBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundCallanalysisresponsesetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundCallanalysisresponsesetUnauthorized creates a GetOutboundCallanalysisresponsesetUnauthorized with default headers values
func NewGetOutboundCallanalysisresponsesetUnauthorized() *GetOutboundCallanalysisresponsesetUnauthorized {
	return &GetOutboundCallanalysisresponsesetUnauthorized{}
}

/*
GetOutboundCallanalysisresponsesetUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetOutboundCallanalysisresponsesetUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound callanalysisresponseset unauthorized response has a 2xx status code
func (o *GetOutboundCallanalysisresponsesetUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound callanalysisresponseset unauthorized response has a 3xx status code
func (o *GetOutboundCallanalysisresponsesetUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound callanalysisresponseset unauthorized response has a 4xx status code
func (o *GetOutboundCallanalysisresponsesetUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outbound callanalysisresponseset unauthorized response has a 5xx status code
func (o *GetOutboundCallanalysisresponsesetUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound callanalysisresponseset unauthorized response a status code equal to that given
func (o *GetOutboundCallanalysisresponsesetUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetOutboundCallanalysisresponsesetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/callanalysisresponsesets/{callAnalysisSetId}][%d] getOutboundCallanalysisresponsesetUnauthorized  %+v", 401, o.Payload)
}

func (o *GetOutboundCallanalysisresponsesetUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/callanalysisresponsesets/{callAnalysisSetId}][%d] getOutboundCallanalysisresponsesetUnauthorized  %+v", 401, o.Payload)
}

func (o *GetOutboundCallanalysisresponsesetUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundCallanalysisresponsesetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundCallanalysisresponsesetForbidden creates a GetOutboundCallanalysisresponsesetForbidden with default headers values
func NewGetOutboundCallanalysisresponsesetForbidden() *GetOutboundCallanalysisresponsesetForbidden {
	return &GetOutboundCallanalysisresponsesetForbidden{}
}

/*
GetOutboundCallanalysisresponsesetForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetOutboundCallanalysisresponsesetForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound callanalysisresponseset forbidden response has a 2xx status code
func (o *GetOutboundCallanalysisresponsesetForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound callanalysisresponseset forbidden response has a 3xx status code
func (o *GetOutboundCallanalysisresponsesetForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound callanalysisresponseset forbidden response has a 4xx status code
func (o *GetOutboundCallanalysisresponsesetForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outbound callanalysisresponseset forbidden response has a 5xx status code
func (o *GetOutboundCallanalysisresponsesetForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound callanalysisresponseset forbidden response a status code equal to that given
func (o *GetOutboundCallanalysisresponsesetForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetOutboundCallanalysisresponsesetForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/callanalysisresponsesets/{callAnalysisSetId}][%d] getOutboundCallanalysisresponsesetForbidden  %+v", 403, o.Payload)
}

func (o *GetOutboundCallanalysisresponsesetForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/callanalysisresponsesets/{callAnalysisSetId}][%d] getOutboundCallanalysisresponsesetForbidden  %+v", 403, o.Payload)
}

func (o *GetOutboundCallanalysisresponsesetForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundCallanalysisresponsesetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundCallanalysisresponsesetNotFound creates a GetOutboundCallanalysisresponsesetNotFound with default headers values
func NewGetOutboundCallanalysisresponsesetNotFound() *GetOutboundCallanalysisresponsesetNotFound {
	return &GetOutboundCallanalysisresponsesetNotFound{}
}

/*
GetOutboundCallanalysisresponsesetNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetOutboundCallanalysisresponsesetNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound callanalysisresponseset not found response has a 2xx status code
func (o *GetOutboundCallanalysisresponsesetNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound callanalysisresponseset not found response has a 3xx status code
func (o *GetOutboundCallanalysisresponsesetNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound callanalysisresponseset not found response has a 4xx status code
func (o *GetOutboundCallanalysisresponsesetNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outbound callanalysisresponseset not found response has a 5xx status code
func (o *GetOutboundCallanalysisresponsesetNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound callanalysisresponseset not found response a status code equal to that given
func (o *GetOutboundCallanalysisresponsesetNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetOutboundCallanalysisresponsesetNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/callanalysisresponsesets/{callAnalysisSetId}][%d] getOutboundCallanalysisresponsesetNotFound  %+v", 404, o.Payload)
}

func (o *GetOutboundCallanalysisresponsesetNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/callanalysisresponsesets/{callAnalysisSetId}][%d] getOutboundCallanalysisresponsesetNotFound  %+v", 404, o.Payload)
}

func (o *GetOutboundCallanalysisresponsesetNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundCallanalysisresponsesetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundCallanalysisresponsesetRequestTimeout creates a GetOutboundCallanalysisresponsesetRequestTimeout with default headers values
func NewGetOutboundCallanalysisresponsesetRequestTimeout() *GetOutboundCallanalysisresponsesetRequestTimeout {
	return &GetOutboundCallanalysisresponsesetRequestTimeout{}
}

/*
GetOutboundCallanalysisresponsesetRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetOutboundCallanalysisresponsesetRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound callanalysisresponseset request timeout response has a 2xx status code
func (o *GetOutboundCallanalysisresponsesetRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound callanalysisresponseset request timeout response has a 3xx status code
func (o *GetOutboundCallanalysisresponsesetRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound callanalysisresponseset request timeout response has a 4xx status code
func (o *GetOutboundCallanalysisresponsesetRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outbound callanalysisresponseset request timeout response has a 5xx status code
func (o *GetOutboundCallanalysisresponsesetRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound callanalysisresponseset request timeout response a status code equal to that given
func (o *GetOutboundCallanalysisresponsesetRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetOutboundCallanalysisresponsesetRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/callanalysisresponsesets/{callAnalysisSetId}][%d] getOutboundCallanalysisresponsesetRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetOutboundCallanalysisresponsesetRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/callanalysisresponsesets/{callAnalysisSetId}][%d] getOutboundCallanalysisresponsesetRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetOutboundCallanalysisresponsesetRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundCallanalysisresponsesetRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundCallanalysisresponsesetRequestEntityTooLarge creates a GetOutboundCallanalysisresponsesetRequestEntityTooLarge with default headers values
func NewGetOutboundCallanalysisresponsesetRequestEntityTooLarge() *GetOutboundCallanalysisresponsesetRequestEntityTooLarge {
	return &GetOutboundCallanalysisresponsesetRequestEntityTooLarge{}
}

/*
GetOutboundCallanalysisresponsesetRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetOutboundCallanalysisresponsesetRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound callanalysisresponseset request entity too large response has a 2xx status code
func (o *GetOutboundCallanalysisresponsesetRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound callanalysisresponseset request entity too large response has a 3xx status code
func (o *GetOutboundCallanalysisresponsesetRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound callanalysisresponseset request entity too large response has a 4xx status code
func (o *GetOutboundCallanalysisresponsesetRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outbound callanalysisresponseset request entity too large response has a 5xx status code
func (o *GetOutboundCallanalysisresponsesetRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound callanalysisresponseset request entity too large response a status code equal to that given
func (o *GetOutboundCallanalysisresponsesetRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetOutboundCallanalysisresponsesetRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/callanalysisresponsesets/{callAnalysisSetId}][%d] getOutboundCallanalysisresponsesetRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetOutboundCallanalysisresponsesetRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/callanalysisresponsesets/{callAnalysisSetId}][%d] getOutboundCallanalysisresponsesetRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetOutboundCallanalysisresponsesetRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundCallanalysisresponsesetRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundCallanalysisresponsesetUnsupportedMediaType creates a GetOutboundCallanalysisresponsesetUnsupportedMediaType with default headers values
func NewGetOutboundCallanalysisresponsesetUnsupportedMediaType() *GetOutboundCallanalysisresponsesetUnsupportedMediaType {
	return &GetOutboundCallanalysisresponsesetUnsupportedMediaType{}
}

/*
GetOutboundCallanalysisresponsesetUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetOutboundCallanalysisresponsesetUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound callanalysisresponseset unsupported media type response has a 2xx status code
func (o *GetOutboundCallanalysisresponsesetUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound callanalysisresponseset unsupported media type response has a 3xx status code
func (o *GetOutboundCallanalysisresponsesetUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound callanalysisresponseset unsupported media type response has a 4xx status code
func (o *GetOutboundCallanalysisresponsesetUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outbound callanalysisresponseset unsupported media type response has a 5xx status code
func (o *GetOutboundCallanalysisresponsesetUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound callanalysisresponseset unsupported media type response a status code equal to that given
func (o *GetOutboundCallanalysisresponsesetUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetOutboundCallanalysisresponsesetUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/callanalysisresponsesets/{callAnalysisSetId}][%d] getOutboundCallanalysisresponsesetUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetOutboundCallanalysisresponsesetUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/callanalysisresponsesets/{callAnalysisSetId}][%d] getOutboundCallanalysisresponsesetUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetOutboundCallanalysisresponsesetUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundCallanalysisresponsesetUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundCallanalysisresponsesetTooManyRequests creates a GetOutboundCallanalysisresponsesetTooManyRequests with default headers values
func NewGetOutboundCallanalysisresponsesetTooManyRequests() *GetOutboundCallanalysisresponsesetTooManyRequests {
	return &GetOutboundCallanalysisresponsesetTooManyRequests{}
}

/*
GetOutboundCallanalysisresponsesetTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetOutboundCallanalysisresponsesetTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound callanalysisresponseset too many requests response has a 2xx status code
func (o *GetOutboundCallanalysisresponsesetTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound callanalysisresponseset too many requests response has a 3xx status code
func (o *GetOutboundCallanalysisresponsesetTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound callanalysisresponseset too many requests response has a 4xx status code
func (o *GetOutboundCallanalysisresponsesetTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outbound callanalysisresponseset too many requests response has a 5xx status code
func (o *GetOutboundCallanalysisresponsesetTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound callanalysisresponseset too many requests response a status code equal to that given
func (o *GetOutboundCallanalysisresponsesetTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetOutboundCallanalysisresponsesetTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/callanalysisresponsesets/{callAnalysisSetId}][%d] getOutboundCallanalysisresponsesetTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetOutboundCallanalysisresponsesetTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/callanalysisresponsesets/{callAnalysisSetId}][%d] getOutboundCallanalysisresponsesetTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetOutboundCallanalysisresponsesetTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundCallanalysisresponsesetTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundCallanalysisresponsesetInternalServerError creates a GetOutboundCallanalysisresponsesetInternalServerError with default headers values
func NewGetOutboundCallanalysisresponsesetInternalServerError() *GetOutboundCallanalysisresponsesetInternalServerError {
	return &GetOutboundCallanalysisresponsesetInternalServerError{}
}

/*
GetOutboundCallanalysisresponsesetInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetOutboundCallanalysisresponsesetInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound callanalysisresponseset internal server error response has a 2xx status code
func (o *GetOutboundCallanalysisresponsesetInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound callanalysisresponseset internal server error response has a 3xx status code
func (o *GetOutboundCallanalysisresponsesetInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound callanalysisresponseset internal server error response has a 4xx status code
func (o *GetOutboundCallanalysisresponsesetInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get outbound callanalysisresponseset internal server error response has a 5xx status code
func (o *GetOutboundCallanalysisresponsesetInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get outbound callanalysisresponseset internal server error response a status code equal to that given
func (o *GetOutboundCallanalysisresponsesetInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetOutboundCallanalysisresponsesetInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/callanalysisresponsesets/{callAnalysisSetId}][%d] getOutboundCallanalysisresponsesetInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOutboundCallanalysisresponsesetInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/callanalysisresponsesets/{callAnalysisSetId}][%d] getOutboundCallanalysisresponsesetInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOutboundCallanalysisresponsesetInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundCallanalysisresponsesetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundCallanalysisresponsesetServiceUnavailable creates a GetOutboundCallanalysisresponsesetServiceUnavailable with default headers values
func NewGetOutboundCallanalysisresponsesetServiceUnavailable() *GetOutboundCallanalysisresponsesetServiceUnavailable {
	return &GetOutboundCallanalysisresponsesetServiceUnavailable{}
}

/*
GetOutboundCallanalysisresponsesetServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetOutboundCallanalysisresponsesetServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound callanalysisresponseset service unavailable response has a 2xx status code
func (o *GetOutboundCallanalysisresponsesetServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound callanalysisresponseset service unavailable response has a 3xx status code
func (o *GetOutboundCallanalysisresponsesetServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound callanalysisresponseset service unavailable response has a 4xx status code
func (o *GetOutboundCallanalysisresponsesetServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get outbound callanalysisresponseset service unavailable response has a 5xx status code
func (o *GetOutboundCallanalysisresponsesetServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get outbound callanalysisresponseset service unavailable response a status code equal to that given
func (o *GetOutboundCallanalysisresponsesetServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetOutboundCallanalysisresponsesetServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/callanalysisresponsesets/{callAnalysisSetId}][%d] getOutboundCallanalysisresponsesetServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetOutboundCallanalysisresponsesetServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/callanalysisresponsesets/{callAnalysisSetId}][%d] getOutboundCallanalysisresponsesetServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetOutboundCallanalysisresponsesetServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundCallanalysisresponsesetServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundCallanalysisresponsesetGatewayTimeout creates a GetOutboundCallanalysisresponsesetGatewayTimeout with default headers values
func NewGetOutboundCallanalysisresponsesetGatewayTimeout() *GetOutboundCallanalysisresponsesetGatewayTimeout {
	return &GetOutboundCallanalysisresponsesetGatewayTimeout{}
}

/*
GetOutboundCallanalysisresponsesetGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetOutboundCallanalysisresponsesetGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound callanalysisresponseset gateway timeout response has a 2xx status code
func (o *GetOutboundCallanalysisresponsesetGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound callanalysisresponseset gateway timeout response has a 3xx status code
func (o *GetOutboundCallanalysisresponsesetGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound callanalysisresponseset gateway timeout response has a 4xx status code
func (o *GetOutboundCallanalysisresponsesetGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get outbound callanalysisresponseset gateway timeout response has a 5xx status code
func (o *GetOutboundCallanalysisresponsesetGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get outbound callanalysisresponseset gateway timeout response a status code equal to that given
func (o *GetOutboundCallanalysisresponsesetGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetOutboundCallanalysisresponsesetGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/callanalysisresponsesets/{callAnalysisSetId}][%d] getOutboundCallanalysisresponsesetGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetOutboundCallanalysisresponsesetGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/callanalysisresponsesets/{callAnalysisSetId}][%d] getOutboundCallanalysisresponsesetGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetOutboundCallanalysisresponsesetGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundCallanalysisresponsesetGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
