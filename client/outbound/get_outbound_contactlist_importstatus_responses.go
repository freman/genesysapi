// Code generated by go-swagger; DO NOT EDIT.

package outbound

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetOutboundContactlistImportstatusReader is a Reader for the GetOutboundContactlistImportstatus structure.
type GetOutboundContactlistImportstatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOutboundContactlistImportstatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOutboundContactlistImportstatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOutboundContactlistImportstatusBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetOutboundContactlistImportstatusUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetOutboundContactlistImportstatusForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOutboundContactlistImportstatusNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetOutboundContactlistImportstatusRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetOutboundContactlistImportstatusRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetOutboundContactlistImportstatusUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetOutboundContactlistImportstatusTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOutboundContactlistImportstatusInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetOutboundContactlistImportstatusServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetOutboundContactlistImportstatusGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetOutboundContactlistImportstatusOK creates a GetOutboundContactlistImportstatusOK with default headers values
func NewGetOutboundContactlistImportstatusOK() *GetOutboundContactlistImportstatusOK {
	return &GetOutboundContactlistImportstatusOK{}
}

/*
GetOutboundContactlistImportstatusOK describes a response with status code 200, with default header values.

successful operation
*/
type GetOutboundContactlistImportstatusOK struct {
	Payload *models.ImportStatus
}

// IsSuccess returns true when this get outbound contactlist importstatus o k response has a 2xx status code
func (o *GetOutboundContactlistImportstatusOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get outbound contactlist importstatus o k response has a 3xx status code
func (o *GetOutboundContactlistImportstatusOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound contactlist importstatus o k response has a 4xx status code
func (o *GetOutboundContactlistImportstatusOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get outbound contactlist importstatus o k response has a 5xx status code
func (o *GetOutboundContactlistImportstatusOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound contactlist importstatus o k response a status code equal to that given
func (o *GetOutboundContactlistImportstatusOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetOutboundContactlistImportstatusOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/{contactListId}/importstatus][%d] getOutboundContactlistImportstatusOK  %+v", 200, o.Payload)
}

func (o *GetOutboundContactlistImportstatusOK) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/{contactListId}/importstatus][%d] getOutboundContactlistImportstatusOK  %+v", 200, o.Payload)
}

func (o *GetOutboundContactlistImportstatusOK) GetPayload() *models.ImportStatus {
	return o.Payload
}

func (o *GetOutboundContactlistImportstatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ImportStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundContactlistImportstatusBadRequest creates a GetOutboundContactlistImportstatusBadRequest with default headers values
func NewGetOutboundContactlistImportstatusBadRequest() *GetOutboundContactlistImportstatusBadRequest {
	return &GetOutboundContactlistImportstatusBadRequest{}
}

/*
GetOutboundContactlistImportstatusBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetOutboundContactlistImportstatusBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound contactlist importstatus bad request response has a 2xx status code
func (o *GetOutboundContactlistImportstatusBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound contactlist importstatus bad request response has a 3xx status code
func (o *GetOutboundContactlistImportstatusBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound contactlist importstatus bad request response has a 4xx status code
func (o *GetOutboundContactlistImportstatusBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outbound contactlist importstatus bad request response has a 5xx status code
func (o *GetOutboundContactlistImportstatusBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound contactlist importstatus bad request response a status code equal to that given
func (o *GetOutboundContactlistImportstatusBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetOutboundContactlistImportstatusBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/{contactListId}/importstatus][%d] getOutboundContactlistImportstatusBadRequest  %+v", 400, o.Payload)
}

func (o *GetOutboundContactlistImportstatusBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/{contactListId}/importstatus][%d] getOutboundContactlistImportstatusBadRequest  %+v", 400, o.Payload)
}

func (o *GetOutboundContactlistImportstatusBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundContactlistImportstatusBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundContactlistImportstatusUnauthorized creates a GetOutboundContactlistImportstatusUnauthorized with default headers values
func NewGetOutboundContactlistImportstatusUnauthorized() *GetOutboundContactlistImportstatusUnauthorized {
	return &GetOutboundContactlistImportstatusUnauthorized{}
}

/*
GetOutboundContactlistImportstatusUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetOutboundContactlistImportstatusUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound contactlist importstatus unauthorized response has a 2xx status code
func (o *GetOutboundContactlistImportstatusUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound contactlist importstatus unauthorized response has a 3xx status code
func (o *GetOutboundContactlistImportstatusUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound contactlist importstatus unauthorized response has a 4xx status code
func (o *GetOutboundContactlistImportstatusUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outbound contactlist importstatus unauthorized response has a 5xx status code
func (o *GetOutboundContactlistImportstatusUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound contactlist importstatus unauthorized response a status code equal to that given
func (o *GetOutboundContactlistImportstatusUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetOutboundContactlistImportstatusUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/{contactListId}/importstatus][%d] getOutboundContactlistImportstatusUnauthorized  %+v", 401, o.Payload)
}

func (o *GetOutboundContactlistImportstatusUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/{contactListId}/importstatus][%d] getOutboundContactlistImportstatusUnauthorized  %+v", 401, o.Payload)
}

func (o *GetOutboundContactlistImportstatusUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundContactlistImportstatusUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundContactlistImportstatusForbidden creates a GetOutboundContactlistImportstatusForbidden with default headers values
func NewGetOutboundContactlistImportstatusForbidden() *GetOutboundContactlistImportstatusForbidden {
	return &GetOutboundContactlistImportstatusForbidden{}
}

/*
GetOutboundContactlistImportstatusForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetOutboundContactlistImportstatusForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound contactlist importstatus forbidden response has a 2xx status code
func (o *GetOutboundContactlistImportstatusForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound contactlist importstatus forbidden response has a 3xx status code
func (o *GetOutboundContactlistImportstatusForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound contactlist importstatus forbidden response has a 4xx status code
func (o *GetOutboundContactlistImportstatusForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outbound contactlist importstatus forbidden response has a 5xx status code
func (o *GetOutboundContactlistImportstatusForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound contactlist importstatus forbidden response a status code equal to that given
func (o *GetOutboundContactlistImportstatusForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetOutboundContactlistImportstatusForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/{contactListId}/importstatus][%d] getOutboundContactlistImportstatusForbidden  %+v", 403, o.Payload)
}

func (o *GetOutboundContactlistImportstatusForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/{contactListId}/importstatus][%d] getOutboundContactlistImportstatusForbidden  %+v", 403, o.Payload)
}

func (o *GetOutboundContactlistImportstatusForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundContactlistImportstatusForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundContactlistImportstatusNotFound creates a GetOutboundContactlistImportstatusNotFound with default headers values
func NewGetOutboundContactlistImportstatusNotFound() *GetOutboundContactlistImportstatusNotFound {
	return &GetOutboundContactlistImportstatusNotFound{}
}

/*
GetOutboundContactlistImportstatusNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetOutboundContactlistImportstatusNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound contactlist importstatus not found response has a 2xx status code
func (o *GetOutboundContactlistImportstatusNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound contactlist importstatus not found response has a 3xx status code
func (o *GetOutboundContactlistImportstatusNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound contactlist importstatus not found response has a 4xx status code
func (o *GetOutboundContactlistImportstatusNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outbound contactlist importstatus not found response has a 5xx status code
func (o *GetOutboundContactlistImportstatusNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound contactlist importstatus not found response a status code equal to that given
func (o *GetOutboundContactlistImportstatusNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetOutboundContactlistImportstatusNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/{contactListId}/importstatus][%d] getOutboundContactlistImportstatusNotFound  %+v", 404, o.Payload)
}

func (o *GetOutboundContactlistImportstatusNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/{contactListId}/importstatus][%d] getOutboundContactlistImportstatusNotFound  %+v", 404, o.Payload)
}

func (o *GetOutboundContactlistImportstatusNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundContactlistImportstatusNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundContactlistImportstatusRequestTimeout creates a GetOutboundContactlistImportstatusRequestTimeout with default headers values
func NewGetOutboundContactlistImportstatusRequestTimeout() *GetOutboundContactlistImportstatusRequestTimeout {
	return &GetOutboundContactlistImportstatusRequestTimeout{}
}

/*
GetOutboundContactlistImportstatusRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetOutboundContactlistImportstatusRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound contactlist importstatus request timeout response has a 2xx status code
func (o *GetOutboundContactlistImportstatusRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound contactlist importstatus request timeout response has a 3xx status code
func (o *GetOutboundContactlistImportstatusRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound contactlist importstatus request timeout response has a 4xx status code
func (o *GetOutboundContactlistImportstatusRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outbound contactlist importstatus request timeout response has a 5xx status code
func (o *GetOutboundContactlistImportstatusRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound contactlist importstatus request timeout response a status code equal to that given
func (o *GetOutboundContactlistImportstatusRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetOutboundContactlistImportstatusRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/{contactListId}/importstatus][%d] getOutboundContactlistImportstatusRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetOutboundContactlistImportstatusRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/{contactListId}/importstatus][%d] getOutboundContactlistImportstatusRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetOutboundContactlistImportstatusRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundContactlistImportstatusRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundContactlistImportstatusRequestEntityTooLarge creates a GetOutboundContactlistImportstatusRequestEntityTooLarge with default headers values
func NewGetOutboundContactlistImportstatusRequestEntityTooLarge() *GetOutboundContactlistImportstatusRequestEntityTooLarge {
	return &GetOutboundContactlistImportstatusRequestEntityTooLarge{}
}

/*
GetOutboundContactlistImportstatusRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetOutboundContactlistImportstatusRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound contactlist importstatus request entity too large response has a 2xx status code
func (o *GetOutboundContactlistImportstatusRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound contactlist importstatus request entity too large response has a 3xx status code
func (o *GetOutboundContactlistImportstatusRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound contactlist importstatus request entity too large response has a 4xx status code
func (o *GetOutboundContactlistImportstatusRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outbound contactlist importstatus request entity too large response has a 5xx status code
func (o *GetOutboundContactlistImportstatusRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound contactlist importstatus request entity too large response a status code equal to that given
func (o *GetOutboundContactlistImportstatusRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetOutboundContactlistImportstatusRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/{contactListId}/importstatus][%d] getOutboundContactlistImportstatusRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetOutboundContactlistImportstatusRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/{contactListId}/importstatus][%d] getOutboundContactlistImportstatusRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetOutboundContactlistImportstatusRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundContactlistImportstatusRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundContactlistImportstatusUnsupportedMediaType creates a GetOutboundContactlistImportstatusUnsupportedMediaType with default headers values
func NewGetOutboundContactlistImportstatusUnsupportedMediaType() *GetOutboundContactlistImportstatusUnsupportedMediaType {
	return &GetOutboundContactlistImportstatusUnsupportedMediaType{}
}

/*
GetOutboundContactlistImportstatusUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetOutboundContactlistImportstatusUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound contactlist importstatus unsupported media type response has a 2xx status code
func (o *GetOutboundContactlistImportstatusUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound contactlist importstatus unsupported media type response has a 3xx status code
func (o *GetOutboundContactlistImportstatusUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound contactlist importstatus unsupported media type response has a 4xx status code
func (o *GetOutboundContactlistImportstatusUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outbound contactlist importstatus unsupported media type response has a 5xx status code
func (o *GetOutboundContactlistImportstatusUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound contactlist importstatus unsupported media type response a status code equal to that given
func (o *GetOutboundContactlistImportstatusUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetOutboundContactlistImportstatusUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/{contactListId}/importstatus][%d] getOutboundContactlistImportstatusUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetOutboundContactlistImportstatusUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/{contactListId}/importstatus][%d] getOutboundContactlistImportstatusUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetOutboundContactlistImportstatusUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundContactlistImportstatusUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundContactlistImportstatusTooManyRequests creates a GetOutboundContactlistImportstatusTooManyRequests with default headers values
func NewGetOutboundContactlistImportstatusTooManyRequests() *GetOutboundContactlistImportstatusTooManyRequests {
	return &GetOutboundContactlistImportstatusTooManyRequests{}
}

/*
GetOutboundContactlistImportstatusTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetOutboundContactlistImportstatusTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound contactlist importstatus too many requests response has a 2xx status code
func (o *GetOutboundContactlistImportstatusTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound contactlist importstatus too many requests response has a 3xx status code
func (o *GetOutboundContactlistImportstatusTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound contactlist importstatus too many requests response has a 4xx status code
func (o *GetOutboundContactlistImportstatusTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outbound contactlist importstatus too many requests response has a 5xx status code
func (o *GetOutboundContactlistImportstatusTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound contactlist importstatus too many requests response a status code equal to that given
func (o *GetOutboundContactlistImportstatusTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetOutboundContactlistImportstatusTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/{contactListId}/importstatus][%d] getOutboundContactlistImportstatusTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetOutboundContactlistImportstatusTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/{contactListId}/importstatus][%d] getOutboundContactlistImportstatusTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetOutboundContactlistImportstatusTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundContactlistImportstatusTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundContactlistImportstatusInternalServerError creates a GetOutboundContactlistImportstatusInternalServerError with default headers values
func NewGetOutboundContactlistImportstatusInternalServerError() *GetOutboundContactlistImportstatusInternalServerError {
	return &GetOutboundContactlistImportstatusInternalServerError{}
}

/*
GetOutboundContactlistImportstatusInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetOutboundContactlistImportstatusInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound contactlist importstatus internal server error response has a 2xx status code
func (o *GetOutboundContactlistImportstatusInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound contactlist importstatus internal server error response has a 3xx status code
func (o *GetOutboundContactlistImportstatusInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound contactlist importstatus internal server error response has a 4xx status code
func (o *GetOutboundContactlistImportstatusInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get outbound contactlist importstatus internal server error response has a 5xx status code
func (o *GetOutboundContactlistImportstatusInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get outbound contactlist importstatus internal server error response a status code equal to that given
func (o *GetOutboundContactlistImportstatusInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetOutboundContactlistImportstatusInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/{contactListId}/importstatus][%d] getOutboundContactlistImportstatusInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOutboundContactlistImportstatusInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/{contactListId}/importstatus][%d] getOutboundContactlistImportstatusInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOutboundContactlistImportstatusInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundContactlistImportstatusInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundContactlistImportstatusServiceUnavailable creates a GetOutboundContactlistImportstatusServiceUnavailable with default headers values
func NewGetOutboundContactlistImportstatusServiceUnavailable() *GetOutboundContactlistImportstatusServiceUnavailable {
	return &GetOutboundContactlistImportstatusServiceUnavailable{}
}

/*
GetOutboundContactlistImportstatusServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetOutboundContactlistImportstatusServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound contactlist importstatus service unavailable response has a 2xx status code
func (o *GetOutboundContactlistImportstatusServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound contactlist importstatus service unavailable response has a 3xx status code
func (o *GetOutboundContactlistImportstatusServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound contactlist importstatus service unavailable response has a 4xx status code
func (o *GetOutboundContactlistImportstatusServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get outbound contactlist importstatus service unavailable response has a 5xx status code
func (o *GetOutboundContactlistImportstatusServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get outbound contactlist importstatus service unavailable response a status code equal to that given
func (o *GetOutboundContactlistImportstatusServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetOutboundContactlistImportstatusServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/{contactListId}/importstatus][%d] getOutboundContactlistImportstatusServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetOutboundContactlistImportstatusServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/{contactListId}/importstatus][%d] getOutboundContactlistImportstatusServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetOutboundContactlistImportstatusServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundContactlistImportstatusServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundContactlistImportstatusGatewayTimeout creates a GetOutboundContactlistImportstatusGatewayTimeout with default headers values
func NewGetOutboundContactlistImportstatusGatewayTimeout() *GetOutboundContactlistImportstatusGatewayTimeout {
	return &GetOutboundContactlistImportstatusGatewayTimeout{}
}

/*
GetOutboundContactlistImportstatusGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetOutboundContactlistImportstatusGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound contactlist importstatus gateway timeout response has a 2xx status code
func (o *GetOutboundContactlistImportstatusGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound contactlist importstatus gateway timeout response has a 3xx status code
func (o *GetOutboundContactlistImportstatusGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound contactlist importstatus gateway timeout response has a 4xx status code
func (o *GetOutboundContactlistImportstatusGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get outbound contactlist importstatus gateway timeout response has a 5xx status code
func (o *GetOutboundContactlistImportstatusGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get outbound contactlist importstatus gateway timeout response a status code equal to that given
func (o *GetOutboundContactlistImportstatusGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetOutboundContactlistImportstatusGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/{contactListId}/importstatus][%d] getOutboundContactlistImportstatusGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetOutboundContactlistImportstatusGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/contactlists/{contactListId}/importstatus][%d] getOutboundContactlistImportstatusGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetOutboundContactlistImportstatusGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundContactlistImportstatusGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
