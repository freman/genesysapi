// Code generated by go-swagger; DO NOT EDIT.

package outbound

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetOutboundDigitalrulesetsReader is a Reader for the GetOutboundDigitalrulesets structure.
type GetOutboundDigitalrulesetsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOutboundDigitalrulesetsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOutboundDigitalrulesetsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOutboundDigitalrulesetsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetOutboundDigitalrulesetsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetOutboundDigitalrulesetsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOutboundDigitalrulesetsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetOutboundDigitalrulesetsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetOutboundDigitalrulesetsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetOutboundDigitalrulesetsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetOutboundDigitalrulesetsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOutboundDigitalrulesetsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetOutboundDigitalrulesetsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetOutboundDigitalrulesetsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetOutboundDigitalrulesetsOK creates a GetOutboundDigitalrulesetsOK with default headers values
func NewGetOutboundDigitalrulesetsOK() *GetOutboundDigitalrulesetsOK {
	return &GetOutboundDigitalrulesetsOK{}
}

/*GetOutboundDigitalrulesetsOK handles this case with default header values.

successful operation
*/
type GetOutboundDigitalrulesetsOK struct {
	Payload *models.DigitalRuleSetEntityListing
}

func (o *GetOutboundDigitalrulesetsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/digitalrulesets][%d] getOutboundDigitalrulesetsOK  %+v", 200, o.Payload)
}

func (o *GetOutboundDigitalrulesetsOK) GetPayload() *models.DigitalRuleSetEntityListing {
	return o.Payload
}

func (o *GetOutboundDigitalrulesetsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DigitalRuleSetEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundDigitalrulesetsBadRequest creates a GetOutboundDigitalrulesetsBadRequest with default headers values
func NewGetOutboundDigitalrulesetsBadRequest() *GetOutboundDigitalrulesetsBadRequest {
	return &GetOutboundDigitalrulesetsBadRequest{}
}

/*GetOutboundDigitalrulesetsBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetOutboundDigitalrulesetsBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundDigitalrulesetsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/digitalrulesets][%d] getOutboundDigitalrulesetsBadRequest  %+v", 400, o.Payload)
}

func (o *GetOutboundDigitalrulesetsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundDigitalrulesetsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundDigitalrulesetsUnauthorized creates a GetOutboundDigitalrulesetsUnauthorized with default headers values
func NewGetOutboundDigitalrulesetsUnauthorized() *GetOutboundDigitalrulesetsUnauthorized {
	return &GetOutboundDigitalrulesetsUnauthorized{}
}

/*GetOutboundDigitalrulesetsUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetOutboundDigitalrulesetsUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundDigitalrulesetsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/digitalrulesets][%d] getOutboundDigitalrulesetsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetOutboundDigitalrulesetsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundDigitalrulesetsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundDigitalrulesetsForbidden creates a GetOutboundDigitalrulesetsForbidden with default headers values
func NewGetOutboundDigitalrulesetsForbidden() *GetOutboundDigitalrulesetsForbidden {
	return &GetOutboundDigitalrulesetsForbidden{}
}

/*GetOutboundDigitalrulesetsForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetOutboundDigitalrulesetsForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundDigitalrulesetsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/digitalrulesets][%d] getOutboundDigitalrulesetsForbidden  %+v", 403, o.Payload)
}

func (o *GetOutboundDigitalrulesetsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundDigitalrulesetsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundDigitalrulesetsNotFound creates a GetOutboundDigitalrulesetsNotFound with default headers values
func NewGetOutboundDigitalrulesetsNotFound() *GetOutboundDigitalrulesetsNotFound {
	return &GetOutboundDigitalrulesetsNotFound{}
}

/*GetOutboundDigitalrulesetsNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetOutboundDigitalrulesetsNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundDigitalrulesetsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/digitalrulesets][%d] getOutboundDigitalrulesetsNotFound  %+v", 404, o.Payload)
}

func (o *GetOutboundDigitalrulesetsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundDigitalrulesetsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundDigitalrulesetsRequestTimeout creates a GetOutboundDigitalrulesetsRequestTimeout with default headers values
func NewGetOutboundDigitalrulesetsRequestTimeout() *GetOutboundDigitalrulesetsRequestTimeout {
	return &GetOutboundDigitalrulesetsRequestTimeout{}
}

/*GetOutboundDigitalrulesetsRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetOutboundDigitalrulesetsRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundDigitalrulesetsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/digitalrulesets][%d] getOutboundDigitalrulesetsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetOutboundDigitalrulesetsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundDigitalrulesetsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundDigitalrulesetsRequestEntityTooLarge creates a GetOutboundDigitalrulesetsRequestEntityTooLarge with default headers values
func NewGetOutboundDigitalrulesetsRequestEntityTooLarge() *GetOutboundDigitalrulesetsRequestEntityTooLarge {
	return &GetOutboundDigitalrulesetsRequestEntityTooLarge{}
}

/*GetOutboundDigitalrulesetsRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetOutboundDigitalrulesetsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundDigitalrulesetsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/digitalrulesets][%d] getOutboundDigitalrulesetsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetOutboundDigitalrulesetsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundDigitalrulesetsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundDigitalrulesetsUnsupportedMediaType creates a GetOutboundDigitalrulesetsUnsupportedMediaType with default headers values
func NewGetOutboundDigitalrulesetsUnsupportedMediaType() *GetOutboundDigitalrulesetsUnsupportedMediaType {
	return &GetOutboundDigitalrulesetsUnsupportedMediaType{}
}

/*GetOutboundDigitalrulesetsUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetOutboundDigitalrulesetsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundDigitalrulesetsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/digitalrulesets][%d] getOutboundDigitalrulesetsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetOutboundDigitalrulesetsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundDigitalrulesetsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundDigitalrulesetsTooManyRequests creates a GetOutboundDigitalrulesetsTooManyRequests with default headers values
func NewGetOutboundDigitalrulesetsTooManyRequests() *GetOutboundDigitalrulesetsTooManyRequests {
	return &GetOutboundDigitalrulesetsTooManyRequests{}
}

/*GetOutboundDigitalrulesetsTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetOutboundDigitalrulesetsTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundDigitalrulesetsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/digitalrulesets][%d] getOutboundDigitalrulesetsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetOutboundDigitalrulesetsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundDigitalrulesetsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundDigitalrulesetsInternalServerError creates a GetOutboundDigitalrulesetsInternalServerError with default headers values
func NewGetOutboundDigitalrulesetsInternalServerError() *GetOutboundDigitalrulesetsInternalServerError {
	return &GetOutboundDigitalrulesetsInternalServerError{}
}

/*GetOutboundDigitalrulesetsInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetOutboundDigitalrulesetsInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundDigitalrulesetsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/digitalrulesets][%d] getOutboundDigitalrulesetsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOutboundDigitalrulesetsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundDigitalrulesetsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundDigitalrulesetsServiceUnavailable creates a GetOutboundDigitalrulesetsServiceUnavailable with default headers values
func NewGetOutboundDigitalrulesetsServiceUnavailable() *GetOutboundDigitalrulesetsServiceUnavailable {
	return &GetOutboundDigitalrulesetsServiceUnavailable{}
}

/*GetOutboundDigitalrulesetsServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetOutboundDigitalrulesetsServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundDigitalrulesetsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/digitalrulesets][%d] getOutboundDigitalrulesetsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetOutboundDigitalrulesetsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundDigitalrulesetsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundDigitalrulesetsGatewayTimeout creates a GetOutboundDigitalrulesetsGatewayTimeout with default headers values
func NewGetOutboundDigitalrulesetsGatewayTimeout() *GetOutboundDigitalrulesetsGatewayTimeout {
	return &GetOutboundDigitalrulesetsGatewayTimeout{}
}

/*GetOutboundDigitalrulesetsGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetOutboundDigitalrulesetsGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetOutboundDigitalrulesetsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/digitalrulesets][%d] getOutboundDigitalrulesetsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetOutboundDigitalrulesetsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundDigitalrulesetsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
