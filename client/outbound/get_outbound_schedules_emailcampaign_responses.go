// Code generated by go-swagger; DO NOT EDIT.

package outbound

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetOutboundSchedulesEmailcampaignReader is a Reader for the GetOutboundSchedulesEmailcampaign structure.
type GetOutboundSchedulesEmailcampaignReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOutboundSchedulesEmailcampaignReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOutboundSchedulesEmailcampaignOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOutboundSchedulesEmailcampaignBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetOutboundSchedulesEmailcampaignUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetOutboundSchedulesEmailcampaignForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOutboundSchedulesEmailcampaignNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetOutboundSchedulesEmailcampaignRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetOutboundSchedulesEmailcampaignRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetOutboundSchedulesEmailcampaignUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetOutboundSchedulesEmailcampaignTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOutboundSchedulesEmailcampaignInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetOutboundSchedulesEmailcampaignServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetOutboundSchedulesEmailcampaignGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetOutboundSchedulesEmailcampaignOK creates a GetOutboundSchedulesEmailcampaignOK with default headers values
func NewGetOutboundSchedulesEmailcampaignOK() *GetOutboundSchedulesEmailcampaignOK {
	return &GetOutboundSchedulesEmailcampaignOK{}
}

/*
GetOutboundSchedulesEmailcampaignOK describes a response with status code 200, with default header values.

successful operation
*/
type GetOutboundSchedulesEmailcampaignOK struct {
	Payload *models.EmailCampaignSchedule
}

// IsSuccess returns true when this get outbound schedules emailcampaign o k response has a 2xx status code
func (o *GetOutboundSchedulesEmailcampaignOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get outbound schedules emailcampaign o k response has a 3xx status code
func (o *GetOutboundSchedulesEmailcampaignOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound schedules emailcampaign o k response has a 4xx status code
func (o *GetOutboundSchedulesEmailcampaignOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get outbound schedules emailcampaign o k response has a 5xx status code
func (o *GetOutboundSchedulesEmailcampaignOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound schedules emailcampaign o k response a status code equal to that given
func (o *GetOutboundSchedulesEmailcampaignOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetOutboundSchedulesEmailcampaignOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/schedules/emailcampaigns/{emailCampaignId}][%d] getOutboundSchedulesEmailcampaignOK  %+v", 200, o.Payload)
}

func (o *GetOutboundSchedulesEmailcampaignOK) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/schedules/emailcampaigns/{emailCampaignId}][%d] getOutboundSchedulesEmailcampaignOK  %+v", 200, o.Payload)
}

func (o *GetOutboundSchedulesEmailcampaignOK) GetPayload() *models.EmailCampaignSchedule {
	return o.Payload
}

func (o *GetOutboundSchedulesEmailcampaignOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EmailCampaignSchedule)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundSchedulesEmailcampaignBadRequest creates a GetOutboundSchedulesEmailcampaignBadRequest with default headers values
func NewGetOutboundSchedulesEmailcampaignBadRequest() *GetOutboundSchedulesEmailcampaignBadRequest {
	return &GetOutboundSchedulesEmailcampaignBadRequest{}
}

/*
GetOutboundSchedulesEmailcampaignBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetOutboundSchedulesEmailcampaignBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound schedules emailcampaign bad request response has a 2xx status code
func (o *GetOutboundSchedulesEmailcampaignBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound schedules emailcampaign bad request response has a 3xx status code
func (o *GetOutboundSchedulesEmailcampaignBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound schedules emailcampaign bad request response has a 4xx status code
func (o *GetOutboundSchedulesEmailcampaignBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outbound schedules emailcampaign bad request response has a 5xx status code
func (o *GetOutboundSchedulesEmailcampaignBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound schedules emailcampaign bad request response a status code equal to that given
func (o *GetOutboundSchedulesEmailcampaignBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetOutboundSchedulesEmailcampaignBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/schedules/emailcampaigns/{emailCampaignId}][%d] getOutboundSchedulesEmailcampaignBadRequest  %+v", 400, o.Payload)
}

func (o *GetOutboundSchedulesEmailcampaignBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/schedules/emailcampaigns/{emailCampaignId}][%d] getOutboundSchedulesEmailcampaignBadRequest  %+v", 400, o.Payload)
}

func (o *GetOutboundSchedulesEmailcampaignBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundSchedulesEmailcampaignBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundSchedulesEmailcampaignUnauthorized creates a GetOutboundSchedulesEmailcampaignUnauthorized with default headers values
func NewGetOutboundSchedulesEmailcampaignUnauthorized() *GetOutboundSchedulesEmailcampaignUnauthorized {
	return &GetOutboundSchedulesEmailcampaignUnauthorized{}
}

/*
GetOutboundSchedulesEmailcampaignUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetOutboundSchedulesEmailcampaignUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound schedules emailcampaign unauthorized response has a 2xx status code
func (o *GetOutboundSchedulesEmailcampaignUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound schedules emailcampaign unauthorized response has a 3xx status code
func (o *GetOutboundSchedulesEmailcampaignUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound schedules emailcampaign unauthorized response has a 4xx status code
func (o *GetOutboundSchedulesEmailcampaignUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outbound schedules emailcampaign unauthorized response has a 5xx status code
func (o *GetOutboundSchedulesEmailcampaignUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound schedules emailcampaign unauthorized response a status code equal to that given
func (o *GetOutboundSchedulesEmailcampaignUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetOutboundSchedulesEmailcampaignUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/schedules/emailcampaigns/{emailCampaignId}][%d] getOutboundSchedulesEmailcampaignUnauthorized  %+v", 401, o.Payload)
}

func (o *GetOutboundSchedulesEmailcampaignUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/schedules/emailcampaigns/{emailCampaignId}][%d] getOutboundSchedulesEmailcampaignUnauthorized  %+v", 401, o.Payload)
}

func (o *GetOutboundSchedulesEmailcampaignUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundSchedulesEmailcampaignUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundSchedulesEmailcampaignForbidden creates a GetOutboundSchedulesEmailcampaignForbidden with default headers values
func NewGetOutboundSchedulesEmailcampaignForbidden() *GetOutboundSchedulesEmailcampaignForbidden {
	return &GetOutboundSchedulesEmailcampaignForbidden{}
}

/*
GetOutboundSchedulesEmailcampaignForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetOutboundSchedulesEmailcampaignForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound schedules emailcampaign forbidden response has a 2xx status code
func (o *GetOutboundSchedulesEmailcampaignForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound schedules emailcampaign forbidden response has a 3xx status code
func (o *GetOutboundSchedulesEmailcampaignForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound schedules emailcampaign forbidden response has a 4xx status code
func (o *GetOutboundSchedulesEmailcampaignForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outbound schedules emailcampaign forbidden response has a 5xx status code
func (o *GetOutboundSchedulesEmailcampaignForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound schedules emailcampaign forbidden response a status code equal to that given
func (o *GetOutboundSchedulesEmailcampaignForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetOutboundSchedulesEmailcampaignForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/schedules/emailcampaigns/{emailCampaignId}][%d] getOutboundSchedulesEmailcampaignForbidden  %+v", 403, o.Payload)
}

func (o *GetOutboundSchedulesEmailcampaignForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/schedules/emailcampaigns/{emailCampaignId}][%d] getOutboundSchedulesEmailcampaignForbidden  %+v", 403, o.Payload)
}

func (o *GetOutboundSchedulesEmailcampaignForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundSchedulesEmailcampaignForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundSchedulesEmailcampaignNotFound creates a GetOutboundSchedulesEmailcampaignNotFound with default headers values
func NewGetOutboundSchedulesEmailcampaignNotFound() *GetOutboundSchedulesEmailcampaignNotFound {
	return &GetOutboundSchedulesEmailcampaignNotFound{}
}

/*
GetOutboundSchedulesEmailcampaignNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetOutboundSchedulesEmailcampaignNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound schedules emailcampaign not found response has a 2xx status code
func (o *GetOutboundSchedulesEmailcampaignNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound schedules emailcampaign not found response has a 3xx status code
func (o *GetOutboundSchedulesEmailcampaignNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound schedules emailcampaign not found response has a 4xx status code
func (o *GetOutboundSchedulesEmailcampaignNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outbound schedules emailcampaign not found response has a 5xx status code
func (o *GetOutboundSchedulesEmailcampaignNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound schedules emailcampaign not found response a status code equal to that given
func (o *GetOutboundSchedulesEmailcampaignNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetOutboundSchedulesEmailcampaignNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/schedules/emailcampaigns/{emailCampaignId}][%d] getOutboundSchedulesEmailcampaignNotFound  %+v", 404, o.Payload)
}

func (o *GetOutboundSchedulesEmailcampaignNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/schedules/emailcampaigns/{emailCampaignId}][%d] getOutboundSchedulesEmailcampaignNotFound  %+v", 404, o.Payload)
}

func (o *GetOutboundSchedulesEmailcampaignNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundSchedulesEmailcampaignNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundSchedulesEmailcampaignRequestTimeout creates a GetOutboundSchedulesEmailcampaignRequestTimeout with default headers values
func NewGetOutboundSchedulesEmailcampaignRequestTimeout() *GetOutboundSchedulesEmailcampaignRequestTimeout {
	return &GetOutboundSchedulesEmailcampaignRequestTimeout{}
}

/*
GetOutboundSchedulesEmailcampaignRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetOutboundSchedulesEmailcampaignRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound schedules emailcampaign request timeout response has a 2xx status code
func (o *GetOutboundSchedulesEmailcampaignRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound schedules emailcampaign request timeout response has a 3xx status code
func (o *GetOutboundSchedulesEmailcampaignRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound schedules emailcampaign request timeout response has a 4xx status code
func (o *GetOutboundSchedulesEmailcampaignRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outbound schedules emailcampaign request timeout response has a 5xx status code
func (o *GetOutboundSchedulesEmailcampaignRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound schedules emailcampaign request timeout response a status code equal to that given
func (o *GetOutboundSchedulesEmailcampaignRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetOutboundSchedulesEmailcampaignRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/schedules/emailcampaigns/{emailCampaignId}][%d] getOutboundSchedulesEmailcampaignRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetOutboundSchedulesEmailcampaignRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/schedules/emailcampaigns/{emailCampaignId}][%d] getOutboundSchedulesEmailcampaignRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetOutboundSchedulesEmailcampaignRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundSchedulesEmailcampaignRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundSchedulesEmailcampaignRequestEntityTooLarge creates a GetOutboundSchedulesEmailcampaignRequestEntityTooLarge with default headers values
func NewGetOutboundSchedulesEmailcampaignRequestEntityTooLarge() *GetOutboundSchedulesEmailcampaignRequestEntityTooLarge {
	return &GetOutboundSchedulesEmailcampaignRequestEntityTooLarge{}
}

/*
GetOutboundSchedulesEmailcampaignRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetOutboundSchedulesEmailcampaignRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound schedules emailcampaign request entity too large response has a 2xx status code
func (o *GetOutboundSchedulesEmailcampaignRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound schedules emailcampaign request entity too large response has a 3xx status code
func (o *GetOutboundSchedulesEmailcampaignRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound schedules emailcampaign request entity too large response has a 4xx status code
func (o *GetOutboundSchedulesEmailcampaignRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outbound schedules emailcampaign request entity too large response has a 5xx status code
func (o *GetOutboundSchedulesEmailcampaignRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound schedules emailcampaign request entity too large response a status code equal to that given
func (o *GetOutboundSchedulesEmailcampaignRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetOutboundSchedulesEmailcampaignRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/schedules/emailcampaigns/{emailCampaignId}][%d] getOutboundSchedulesEmailcampaignRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetOutboundSchedulesEmailcampaignRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/schedules/emailcampaigns/{emailCampaignId}][%d] getOutboundSchedulesEmailcampaignRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetOutboundSchedulesEmailcampaignRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundSchedulesEmailcampaignRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundSchedulesEmailcampaignUnsupportedMediaType creates a GetOutboundSchedulesEmailcampaignUnsupportedMediaType with default headers values
func NewGetOutboundSchedulesEmailcampaignUnsupportedMediaType() *GetOutboundSchedulesEmailcampaignUnsupportedMediaType {
	return &GetOutboundSchedulesEmailcampaignUnsupportedMediaType{}
}

/*
GetOutboundSchedulesEmailcampaignUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetOutboundSchedulesEmailcampaignUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound schedules emailcampaign unsupported media type response has a 2xx status code
func (o *GetOutboundSchedulesEmailcampaignUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound schedules emailcampaign unsupported media type response has a 3xx status code
func (o *GetOutboundSchedulesEmailcampaignUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound schedules emailcampaign unsupported media type response has a 4xx status code
func (o *GetOutboundSchedulesEmailcampaignUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outbound schedules emailcampaign unsupported media type response has a 5xx status code
func (o *GetOutboundSchedulesEmailcampaignUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound schedules emailcampaign unsupported media type response a status code equal to that given
func (o *GetOutboundSchedulesEmailcampaignUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetOutboundSchedulesEmailcampaignUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/schedules/emailcampaigns/{emailCampaignId}][%d] getOutboundSchedulesEmailcampaignUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetOutboundSchedulesEmailcampaignUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/schedules/emailcampaigns/{emailCampaignId}][%d] getOutboundSchedulesEmailcampaignUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetOutboundSchedulesEmailcampaignUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundSchedulesEmailcampaignUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundSchedulesEmailcampaignTooManyRequests creates a GetOutboundSchedulesEmailcampaignTooManyRequests with default headers values
func NewGetOutboundSchedulesEmailcampaignTooManyRequests() *GetOutboundSchedulesEmailcampaignTooManyRequests {
	return &GetOutboundSchedulesEmailcampaignTooManyRequests{}
}

/*
GetOutboundSchedulesEmailcampaignTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetOutboundSchedulesEmailcampaignTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound schedules emailcampaign too many requests response has a 2xx status code
func (o *GetOutboundSchedulesEmailcampaignTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound schedules emailcampaign too many requests response has a 3xx status code
func (o *GetOutboundSchedulesEmailcampaignTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound schedules emailcampaign too many requests response has a 4xx status code
func (o *GetOutboundSchedulesEmailcampaignTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outbound schedules emailcampaign too many requests response has a 5xx status code
func (o *GetOutboundSchedulesEmailcampaignTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get outbound schedules emailcampaign too many requests response a status code equal to that given
func (o *GetOutboundSchedulesEmailcampaignTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetOutboundSchedulesEmailcampaignTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/schedules/emailcampaigns/{emailCampaignId}][%d] getOutboundSchedulesEmailcampaignTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetOutboundSchedulesEmailcampaignTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/schedules/emailcampaigns/{emailCampaignId}][%d] getOutboundSchedulesEmailcampaignTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetOutboundSchedulesEmailcampaignTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundSchedulesEmailcampaignTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundSchedulesEmailcampaignInternalServerError creates a GetOutboundSchedulesEmailcampaignInternalServerError with default headers values
func NewGetOutboundSchedulesEmailcampaignInternalServerError() *GetOutboundSchedulesEmailcampaignInternalServerError {
	return &GetOutboundSchedulesEmailcampaignInternalServerError{}
}

/*
GetOutboundSchedulesEmailcampaignInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetOutboundSchedulesEmailcampaignInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound schedules emailcampaign internal server error response has a 2xx status code
func (o *GetOutboundSchedulesEmailcampaignInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound schedules emailcampaign internal server error response has a 3xx status code
func (o *GetOutboundSchedulesEmailcampaignInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound schedules emailcampaign internal server error response has a 4xx status code
func (o *GetOutboundSchedulesEmailcampaignInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get outbound schedules emailcampaign internal server error response has a 5xx status code
func (o *GetOutboundSchedulesEmailcampaignInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get outbound schedules emailcampaign internal server error response a status code equal to that given
func (o *GetOutboundSchedulesEmailcampaignInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetOutboundSchedulesEmailcampaignInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/schedules/emailcampaigns/{emailCampaignId}][%d] getOutboundSchedulesEmailcampaignInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOutboundSchedulesEmailcampaignInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/schedules/emailcampaigns/{emailCampaignId}][%d] getOutboundSchedulesEmailcampaignInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOutboundSchedulesEmailcampaignInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundSchedulesEmailcampaignInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundSchedulesEmailcampaignServiceUnavailable creates a GetOutboundSchedulesEmailcampaignServiceUnavailable with default headers values
func NewGetOutboundSchedulesEmailcampaignServiceUnavailable() *GetOutboundSchedulesEmailcampaignServiceUnavailable {
	return &GetOutboundSchedulesEmailcampaignServiceUnavailable{}
}

/*
GetOutboundSchedulesEmailcampaignServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetOutboundSchedulesEmailcampaignServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound schedules emailcampaign service unavailable response has a 2xx status code
func (o *GetOutboundSchedulesEmailcampaignServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound schedules emailcampaign service unavailable response has a 3xx status code
func (o *GetOutboundSchedulesEmailcampaignServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound schedules emailcampaign service unavailable response has a 4xx status code
func (o *GetOutboundSchedulesEmailcampaignServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get outbound schedules emailcampaign service unavailable response has a 5xx status code
func (o *GetOutboundSchedulesEmailcampaignServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get outbound schedules emailcampaign service unavailable response a status code equal to that given
func (o *GetOutboundSchedulesEmailcampaignServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetOutboundSchedulesEmailcampaignServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/schedules/emailcampaigns/{emailCampaignId}][%d] getOutboundSchedulesEmailcampaignServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetOutboundSchedulesEmailcampaignServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/schedules/emailcampaigns/{emailCampaignId}][%d] getOutboundSchedulesEmailcampaignServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetOutboundSchedulesEmailcampaignServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundSchedulesEmailcampaignServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutboundSchedulesEmailcampaignGatewayTimeout creates a GetOutboundSchedulesEmailcampaignGatewayTimeout with default headers values
func NewGetOutboundSchedulesEmailcampaignGatewayTimeout() *GetOutboundSchedulesEmailcampaignGatewayTimeout {
	return &GetOutboundSchedulesEmailcampaignGatewayTimeout{}
}

/*
GetOutboundSchedulesEmailcampaignGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetOutboundSchedulesEmailcampaignGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get outbound schedules emailcampaign gateway timeout response has a 2xx status code
func (o *GetOutboundSchedulesEmailcampaignGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outbound schedules emailcampaign gateway timeout response has a 3xx status code
func (o *GetOutboundSchedulesEmailcampaignGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outbound schedules emailcampaign gateway timeout response has a 4xx status code
func (o *GetOutboundSchedulesEmailcampaignGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get outbound schedules emailcampaign gateway timeout response has a 5xx status code
func (o *GetOutboundSchedulesEmailcampaignGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get outbound schedules emailcampaign gateway timeout response a status code equal to that given
func (o *GetOutboundSchedulesEmailcampaignGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetOutboundSchedulesEmailcampaignGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/outbound/schedules/emailcampaigns/{emailCampaignId}][%d] getOutboundSchedulesEmailcampaignGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetOutboundSchedulesEmailcampaignGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/outbound/schedules/emailcampaigns/{emailCampaignId}][%d] getOutboundSchedulesEmailcampaignGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetOutboundSchedulesEmailcampaignGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOutboundSchedulesEmailcampaignGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
