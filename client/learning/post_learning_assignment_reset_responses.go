// Code generated by go-swagger; DO NOT EDIT.

package learning

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostLearningAssignmentResetReader is a Reader for the PostLearningAssignmentReset structure.
type PostLearningAssignmentResetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostLearningAssignmentResetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostLearningAssignmentResetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostLearningAssignmentResetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostLearningAssignmentResetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostLearningAssignmentResetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostLearningAssignmentResetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostLearningAssignmentResetRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPostLearningAssignmentResetConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostLearningAssignmentResetRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostLearningAssignmentResetUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostLearningAssignmentResetTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostLearningAssignmentResetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostLearningAssignmentResetServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostLearningAssignmentResetGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostLearningAssignmentResetOK creates a PostLearningAssignmentResetOK with default headers values
func NewPostLearningAssignmentResetOK() *PostLearningAssignmentResetOK {
	return &PostLearningAssignmentResetOK{}
}

/*
PostLearningAssignmentResetOK describes a response with status code 200, with default header values.

Reset version of assignment which can be taken again
*/
type PostLearningAssignmentResetOK struct {
	Payload *models.LearningAssignment
}

// IsSuccess returns true when this post learning assignment reset o k response has a 2xx status code
func (o *PostLearningAssignmentResetOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post learning assignment reset o k response has a 3xx status code
func (o *PostLearningAssignmentResetOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post learning assignment reset o k response has a 4xx status code
func (o *PostLearningAssignmentResetOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post learning assignment reset o k response has a 5xx status code
func (o *PostLearningAssignmentResetOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post learning assignment reset o k response a status code equal to that given
func (o *PostLearningAssignmentResetOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostLearningAssignmentResetOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/{assignmentId}/reset][%d] postLearningAssignmentResetOK  %+v", 200, o.Payload)
}

func (o *PostLearningAssignmentResetOK) String() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/{assignmentId}/reset][%d] postLearningAssignmentResetOK  %+v", 200, o.Payload)
}

func (o *PostLearningAssignmentResetOK) GetPayload() *models.LearningAssignment {
	return o.Payload
}

func (o *PostLearningAssignmentResetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LearningAssignment)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearningAssignmentResetBadRequest creates a PostLearningAssignmentResetBadRequest with default headers values
func NewPostLearningAssignmentResetBadRequest() *PostLearningAssignmentResetBadRequest {
	return &PostLearningAssignmentResetBadRequest{}
}

/*
PostLearningAssignmentResetBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostLearningAssignmentResetBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post learning assignment reset bad request response has a 2xx status code
func (o *PostLearningAssignmentResetBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post learning assignment reset bad request response has a 3xx status code
func (o *PostLearningAssignmentResetBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post learning assignment reset bad request response has a 4xx status code
func (o *PostLearningAssignmentResetBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post learning assignment reset bad request response has a 5xx status code
func (o *PostLearningAssignmentResetBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post learning assignment reset bad request response a status code equal to that given
func (o *PostLearningAssignmentResetBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostLearningAssignmentResetBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/{assignmentId}/reset][%d] postLearningAssignmentResetBadRequest  %+v", 400, o.Payload)
}

func (o *PostLearningAssignmentResetBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/{assignmentId}/reset][%d] postLearningAssignmentResetBadRequest  %+v", 400, o.Payload)
}

func (o *PostLearningAssignmentResetBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLearningAssignmentResetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearningAssignmentResetUnauthorized creates a PostLearningAssignmentResetUnauthorized with default headers values
func NewPostLearningAssignmentResetUnauthorized() *PostLearningAssignmentResetUnauthorized {
	return &PostLearningAssignmentResetUnauthorized{}
}

/*
PostLearningAssignmentResetUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostLearningAssignmentResetUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post learning assignment reset unauthorized response has a 2xx status code
func (o *PostLearningAssignmentResetUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post learning assignment reset unauthorized response has a 3xx status code
func (o *PostLearningAssignmentResetUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post learning assignment reset unauthorized response has a 4xx status code
func (o *PostLearningAssignmentResetUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post learning assignment reset unauthorized response has a 5xx status code
func (o *PostLearningAssignmentResetUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post learning assignment reset unauthorized response a status code equal to that given
func (o *PostLearningAssignmentResetUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostLearningAssignmentResetUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/{assignmentId}/reset][%d] postLearningAssignmentResetUnauthorized  %+v", 401, o.Payload)
}

func (o *PostLearningAssignmentResetUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/{assignmentId}/reset][%d] postLearningAssignmentResetUnauthorized  %+v", 401, o.Payload)
}

func (o *PostLearningAssignmentResetUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLearningAssignmentResetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearningAssignmentResetForbidden creates a PostLearningAssignmentResetForbidden with default headers values
func NewPostLearningAssignmentResetForbidden() *PostLearningAssignmentResetForbidden {
	return &PostLearningAssignmentResetForbidden{}
}

/*
PostLearningAssignmentResetForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostLearningAssignmentResetForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post learning assignment reset forbidden response has a 2xx status code
func (o *PostLearningAssignmentResetForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post learning assignment reset forbidden response has a 3xx status code
func (o *PostLearningAssignmentResetForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post learning assignment reset forbidden response has a 4xx status code
func (o *PostLearningAssignmentResetForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post learning assignment reset forbidden response has a 5xx status code
func (o *PostLearningAssignmentResetForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post learning assignment reset forbidden response a status code equal to that given
func (o *PostLearningAssignmentResetForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostLearningAssignmentResetForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/{assignmentId}/reset][%d] postLearningAssignmentResetForbidden  %+v", 403, o.Payload)
}

func (o *PostLearningAssignmentResetForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/{assignmentId}/reset][%d] postLearningAssignmentResetForbidden  %+v", 403, o.Payload)
}

func (o *PostLearningAssignmentResetForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLearningAssignmentResetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearningAssignmentResetNotFound creates a PostLearningAssignmentResetNotFound with default headers values
func NewPostLearningAssignmentResetNotFound() *PostLearningAssignmentResetNotFound {
	return &PostLearningAssignmentResetNotFound{}
}

/*
PostLearningAssignmentResetNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostLearningAssignmentResetNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post learning assignment reset not found response has a 2xx status code
func (o *PostLearningAssignmentResetNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post learning assignment reset not found response has a 3xx status code
func (o *PostLearningAssignmentResetNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post learning assignment reset not found response has a 4xx status code
func (o *PostLearningAssignmentResetNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post learning assignment reset not found response has a 5xx status code
func (o *PostLearningAssignmentResetNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post learning assignment reset not found response a status code equal to that given
func (o *PostLearningAssignmentResetNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostLearningAssignmentResetNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/{assignmentId}/reset][%d] postLearningAssignmentResetNotFound  %+v", 404, o.Payload)
}

func (o *PostLearningAssignmentResetNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/{assignmentId}/reset][%d] postLearningAssignmentResetNotFound  %+v", 404, o.Payload)
}

func (o *PostLearningAssignmentResetNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLearningAssignmentResetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearningAssignmentResetRequestTimeout creates a PostLearningAssignmentResetRequestTimeout with default headers values
func NewPostLearningAssignmentResetRequestTimeout() *PostLearningAssignmentResetRequestTimeout {
	return &PostLearningAssignmentResetRequestTimeout{}
}

/*
PostLearningAssignmentResetRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostLearningAssignmentResetRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post learning assignment reset request timeout response has a 2xx status code
func (o *PostLearningAssignmentResetRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post learning assignment reset request timeout response has a 3xx status code
func (o *PostLearningAssignmentResetRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post learning assignment reset request timeout response has a 4xx status code
func (o *PostLearningAssignmentResetRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post learning assignment reset request timeout response has a 5xx status code
func (o *PostLearningAssignmentResetRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post learning assignment reset request timeout response a status code equal to that given
func (o *PostLearningAssignmentResetRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostLearningAssignmentResetRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/{assignmentId}/reset][%d] postLearningAssignmentResetRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostLearningAssignmentResetRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/{assignmentId}/reset][%d] postLearningAssignmentResetRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostLearningAssignmentResetRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLearningAssignmentResetRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearningAssignmentResetConflict creates a PostLearningAssignmentResetConflict with default headers values
func NewPostLearningAssignmentResetConflict() *PostLearningAssignmentResetConflict {
	return &PostLearningAssignmentResetConflict{}
}

/*
PostLearningAssignmentResetConflict describes a response with status code 409, with default header values.

Conflict
*/
type PostLearningAssignmentResetConflict struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post learning assignment reset conflict response has a 2xx status code
func (o *PostLearningAssignmentResetConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post learning assignment reset conflict response has a 3xx status code
func (o *PostLearningAssignmentResetConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post learning assignment reset conflict response has a 4xx status code
func (o *PostLearningAssignmentResetConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this post learning assignment reset conflict response has a 5xx status code
func (o *PostLearningAssignmentResetConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this post learning assignment reset conflict response a status code equal to that given
func (o *PostLearningAssignmentResetConflict) IsCode(code int) bool {
	return code == 409
}

func (o *PostLearningAssignmentResetConflict) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/{assignmentId}/reset][%d] postLearningAssignmentResetConflict  %+v", 409, o.Payload)
}

func (o *PostLearningAssignmentResetConflict) String() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/{assignmentId}/reset][%d] postLearningAssignmentResetConflict  %+v", 409, o.Payload)
}

func (o *PostLearningAssignmentResetConflict) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLearningAssignmentResetConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearningAssignmentResetRequestEntityTooLarge creates a PostLearningAssignmentResetRequestEntityTooLarge with default headers values
func NewPostLearningAssignmentResetRequestEntityTooLarge() *PostLearningAssignmentResetRequestEntityTooLarge {
	return &PostLearningAssignmentResetRequestEntityTooLarge{}
}

/*
PostLearningAssignmentResetRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PostLearningAssignmentResetRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post learning assignment reset request entity too large response has a 2xx status code
func (o *PostLearningAssignmentResetRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post learning assignment reset request entity too large response has a 3xx status code
func (o *PostLearningAssignmentResetRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post learning assignment reset request entity too large response has a 4xx status code
func (o *PostLearningAssignmentResetRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post learning assignment reset request entity too large response has a 5xx status code
func (o *PostLearningAssignmentResetRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post learning assignment reset request entity too large response a status code equal to that given
func (o *PostLearningAssignmentResetRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostLearningAssignmentResetRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/{assignmentId}/reset][%d] postLearningAssignmentResetRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostLearningAssignmentResetRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/{assignmentId}/reset][%d] postLearningAssignmentResetRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostLearningAssignmentResetRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLearningAssignmentResetRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearningAssignmentResetUnsupportedMediaType creates a PostLearningAssignmentResetUnsupportedMediaType with default headers values
func NewPostLearningAssignmentResetUnsupportedMediaType() *PostLearningAssignmentResetUnsupportedMediaType {
	return &PostLearningAssignmentResetUnsupportedMediaType{}
}

/*
PostLearningAssignmentResetUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostLearningAssignmentResetUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post learning assignment reset unsupported media type response has a 2xx status code
func (o *PostLearningAssignmentResetUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post learning assignment reset unsupported media type response has a 3xx status code
func (o *PostLearningAssignmentResetUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post learning assignment reset unsupported media type response has a 4xx status code
func (o *PostLearningAssignmentResetUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post learning assignment reset unsupported media type response has a 5xx status code
func (o *PostLearningAssignmentResetUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post learning assignment reset unsupported media type response a status code equal to that given
func (o *PostLearningAssignmentResetUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostLearningAssignmentResetUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/{assignmentId}/reset][%d] postLearningAssignmentResetUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostLearningAssignmentResetUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/{assignmentId}/reset][%d] postLearningAssignmentResetUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostLearningAssignmentResetUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLearningAssignmentResetUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearningAssignmentResetTooManyRequests creates a PostLearningAssignmentResetTooManyRequests with default headers values
func NewPostLearningAssignmentResetTooManyRequests() *PostLearningAssignmentResetTooManyRequests {
	return &PostLearningAssignmentResetTooManyRequests{}
}

/*
PostLearningAssignmentResetTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostLearningAssignmentResetTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post learning assignment reset too many requests response has a 2xx status code
func (o *PostLearningAssignmentResetTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post learning assignment reset too many requests response has a 3xx status code
func (o *PostLearningAssignmentResetTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post learning assignment reset too many requests response has a 4xx status code
func (o *PostLearningAssignmentResetTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post learning assignment reset too many requests response has a 5xx status code
func (o *PostLearningAssignmentResetTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post learning assignment reset too many requests response a status code equal to that given
func (o *PostLearningAssignmentResetTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostLearningAssignmentResetTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/{assignmentId}/reset][%d] postLearningAssignmentResetTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostLearningAssignmentResetTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/{assignmentId}/reset][%d] postLearningAssignmentResetTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostLearningAssignmentResetTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLearningAssignmentResetTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearningAssignmentResetInternalServerError creates a PostLearningAssignmentResetInternalServerError with default headers values
func NewPostLearningAssignmentResetInternalServerError() *PostLearningAssignmentResetInternalServerError {
	return &PostLearningAssignmentResetInternalServerError{}
}

/*
PostLearningAssignmentResetInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostLearningAssignmentResetInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post learning assignment reset internal server error response has a 2xx status code
func (o *PostLearningAssignmentResetInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post learning assignment reset internal server error response has a 3xx status code
func (o *PostLearningAssignmentResetInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post learning assignment reset internal server error response has a 4xx status code
func (o *PostLearningAssignmentResetInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post learning assignment reset internal server error response has a 5xx status code
func (o *PostLearningAssignmentResetInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post learning assignment reset internal server error response a status code equal to that given
func (o *PostLearningAssignmentResetInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostLearningAssignmentResetInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/{assignmentId}/reset][%d] postLearningAssignmentResetInternalServerError  %+v", 500, o.Payload)
}

func (o *PostLearningAssignmentResetInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/{assignmentId}/reset][%d] postLearningAssignmentResetInternalServerError  %+v", 500, o.Payload)
}

func (o *PostLearningAssignmentResetInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLearningAssignmentResetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearningAssignmentResetServiceUnavailable creates a PostLearningAssignmentResetServiceUnavailable with default headers values
func NewPostLearningAssignmentResetServiceUnavailable() *PostLearningAssignmentResetServiceUnavailable {
	return &PostLearningAssignmentResetServiceUnavailable{}
}

/*
PostLearningAssignmentResetServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostLearningAssignmentResetServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post learning assignment reset service unavailable response has a 2xx status code
func (o *PostLearningAssignmentResetServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post learning assignment reset service unavailable response has a 3xx status code
func (o *PostLearningAssignmentResetServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post learning assignment reset service unavailable response has a 4xx status code
func (o *PostLearningAssignmentResetServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post learning assignment reset service unavailable response has a 5xx status code
func (o *PostLearningAssignmentResetServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post learning assignment reset service unavailable response a status code equal to that given
func (o *PostLearningAssignmentResetServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostLearningAssignmentResetServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/{assignmentId}/reset][%d] postLearningAssignmentResetServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostLearningAssignmentResetServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/{assignmentId}/reset][%d] postLearningAssignmentResetServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostLearningAssignmentResetServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLearningAssignmentResetServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearningAssignmentResetGatewayTimeout creates a PostLearningAssignmentResetGatewayTimeout with default headers values
func NewPostLearningAssignmentResetGatewayTimeout() *PostLearningAssignmentResetGatewayTimeout {
	return &PostLearningAssignmentResetGatewayTimeout{}
}

/*
PostLearningAssignmentResetGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostLearningAssignmentResetGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post learning assignment reset gateway timeout response has a 2xx status code
func (o *PostLearningAssignmentResetGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post learning assignment reset gateway timeout response has a 3xx status code
func (o *PostLearningAssignmentResetGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post learning assignment reset gateway timeout response has a 4xx status code
func (o *PostLearningAssignmentResetGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post learning assignment reset gateway timeout response has a 5xx status code
func (o *PostLearningAssignmentResetGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post learning assignment reset gateway timeout response a status code equal to that given
func (o *PostLearningAssignmentResetGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostLearningAssignmentResetGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/{assignmentId}/reset][%d] postLearningAssignmentResetGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostLearningAssignmentResetGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/{assignmentId}/reset][%d] postLearningAssignmentResetGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostLearningAssignmentResetGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLearningAssignmentResetGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
