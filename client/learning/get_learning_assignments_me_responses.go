// Code generated by go-swagger; DO NOT EDIT.

package learning

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetLearningAssignmentsMeReader is a Reader for the GetLearningAssignmentsMe structure.
type GetLearningAssignmentsMeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLearningAssignmentsMeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLearningAssignmentsMeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetLearningAssignmentsMeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetLearningAssignmentsMeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetLearningAssignmentsMeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetLearningAssignmentsMeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetLearningAssignmentsMeRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetLearningAssignmentsMeRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetLearningAssignmentsMeUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetLearningAssignmentsMeTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetLearningAssignmentsMeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetLearningAssignmentsMeServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetLearningAssignmentsMeGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetLearningAssignmentsMeOK creates a GetLearningAssignmentsMeOK with default headers values
func NewGetLearningAssignmentsMeOK() *GetLearningAssignmentsMeOK {
	return &GetLearningAssignmentsMeOK{}
}

/*GetLearningAssignmentsMeOK handles this case with default header values.

successful operation
*/
type GetLearningAssignmentsMeOK struct {
	Payload *models.LearningAssignmentsDomainEntity
}

func (o *GetLearningAssignmentsMeOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/learning/assignments/me][%d] getLearningAssignmentsMeOK  %+v", 200, o.Payload)
}

func (o *GetLearningAssignmentsMeOK) GetPayload() *models.LearningAssignmentsDomainEntity {
	return o.Payload
}

func (o *GetLearningAssignmentsMeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LearningAssignmentsDomainEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearningAssignmentsMeBadRequest creates a GetLearningAssignmentsMeBadRequest with default headers values
func NewGetLearningAssignmentsMeBadRequest() *GetLearningAssignmentsMeBadRequest {
	return &GetLearningAssignmentsMeBadRequest{}
}

/*GetLearningAssignmentsMeBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetLearningAssignmentsMeBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetLearningAssignmentsMeBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/learning/assignments/me][%d] getLearningAssignmentsMeBadRequest  %+v", 400, o.Payload)
}

func (o *GetLearningAssignmentsMeBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLearningAssignmentsMeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearningAssignmentsMeUnauthorized creates a GetLearningAssignmentsMeUnauthorized with default headers values
func NewGetLearningAssignmentsMeUnauthorized() *GetLearningAssignmentsMeUnauthorized {
	return &GetLearningAssignmentsMeUnauthorized{}
}

/*GetLearningAssignmentsMeUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetLearningAssignmentsMeUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetLearningAssignmentsMeUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/learning/assignments/me][%d] getLearningAssignmentsMeUnauthorized  %+v", 401, o.Payload)
}

func (o *GetLearningAssignmentsMeUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLearningAssignmentsMeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearningAssignmentsMeForbidden creates a GetLearningAssignmentsMeForbidden with default headers values
func NewGetLearningAssignmentsMeForbidden() *GetLearningAssignmentsMeForbidden {
	return &GetLearningAssignmentsMeForbidden{}
}

/*GetLearningAssignmentsMeForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetLearningAssignmentsMeForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetLearningAssignmentsMeForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/learning/assignments/me][%d] getLearningAssignmentsMeForbidden  %+v", 403, o.Payload)
}

func (o *GetLearningAssignmentsMeForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLearningAssignmentsMeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearningAssignmentsMeNotFound creates a GetLearningAssignmentsMeNotFound with default headers values
func NewGetLearningAssignmentsMeNotFound() *GetLearningAssignmentsMeNotFound {
	return &GetLearningAssignmentsMeNotFound{}
}

/*GetLearningAssignmentsMeNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetLearningAssignmentsMeNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetLearningAssignmentsMeNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/learning/assignments/me][%d] getLearningAssignmentsMeNotFound  %+v", 404, o.Payload)
}

func (o *GetLearningAssignmentsMeNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLearningAssignmentsMeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearningAssignmentsMeRequestTimeout creates a GetLearningAssignmentsMeRequestTimeout with default headers values
func NewGetLearningAssignmentsMeRequestTimeout() *GetLearningAssignmentsMeRequestTimeout {
	return &GetLearningAssignmentsMeRequestTimeout{}
}

/*GetLearningAssignmentsMeRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetLearningAssignmentsMeRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetLearningAssignmentsMeRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/learning/assignments/me][%d] getLearningAssignmentsMeRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetLearningAssignmentsMeRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLearningAssignmentsMeRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearningAssignmentsMeRequestEntityTooLarge creates a GetLearningAssignmentsMeRequestEntityTooLarge with default headers values
func NewGetLearningAssignmentsMeRequestEntityTooLarge() *GetLearningAssignmentsMeRequestEntityTooLarge {
	return &GetLearningAssignmentsMeRequestEntityTooLarge{}
}

/*GetLearningAssignmentsMeRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetLearningAssignmentsMeRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetLearningAssignmentsMeRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/learning/assignments/me][%d] getLearningAssignmentsMeRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetLearningAssignmentsMeRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLearningAssignmentsMeRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearningAssignmentsMeUnsupportedMediaType creates a GetLearningAssignmentsMeUnsupportedMediaType with default headers values
func NewGetLearningAssignmentsMeUnsupportedMediaType() *GetLearningAssignmentsMeUnsupportedMediaType {
	return &GetLearningAssignmentsMeUnsupportedMediaType{}
}

/*GetLearningAssignmentsMeUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetLearningAssignmentsMeUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetLearningAssignmentsMeUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/learning/assignments/me][%d] getLearningAssignmentsMeUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetLearningAssignmentsMeUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLearningAssignmentsMeUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearningAssignmentsMeTooManyRequests creates a GetLearningAssignmentsMeTooManyRequests with default headers values
func NewGetLearningAssignmentsMeTooManyRequests() *GetLearningAssignmentsMeTooManyRequests {
	return &GetLearningAssignmentsMeTooManyRequests{}
}

/*GetLearningAssignmentsMeTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetLearningAssignmentsMeTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetLearningAssignmentsMeTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/learning/assignments/me][%d] getLearningAssignmentsMeTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetLearningAssignmentsMeTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLearningAssignmentsMeTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearningAssignmentsMeInternalServerError creates a GetLearningAssignmentsMeInternalServerError with default headers values
func NewGetLearningAssignmentsMeInternalServerError() *GetLearningAssignmentsMeInternalServerError {
	return &GetLearningAssignmentsMeInternalServerError{}
}

/*GetLearningAssignmentsMeInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetLearningAssignmentsMeInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetLearningAssignmentsMeInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/learning/assignments/me][%d] getLearningAssignmentsMeInternalServerError  %+v", 500, o.Payload)
}

func (o *GetLearningAssignmentsMeInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLearningAssignmentsMeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearningAssignmentsMeServiceUnavailable creates a GetLearningAssignmentsMeServiceUnavailable with default headers values
func NewGetLearningAssignmentsMeServiceUnavailable() *GetLearningAssignmentsMeServiceUnavailable {
	return &GetLearningAssignmentsMeServiceUnavailable{}
}

/*GetLearningAssignmentsMeServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetLearningAssignmentsMeServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetLearningAssignmentsMeServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/learning/assignments/me][%d] getLearningAssignmentsMeServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetLearningAssignmentsMeServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLearningAssignmentsMeServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearningAssignmentsMeGatewayTimeout creates a GetLearningAssignmentsMeGatewayTimeout with default headers values
func NewGetLearningAssignmentsMeGatewayTimeout() *GetLearningAssignmentsMeGatewayTimeout {
	return &GetLearningAssignmentsMeGatewayTimeout{}
}

/*GetLearningAssignmentsMeGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetLearningAssignmentsMeGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetLearningAssignmentsMeGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/learning/assignments/me][%d] getLearningAssignmentsMeGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetLearningAssignmentsMeGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLearningAssignmentsMeGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
