// Code generated by go-swagger; DO NOT EDIT.

package learning

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetLearningModuleVersionParams creates a new GetLearningModuleVersionParams object
// with the default values initialized.
func NewGetLearningModuleVersionParams() *GetLearningModuleVersionParams {
	var ()
	return &GetLearningModuleVersionParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetLearningModuleVersionParamsWithTimeout creates a new GetLearningModuleVersionParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetLearningModuleVersionParamsWithTimeout(timeout time.Duration) *GetLearningModuleVersionParams {
	var ()
	return &GetLearningModuleVersionParams{

		timeout: timeout,
	}
}

// NewGetLearningModuleVersionParamsWithContext creates a new GetLearningModuleVersionParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetLearningModuleVersionParamsWithContext(ctx context.Context) *GetLearningModuleVersionParams {
	var ()
	return &GetLearningModuleVersionParams{

		Context: ctx,
	}
}

// NewGetLearningModuleVersionParamsWithHTTPClient creates a new GetLearningModuleVersionParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetLearningModuleVersionParamsWithHTTPClient(client *http.Client) *GetLearningModuleVersionParams {
	var ()
	return &GetLearningModuleVersionParams{
		HTTPClient: client,
	}
}

/*GetLearningModuleVersionParams contains all the parameters to send to the API endpoint
for the get learning module version operation typically these are written to a http.Request
*/
type GetLearningModuleVersionParams struct {

	/*Expand
	  Fields to expand in response(case insensitive)

	*/
	Expand []string
	/*ModuleID
	  The ID of the learning module

	*/
	ModuleID string
	/*VersionID
	  The version of learning module

	*/
	VersionID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get learning module version params
func (o *GetLearningModuleVersionParams) WithTimeout(timeout time.Duration) *GetLearningModuleVersionParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get learning module version params
func (o *GetLearningModuleVersionParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get learning module version params
func (o *GetLearningModuleVersionParams) WithContext(ctx context.Context) *GetLearningModuleVersionParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get learning module version params
func (o *GetLearningModuleVersionParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get learning module version params
func (o *GetLearningModuleVersionParams) WithHTTPClient(client *http.Client) *GetLearningModuleVersionParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get learning module version params
func (o *GetLearningModuleVersionParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithExpand adds the expand to the get learning module version params
func (o *GetLearningModuleVersionParams) WithExpand(expand []string) *GetLearningModuleVersionParams {
	o.SetExpand(expand)
	return o
}

// SetExpand adds the expand to the get learning module version params
func (o *GetLearningModuleVersionParams) SetExpand(expand []string) {
	o.Expand = expand
}

// WithModuleID adds the moduleID to the get learning module version params
func (o *GetLearningModuleVersionParams) WithModuleID(moduleID string) *GetLearningModuleVersionParams {
	o.SetModuleID(moduleID)
	return o
}

// SetModuleID adds the moduleId to the get learning module version params
func (o *GetLearningModuleVersionParams) SetModuleID(moduleID string) {
	o.ModuleID = moduleID
}

// WithVersionID adds the versionID to the get learning module version params
func (o *GetLearningModuleVersionParams) WithVersionID(versionID string) *GetLearningModuleVersionParams {
	o.SetVersionID(versionID)
	return o
}

// SetVersionID adds the versionId to the get learning module version params
func (o *GetLearningModuleVersionParams) SetVersionID(versionID string) {
	o.VersionID = versionID
}

// WriteToRequest writes these params to a swagger request
func (o *GetLearningModuleVersionParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	valuesExpand := o.Expand

	joinedExpand := swag.JoinByFormat(valuesExpand, "multi")
	// query array param expand
	if err := r.SetQueryParam("expand", joinedExpand...); err != nil {
		return err
	}

	// path param moduleId
	if err := r.SetPathParam("moduleId", o.ModuleID); err != nil {
		return err
	}

	// path param versionId
	if err := r.SetPathParam("versionId", o.VersionID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
