// Code generated by go-swagger; DO NOT EDIT.

package learning

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostLearningAssignmentsAggregatesQueryReader is a Reader for the PostLearningAssignmentsAggregatesQuery structure.
type PostLearningAssignmentsAggregatesQueryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostLearningAssignmentsAggregatesQueryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostLearningAssignmentsAggregatesQueryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostLearningAssignmentsAggregatesQueryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostLearningAssignmentsAggregatesQueryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostLearningAssignmentsAggregatesQueryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostLearningAssignmentsAggregatesQueryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostLearningAssignmentsAggregatesQueryRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostLearningAssignmentsAggregatesQueryRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostLearningAssignmentsAggregatesQueryUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostLearningAssignmentsAggregatesQueryTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostLearningAssignmentsAggregatesQueryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 501:
		result := NewPostLearningAssignmentsAggregatesQueryNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostLearningAssignmentsAggregatesQueryServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostLearningAssignmentsAggregatesQueryGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostLearningAssignmentsAggregatesQueryOK creates a PostLearningAssignmentsAggregatesQueryOK with default headers values
func NewPostLearningAssignmentsAggregatesQueryOK() *PostLearningAssignmentsAggregatesQueryOK {
	return &PostLearningAssignmentsAggregatesQueryOK{}
}

/*
PostLearningAssignmentsAggregatesQueryOK describes a response with status code 200, with default header values.

Query completed successfully
*/
type PostLearningAssignmentsAggregatesQueryOK struct {
	Payload *models.LearningAssignmentAggregateResponse
}

// IsSuccess returns true when this post learning assignments aggregates query o k response has a 2xx status code
func (o *PostLearningAssignmentsAggregatesQueryOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post learning assignments aggregates query o k response has a 3xx status code
func (o *PostLearningAssignmentsAggregatesQueryOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post learning assignments aggregates query o k response has a 4xx status code
func (o *PostLearningAssignmentsAggregatesQueryOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post learning assignments aggregates query o k response has a 5xx status code
func (o *PostLearningAssignmentsAggregatesQueryOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post learning assignments aggregates query o k response a status code equal to that given
func (o *PostLearningAssignmentsAggregatesQueryOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostLearningAssignmentsAggregatesQueryOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/aggregates/query][%d] postLearningAssignmentsAggregatesQueryOK  %+v", 200, o.Payload)
}

func (o *PostLearningAssignmentsAggregatesQueryOK) String() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/aggregates/query][%d] postLearningAssignmentsAggregatesQueryOK  %+v", 200, o.Payload)
}

func (o *PostLearningAssignmentsAggregatesQueryOK) GetPayload() *models.LearningAssignmentAggregateResponse {
	return o.Payload
}

func (o *PostLearningAssignmentsAggregatesQueryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LearningAssignmentAggregateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearningAssignmentsAggregatesQueryBadRequest creates a PostLearningAssignmentsAggregatesQueryBadRequest with default headers values
func NewPostLearningAssignmentsAggregatesQueryBadRequest() *PostLearningAssignmentsAggregatesQueryBadRequest {
	return &PostLearningAssignmentsAggregatesQueryBadRequest{}
}

/*
PostLearningAssignmentsAggregatesQueryBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostLearningAssignmentsAggregatesQueryBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post learning assignments aggregates query bad request response has a 2xx status code
func (o *PostLearningAssignmentsAggregatesQueryBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post learning assignments aggregates query bad request response has a 3xx status code
func (o *PostLearningAssignmentsAggregatesQueryBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post learning assignments aggregates query bad request response has a 4xx status code
func (o *PostLearningAssignmentsAggregatesQueryBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post learning assignments aggregates query bad request response has a 5xx status code
func (o *PostLearningAssignmentsAggregatesQueryBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post learning assignments aggregates query bad request response a status code equal to that given
func (o *PostLearningAssignmentsAggregatesQueryBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostLearningAssignmentsAggregatesQueryBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/aggregates/query][%d] postLearningAssignmentsAggregatesQueryBadRequest  %+v", 400, o.Payload)
}

func (o *PostLearningAssignmentsAggregatesQueryBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/aggregates/query][%d] postLearningAssignmentsAggregatesQueryBadRequest  %+v", 400, o.Payload)
}

func (o *PostLearningAssignmentsAggregatesQueryBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLearningAssignmentsAggregatesQueryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearningAssignmentsAggregatesQueryUnauthorized creates a PostLearningAssignmentsAggregatesQueryUnauthorized with default headers values
func NewPostLearningAssignmentsAggregatesQueryUnauthorized() *PostLearningAssignmentsAggregatesQueryUnauthorized {
	return &PostLearningAssignmentsAggregatesQueryUnauthorized{}
}

/*
PostLearningAssignmentsAggregatesQueryUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostLearningAssignmentsAggregatesQueryUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post learning assignments aggregates query unauthorized response has a 2xx status code
func (o *PostLearningAssignmentsAggregatesQueryUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post learning assignments aggregates query unauthorized response has a 3xx status code
func (o *PostLearningAssignmentsAggregatesQueryUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post learning assignments aggregates query unauthorized response has a 4xx status code
func (o *PostLearningAssignmentsAggregatesQueryUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post learning assignments aggregates query unauthorized response has a 5xx status code
func (o *PostLearningAssignmentsAggregatesQueryUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post learning assignments aggregates query unauthorized response a status code equal to that given
func (o *PostLearningAssignmentsAggregatesQueryUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostLearningAssignmentsAggregatesQueryUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/aggregates/query][%d] postLearningAssignmentsAggregatesQueryUnauthorized  %+v", 401, o.Payload)
}

func (o *PostLearningAssignmentsAggregatesQueryUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/aggregates/query][%d] postLearningAssignmentsAggregatesQueryUnauthorized  %+v", 401, o.Payload)
}

func (o *PostLearningAssignmentsAggregatesQueryUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLearningAssignmentsAggregatesQueryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearningAssignmentsAggregatesQueryForbidden creates a PostLearningAssignmentsAggregatesQueryForbidden with default headers values
func NewPostLearningAssignmentsAggregatesQueryForbidden() *PostLearningAssignmentsAggregatesQueryForbidden {
	return &PostLearningAssignmentsAggregatesQueryForbidden{}
}

/*
PostLearningAssignmentsAggregatesQueryForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostLearningAssignmentsAggregatesQueryForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post learning assignments aggregates query forbidden response has a 2xx status code
func (o *PostLearningAssignmentsAggregatesQueryForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post learning assignments aggregates query forbidden response has a 3xx status code
func (o *PostLearningAssignmentsAggregatesQueryForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post learning assignments aggregates query forbidden response has a 4xx status code
func (o *PostLearningAssignmentsAggregatesQueryForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post learning assignments aggregates query forbidden response has a 5xx status code
func (o *PostLearningAssignmentsAggregatesQueryForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post learning assignments aggregates query forbidden response a status code equal to that given
func (o *PostLearningAssignmentsAggregatesQueryForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostLearningAssignmentsAggregatesQueryForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/aggregates/query][%d] postLearningAssignmentsAggregatesQueryForbidden  %+v", 403, o.Payload)
}

func (o *PostLearningAssignmentsAggregatesQueryForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/aggregates/query][%d] postLearningAssignmentsAggregatesQueryForbidden  %+v", 403, o.Payload)
}

func (o *PostLearningAssignmentsAggregatesQueryForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLearningAssignmentsAggregatesQueryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearningAssignmentsAggregatesQueryNotFound creates a PostLearningAssignmentsAggregatesQueryNotFound with default headers values
func NewPostLearningAssignmentsAggregatesQueryNotFound() *PostLearningAssignmentsAggregatesQueryNotFound {
	return &PostLearningAssignmentsAggregatesQueryNotFound{}
}

/*
PostLearningAssignmentsAggregatesQueryNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostLearningAssignmentsAggregatesQueryNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post learning assignments aggregates query not found response has a 2xx status code
func (o *PostLearningAssignmentsAggregatesQueryNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post learning assignments aggregates query not found response has a 3xx status code
func (o *PostLearningAssignmentsAggregatesQueryNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post learning assignments aggregates query not found response has a 4xx status code
func (o *PostLearningAssignmentsAggregatesQueryNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post learning assignments aggregates query not found response has a 5xx status code
func (o *PostLearningAssignmentsAggregatesQueryNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post learning assignments aggregates query not found response a status code equal to that given
func (o *PostLearningAssignmentsAggregatesQueryNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostLearningAssignmentsAggregatesQueryNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/aggregates/query][%d] postLearningAssignmentsAggregatesQueryNotFound  %+v", 404, o.Payload)
}

func (o *PostLearningAssignmentsAggregatesQueryNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/aggregates/query][%d] postLearningAssignmentsAggregatesQueryNotFound  %+v", 404, o.Payload)
}

func (o *PostLearningAssignmentsAggregatesQueryNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLearningAssignmentsAggregatesQueryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearningAssignmentsAggregatesQueryRequestTimeout creates a PostLearningAssignmentsAggregatesQueryRequestTimeout with default headers values
func NewPostLearningAssignmentsAggregatesQueryRequestTimeout() *PostLearningAssignmentsAggregatesQueryRequestTimeout {
	return &PostLearningAssignmentsAggregatesQueryRequestTimeout{}
}

/*
PostLearningAssignmentsAggregatesQueryRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostLearningAssignmentsAggregatesQueryRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post learning assignments aggregates query request timeout response has a 2xx status code
func (o *PostLearningAssignmentsAggregatesQueryRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post learning assignments aggregates query request timeout response has a 3xx status code
func (o *PostLearningAssignmentsAggregatesQueryRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post learning assignments aggregates query request timeout response has a 4xx status code
func (o *PostLearningAssignmentsAggregatesQueryRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post learning assignments aggregates query request timeout response has a 5xx status code
func (o *PostLearningAssignmentsAggregatesQueryRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post learning assignments aggregates query request timeout response a status code equal to that given
func (o *PostLearningAssignmentsAggregatesQueryRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostLearningAssignmentsAggregatesQueryRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/aggregates/query][%d] postLearningAssignmentsAggregatesQueryRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostLearningAssignmentsAggregatesQueryRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/aggregates/query][%d] postLearningAssignmentsAggregatesQueryRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostLearningAssignmentsAggregatesQueryRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLearningAssignmentsAggregatesQueryRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearningAssignmentsAggregatesQueryRequestEntityTooLarge creates a PostLearningAssignmentsAggregatesQueryRequestEntityTooLarge with default headers values
func NewPostLearningAssignmentsAggregatesQueryRequestEntityTooLarge() *PostLearningAssignmentsAggregatesQueryRequestEntityTooLarge {
	return &PostLearningAssignmentsAggregatesQueryRequestEntityTooLarge{}
}

/*
PostLearningAssignmentsAggregatesQueryRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PostLearningAssignmentsAggregatesQueryRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post learning assignments aggregates query request entity too large response has a 2xx status code
func (o *PostLearningAssignmentsAggregatesQueryRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post learning assignments aggregates query request entity too large response has a 3xx status code
func (o *PostLearningAssignmentsAggregatesQueryRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post learning assignments aggregates query request entity too large response has a 4xx status code
func (o *PostLearningAssignmentsAggregatesQueryRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post learning assignments aggregates query request entity too large response has a 5xx status code
func (o *PostLearningAssignmentsAggregatesQueryRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post learning assignments aggregates query request entity too large response a status code equal to that given
func (o *PostLearningAssignmentsAggregatesQueryRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostLearningAssignmentsAggregatesQueryRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/aggregates/query][%d] postLearningAssignmentsAggregatesQueryRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostLearningAssignmentsAggregatesQueryRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/aggregates/query][%d] postLearningAssignmentsAggregatesQueryRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostLearningAssignmentsAggregatesQueryRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLearningAssignmentsAggregatesQueryRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearningAssignmentsAggregatesQueryUnsupportedMediaType creates a PostLearningAssignmentsAggregatesQueryUnsupportedMediaType with default headers values
func NewPostLearningAssignmentsAggregatesQueryUnsupportedMediaType() *PostLearningAssignmentsAggregatesQueryUnsupportedMediaType {
	return &PostLearningAssignmentsAggregatesQueryUnsupportedMediaType{}
}

/*
PostLearningAssignmentsAggregatesQueryUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostLearningAssignmentsAggregatesQueryUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post learning assignments aggregates query unsupported media type response has a 2xx status code
func (o *PostLearningAssignmentsAggregatesQueryUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post learning assignments aggregates query unsupported media type response has a 3xx status code
func (o *PostLearningAssignmentsAggregatesQueryUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post learning assignments aggregates query unsupported media type response has a 4xx status code
func (o *PostLearningAssignmentsAggregatesQueryUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post learning assignments aggregates query unsupported media type response has a 5xx status code
func (o *PostLearningAssignmentsAggregatesQueryUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post learning assignments aggregates query unsupported media type response a status code equal to that given
func (o *PostLearningAssignmentsAggregatesQueryUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostLearningAssignmentsAggregatesQueryUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/aggregates/query][%d] postLearningAssignmentsAggregatesQueryUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostLearningAssignmentsAggregatesQueryUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/aggregates/query][%d] postLearningAssignmentsAggregatesQueryUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostLearningAssignmentsAggregatesQueryUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLearningAssignmentsAggregatesQueryUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearningAssignmentsAggregatesQueryTooManyRequests creates a PostLearningAssignmentsAggregatesQueryTooManyRequests with default headers values
func NewPostLearningAssignmentsAggregatesQueryTooManyRequests() *PostLearningAssignmentsAggregatesQueryTooManyRequests {
	return &PostLearningAssignmentsAggregatesQueryTooManyRequests{}
}

/*
PostLearningAssignmentsAggregatesQueryTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostLearningAssignmentsAggregatesQueryTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post learning assignments aggregates query too many requests response has a 2xx status code
func (o *PostLearningAssignmentsAggregatesQueryTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post learning assignments aggregates query too many requests response has a 3xx status code
func (o *PostLearningAssignmentsAggregatesQueryTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post learning assignments aggregates query too many requests response has a 4xx status code
func (o *PostLearningAssignmentsAggregatesQueryTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post learning assignments aggregates query too many requests response has a 5xx status code
func (o *PostLearningAssignmentsAggregatesQueryTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post learning assignments aggregates query too many requests response a status code equal to that given
func (o *PostLearningAssignmentsAggregatesQueryTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostLearningAssignmentsAggregatesQueryTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/aggregates/query][%d] postLearningAssignmentsAggregatesQueryTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostLearningAssignmentsAggregatesQueryTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/aggregates/query][%d] postLearningAssignmentsAggregatesQueryTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostLearningAssignmentsAggregatesQueryTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLearningAssignmentsAggregatesQueryTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearningAssignmentsAggregatesQueryInternalServerError creates a PostLearningAssignmentsAggregatesQueryInternalServerError with default headers values
func NewPostLearningAssignmentsAggregatesQueryInternalServerError() *PostLearningAssignmentsAggregatesQueryInternalServerError {
	return &PostLearningAssignmentsAggregatesQueryInternalServerError{}
}

/*
PostLearningAssignmentsAggregatesQueryInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostLearningAssignmentsAggregatesQueryInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post learning assignments aggregates query internal server error response has a 2xx status code
func (o *PostLearningAssignmentsAggregatesQueryInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post learning assignments aggregates query internal server error response has a 3xx status code
func (o *PostLearningAssignmentsAggregatesQueryInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post learning assignments aggregates query internal server error response has a 4xx status code
func (o *PostLearningAssignmentsAggregatesQueryInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post learning assignments aggregates query internal server error response has a 5xx status code
func (o *PostLearningAssignmentsAggregatesQueryInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post learning assignments aggregates query internal server error response a status code equal to that given
func (o *PostLearningAssignmentsAggregatesQueryInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostLearningAssignmentsAggregatesQueryInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/aggregates/query][%d] postLearningAssignmentsAggregatesQueryInternalServerError  %+v", 500, o.Payload)
}

func (o *PostLearningAssignmentsAggregatesQueryInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/aggregates/query][%d] postLearningAssignmentsAggregatesQueryInternalServerError  %+v", 500, o.Payload)
}

func (o *PostLearningAssignmentsAggregatesQueryInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLearningAssignmentsAggregatesQueryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearningAssignmentsAggregatesQueryNotImplemented creates a PostLearningAssignmentsAggregatesQueryNotImplemented with default headers values
func NewPostLearningAssignmentsAggregatesQueryNotImplemented() *PostLearningAssignmentsAggregatesQueryNotImplemented {
	return &PostLearningAssignmentsAggregatesQueryNotImplemented{}
}

/*
PostLearningAssignmentsAggregatesQueryNotImplemented describes a response with status code 501, with default header values.

Not Implemented
*/
type PostLearningAssignmentsAggregatesQueryNotImplemented struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post learning assignments aggregates query not implemented response has a 2xx status code
func (o *PostLearningAssignmentsAggregatesQueryNotImplemented) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post learning assignments aggregates query not implemented response has a 3xx status code
func (o *PostLearningAssignmentsAggregatesQueryNotImplemented) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post learning assignments aggregates query not implemented response has a 4xx status code
func (o *PostLearningAssignmentsAggregatesQueryNotImplemented) IsClientError() bool {
	return false
}

// IsServerError returns true when this post learning assignments aggregates query not implemented response has a 5xx status code
func (o *PostLearningAssignmentsAggregatesQueryNotImplemented) IsServerError() bool {
	return true
}

// IsCode returns true when this post learning assignments aggregates query not implemented response a status code equal to that given
func (o *PostLearningAssignmentsAggregatesQueryNotImplemented) IsCode(code int) bool {
	return code == 501
}

func (o *PostLearningAssignmentsAggregatesQueryNotImplemented) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/aggregates/query][%d] postLearningAssignmentsAggregatesQueryNotImplemented  %+v", 501, o.Payload)
}

func (o *PostLearningAssignmentsAggregatesQueryNotImplemented) String() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/aggregates/query][%d] postLearningAssignmentsAggregatesQueryNotImplemented  %+v", 501, o.Payload)
}

func (o *PostLearningAssignmentsAggregatesQueryNotImplemented) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLearningAssignmentsAggregatesQueryNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearningAssignmentsAggregatesQueryServiceUnavailable creates a PostLearningAssignmentsAggregatesQueryServiceUnavailable with default headers values
func NewPostLearningAssignmentsAggregatesQueryServiceUnavailable() *PostLearningAssignmentsAggregatesQueryServiceUnavailable {
	return &PostLearningAssignmentsAggregatesQueryServiceUnavailable{}
}

/*
PostLearningAssignmentsAggregatesQueryServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostLearningAssignmentsAggregatesQueryServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post learning assignments aggregates query service unavailable response has a 2xx status code
func (o *PostLearningAssignmentsAggregatesQueryServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post learning assignments aggregates query service unavailable response has a 3xx status code
func (o *PostLearningAssignmentsAggregatesQueryServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post learning assignments aggregates query service unavailable response has a 4xx status code
func (o *PostLearningAssignmentsAggregatesQueryServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post learning assignments aggregates query service unavailable response has a 5xx status code
func (o *PostLearningAssignmentsAggregatesQueryServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post learning assignments aggregates query service unavailable response a status code equal to that given
func (o *PostLearningAssignmentsAggregatesQueryServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostLearningAssignmentsAggregatesQueryServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/aggregates/query][%d] postLearningAssignmentsAggregatesQueryServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostLearningAssignmentsAggregatesQueryServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/aggregates/query][%d] postLearningAssignmentsAggregatesQueryServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostLearningAssignmentsAggregatesQueryServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLearningAssignmentsAggregatesQueryServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearningAssignmentsAggregatesQueryGatewayTimeout creates a PostLearningAssignmentsAggregatesQueryGatewayTimeout with default headers values
func NewPostLearningAssignmentsAggregatesQueryGatewayTimeout() *PostLearningAssignmentsAggregatesQueryGatewayTimeout {
	return &PostLearningAssignmentsAggregatesQueryGatewayTimeout{}
}

/*
PostLearningAssignmentsAggregatesQueryGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostLearningAssignmentsAggregatesQueryGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post learning assignments aggregates query gateway timeout response has a 2xx status code
func (o *PostLearningAssignmentsAggregatesQueryGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post learning assignments aggregates query gateway timeout response has a 3xx status code
func (o *PostLearningAssignmentsAggregatesQueryGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post learning assignments aggregates query gateway timeout response has a 4xx status code
func (o *PostLearningAssignmentsAggregatesQueryGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post learning assignments aggregates query gateway timeout response has a 5xx status code
func (o *PostLearningAssignmentsAggregatesQueryGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post learning assignments aggregates query gateway timeout response a status code equal to that given
func (o *PostLearningAssignmentsAggregatesQueryGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostLearningAssignmentsAggregatesQueryGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/aggregates/query][%d] postLearningAssignmentsAggregatesQueryGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostLearningAssignmentsAggregatesQueryGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/learning/assignments/aggregates/query][%d] postLearningAssignmentsAggregatesQueryGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostLearningAssignmentsAggregatesQueryGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLearningAssignmentsAggregatesQueryGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
