// Code generated by go-swagger; DO NOT EDIT.

package learning

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutLearningModuleReader is a Reader for the PutLearningModule structure.
type PutLearningModuleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutLearningModuleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutLearningModuleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutLearningModuleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutLearningModuleUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutLearningModuleForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutLearningModuleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutLearningModuleRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutLearningModuleRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutLearningModuleUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutLearningModuleTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutLearningModuleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutLearningModuleServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutLearningModuleGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutLearningModuleOK creates a PutLearningModuleOK with default headers values
func NewPutLearningModuleOK() *PutLearningModuleOK {
	return &PutLearningModuleOK{}
}

/*PutLearningModuleOK handles this case with default header values.

successful operation
*/
type PutLearningModuleOK struct {
	Payload *models.LearningModule
}

func (o *PutLearningModuleOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/learning/modules/{moduleId}][%d] putLearningModuleOK  %+v", 200, o.Payload)
}

func (o *PutLearningModuleOK) GetPayload() *models.LearningModule {
	return o.Payload
}

func (o *PutLearningModuleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LearningModule)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutLearningModuleBadRequest creates a PutLearningModuleBadRequest with default headers values
func NewPutLearningModuleBadRequest() *PutLearningModuleBadRequest {
	return &PutLearningModuleBadRequest{}
}

/*PutLearningModuleBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutLearningModuleBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PutLearningModuleBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/learning/modules/{moduleId}][%d] putLearningModuleBadRequest  %+v", 400, o.Payload)
}

func (o *PutLearningModuleBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutLearningModuleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutLearningModuleUnauthorized creates a PutLearningModuleUnauthorized with default headers values
func NewPutLearningModuleUnauthorized() *PutLearningModuleUnauthorized {
	return &PutLearningModuleUnauthorized{}
}

/*PutLearningModuleUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PutLearningModuleUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PutLearningModuleUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/learning/modules/{moduleId}][%d] putLearningModuleUnauthorized  %+v", 401, o.Payload)
}

func (o *PutLearningModuleUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutLearningModuleUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutLearningModuleForbidden creates a PutLearningModuleForbidden with default headers values
func NewPutLearningModuleForbidden() *PutLearningModuleForbidden {
	return &PutLearningModuleForbidden{}
}

/*PutLearningModuleForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PutLearningModuleForbidden struct {
	Payload *models.ErrorBody
}

func (o *PutLearningModuleForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/learning/modules/{moduleId}][%d] putLearningModuleForbidden  %+v", 403, o.Payload)
}

func (o *PutLearningModuleForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutLearningModuleForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutLearningModuleNotFound creates a PutLearningModuleNotFound with default headers values
func NewPutLearningModuleNotFound() *PutLearningModuleNotFound {
	return &PutLearningModuleNotFound{}
}

/*PutLearningModuleNotFound handles this case with default header values.

The requested resource was not found.
*/
type PutLearningModuleNotFound struct {
	Payload *models.ErrorBody
}

func (o *PutLearningModuleNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/learning/modules/{moduleId}][%d] putLearningModuleNotFound  %+v", 404, o.Payload)
}

func (o *PutLearningModuleNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutLearningModuleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutLearningModuleRequestTimeout creates a PutLearningModuleRequestTimeout with default headers values
func NewPutLearningModuleRequestTimeout() *PutLearningModuleRequestTimeout {
	return &PutLearningModuleRequestTimeout{}
}

/*PutLearningModuleRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutLearningModuleRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PutLearningModuleRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/learning/modules/{moduleId}][%d] putLearningModuleRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutLearningModuleRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutLearningModuleRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutLearningModuleRequestEntityTooLarge creates a PutLearningModuleRequestEntityTooLarge with default headers values
func NewPutLearningModuleRequestEntityTooLarge() *PutLearningModuleRequestEntityTooLarge {
	return &PutLearningModuleRequestEntityTooLarge{}
}

/*PutLearningModuleRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PutLearningModuleRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PutLearningModuleRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/learning/modules/{moduleId}][%d] putLearningModuleRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutLearningModuleRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutLearningModuleRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutLearningModuleUnsupportedMediaType creates a PutLearningModuleUnsupportedMediaType with default headers values
func NewPutLearningModuleUnsupportedMediaType() *PutLearningModuleUnsupportedMediaType {
	return &PutLearningModuleUnsupportedMediaType{}
}

/*PutLearningModuleUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutLearningModuleUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PutLearningModuleUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/learning/modules/{moduleId}][%d] putLearningModuleUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutLearningModuleUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutLearningModuleUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutLearningModuleTooManyRequests creates a PutLearningModuleTooManyRequests with default headers values
func NewPutLearningModuleTooManyRequests() *PutLearningModuleTooManyRequests {
	return &PutLearningModuleTooManyRequests{}
}

/*PutLearningModuleTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutLearningModuleTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PutLearningModuleTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/learning/modules/{moduleId}][%d] putLearningModuleTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutLearningModuleTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutLearningModuleTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutLearningModuleInternalServerError creates a PutLearningModuleInternalServerError with default headers values
func NewPutLearningModuleInternalServerError() *PutLearningModuleInternalServerError {
	return &PutLearningModuleInternalServerError{}
}

/*PutLearningModuleInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutLearningModuleInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PutLearningModuleInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/learning/modules/{moduleId}][%d] putLearningModuleInternalServerError  %+v", 500, o.Payload)
}

func (o *PutLearningModuleInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutLearningModuleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutLearningModuleServiceUnavailable creates a PutLearningModuleServiceUnavailable with default headers values
func NewPutLearningModuleServiceUnavailable() *PutLearningModuleServiceUnavailable {
	return &PutLearningModuleServiceUnavailable{}
}

/*PutLearningModuleServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutLearningModuleServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PutLearningModuleServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/learning/modules/{moduleId}][%d] putLearningModuleServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutLearningModuleServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutLearningModuleServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutLearningModuleGatewayTimeout creates a PutLearningModuleGatewayTimeout with default headers values
func NewPutLearningModuleGatewayTimeout() *PutLearningModuleGatewayTimeout {
	return &PutLearningModuleGatewayTimeout{}
}

/*PutLearningModuleGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PutLearningModuleGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PutLearningModuleGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/learning/modules/{moduleId}][%d] putLearningModuleGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutLearningModuleGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutLearningModuleGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
