// Code generated by go-swagger; DO NOT EDIT.

package learning

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostLearningModulePublishReader is a Reader for the PostLearningModulePublish structure.
type PostLearningModulePublishReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostLearningModulePublishReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostLearningModulePublishOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostLearningModulePublishBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostLearningModulePublishUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostLearningModulePublishForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostLearningModulePublishNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostLearningModulePublishRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostLearningModulePublishRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostLearningModulePublishUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostLearningModulePublishTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostLearningModulePublishInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostLearningModulePublishServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostLearningModulePublishGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostLearningModulePublishOK creates a PostLearningModulePublishOK with default headers values
func NewPostLearningModulePublishOK() *PostLearningModulePublishOK {
	return &PostLearningModulePublishOK{}
}

/*PostLearningModulePublishOK handles this case with default header values.

successful operation
*/
type PostLearningModulePublishOK struct {
	Payload *models.LearningModulePublishResponse
}

func (o *PostLearningModulePublishOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/modules/{moduleId}/publish][%d] postLearningModulePublishOK  %+v", 200, o.Payload)
}

func (o *PostLearningModulePublishOK) GetPayload() *models.LearningModulePublishResponse {
	return o.Payload
}

func (o *PostLearningModulePublishOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LearningModulePublishResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearningModulePublishBadRequest creates a PostLearningModulePublishBadRequest with default headers values
func NewPostLearningModulePublishBadRequest() *PostLearningModulePublishBadRequest {
	return &PostLearningModulePublishBadRequest{}
}

/*PostLearningModulePublishBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostLearningModulePublishBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PostLearningModulePublishBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/modules/{moduleId}/publish][%d] postLearningModulePublishBadRequest  %+v", 400, o.Payload)
}

func (o *PostLearningModulePublishBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLearningModulePublishBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearningModulePublishUnauthorized creates a PostLearningModulePublishUnauthorized with default headers values
func NewPostLearningModulePublishUnauthorized() *PostLearningModulePublishUnauthorized {
	return &PostLearningModulePublishUnauthorized{}
}

/*PostLearningModulePublishUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PostLearningModulePublishUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PostLearningModulePublishUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/modules/{moduleId}/publish][%d] postLearningModulePublishUnauthorized  %+v", 401, o.Payload)
}

func (o *PostLearningModulePublishUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLearningModulePublishUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearningModulePublishForbidden creates a PostLearningModulePublishForbidden with default headers values
func NewPostLearningModulePublishForbidden() *PostLearningModulePublishForbidden {
	return &PostLearningModulePublishForbidden{}
}

/*PostLearningModulePublishForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PostLearningModulePublishForbidden struct {
	Payload *models.ErrorBody
}

func (o *PostLearningModulePublishForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/modules/{moduleId}/publish][%d] postLearningModulePublishForbidden  %+v", 403, o.Payload)
}

func (o *PostLearningModulePublishForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLearningModulePublishForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearningModulePublishNotFound creates a PostLearningModulePublishNotFound with default headers values
func NewPostLearningModulePublishNotFound() *PostLearningModulePublishNotFound {
	return &PostLearningModulePublishNotFound{}
}

/*PostLearningModulePublishNotFound handles this case with default header values.

The requested resource was not found.
*/
type PostLearningModulePublishNotFound struct {
	Payload *models.ErrorBody
}

func (o *PostLearningModulePublishNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/modules/{moduleId}/publish][%d] postLearningModulePublishNotFound  %+v", 404, o.Payload)
}

func (o *PostLearningModulePublishNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLearningModulePublishNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearningModulePublishRequestTimeout creates a PostLearningModulePublishRequestTimeout with default headers values
func NewPostLearningModulePublishRequestTimeout() *PostLearningModulePublishRequestTimeout {
	return &PostLearningModulePublishRequestTimeout{}
}

/*PostLearningModulePublishRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostLearningModulePublishRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostLearningModulePublishRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/modules/{moduleId}/publish][%d] postLearningModulePublishRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostLearningModulePublishRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLearningModulePublishRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearningModulePublishRequestEntityTooLarge creates a PostLearningModulePublishRequestEntityTooLarge with default headers values
func NewPostLearningModulePublishRequestEntityTooLarge() *PostLearningModulePublishRequestEntityTooLarge {
	return &PostLearningModulePublishRequestEntityTooLarge{}
}

/*PostLearningModulePublishRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PostLearningModulePublishRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PostLearningModulePublishRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/modules/{moduleId}/publish][%d] postLearningModulePublishRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostLearningModulePublishRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLearningModulePublishRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearningModulePublishUnsupportedMediaType creates a PostLearningModulePublishUnsupportedMediaType with default headers values
func NewPostLearningModulePublishUnsupportedMediaType() *PostLearningModulePublishUnsupportedMediaType {
	return &PostLearningModulePublishUnsupportedMediaType{}
}

/*PostLearningModulePublishUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostLearningModulePublishUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PostLearningModulePublishUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/modules/{moduleId}/publish][%d] postLearningModulePublishUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostLearningModulePublishUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLearningModulePublishUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearningModulePublishTooManyRequests creates a PostLearningModulePublishTooManyRequests with default headers values
func NewPostLearningModulePublishTooManyRequests() *PostLearningModulePublishTooManyRequests {
	return &PostLearningModulePublishTooManyRequests{}
}

/*PostLearningModulePublishTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostLearningModulePublishTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PostLearningModulePublishTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/modules/{moduleId}/publish][%d] postLearningModulePublishTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostLearningModulePublishTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLearningModulePublishTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearningModulePublishInternalServerError creates a PostLearningModulePublishInternalServerError with default headers values
func NewPostLearningModulePublishInternalServerError() *PostLearningModulePublishInternalServerError {
	return &PostLearningModulePublishInternalServerError{}
}

/*PostLearningModulePublishInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostLearningModulePublishInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PostLearningModulePublishInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/modules/{moduleId}/publish][%d] postLearningModulePublishInternalServerError  %+v", 500, o.Payload)
}

func (o *PostLearningModulePublishInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLearningModulePublishInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearningModulePublishServiceUnavailable creates a PostLearningModulePublishServiceUnavailable with default headers values
func NewPostLearningModulePublishServiceUnavailable() *PostLearningModulePublishServiceUnavailable {
	return &PostLearningModulePublishServiceUnavailable{}
}

/*PostLearningModulePublishServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostLearningModulePublishServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PostLearningModulePublishServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/modules/{moduleId}/publish][%d] postLearningModulePublishServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostLearningModulePublishServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLearningModulePublishServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearningModulePublishGatewayTimeout creates a PostLearningModulePublishGatewayTimeout with default headers values
func NewPostLearningModulePublishGatewayTimeout() *PostLearningModulePublishGatewayTimeout {
	return &PostLearningModulePublishGatewayTimeout{}
}

/*PostLearningModulePublishGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PostLearningModulePublishGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostLearningModulePublishGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/modules/{moduleId}/publish][%d] postLearningModulePublishGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostLearningModulePublishGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLearningModulePublishGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
