// Code generated by go-swagger; DO NOT EDIT.

package learning

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetLearningModuleJobReader is a Reader for the GetLearningModuleJob structure.
type GetLearningModuleJobReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLearningModuleJobReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLearningModuleJobOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetLearningModuleJobBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetLearningModuleJobUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetLearningModuleJobForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetLearningModuleJobNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetLearningModuleJobRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetLearningModuleJobRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetLearningModuleJobUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetLearningModuleJobTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetLearningModuleJobInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetLearningModuleJobServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetLearningModuleJobGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetLearningModuleJobOK creates a GetLearningModuleJobOK with default headers values
func NewGetLearningModuleJobOK() *GetLearningModuleJobOK {
	return &GetLearningModuleJobOK{}
}

/*
GetLearningModuleJobOK describes a response with status code 200, with default header values.

successful operation
*/
type GetLearningModuleJobOK struct {
	Payload *models.LearningModuleJobResponse
}

// IsSuccess returns true when this get learning module job o k response has a 2xx status code
func (o *GetLearningModuleJobOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get learning module job o k response has a 3xx status code
func (o *GetLearningModuleJobOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get learning module job o k response has a 4xx status code
func (o *GetLearningModuleJobOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get learning module job o k response has a 5xx status code
func (o *GetLearningModuleJobOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get learning module job o k response a status code equal to that given
func (o *GetLearningModuleJobOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetLearningModuleJobOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/learning/modules/{moduleId}/jobs/{jobId}][%d] getLearningModuleJobOK  %+v", 200, o.Payload)
}

func (o *GetLearningModuleJobOK) String() string {
	return fmt.Sprintf("[GET /api/v2/learning/modules/{moduleId}/jobs/{jobId}][%d] getLearningModuleJobOK  %+v", 200, o.Payload)
}

func (o *GetLearningModuleJobOK) GetPayload() *models.LearningModuleJobResponse {
	return o.Payload
}

func (o *GetLearningModuleJobOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LearningModuleJobResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearningModuleJobBadRequest creates a GetLearningModuleJobBadRequest with default headers values
func NewGetLearningModuleJobBadRequest() *GetLearningModuleJobBadRequest {
	return &GetLearningModuleJobBadRequest{}
}

/*
GetLearningModuleJobBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetLearningModuleJobBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get learning module job bad request response has a 2xx status code
func (o *GetLearningModuleJobBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get learning module job bad request response has a 3xx status code
func (o *GetLearningModuleJobBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get learning module job bad request response has a 4xx status code
func (o *GetLearningModuleJobBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get learning module job bad request response has a 5xx status code
func (o *GetLearningModuleJobBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get learning module job bad request response a status code equal to that given
func (o *GetLearningModuleJobBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetLearningModuleJobBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/learning/modules/{moduleId}/jobs/{jobId}][%d] getLearningModuleJobBadRequest  %+v", 400, o.Payload)
}

func (o *GetLearningModuleJobBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/learning/modules/{moduleId}/jobs/{jobId}][%d] getLearningModuleJobBadRequest  %+v", 400, o.Payload)
}

func (o *GetLearningModuleJobBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLearningModuleJobBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearningModuleJobUnauthorized creates a GetLearningModuleJobUnauthorized with default headers values
func NewGetLearningModuleJobUnauthorized() *GetLearningModuleJobUnauthorized {
	return &GetLearningModuleJobUnauthorized{}
}

/*
GetLearningModuleJobUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetLearningModuleJobUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get learning module job unauthorized response has a 2xx status code
func (o *GetLearningModuleJobUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get learning module job unauthorized response has a 3xx status code
func (o *GetLearningModuleJobUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get learning module job unauthorized response has a 4xx status code
func (o *GetLearningModuleJobUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get learning module job unauthorized response has a 5xx status code
func (o *GetLearningModuleJobUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get learning module job unauthorized response a status code equal to that given
func (o *GetLearningModuleJobUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetLearningModuleJobUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/learning/modules/{moduleId}/jobs/{jobId}][%d] getLearningModuleJobUnauthorized  %+v", 401, o.Payload)
}

func (o *GetLearningModuleJobUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/learning/modules/{moduleId}/jobs/{jobId}][%d] getLearningModuleJobUnauthorized  %+v", 401, o.Payload)
}

func (o *GetLearningModuleJobUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLearningModuleJobUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearningModuleJobForbidden creates a GetLearningModuleJobForbidden with default headers values
func NewGetLearningModuleJobForbidden() *GetLearningModuleJobForbidden {
	return &GetLearningModuleJobForbidden{}
}

/*
GetLearningModuleJobForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetLearningModuleJobForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get learning module job forbidden response has a 2xx status code
func (o *GetLearningModuleJobForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get learning module job forbidden response has a 3xx status code
func (o *GetLearningModuleJobForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get learning module job forbidden response has a 4xx status code
func (o *GetLearningModuleJobForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get learning module job forbidden response has a 5xx status code
func (o *GetLearningModuleJobForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get learning module job forbidden response a status code equal to that given
func (o *GetLearningModuleJobForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetLearningModuleJobForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/learning/modules/{moduleId}/jobs/{jobId}][%d] getLearningModuleJobForbidden  %+v", 403, o.Payload)
}

func (o *GetLearningModuleJobForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/learning/modules/{moduleId}/jobs/{jobId}][%d] getLearningModuleJobForbidden  %+v", 403, o.Payload)
}

func (o *GetLearningModuleJobForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLearningModuleJobForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearningModuleJobNotFound creates a GetLearningModuleJobNotFound with default headers values
func NewGetLearningModuleJobNotFound() *GetLearningModuleJobNotFound {
	return &GetLearningModuleJobNotFound{}
}

/*
GetLearningModuleJobNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetLearningModuleJobNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get learning module job not found response has a 2xx status code
func (o *GetLearningModuleJobNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get learning module job not found response has a 3xx status code
func (o *GetLearningModuleJobNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get learning module job not found response has a 4xx status code
func (o *GetLearningModuleJobNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get learning module job not found response has a 5xx status code
func (o *GetLearningModuleJobNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get learning module job not found response a status code equal to that given
func (o *GetLearningModuleJobNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetLearningModuleJobNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/learning/modules/{moduleId}/jobs/{jobId}][%d] getLearningModuleJobNotFound  %+v", 404, o.Payload)
}

func (o *GetLearningModuleJobNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/learning/modules/{moduleId}/jobs/{jobId}][%d] getLearningModuleJobNotFound  %+v", 404, o.Payload)
}

func (o *GetLearningModuleJobNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLearningModuleJobNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearningModuleJobRequestTimeout creates a GetLearningModuleJobRequestTimeout with default headers values
func NewGetLearningModuleJobRequestTimeout() *GetLearningModuleJobRequestTimeout {
	return &GetLearningModuleJobRequestTimeout{}
}

/*
GetLearningModuleJobRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetLearningModuleJobRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get learning module job request timeout response has a 2xx status code
func (o *GetLearningModuleJobRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get learning module job request timeout response has a 3xx status code
func (o *GetLearningModuleJobRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get learning module job request timeout response has a 4xx status code
func (o *GetLearningModuleJobRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get learning module job request timeout response has a 5xx status code
func (o *GetLearningModuleJobRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get learning module job request timeout response a status code equal to that given
func (o *GetLearningModuleJobRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetLearningModuleJobRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/learning/modules/{moduleId}/jobs/{jobId}][%d] getLearningModuleJobRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetLearningModuleJobRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/learning/modules/{moduleId}/jobs/{jobId}][%d] getLearningModuleJobRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetLearningModuleJobRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLearningModuleJobRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearningModuleJobRequestEntityTooLarge creates a GetLearningModuleJobRequestEntityTooLarge with default headers values
func NewGetLearningModuleJobRequestEntityTooLarge() *GetLearningModuleJobRequestEntityTooLarge {
	return &GetLearningModuleJobRequestEntityTooLarge{}
}

/*
GetLearningModuleJobRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetLearningModuleJobRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get learning module job request entity too large response has a 2xx status code
func (o *GetLearningModuleJobRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get learning module job request entity too large response has a 3xx status code
func (o *GetLearningModuleJobRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get learning module job request entity too large response has a 4xx status code
func (o *GetLearningModuleJobRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get learning module job request entity too large response has a 5xx status code
func (o *GetLearningModuleJobRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get learning module job request entity too large response a status code equal to that given
func (o *GetLearningModuleJobRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetLearningModuleJobRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/learning/modules/{moduleId}/jobs/{jobId}][%d] getLearningModuleJobRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetLearningModuleJobRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/learning/modules/{moduleId}/jobs/{jobId}][%d] getLearningModuleJobRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetLearningModuleJobRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLearningModuleJobRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearningModuleJobUnsupportedMediaType creates a GetLearningModuleJobUnsupportedMediaType with default headers values
func NewGetLearningModuleJobUnsupportedMediaType() *GetLearningModuleJobUnsupportedMediaType {
	return &GetLearningModuleJobUnsupportedMediaType{}
}

/*
GetLearningModuleJobUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetLearningModuleJobUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get learning module job unsupported media type response has a 2xx status code
func (o *GetLearningModuleJobUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get learning module job unsupported media type response has a 3xx status code
func (o *GetLearningModuleJobUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get learning module job unsupported media type response has a 4xx status code
func (o *GetLearningModuleJobUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get learning module job unsupported media type response has a 5xx status code
func (o *GetLearningModuleJobUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get learning module job unsupported media type response a status code equal to that given
func (o *GetLearningModuleJobUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetLearningModuleJobUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/learning/modules/{moduleId}/jobs/{jobId}][%d] getLearningModuleJobUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetLearningModuleJobUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/learning/modules/{moduleId}/jobs/{jobId}][%d] getLearningModuleJobUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetLearningModuleJobUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLearningModuleJobUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearningModuleJobTooManyRequests creates a GetLearningModuleJobTooManyRequests with default headers values
func NewGetLearningModuleJobTooManyRequests() *GetLearningModuleJobTooManyRequests {
	return &GetLearningModuleJobTooManyRequests{}
}

/*
GetLearningModuleJobTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetLearningModuleJobTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get learning module job too many requests response has a 2xx status code
func (o *GetLearningModuleJobTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get learning module job too many requests response has a 3xx status code
func (o *GetLearningModuleJobTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get learning module job too many requests response has a 4xx status code
func (o *GetLearningModuleJobTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get learning module job too many requests response has a 5xx status code
func (o *GetLearningModuleJobTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get learning module job too many requests response a status code equal to that given
func (o *GetLearningModuleJobTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetLearningModuleJobTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/learning/modules/{moduleId}/jobs/{jobId}][%d] getLearningModuleJobTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetLearningModuleJobTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/learning/modules/{moduleId}/jobs/{jobId}][%d] getLearningModuleJobTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetLearningModuleJobTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLearningModuleJobTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearningModuleJobInternalServerError creates a GetLearningModuleJobInternalServerError with default headers values
func NewGetLearningModuleJobInternalServerError() *GetLearningModuleJobInternalServerError {
	return &GetLearningModuleJobInternalServerError{}
}

/*
GetLearningModuleJobInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetLearningModuleJobInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get learning module job internal server error response has a 2xx status code
func (o *GetLearningModuleJobInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get learning module job internal server error response has a 3xx status code
func (o *GetLearningModuleJobInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get learning module job internal server error response has a 4xx status code
func (o *GetLearningModuleJobInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get learning module job internal server error response has a 5xx status code
func (o *GetLearningModuleJobInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get learning module job internal server error response a status code equal to that given
func (o *GetLearningModuleJobInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetLearningModuleJobInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/learning/modules/{moduleId}/jobs/{jobId}][%d] getLearningModuleJobInternalServerError  %+v", 500, o.Payload)
}

func (o *GetLearningModuleJobInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/learning/modules/{moduleId}/jobs/{jobId}][%d] getLearningModuleJobInternalServerError  %+v", 500, o.Payload)
}

func (o *GetLearningModuleJobInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLearningModuleJobInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearningModuleJobServiceUnavailable creates a GetLearningModuleJobServiceUnavailable with default headers values
func NewGetLearningModuleJobServiceUnavailable() *GetLearningModuleJobServiceUnavailable {
	return &GetLearningModuleJobServiceUnavailable{}
}

/*
GetLearningModuleJobServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetLearningModuleJobServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get learning module job service unavailable response has a 2xx status code
func (o *GetLearningModuleJobServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get learning module job service unavailable response has a 3xx status code
func (o *GetLearningModuleJobServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get learning module job service unavailable response has a 4xx status code
func (o *GetLearningModuleJobServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get learning module job service unavailable response has a 5xx status code
func (o *GetLearningModuleJobServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get learning module job service unavailable response a status code equal to that given
func (o *GetLearningModuleJobServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetLearningModuleJobServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/learning/modules/{moduleId}/jobs/{jobId}][%d] getLearningModuleJobServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetLearningModuleJobServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/learning/modules/{moduleId}/jobs/{jobId}][%d] getLearningModuleJobServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetLearningModuleJobServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLearningModuleJobServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearningModuleJobGatewayTimeout creates a GetLearningModuleJobGatewayTimeout with default headers values
func NewGetLearningModuleJobGatewayTimeout() *GetLearningModuleJobGatewayTimeout {
	return &GetLearningModuleJobGatewayTimeout{}
}

/*
GetLearningModuleJobGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetLearningModuleJobGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get learning module job gateway timeout response has a 2xx status code
func (o *GetLearningModuleJobGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get learning module job gateway timeout response has a 3xx status code
func (o *GetLearningModuleJobGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get learning module job gateway timeout response has a 4xx status code
func (o *GetLearningModuleJobGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get learning module job gateway timeout response has a 5xx status code
func (o *GetLearningModuleJobGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get learning module job gateway timeout response a status code equal to that given
func (o *GetLearningModuleJobGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetLearningModuleJobGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/learning/modules/{moduleId}/jobs/{jobId}][%d] getLearningModuleJobGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetLearningModuleJobGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/learning/modules/{moduleId}/jobs/{jobId}][%d] getLearningModuleJobGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetLearningModuleJobGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLearningModuleJobGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
