// Code generated by go-swagger; DO NOT EDIT.

package learning

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostLearningRulesQueryReader is a Reader for the PostLearningRulesQuery structure.
type PostLearningRulesQueryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostLearningRulesQueryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostLearningRulesQueryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostLearningRulesQueryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostLearningRulesQueryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostLearningRulesQueryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostLearningRulesQueryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostLearningRulesQueryRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostLearningRulesQueryRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostLearningRulesQueryUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostLearningRulesQueryTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostLearningRulesQueryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostLearningRulesQueryServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostLearningRulesQueryGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostLearningRulesQueryOK creates a PostLearningRulesQueryOK with default headers values
func NewPostLearningRulesQueryOK() *PostLearningRulesQueryOK {
	return &PostLearningRulesQueryOK{}
}

/*PostLearningRulesQueryOK handles this case with default header values.

successful operation
*/
type PostLearningRulesQueryOK struct {
	Payload *models.LearningAssignmentUserListing
}

func (o *PostLearningRulesQueryOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/rules/query][%d] postLearningRulesQueryOK  %+v", 200, o.Payload)
}

func (o *PostLearningRulesQueryOK) GetPayload() *models.LearningAssignmentUserListing {
	return o.Payload
}

func (o *PostLearningRulesQueryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LearningAssignmentUserListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearningRulesQueryBadRequest creates a PostLearningRulesQueryBadRequest with default headers values
func NewPostLearningRulesQueryBadRequest() *PostLearningRulesQueryBadRequest {
	return &PostLearningRulesQueryBadRequest{}
}

/*PostLearningRulesQueryBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostLearningRulesQueryBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PostLearningRulesQueryBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/rules/query][%d] postLearningRulesQueryBadRequest  %+v", 400, o.Payload)
}

func (o *PostLearningRulesQueryBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLearningRulesQueryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearningRulesQueryUnauthorized creates a PostLearningRulesQueryUnauthorized with default headers values
func NewPostLearningRulesQueryUnauthorized() *PostLearningRulesQueryUnauthorized {
	return &PostLearningRulesQueryUnauthorized{}
}

/*PostLearningRulesQueryUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PostLearningRulesQueryUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PostLearningRulesQueryUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/rules/query][%d] postLearningRulesQueryUnauthorized  %+v", 401, o.Payload)
}

func (o *PostLearningRulesQueryUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLearningRulesQueryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearningRulesQueryForbidden creates a PostLearningRulesQueryForbidden with default headers values
func NewPostLearningRulesQueryForbidden() *PostLearningRulesQueryForbidden {
	return &PostLearningRulesQueryForbidden{}
}

/*PostLearningRulesQueryForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PostLearningRulesQueryForbidden struct {
	Payload *models.ErrorBody
}

func (o *PostLearningRulesQueryForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/rules/query][%d] postLearningRulesQueryForbidden  %+v", 403, o.Payload)
}

func (o *PostLearningRulesQueryForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLearningRulesQueryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearningRulesQueryNotFound creates a PostLearningRulesQueryNotFound with default headers values
func NewPostLearningRulesQueryNotFound() *PostLearningRulesQueryNotFound {
	return &PostLearningRulesQueryNotFound{}
}

/*PostLearningRulesQueryNotFound handles this case with default header values.

The requested resource was not found.
*/
type PostLearningRulesQueryNotFound struct {
	Payload *models.ErrorBody
}

func (o *PostLearningRulesQueryNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/rules/query][%d] postLearningRulesQueryNotFound  %+v", 404, o.Payload)
}

func (o *PostLearningRulesQueryNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLearningRulesQueryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearningRulesQueryRequestTimeout creates a PostLearningRulesQueryRequestTimeout with default headers values
func NewPostLearningRulesQueryRequestTimeout() *PostLearningRulesQueryRequestTimeout {
	return &PostLearningRulesQueryRequestTimeout{}
}

/*PostLearningRulesQueryRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostLearningRulesQueryRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostLearningRulesQueryRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/rules/query][%d] postLearningRulesQueryRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostLearningRulesQueryRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLearningRulesQueryRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearningRulesQueryRequestEntityTooLarge creates a PostLearningRulesQueryRequestEntityTooLarge with default headers values
func NewPostLearningRulesQueryRequestEntityTooLarge() *PostLearningRulesQueryRequestEntityTooLarge {
	return &PostLearningRulesQueryRequestEntityTooLarge{}
}

/*PostLearningRulesQueryRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PostLearningRulesQueryRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PostLearningRulesQueryRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/rules/query][%d] postLearningRulesQueryRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostLearningRulesQueryRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLearningRulesQueryRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearningRulesQueryUnsupportedMediaType creates a PostLearningRulesQueryUnsupportedMediaType with default headers values
func NewPostLearningRulesQueryUnsupportedMediaType() *PostLearningRulesQueryUnsupportedMediaType {
	return &PostLearningRulesQueryUnsupportedMediaType{}
}

/*PostLearningRulesQueryUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostLearningRulesQueryUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PostLearningRulesQueryUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/rules/query][%d] postLearningRulesQueryUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostLearningRulesQueryUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLearningRulesQueryUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearningRulesQueryTooManyRequests creates a PostLearningRulesQueryTooManyRequests with default headers values
func NewPostLearningRulesQueryTooManyRequests() *PostLearningRulesQueryTooManyRequests {
	return &PostLearningRulesQueryTooManyRequests{}
}

/*PostLearningRulesQueryTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostLearningRulesQueryTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PostLearningRulesQueryTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/rules/query][%d] postLearningRulesQueryTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostLearningRulesQueryTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLearningRulesQueryTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearningRulesQueryInternalServerError creates a PostLearningRulesQueryInternalServerError with default headers values
func NewPostLearningRulesQueryInternalServerError() *PostLearningRulesQueryInternalServerError {
	return &PostLearningRulesQueryInternalServerError{}
}

/*PostLearningRulesQueryInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostLearningRulesQueryInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PostLearningRulesQueryInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/rules/query][%d] postLearningRulesQueryInternalServerError  %+v", 500, o.Payload)
}

func (o *PostLearningRulesQueryInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLearningRulesQueryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearningRulesQueryServiceUnavailable creates a PostLearningRulesQueryServiceUnavailable with default headers values
func NewPostLearningRulesQueryServiceUnavailable() *PostLearningRulesQueryServiceUnavailable {
	return &PostLearningRulesQueryServiceUnavailable{}
}

/*PostLearningRulesQueryServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostLearningRulesQueryServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PostLearningRulesQueryServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/rules/query][%d] postLearningRulesQueryServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostLearningRulesQueryServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLearningRulesQueryServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearningRulesQueryGatewayTimeout creates a PostLearningRulesQueryGatewayTimeout with default headers values
func NewPostLearningRulesQueryGatewayTimeout() *PostLearningRulesQueryGatewayTimeout {
	return &PostLearningRulesQueryGatewayTimeout{}
}

/*PostLearningRulesQueryGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PostLearningRulesQueryGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostLearningRulesQueryGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/learning/rules/query][%d] postLearningRulesQueryGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostLearningRulesQueryGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLearningRulesQueryGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
