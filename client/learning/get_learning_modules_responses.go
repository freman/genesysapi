// Code generated by go-swagger; DO NOT EDIT.

package learning

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetLearningModulesReader is a Reader for the GetLearningModules structure.
type GetLearningModulesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLearningModulesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLearningModulesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetLearningModulesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetLearningModulesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetLearningModulesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetLearningModulesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetLearningModulesRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetLearningModulesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetLearningModulesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetLearningModulesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetLearningModulesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetLearningModulesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetLearningModulesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetLearningModulesOK creates a GetLearningModulesOK with default headers values
func NewGetLearningModulesOK() *GetLearningModulesOK {
	return &GetLearningModulesOK{}
}

/*
GetLearningModulesOK describes a response with status code 200, with default header values.

successful operation
*/
type GetLearningModulesOK struct {
	Payload *models.LearningModulesDomainEntityListing
}

// IsSuccess returns true when this get learning modules o k response has a 2xx status code
func (o *GetLearningModulesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get learning modules o k response has a 3xx status code
func (o *GetLearningModulesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get learning modules o k response has a 4xx status code
func (o *GetLearningModulesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get learning modules o k response has a 5xx status code
func (o *GetLearningModulesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get learning modules o k response a status code equal to that given
func (o *GetLearningModulesOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetLearningModulesOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/learning/modules][%d] getLearningModulesOK  %+v", 200, o.Payload)
}

func (o *GetLearningModulesOK) String() string {
	return fmt.Sprintf("[GET /api/v2/learning/modules][%d] getLearningModulesOK  %+v", 200, o.Payload)
}

func (o *GetLearningModulesOK) GetPayload() *models.LearningModulesDomainEntityListing {
	return o.Payload
}

func (o *GetLearningModulesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LearningModulesDomainEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearningModulesBadRequest creates a GetLearningModulesBadRequest with default headers values
func NewGetLearningModulesBadRequest() *GetLearningModulesBadRequest {
	return &GetLearningModulesBadRequest{}
}

/*
GetLearningModulesBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetLearningModulesBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get learning modules bad request response has a 2xx status code
func (o *GetLearningModulesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get learning modules bad request response has a 3xx status code
func (o *GetLearningModulesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get learning modules bad request response has a 4xx status code
func (o *GetLearningModulesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get learning modules bad request response has a 5xx status code
func (o *GetLearningModulesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get learning modules bad request response a status code equal to that given
func (o *GetLearningModulesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetLearningModulesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/learning/modules][%d] getLearningModulesBadRequest  %+v", 400, o.Payload)
}

func (o *GetLearningModulesBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/learning/modules][%d] getLearningModulesBadRequest  %+v", 400, o.Payload)
}

func (o *GetLearningModulesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLearningModulesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearningModulesUnauthorized creates a GetLearningModulesUnauthorized with default headers values
func NewGetLearningModulesUnauthorized() *GetLearningModulesUnauthorized {
	return &GetLearningModulesUnauthorized{}
}

/*
GetLearningModulesUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetLearningModulesUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get learning modules unauthorized response has a 2xx status code
func (o *GetLearningModulesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get learning modules unauthorized response has a 3xx status code
func (o *GetLearningModulesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get learning modules unauthorized response has a 4xx status code
func (o *GetLearningModulesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get learning modules unauthorized response has a 5xx status code
func (o *GetLearningModulesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get learning modules unauthorized response a status code equal to that given
func (o *GetLearningModulesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetLearningModulesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/learning/modules][%d] getLearningModulesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetLearningModulesUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/learning/modules][%d] getLearningModulesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetLearningModulesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLearningModulesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearningModulesForbidden creates a GetLearningModulesForbidden with default headers values
func NewGetLearningModulesForbidden() *GetLearningModulesForbidden {
	return &GetLearningModulesForbidden{}
}

/*
GetLearningModulesForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetLearningModulesForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get learning modules forbidden response has a 2xx status code
func (o *GetLearningModulesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get learning modules forbidden response has a 3xx status code
func (o *GetLearningModulesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get learning modules forbidden response has a 4xx status code
func (o *GetLearningModulesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get learning modules forbidden response has a 5xx status code
func (o *GetLearningModulesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get learning modules forbidden response a status code equal to that given
func (o *GetLearningModulesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetLearningModulesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/learning/modules][%d] getLearningModulesForbidden  %+v", 403, o.Payload)
}

func (o *GetLearningModulesForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/learning/modules][%d] getLearningModulesForbidden  %+v", 403, o.Payload)
}

func (o *GetLearningModulesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLearningModulesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearningModulesNotFound creates a GetLearningModulesNotFound with default headers values
func NewGetLearningModulesNotFound() *GetLearningModulesNotFound {
	return &GetLearningModulesNotFound{}
}

/*
GetLearningModulesNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetLearningModulesNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get learning modules not found response has a 2xx status code
func (o *GetLearningModulesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get learning modules not found response has a 3xx status code
func (o *GetLearningModulesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get learning modules not found response has a 4xx status code
func (o *GetLearningModulesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get learning modules not found response has a 5xx status code
func (o *GetLearningModulesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get learning modules not found response a status code equal to that given
func (o *GetLearningModulesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetLearningModulesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/learning/modules][%d] getLearningModulesNotFound  %+v", 404, o.Payload)
}

func (o *GetLearningModulesNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/learning/modules][%d] getLearningModulesNotFound  %+v", 404, o.Payload)
}

func (o *GetLearningModulesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLearningModulesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearningModulesRequestTimeout creates a GetLearningModulesRequestTimeout with default headers values
func NewGetLearningModulesRequestTimeout() *GetLearningModulesRequestTimeout {
	return &GetLearningModulesRequestTimeout{}
}

/*
GetLearningModulesRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetLearningModulesRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get learning modules request timeout response has a 2xx status code
func (o *GetLearningModulesRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get learning modules request timeout response has a 3xx status code
func (o *GetLearningModulesRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get learning modules request timeout response has a 4xx status code
func (o *GetLearningModulesRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get learning modules request timeout response has a 5xx status code
func (o *GetLearningModulesRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get learning modules request timeout response a status code equal to that given
func (o *GetLearningModulesRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetLearningModulesRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/learning/modules][%d] getLearningModulesRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetLearningModulesRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/learning/modules][%d] getLearningModulesRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetLearningModulesRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLearningModulesRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearningModulesRequestEntityTooLarge creates a GetLearningModulesRequestEntityTooLarge with default headers values
func NewGetLearningModulesRequestEntityTooLarge() *GetLearningModulesRequestEntityTooLarge {
	return &GetLearningModulesRequestEntityTooLarge{}
}

/*
GetLearningModulesRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetLearningModulesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get learning modules request entity too large response has a 2xx status code
func (o *GetLearningModulesRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get learning modules request entity too large response has a 3xx status code
func (o *GetLearningModulesRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get learning modules request entity too large response has a 4xx status code
func (o *GetLearningModulesRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get learning modules request entity too large response has a 5xx status code
func (o *GetLearningModulesRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get learning modules request entity too large response a status code equal to that given
func (o *GetLearningModulesRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetLearningModulesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/learning/modules][%d] getLearningModulesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetLearningModulesRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/learning/modules][%d] getLearningModulesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetLearningModulesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLearningModulesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearningModulesUnsupportedMediaType creates a GetLearningModulesUnsupportedMediaType with default headers values
func NewGetLearningModulesUnsupportedMediaType() *GetLearningModulesUnsupportedMediaType {
	return &GetLearningModulesUnsupportedMediaType{}
}

/*
GetLearningModulesUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetLearningModulesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get learning modules unsupported media type response has a 2xx status code
func (o *GetLearningModulesUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get learning modules unsupported media type response has a 3xx status code
func (o *GetLearningModulesUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get learning modules unsupported media type response has a 4xx status code
func (o *GetLearningModulesUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get learning modules unsupported media type response has a 5xx status code
func (o *GetLearningModulesUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get learning modules unsupported media type response a status code equal to that given
func (o *GetLearningModulesUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetLearningModulesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/learning/modules][%d] getLearningModulesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetLearningModulesUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/learning/modules][%d] getLearningModulesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetLearningModulesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLearningModulesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearningModulesTooManyRequests creates a GetLearningModulesTooManyRequests with default headers values
func NewGetLearningModulesTooManyRequests() *GetLearningModulesTooManyRequests {
	return &GetLearningModulesTooManyRequests{}
}

/*
GetLearningModulesTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetLearningModulesTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get learning modules too many requests response has a 2xx status code
func (o *GetLearningModulesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get learning modules too many requests response has a 3xx status code
func (o *GetLearningModulesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get learning modules too many requests response has a 4xx status code
func (o *GetLearningModulesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get learning modules too many requests response has a 5xx status code
func (o *GetLearningModulesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get learning modules too many requests response a status code equal to that given
func (o *GetLearningModulesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetLearningModulesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/learning/modules][%d] getLearningModulesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetLearningModulesTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/learning/modules][%d] getLearningModulesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetLearningModulesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLearningModulesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearningModulesInternalServerError creates a GetLearningModulesInternalServerError with default headers values
func NewGetLearningModulesInternalServerError() *GetLearningModulesInternalServerError {
	return &GetLearningModulesInternalServerError{}
}

/*
GetLearningModulesInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetLearningModulesInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get learning modules internal server error response has a 2xx status code
func (o *GetLearningModulesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get learning modules internal server error response has a 3xx status code
func (o *GetLearningModulesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get learning modules internal server error response has a 4xx status code
func (o *GetLearningModulesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get learning modules internal server error response has a 5xx status code
func (o *GetLearningModulesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get learning modules internal server error response a status code equal to that given
func (o *GetLearningModulesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetLearningModulesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/learning/modules][%d] getLearningModulesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetLearningModulesInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/learning/modules][%d] getLearningModulesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetLearningModulesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLearningModulesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearningModulesServiceUnavailable creates a GetLearningModulesServiceUnavailable with default headers values
func NewGetLearningModulesServiceUnavailable() *GetLearningModulesServiceUnavailable {
	return &GetLearningModulesServiceUnavailable{}
}

/*
GetLearningModulesServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetLearningModulesServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get learning modules service unavailable response has a 2xx status code
func (o *GetLearningModulesServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get learning modules service unavailable response has a 3xx status code
func (o *GetLearningModulesServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get learning modules service unavailable response has a 4xx status code
func (o *GetLearningModulesServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get learning modules service unavailable response has a 5xx status code
func (o *GetLearningModulesServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get learning modules service unavailable response a status code equal to that given
func (o *GetLearningModulesServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetLearningModulesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/learning/modules][%d] getLearningModulesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetLearningModulesServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/learning/modules][%d] getLearningModulesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetLearningModulesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLearningModulesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearningModulesGatewayTimeout creates a GetLearningModulesGatewayTimeout with default headers values
func NewGetLearningModulesGatewayTimeout() *GetLearningModulesGatewayTimeout {
	return &GetLearningModulesGatewayTimeout{}
}

/*
GetLearningModulesGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetLearningModulesGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get learning modules gateway timeout response has a 2xx status code
func (o *GetLearningModulesGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get learning modules gateway timeout response has a 3xx status code
func (o *GetLearningModulesGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get learning modules gateway timeout response has a 4xx status code
func (o *GetLearningModulesGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get learning modules gateway timeout response has a 5xx status code
func (o *GetLearningModulesGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get learning modules gateway timeout response a status code equal to that given
func (o *GetLearningModulesGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetLearningModulesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/learning/modules][%d] getLearningModulesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetLearningModulesGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/learning/modules][%d] getLearningModulesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetLearningModulesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLearningModulesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
