// Code generated by go-swagger; DO NOT EDIT.

package textbots

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// NewPostTextbotsBotflowsSessionTurnsParams creates a new PostTextbotsBotflowsSessionTurnsParams object
// with the default values initialized.
func NewPostTextbotsBotflowsSessionTurnsParams() *PostTextbotsBotflowsSessionTurnsParams {
	var ()
	return &PostTextbotsBotflowsSessionTurnsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostTextbotsBotflowsSessionTurnsParamsWithTimeout creates a new PostTextbotsBotflowsSessionTurnsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostTextbotsBotflowsSessionTurnsParamsWithTimeout(timeout time.Duration) *PostTextbotsBotflowsSessionTurnsParams {
	var ()
	return &PostTextbotsBotflowsSessionTurnsParams{

		timeout: timeout,
	}
}

// NewPostTextbotsBotflowsSessionTurnsParamsWithContext creates a new PostTextbotsBotflowsSessionTurnsParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostTextbotsBotflowsSessionTurnsParamsWithContext(ctx context.Context) *PostTextbotsBotflowsSessionTurnsParams {
	var ()
	return &PostTextbotsBotflowsSessionTurnsParams{

		Context: ctx,
	}
}

// NewPostTextbotsBotflowsSessionTurnsParamsWithHTTPClient creates a new PostTextbotsBotflowsSessionTurnsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostTextbotsBotflowsSessionTurnsParamsWithHTTPClient(client *http.Client) *PostTextbotsBotflowsSessionTurnsParams {
	var ()
	return &PostTextbotsBotflowsSessionTurnsParams{
		HTTPClient: client,
	}
}

/*PostTextbotsBotflowsSessionTurnsParams contains all the parameters to send to the API endpoint
for the post textbots botflows session turns operation typically these are written to a http.Request
*/
type PostTextbotsBotflowsSessionTurnsParams struct {

	/*SessionID
	  The bot flow session ID, typically obtained from 'POST /api/v2/textbots/botflows/sessions'

	*/
	SessionID string
	/*TurnRequest*/
	TurnRequest *models.TextBotFlowTurnRequest

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post textbots botflows session turns params
func (o *PostTextbotsBotflowsSessionTurnsParams) WithTimeout(timeout time.Duration) *PostTextbotsBotflowsSessionTurnsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post textbots botflows session turns params
func (o *PostTextbotsBotflowsSessionTurnsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post textbots botflows session turns params
func (o *PostTextbotsBotflowsSessionTurnsParams) WithContext(ctx context.Context) *PostTextbotsBotflowsSessionTurnsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post textbots botflows session turns params
func (o *PostTextbotsBotflowsSessionTurnsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post textbots botflows session turns params
func (o *PostTextbotsBotflowsSessionTurnsParams) WithHTTPClient(client *http.Client) *PostTextbotsBotflowsSessionTurnsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post textbots botflows session turns params
func (o *PostTextbotsBotflowsSessionTurnsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSessionID adds the sessionID to the post textbots botflows session turns params
func (o *PostTextbotsBotflowsSessionTurnsParams) WithSessionID(sessionID string) *PostTextbotsBotflowsSessionTurnsParams {
	o.SetSessionID(sessionID)
	return o
}

// SetSessionID adds the sessionId to the post textbots botflows session turns params
func (o *PostTextbotsBotflowsSessionTurnsParams) SetSessionID(sessionID string) {
	o.SessionID = sessionID
}

// WithTurnRequest adds the turnRequest to the post textbots botflows session turns params
func (o *PostTextbotsBotflowsSessionTurnsParams) WithTurnRequest(turnRequest *models.TextBotFlowTurnRequest) *PostTextbotsBotflowsSessionTurnsParams {
	o.SetTurnRequest(turnRequest)
	return o
}

// SetTurnRequest adds the turnRequest to the post textbots botflows session turns params
func (o *PostTextbotsBotflowsSessionTurnsParams) SetTurnRequest(turnRequest *models.TextBotFlowTurnRequest) {
	o.TurnRequest = turnRequest
}

// WriteToRequest writes these params to a swagger request
func (o *PostTextbotsBotflowsSessionTurnsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param sessionId
	if err := r.SetPathParam("sessionId", o.SessionID); err != nil {
		return err
	}

	if o.TurnRequest != nil {
		if err := r.SetBodyParam(o.TurnRequest); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
