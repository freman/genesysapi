// Code generated by go-swagger; DO NOT EDIT.

package textbots

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostTextbotsBotflowsSessionTurnsReader is a Reader for the PostTextbotsBotflowsSessionTurns structure.
type PostTextbotsBotflowsSessionTurnsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostTextbotsBotflowsSessionTurnsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostTextbotsBotflowsSessionTurnsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostTextbotsBotflowsSessionTurnsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostTextbotsBotflowsSessionTurnsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostTextbotsBotflowsSessionTurnsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostTextbotsBotflowsSessionTurnsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostTextbotsBotflowsSessionTurnsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostTextbotsBotflowsSessionTurnsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostTextbotsBotflowsSessionTurnsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostTextbotsBotflowsSessionTurnsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostTextbotsBotflowsSessionTurnsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostTextbotsBotflowsSessionTurnsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostTextbotsBotflowsSessionTurnsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostTextbotsBotflowsSessionTurnsOK creates a PostTextbotsBotflowsSessionTurnsOK with default headers values
func NewPostTextbotsBotflowsSessionTurnsOK() *PostTextbotsBotflowsSessionTurnsOK {
	return &PostTextbotsBotflowsSessionTurnsOK{}
}

/*PostTextbotsBotflowsSessionTurnsOK handles this case with default header values.

successful operation
*/
type PostTextbotsBotflowsSessionTurnsOK struct {
	Payload *models.TextBotFlowTurnResponse
}

func (o *PostTextbotsBotflowsSessionTurnsOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/textbots/botflows/sessions/{sessionId}/turns][%d] postTextbotsBotflowsSessionTurnsOK  %+v", 200, o.Payload)
}

func (o *PostTextbotsBotflowsSessionTurnsOK) GetPayload() *models.TextBotFlowTurnResponse {
	return o.Payload
}

func (o *PostTextbotsBotflowsSessionTurnsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TextBotFlowTurnResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTextbotsBotflowsSessionTurnsBadRequest creates a PostTextbotsBotflowsSessionTurnsBadRequest with default headers values
func NewPostTextbotsBotflowsSessionTurnsBadRequest() *PostTextbotsBotflowsSessionTurnsBadRequest {
	return &PostTextbotsBotflowsSessionTurnsBadRequest{}
}

/*PostTextbotsBotflowsSessionTurnsBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostTextbotsBotflowsSessionTurnsBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PostTextbotsBotflowsSessionTurnsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/textbots/botflows/sessions/{sessionId}/turns][%d] postTextbotsBotflowsSessionTurnsBadRequest  %+v", 400, o.Payload)
}

func (o *PostTextbotsBotflowsSessionTurnsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostTextbotsBotflowsSessionTurnsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTextbotsBotflowsSessionTurnsUnauthorized creates a PostTextbotsBotflowsSessionTurnsUnauthorized with default headers values
func NewPostTextbotsBotflowsSessionTurnsUnauthorized() *PostTextbotsBotflowsSessionTurnsUnauthorized {
	return &PostTextbotsBotflowsSessionTurnsUnauthorized{}
}

/*PostTextbotsBotflowsSessionTurnsUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PostTextbotsBotflowsSessionTurnsUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PostTextbotsBotflowsSessionTurnsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/textbots/botflows/sessions/{sessionId}/turns][%d] postTextbotsBotflowsSessionTurnsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostTextbotsBotflowsSessionTurnsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostTextbotsBotflowsSessionTurnsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTextbotsBotflowsSessionTurnsForbidden creates a PostTextbotsBotflowsSessionTurnsForbidden with default headers values
func NewPostTextbotsBotflowsSessionTurnsForbidden() *PostTextbotsBotflowsSessionTurnsForbidden {
	return &PostTextbotsBotflowsSessionTurnsForbidden{}
}

/*PostTextbotsBotflowsSessionTurnsForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PostTextbotsBotflowsSessionTurnsForbidden struct {
	Payload *models.ErrorBody
}

func (o *PostTextbotsBotflowsSessionTurnsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/textbots/botflows/sessions/{sessionId}/turns][%d] postTextbotsBotflowsSessionTurnsForbidden  %+v", 403, o.Payload)
}

func (o *PostTextbotsBotflowsSessionTurnsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostTextbotsBotflowsSessionTurnsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTextbotsBotflowsSessionTurnsNotFound creates a PostTextbotsBotflowsSessionTurnsNotFound with default headers values
func NewPostTextbotsBotflowsSessionTurnsNotFound() *PostTextbotsBotflowsSessionTurnsNotFound {
	return &PostTextbotsBotflowsSessionTurnsNotFound{}
}

/*PostTextbotsBotflowsSessionTurnsNotFound handles this case with default header values.

The requested resource was not found.
*/
type PostTextbotsBotflowsSessionTurnsNotFound struct {
	Payload *models.ErrorBody
}

func (o *PostTextbotsBotflowsSessionTurnsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/textbots/botflows/sessions/{sessionId}/turns][%d] postTextbotsBotflowsSessionTurnsNotFound  %+v", 404, o.Payload)
}

func (o *PostTextbotsBotflowsSessionTurnsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostTextbotsBotflowsSessionTurnsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTextbotsBotflowsSessionTurnsRequestTimeout creates a PostTextbotsBotflowsSessionTurnsRequestTimeout with default headers values
func NewPostTextbotsBotflowsSessionTurnsRequestTimeout() *PostTextbotsBotflowsSessionTurnsRequestTimeout {
	return &PostTextbotsBotflowsSessionTurnsRequestTimeout{}
}

/*PostTextbotsBotflowsSessionTurnsRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostTextbotsBotflowsSessionTurnsRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostTextbotsBotflowsSessionTurnsRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/textbots/botflows/sessions/{sessionId}/turns][%d] postTextbotsBotflowsSessionTurnsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostTextbotsBotflowsSessionTurnsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostTextbotsBotflowsSessionTurnsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTextbotsBotflowsSessionTurnsRequestEntityTooLarge creates a PostTextbotsBotflowsSessionTurnsRequestEntityTooLarge with default headers values
func NewPostTextbotsBotflowsSessionTurnsRequestEntityTooLarge() *PostTextbotsBotflowsSessionTurnsRequestEntityTooLarge {
	return &PostTextbotsBotflowsSessionTurnsRequestEntityTooLarge{}
}

/*PostTextbotsBotflowsSessionTurnsRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type PostTextbotsBotflowsSessionTurnsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PostTextbotsBotflowsSessionTurnsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/textbots/botflows/sessions/{sessionId}/turns][%d] postTextbotsBotflowsSessionTurnsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostTextbotsBotflowsSessionTurnsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostTextbotsBotflowsSessionTurnsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTextbotsBotflowsSessionTurnsUnsupportedMediaType creates a PostTextbotsBotflowsSessionTurnsUnsupportedMediaType with default headers values
func NewPostTextbotsBotflowsSessionTurnsUnsupportedMediaType() *PostTextbotsBotflowsSessionTurnsUnsupportedMediaType {
	return &PostTextbotsBotflowsSessionTurnsUnsupportedMediaType{}
}

/*PostTextbotsBotflowsSessionTurnsUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostTextbotsBotflowsSessionTurnsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PostTextbotsBotflowsSessionTurnsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/textbots/botflows/sessions/{sessionId}/turns][%d] postTextbotsBotflowsSessionTurnsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostTextbotsBotflowsSessionTurnsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostTextbotsBotflowsSessionTurnsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTextbotsBotflowsSessionTurnsTooManyRequests creates a PostTextbotsBotflowsSessionTurnsTooManyRequests with default headers values
func NewPostTextbotsBotflowsSessionTurnsTooManyRequests() *PostTextbotsBotflowsSessionTurnsTooManyRequests {
	return &PostTextbotsBotflowsSessionTurnsTooManyRequests{}
}

/*PostTextbotsBotflowsSessionTurnsTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostTextbotsBotflowsSessionTurnsTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PostTextbotsBotflowsSessionTurnsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/textbots/botflows/sessions/{sessionId}/turns][%d] postTextbotsBotflowsSessionTurnsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostTextbotsBotflowsSessionTurnsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostTextbotsBotflowsSessionTurnsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTextbotsBotflowsSessionTurnsInternalServerError creates a PostTextbotsBotflowsSessionTurnsInternalServerError with default headers values
func NewPostTextbotsBotflowsSessionTurnsInternalServerError() *PostTextbotsBotflowsSessionTurnsInternalServerError {
	return &PostTextbotsBotflowsSessionTurnsInternalServerError{}
}

/*PostTextbotsBotflowsSessionTurnsInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostTextbotsBotflowsSessionTurnsInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PostTextbotsBotflowsSessionTurnsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/textbots/botflows/sessions/{sessionId}/turns][%d] postTextbotsBotflowsSessionTurnsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostTextbotsBotflowsSessionTurnsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostTextbotsBotflowsSessionTurnsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTextbotsBotflowsSessionTurnsServiceUnavailable creates a PostTextbotsBotflowsSessionTurnsServiceUnavailable with default headers values
func NewPostTextbotsBotflowsSessionTurnsServiceUnavailable() *PostTextbotsBotflowsSessionTurnsServiceUnavailable {
	return &PostTextbotsBotflowsSessionTurnsServiceUnavailable{}
}

/*PostTextbotsBotflowsSessionTurnsServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostTextbotsBotflowsSessionTurnsServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PostTextbotsBotflowsSessionTurnsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/textbots/botflows/sessions/{sessionId}/turns][%d] postTextbotsBotflowsSessionTurnsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostTextbotsBotflowsSessionTurnsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostTextbotsBotflowsSessionTurnsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTextbotsBotflowsSessionTurnsGatewayTimeout creates a PostTextbotsBotflowsSessionTurnsGatewayTimeout with default headers values
func NewPostTextbotsBotflowsSessionTurnsGatewayTimeout() *PostTextbotsBotflowsSessionTurnsGatewayTimeout {
	return &PostTextbotsBotflowsSessionTurnsGatewayTimeout{}
}

/*PostTextbotsBotflowsSessionTurnsGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PostTextbotsBotflowsSessionTurnsGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostTextbotsBotflowsSessionTurnsGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/textbots/botflows/sessions/{sessionId}/turns][%d] postTextbotsBotflowsSessionTurnsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostTextbotsBotflowsSessionTurnsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostTextbotsBotflowsSessionTurnsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
