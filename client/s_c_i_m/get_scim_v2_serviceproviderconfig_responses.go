// Code generated by go-swagger; DO NOT EDIT.

package s_c_i_m

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetScimV2ServiceproviderconfigReader is a Reader for the GetScimV2Serviceproviderconfig structure.
type GetScimV2ServiceproviderconfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetScimV2ServiceproviderconfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetScimV2ServiceproviderconfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetScimV2ServiceproviderconfigBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetScimV2ServiceproviderconfigUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetScimV2ServiceproviderconfigForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetScimV2ServiceproviderconfigNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetScimV2ServiceproviderconfigRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetScimV2ServiceproviderconfigUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetScimV2ServiceproviderconfigTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetScimV2ServiceproviderconfigInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetScimV2ServiceproviderconfigServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetScimV2ServiceproviderconfigGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetScimV2ServiceproviderconfigOK creates a GetScimV2ServiceproviderconfigOK with default headers values
func NewGetScimV2ServiceproviderconfigOK() *GetScimV2ServiceproviderconfigOK {
	return &GetScimV2ServiceproviderconfigOK{}
}

/*GetScimV2ServiceproviderconfigOK handles this case with default header values.

successful operation
*/
type GetScimV2ServiceproviderconfigOK struct {
	Payload *models.ScimServiceProviderConfig
}

func (o *GetScimV2ServiceproviderconfigOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/scim/v2/serviceproviderconfig][%d] getScimV2ServiceproviderconfigOK  %+v", 200, o.Payload)
}

func (o *GetScimV2ServiceproviderconfigOK) GetPayload() *models.ScimServiceProviderConfig {
	return o.Payload
}

func (o *GetScimV2ServiceproviderconfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ScimServiceProviderConfig)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScimV2ServiceproviderconfigBadRequest creates a GetScimV2ServiceproviderconfigBadRequest with default headers values
func NewGetScimV2ServiceproviderconfigBadRequest() *GetScimV2ServiceproviderconfigBadRequest {
	return &GetScimV2ServiceproviderconfigBadRequest{}
}

/*GetScimV2ServiceproviderconfigBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetScimV2ServiceproviderconfigBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetScimV2ServiceproviderconfigBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/scim/v2/serviceproviderconfig][%d] getScimV2ServiceproviderconfigBadRequest  %+v", 400, o.Payload)
}

func (o *GetScimV2ServiceproviderconfigBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScimV2ServiceproviderconfigBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScimV2ServiceproviderconfigUnauthorized creates a GetScimV2ServiceproviderconfigUnauthorized with default headers values
func NewGetScimV2ServiceproviderconfigUnauthorized() *GetScimV2ServiceproviderconfigUnauthorized {
	return &GetScimV2ServiceproviderconfigUnauthorized{}
}

/*GetScimV2ServiceproviderconfigUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetScimV2ServiceproviderconfigUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetScimV2ServiceproviderconfigUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/scim/v2/serviceproviderconfig][%d] getScimV2ServiceproviderconfigUnauthorized  %+v", 401, o.Payload)
}

func (o *GetScimV2ServiceproviderconfigUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScimV2ServiceproviderconfigUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScimV2ServiceproviderconfigForbidden creates a GetScimV2ServiceproviderconfigForbidden with default headers values
func NewGetScimV2ServiceproviderconfigForbidden() *GetScimV2ServiceproviderconfigForbidden {
	return &GetScimV2ServiceproviderconfigForbidden{}
}

/*GetScimV2ServiceproviderconfigForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetScimV2ServiceproviderconfigForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetScimV2ServiceproviderconfigForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/scim/v2/serviceproviderconfig][%d] getScimV2ServiceproviderconfigForbidden  %+v", 403, o.Payload)
}

func (o *GetScimV2ServiceproviderconfigForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScimV2ServiceproviderconfigForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScimV2ServiceproviderconfigNotFound creates a GetScimV2ServiceproviderconfigNotFound with default headers values
func NewGetScimV2ServiceproviderconfigNotFound() *GetScimV2ServiceproviderconfigNotFound {
	return &GetScimV2ServiceproviderconfigNotFound{}
}

/*GetScimV2ServiceproviderconfigNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetScimV2ServiceproviderconfigNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetScimV2ServiceproviderconfigNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/scim/v2/serviceproviderconfig][%d] getScimV2ServiceproviderconfigNotFound  %+v", 404, o.Payload)
}

func (o *GetScimV2ServiceproviderconfigNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScimV2ServiceproviderconfigNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScimV2ServiceproviderconfigRequestEntityTooLarge creates a GetScimV2ServiceproviderconfigRequestEntityTooLarge with default headers values
func NewGetScimV2ServiceproviderconfigRequestEntityTooLarge() *GetScimV2ServiceproviderconfigRequestEntityTooLarge {
	return &GetScimV2ServiceproviderconfigRequestEntityTooLarge{}
}

/*GetScimV2ServiceproviderconfigRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetScimV2ServiceproviderconfigRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetScimV2ServiceproviderconfigRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/scim/v2/serviceproviderconfig][%d] getScimV2ServiceproviderconfigRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetScimV2ServiceproviderconfigRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScimV2ServiceproviderconfigRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScimV2ServiceproviderconfigUnsupportedMediaType creates a GetScimV2ServiceproviderconfigUnsupportedMediaType with default headers values
func NewGetScimV2ServiceproviderconfigUnsupportedMediaType() *GetScimV2ServiceproviderconfigUnsupportedMediaType {
	return &GetScimV2ServiceproviderconfigUnsupportedMediaType{}
}

/*GetScimV2ServiceproviderconfigUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetScimV2ServiceproviderconfigUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetScimV2ServiceproviderconfigUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/scim/v2/serviceproviderconfig][%d] getScimV2ServiceproviderconfigUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetScimV2ServiceproviderconfigUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScimV2ServiceproviderconfigUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScimV2ServiceproviderconfigTooManyRequests creates a GetScimV2ServiceproviderconfigTooManyRequests with default headers values
func NewGetScimV2ServiceproviderconfigTooManyRequests() *GetScimV2ServiceproviderconfigTooManyRequests {
	return &GetScimV2ServiceproviderconfigTooManyRequests{}
}

/*GetScimV2ServiceproviderconfigTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type GetScimV2ServiceproviderconfigTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetScimV2ServiceproviderconfigTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/scim/v2/serviceproviderconfig][%d] getScimV2ServiceproviderconfigTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetScimV2ServiceproviderconfigTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScimV2ServiceproviderconfigTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScimV2ServiceproviderconfigInternalServerError creates a GetScimV2ServiceproviderconfigInternalServerError with default headers values
func NewGetScimV2ServiceproviderconfigInternalServerError() *GetScimV2ServiceproviderconfigInternalServerError {
	return &GetScimV2ServiceproviderconfigInternalServerError{}
}

/*GetScimV2ServiceproviderconfigInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetScimV2ServiceproviderconfigInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetScimV2ServiceproviderconfigInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/scim/v2/serviceproviderconfig][%d] getScimV2ServiceproviderconfigInternalServerError  %+v", 500, o.Payload)
}

func (o *GetScimV2ServiceproviderconfigInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScimV2ServiceproviderconfigInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScimV2ServiceproviderconfigServiceUnavailable creates a GetScimV2ServiceproviderconfigServiceUnavailable with default headers values
func NewGetScimV2ServiceproviderconfigServiceUnavailable() *GetScimV2ServiceproviderconfigServiceUnavailable {
	return &GetScimV2ServiceproviderconfigServiceUnavailable{}
}

/*GetScimV2ServiceproviderconfigServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetScimV2ServiceproviderconfigServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetScimV2ServiceproviderconfigServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/scim/v2/serviceproviderconfig][%d] getScimV2ServiceproviderconfigServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetScimV2ServiceproviderconfigServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScimV2ServiceproviderconfigServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScimV2ServiceproviderconfigGatewayTimeout creates a GetScimV2ServiceproviderconfigGatewayTimeout with default headers values
func NewGetScimV2ServiceproviderconfigGatewayTimeout() *GetScimV2ServiceproviderconfigGatewayTimeout {
	return &GetScimV2ServiceproviderconfigGatewayTimeout{}
}

/*GetScimV2ServiceproviderconfigGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetScimV2ServiceproviderconfigGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetScimV2ServiceproviderconfigGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/scim/v2/serviceproviderconfig][%d] getScimV2ServiceproviderconfigGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetScimV2ServiceproviderconfigGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScimV2ServiceproviderconfigGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
