// Code generated by go-swagger; DO NOT EDIT.

package s_c_i_m

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetScimV2GroupReader is a Reader for the GetScimV2Group structure.
type GetScimV2GroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetScimV2GroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetScimV2GroupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 304:
		result := NewGetScimV2GroupNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetScimV2GroupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetScimV2GroupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetScimV2GroupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetScimV2GroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetScimV2GroupRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetScimV2GroupRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetScimV2GroupUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetScimV2GroupTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetScimV2GroupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetScimV2GroupServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetScimV2GroupGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetScimV2GroupOK creates a GetScimV2GroupOK with default headers values
func NewGetScimV2GroupOK() *GetScimV2GroupOK {
	return &GetScimV2GroupOK{}
}

/*
GetScimV2GroupOK describes a response with status code 200, with default header values.

successful operation
*/
type GetScimV2GroupOK struct {
	Payload *models.ScimV2Group
}

// IsSuccess returns true when this get scim v2 group o k response has a 2xx status code
func (o *GetScimV2GroupOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get scim v2 group o k response has a 3xx status code
func (o *GetScimV2GroupOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scim v2 group o k response has a 4xx status code
func (o *GetScimV2GroupOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get scim v2 group o k response has a 5xx status code
func (o *GetScimV2GroupOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get scim v2 group o k response a status code equal to that given
func (o *GetScimV2GroupOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetScimV2GroupOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/scim/v2/groups/{groupId}][%d] getScimV2GroupOK  %+v", 200, o.Payload)
}

func (o *GetScimV2GroupOK) String() string {
	return fmt.Sprintf("[GET /api/v2/scim/v2/groups/{groupId}][%d] getScimV2GroupOK  %+v", 200, o.Payload)
}

func (o *GetScimV2GroupOK) GetPayload() *models.ScimV2Group {
	return o.Payload
}

func (o *GetScimV2GroupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ScimV2Group)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScimV2GroupNotModified creates a GetScimV2GroupNotModified with default headers values
func NewGetScimV2GroupNotModified() *GetScimV2GroupNotModified {
	return &GetScimV2GroupNotModified{}
}

/*
GetScimV2GroupNotModified describes a response with status code 304, with default header values.

If-Non-Match header matches current version. No content returned.
*/
type GetScimV2GroupNotModified struct {
}

// IsSuccess returns true when this get scim v2 group not modified response has a 2xx status code
func (o *GetScimV2GroupNotModified) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scim v2 group not modified response has a 3xx status code
func (o *GetScimV2GroupNotModified) IsRedirect() bool {
	return true
}

// IsClientError returns true when this get scim v2 group not modified response has a 4xx status code
func (o *GetScimV2GroupNotModified) IsClientError() bool {
	return false
}

// IsServerError returns true when this get scim v2 group not modified response has a 5xx status code
func (o *GetScimV2GroupNotModified) IsServerError() bool {
	return false
}

// IsCode returns true when this get scim v2 group not modified response a status code equal to that given
func (o *GetScimV2GroupNotModified) IsCode(code int) bool {
	return code == 304
}

func (o *GetScimV2GroupNotModified) Error() string {
	return fmt.Sprintf("[GET /api/v2/scim/v2/groups/{groupId}][%d] getScimV2GroupNotModified ", 304)
}

func (o *GetScimV2GroupNotModified) String() string {
	return fmt.Sprintf("[GET /api/v2/scim/v2/groups/{groupId}][%d] getScimV2GroupNotModified ", 304)
}

func (o *GetScimV2GroupNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetScimV2GroupBadRequest creates a GetScimV2GroupBadRequest with default headers values
func NewGetScimV2GroupBadRequest() *GetScimV2GroupBadRequest {
	return &GetScimV2GroupBadRequest{}
}

/*
GetScimV2GroupBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetScimV2GroupBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get scim v2 group bad request response has a 2xx status code
func (o *GetScimV2GroupBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scim v2 group bad request response has a 3xx status code
func (o *GetScimV2GroupBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scim v2 group bad request response has a 4xx status code
func (o *GetScimV2GroupBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get scim v2 group bad request response has a 5xx status code
func (o *GetScimV2GroupBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get scim v2 group bad request response a status code equal to that given
func (o *GetScimV2GroupBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetScimV2GroupBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/scim/v2/groups/{groupId}][%d] getScimV2GroupBadRequest  %+v", 400, o.Payload)
}

func (o *GetScimV2GroupBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/scim/v2/groups/{groupId}][%d] getScimV2GroupBadRequest  %+v", 400, o.Payload)
}

func (o *GetScimV2GroupBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScimV2GroupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScimV2GroupUnauthorized creates a GetScimV2GroupUnauthorized with default headers values
func NewGetScimV2GroupUnauthorized() *GetScimV2GroupUnauthorized {
	return &GetScimV2GroupUnauthorized{}
}

/*
GetScimV2GroupUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetScimV2GroupUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get scim v2 group unauthorized response has a 2xx status code
func (o *GetScimV2GroupUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scim v2 group unauthorized response has a 3xx status code
func (o *GetScimV2GroupUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scim v2 group unauthorized response has a 4xx status code
func (o *GetScimV2GroupUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get scim v2 group unauthorized response has a 5xx status code
func (o *GetScimV2GroupUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get scim v2 group unauthorized response a status code equal to that given
func (o *GetScimV2GroupUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetScimV2GroupUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/scim/v2/groups/{groupId}][%d] getScimV2GroupUnauthorized  %+v", 401, o.Payload)
}

func (o *GetScimV2GroupUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/scim/v2/groups/{groupId}][%d] getScimV2GroupUnauthorized  %+v", 401, o.Payload)
}

func (o *GetScimV2GroupUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScimV2GroupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScimV2GroupForbidden creates a GetScimV2GroupForbidden with default headers values
func NewGetScimV2GroupForbidden() *GetScimV2GroupForbidden {
	return &GetScimV2GroupForbidden{}
}

/*
GetScimV2GroupForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetScimV2GroupForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get scim v2 group forbidden response has a 2xx status code
func (o *GetScimV2GroupForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scim v2 group forbidden response has a 3xx status code
func (o *GetScimV2GroupForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scim v2 group forbidden response has a 4xx status code
func (o *GetScimV2GroupForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get scim v2 group forbidden response has a 5xx status code
func (o *GetScimV2GroupForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get scim v2 group forbidden response a status code equal to that given
func (o *GetScimV2GroupForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetScimV2GroupForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/scim/v2/groups/{groupId}][%d] getScimV2GroupForbidden  %+v", 403, o.Payload)
}

func (o *GetScimV2GroupForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/scim/v2/groups/{groupId}][%d] getScimV2GroupForbidden  %+v", 403, o.Payload)
}

func (o *GetScimV2GroupForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScimV2GroupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScimV2GroupNotFound creates a GetScimV2GroupNotFound with default headers values
func NewGetScimV2GroupNotFound() *GetScimV2GroupNotFound {
	return &GetScimV2GroupNotFound{}
}

/*
GetScimV2GroupNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetScimV2GroupNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get scim v2 group not found response has a 2xx status code
func (o *GetScimV2GroupNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scim v2 group not found response has a 3xx status code
func (o *GetScimV2GroupNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scim v2 group not found response has a 4xx status code
func (o *GetScimV2GroupNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get scim v2 group not found response has a 5xx status code
func (o *GetScimV2GroupNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get scim v2 group not found response a status code equal to that given
func (o *GetScimV2GroupNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetScimV2GroupNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/scim/v2/groups/{groupId}][%d] getScimV2GroupNotFound  %+v", 404, o.Payload)
}

func (o *GetScimV2GroupNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/scim/v2/groups/{groupId}][%d] getScimV2GroupNotFound  %+v", 404, o.Payload)
}

func (o *GetScimV2GroupNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScimV2GroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScimV2GroupRequestTimeout creates a GetScimV2GroupRequestTimeout with default headers values
func NewGetScimV2GroupRequestTimeout() *GetScimV2GroupRequestTimeout {
	return &GetScimV2GroupRequestTimeout{}
}

/*
GetScimV2GroupRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetScimV2GroupRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get scim v2 group request timeout response has a 2xx status code
func (o *GetScimV2GroupRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scim v2 group request timeout response has a 3xx status code
func (o *GetScimV2GroupRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scim v2 group request timeout response has a 4xx status code
func (o *GetScimV2GroupRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get scim v2 group request timeout response has a 5xx status code
func (o *GetScimV2GroupRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get scim v2 group request timeout response a status code equal to that given
func (o *GetScimV2GroupRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetScimV2GroupRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/scim/v2/groups/{groupId}][%d] getScimV2GroupRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetScimV2GroupRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/scim/v2/groups/{groupId}][%d] getScimV2GroupRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetScimV2GroupRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScimV2GroupRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScimV2GroupRequestEntityTooLarge creates a GetScimV2GroupRequestEntityTooLarge with default headers values
func NewGetScimV2GroupRequestEntityTooLarge() *GetScimV2GroupRequestEntityTooLarge {
	return &GetScimV2GroupRequestEntityTooLarge{}
}

/*
GetScimV2GroupRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetScimV2GroupRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get scim v2 group request entity too large response has a 2xx status code
func (o *GetScimV2GroupRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scim v2 group request entity too large response has a 3xx status code
func (o *GetScimV2GroupRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scim v2 group request entity too large response has a 4xx status code
func (o *GetScimV2GroupRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get scim v2 group request entity too large response has a 5xx status code
func (o *GetScimV2GroupRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get scim v2 group request entity too large response a status code equal to that given
func (o *GetScimV2GroupRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetScimV2GroupRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/scim/v2/groups/{groupId}][%d] getScimV2GroupRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetScimV2GroupRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/scim/v2/groups/{groupId}][%d] getScimV2GroupRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetScimV2GroupRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScimV2GroupRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScimV2GroupUnsupportedMediaType creates a GetScimV2GroupUnsupportedMediaType with default headers values
func NewGetScimV2GroupUnsupportedMediaType() *GetScimV2GroupUnsupportedMediaType {
	return &GetScimV2GroupUnsupportedMediaType{}
}

/*
GetScimV2GroupUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetScimV2GroupUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get scim v2 group unsupported media type response has a 2xx status code
func (o *GetScimV2GroupUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scim v2 group unsupported media type response has a 3xx status code
func (o *GetScimV2GroupUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scim v2 group unsupported media type response has a 4xx status code
func (o *GetScimV2GroupUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get scim v2 group unsupported media type response has a 5xx status code
func (o *GetScimV2GroupUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get scim v2 group unsupported media type response a status code equal to that given
func (o *GetScimV2GroupUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetScimV2GroupUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/scim/v2/groups/{groupId}][%d] getScimV2GroupUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetScimV2GroupUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/scim/v2/groups/{groupId}][%d] getScimV2GroupUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetScimV2GroupUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScimV2GroupUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScimV2GroupTooManyRequests creates a GetScimV2GroupTooManyRequests with default headers values
func NewGetScimV2GroupTooManyRequests() *GetScimV2GroupTooManyRequests {
	return &GetScimV2GroupTooManyRequests{}
}

/*
GetScimV2GroupTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetScimV2GroupTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get scim v2 group too many requests response has a 2xx status code
func (o *GetScimV2GroupTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scim v2 group too many requests response has a 3xx status code
func (o *GetScimV2GroupTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scim v2 group too many requests response has a 4xx status code
func (o *GetScimV2GroupTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get scim v2 group too many requests response has a 5xx status code
func (o *GetScimV2GroupTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get scim v2 group too many requests response a status code equal to that given
func (o *GetScimV2GroupTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetScimV2GroupTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/scim/v2/groups/{groupId}][%d] getScimV2GroupTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetScimV2GroupTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/scim/v2/groups/{groupId}][%d] getScimV2GroupTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetScimV2GroupTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScimV2GroupTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScimV2GroupInternalServerError creates a GetScimV2GroupInternalServerError with default headers values
func NewGetScimV2GroupInternalServerError() *GetScimV2GroupInternalServerError {
	return &GetScimV2GroupInternalServerError{}
}

/*
GetScimV2GroupInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetScimV2GroupInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get scim v2 group internal server error response has a 2xx status code
func (o *GetScimV2GroupInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scim v2 group internal server error response has a 3xx status code
func (o *GetScimV2GroupInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scim v2 group internal server error response has a 4xx status code
func (o *GetScimV2GroupInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get scim v2 group internal server error response has a 5xx status code
func (o *GetScimV2GroupInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get scim v2 group internal server error response a status code equal to that given
func (o *GetScimV2GroupInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetScimV2GroupInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/scim/v2/groups/{groupId}][%d] getScimV2GroupInternalServerError  %+v", 500, o.Payload)
}

func (o *GetScimV2GroupInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/scim/v2/groups/{groupId}][%d] getScimV2GroupInternalServerError  %+v", 500, o.Payload)
}

func (o *GetScimV2GroupInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScimV2GroupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScimV2GroupServiceUnavailable creates a GetScimV2GroupServiceUnavailable with default headers values
func NewGetScimV2GroupServiceUnavailable() *GetScimV2GroupServiceUnavailable {
	return &GetScimV2GroupServiceUnavailable{}
}

/*
GetScimV2GroupServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetScimV2GroupServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get scim v2 group service unavailable response has a 2xx status code
func (o *GetScimV2GroupServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scim v2 group service unavailable response has a 3xx status code
func (o *GetScimV2GroupServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scim v2 group service unavailable response has a 4xx status code
func (o *GetScimV2GroupServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get scim v2 group service unavailable response has a 5xx status code
func (o *GetScimV2GroupServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get scim v2 group service unavailable response a status code equal to that given
func (o *GetScimV2GroupServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetScimV2GroupServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/scim/v2/groups/{groupId}][%d] getScimV2GroupServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetScimV2GroupServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/scim/v2/groups/{groupId}][%d] getScimV2GroupServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetScimV2GroupServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScimV2GroupServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScimV2GroupGatewayTimeout creates a GetScimV2GroupGatewayTimeout with default headers values
func NewGetScimV2GroupGatewayTimeout() *GetScimV2GroupGatewayTimeout {
	return &GetScimV2GroupGatewayTimeout{}
}

/*
GetScimV2GroupGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetScimV2GroupGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get scim v2 group gateway timeout response has a 2xx status code
func (o *GetScimV2GroupGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scim v2 group gateway timeout response has a 3xx status code
func (o *GetScimV2GroupGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scim v2 group gateway timeout response has a 4xx status code
func (o *GetScimV2GroupGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get scim v2 group gateway timeout response has a 5xx status code
func (o *GetScimV2GroupGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get scim v2 group gateway timeout response a status code equal to that given
func (o *GetScimV2GroupGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetScimV2GroupGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/scim/v2/groups/{groupId}][%d] getScimV2GroupGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetScimV2GroupGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/scim/v2/groups/{groupId}][%d] getScimV2GroupGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetScimV2GroupGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScimV2GroupGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
