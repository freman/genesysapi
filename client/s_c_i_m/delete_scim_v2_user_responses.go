// Code generated by go-swagger; DO NOT EDIT.

package s_c_i_m

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// DeleteScimV2UserReader is a Reader for the DeleteScimV2User structure.
type DeleteScimV2UserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteScimV2UserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteScimV2UserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewDeleteScimV2UserNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteScimV2UserBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteScimV2UserUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteScimV2UserForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteScimV2UserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewDeleteScimV2UserRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeleteScimV2UserConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewDeleteScimV2UserRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDeleteScimV2UserUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteScimV2UserTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteScimV2UserInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteScimV2UserServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteScimV2UserGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteScimV2UserOK creates a DeleteScimV2UserOK with default headers values
func NewDeleteScimV2UserOK() *DeleteScimV2UserOK {
	return &DeleteScimV2UserOK{}
}

/*DeleteScimV2UserOK handles this case with default header values.

successful operation
*/
type DeleteScimV2UserOK struct {
	Payload models.Empty
}

func (o *DeleteScimV2UserOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/scim/v2/users/{userId}][%d] deleteScimV2UserOK  %+v", 200, o.Payload)
}

func (o *DeleteScimV2UserOK) GetPayload() models.Empty {
	return o.Payload
}

func (o *DeleteScimV2UserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteScimV2UserNoContent creates a DeleteScimV2UserNoContent with default headers values
func NewDeleteScimV2UserNoContent() *DeleteScimV2UserNoContent {
	return &DeleteScimV2UserNoContent{}
}

/*DeleteScimV2UserNoContent handles this case with default header values.

User Deleted with no content returned.
*/
type DeleteScimV2UserNoContent struct {
}

func (o *DeleteScimV2UserNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/scim/v2/users/{userId}][%d] deleteScimV2UserNoContent ", 204)
}

func (o *DeleteScimV2UserNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteScimV2UserBadRequest creates a DeleteScimV2UserBadRequest with default headers values
func NewDeleteScimV2UserBadRequest() *DeleteScimV2UserBadRequest {
	return &DeleteScimV2UserBadRequest{}
}

/*DeleteScimV2UserBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type DeleteScimV2UserBadRequest struct {
	Payload *models.ErrorBody
}

func (o *DeleteScimV2UserBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/scim/v2/users/{userId}][%d] deleteScimV2UserBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteScimV2UserBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteScimV2UserBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteScimV2UserUnauthorized creates a DeleteScimV2UserUnauthorized with default headers values
func NewDeleteScimV2UserUnauthorized() *DeleteScimV2UserUnauthorized {
	return &DeleteScimV2UserUnauthorized{}
}

/*DeleteScimV2UserUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type DeleteScimV2UserUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *DeleteScimV2UserUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/scim/v2/users/{userId}][%d] deleteScimV2UserUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteScimV2UserUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteScimV2UserUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteScimV2UserForbidden creates a DeleteScimV2UserForbidden with default headers values
func NewDeleteScimV2UserForbidden() *DeleteScimV2UserForbidden {
	return &DeleteScimV2UserForbidden{}
}

/*DeleteScimV2UserForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type DeleteScimV2UserForbidden struct {
	Payload *models.ErrorBody
}

func (o *DeleteScimV2UserForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/scim/v2/users/{userId}][%d] deleteScimV2UserForbidden  %+v", 403, o.Payload)
}

func (o *DeleteScimV2UserForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteScimV2UserForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteScimV2UserNotFound creates a DeleteScimV2UserNotFound with default headers values
func NewDeleteScimV2UserNotFound() *DeleteScimV2UserNotFound {
	return &DeleteScimV2UserNotFound{}
}

/*DeleteScimV2UserNotFound handles this case with default header values.

The requested resource was not found.
*/
type DeleteScimV2UserNotFound struct {
	Payload *models.ErrorBody
}

func (o *DeleteScimV2UserNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/scim/v2/users/{userId}][%d] deleteScimV2UserNotFound  %+v", 404, o.Payload)
}

func (o *DeleteScimV2UserNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteScimV2UserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteScimV2UserRequestTimeout creates a DeleteScimV2UserRequestTimeout with default headers values
func NewDeleteScimV2UserRequestTimeout() *DeleteScimV2UserRequestTimeout {
	return &DeleteScimV2UserRequestTimeout{}
}

/*DeleteScimV2UserRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type DeleteScimV2UserRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *DeleteScimV2UserRequestTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/scim/v2/users/{userId}][%d] deleteScimV2UserRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteScimV2UserRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteScimV2UserRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteScimV2UserConflict creates a DeleteScimV2UserConflict with default headers values
func NewDeleteScimV2UserConflict() *DeleteScimV2UserConflict {
	return &DeleteScimV2UserConflict{}
}

/*DeleteScimV2UserConflict handles this case with default header values.

Version does not match current version.
*/
type DeleteScimV2UserConflict struct {
	Payload *models.ScimError
}

func (o *DeleteScimV2UserConflict) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/scim/v2/users/{userId}][%d] deleteScimV2UserConflict  %+v", 409, o.Payload)
}

func (o *DeleteScimV2UserConflict) GetPayload() *models.ScimError {
	return o.Payload
}

func (o *DeleteScimV2UserConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ScimError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteScimV2UserRequestEntityTooLarge creates a DeleteScimV2UserRequestEntityTooLarge with default headers values
func NewDeleteScimV2UserRequestEntityTooLarge() *DeleteScimV2UserRequestEntityTooLarge {
	return &DeleteScimV2UserRequestEntityTooLarge{}
}

/*DeleteScimV2UserRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type DeleteScimV2UserRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *DeleteScimV2UserRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/scim/v2/users/{userId}][%d] deleteScimV2UserRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteScimV2UserRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteScimV2UserRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteScimV2UserUnsupportedMediaType creates a DeleteScimV2UserUnsupportedMediaType with default headers values
func NewDeleteScimV2UserUnsupportedMediaType() *DeleteScimV2UserUnsupportedMediaType {
	return &DeleteScimV2UserUnsupportedMediaType{}
}

/*DeleteScimV2UserUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type DeleteScimV2UserUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *DeleteScimV2UserUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/scim/v2/users/{userId}][%d] deleteScimV2UserUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteScimV2UserUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteScimV2UserUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteScimV2UserTooManyRequests creates a DeleteScimV2UserTooManyRequests with default headers values
func NewDeleteScimV2UserTooManyRequests() *DeleteScimV2UserTooManyRequests {
	return &DeleteScimV2UserTooManyRequests{}
}

/*DeleteScimV2UserTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type DeleteScimV2UserTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *DeleteScimV2UserTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/scim/v2/users/{userId}][%d] deleteScimV2UserTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteScimV2UserTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteScimV2UserTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteScimV2UserInternalServerError creates a DeleteScimV2UserInternalServerError with default headers values
func NewDeleteScimV2UserInternalServerError() *DeleteScimV2UserInternalServerError {
	return &DeleteScimV2UserInternalServerError{}
}

/*DeleteScimV2UserInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type DeleteScimV2UserInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *DeleteScimV2UserInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/scim/v2/users/{userId}][%d] deleteScimV2UserInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteScimV2UserInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteScimV2UserInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteScimV2UserServiceUnavailable creates a DeleteScimV2UserServiceUnavailable with default headers values
func NewDeleteScimV2UserServiceUnavailable() *DeleteScimV2UserServiceUnavailable {
	return &DeleteScimV2UserServiceUnavailable{}
}

/*DeleteScimV2UserServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type DeleteScimV2UserServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *DeleteScimV2UserServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/scim/v2/users/{userId}][%d] deleteScimV2UserServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteScimV2UserServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteScimV2UserServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteScimV2UserGatewayTimeout creates a DeleteScimV2UserGatewayTimeout with default headers values
func NewDeleteScimV2UserGatewayTimeout() *DeleteScimV2UserGatewayTimeout {
	return &DeleteScimV2UserGatewayTimeout{}
}

/*DeleteScimV2UserGatewayTimeout handles this case with default header values.

The request timed out.
*/
type DeleteScimV2UserGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *DeleteScimV2UserGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/scim/v2/users/{userId}][%d] deleteScimV2UserGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteScimV2UserGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteScimV2UserGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
