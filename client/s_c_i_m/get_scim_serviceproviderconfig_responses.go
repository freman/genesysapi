// Code generated by go-swagger; DO NOT EDIT.

package s_c_i_m

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetScimServiceproviderconfigReader is a Reader for the GetScimServiceproviderconfig structure.
type GetScimServiceproviderconfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetScimServiceproviderconfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetScimServiceproviderconfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetScimServiceproviderconfigBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetScimServiceproviderconfigUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetScimServiceproviderconfigForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetScimServiceproviderconfigNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetScimServiceproviderconfigRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetScimServiceproviderconfigRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetScimServiceproviderconfigUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetScimServiceproviderconfigTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetScimServiceproviderconfigInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetScimServiceproviderconfigServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetScimServiceproviderconfigGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetScimServiceproviderconfigOK creates a GetScimServiceproviderconfigOK with default headers values
func NewGetScimServiceproviderconfigOK() *GetScimServiceproviderconfigOK {
	return &GetScimServiceproviderconfigOK{}
}

/*
GetScimServiceproviderconfigOK describes a response with status code 200, with default header values.

successful operation
*/
type GetScimServiceproviderconfigOK struct {
	Payload *models.ScimServiceProviderConfig
}

// IsSuccess returns true when this get scim serviceproviderconfig o k response has a 2xx status code
func (o *GetScimServiceproviderconfigOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get scim serviceproviderconfig o k response has a 3xx status code
func (o *GetScimServiceproviderconfigOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scim serviceproviderconfig o k response has a 4xx status code
func (o *GetScimServiceproviderconfigOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get scim serviceproviderconfig o k response has a 5xx status code
func (o *GetScimServiceproviderconfigOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get scim serviceproviderconfig o k response a status code equal to that given
func (o *GetScimServiceproviderconfigOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetScimServiceproviderconfigOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/scim/serviceproviderconfig][%d] getScimServiceproviderconfigOK  %+v", 200, o.Payload)
}

func (o *GetScimServiceproviderconfigOK) String() string {
	return fmt.Sprintf("[GET /api/v2/scim/serviceproviderconfig][%d] getScimServiceproviderconfigOK  %+v", 200, o.Payload)
}

func (o *GetScimServiceproviderconfigOK) GetPayload() *models.ScimServiceProviderConfig {
	return o.Payload
}

func (o *GetScimServiceproviderconfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ScimServiceProviderConfig)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScimServiceproviderconfigBadRequest creates a GetScimServiceproviderconfigBadRequest with default headers values
func NewGetScimServiceproviderconfigBadRequest() *GetScimServiceproviderconfigBadRequest {
	return &GetScimServiceproviderconfigBadRequest{}
}

/*
GetScimServiceproviderconfigBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetScimServiceproviderconfigBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get scim serviceproviderconfig bad request response has a 2xx status code
func (o *GetScimServiceproviderconfigBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scim serviceproviderconfig bad request response has a 3xx status code
func (o *GetScimServiceproviderconfigBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scim serviceproviderconfig bad request response has a 4xx status code
func (o *GetScimServiceproviderconfigBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get scim serviceproviderconfig bad request response has a 5xx status code
func (o *GetScimServiceproviderconfigBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get scim serviceproviderconfig bad request response a status code equal to that given
func (o *GetScimServiceproviderconfigBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetScimServiceproviderconfigBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/scim/serviceproviderconfig][%d] getScimServiceproviderconfigBadRequest  %+v", 400, o.Payload)
}

func (o *GetScimServiceproviderconfigBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/scim/serviceproviderconfig][%d] getScimServiceproviderconfigBadRequest  %+v", 400, o.Payload)
}

func (o *GetScimServiceproviderconfigBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScimServiceproviderconfigBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScimServiceproviderconfigUnauthorized creates a GetScimServiceproviderconfigUnauthorized with default headers values
func NewGetScimServiceproviderconfigUnauthorized() *GetScimServiceproviderconfigUnauthorized {
	return &GetScimServiceproviderconfigUnauthorized{}
}

/*
GetScimServiceproviderconfigUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetScimServiceproviderconfigUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get scim serviceproviderconfig unauthorized response has a 2xx status code
func (o *GetScimServiceproviderconfigUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scim serviceproviderconfig unauthorized response has a 3xx status code
func (o *GetScimServiceproviderconfigUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scim serviceproviderconfig unauthorized response has a 4xx status code
func (o *GetScimServiceproviderconfigUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get scim serviceproviderconfig unauthorized response has a 5xx status code
func (o *GetScimServiceproviderconfigUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get scim serviceproviderconfig unauthorized response a status code equal to that given
func (o *GetScimServiceproviderconfigUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetScimServiceproviderconfigUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/scim/serviceproviderconfig][%d] getScimServiceproviderconfigUnauthorized  %+v", 401, o.Payload)
}

func (o *GetScimServiceproviderconfigUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/scim/serviceproviderconfig][%d] getScimServiceproviderconfigUnauthorized  %+v", 401, o.Payload)
}

func (o *GetScimServiceproviderconfigUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScimServiceproviderconfigUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScimServiceproviderconfigForbidden creates a GetScimServiceproviderconfigForbidden with default headers values
func NewGetScimServiceproviderconfigForbidden() *GetScimServiceproviderconfigForbidden {
	return &GetScimServiceproviderconfigForbidden{}
}

/*
GetScimServiceproviderconfigForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetScimServiceproviderconfigForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get scim serviceproviderconfig forbidden response has a 2xx status code
func (o *GetScimServiceproviderconfigForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scim serviceproviderconfig forbidden response has a 3xx status code
func (o *GetScimServiceproviderconfigForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scim serviceproviderconfig forbidden response has a 4xx status code
func (o *GetScimServiceproviderconfigForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get scim serviceproviderconfig forbidden response has a 5xx status code
func (o *GetScimServiceproviderconfigForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get scim serviceproviderconfig forbidden response a status code equal to that given
func (o *GetScimServiceproviderconfigForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetScimServiceproviderconfigForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/scim/serviceproviderconfig][%d] getScimServiceproviderconfigForbidden  %+v", 403, o.Payload)
}

func (o *GetScimServiceproviderconfigForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/scim/serviceproviderconfig][%d] getScimServiceproviderconfigForbidden  %+v", 403, o.Payload)
}

func (o *GetScimServiceproviderconfigForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScimServiceproviderconfigForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScimServiceproviderconfigNotFound creates a GetScimServiceproviderconfigNotFound with default headers values
func NewGetScimServiceproviderconfigNotFound() *GetScimServiceproviderconfigNotFound {
	return &GetScimServiceproviderconfigNotFound{}
}

/*
GetScimServiceproviderconfigNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetScimServiceproviderconfigNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get scim serviceproviderconfig not found response has a 2xx status code
func (o *GetScimServiceproviderconfigNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scim serviceproviderconfig not found response has a 3xx status code
func (o *GetScimServiceproviderconfigNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scim serviceproviderconfig not found response has a 4xx status code
func (o *GetScimServiceproviderconfigNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get scim serviceproviderconfig not found response has a 5xx status code
func (o *GetScimServiceproviderconfigNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get scim serviceproviderconfig not found response a status code equal to that given
func (o *GetScimServiceproviderconfigNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetScimServiceproviderconfigNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/scim/serviceproviderconfig][%d] getScimServiceproviderconfigNotFound  %+v", 404, o.Payload)
}

func (o *GetScimServiceproviderconfigNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/scim/serviceproviderconfig][%d] getScimServiceproviderconfigNotFound  %+v", 404, o.Payload)
}

func (o *GetScimServiceproviderconfigNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScimServiceproviderconfigNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScimServiceproviderconfigRequestTimeout creates a GetScimServiceproviderconfigRequestTimeout with default headers values
func NewGetScimServiceproviderconfigRequestTimeout() *GetScimServiceproviderconfigRequestTimeout {
	return &GetScimServiceproviderconfigRequestTimeout{}
}

/*
GetScimServiceproviderconfigRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetScimServiceproviderconfigRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get scim serviceproviderconfig request timeout response has a 2xx status code
func (o *GetScimServiceproviderconfigRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scim serviceproviderconfig request timeout response has a 3xx status code
func (o *GetScimServiceproviderconfigRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scim serviceproviderconfig request timeout response has a 4xx status code
func (o *GetScimServiceproviderconfigRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get scim serviceproviderconfig request timeout response has a 5xx status code
func (o *GetScimServiceproviderconfigRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get scim serviceproviderconfig request timeout response a status code equal to that given
func (o *GetScimServiceproviderconfigRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetScimServiceproviderconfigRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/scim/serviceproviderconfig][%d] getScimServiceproviderconfigRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetScimServiceproviderconfigRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/scim/serviceproviderconfig][%d] getScimServiceproviderconfigRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetScimServiceproviderconfigRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScimServiceproviderconfigRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScimServiceproviderconfigRequestEntityTooLarge creates a GetScimServiceproviderconfigRequestEntityTooLarge with default headers values
func NewGetScimServiceproviderconfigRequestEntityTooLarge() *GetScimServiceproviderconfigRequestEntityTooLarge {
	return &GetScimServiceproviderconfigRequestEntityTooLarge{}
}

/*
GetScimServiceproviderconfigRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetScimServiceproviderconfigRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get scim serviceproviderconfig request entity too large response has a 2xx status code
func (o *GetScimServiceproviderconfigRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scim serviceproviderconfig request entity too large response has a 3xx status code
func (o *GetScimServiceproviderconfigRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scim serviceproviderconfig request entity too large response has a 4xx status code
func (o *GetScimServiceproviderconfigRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get scim serviceproviderconfig request entity too large response has a 5xx status code
func (o *GetScimServiceproviderconfigRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get scim serviceproviderconfig request entity too large response a status code equal to that given
func (o *GetScimServiceproviderconfigRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetScimServiceproviderconfigRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/scim/serviceproviderconfig][%d] getScimServiceproviderconfigRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetScimServiceproviderconfigRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/scim/serviceproviderconfig][%d] getScimServiceproviderconfigRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetScimServiceproviderconfigRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScimServiceproviderconfigRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScimServiceproviderconfigUnsupportedMediaType creates a GetScimServiceproviderconfigUnsupportedMediaType with default headers values
func NewGetScimServiceproviderconfigUnsupportedMediaType() *GetScimServiceproviderconfigUnsupportedMediaType {
	return &GetScimServiceproviderconfigUnsupportedMediaType{}
}

/*
GetScimServiceproviderconfigUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetScimServiceproviderconfigUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get scim serviceproviderconfig unsupported media type response has a 2xx status code
func (o *GetScimServiceproviderconfigUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scim serviceproviderconfig unsupported media type response has a 3xx status code
func (o *GetScimServiceproviderconfigUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scim serviceproviderconfig unsupported media type response has a 4xx status code
func (o *GetScimServiceproviderconfigUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get scim serviceproviderconfig unsupported media type response has a 5xx status code
func (o *GetScimServiceproviderconfigUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get scim serviceproviderconfig unsupported media type response a status code equal to that given
func (o *GetScimServiceproviderconfigUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetScimServiceproviderconfigUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/scim/serviceproviderconfig][%d] getScimServiceproviderconfigUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetScimServiceproviderconfigUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/scim/serviceproviderconfig][%d] getScimServiceproviderconfigUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetScimServiceproviderconfigUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScimServiceproviderconfigUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScimServiceproviderconfigTooManyRequests creates a GetScimServiceproviderconfigTooManyRequests with default headers values
func NewGetScimServiceproviderconfigTooManyRequests() *GetScimServiceproviderconfigTooManyRequests {
	return &GetScimServiceproviderconfigTooManyRequests{}
}

/*
GetScimServiceproviderconfigTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetScimServiceproviderconfigTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get scim serviceproviderconfig too many requests response has a 2xx status code
func (o *GetScimServiceproviderconfigTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scim serviceproviderconfig too many requests response has a 3xx status code
func (o *GetScimServiceproviderconfigTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scim serviceproviderconfig too many requests response has a 4xx status code
func (o *GetScimServiceproviderconfigTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get scim serviceproviderconfig too many requests response has a 5xx status code
func (o *GetScimServiceproviderconfigTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get scim serviceproviderconfig too many requests response a status code equal to that given
func (o *GetScimServiceproviderconfigTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetScimServiceproviderconfigTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/scim/serviceproviderconfig][%d] getScimServiceproviderconfigTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetScimServiceproviderconfigTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/scim/serviceproviderconfig][%d] getScimServiceproviderconfigTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetScimServiceproviderconfigTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScimServiceproviderconfigTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScimServiceproviderconfigInternalServerError creates a GetScimServiceproviderconfigInternalServerError with default headers values
func NewGetScimServiceproviderconfigInternalServerError() *GetScimServiceproviderconfigInternalServerError {
	return &GetScimServiceproviderconfigInternalServerError{}
}

/*
GetScimServiceproviderconfigInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetScimServiceproviderconfigInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get scim serviceproviderconfig internal server error response has a 2xx status code
func (o *GetScimServiceproviderconfigInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scim serviceproviderconfig internal server error response has a 3xx status code
func (o *GetScimServiceproviderconfigInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scim serviceproviderconfig internal server error response has a 4xx status code
func (o *GetScimServiceproviderconfigInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get scim serviceproviderconfig internal server error response has a 5xx status code
func (o *GetScimServiceproviderconfigInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get scim serviceproviderconfig internal server error response a status code equal to that given
func (o *GetScimServiceproviderconfigInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetScimServiceproviderconfigInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/scim/serviceproviderconfig][%d] getScimServiceproviderconfigInternalServerError  %+v", 500, o.Payload)
}

func (o *GetScimServiceproviderconfigInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/scim/serviceproviderconfig][%d] getScimServiceproviderconfigInternalServerError  %+v", 500, o.Payload)
}

func (o *GetScimServiceproviderconfigInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScimServiceproviderconfigInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScimServiceproviderconfigServiceUnavailable creates a GetScimServiceproviderconfigServiceUnavailable with default headers values
func NewGetScimServiceproviderconfigServiceUnavailable() *GetScimServiceproviderconfigServiceUnavailable {
	return &GetScimServiceproviderconfigServiceUnavailable{}
}

/*
GetScimServiceproviderconfigServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetScimServiceproviderconfigServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get scim serviceproviderconfig service unavailable response has a 2xx status code
func (o *GetScimServiceproviderconfigServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scim serviceproviderconfig service unavailable response has a 3xx status code
func (o *GetScimServiceproviderconfigServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scim serviceproviderconfig service unavailable response has a 4xx status code
func (o *GetScimServiceproviderconfigServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get scim serviceproviderconfig service unavailable response has a 5xx status code
func (o *GetScimServiceproviderconfigServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get scim serviceproviderconfig service unavailable response a status code equal to that given
func (o *GetScimServiceproviderconfigServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetScimServiceproviderconfigServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/scim/serviceproviderconfig][%d] getScimServiceproviderconfigServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetScimServiceproviderconfigServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/scim/serviceproviderconfig][%d] getScimServiceproviderconfigServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetScimServiceproviderconfigServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScimServiceproviderconfigServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScimServiceproviderconfigGatewayTimeout creates a GetScimServiceproviderconfigGatewayTimeout with default headers values
func NewGetScimServiceproviderconfigGatewayTimeout() *GetScimServiceproviderconfigGatewayTimeout {
	return &GetScimServiceproviderconfigGatewayTimeout{}
}

/*
GetScimServiceproviderconfigGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetScimServiceproviderconfigGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get scim serviceproviderconfig gateway timeout response has a 2xx status code
func (o *GetScimServiceproviderconfigGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scim serviceproviderconfig gateway timeout response has a 3xx status code
func (o *GetScimServiceproviderconfigGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scim serviceproviderconfig gateway timeout response has a 4xx status code
func (o *GetScimServiceproviderconfigGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get scim serviceproviderconfig gateway timeout response has a 5xx status code
func (o *GetScimServiceproviderconfigGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get scim serviceproviderconfig gateway timeout response a status code equal to that given
func (o *GetScimServiceproviderconfigGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetScimServiceproviderconfigGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/scim/serviceproviderconfig][%d] getScimServiceproviderconfigGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetScimServiceproviderconfigGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/scim/serviceproviderconfig][%d] getScimServiceproviderconfigGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetScimServiceproviderconfigGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScimServiceproviderconfigGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
