// Code generated by go-swagger; DO NOT EDIT.

package s_c_i_m

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetScimResourcetypesReader is a Reader for the GetScimResourcetypes structure.
type GetScimResourcetypesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetScimResourcetypesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetScimResourcetypesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetScimResourcetypesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetScimResourcetypesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetScimResourcetypesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetScimResourcetypesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetScimResourcetypesRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetScimResourcetypesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetScimResourcetypesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetScimResourcetypesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetScimResourcetypesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetScimResourcetypesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetScimResourcetypesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetScimResourcetypesOK creates a GetScimResourcetypesOK with default headers values
func NewGetScimResourcetypesOK() *GetScimResourcetypesOK {
	return &GetScimResourcetypesOK{}
}

/*
GetScimResourcetypesOK describes a response with status code 200, with default header values.

successful operation
*/
type GetScimResourcetypesOK struct {
	Payload *models.ScimConfigResourceTypesListResponse
}

// IsSuccess returns true when this get scim resourcetypes o k response has a 2xx status code
func (o *GetScimResourcetypesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get scim resourcetypes o k response has a 3xx status code
func (o *GetScimResourcetypesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scim resourcetypes o k response has a 4xx status code
func (o *GetScimResourcetypesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get scim resourcetypes o k response has a 5xx status code
func (o *GetScimResourcetypesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get scim resourcetypes o k response a status code equal to that given
func (o *GetScimResourcetypesOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetScimResourcetypesOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/scim/resourcetypes][%d] getScimResourcetypesOK  %+v", 200, o.Payload)
}

func (o *GetScimResourcetypesOK) String() string {
	return fmt.Sprintf("[GET /api/v2/scim/resourcetypes][%d] getScimResourcetypesOK  %+v", 200, o.Payload)
}

func (o *GetScimResourcetypesOK) GetPayload() *models.ScimConfigResourceTypesListResponse {
	return o.Payload
}

func (o *GetScimResourcetypesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ScimConfigResourceTypesListResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScimResourcetypesBadRequest creates a GetScimResourcetypesBadRequest with default headers values
func NewGetScimResourcetypesBadRequest() *GetScimResourcetypesBadRequest {
	return &GetScimResourcetypesBadRequest{}
}

/*
GetScimResourcetypesBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetScimResourcetypesBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get scim resourcetypes bad request response has a 2xx status code
func (o *GetScimResourcetypesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scim resourcetypes bad request response has a 3xx status code
func (o *GetScimResourcetypesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scim resourcetypes bad request response has a 4xx status code
func (o *GetScimResourcetypesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get scim resourcetypes bad request response has a 5xx status code
func (o *GetScimResourcetypesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get scim resourcetypes bad request response a status code equal to that given
func (o *GetScimResourcetypesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetScimResourcetypesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/scim/resourcetypes][%d] getScimResourcetypesBadRequest  %+v", 400, o.Payload)
}

func (o *GetScimResourcetypesBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/scim/resourcetypes][%d] getScimResourcetypesBadRequest  %+v", 400, o.Payload)
}

func (o *GetScimResourcetypesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScimResourcetypesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScimResourcetypesUnauthorized creates a GetScimResourcetypesUnauthorized with default headers values
func NewGetScimResourcetypesUnauthorized() *GetScimResourcetypesUnauthorized {
	return &GetScimResourcetypesUnauthorized{}
}

/*
GetScimResourcetypesUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetScimResourcetypesUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get scim resourcetypes unauthorized response has a 2xx status code
func (o *GetScimResourcetypesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scim resourcetypes unauthorized response has a 3xx status code
func (o *GetScimResourcetypesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scim resourcetypes unauthorized response has a 4xx status code
func (o *GetScimResourcetypesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get scim resourcetypes unauthorized response has a 5xx status code
func (o *GetScimResourcetypesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get scim resourcetypes unauthorized response a status code equal to that given
func (o *GetScimResourcetypesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetScimResourcetypesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/scim/resourcetypes][%d] getScimResourcetypesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetScimResourcetypesUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/scim/resourcetypes][%d] getScimResourcetypesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetScimResourcetypesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScimResourcetypesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScimResourcetypesForbidden creates a GetScimResourcetypesForbidden with default headers values
func NewGetScimResourcetypesForbidden() *GetScimResourcetypesForbidden {
	return &GetScimResourcetypesForbidden{}
}

/*
GetScimResourcetypesForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetScimResourcetypesForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get scim resourcetypes forbidden response has a 2xx status code
func (o *GetScimResourcetypesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scim resourcetypes forbidden response has a 3xx status code
func (o *GetScimResourcetypesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scim resourcetypes forbidden response has a 4xx status code
func (o *GetScimResourcetypesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get scim resourcetypes forbidden response has a 5xx status code
func (o *GetScimResourcetypesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get scim resourcetypes forbidden response a status code equal to that given
func (o *GetScimResourcetypesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetScimResourcetypesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/scim/resourcetypes][%d] getScimResourcetypesForbidden  %+v", 403, o.Payload)
}

func (o *GetScimResourcetypesForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/scim/resourcetypes][%d] getScimResourcetypesForbidden  %+v", 403, o.Payload)
}

func (o *GetScimResourcetypesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScimResourcetypesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScimResourcetypesNotFound creates a GetScimResourcetypesNotFound with default headers values
func NewGetScimResourcetypesNotFound() *GetScimResourcetypesNotFound {
	return &GetScimResourcetypesNotFound{}
}

/*
GetScimResourcetypesNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetScimResourcetypesNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get scim resourcetypes not found response has a 2xx status code
func (o *GetScimResourcetypesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scim resourcetypes not found response has a 3xx status code
func (o *GetScimResourcetypesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scim resourcetypes not found response has a 4xx status code
func (o *GetScimResourcetypesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get scim resourcetypes not found response has a 5xx status code
func (o *GetScimResourcetypesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get scim resourcetypes not found response a status code equal to that given
func (o *GetScimResourcetypesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetScimResourcetypesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/scim/resourcetypes][%d] getScimResourcetypesNotFound  %+v", 404, o.Payload)
}

func (o *GetScimResourcetypesNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/scim/resourcetypes][%d] getScimResourcetypesNotFound  %+v", 404, o.Payload)
}

func (o *GetScimResourcetypesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScimResourcetypesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScimResourcetypesRequestTimeout creates a GetScimResourcetypesRequestTimeout with default headers values
func NewGetScimResourcetypesRequestTimeout() *GetScimResourcetypesRequestTimeout {
	return &GetScimResourcetypesRequestTimeout{}
}

/*
GetScimResourcetypesRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetScimResourcetypesRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get scim resourcetypes request timeout response has a 2xx status code
func (o *GetScimResourcetypesRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scim resourcetypes request timeout response has a 3xx status code
func (o *GetScimResourcetypesRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scim resourcetypes request timeout response has a 4xx status code
func (o *GetScimResourcetypesRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get scim resourcetypes request timeout response has a 5xx status code
func (o *GetScimResourcetypesRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get scim resourcetypes request timeout response a status code equal to that given
func (o *GetScimResourcetypesRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetScimResourcetypesRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/scim/resourcetypes][%d] getScimResourcetypesRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetScimResourcetypesRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/scim/resourcetypes][%d] getScimResourcetypesRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetScimResourcetypesRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScimResourcetypesRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScimResourcetypesRequestEntityTooLarge creates a GetScimResourcetypesRequestEntityTooLarge with default headers values
func NewGetScimResourcetypesRequestEntityTooLarge() *GetScimResourcetypesRequestEntityTooLarge {
	return &GetScimResourcetypesRequestEntityTooLarge{}
}

/*
GetScimResourcetypesRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetScimResourcetypesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get scim resourcetypes request entity too large response has a 2xx status code
func (o *GetScimResourcetypesRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scim resourcetypes request entity too large response has a 3xx status code
func (o *GetScimResourcetypesRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scim resourcetypes request entity too large response has a 4xx status code
func (o *GetScimResourcetypesRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get scim resourcetypes request entity too large response has a 5xx status code
func (o *GetScimResourcetypesRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get scim resourcetypes request entity too large response a status code equal to that given
func (o *GetScimResourcetypesRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetScimResourcetypesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/scim/resourcetypes][%d] getScimResourcetypesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetScimResourcetypesRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/scim/resourcetypes][%d] getScimResourcetypesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetScimResourcetypesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScimResourcetypesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScimResourcetypesUnsupportedMediaType creates a GetScimResourcetypesUnsupportedMediaType with default headers values
func NewGetScimResourcetypesUnsupportedMediaType() *GetScimResourcetypesUnsupportedMediaType {
	return &GetScimResourcetypesUnsupportedMediaType{}
}

/*
GetScimResourcetypesUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetScimResourcetypesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get scim resourcetypes unsupported media type response has a 2xx status code
func (o *GetScimResourcetypesUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scim resourcetypes unsupported media type response has a 3xx status code
func (o *GetScimResourcetypesUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scim resourcetypes unsupported media type response has a 4xx status code
func (o *GetScimResourcetypesUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get scim resourcetypes unsupported media type response has a 5xx status code
func (o *GetScimResourcetypesUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get scim resourcetypes unsupported media type response a status code equal to that given
func (o *GetScimResourcetypesUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetScimResourcetypesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/scim/resourcetypes][%d] getScimResourcetypesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetScimResourcetypesUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/scim/resourcetypes][%d] getScimResourcetypesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetScimResourcetypesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScimResourcetypesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScimResourcetypesTooManyRequests creates a GetScimResourcetypesTooManyRequests with default headers values
func NewGetScimResourcetypesTooManyRequests() *GetScimResourcetypesTooManyRequests {
	return &GetScimResourcetypesTooManyRequests{}
}

/*
GetScimResourcetypesTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetScimResourcetypesTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get scim resourcetypes too many requests response has a 2xx status code
func (o *GetScimResourcetypesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scim resourcetypes too many requests response has a 3xx status code
func (o *GetScimResourcetypesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scim resourcetypes too many requests response has a 4xx status code
func (o *GetScimResourcetypesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get scim resourcetypes too many requests response has a 5xx status code
func (o *GetScimResourcetypesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get scim resourcetypes too many requests response a status code equal to that given
func (o *GetScimResourcetypesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetScimResourcetypesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/scim/resourcetypes][%d] getScimResourcetypesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetScimResourcetypesTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/scim/resourcetypes][%d] getScimResourcetypesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetScimResourcetypesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScimResourcetypesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScimResourcetypesInternalServerError creates a GetScimResourcetypesInternalServerError with default headers values
func NewGetScimResourcetypesInternalServerError() *GetScimResourcetypesInternalServerError {
	return &GetScimResourcetypesInternalServerError{}
}

/*
GetScimResourcetypesInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetScimResourcetypesInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get scim resourcetypes internal server error response has a 2xx status code
func (o *GetScimResourcetypesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scim resourcetypes internal server error response has a 3xx status code
func (o *GetScimResourcetypesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scim resourcetypes internal server error response has a 4xx status code
func (o *GetScimResourcetypesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get scim resourcetypes internal server error response has a 5xx status code
func (o *GetScimResourcetypesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get scim resourcetypes internal server error response a status code equal to that given
func (o *GetScimResourcetypesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetScimResourcetypesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/scim/resourcetypes][%d] getScimResourcetypesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetScimResourcetypesInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/scim/resourcetypes][%d] getScimResourcetypesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetScimResourcetypesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScimResourcetypesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScimResourcetypesServiceUnavailable creates a GetScimResourcetypesServiceUnavailable with default headers values
func NewGetScimResourcetypesServiceUnavailable() *GetScimResourcetypesServiceUnavailable {
	return &GetScimResourcetypesServiceUnavailable{}
}

/*
GetScimResourcetypesServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetScimResourcetypesServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get scim resourcetypes service unavailable response has a 2xx status code
func (o *GetScimResourcetypesServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scim resourcetypes service unavailable response has a 3xx status code
func (o *GetScimResourcetypesServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scim resourcetypes service unavailable response has a 4xx status code
func (o *GetScimResourcetypesServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get scim resourcetypes service unavailable response has a 5xx status code
func (o *GetScimResourcetypesServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get scim resourcetypes service unavailable response a status code equal to that given
func (o *GetScimResourcetypesServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetScimResourcetypesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/scim/resourcetypes][%d] getScimResourcetypesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetScimResourcetypesServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/scim/resourcetypes][%d] getScimResourcetypesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetScimResourcetypesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScimResourcetypesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScimResourcetypesGatewayTimeout creates a GetScimResourcetypesGatewayTimeout with default headers values
func NewGetScimResourcetypesGatewayTimeout() *GetScimResourcetypesGatewayTimeout {
	return &GetScimResourcetypesGatewayTimeout{}
}

/*
GetScimResourcetypesGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetScimResourcetypesGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get scim resourcetypes gateway timeout response has a 2xx status code
func (o *GetScimResourcetypesGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scim resourcetypes gateway timeout response has a 3xx status code
func (o *GetScimResourcetypesGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scim resourcetypes gateway timeout response has a 4xx status code
func (o *GetScimResourcetypesGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get scim resourcetypes gateway timeout response has a 5xx status code
func (o *GetScimResourcetypesGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get scim resourcetypes gateway timeout response a status code equal to that given
func (o *GetScimResourcetypesGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetScimResourcetypesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/scim/resourcetypes][%d] getScimResourcetypesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetScimResourcetypesGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/scim/resourcetypes][%d] getScimResourcetypesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetScimResourcetypesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScimResourcetypesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
