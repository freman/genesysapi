// Code generated by go-swagger; DO NOT EDIT.

package authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostAuthorizationSubjectBulkreplaceReader is a Reader for the PostAuthorizationSubjectBulkreplace structure.
type PostAuthorizationSubjectBulkreplaceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostAuthorizationSubjectBulkreplaceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPostAuthorizationSubjectBulkreplaceNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostAuthorizationSubjectBulkreplaceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostAuthorizationSubjectBulkreplaceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostAuthorizationSubjectBulkreplaceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostAuthorizationSubjectBulkreplaceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostAuthorizationSubjectBulkreplaceRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostAuthorizationSubjectBulkreplaceUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostAuthorizationSubjectBulkreplaceTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostAuthorizationSubjectBulkreplaceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostAuthorizationSubjectBulkreplaceServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostAuthorizationSubjectBulkreplaceGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostAuthorizationSubjectBulkreplaceNoContent creates a PostAuthorizationSubjectBulkreplaceNoContent with default headers values
func NewPostAuthorizationSubjectBulkreplaceNoContent() *PostAuthorizationSubjectBulkreplaceNoContent {
	return &PostAuthorizationSubjectBulkreplaceNoContent{}
}

/*PostAuthorizationSubjectBulkreplaceNoContent handles this case with default header values.

Bulk Grants Replaced
*/
type PostAuthorizationSubjectBulkreplaceNoContent struct {
}

func (o *PostAuthorizationSubjectBulkreplaceNoContent) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkreplace][%d] postAuthorizationSubjectBulkreplaceNoContent ", 204)
}

func (o *PostAuthorizationSubjectBulkreplaceNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostAuthorizationSubjectBulkreplaceBadRequest creates a PostAuthorizationSubjectBulkreplaceBadRequest with default headers values
func NewPostAuthorizationSubjectBulkreplaceBadRequest() *PostAuthorizationSubjectBulkreplaceBadRequest {
	return &PostAuthorizationSubjectBulkreplaceBadRequest{}
}

/*PostAuthorizationSubjectBulkreplaceBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostAuthorizationSubjectBulkreplaceBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PostAuthorizationSubjectBulkreplaceBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkreplace][%d] postAuthorizationSubjectBulkreplaceBadRequest  %+v", 400, o.Payload)
}

func (o *PostAuthorizationSubjectBulkreplaceBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationSubjectBulkreplaceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationSubjectBulkreplaceUnauthorized creates a PostAuthorizationSubjectBulkreplaceUnauthorized with default headers values
func NewPostAuthorizationSubjectBulkreplaceUnauthorized() *PostAuthorizationSubjectBulkreplaceUnauthorized {
	return &PostAuthorizationSubjectBulkreplaceUnauthorized{}
}

/*PostAuthorizationSubjectBulkreplaceUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PostAuthorizationSubjectBulkreplaceUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PostAuthorizationSubjectBulkreplaceUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkreplace][%d] postAuthorizationSubjectBulkreplaceUnauthorized  %+v", 401, o.Payload)
}

func (o *PostAuthorizationSubjectBulkreplaceUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationSubjectBulkreplaceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationSubjectBulkreplaceForbidden creates a PostAuthorizationSubjectBulkreplaceForbidden with default headers values
func NewPostAuthorizationSubjectBulkreplaceForbidden() *PostAuthorizationSubjectBulkreplaceForbidden {
	return &PostAuthorizationSubjectBulkreplaceForbidden{}
}

/*PostAuthorizationSubjectBulkreplaceForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PostAuthorizationSubjectBulkreplaceForbidden struct {
	Payload *models.ErrorBody
}

func (o *PostAuthorizationSubjectBulkreplaceForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkreplace][%d] postAuthorizationSubjectBulkreplaceForbidden  %+v", 403, o.Payload)
}

func (o *PostAuthorizationSubjectBulkreplaceForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationSubjectBulkreplaceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationSubjectBulkreplaceNotFound creates a PostAuthorizationSubjectBulkreplaceNotFound with default headers values
func NewPostAuthorizationSubjectBulkreplaceNotFound() *PostAuthorizationSubjectBulkreplaceNotFound {
	return &PostAuthorizationSubjectBulkreplaceNotFound{}
}

/*PostAuthorizationSubjectBulkreplaceNotFound handles this case with default header values.

The requested resource was not found.
*/
type PostAuthorizationSubjectBulkreplaceNotFound struct {
	Payload *models.ErrorBody
}

func (o *PostAuthorizationSubjectBulkreplaceNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkreplace][%d] postAuthorizationSubjectBulkreplaceNotFound  %+v", 404, o.Payload)
}

func (o *PostAuthorizationSubjectBulkreplaceNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationSubjectBulkreplaceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationSubjectBulkreplaceRequestEntityTooLarge creates a PostAuthorizationSubjectBulkreplaceRequestEntityTooLarge with default headers values
func NewPostAuthorizationSubjectBulkreplaceRequestEntityTooLarge() *PostAuthorizationSubjectBulkreplaceRequestEntityTooLarge {
	return &PostAuthorizationSubjectBulkreplaceRequestEntityTooLarge{}
}

/*PostAuthorizationSubjectBulkreplaceRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type PostAuthorizationSubjectBulkreplaceRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PostAuthorizationSubjectBulkreplaceRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkreplace][%d] postAuthorizationSubjectBulkreplaceRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostAuthorizationSubjectBulkreplaceRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationSubjectBulkreplaceRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationSubjectBulkreplaceUnsupportedMediaType creates a PostAuthorizationSubjectBulkreplaceUnsupportedMediaType with default headers values
func NewPostAuthorizationSubjectBulkreplaceUnsupportedMediaType() *PostAuthorizationSubjectBulkreplaceUnsupportedMediaType {
	return &PostAuthorizationSubjectBulkreplaceUnsupportedMediaType{}
}

/*PostAuthorizationSubjectBulkreplaceUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostAuthorizationSubjectBulkreplaceUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PostAuthorizationSubjectBulkreplaceUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkreplace][%d] postAuthorizationSubjectBulkreplaceUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostAuthorizationSubjectBulkreplaceUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationSubjectBulkreplaceUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationSubjectBulkreplaceTooManyRequests creates a PostAuthorizationSubjectBulkreplaceTooManyRequests with default headers values
func NewPostAuthorizationSubjectBulkreplaceTooManyRequests() *PostAuthorizationSubjectBulkreplaceTooManyRequests {
	return &PostAuthorizationSubjectBulkreplaceTooManyRequests{}
}

/*PostAuthorizationSubjectBulkreplaceTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type PostAuthorizationSubjectBulkreplaceTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PostAuthorizationSubjectBulkreplaceTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkreplace][%d] postAuthorizationSubjectBulkreplaceTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostAuthorizationSubjectBulkreplaceTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationSubjectBulkreplaceTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationSubjectBulkreplaceInternalServerError creates a PostAuthorizationSubjectBulkreplaceInternalServerError with default headers values
func NewPostAuthorizationSubjectBulkreplaceInternalServerError() *PostAuthorizationSubjectBulkreplaceInternalServerError {
	return &PostAuthorizationSubjectBulkreplaceInternalServerError{}
}

/*PostAuthorizationSubjectBulkreplaceInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostAuthorizationSubjectBulkreplaceInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PostAuthorizationSubjectBulkreplaceInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkreplace][%d] postAuthorizationSubjectBulkreplaceInternalServerError  %+v", 500, o.Payload)
}

func (o *PostAuthorizationSubjectBulkreplaceInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationSubjectBulkreplaceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationSubjectBulkreplaceServiceUnavailable creates a PostAuthorizationSubjectBulkreplaceServiceUnavailable with default headers values
func NewPostAuthorizationSubjectBulkreplaceServiceUnavailable() *PostAuthorizationSubjectBulkreplaceServiceUnavailable {
	return &PostAuthorizationSubjectBulkreplaceServiceUnavailable{}
}

/*PostAuthorizationSubjectBulkreplaceServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostAuthorizationSubjectBulkreplaceServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PostAuthorizationSubjectBulkreplaceServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkreplace][%d] postAuthorizationSubjectBulkreplaceServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostAuthorizationSubjectBulkreplaceServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationSubjectBulkreplaceServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationSubjectBulkreplaceGatewayTimeout creates a PostAuthorizationSubjectBulkreplaceGatewayTimeout with default headers values
func NewPostAuthorizationSubjectBulkreplaceGatewayTimeout() *PostAuthorizationSubjectBulkreplaceGatewayTimeout {
	return &PostAuthorizationSubjectBulkreplaceGatewayTimeout{}
}

/*PostAuthorizationSubjectBulkreplaceGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PostAuthorizationSubjectBulkreplaceGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostAuthorizationSubjectBulkreplaceGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkreplace][%d] postAuthorizationSubjectBulkreplaceGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostAuthorizationSubjectBulkreplaceGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationSubjectBulkreplaceGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
