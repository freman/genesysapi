// Code generated by go-swagger; DO NOT EDIT.

package authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutAuthorizationRolesDefaultReader is a Reader for the PutAuthorizationRolesDefault structure.
type PutAuthorizationRolesDefaultReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutAuthorizationRolesDefaultReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutAuthorizationRolesDefaultOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutAuthorizationRolesDefaultBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutAuthorizationRolesDefaultUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutAuthorizationRolesDefaultForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutAuthorizationRolesDefaultNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutAuthorizationRolesDefaultRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutAuthorizationRolesDefaultRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutAuthorizationRolesDefaultUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutAuthorizationRolesDefaultTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutAuthorizationRolesDefaultInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutAuthorizationRolesDefaultServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutAuthorizationRolesDefaultGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutAuthorizationRolesDefaultOK creates a PutAuthorizationRolesDefaultOK with default headers values
func NewPutAuthorizationRolesDefaultOK() *PutAuthorizationRolesDefaultOK {
	return &PutAuthorizationRolesDefaultOK{}
}

/*PutAuthorizationRolesDefaultOK handles this case with default header values.

successful operation
*/
type PutAuthorizationRolesDefaultOK struct {
	Payload *models.OrganizationRoleEntityListing
}

func (o *PutAuthorizationRolesDefaultOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/authorization/roles/default][%d] putAuthorizationRolesDefaultOK  %+v", 200, o.Payload)
}

func (o *PutAuthorizationRolesDefaultOK) GetPayload() *models.OrganizationRoleEntityListing {
	return o.Payload
}

func (o *PutAuthorizationRolesDefaultOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OrganizationRoleEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAuthorizationRolesDefaultBadRequest creates a PutAuthorizationRolesDefaultBadRequest with default headers values
func NewPutAuthorizationRolesDefaultBadRequest() *PutAuthorizationRolesDefaultBadRequest {
	return &PutAuthorizationRolesDefaultBadRequest{}
}

/*PutAuthorizationRolesDefaultBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutAuthorizationRolesDefaultBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PutAuthorizationRolesDefaultBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/authorization/roles/default][%d] putAuthorizationRolesDefaultBadRequest  %+v", 400, o.Payload)
}

func (o *PutAuthorizationRolesDefaultBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutAuthorizationRolesDefaultBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAuthorizationRolesDefaultUnauthorized creates a PutAuthorizationRolesDefaultUnauthorized with default headers values
func NewPutAuthorizationRolesDefaultUnauthorized() *PutAuthorizationRolesDefaultUnauthorized {
	return &PutAuthorizationRolesDefaultUnauthorized{}
}

/*PutAuthorizationRolesDefaultUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PutAuthorizationRolesDefaultUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PutAuthorizationRolesDefaultUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/authorization/roles/default][%d] putAuthorizationRolesDefaultUnauthorized  %+v", 401, o.Payload)
}

func (o *PutAuthorizationRolesDefaultUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutAuthorizationRolesDefaultUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAuthorizationRolesDefaultForbidden creates a PutAuthorizationRolesDefaultForbidden with default headers values
func NewPutAuthorizationRolesDefaultForbidden() *PutAuthorizationRolesDefaultForbidden {
	return &PutAuthorizationRolesDefaultForbidden{}
}

/*PutAuthorizationRolesDefaultForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PutAuthorizationRolesDefaultForbidden struct {
	Payload *models.ErrorBody
}

func (o *PutAuthorizationRolesDefaultForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/authorization/roles/default][%d] putAuthorizationRolesDefaultForbidden  %+v", 403, o.Payload)
}

func (o *PutAuthorizationRolesDefaultForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutAuthorizationRolesDefaultForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAuthorizationRolesDefaultNotFound creates a PutAuthorizationRolesDefaultNotFound with default headers values
func NewPutAuthorizationRolesDefaultNotFound() *PutAuthorizationRolesDefaultNotFound {
	return &PutAuthorizationRolesDefaultNotFound{}
}

/*PutAuthorizationRolesDefaultNotFound handles this case with default header values.

The requested resource was not found.
*/
type PutAuthorizationRolesDefaultNotFound struct {
	Payload *models.ErrorBody
}

func (o *PutAuthorizationRolesDefaultNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/authorization/roles/default][%d] putAuthorizationRolesDefaultNotFound  %+v", 404, o.Payload)
}

func (o *PutAuthorizationRolesDefaultNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutAuthorizationRolesDefaultNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAuthorizationRolesDefaultRequestTimeout creates a PutAuthorizationRolesDefaultRequestTimeout with default headers values
func NewPutAuthorizationRolesDefaultRequestTimeout() *PutAuthorizationRolesDefaultRequestTimeout {
	return &PutAuthorizationRolesDefaultRequestTimeout{}
}

/*PutAuthorizationRolesDefaultRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutAuthorizationRolesDefaultRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PutAuthorizationRolesDefaultRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/authorization/roles/default][%d] putAuthorizationRolesDefaultRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutAuthorizationRolesDefaultRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutAuthorizationRolesDefaultRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAuthorizationRolesDefaultRequestEntityTooLarge creates a PutAuthorizationRolesDefaultRequestEntityTooLarge with default headers values
func NewPutAuthorizationRolesDefaultRequestEntityTooLarge() *PutAuthorizationRolesDefaultRequestEntityTooLarge {
	return &PutAuthorizationRolesDefaultRequestEntityTooLarge{}
}

/*PutAuthorizationRolesDefaultRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type PutAuthorizationRolesDefaultRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PutAuthorizationRolesDefaultRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/authorization/roles/default][%d] putAuthorizationRolesDefaultRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutAuthorizationRolesDefaultRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutAuthorizationRolesDefaultRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAuthorizationRolesDefaultUnsupportedMediaType creates a PutAuthorizationRolesDefaultUnsupportedMediaType with default headers values
func NewPutAuthorizationRolesDefaultUnsupportedMediaType() *PutAuthorizationRolesDefaultUnsupportedMediaType {
	return &PutAuthorizationRolesDefaultUnsupportedMediaType{}
}

/*PutAuthorizationRolesDefaultUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutAuthorizationRolesDefaultUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PutAuthorizationRolesDefaultUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/authorization/roles/default][%d] putAuthorizationRolesDefaultUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutAuthorizationRolesDefaultUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutAuthorizationRolesDefaultUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAuthorizationRolesDefaultTooManyRequests creates a PutAuthorizationRolesDefaultTooManyRequests with default headers values
func NewPutAuthorizationRolesDefaultTooManyRequests() *PutAuthorizationRolesDefaultTooManyRequests {
	return &PutAuthorizationRolesDefaultTooManyRequests{}
}

/*PutAuthorizationRolesDefaultTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutAuthorizationRolesDefaultTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PutAuthorizationRolesDefaultTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/authorization/roles/default][%d] putAuthorizationRolesDefaultTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutAuthorizationRolesDefaultTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutAuthorizationRolesDefaultTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAuthorizationRolesDefaultInternalServerError creates a PutAuthorizationRolesDefaultInternalServerError with default headers values
func NewPutAuthorizationRolesDefaultInternalServerError() *PutAuthorizationRolesDefaultInternalServerError {
	return &PutAuthorizationRolesDefaultInternalServerError{}
}

/*PutAuthorizationRolesDefaultInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutAuthorizationRolesDefaultInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PutAuthorizationRolesDefaultInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/authorization/roles/default][%d] putAuthorizationRolesDefaultInternalServerError  %+v", 500, o.Payload)
}

func (o *PutAuthorizationRolesDefaultInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutAuthorizationRolesDefaultInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAuthorizationRolesDefaultServiceUnavailable creates a PutAuthorizationRolesDefaultServiceUnavailable with default headers values
func NewPutAuthorizationRolesDefaultServiceUnavailable() *PutAuthorizationRolesDefaultServiceUnavailable {
	return &PutAuthorizationRolesDefaultServiceUnavailable{}
}

/*PutAuthorizationRolesDefaultServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutAuthorizationRolesDefaultServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PutAuthorizationRolesDefaultServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/authorization/roles/default][%d] putAuthorizationRolesDefaultServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutAuthorizationRolesDefaultServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutAuthorizationRolesDefaultServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAuthorizationRolesDefaultGatewayTimeout creates a PutAuthorizationRolesDefaultGatewayTimeout with default headers values
func NewPutAuthorizationRolesDefaultGatewayTimeout() *PutAuthorizationRolesDefaultGatewayTimeout {
	return &PutAuthorizationRolesDefaultGatewayTimeout{}
}

/*PutAuthorizationRolesDefaultGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PutAuthorizationRolesDefaultGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PutAuthorizationRolesDefaultGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/authorization/roles/default][%d] putAuthorizationRolesDefaultGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutAuthorizationRolesDefaultGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutAuthorizationRolesDefaultGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
