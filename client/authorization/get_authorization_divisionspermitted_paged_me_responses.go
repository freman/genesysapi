// Code generated by go-swagger; DO NOT EDIT.

package authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetAuthorizationDivisionspermittedPagedMeReader is a Reader for the GetAuthorizationDivisionspermittedPagedMe structure.
type GetAuthorizationDivisionspermittedPagedMeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAuthorizationDivisionspermittedPagedMeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAuthorizationDivisionspermittedPagedMeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAuthorizationDivisionspermittedPagedMeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAuthorizationDivisionspermittedPagedMeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAuthorizationDivisionspermittedPagedMeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAuthorizationDivisionspermittedPagedMeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetAuthorizationDivisionspermittedPagedMeRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetAuthorizationDivisionspermittedPagedMeRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetAuthorizationDivisionspermittedPagedMeUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetAuthorizationDivisionspermittedPagedMeTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAuthorizationDivisionspermittedPagedMeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetAuthorizationDivisionspermittedPagedMeServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetAuthorizationDivisionspermittedPagedMeGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAuthorizationDivisionspermittedPagedMeOK creates a GetAuthorizationDivisionspermittedPagedMeOK with default headers values
func NewGetAuthorizationDivisionspermittedPagedMeOK() *GetAuthorizationDivisionspermittedPagedMeOK {
	return &GetAuthorizationDivisionspermittedPagedMeOK{}
}

/*GetAuthorizationDivisionspermittedPagedMeOK handles this case with default header values.

successful operation
*/
type GetAuthorizationDivisionspermittedPagedMeOK struct {
	Payload *models.DivsPermittedEntityListing
}

func (o *GetAuthorizationDivisionspermittedPagedMeOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisionspermitted/paged/me][%d] getAuthorizationDivisionspermittedPagedMeOK  %+v", 200, o.Payload)
}

func (o *GetAuthorizationDivisionspermittedPagedMeOK) GetPayload() *models.DivsPermittedEntityListing {
	return o.Payload
}

func (o *GetAuthorizationDivisionspermittedPagedMeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DivsPermittedEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationDivisionspermittedPagedMeBadRequest creates a GetAuthorizationDivisionspermittedPagedMeBadRequest with default headers values
func NewGetAuthorizationDivisionspermittedPagedMeBadRequest() *GetAuthorizationDivisionspermittedPagedMeBadRequest {
	return &GetAuthorizationDivisionspermittedPagedMeBadRequest{}
}

/*GetAuthorizationDivisionspermittedPagedMeBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetAuthorizationDivisionspermittedPagedMeBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetAuthorizationDivisionspermittedPagedMeBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisionspermitted/paged/me][%d] getAuthorizationDivisionspermittedPagedMeBadRequest  %+v", 400, o.Payload)
}

func (o *GetAuthorizationDivisionspermittedPagedMeBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationDivisionspermittedPagedMeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationDivisionspermittedPagedMeUnauthorized creates a GetAuthorizationDivisionspermittedPagedMeUnauthorized with default headers values
func NewGetAuthorizationDivisionspermittedPagedMeUnauthorized() *GetAuthorizationDivisionspermittedPagedMeUnauthorized {
	return &GetAuthorizationDivisionspermittedPagedMeUnauthorized{}
}

/*GetAuthorizationDivisionspermittedPagedMeUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetAuthorizationDivisionspermittedPagedMeUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetAuthorizationDivisionspermittedPagedMeUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisionspermitted/paged/me][%d] getAuthorizationDivisionspermittedPagedMeUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAuthorizationDivisionspermittedPagedMeUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationDivisionspermittedPagedMeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationDivisionspermittedPagedMeForbidden creates a GetAuthorizationDivisionspermittedPagedMeForbidden with default headers values
func NewGetAuthorizationDivisionspermittedPagedMeForbidden() *GetAuthorizationDivisionspermittedPagedMeForbidden {
	return &GetAuthorizationDivisionspermittedPagedMeForbidden{}
}

/*GetAuthorizationDivisionspermittedPagedMeForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetAuthorizationDivisionspermittedPagedMeForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetAuthorizationDivisionspermittedPagedMeForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisionspermitted/paged/me][%d] getAuthorizationDivisionspermittedPagedMeForbidden  %+v", 403, o.Payload)
}

func (o *GetAuthorizationDivisionspermittedPagedMeForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationDivisionspermittedPagedMeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationDivisionspermittedPagedMeNotFound creates a GetAuthorizationDivisionspermittedPagedMeNotFound with default headers values
func NewGetAuthorizationDivisionspermittedPagedMeNotFound() *GetAuthorizationDivisionspermittedPagedMeNotFound {
	return &GetAuthorizationDivisionspermittedPagedMeNotFound{}
}

/*GetAuthorizationDivisionspermittedPagedMeNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetAuthorizationDivisionspermittedPagedMeNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetAuthorizationDivisionspermittedPagedMeNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisionspermitted/paged/me][%d] getAuthorizationDivisionspermittedPagedMeNotFound  %+v", 404, o.Payload)
}

func (o *GetAuthorizationDivisionspermittedPagedMeNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationDivisionspermittedPagedMeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationDivisionspermittedPagedMeRequestTimeout creates a GetAuthorizationDivisionspermittedPagedMeRequestTimeout with default headers values
func NewGetAuthorizationDivisionspermittedPagedMeRequestTimeout() *GetAuthorizationDivisionspermittedPagedMeRequestTimeout {
	return &GetAuthorizationDivisionspermittedPagedMeRequestTimeout{}
}

/*GetAuthorizationDivisionspermittedPagedMeRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetAuthorizationDivisionspermittedPagedMeRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetAuthorizationDivisionspermittedPagedMeRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisionspermitted/paged/me][%d] getAuthorizationDivisionspermittedPagedMeRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetAuthorizationDivisionspermittedPagedMeRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationDivisionspermittedPagedMeRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationDivisionspermittedPagedMeRequestEntityTooLarge creates a GetAuthorizationDivisionspermittedPagedMeRequestEntityTooLarge with default headers values
func NewGetAuthorizationDivisionspermittedPagedMeRequestEntityTooLarge() *GetAuthorizationDivisionspermittedPagedMeRequestEntityTooLarge {
	return &GetAuthorizationDivisionspermittedPagedMeRequestEntityTooLarge{}
}

/*GetAuthorizationDivisionspermittedPagedMeRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetAuthorizationDivisionspermittedPagedMeRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetAuthorizationDivisionspermittedPagedMeRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisionspermitted/paged/me][%d] getAuthorizationDivisionspermittedPagedMeRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetAuthorizationDivisionspermittedPagedMeRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationDivisionspermittedPagedMeRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationDivisionspermittedPagedMeUnsupportedMediaType creates a GetAuthorizationDivisionspermittedPagedMeUnsupportedMediaType with default headers values
func NewGetAuthorizationDivisionspermittedPagedMeUnsupportedMediaType() *GetAuthorizationDivisionspermittedPagedMeUnsupportedMediaType {
	return &GetAuthorizationDivisionspermittedPagedMeUnsupportedMediaType{}
}

/*GetAuthorizationDivisionspermittedPagedMeUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetAuthorizationDivisionspermittedPagedMeUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetAuthorizationDivisionspermittedPagedMeUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisionspermitted/paged/me][%d] getAuthorizationDivisionspermittedPagedMeUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetAuthorizationDivisionspermittedPagedMeUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationDivisionspermittedPagedMeUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationDivisionspermittedPagedMeTooManyRequests creates a GetAuthorizationDivisionspermittedPagedMeTooManyRequests with default headers values
func NewGetAuthorizationDivisionspermittedPagedMeTooManyRequests() *GetAuthorizationDivisionspermittedPagedMeTooManyRequests {
	return &GetAuthorizationDivisionspermittedPagedMeTooManyRequests{}
}

/*GetAuthorizationDivisionspermittedPagedMeTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetAuthorizationDivisionspermittedPagedMeTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetAuthorizationDivisionspermittedPagedMeTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisionspermitted/paged/me][%d] getAuthorizationDivisionspermittedPagedMeTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetAuthorizationDivisionspermittedPagedMeTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationDivisionspermittedPagedMeTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationDivisionspermittedPagedMeInternalServerError creates a GetAuthorizationDivisionspermittedPagedMeInternalServerError with default headers values
func NewGetAuthorizationDivisionspermittedPagedMeInternalServerError() *GetAuthorizationDivisionspermittedPagedMeInternalServerError {
	return &GetAuthorizationDivisionspermittedPagedMeInternalServerError{}
}

/*GetAuthorizationDivisionspermittedPagedMeInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetAuthorizationDivisionspermittedPagedMeInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetAuthorizationDivisionspermittedPagedMeInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisionspermitted/paged/me][%d] getAuthorizationDivisionspermittedPagedMeInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAuthorizationDivisionspermittedPagedMeInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationDivisionspermittedPagedMeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationDivisionspermittedPagedMeServiceUnavailable creates a GetAuthorizationDivisionspermittedPagedMeServiceUnavailable with default headers values
func NewGetAuthorizationDivisionspermittedPagedMeServiceUnavailable() *GetAuthorizationDivisionspermittedPagedMeServiceUnavailable {
	return &GetAuthorizationDivisionspermittedPagedMeServiceUnavailable{}
}

/*GetAuthorizationDivisionspermittedPagedMeServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetAuthorizationDivisionspermittedPagedMeServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetAuthorizationDivisionspermittedPagedMeServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisionspermitted/paged/me][%d] getAuthorizationDivisionspermittedPagedMeServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetAuthorizationDivisionspermittedPagedMeServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationDivisionspermittedPagedMeServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationDivisionspermittedPagedMeGatewayTimeout creates a GetAuthorizationDivisionspermittedPagedMeGatewayTimeout with default headers values
func NewGetAuthorizationDivisionspermittedPagedMeGatewayTimeout() *GetAuthorizationDivisionspermittedPagedMeGatewayTimeout {
	return &GetAuthorizationDivisionspermittedPagedMeGatewayTimeout{}
}

/*GetAuthorizationDivisionspermittedPagedMeGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetAuthorizationDivisionspermittedPagedMeGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetAuthorizationDivisionspermittedPagedMeGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisionspermitted/paged/me][%d] getAuthorizationDivisionspermittedPagedMeGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetAuthorizationDivisionspermittedPagedMeGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationDivisionspermittedPagedMeGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
