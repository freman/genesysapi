// Code generated by go-swagger; DO NOT EDIT.

package authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostAuthorizationSubjectBulkremoveReader is a Reader for the PostAuthorizationSubjectBulkremove structure.
type PostAuthorizationSubjectBulkremoveReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostAuthorizationSubjectBulkremoveReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPostAuthorizationSubjectBulkremoveNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostAuthorizationSubjectBulkremoveBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostAuthorizationSubjectBulkremoveUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostAuthorizationSubjectBulkremoveForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostAuthorizationSubjectBulkremoveNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostAuthorizationSubjectBulkremoveRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostAuthorizationSubjectBulkremoveRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostAuthorizationSubjectBulkremoveUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostAuthorizationSubjectBulkremoveTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostAuthorizationSubjectBulkremoveInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostAuthorizationSubjectBulkremoveServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostAuthorizationSubjectBulkremoveGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostAuthorizationSubjectBulkremoveNoContent creates a PostAuthorizationSubjectBulkremoveNoContent with default headers values
func NewPostAuthorizationSubjectBulkremoveNoContent() *PostAuthorizationSubjectBulkremoveNoContent {
	return &PostAuthorizationSubjectBulkremoveNoContent{}
}

/*
PostAuthorizationSubjectBulkremoveNoContent describes a response with status code 204, with default header values.

Bulk Grants Deleted
*/
type PostAuthorizationSubjectBulkremoveNoContent struct {
}

// IsSuccess returns true when this post authorization subject bulkremove no content response has a 2xx status code
func (o *PostAuthorizationSubjectBulkremoveNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post authorization subject bulkremove no content response has a 3xx status code
func (o *PostAuthorizationSubjectBulkremoveNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization subject bulkremove no content response has a 4xx status code
func (o *PostAuthorizationSubjectBulkremoveNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this post authorization subject bulkremove no content response has a 5xx status code
func (o *PostAuthorizationSubjectBulkremoveNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this post authorization subject bulkremove no content response a status code equal to that given
func (o *PostAuthorizationSubjectBulkremoveNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *PostAuthorizationSubjectBulkremoveNoContent) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkremove][%d] postAuthorizationSubjectBulkremoveNoContent ", 204)
}

func (o *PostAuthorizationSubjectBulkremoveNoContent) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkremove][%d] postAuthorizationSubjectBulkremoveNoContent ", 204)
}

func (o *PostAuthorizationSubjectBulkremoveNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostAuthorizationSubjectBulkremoveBadRequest creates a PostAuthorizationSubjectBulkremoveBadRequest with default headers values
func NewPostAuthorizationSubjectBulkremoveBadRequest() *PostAuthorizationSubjectBulkremoveBadRequest {
	return &PostAuthorizationSubjectBulkremoveBadRequest{}
}

/*
PostAuthorizationSubjectBulkremoveBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostAuthorizationSubjectBulkremoveBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization subject bulkremove bad request response has a 2xx status code
func (o *PostAuthorizationSubjectBulkremoveBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization subject bulkremove bad request response has a 3xx status code
func (o *PostAuthorizationSubjectBulkremoveBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization subject bulkremove bad request response has a 4xx status code
func (o *PostAuthorizationSubjectBulkremoveBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post authorization subject bulkremove bad request response has a 5xx status code
func (o *PostAuthorizationSubjectBulkremoveBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post authorization subject bulkremove bad request response a status code equal to that given
func (o *PostAuthorizationSubjectBulkremoveBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostAuthorizationSubjectBulkremoveBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkremove][%d] postAuthorizationSubjectBulkremoveBadRequest  %+v", 400, o.Payload)
}

func (o *PostAuthorizationSubjectBulkremoveBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkremove][%d] postAuthorizationSubjectBulkremoveBadRequest  %+v", 400, o.Payload)
}

func (o *PostAuthorizationSubjectBulkremoveBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationSubjectBulkremoveBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationSubjectBulkremoveUnauthorized creates a PostAuthorizationSubjectBulkremoveUnauthorized with default headers values
func NewPostAuthorizationSubjectBulkremoveUnauthorized() *PostAuthorizationSubjectBulkremoveUnauthorized {
	return &PostAuthorizationSubjectBulkremoveUnauthorized{}
}

/*
PostAuthorizationSubjectBulkremoveUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostAuthorizationSubjectBulkremoveUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization subject bulkremove unauthorized response has a 2xx status code
func (o *PostAuthorizationSubjectBulkremoveUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization subject bulkremove unauthorized response has a 3xx status code
func (o *PostAuthorizationSubjectBulkremoveUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization subject bulkremove unauthorized response has a 4xx status code
func (o *PostAuthorizationSubjectBulkremoveUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post authorization subject bulkremove unauthorized response has a 5xx status code
func (o *PostAuthorizationSubjectBulkremoveUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post authorization subject bulkremove unauthorized response a status code equal to that given
func (o *PostAuthorizationSubjectBulkremoveUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostAuthorizationSubjectBulkremoveUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkremove][%d] postAuthorizationSubjectBulkremoveUnauthorized  %+v", 401, o.Payload)
}

func (o *PostAuthorizationSubjectBulkremoveUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkremove][%d] postAuthorizationSubjectBulkremoveUnauthorized  %+v", 401, o.Payload)
}

func (o *PostAuthorizationSubjectBulkremoveUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationSubjectBulkremoveUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationSubjectBulkremoveForbidden creates a PostAuthorizationSubjectBulkremoveForbidden with default headers values
func NewPostAuthorizationSubjectBulkremoveForbidden() *PostAuthorizationSubjectBulkremoveForbidden {
	return &PostAuthorizationSubjectBulkremoveForbidden{}
}

/*
PostAuthorizationSubjectBulkremoveForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostAuthorizationSubjectBulkremoveForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization subject bulkremove forbidden response has a 2xx status code
func (o *PostAuthorizationSubjectBulkremoveForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization subject bulkremove forbidden response has a 3xx status code
func (o *PostAuthorizationSubjectBulkremoveForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization subject bulkremove forbidden response has a 4xx status code
func (o *PostAuthorizationSubjectBulkremoveForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post authorization subject bulkremove forbidden response has a 5xx status code
func (o *PostAuthorizationSubjectBulkremoveForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post authorization subject bulkremove forbidden response a status code equal to that given
func (o *PostAuthorizationSubjectBulkremoveForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostAuthorizationSubjectBulkremoveForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkremove][%d] postAuthorizationSubjectBulkremoveForbidden  %+v", 403, o.Payload)
}

func (o *PostAuthorizationSubjectBulkremoveForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkremove][%d] postAuthorizationSubjectBulkremoveForbidden  %+v", 403, o.Payload)
}

func (o *PostAuthorizationSubjectBulkremoveForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationSubjectBulkremoveForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationSubjectBulkremoveNotFound creates a PostAuthorizationSubjectBulkremoveNotFound with default headers values
func NewPostAuthorizationSubjectBulkremoveNotFound() *PostAuthorizationSubjectBulkremoveNotFound {
	return &PostAuthorizationSubjectBulkremoveNotFound{}
}

/*
PostAuthorizationSubjectBulkremoveNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostAuthorizationSubjectBulkremoveNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization subject bulkremove not found response has a 2xx status code
func (o *PostAuthorizationSubjectBulkremoveNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization subject bulkremove not found response has a 3xx status code
func (o *PostAuthorizationSubjectBulkremoveNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization subject bulkremove not found response has a 4xx status code
func (o *PostAuthorizationSubjectBulkremoveNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post authorization subject bulkremove not found response has a 5xx status code
func (o *PostAuthorizationSubjectBulkremoveNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post authorization subject bulkremove not found response a status code equal to that given
func (o *PostAuthorizationSubjectBulkremoveNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostAuthorizationSubjectBulkremoveNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkremove][%d] postAuthorizationSubjectBulkremoveNotFound  %+v", 404, o.Payload)
}

func (o *PostAuthorizationSubjectBulkremoveNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkremove][%d] postAuthorizationSubjectBulkremoveNotFound  %+v", 404, o.Payload)
}

func (o *PostAuthorizationSubjectBulkremoveNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationSubjectBulkremoveNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationSubjectBulkremoveRequestTimeout creates a PostAuthorizationSubjectBulkremoveRequestTimeout with default headers values
func NewPostAuthorizationSubjectBulkremoveRequestTimeout() *PostAuthorizationSubjectBulkremoveRequestTimeout {
	return &PostAuthorizationSubjectBulkremoveRequestTimeout{}
}

/*
PostAuthorizationSubjectBulkremoveRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostAuthorizationSubjectBulkremoveRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization subject bulkremove request timeout response has a 2xx status code
func (o *PostAuthorizationSubjectBulkremoveRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization subject bulkremove request timeout response has a 3xx status code
func (o *PostAuthorizationSubjectBulkremoveRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization subject bulkremove request timeout response has a 4xx status code
func (o *PostAuthorizationSubjectBulkremoveRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post authorization subject bulkremove request timeout response has a 5xx status code
func (o *PostAuthorizationSubjectBulkremoveRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post authorization subject bulkremove request timeout response a status code equal to that given
func (o *PostAuthorizationSubjectBulkremoveRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostAuthorizationSubjectBulkremoveRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkremove][%d] postAuthorizationSubjectBulkremoveRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostAuthorizationSubjectBulkremoveRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkremove][%d] postAuthorizationSubjectBulkremoveRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostAuthorizationSubjectBulkremoveRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationSubjectBulkremoveRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationSubjectBulkremoveRequestEntityTooLarge creates a PostAuthorizationSubjectBulkremoveRequestEntityTooLarge with default headers values
func NewPostAuthorizationSubjectBulkremoveRequestEntityTooLarge() *PostAuthorizationSubjectBulkremoveRequestEntityTooLarge {
	return &PostAuthorizationSubjectBulkremoveRequestEntityTooLarge{}
}

/*
PostAuthorizationSubjectBulkremoveRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PostAuthorizationSubjectBulkremoveRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization subject bulkremove request entity too large response has a 2xx status code
func (o *PostAuthorizationSubjectBulkremoveRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization subject bulkremove request entity too large response has a 3xx status code
func (o *PostAuthorizationSubjectBulkremoveRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization subject bulkremove request entity too large response has a 4xx status code
func (o *PostAuthorizationSubjectBulkremoveRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post authorization subject bulkremove request entity too large response has a 5xx status code
func (o *PostAuthorizationSubjectBulkremoveRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post authorization subject bulkremove request entity too large response a status code equal to that given
func (o *PostAuthorizationSubjectBulkremoveRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostAuthorizationSubjectBulkremoveRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkremove][%d] postAuthorizationSubjectBulkremoveRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostAuthorizationSubjectBulkremoveRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkremove][%d] postAuthorizationSubjectBulkremoveRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostAuthorizationSubjectBulkremoveRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationSubjectBulkremoveRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationSubjectBulkremoveUnsupportedMediaType creates a PostAuthorizationSubjectBulkremoveUnsupportedMediaType with default headers values
func NewPostAuthorizationSubjectBulkremoveUnsupportedMediaType() *PostAuthorizationSubjectBulkremoveUnsupportedMediaType {
	return &PostAuthorizationSubjectBulkremoveUnsupportedMediaType{}
}

/*
PostAuthorizationSubjectBulkremoveUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostAuthorizationSubjectBulkremoveUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization subject bulkremove unsupported media type response has a 2xx status code
func (o *PostAuthorizationSubjectBulkremoveUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization subject bulkremove unsupported media type response has a 3xx status code
func (o *PostAuthorizationSubjectBulkremoveUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization subject bulkremove unsupported media type response has a 4xx status code
func (o *PostAuthorizationSubjectBulkremoveUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post authorization subject bulkremove unsupported media type response has a 5xx status code
func (o *PostAuthorizationSubjectBulkremoveUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post authorization subject bulkremove unsupported media type response a status code equal to that given
func (o *PostAuthorizationSubjectBulkremoveUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostAuthorizationSubjectBulkremoveUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkremove][%d] postAuthorizationSubjectBulkremoveUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostAuthorizationSubjectBulkremoveUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkremove][%d] postAuthorizationSubjectBulkremoveUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostAuthorizationSubjectBulkremoveUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationSubjectBulkremoveUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationSubjectBulkremoveTooManyRequests creates a PostAuthorizationSubjectBulkremoveTooManyRequests with default headers values
func NewPostAuthorizationSubjectBulkremoveTooManyRequests() *PostAuthorizationSubjectBulkremoveTooManyRequests {
	return &PostAuthorizationSubjectBulkremoveTooManyRequests{}
}

/*
PostAuthorizationSubjectBulkremoveTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostAuthorizationSubjectBulkremoveTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization subject bulkremove too many requests response has a 2xx status code
func (o *PostAuthorizationSubjectBulkremoveTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization subject bulkremove too many requests response has a 3xx status code
func (o *PostAuthorizationSubjectBulkremoveTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization subject bulkremove too many requests response has a 4xx status code
func (o *PostAuthorizationSubjectBulkremoveTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post authorization subject bulkremove too many requests response has a 5xx status code
func (o *PostAuthorizationSubjectBulkremoveTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post authorization subject bulkremove too many requests response a status code equal to that given
func (o *PostAuthorizationSubjectBulkremoveTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostAuthorizationSubjectBulkremoveTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkremove][%d] postAuthorizationSubjectBulkremoveTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostAuthorizationSubjectBulkremoveTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkremove][%d] postAuthorizationSubjectBulkremoveTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostAuthorizationSubjectBulkremoveTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationSubjectBulkremoveTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationSubjectBulkremoveInternalServerError creates a PostAuthorizationSubjectBulkremoveInternalServerError with default headers values
func NewPostAuthorizationSubjectBulkremoveInternalServerError() *PostAuthorizationSubjectBulkremoveInternalServerError {
	return &PostAuthorizationSubjectBulkremoveInternalServerError{}
}

/*
PostAuthorizationSubjectBulkremoveInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostAuthorizationSubjectBulkremoveInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization subject bulkremove internal server error response has a 2xx status code
func (o *PostAuthorizationSubjectBulkremoveInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization subject bulkremove internal server error response has a 3xx status code
func (o *PostAuthorizationSubjectBulkremoveInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization subject bulkremove internal server error response has a 4xx status code
func (o *PostAuthorizationSubjectBulkremoveInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post authorization subject bulkremove internal server error response has a 5xx status code
func (o *PostAuthorizationSubjectBulkremoveInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post authorization subject bulkremove internal server error response a status code equal to that given
func (o *PostAuthorizationSubjectBulkremoveInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostAuthorizationSubjectBulkremoveInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkremove][%d] postAuthorizationSubjectBulkremoveInternalServerError  %+v", 500, o.Payload)
}

func (o *PostAuthorizationSubjectBulkremoveInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkremove][%d] postAuthorizationSubjectBulkremoveInternalServerError  %+v", 500, o.Payload)
}

func (o *PostAuthorizationSubjectBulkremoveInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationSubjectBulkremoveInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationSubjectBulkremoveServiceUnavailable creates a PostAuthorizationSubjectBulkremoveServiceUnavailable with default headers values
func NewPostAuthorizationSubjectBulkremoveServiceUnavailable() *PostAuthorizationSubjectBulkremoveServiceUnavailable {
	return &PostAuthorizationSubjectBulkremoveServiceUnavailable{}
}

/*
PostAuthorizationSubjectBulkremoveServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostAuthorizationSubjectBulkremoveServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization subject bulkremove service unavailable response has a 2xx status code
func (o *PostAuthorizationSubjectBulkremoveServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization subject bulkremove service unavailable response has a 3xx status code
func (o *PostAuthorizationSubjectBulkremoveServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization subject bulkremove service unavailable response has a 4xx status code
func (o *PostAuthorizationSubjectBulkremoveServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post authorization subject bulkremove service unavailable response has a 5xx status code
func (o *PostAuthorizationSubjectBulkremoveServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post authorization subject bulkremove service unavailable response a status code equal to that given
func (o *PostAuthorizationSubjectBulkremoveServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostAuthorizationSubjectBulkremoveServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkremove][%d] postAuthorizationSubjectBulkremoveServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostAuthorizationSubjectBulkremoveServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkremove][%d] postAuthorizationSubjectBulkremoveServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostAuthorizationSubjectBulkremoveServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationSubjectBulkremoveServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationSubjectBulkremoveGatewayTimeout creates a PostAuthorizationSubjectBulkremoveGatewayTimeout with default headers values
func NewPostAuthorizationSubjectBulkremoveGatewayTimeout() *PostAuthorizationSubjectBulkremoveGatewayTimeout {
	return &PostAuthorizationSubjectBulkremoveGatewayTimeout{}
}

/*
PostAuthorizationSubjectBulkremoveGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostAuthorizationSubjectBulkremoveGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization subject bulkremove gateway timeout response has a 2xx status code
func (o *PostAuthorizationSubjectBulkremoveGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization subject bulkremove gateway timeout response has a 3xx status code
func (o *PostAuthorizationSubjectBulkremoveGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization subject bulkremove gateway timeout response has a 4xx status code
func (o *PostAuthorizationSubjectBulkremoveGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post authorization subject bulkremove gateway timeout response has a 5xx status code
func (o *PostAuthorizationSubjectBulkremoveGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post authorization subject bulkremove gateway timeout response a status code equal to that given
func (o *PostAuthorizationSubjectBulkremoveGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostAuthorizationSubjectBulkremoveGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkremove][%d] postAuthorizationSubjectBulkremoveGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostAuthorizationSubjectBulkremoveGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkremove][%d] postAuthorizationSubjectBulkremoveGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostAuthorizationSubjectBulkremoveGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationSubjectBulkremoveGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
