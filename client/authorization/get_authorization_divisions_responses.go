// Code generated by go-swagger; DO NOT EDIT.

package authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetAuthorizationDivisionsReader is a Reader for the GetAuthorizationDivisions structure.
type GetAuthorizationDivisionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAuthorizationDivisionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAuthorizationDivisionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAuthorizationDivisionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAuthorizationDivisionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAuthorizationDivisionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAuthorizationDivisionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetAuthorizationDivisionsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetAuthorizationDivisionsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetAuthorizationDivisionsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetAuthorizationDivisionsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAuthorizationDivisionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetAuthorizationDivisionsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetAuthorizationDivisionsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAuthorizationDivisionsOK creates a GetAuthorizationDivisionsOK with default headers values
func NewGetAuthorizationDivisionsOK() *GetAuthorizationDivisionsOK {
	return &GetAuthorizationDivisionsOK{}
}

/*
GetAuthorizationDivisionsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetAuthorizationDivisionsOK struct {
	Payload *models.AuthzDivisionEntityListing
}

// IsSuccess returns true when this get authorization divisions o k response has a 2xx status code
func (o *GetAuthorizationDivisionsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get authorization divisions o k response has a 3xx status code
func (o *GetAuthorizationDivisionsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization divisions o k response has a 4xx status code
func (o *GetAuthorizationDivisionsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get authorization divisions o k response has a 5xx status code
func (o *GetAuthorizationDivisionsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get authorization divisions o k response a status code equal to that given
func (o *GetAuthorizationDivisionsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetAuthorizationDivisionsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions][%d] getAuthorizationDivisionsOK  %+v", 200, o.Payload)
}

func (o *GetAuthorizationDivisionsOK) String() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions][%d] getAuthorizationDivisionsOK  %+v", 200, o.Payload)
}

func (o *GetAuthorizationDivisionsOK) GetPayload() *models.AuthzDivisionEntityListing {
	return o.Payload
}

func (o *GetAuthorizationDivisionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthzDivisionEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationDivisionsBadRequest creates a GetAuthorizationDivisionsBadRequest with default headers values
func NewGetAuthorizationDivisionsBadRequest() *GetAuthorizationDivisionsBadRequest {
	return &GetAuthorizationDivisionsBadRequest{}
}

/*
GetAuthorizationDivisionsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetAuthorizationDivisionsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get authorization divisions bad request response has a 2xx status code
func (o *GetAuthorizationDivisionsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorization divisions bad request response has a 3xx status code
func (o *GetAuthorizationDivisionsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization divisions bad request response has a 4xx status code
func (o *GetAuthorizationDivisionsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get authorization divisions bad request response has a 5xx status code
func (o *GetAuthorizationDivisionsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get authorization divisions bad request response a status code equal to that given
func (o *GetAuthorizationDivisionsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetAuthorizationDivisionsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions][%d] getAuthorizationDivisionsBadRequest  %+v", 400, o.Payload)
}

func (o *GetAuthorizationDivisionsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions][%d] getAuthorizationDivisionsBadRequest  %+v", 400, o.Payload)
}

func (o *GetAuthorizationDivisionsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationDivisionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationDivisionsUnauthorized creates a GetAuthorizationDivisionsUnauthorized with default headers values
func NewGetAuthorizationDivisionsUnauthorized() *GetAuthorizationDivisionsUnauthorized {
	return &GetAuthorizationDivisionsUnauthorized{}
}

/*
GetAuthorizationDivisionsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetAuthorizationDivisionsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get authorization divisions unauthorized response has a 2xx status code
func (o *GetAuthorizationDivisionsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorization divisions unauthorized response has a 3xx status code
func (o *GetAuthorizationDivisionsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization divisions unauthorized response has a 4xx status code
func (o *GetAuthorizationDivisionsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get authorization divisions unauthorized response has a 5xx status code
func (o *GetAuthorizationDivisionsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get authorization divisions unauthorized response a status code equal to that given
func (o *GetAuthorizationDivisionsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetAuthorizationDivisionsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions][%d] getAuthorizationDivisionsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAuthorizationDivisionsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions][%d] getAuthorizationDivisionsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAuthorizationDivisionsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationDivisionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationDivisionsForbidden creates a GetAuthorizationDivisionsForbidden with default headers values
func NewGetAuthorizationDivisionsForbidden() *GetAuthorizationDivisionsForbidden {
	return &GetAuthorizationDivisionsForbidden{}
}

/*
GetAuthorizationDivisionsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetAuthorizationDivisionsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get authorization divisions forbidden response has a 2xx status code
func (o *GetAuthorizationDivisionsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorization divisions forbidden response has a 3xx status code
func (o *GetAuthorizationDivisionsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization divisions forbidden response has a 4xx status code
func (o *GetAuthorizationDivisionsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get authorization divisions forbidden response has a 5xx status code
func (o *GetAuthorizationDivisionsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get authorization divisions forbidden response a status code equal to that given
func (o *GetAuthorizationDivisionsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetAuthorizationDivisionsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions][%d] getAuthorizationDivisionsForbidden  %+v", 403, o.Payload)
}

func (o *GetAuthorizationDivisionsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions][%d] getAuthorizationDivisionsForbidden  %+v", 403, o.Payload)
}

func (o *GetAuthorizationDivisionsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationDivisionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationDivisionsNotFound creates a GetAuthorizationDivisionsNotFound with default headers values
func NewGetAuthorizationDivisionsNotFound() *GetAuthorizationDivisionsNotFound {
	return &GetAuthorizationDivisionsNotFound{}
}

/*
GetAuthorizationDivisionsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetAuthorizationDivisionsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get authorization divisions not found response has a 2xx status code
func (o *GetAuthorizationDivisionsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorization divisions not found response has a 3xx status code
func (o *GetAuthorizationDivisionsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization divisions not found response has a 4xx status code
func (o *GetAuthorizationDivisionsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get authorization divisions not found response has a 5xx status code
func (o *GetAuthorizationDivisionsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get authorization divisions not found response a status code equal to that given
func (o *GetAuthorizationDivisionsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetAuthorizationDivisionsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions][%d] getAuthorizationDivisionsNotFound  %+v", 404, o.Payload)
}

func (o *GetAuthorizationDivisionsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions][%d] getAuthorizationDivisionsNotFound  %+v", 404, o.Payload)
}

func (o *GetAuthorizationDivisionsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationDivisionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationDivisionsRequestTimeout creates a GetAuthorizationDivisionsRequestTimeout with default headers values
func NewGetAuthorizationDivisionsRequestTimeout() *GetAuthorizationDivisionsRequestTimeout {
	return &GetAuthorizationDivisionsRequestTimeout{}
}

/*
GetAuthorizationDivisionsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetAuthorizationDivisionsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get authorization divisions request timeout response has a 2xx status code
func (o *GetAuthorizationDivisionsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorization divisions request timeout response has a 3xx status code
func (o *GetAuthorizationDivisionsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization divisions request timeout response has a 4xx status code
func (o *GetAuthorizationDivisionsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get authorization divisions request timeout response has a 5xx status code
func (o *GetAuthorizationDivisionsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get authorization divisions request timeout response a status code equal to that given
func (o *GetAuthorizationDivisionsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetAuthorizationDivisionsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions][%d] getAuthorizationDivisionsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetAuthorizationDivisionsRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions][%d] getAuthorizationDivisionsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetAuthorizationDivisionsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationDivisionsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationDivisionsRequestEntityTooLarge creates a GetAuthorizationDivisionsRequestEntityTooLarge with default headers values
func NewGetAuthorizationDivisionsRequestEntityTooLarge() *GetAuthorizationDivisionsRequestEntityTooLarge {
	return &GetAuthorizationDivisionsRequestEntityTooLarge{}
}

/*
GetAuthorizationDivisionsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetAuthorizationDivisionsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get authorization divisions request entity too large response has a 2xx status code
func (o *GetAuthorizationDivisionsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorization divisions request entity too large response has a 3xx status code
func (o *GetAuthorizationDivisionsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization divisions request entity too large response has a 4xx status code
func (o *GetAuthorizationDivisionsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get authorization divisions request entity too large response has a 5xx status code
func (o *GetAuthorizationDivisionsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get authorization divisions request entity too large response a status code equal to that given
func (o *GetAuthorizationDivisionsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetAuthorizationDivisionsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions][%d] getAuthorizationDivisionsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetAuthorizationDivisionsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions][%d] getAuthorizationDivisionsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetAuthorizationDivisionsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationDivisionsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationDivisionsUnsupportedMediaType creates a GetAuthorizationDivisionsUnsupportedMediaType with default headers values
func NewGetAuthorizationDivisionsUnsupportedMediaType() *GetAuthorizationDivisionsUnsupportedMediaType {
	return &GetAuthorizationDivisionsUnsupportedMediaType{}
}

/*
GetAuthorizationDivisionsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetAuthorizationDivisionsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get authorization divisions unsupported media type response has a 2xx status code
func (o *GetAuthorizationDivisionsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorization divisions unsupported media type response has a 3xx status code
func (o *GetAuthorizationDivisionsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization divisions unsupported media type response has a 4xx status code
func (o *GetAuthorizationDivisionsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get authorization divisions unsupported media type response has a 5xx status code
func (o *GetAuthorizationDivisionsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get authorization divisions unsupported media type response a status code equal to that given
func (o *GetAuthorizationDivisionsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetAuthorizationDivisionsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions][%d] getAuthorizationDivisionsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetAuthorizationDivisionsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions][%d] getAuthorizationDivisionsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetAuthorizationDivisionsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationDivisionsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationDivisionsTooManyRequests creates a GetAuthorizationDivisionsTooManyRequests with default headers values
func NewGetAuthorizationDivisionsTooManyRequests() *GetAuthorizationDivisionsTooManyRequests {
	return &GetAuthorizationDivisionsTooManyRequests{}
}

/*
GetAuthorizationDivisionsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetAuthorizationDivisionsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get authorization divisions too many requests response has a 2xx status code
func (o *GetAuthorizationDivisionsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorization divisions too many requests response has a 3xx status code
func (o *GetAuthorizationDivisionsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization divisions too many requests response has a 4xx status code
func (o *GetAuthorizationDivisionsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get authorization divisions too many requests response has a 5xx status code
func (o *GetAuthorizationDivisionsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get authorization divisions too many requests response a status code equal to that given
func (o *GetAuthorizationDivisionsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetAuthorizationDivisionsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions][%d] getAuthorizationDivisionsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetAuthorizationDivisionsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions][%d] getAuthorizationDivisionsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetAuthorizationDivisionsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationDivisionsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationDivisionsInternalServerError creates a GetAuthorizationDivisionsInternalServerError with default headers values
func NewGetAuthorizationDivisionsInternalServerError() *GetAuthorizationDivisionsInternalServerError {
	return &GetAuthorizationDivisionsInternalServerError{}
}

/*
GetAuthorizationDivisionsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetAuthorizationDivisionsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get authorization divisions internal server error response has a 2xx status code
func (o *GetAuthorizationDivisionsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorization divisions internal server error response has a 3xx status code
func (o *GetAuthorizationDivisionsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization divisions internal server error response has a 4xx status code
func (o *GetAuthorizationDivisionsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get authorization divisions internal server error response has a 5xx status code
func (o *GetAuthorizationDivisionsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get authorization divisions internal server error response a status code equal to that given
func (o *GetAuthorizationDivisionsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetAuthorizationDivisionsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions][%d] getAuthorizationDivisionsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAuthorizationDivisionsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions][%d] getAuthorizationDivisionsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAuthorizationDivisionsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationDivisionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationDivisionsServiceUnavailable creates a GetAuthorizationDivisionsServiceUnavailable with default headers values
func NewGetAuthorizationDivisionsServiceUnavailable() *GetAuthorizationDivisionsServiceUnavailable {
	return &GetAuthorizationDivisionsServiceUnavailable{}
}

/*
GetAuthorizationDivisionsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetAuthorizationDivisionsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get authorization divisions service unavailable response has a 2xx status code
func (o *GetAuthorizationDivisionsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorization divisions service unavailable response has a 3xx status code
func (o *GetAuthorizationDivisionsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization divisions service unavailable response has a 4xx status code
func (o *GetAuthorizationDivisionsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get authorization divisions service unavailable response has a 5xx status code
func (o *GetAuthorizationDivisionsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get authorization divisions service unavailable response a status code equal to that given
func (o *GetAuthorizationDivisionsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetAuthorizationDivisionsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions][%d] getAuthorizationDivisionsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetAuthorizationDivisionsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions][%d] getAuthorizationDivisionsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetAuthorizationDivisionsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationDivisionsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationDivisionsGatewayTimeout creates a GetAuthorizationDivisionsGatewayTimeout with default headers values
func NewGetAuthorizationDivisionsGatewayTimeout() *GetAuthorizationDivisionsGatewayTimeout {
	return &GetAuthorizationDivisionsGatewayTimeout{}
}

/*
GetAuthorizationDivisionsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetAuthorizationDivisionsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get authorization divisions gateway timeout response has a 2xx status code
func (o *GetAuthorizationDivisionsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorization divisions gateway timeout response has a 3xx status code
func (o *GetAuthorizationDivisionsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization divisions gateway timeout response has a 4xx status code
func (o *GetAuthorizationDivisionsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get authorization divisions gateway timeout response has a 5xx status code
func (o *GetAuthorizationDivisionsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get authorization divisions gateway timeout response a status code equal to that given
func (o *GetAuthorizationDivisionsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetAuthorizationDivisionsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions][%d] getAuthorizationDivisionsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetAuthorizationDivisionsGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions][%d] getAuthorizationDivisionsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetAuthorizationDivisionsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationDivisionsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
