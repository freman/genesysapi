// Code generated by go-swagger; DO NOT EDIT.

package authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// NewPostAuthorizationSubjectBulkaddParams creates a new PostAuthorizationSubjectBulkaddParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPostAuthorizationSubjectBulkaddParams() *PostAuthorizationSubjectBulkaddParams {
	return &PostAuthorizationSubjectBulkaddParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPostAuthorizationSubjectBulkaddParamsWithTimeout creates a new PostAuthorizationSubjectBulkaddParams object
// with the ability to set a timeout on a request.
func NewPostAuthorizationSubjectBulkaddParamsWithTimeout(timeout time.Duration) *PostAuthorizationSubjectBulkaddParams {
	return &PostAuthorizationSubjectBulkaddParams{
		timeout: timeout,
	}
}

// NewPostAuthorizationSubjectBulkaddParamsWithContext creates a new PostAuthorizationSubjectBulkaddParams object
// with the ability to set a context for a request.
func NewPostAuthorizationSubjectBulkaddParamsWithContext(ctx context.Context) *PostAuthorizationSubjectBulkaddParams {
	return &PostAuthorizationSubjectBulkaddParams{
		Context: ctx,
	}
}

// NewPostAuthorizationSubjectBulkaddParamsWithHTTPClient creates a new PostAuthorizationSubjectBulkaddParams object
// with the ability to set a custom HTTPClient for a request.
func NewPostAuthorizationSubjectBulkaddParamsWithHTTPClient(client *http.Client) *PostAuthorizationSubjectBulkaddParams {
	return &PostAuthorizationSubjectBulkaddParams{
		HTTPClient: client,
	}
}

/*
PostAuthorizationSubjectBulkaddParams contains all the parameters to send to the API endpoint

	for the post authorization subject bulkadd operation.

	Typically these are written to a http.Request.
*/
type PostAuthorizationSubjectBulkaddParams struct {

	/* Body.

	   Pairs of role and division IDs
	*/
	Body *models.RoleDivisionGrants

	/* SubjectID.

	   Subject ID (user or group)
	*/
	SubjectID string

	/* SubjectType.

	   what the type of the subject is (PC_GROUP, PC_USER or PC_OAUTH_CLIENT)

	   Default: "PC_USER"
	*/
	SubjectType *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the post authorization subject bulkadd params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostAuthorizationSubjectBulkaddParams) WithDefaults() *PostAuthorizationSubjectBulkaddParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the post authorization subject bulkadd params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostAuthorizationSubjectBulkaddParams) SetDefaults() {
	var (
		subjectTypeDefault = string("PC_USER")
	)

	val := PostAuthorizationSubjectBulkaddParams{
		SubjectType: &subjectTypeDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the post authorization subject bulkadd params
func (o *PostAuthorizationSubjectBulkaddParams) WithTimeout(timeout time.Duration) *PostAuthorizationSubjectBulkaddParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post authorization subject bulkadd params
func (o *PostAuthorizationSubjectBulkaddParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post authorization subject bulkadd params
func (o *PostAuthorizationSubjectBulkaddParams) WithContext(ctx context.Context) *PostAuthorizationSubjectBulkaddParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post authorization subject bulkadd params
func (o *PostAuthorizationSubjectBulkaddParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post authorization subject bulkadd params
func (o *PostAuthorizationSubjectBulkaddParams) WithHTTPClient(client *http.Client) *PostAuthorizationSubjectBulkaddParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post authorization subject bulkadd params
func (o *PostAuthorizationSubjectBulkaddParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the post authorization subject bulkadd params
func (o *PostAuthorizationSubjectBulkaddParams) WithBody(body *models.RoleDivisionGrants) *PostAuthorizationSubjectBulkaddParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the post authorization subject bulkadd params
func (o *PostAuthorizationSubjectBulkaddParams) SetBody(body *models.RoleDivisionGrants) {
	o.Body = body
}

// WithSubjectID adds the subjectID to the post authorization subject bulkadd params
func (o *PostAuthorizationSubjectBulkaddParams) WithSubjectID(subjectID string) *PostAuthorizationSubjectBulkaddParams {
	o.SetSubjectID(subjectID)
	return o
}

// SetSubjectID adds the subjectId to the post authorization subject bulkadd params
func (o *PostAuthorizationSubjectBulkaddParams) SetSubjectID(subjectID string) {
	o.SubjectID = subjectID
}

// WithSubjectType adds the subjectType to the post authorization subject bulkadd params
func (o *PostAuthorizationSubjectBulkaddParams) WithSubjectType(subjectType *string) *PostAuthorizationSubjectBulkaddParams {
	o.SetSubjectType(subjectType)
	return o
}

// SetSubjectType adds the subjectType to the post authorization subject bulkadd params
func (o *PostAuthorizationSubjectBulkaddParams) SetSubjectType(subjectType *string) {
	o.SubjectType = subjectType
}

// WriteToRequest writes these params to a swagger request
func (o *PostAuthorizationSubjectBulkaddParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param subjectId
	if err := r.SetPathParam("subjectId", o.SubjectID); err != nil {
		return err
	}

	if o.SubjectType != nil {

		// query param subjectType
		var qrSubjectType string

		if o.SubjectType != nil {
			qrSubjectType = *o.SubjectType
		}
		qSubjectType := qrSubjectType
		if qSubjectType != "" {

			if err := r.SetQueryParam("subjectType", qSubjectType); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
