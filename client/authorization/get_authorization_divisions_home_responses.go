// Code generated by go-swagger; DO NOT EDIT.

package authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetAuthorizationDivisionsHomeReader is a Reader for the GetAuthorizationDivisionsHome structure.
type GetAuthorizationDivisionsHomeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAuthorizationDivisionsHomeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAuthorizationDivisionsHomeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAuthorizationDivisionsHomeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAuthorizationDivisionsHomeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAuthorizationDivisionsHomeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAuthorizationDivisionsHomeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetAuthorizationDivisionsHomeRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetAuthorizationDivisionsHomeRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetAuthorizationDivisionsHomeUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetAuthorizationDivisionsHomeTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAuthorizationDivisionsHomeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetAuthorizationDivisionsHomeServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetAuthorizationDivisionsHomeGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAuthorizationDivisionsHomeOK creates a GetAuthorizationDivisionsHomeOK with default headers values
func NewGetAuthorizationDivisionsHomeOK() *GetAuthorizationDivisionsHomeOK {
	return &GetAuthorizationDivisionsHomeOK{}
}

/*
GetAuthorizationDivisionsHomeOK describes a response with status code 200, with default header values.

successful operation
*/
type GetAuthorizationDivisionsHomeOK struct {
	Payload *models.AuthzDivision
}

// IsSuccess returns true when this get authorization divisions home o k response has a 2xx status code
func (o *GetAuthorizationDivisionsHomeOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get authorization divisions home o k response has a 3xx status code
func (o *GetAuthorizationDivisionsHomeOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization divisions home o k response has a 4xx status code
func (o *GetAuthorizationDivisionsHomeOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get authorization divisions home o k response has a 5xx status code
func (o *GetAuthorizationDivisionsHomeOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get authorization divisions home o k response a status code equal to that given
func (o *GetAuthorizationDivisionsHomeOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetAuthorizationDivisionsHomeOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions/home][%d] getAuthorizationDivisionsHomeOK  %+v", 200, o.Payload)
}

func (o *GetAuthorizationDivisionsHomeOK) String() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions/home][%d] getAuthorizationDivisionsHomeOK  %+v", 200, o.Payload)
}

func (o *GetAuthorizationDivisionsHomeOK) GetPayload() *models.AuthzDivision {
	return o.Payload
}

func (o *GetAuthorizationDivisionsHomeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthzDivision)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationDivisionsHomeBadRequest creates a GetAuthorizationDivisionsHomeBadRequest with default headers values
func NewGetAuthorizationDivisionsHomeBadRequest() *GetAuthorizationDivisionsHomeBadRequest {
	return &GetAuthorizationDivisionsHomeBadRequest{}
}

/*
GetAuthorizationDivisionsHomeBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetAuthorizationDivisionsHomeBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get authorization divisions home bad request response has a 2xx status code
func (o *GetAuthorizationDivisionsHomeBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorization divisions home bad request response has a 3xx status code
func (o *GetAuthorizationDivisionsHomeBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization divisions home bad request response has a 4xx status code
func (o *GetAuthorizationDivisionsHomeBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get authorization divisions home bad request response has a 5xx status code
func (o *GetAuthorizationDivisionsHomeBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get authorization divisions home bad request response a status code equal to that given
func (o *GetAuthorizationDivisionsHomeBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetAuthorizationDivisionsHomeBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions/home][%d] getAuthorizationDivisionsHomeBadRequest  %+v", 400, o.Payload)
}

func (o *GetAuthorizationDivisionsHomeBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions/home][%d] getAuthorizationDivisionsHomeBadRequest  %+v", 400, o.Payload)
}

func (o *GetAuthorizationDivisionsHomeBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationDivisionsHomeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationDivisionsHomeUnauthorized creates a GetAuthorizationDivisionsHomeUnauthorized with default headers values
func NewGetAuthorizationDivisionsHomeUnauthorized() *GetAuthorizationDivisionsHomeUnauthorized {
	return &GetAuthorizationDivisionsHomeUnauthorized{}
}

/*
GetAuthorizationDivisionsHomeUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetAuthorizationDivisionsHomeUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get authorization divisions home unauthorized response has a 2xx status code
func (o *GetAuthorizationDivisionsHomeUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorization divisions home unauthorized response has a 3xx status code
func (o *GetAuthorizationDivisionsHomeUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization divisions home unauthorized response has a 4xx status code
func (o *GetAuthorizationDivisionsHomeUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get authorization divisions home unauthorized response has a 5xx status code
func (o *GetAuthorizationDivisionsHomeUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get authorization divisions home unauthorized response a status code equal to that given
func (o *GetAuthorizationDivisionsHomeUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetAuthorizationDivisionsHomeUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions/home][%d] getAuthorizationDivisionsHomeUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAuthorizationDivisionsHomeUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions/home][%d] getAuthorizationDivisionsHomeUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAuthorizationDivisionsHomeUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationDivisionsHomeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationDivisionsHomeForbidden creates a GetAuthorizationDivisionsHomeForbidden with default headers values
func NewGetAuthorizationDivisionsHomeForbidden() *GetAuthorizationDivisionsHomeForbidden {
	return &GetAuthorizationDivisionsHomeForbidden{}
}

/*
GetAuthorizationDivisionsHomeForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetAuthorizationDivisionsHomeForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get authorization divisions home forbidden response has a 2xx status code
func (o *GetAuthorizationDivisionsHomeForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorization divisions home forbidden response has a 3xx status code
func (o *GetAuthorizationDivisionsHomeForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization divisions home forbidden response has a 4xx status code
func (o *GetAuthorizationDivisionsHomeForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get authorization divisions home forbidden response has a 5xx status code
func (o *GetAuthorizationDivisionsHomeForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get authorization divisions home forbidden response a status code equal to that given
func (o *GetAuthorizationDivisionsHomeForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetAuthorizationDivisionsHomeForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions/home][%d] getAuthorizationDivisionsHomeForbidden  %+v", 403, o.Payload)
}

func (o *GetAuthorizationDivisionsHomeForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions/home][%d] getAuthorizationDivisionsHomeForbidden  %+v", 403, o.Payload)
}

func (o *GetAuthorizationDivisionsHomeForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationDivisionsHomeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationDivisionsHomeNotFound creates a GetAuthorizationDivisionsHomeNotFound with default headers values
func NewGetAuthorizationDivisionsHomeNotFound() *GetAuthorizationDivisionsHomeNotFound {
	return &GetAuthorizationDivisionsHomeNotFound{}
}

/*
GetAuthorizationDivisionsHomeNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetAuthorizationDivisionsHomeNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get authorization divisions home not found response has a 2xx status code
func (o *GetAuthorizationDivisionsHomeNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorization divisions home not found response has a 3xx status code
func (o *GetAuthorizationDivisionsHomeNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization divisions home not found response has a 4xx status code
func (o *GetAuthorizationDivisionsHomeNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get authorization divisions home not found response has a 5xx status code
func (o *GetAuthorizationDivisionsHomeNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get authorization divisions home not found response a status code equal to that given
func (o *GetAuthorizationDivisionsHomeNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetAuthorizationDivisionsHomeNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions/home][%d] getAuthorizationDivisionsHomeNotFound  %+v", 404, o.Payload)
}

func (o *GetAuthorizationDivisionsHomeNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions/home][%d] getAuthorizationDivisionsHomeNotFound  %+v", 404, o.Payload)
}

func (o *GetAuthorizationDivisionsHomeNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationDivisionsHomeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationDivisionsHomeRequestTimeout creates a GetAuthorizationDivisionsHomeRequestTimeout with default headers values
func NewGetAuthorizationDivisionsHomeRequestTimeout() *GetAuthorizationDivisionsHomeRequestTimeout {
	return &GetAuthorizationDivisionsHomeRequestTimeout{}
}

/*
GetAuthorizationDivisionsHomeRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetAuthorizationDivisionsHomeRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get authorization divisions home request timeout response has a 2xx status code
func (o *GetAuthorizationDivisionsHomeRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorization divisions home request timeout response has a 3xx status code
func (o *GetAuthorizationDivisionsHomeRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization divisions home request timeout response has a 4xx status code
func (o *GetAuthorizationDivisionsHomeRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get authorization divisions home request timeout response has a 5xx status code
func (o *GetAuthorizationDivisionsHomeRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get authorization divisions home request timeout response a status code equal to that given
func (o *GetAuthorizationDivisionsHomeRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetAuthorizationDivisionsHomeRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions/home][%d] getAuthorizationDivisionsHomeRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetAuthorizationDivisionsHomeRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions/home][%d] getAuthorizationDivisionsHomeRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetAuthorizationDivisionsHomeRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationDivisionsHomeRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationDivisionsHomeRequestEntityTooLarge creates a GetAuthorizationDivisionsHomeRequestEntityTooLarge with default headers values
func NewGetAuthorizationDivisionsHomeRequestEntityTooLarge() *GetAuthorizationDivisionsHomeRequestEntityTooLarge {
	return &GetAuthorizationDivisionsHomeRequestEntityTooLarge{}
}

/*
GetAuthorizationDivisionsHomeRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetAuthorizationDivisionsHomeRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get authorization divisions home request entity too large response has a 2xx status code
func (o *GetAuthorizationDivisionsHomeRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorization divisions home request entity too large response has a 3xx status code
func (o *GetAuthorizationDivisionsHomeRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization divisions home request entity too large response has a 4xx status code
func (o *GetAuthorizationDivisionsHomeRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get authorization divisions home request entity too large response has a 5xx status code
func (o *GetAuthorizationDivisionsHomeRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get authorization divisions home request entity too large response a status code equal to that given
func (o *GetAuthorizationDivisionsHomeRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetAuthorizationDivisionsHomeRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions/home][%d] getAuthorizationDivisionsHomeRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetAuthorizationDivisionsHomeRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions/home][%d] getAuthorizationDivisionsHomeRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetAuthorizationDivisionsHomeRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationDivisionsHomeRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationDivisionsHomeUnsupportedMediaType creates a GetAuthorizationDivisionsHomeUnsupportedMediaType with default headers values
func NewGetAuthorizationDivisionsHomeUnsupportedMediaType() *GetAuthorizationDivisionsHomeUnsupportedMediaType {
	return &GetAuthorizationDivisionsHomeUnsupportedMediaType{}
}

/*
GetAuthorizationDivisionsHomeUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetAuthorizationDivisionsHomeUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get authorization divisions home unsupported media type response has a 2xx status code
func (o *GetAuthorizationDivisionsHomeUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorization divisions home unsupported media type response has a 3xx status code
func (o *GetAuthorizationDivisionsHomeUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization divisions home unsupported media type response has a 4xx status code
func (o *GetAuthorizationDivisionsHomeUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get authorization divisions home unsupported media type response has a 5xx status code
func (o *GetAuthorizationDivisionsHomeUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get authorization divisions home unsupported media type response a status code equal to that given
func (o *GetAuthorizationDivisionsHomeUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetAuthorizationDivisionsHomeUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions/home][%d] getAuthorizationDivisionsHomeUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetAuthorizationDivisionsHomeUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions/home][%d] getAuthorizationDivisionsHomeUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetAuthorizationDivisionsHomeUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationDivisionsHomeUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationDivisionsHomeTooManyRequests creates a GetAuthorizationDivisionsHomeTooManyRequests with default headers values
func NewGetAuthorizationDivisionsHomeTooManyRequests() *GetAuthorizationDivisionsHomeTooManyRequests {
	return &GetAuthorizationDivisionsHomeTooManyRequests{}
}

/*
GetAuthorizationDivisionsHomeTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetAuthorizationDivisionsHomeTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get authorization divisions home too many requests response has a 2xx status code
func (o *GetAuthorizationDivisionsHomeTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorization divisions home too many requests response has a 3xx status code
func (o *GetAuthorizationDivisionsHomeTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization divisions home too many requests response has a 4xx status code
func (o *GetAuthorizationDivisionsHomeTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get authorization divisions home too many requests response has a 5xx status code
func (o *GetAuthorizationDivisionsHomeTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get authorization divisions home too many requests response a status code equal to that given
func (o *GetAuthorizationDivisionsHomeTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetAuthorizationDivisionsHomeTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions/home][%d] getAuthorizationDivisionsHomeTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetAuthorizationDivisionsHomeTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions/home][%d] getAuthorizationDivisionsHomeTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetAuthorizationDivisionsHomeTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationDivisionsHomeTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationDivisionsHomeInternalServerError creates a GetAuthorizationDivisionsHomeInternalServerError with default headers values
func NewGetAuthorizationDivisionsHomeInternalServerError() *GetAuthorizationDivisionsHomeInternalServerError {
	return &GetAuthorizationDivisionsHomeInternalServerError{}
}

/*
GetAuthorizationDivisionsHomeInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetAuthorizationDivisionsHomeInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get authorization divisions home internal server error response has a 2xx status code
func (o *GetAuthorizationDivisionsHomeInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorization divisions home internal server error response has a 3xx status code
func (o *GetAuthorizationDivisionsHomeInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization divisions home internal server error response has a 4xx status code
func (o *GetAuthorizationDivisionsHomeInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get authorization divisions home internal server error response has a 5xx status code
func (o *GetAuthorizationDivisionsHomeInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get authorization divisions home internal server error response a status code equal to that given
func (o *GetAuthorizationDivisionsHomeInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetAuthorizationDivisionsHomeInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions/home][%d] getAuthorizationDivisionsHomeInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAuthorizationDivisionsHomeInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions/home][%d] getAuthorizationDivisionsHomeInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAuthorizationDivisionsHomeInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationDivisionsHomeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationDivisionsHomeServiceUnavailable creates a GetAuthorizationDivisionsHomeServiceUnavailable with default headers values
func NewGetAuthorizationDivisionsHomeServiceUnavailable() *GetAuthorizationDivisionsHomeServiceUnavailable {
	return &GetAuthorizationDivisionsHomeServiceUnavailable{}
}

/*
GetAuthorizationDivisionsHomeServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetAuthorizationDivisionsHomeServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get authorization divisions home service unavailable response has a 2xx status code
func (o *GetAuthorizationDivisionsHomeServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorization divisions home service unavailable response has a 3xx status code
func (o *GetAuthorizationDivisionsHomeServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization divisions home service unavailable response has a 4xx status code
func (o *GetAuthorizationDivisionsHomeServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get authorization divisions home service unavailable response has a 5xx status code
func (o *GetAuthorizationDivisionsHomeServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get authorization divisions home service unavailable response a status code equal to that given
func (o *GetAuthorizationDivisionsHomeServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetAuthorizationDivisionsHomeServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions/home][%d] getAuthorizationDivisionsHomeServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetAuthorizationDivisionsHomeServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions/home][%d] getAuthorizationDivisionsHomeServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetAuthorizationDivisionsHomeServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationDivisionsHomeServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationDivisionsHomeGatewayTimeout creates a GetAuthorizationDivisionsHomeGatewayTimeout with default headers values
func NewGetAuthorizationDivisionsHomeGatewayTimeout() *GetAuthorizationDivisionsHomeGatewayTimeout {
	return &GetAuthorizationDivisionsHomeGatewayTimeout{}
}

/*
GetAuthorizationDivisionsHomeGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetAuthorizationDivisionsHomeGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get authorization divisions home gateway timeout response has a 2xx status code
func (o *GetAuthorizationDivisionsHomeGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorization divisions home gateway timeout response has a 3xx status code
func (o *GetAuthorizationDivisionsHomeGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization divisions home gateway timeout response has a 4xx status code
func (o *GetAuthorizationDivisionsHomeGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get authorization divisions home gateway timeout response has a 5xx status code
func (o *GetAuthorizationDivisionsHomeGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get authorization divisions home gateway timeout response a status code equal to that given
func (o *GetAuthorizationDivisionsHomeGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetAuthorizationDivisionsHomeGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions/home][%d] getAuthorizationDivisionsHomeGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetAuthorizationDivisionsHomeGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions/home][%d] getAuthorizationDivisionsHomeGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetAuthorizationDivisionsHomeGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationDivisionsHomeGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
