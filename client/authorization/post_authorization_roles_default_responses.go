// Code generated by go-swagger; DO NOT EDIT.

package authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostAuthorizationRolesDefaultReader is a Reader for the PostAuthorizationRolesDefault structure.
type PostAuthorizationRolesDefaultReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostAuthorizationRolesDefaultReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostAuthorizationRolesDefaultOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostAuthorizationRolesDefaultBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostAuthorizationRolesDefaultUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostAuthorizationRolesDefaultForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostAuthorizationRolesDefaultNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostAuthorizationRolesDefaultRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostAuthorizationRolesDefaultRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostAuthorizationRolesDefaultUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostAuthorizationRolesDefaultTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostAuthorizationRolesDefaultInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostAuthorizationRolesDefaultServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostAuthorizationRolesDefaultGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostAuthorizationRolesDefaultOK creates a PostAuthorizationRolesDefaultOK with default headers values
func NewPostAuthorizationRolesDefaultOK() *PostAuthorizationRolesDefaultOK {
	return &PostAuthorizationRolesDefaultOK{}
}

/*
PostAuthorizationRolesDefaultOK describes a response with status code 200, with default header values.

successful operation
*/
type PostAuthorizationRolesDefaultOK struct {
	Payload *models.OrganizationRoleEntityListing
}

// IsSuccess returns true when this post authorization roles default o k response has a 2xx status code
func (o *PostAuthorizationRolesDefaultOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post authorization roles default o k response has a 3xx status code
func (o *PostAuthorizationRolesDefaultOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization roles default o k response has a 4xx status code
func (o *PostAuthorizationRolesDefaultOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post authorization roles default o k response has a 5xx status code
func (o *PostAuthorizationRolesDefaultOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post authorization roles default o k response a status code equal to that given
func (o *PostAuthorizationRolesDefaultOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostAuthorizationRolesDefaultOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles/default][%d] postAuthorizationRolesDefaultOK  %+v", 200, o.Payload)
}

func (o *PostAuthorizationRolesDefaultOK) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles/default][%d] postAuthorizationRolesDefaultOK  %+v", 200, o.Payload)
}

func (o *PostAuthorizationRolesDefaultOK) GetPayload() *models.OrganizationRoleEntityListing {
	return o.Payload
}

func (o *PostAuthorizationRolesDefaultOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OrganizationRoleEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationRolesDefaultBadRequest creates a PostAuthorizationRolesDefaultBadRequest with default headers values
func NewPostAuthorizationRolesDefaultBadRequest() *PostAuthorizationRolesDefaultBadRequest {
	return &PostAuthorizationRolesDefaultBadRequest{}
}

/*
PostAuthorizationRolesDefaultBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostAuthorizationRolesDefaultBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization roles default bad request response has a 2xx status code
func (o *PostAuthorizationRolesDefaultBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization roles default bad request response has a 3xx status code
func (o *PostAuthorizationRolesDefaultBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization roles default bad request response has a 4xx status code
func (o *PostAuthorizationRolesDefaultBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post authorization roles default bad request response has a 5xx status code
func (o *PostAuthorizationRolesDefaultBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post authorization roles default bad request response a status code equal to that given
func (o *PostAuthorizationRolesDefaultBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostAuthorizationRolesDefaultBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles/default][%d] postAuthorizationRolesDefaultBadRequest  %+v", 400, o.Payload)
}

func (o *PostAuthorizationRolesDefaultBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles/default][%d] postAuthorizationRolesDefaultBadRequest  %+v", 400, o.Payload)
}

func (o *PostAuthorizationRolesDefaultBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationRolesDefaultBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationRolesDefaultUnauthorized creates a PostAuthorizationRolesDefaultUnauthorized with default headers values
func NewPostAuthorizationRolesDefaultUnauthorized() *PostAuthorizationRolesDefaultUnauthorized {
	return &PostAuthorizationRolesDefaultUnauthorized{}
}

/*
PostAuthorizationRolesDefaultUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostAuthorizationRolesDefaultUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization roles default unauthorized response has a 2xx status code
func (o *PostAuthorizationRolesDefaultUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization roles default unauthorized response has a 3xx status code
func (o *PostAuthorizationRolesDefaultUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization roles default unauthorized response has a 4xx status code
func (o *PostAuthorizationRolesDefaultUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post authorization roles default unauthorized response has a 5xx status code
func (o *PostAuthorizationRolesDefaultUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post authorization roles default unauthorized response a status code equal to that given
func (o *PostAuthorizationRolesDefaultUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostAuthorizationRolesDefaultUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles/default][%d] postAuthorizationRolesDefaultUnauthorized  %+v", 401, o.Payload)
}

func (o *PostAuthorizationRolesDefaultUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles/default][%d] postAuthorizationRolesDefaultUnauthorized  %+v", 401, o.Payload)
}

func (o *PostAuthorizationRolesDefaultUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationRolesDefaultUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationRolesDefaultForbidden creates a PostAuthorizationRolesDefaultForbidden with default headers values
func NewPostAuthorizationRolesDefaultForbidden() *PostAuthorizationRolesDefaultForbidden {
	return &PostAuthorizationRolesDefaultForbidden{}
}

/*
PostAuthorizationRolesDefaultForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostAuthorizationRolesDefaultForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization roles default forbidden response has a 2xx status code
func (o *PostAuthorizationRolesDefaultForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization roles default forbidden response has a 3xx status code
func (o *PostAuthorizationRolesDefaultForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization roles default forbidden response has a 4xx status code
func (o *PostAuthorizationRolesDefaultForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post authorization roles default forbidden response has a 5xx status code
func (o *PostAuthorizationRolesDefaultForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post authorization roles default forbidden response a status code equal to that given
func (o *PostAuthorizationRolesDefaultForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostAuthorizationRolesDefaultForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles/default][%d] postAuthorizationRolesDefaultForbidden  %+v", 403, o.Payload)
}

func (o *PostAuthorizationRolesDefaultForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles/default][%d] postAuthorizationRolesDefaultForbidden  %+v", 403, o.Payload)
}

func (o *PostAuthorizationRolesDefaultForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationRolesDefaultForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationRolesDefaultNotFound creates a PostAuthorizationRolesDefaultNotFound with default headers values
func NewPostAuthorizationRolesDefaultNotFound() *PostAuthorizationRolesDefaultNotFound {
	return &PostAuthorizationRolesDefaultNotFound{}
}

/*
PostAuthorizationRolesDefaultNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostAuthorizationRolesDefaultNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization roles default not found response has a 2xx status code
func (o *PostAuthorizationRolesDefaultNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization roles default not found response has a 3xx status code
func (o *PostAuthorizationRolesDefaultNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization roles default not found response has a 4xx status code
func (o *PostAuthorizationRolesDefaultNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post authorization roles default not found response has a 5xx status code
func (o *PostAuthorizationRolesDefaultNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post authorization roles default not found response a status code equal to that given
func (o *PostAuthorizationRolesDefaultNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostAuthorizationRolesDefaultNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles/default][%d] postAuthorizationRolesDefaultNotFound  %+v", 404, o.Payload)
}

func (o *PostAuthorizationRolesDefaultNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles/default][%d] postAuthorizationRolesDefaultNotFound  %+v", 404, o.Payload)
}

func (o *PostAuthorizationRolesDefaultNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationRolesDefaultNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationRolesDefaultRequestTimeout creates a PostAuthorizationRolesDefaultRequestTimeout with default headers values
func NewPostAuthorizationRolesDefaultRequestTimeout() *PostAuthorizationRolesDefaultRequestTimeout {
	return &PostAuthorizationRolesDefaultRequestTimeout{}
}

/*
PostAuthorizationRolesDefaultRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostAuthorizationRolesDefaultRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization roles default request timeout response has a 2xx status code
func (o *PostAuthorizationRolesDefaultRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization roles default request timeout response has a 3xx status code
func (o *PostAuthorizationRolesDefaultRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization roles default request timeout response has a 4xx status code
func (o *PostAuthorizationRolesDefaultRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post authorization roles default request timeout response has a 5xx status code
func (o *PostAuthorizationRolesDefaultRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post authorization roles default request timeout response a status code equal to that given
func (o *PostAuthorizationRolesDefaultRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostAuthorizationRolesDefaultRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles/default][%d] postAuthorizationRolesDefaultRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostAuthorizationRolesDefaultRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles/default][%d] postAuthorizationRolesDefaultRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostAuthorizationRolesDefaultRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationRolesDefaultRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationRolesDefaultRequestEntityTooLarge creates a PostAuthorizationRolesDefaultRequestEntityTooLarge with default headers values
func NewPostAuthorizationRolesDefaultRequestEntityTooLarge() *PostAuthorizationRolesDefaultRequestEntityTooLarge {
	return &PostAuthorizationRolesDefaultRequestEntityTooLarge{}
}

/*
PostAuthorizationRolesDefaultRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PostAuthorizationRolesDefaultRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization roles default request entity too large response has a 2xx status code
func (o *PostAuthorizationRolesDefaultRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization roles default request entity too large response has a 3xx status code
func (o *PostAuthorizationRolesDefaultRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization roles default request entity too large response has a 4xx status code
func (o *PostAuthorizationRolesDefaultRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post authorization roles default request entity too large response has a 5xx status code
func (o *PostAuthorizationRolesDefaultRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post authorization roles default request entity too large response a status code equal to that given
func (o *PostAuthorizationRolesDefaultRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostAuthorizationRolesDefaultRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles/default][%d] postAuthorizationRolesDefaultRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostAuthorizationRolesDefaultRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles/default][%d] postAuthorizationRolesDefaultRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostAuthorizationRolesDefaultRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationRolesDefaultRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationRolesDefaultUnsupportedMediaType creates a PostAuthorizationRolesDefaultUnsupportedMediaType with default headers values
func NewPostAuthorizationRolesDefaultUnsupportedMediaType() *PostAuthorizationRolesDefaultUnsupportedMediaType {
	return &PostAuthorizationRolesDefaultUnsupportedMediaType{}
}

/*
PostAuthorizationRolesDefaultUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostAuthorizationRolesDefaultUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization roles default unsupported media type response has a 2xx status code
func (o *PostAuthorizationRolesDefaultUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization roles default unsupported media type response has a 3xx status code
func (o *PostAuthorizationRolesDefaultUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization roles default unsupported media type response has a 4xx status code
func (o *PostAuthorizationRolesDefaultUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post authorization roles default unsupported media type response has a 5xx status code
func (o *PostAuthorizationRolesDefaultUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post authorization roles default unsupported media type response a status code equal to that given
func (o *PostAuthorizationRolesDefaultUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostAuthorizationRolesDefaultUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles/default][%d] postAuthorizationRolesDefaultUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostAuthorizationRolesDefaultUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles/default][%d] postAuthorizationRolesDefaultUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostAuthorizationRolesDefaultUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationRolesDefaultUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationRolesDefaultTooManyRequests creates a PostAuthorizationRolesDefaultTooManyRequests with default headers values
func NewPostAuthorizationRolesDefaultTooManyRequests() *PostAuthorizationRolesDefaultTooManyRequests {
	return &PostAuthorizationRolesDefaultTooManyRequests{}
}

/*
PostAuthorizationRolesDefaultTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostAuthorizationRolesDefaultTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization roles default too many requests response has a 2xx status code
func (o *PostAuthorizationRolesDefaultTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization roles default too many requests response has a 3xx status code
func (o *PostAuthorizationRolesDefaultTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization roles default too many requests response has a 4xx status code
func (o *PostAuthorizationRolesDefaultTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post authorization roles default too many requests response has a 5xx status code
func (o *PostAuthorizationRolesDefaultTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post authorization roles default too many requests response a status code equal to that given
func (o *PostAuthorizationRolesDefaultTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostAuthorizationRolesDefaultTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles/default][%d] postAuthorizationRolesDefaultTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostAuthorizationRolesDefaultTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles/default][%d] postAuthorizationRolesDefaultTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostAuthorizationRolesDefaultTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationRolesDefaultTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationRolesDefaultInternalServerError creates a PostAuthorizationRolesDefaultInternalServerError with default headers values
func NewPostAuthorizationRolesDefaultInternalServerError() *PostAuthorizationRolesDefaultInternalServerError {
	return &PostAuthorizationRolesDefaultInternalServerError{}
}

/*
PostAuthorizationRolesDefaultInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostAuthorizationRolesDefaultInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization roles default internal server error response has a 2xx status code
func (o *PostAuthorizationRolesDefaultInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization roles default internal server error response has a 3xx status code
func (o *PostAuthorizationRolesDefaultInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization roles default internal server error response has a 4xx status code
func (o *PostAuthorizationRolesDefaultInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post authorization roles default internal server error response has a 5xx status code
func (o *PostAuthorizationRolesDefaultInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post authorization roles default internal server error response a status code equal to that given
func (o *PostAuthorizationRolesDefaultInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostAuthorizationRolesDefaultInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles/default][%d] postAuthorizationRolesDefaultInternalServerError  %+v", 500, o.Payload)
}

func (o *PostAuthorizationRolesDefaultInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles/default][%d] postAuthorizationRolesDefaultInternalServerError  %+v", 500, o.Payload)
}

func (o *PostAuthorizationRolesDefaultInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationRolesDefaultInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationRolesDefaultServiceUnavailable creates a PostAuthorizationRolesDefaultServiceUnavailable with default headers values
func NewPostAuthorizationRolesDefaultServiceUnavailable() *PostAuthorizationRolesDefaultServiceUnavailable {
	return &PostAuthorizationRolesDefaultServiceUnavailable{}
}

/*
PostAuthorizationRolesDefaultServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostAuthorizationRolesDefaultServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization roles default service unavailable response has a 2xx status code
func (o *PostAuthorizationRolesDefaultServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization roles default service unavailable response has a 3xx status code
func (o *PostAuthorizationRolesDefaultServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization roles default service unavailable response has a 4xx status code
func (o *PostAuthorizationRolesDefaultServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post authorization roles default service unavailable response has a 5xx status code
func (o *PostAuthorizationRolesDefaultServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post authorization roles default service unavailable response a status code equal to that given
func (o *PostAuthorizationRolesDefaultServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostAuthorizationRolesDefaultServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles/default][%d] postAuthorizationRolesDefaultServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostAuthorizationRolesDefaultServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles/default][%d] postAuthorizationRolesDefaultServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostAuthorizationRolesDefaultServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationRolesDefaultServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationRolesDefaultGatewayTimeout creates a PostAuthorizationRolesDefaultGatewayTimeout with default headers values
func NewPostAuthorizationRolesDefaultGatewayTimeout() *PostAuthorizationRolesDefaultGatewayTimeout {
	return &PostAuthorizationRolesDefaultGatewayTimeout{}
}

/*
PostAuthorizationRolesDefaultGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostAuthorizationRolesDefaultGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization roles default gateway timeout response has a 2xx status code
func (o *PostAuthorizationRolesDefaultGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization roles default gateway timeout response has a 3xx status code
func (o *PostAuthorizationRolesDefaultGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization roles default gateway timeout response has a 4xx status code
func (o *PostAuthorizationRolesDefaultGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post authorization roles default gateway timeout response has a 5xx status code
func (o *PostAuthorizationRolesDefaultGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post authorization roles default gateway timeout response a status code equal to that given
func (o *PostAuthorizationRolesDefaultGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostAuthorizationRolesDefaultGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles/default][%d] postAuthorizationRolesDefaultGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostAuthorizationRolesDefaultGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles/default][%d] postAuthorizationRolesDefaultGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostAuthorizationRolesDefaultGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationRolesDefaultGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
