// Code generated by go-swagger; DO NOT EDIT.

package authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetAuthorizationDivisionGrantsReader is a Reader for the GetAuthorizationDivisionGrants structure.
type GetAuthorizationDivisionGrantsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAuthorizationDivisionGrantsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAuthorizationDivisionGrantsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAuthorizationDivisionGrantsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAuthorizationDivisionGrantsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAuthorizationDivisionGrantsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAuthorizationDivisionGrantsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetAuthorizationDivisionGrantsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetAuthorizationDivisionGrantsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetAuthorizationDivisionGrantsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetAuthorizationDivisionGrantsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAuthorizationDivisionGrantsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetAuthorizationDivisionGrantsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetAuthorizationDivisionGrantsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAuthorizationDivisionGrantsOK creates a GetAuthorizationDivisionGrantsOK with default headers values
func NewGetAuthorizationDivisionGrantsOK() *GetAuthorizationDivisionGrantsOK {
	return &GetAuthorizationDivisionGrantsOK{}
}

/*
GetAuthorizationDivisionGrantsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetAuthorizationDivisionGrantsOK struct {
	Payload *models.AuthzDivisionGrantEntityListing
}

// IsSuccess returns true when this get authorization division grants o k response has a 2xx status code
func (o *GetAuthorizationDivisionGrantsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get authorization division grants o k response has a 3xx status code
func (o *GetAuthorizationDivisionGrantsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization division grants o k response has a 4xx status code
func (o *GetAuthorizationDivisionGrantsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get authorization division grants o k response has a 5xx status code
func (o *GetAuthorizationDivisionGrantsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get authorization division grants o k response a status code equal to that given
func (o *GetAuthorizationDivisionGrantsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetAuthorizationDivisionGrantsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions/{divisionId}/grants][%d] getAuthorizationDivisionGrantsOK  %+v", 200, o.Payload)
}

func (o *GetAuthorizationDivisionGrantsOK) String() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions/{divisionId}/grants][%d] getAuthorizationDivisionGrantsOK  %+v", 200, o.Payload)
}

func (o *GetAuthorizationDivisionGrantsOK) GetPayload() *models.AuthzDivisionGrantEntityListing {
	return o.Payload
}

func (o *GetAuthorizationDivisionGrantsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthzDivisionGrantEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationDivisionGrantsBadRequest creates a GetAuthorizationDivisionGrantsBadRequest with default headers values
func NewGetAuthorizationDivisionGrantsBadRequest() *GetAuthorizationDivisionGrantsBadRequest {
	return &GetAuthorizationDivisionGrantsBadRequest{}
}

/*
GetAuthorizationDivisionGrantsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetAuthorizationDivisionGrantsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get authorization division grants bad request response has a 2xx status code
func (o *GetAuthorizationDivisionGrantsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorization division grants bad request response has a 3xx status code
func (o *GetAuthorizationDivisionGrantsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization division grants bad request response has a 4xx status code
func (o *GetAuthorizationDivisionGrantsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get authorization division grants bad request response has a 5xx status code
func (o *GetAuthorizationDivisionGrantsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get authorization division grants bad request response a status code equal to that given
func (o *GetAuthorizationDivisionGrantsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetAuthorizationDivisionGrantsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions/{divisionId}/grants][%d] getAuthorizationDivisionGrantsBadRequest  %+v", 400, o.Payload)
}

func (o *GetAuthorizationDivisionGrantsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions/{divisionId}/grants][%d] getAuthorizationDivisionGrantsBadRequest  %+v", 400, o.Payload)
}

func (o *GetAuthorizationDivisionGrantsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationDivisionGrantsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationDivisionGrantsUnauthorized creates a GetAuthorizationDivisionGrantsUnauthorized with default headers values
func NewGetAuthorizationDivisionGrantsUnauthorized() *GetAuthorizationDivisionGrantsUnauthorized {
	return &GetAuthorizationDivisionGrantsUnauthorized{}
}

/*
GetAuthorizationDivisionGrantsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetAuthorizationDivisionGrantsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get authorization division grants unauthorized response has a 2xx status code
func (o *GetAuthorizationDivisionGrantsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorization division grants unauthorized response has a 3xx status code
func (o *GetAuthorizationDivisionGrantsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization division grants unauthorized response has a 4xx status code
func (o *GetAuthorizationDivisionGrantsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get authorization division grants unauthorized response has a 5xx status code
func (o *GetAuthorizationDivisionGrantsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get authorization division grants unauthorized response a status code equal to that given
func (o *GetAuthorizationDivisionGrantsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetAuthorizationDivisionGrantsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions/{divisionId}/grants][%d] getAuthorizationDivisionGrantsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAuthorizationDivisionGrantsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions/{divisionId}/grants][%d] getAuthorizationDivisionGrantsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAuthorizationDivisionGrantsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationDivisionGrantsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationDivisionGrantsForbidden creates a GetAuthorizationDivisionGrantsForbidden with default headers values
func NewGetAuthorizationDivisionGrantsForbidden() *GetAuthorizationDivisionGrantsForbidden {
	return &GetAuthorizationDivisionGrantsForbidden{}
}

/*
GetAuthorizationDivisionGrantsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetAuthorizationDivisionGrantsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get authorization division grants forbidden response has a 2xx status code
func (o *GetAuthorizationDivisionGrantsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorization division grants forbidden response has a 3xx status code
func (o *GetAuthorizationDivisionGrantsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization division grants forbidden response has a 4xx status code
func (o *GetAuthorizationDivisionGrantsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get authorization division grants forbidden response has a 5xx status code
func (o *GetAuthorizationDivisionGrantsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get authorization division grants forbidden response a status code equal to that given
func (o *GetAuthorizationDivisionGrantsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetAuthorizationDivisionGrantsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions/{divisionId}/grants][%d] getAuthorizationDivisionGrantsForbidden  %+v", 403, o.Payload)
}

func (o *GetAuthorizationDivisionGrantsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions/{divisionId}/grants][%d] getAuthorizationDivisionGrantsForbidden  %+v", 403, o.Payload)
}

func (o *GetAuthorizationDivisionGrantsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationDivisionGrantsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationDivisionGrantsNotFound creates a GetAuthorizationDivisionGrantsNotFound with default headers values
func NewGetAuthorizationDivisionGrantsNotFound() *GetAuthorizationDivisionGrantsNotFound {
	return &GetAuthorizationDivisionGrantsNotFound{}
}

/*
GetAuthorizationDivisionGrantsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetAuthorizationDivisionGrantsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get authorization division grants not found response has a 2xx status code
func (o *GetAuthorizationDivisionGrantsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorization division grants not found response has a 3xx status code
func (o *GetAuthorizationDivisionGrantsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization division grants not found response has a 4xx status code
func (o *GetAuthorizationDivisionGrantsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get authorization division grants not found response has a 5xx status code
func (o *GetAuthorizationDivisionGrantsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get authorization division grants not found response a status code equal to that given
func (o *GetAuthorizationDivisionGrantsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetAuthorizationDivisionGrantsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions/{divisionId}/grants][%d] getAuthorizationDivisionGrantsNotFound  %+v", 404, o.Payload)
}

func (o *GetAuthorizationDivisionGrantsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions/{divisionId}/grants][%d] getAuthorizationDivisionGrantsNotFound  %+v", 404, o.Payload)
}

func (o *GetAuthorizationDivisionGrantsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationDivisionGrantsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationDivisionGrantsRequestTimeout creates a GetAuthorizationDivisionGrantsRequestTimeout with default headers values
func NewGetAuthorizationDivisionGrantsRequestTimeout() *GetAuthorizationDivisionGrantsRequestTimeout {
	return &GetAuthorizationDivisionGrantsRequestTimeout{}
}

/*
GetAuthorizationDivisionGrantsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetAuthorizationDivisionGrantsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get authorization division grants request timeout response has a 2xx status code
func (o *GetAuthorizationDivisionGrantsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorization division grants request timeout response has a 3xx status code
func (o *GetAuthorizationDivisionGrantsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization division grants request timeout response has a 4xx status code
func (o *GetAuthorizationDivisionGrantsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get authorization division grants request timeout response has a 5xx status code
func (o *GetAuthorizationDivisionGrantsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get authorization division grants request timeout response a status code equal to that given
func (o *GetAuthorizationDivisionGrantsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetAuthorizationDivisionGrantsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions/{divisionId}/grants][%d] getAuthorizationDivisionGrantsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetAuthorizationDivisionGrantsRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions/{divisionId}/grants][%d] getAuthorizationDivisionGrantsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetAuthorizationDivisionGrantsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationDivisionGrantsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationDivisionGrantsRequestEntityTooLarge creates a GetAuthorizationDivisionGrantsRequestEntityTooLarge with default headers values
func NewGetAuthorizationDivisionGrantsRequestEntityTooLarge() *GetAuthorizationDivisionGrantsRequestEntityTooLarge {
	return &GetAuthorizationDivisionGrantsRequestEntityTooLarge{}
}

/*
GetAuthorizationDivisionGrantsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetAuthorizationDivisionGrantsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get authorization division grants request entity too large response has a 2xx status code
func (o *GetAuthorizationDivisionGrantsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorization division grants request entity too large response has a 3xx status code
func (o *GetAuthorizationDivisionGrantsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization division grants request entity too large response has a 4xx status code
func (o *GetAuthorizationDivisionGrantsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get authorization division grants request entity too large response has a 5xx status code
func (o *GetAuthorizationDivisionGrantsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get authorization division grants request entity too large response a status code equal to that given
func (o *GetAuthorizationDivisionGrantsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetAuthorizationDivisionGrantsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions/{divisionId}/grants][%d] getAuthorizationDivisionGrantsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetAuthorizationDivisionGrantsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions/{divisionId}/grants][%d] getAuthorizationDivisionGrantsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetAuthorizationDivisionGrantsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationDivisionGrantsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationDivisionGrantsUnsupportedMediaType creates a GetAuthorizationDivisionGrantsUnsupportedMediaType with default headers values
func NewGetAuthorizationDivisionGrantsUnsupportedMediaType() *GetAuthorizationDivisionGrantsUnsupportedMediaType {
	return &GetAuthorizationDivisionGrantsUnsupportedMediaType{}
}

/*
GetAuthorizationDivisionGrantsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetAuthorizationDivisionGrantsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get authorization division grants unsupported media type response has a 2xx status code
func (o *GetAuthorizationDivisionGrantsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorization division grants unsupported media type response has a 3xx status code
func (o *GetAuthorizationDivisionGrantsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization division grants unsupported media type response has a 4xx status code
func (o *GetAuthorizationDivisionGrantsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get authorization division grants unsupported media type response has a 5xx status code
func (o *GetAuthorizationDivisionGrantsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get authorization division grants unsupported media type response a status code equal to that given
func (o *GetAuthorizationDivisionGrantsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetAuthorizationDivisionGrantsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions/{divisionId}/grants][%d] getAuthorizationDivisionGrantsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetAuthorizationDivisionGrantsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions/{divisionId}/grants][%d] getAuthorizationDivisionGrantsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetAuthorizationDivisionGrantsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationDivisionGrantsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationDivisionGrantsTooManyRequests creates a GetAuthorizationDivisionGrantsTooManyRequests with default headers values
func NewGetAuthorizationDivisionGrantsTooManyRequests() *GetAuthorizationDivisionGrantsTooManyRequests {
	return &GetAuthorizationDivisionGrantsTooManyRequests{}
}

/*
GetAuthorizationDivisionGrantsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetAuthorizationDivisionGrantsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get authorization division grants too many requests response has a 2xx status code
func (o *GetAuthorizationDivisionGrantsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorization division grants too many requests response has a 3xx status code
func (o *GetAuthorizationDivisionGrantsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization division grants too many requests response has a 4xx status code
func (o *GetAuthorizationDivisionGrantsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get authorization division grants too many requests response has a 5xx status code
func (o *GetAuthorizationDivisionGrantsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get authorization division grants too many requests response a status code equal to that given
func (o *GetAuthorizationDivisionGrantsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetAuthorizationDivisionGrantsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions/{divisionId}/grants][%d] getAuthorizationDivisionGrantsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetAuthorizationDivisionGrantsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions/{divisionId}/grants][%d] getAuthorizationDivisionGrantsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetAuthorizationDivisionGrantsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationDivisionGrantsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationDivisionGrantsInternalServerError creates a GetAuthorizationDivisionGrantsInternalServerError with default headers values
func NewGetAuthorizationDivisionGrantsInternalServerError() *GetAuthorizationDivisionGrantsInternalServerError {
	return &GetAuthorizationDivisionGrantsInternalServerError{}
}

/*
GetAuthorizationDivisionGrantsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetAuthorizationDivisionGrantsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get authorization division grants internal server error response has a 2xx status code
func (o *GetAuthorizationDivisionGrantsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorization division grants internal server error response has a 3xx status code
func (o *GetAuthorizationDivisionGrantsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization division grants internal server error response has a 4xx status code
func (o *GetAuthorizationDivisionGrantsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get authorization division grants internal server error response has a 5xx status code
func (o *GetAuthorizationDivisionGrantsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get authorization division grants internal server error response a status code equal to that given
func (o *GetAuthorizationDivisionGrantsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetAuthorizationDivisionGrantsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions/{divisionId}/grants][%d] getAuthorizationDivisionGrantsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAuthorizationDivisionGrantsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions/{divisionId}/grants][%d] getAuthorizationDivisionGrantsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAuthorizationDivisionGrantsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationDivisionGrantsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationDivisionGrantsServiceUnavailable creates a GetAuthorizationDivisionGrantsServiceUnavailable with default headers values
func NewGetAuthorizationDivisionGrantsServiceUnavailable() *GetAuthorizationDivisionGrantsServiceUnavailable {
	return &GetAuthorizationDivisionGrantsServiceUnavailable{}
}

/*
GetAuthorizationDivisionGrantsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetAuthorizationDivisionGrantsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get authorization division grants service unavailable response has a 2xx status code
func (o *GetAuthorizationDivisionGrantsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorization division grants service unavailable response has a 3xx status code
func (o *GetAuthorizationDivisionGrantsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization division grants service unavailable response has a 4xx status code
func (o *GetAuthorizationDivisionGrantsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get authorization division grants service unavailable response has a 5xx status code
func (o *GetAuthorizationDivisionGrantsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get authorization division grants service unavailable response a status code equal to that given
func (o *GetAuthorizationDivisionGrantsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetAuthorizationDivisionGrantsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions/{divisionId}/grants][%d] getAuthorizationDivisionGrantsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetAuthorizationDivisionGrantsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions/{divisionId}/grants][%d] getAuthorizationDivisionGrantsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetAuthorizationDivisionGrantsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationDivisionGrantsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationDivisionGrantsGatewayTimeout creates a GetAuthorizationDivisionGrantsGatewayTimeout with default headers values
func NewGetAuthorizationDivisionGrantsGatewayTimeout() *GetAuthorizationDivisionGrantsGatewayTimeout {
	return &GetAuthorizationDivisionGrantsGatewayTimeout{}
}

/*
GetAuthorizationDivisionGrantsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetAuthorizationDivisionGrantsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get authorization division grants gateway timeout response has a 2xx status code
func (o *GetAuthorizationDivisionGrantsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorization division grants gateway timeout response has a 3xx status code
func (o *GetAuthorizationDivisionGrantsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization division grants gateway timeout response has a 4xx status code
func (o *GetAuthorizationDivisionGrantsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get authorization division grants gateway timeout response has a 5xx status code
func (o *GetAuthorizationDivisionGrantsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get authorization division grants gateway timeout response a status code equal to that given
func (o *GetAuthorizationDivisionGrantsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetAuthorizationDivisionGrantsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions/{divisionId}/grants][%d] getAuthorizationDivisionGrantsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetAuthorizationDivisionGrantsGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/authorization/divisions/{divisionId}/grants][%d] getAuthorizationDivisionGrantsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetAuthorizationDivisionGrantsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationDivisionGrantsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
