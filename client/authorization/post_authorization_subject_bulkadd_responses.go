// Code generated by go-swagger; DO NOT EDIT.

package authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostAuthorizationSubjectBulkaddReader is a Reader for the PostAuthorizationSubjectBulkadd structure.
type PostAuthorizationSubjectBulkaddReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostAuthorizationSubjectBulkaddReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPostAuthorizationSubjectBulkaddNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostAuthorizationSubjectBulkaddBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostAuthorizationSubjectBulkaddUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostAuthorizationSubjectBulkaddForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostAuthorizationSubjectBulkaddNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostAuthorizationSubjectBulkaddRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostAuthorizationSubjectBulkaddRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostAuthorizationSubjectBulkaddUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostAuthorizationSubjectBulkaddTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostAuthorizationSubjectBulkaddInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostAuthorizationSubjectBulkaddServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostAuthorizationSubjectBulkaddGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostAuthorizationSubjectBulkaddNoContent creates a PostAuthorizationSubjectBulkaddNoContent with default headers values
func NewPostAuthorizationSubjectBulkaddNoContent() *PostAuthorizationSubjectBulkaddNoContent {
	return &PostAuthorizationSubjectBulkaddNoContent{}
}

/*
PostAuthorizationSubjectBulkaddNoContent describes a response with status code 204, with default header values.

Bulk Grants Created
*/
type PostAuthorizationSubjectBulkaddNoContent struct {
}

// IsSuccess returns true when this post authorization subject bulkadd no content response has a 2xx status code
func (o *PostAuthorizationSubjectBulkaddNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post authorization subject bulkadd no content response has a 3xx status code
func (o *PostAuthorizationSubjectBulkaddNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization subject bulkadd no content response has a 4xx status code
func (o *PostAuthorizationSubjectBulkaddNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this post authorization subject bulkadd no content response has a 5xx status code
func (o *PostAuthorizationSubjectBulkaddNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this post authorization subject bulkadd no content response a status code equal to that given
func (o *PostAuthorizationSubjectBulkaddNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *PostAuthorizationSubjectBulkaddNoContent) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkadd][%d] postAuthorizationSubjectBulkaddNoContent ", 204)
}

func (o *PostAuthorizationSubjectBulkaddNoContent) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkadd][%d] postAuthorizationSubjectBulkaddNoContent ", 204)
}

func (o *PostAuthorizationSubjectBulkaddNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostAuthorizationSubjectBulkaddBadRequest creates a PostAuthorizationSubjectBulkaddBadRequest with default headers values
func NewPostAuthorizationSubjectBulkaddBadRequest() *PostAuthorizationSubjectBulkaddBadRequest {
	return &PostAuthorizationSubjectBulkaddBadRequest{}
}

/*
PostAuthorizationSubjectBulkaddBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostAuthorizationSubjectBulkaddBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization subject bulkadd bad request response has a 2xx status code
func (o *PostAuthorizationSubjectBulkaddBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization subject bulkadd bad request response has a 3xx status code
func (o *PostAuthorizationSubjectBulkaddBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization subject bulkadd bad request response has a 4xx status code
func (o *PostAuthorizationSubjectBulkaddBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post authorization subject bulkadd bad request response has a 5xx status code
func (o *PostAuthorizationSubjectBulkaddBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post authorization subject bulkadd bad request response a status code equal to that given
func (o *PostAuthorizationSubjectBulkaddBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostAuthorizationSubjectBulkaddBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkadd][%d] postAuthorizationSubjectBulkaddBadRequest  %+v", 400, o.Payload)
}

func (o *PostAuthorizationSubjectBulkaddBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkadd][%d] postAuthorizationSubjectBulkaddBadRequest  %+v", 400, o.Payload)
}

func (o *PostAuthorizationSubjectBulkaddBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationSubjectBulkaddBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationSubjectBulkaddUnauthorized creates a PostAuthorizationSubjectBulkaddUnauthorized with default headers values
func NewPostAuthorizationSubjectBulkaddUnauthorized() *PostAuthorizationSubjectBulkaddUnauthorized {
	return &PostAuthorizationSubjectBulkaddUnauthorized{}
}

/*
PostAuthorizationSubjectBulkaddUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostAuthorizationSubjectBulkaddUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization subject bulkadd unauthorized response has a 2xx status code
func (o *PostAuthorizationSubjectBulkaddUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization subject bulkadd unauthorized response has a 3xx status code
func (o *PostAuthorizationSubjectBulkaddUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization subject bulkadd unauthorized response has a 4xx status code
func (o *PostAuthorizationSubjectBulkaddUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post authorization subject bulkadd unauthorized response has a 5xx status code
func (o *PostAuthorizationSubjectBulkaddUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post authorization subject bulkadd unauthorized response a status code equal to that given
func (o *PostAuthorizationSubjectBulkaddUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostAuthorizationSubjectBulkaddUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkadd][%d] postAuthorizationSubjectBulkaddUnauthorized  %+v", 401, o.Payload)
}

func (o *PostAuthorizationSubjectBulkaddUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkadd][%d] postAuthorizationSubjectBulkaddUnauthorized  %+v", 401, o.Payload)
}

func (o *PostAuthorizationSubjectBulkaddUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationSubjectBulkaddUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationSubjectBulkaddForbidden creates a PostAuthorizationSubjectBulkaddForbidden with default headers values
func NewPostAuthorizationSubjectBulkaddForbidden() *PostAuthorizationSubjectBulkaddForbidden {
	return &PostAuthorizationSubjectBulkaddForbidden{}
}

/*
PostAuthorizationSubjectBulkaddForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostAuthorizationSubjectBulkaddForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization subject bulkadd forbidden response has a 2xx status code
func (o *PostAuthorizationSubjectBulkaddForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization subject bulkadd forbidden response has a 3xx status code
func (o *PostAuthorizationSubjectBulkaddForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization subject bulkadd forbidden response has a 4xx status code
func (o *PostAuthorizationSubjectBulkaddForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post authorization subject bulkadd forbidden response has a 5xx status code
func (o *PostAuthorizationSubjectBulkaddForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post authorization subject bulkadd forbidden response a status code equal to that given
func (o *PostAuthorizationSubjectBulkaddForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostAuthorizationSubjectBulkaddForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkadd][%d] postAuthorizationSubjectBulkaddForbidden  %+v", 403, o.Payload)
}

func (o *PostAuthorizationSubjectBulkaddForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkadd][%d] postAuthorizationSubjectBulkaddForbidden  %+v", 403, o.Payload)
}

func (o *PostAuthorizationSubjectBulkaddForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationSubjectBulkaddForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationSubjectBulkaddNotFound creates a PostAuthorizationSubjectBulkaddNotFound with default headers values
func NewPostAuthorizationSubjectBulkaddNotFound() *PostAuthorizationSubjectBulkaddNotFound {
	return &PostAuthorizationSubjectBulkaddNotFound{}
}

/*
PostAuthorizationSubjectBulkaddNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostAuthorizationSubjectBulkaddNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization subject bulkadd not found response has a 2xx status code
func (o *PostAuthorizationSubjectBulkaddNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization subject bulkadd not found response has a 3xx status code
func (o *PostAuthorizationSubjectBulkaddNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization subject bulkadd not found response has a 4xx status code
func (o *PostAuthorizationSubjectBulkaddNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post authorization subject bulkadd not found response has a 5xx status code
func (o *PostAuthorizationSubjectBulkaddNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post authorization subject bulkadd not found response a status code equal to that given
func (o *PostAuthorizationSubjectBulkaddNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostAuthorizationSubjectBulkaddNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkadd][%d] postAuthorizationSubjectBulkaddNotFound  %+v", 404, o.Payload)
}

func (o *PostAuthorizationSubjectBulkaddNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkadd][%d] postAuthorizationSubjectBulkaddNotFound  %+v", 404, o.Payload)
}

func (o *PostAuthorizationSubjectBulkaddNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationSubjectBulkaddNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationSubjectBulkaddRequestTimeout creates a PostAuthorizationSubjectBulkaddRequestTimeout with default headers values
func NewPostAuthorizationSubjectBulkaddRequestTimeout() *PostAuthorizationSubjectBulkaddRequestTimeout {
	return &PostAuthorizationSubjectBulkaddRequestTimeout{}
}

/*
PostAuthorizationSubjectBulkaddRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostAuthorizationSubjectBulkaddRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization subject bulkadd request timeout response has a 2xx status code
func (o *PostAuthorizationSubjectBulkaddRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization subject bulkadd request timeout response has a 3xx status code
func (o *PostAuthorizationSubjectBulkaddRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization subject bulkadd request timeout response has a 4xx status code
func (o *PostAuthorizationSubjectBulkaddRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post authorization subject bulkadd request timeout response has a 5xx status code
func (o *PostAuthorizationSubjectBulkaddRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post authorization subject bulkadd request timeout response a status code equal to that given
func (o *PostAuthorizationSubjectBulkaddRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostAuthorizationSubjectBulkaddRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkadd][%d] postAuthorizationSubjectBulkaddRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostAuthorizationSubjectBulkaddRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkadd][%d] postAuthorizationSubjectBulkaddRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostAuthorizationSubjectBulkaddRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationSubjectBulkaddRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationSubjectBulkaddRequestEntityTooLarge creates a PostAuthorizationSubjectBulkaddRequestEntityTooLarge with default headers values
func NewPostAuthorizationSubjectBulkaddRequestEntityTooLarge() *PostAuthorizationSubjectBulkaddRequestEntityTooLarge {
	return &PostAuthorizationSubjectBulkaddRequestEntityTooLarge{}
}

/*
PostAuthorizationSubjectBulkaddRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PostAuthorizationSubjectBulkaddRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization subject bulkadd request entity too large response has a 2xx status code
func (o *PostAuthorizationSubjectBulkaddRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization subject bulkadd request entity too large response has a 3xx status code
func (o *PostAuthorizationSubjectBulkaddRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization subject bulkadd request entity too large response has a 4xx status code
func (o *PostAuthorizationSubjectBulkaddRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post authorization subject bulkadd request entity too large response has a 5xx status code
func (o *PostAuthorizationSubjectBulkaddRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post authorization subject bulkadd request entity too large response a status code equal to that given
func (o *PostAuthorizationSubjectBulkaddRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostAuthorizationSubjectBulkaddRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkadd][%d] postAuthorizationSubjectBulkaddRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostAuthorizationSubjectBulkaddRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkadd][%d] postAuthorizationSubjectBulkaddRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostAuthorizationSubjectBulkaddRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationSubjectBulkaddRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationSubjectBulkaddUnsupportedMediaType creates a PostAuthorizationSubjectBulkaddUnsupportedMediaType with default headers values
func NewPostAuthorizationSubjectBulkaddUnsupportedMediaType() *PostAuthorizationSubjectBulkaddUnsupportedMediaType {
	return &PostAuthorizationSubjectBulkaddUnsupportedMediaType{}
}

/*
PostAuthorizationSubjectBulkaddUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostAuthorizationSubjectBulkaddUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization subject bulkadd unsupported media type response has a 2xx status code
func (o *PostAuthorizationSubjectBulkaddUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization subject bulkadd unsupported media type response has a 3xx status code
func (o *PostAuthorizationSubjectBulkaddUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization subject bulkadd unsupported media type response has a 4xx status code
func (o *PostAuthorizationSubjectBulkaddUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post authorization subject bulkadd unsupported media type response has a 5xx status code
func (o *PostAuthorizationSubjectBulkaddUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post authorization subject bulkadd unsupported media type response a status code equal to that given
func (o *PostAuthorizationSubjectBulkaddUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostAuthorizationSubjectBulkaddUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkadd][%d] postAuthorizationSubjectBulkaddUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostAuthorizationSubjectBulkaddUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkadd][%d] postAuthorizationSubjectBulkaddUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostAuthorizationSubjectBulkaddUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationSubjectBulkaddUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationSubjectBulkaddTooManyRequests creates a PostAuthorizationSubjectBulkaddTooManyRequests with default headers values
func NewPostAuthorizationSubjectBulkaddTooManyRequests() *PostAuthorizationSubjectBulkaddTooManyRequests {
	return &PostAuthorizationSubjectBulkaddTooManyRequests{}
}

/*
PostAuthorizationSubjectBulkaddTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostAuthorizationSubjectBulkaddTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization subject bulkadd too many requests response has a 2xx status code
func (o *PostAuthorizationSubjectBulkaddTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization subject bulkadd too many requests response has a 3xx status code
func (o *PostAuthorizationSubjectBulkaddTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization subject bulkadd too many requests response has a 4xx status code
func (o *PostAuthorizationSubjectBulkaddTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post authorization subject bulkadd too many requests response has a 5xx status code
func (o *PostAuthorizationSubjectBulkaddTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post authorization subject bulkadd too many requests response a status code equal to that given
func (o *PostAuthorizationSubjectBulkaddTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostAuthorizationSubjectBulkaddTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkadd][%d] postAuthorizationSubjectBulkaddTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostAuthorizationSubjectBulkaddTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkadd][%d] postAuthorizationSubjectBulkaddTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostAuthorizationSubjectBulkaddTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationSubjectBulkaddTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationSubjectBulkaddInternalServerError creates a PostAuthorizationSubjectBulkaddInternalServerError with default headers values
func NewPostAuthorizationSubjectBulkaddInternalServerError() *PostAuthorizationSubjectBulkaddInternalServerError {
	return &PostAuthorizationSubjectBulkaddInternalServerError{}
}

/*
PostAuthorizationSubjectBulkaddInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostAuthorizationSubjectBulkaddInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization subject bulkadd internal server error response has a 2xx status code
func (o *PostAuthorizationSubjectBulkaddInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization subject bulkadd internal server error response has a 3xx status code
func (o *PostAuthorizationSubjectBulkaddInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization subject bulkadd internal server error response has a 4xx status code
func (o *PostAuthorizationSubjectBulkaddInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post authorization subject bulkadd internal server error response has a 5xx status code
func (o *PostAuthorizationSubjectBulkaddInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post authorization subject bulkadd internal server error response a status code equal to that given
func (o *PostAuthorizationSubjectBulkaddInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostAuthorizationSubjectBulkaddInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkadd][%d] postAuthorizationSubjectBulkaddInternalServerError  %+v", 500, o.Payload)
}

func (o *PostAuthorizationSubjectBulkaddInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkadd][%d] postAuthorizationSubjectBulkaddInternalServerError  %+v", 500, o.Payload)
}

func (o *PostAuthorizationSubjectBulkaddInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationSubjectBulkaddInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationSubjectBulkaddServiceUnavailable creates a PostAuthorizationSubjectBulkaddServiceUnavailable with default headers values
func NewPostAuthorizationSubjectBulkaddServiceUnavailable() *PostAuthorizationSubjectBulkaddServiceUnavailable {
	return &PostAuthorizationSubjectBulkaddServiceUnavailable{}
}

/*
PostAuthorizationSubjectBulkaddServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostAuthorizationSubjectBulkaddServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization subject bulkadd service unavailable response has a 2xx status code
func (o *PostAuthorizationSubjectBulkaddServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization subject bulkadd service unavailable response has a 3xx status code
func (o *PostAuthorizationSubjectBulkaddServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization subject bulkadd service unavailable response has a 4xx status code
func (o *PostAuthorizationSubjectBulkaddServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post authorization subject bulkadd service unavailable response has a 5xx status code
func (o *PostAuthorizationSubjectBulkaddServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post authorization subject bulkadd service unavailable response a status code equal to that given
func (o *PostAuthorizationSubjectBulkaddServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostAuthorizationSubjectBulkaddServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkadd][%d] postAuthorizationSubjectBulkaddServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostAuthorizationSubjectBulkaddServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkadd][%d] postAuthorizationSubjectBulkaddServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostAuthorizationSubjectBulkaddServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationSubjectBulkaddServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationSubjectBulkaddGatewayTimeout creates a PostAuthorizationSubjectBulkaddGatewayTimeout with default headers values
func NewPostAuthorizationSubjectBulkaddGatewayTimeout() *PostAuthorizationSubjectBulkaddGatewayTimeout {
	return &PostAuthorizationSubjectBulkaddGatewayTimeout{}
}

/*
PostAuthorizationSubjectBulkaddGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostAuthorizationSubjectBulkaddGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization subject bulkadd gateway timeout response has a 2xx status code
func (o *PostAuthorizationSubjectBulkaddGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization subject bulkadd gateway timeout response has a 3xx status code
func (o *PostAuthorizationSubjectBulkaddGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization subject bulkadd gateway timeout response has a 4xx status code
func (o *PostAuthorizationSubjectBulkaddGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post authorization subject bulkadd gateway timeout response has a 5xx status code
func (o *PostAuthorizationSubjectBulkaddGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post authorization subject bulkadd gateway timeout response a status code equal to that given
func (o *PostAuthorizationSubjectBulkaddGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostAuthorizationSubjectBulkaddGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkadd][%d] postAuthorizationSubjectBulkaddGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostAuthorizationSubjectBulkaddGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/subjects/{subjectId}/bulkadd][%d] postAuthorizationSubjectBulkaddGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostAuthorizationSubjectBulkaddGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationSubjectBulkaddGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
