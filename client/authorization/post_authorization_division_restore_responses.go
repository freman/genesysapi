// Code generated by go-swagger; DO NOT EDIT.

package authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostAuthorizationDivisionRestoreReader is a Reader for the PostAuthorizationDivisionRestore structure.
type PostAuthorizationDivisionRestoreReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostAuthorizationDivisionRestoreReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostAuthorizationDivisionRestoreOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostAuthorizationDivisionRestoreBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostAuthorizationDivisionRestoreUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostAuthorizationDivisionRestoreForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostAuthorizationDivisionRestoreNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostAuthorizationDivisionRestoreRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPostAuthorizationDivisionRestoreConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostAuthorizationDivisionRestoreRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostAuthorizationDivisionRestoreUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostAuthorizationDivisionRestoreTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostAuthorizationDivisionRestoreInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostAuthorizationDivisionRestoreServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostAuthorizationDivisionRestoreGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostAuthorizationDivisionRestoreOK creates a PostAuthorizationDivisionRestoreOK with default headers values
func NewPostAuthorizationDivisionRestoreOK() *PostAuthorizationDivisionRestoreOK {
	return &PostAuthorizationDivisionRestoreOK{}
}

/*
PostAuthorizationDivisionRestoreOK describes a response with status code 200, with default header values.

successful operation
*/
type PostAuthorizationDivisionRestoreOK struct {
	Payload *models.AuthzDivision
}

// IsSuccess returns true when this post authorization division restore o k response has a 2xx status code
func (o *PostAuthorizationDivisionRestoreOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post authorization division restore o k response has a 3xx status code
func (o *PostAuthorizationDivisionRestoreOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization division restore o k response has a 4xx status code
func (o *PostAuthorizationDivisionRestoreOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post authorization division restore o k response has a 5xx status code
func (o *PostAuthorizationDivisionRestoreOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post authorization division restore o k response a status code equal to that given
func (o *PostAuthorizationDivisionRestoreOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostAuthorizationDivisionRestoreOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/divisions/{divisionId}/restore][%d] postAuthorizationDivisionRestoreOK  %+v", 200, o.Payload)
}

func (o *PostAuthorizationDivisionRestoreOK) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/divisions/{divisionId}/restore][%d] postAuthorizationDivisionRestoreOK  %+v", 200, o.Payload)
}

func (o *PostAuthorizationDivisionRestoreOK) GetPayload() *models.AuthzDivision {
	return o.Payload
}

func (o *PostAuthorizationDivisionRestoreOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthzDivision)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationDivisionRestoreBadRequest creates a PostAuthorizationDivisionRestoreBadRequest with default headers values
func NewPostAuthorizationDivisionRestoreBadRequest() *PostAuthorizationDivisionRestoreBadRequest {
	return &PostAuthorizationDivisionRestoreBadRequest{}
}

/*
PostAuthorizationDivisionRestoreBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostAuthorizationDivisionRestoreBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization division restore bad request response has a 2xx status code
func (o *PostAuthorizationDivisionRestoreBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization division restore bad request response has a 3xx status code
func (o *PostAuthorizationDivisionRestoreBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization division restore bad request response has a 4xx status code
func (o *PostAuthorizationDivisionRestoreBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post authorization division restore bad request response has a 5xx status code
func (o *PostAuthorizationDivisionRestoreBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post authorization division restore bad request response a status code equal to that given
func (o *PostAuthorizationDivisionRestoreBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostAuthorizationDivisionRestoreBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/divisions/{divisionId}/restore][%d] postAuthorizationDivisionRestoreBadRequest  %+v", 400, o.Payload)
}

func (o *PostAuthorizationDivisionRestoreBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/divisions/{divisionId}/restore][%d] postAuthorizationDivisionRestoreBadRequest  %+v", 400, o.Payload)
}

func (o *PostAuthorizationDivisionRestoreBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationDivisionRestoreBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationDivisionRestoreUnauthorized creates a PostAuthorizationDivisionRestoreUnauthorized with default headers values
func NewPostAuthorizationDivisionRestoreUnauthorized() *PostAuthorizationDivisionRestoreUnauthorized {
	return &PostAuthorizationDivisionRestoreUnauthorized{}
}

/*
PostAuthorizationDivisionRestoreUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostAuthorizationDivisionRestoreUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization division restore unauthorized response has a 2xx status code
func (o *PostAuthorizationDivisionRestoreUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization division restore unauthorized response has a 3xx status code
func (o *PostAuthorizationDivisionRestoreUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization division restore unauthorized response has a 4xx status code
func (o *PostAuthorizationDivisionRestoreUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post authorization division restore unauthorized response has a 5xx status code
func (o *PostAuthorizationDivisionRestoreUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post authorization division restore unauthorized response a status code equal to that given
func (o *PostAuthorizationDivisionRestoreUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostAuthorizationDivisionRestoreUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/divisions/{divisionId}/restore][%d] postAuthorizationDivisionRestoreUnauthorized  %+v", 401, o.Payload)
}

func (o *PostAuthorizationDivisionRestoreUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/divisions/{divisionId}/restore][%d] postAuthorizationDivisionRestoreUnauthorized  %+v", 401, o.Payload)
}

func (o *PostAuthorizationDivisionRestoreUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationDivisionRestoreUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationDivisionRestoreForbidden creates a PostAuthorizationDivisionRestoreForbidden with default headers values
func NewPostAuthorizationDivisionRestoreForbidden() *PostAuthorizationDivisionRestoreForbidden {
	return &PostAuthorizationDivisionRestoreForbidden{}
}

/*
PostAuthorizationDivisionRestoreForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostAuthorizationDivisionRestoreForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization division restore forbidden response has a 2xx status code
func (o *PostAuthorizationDivisionRestoreForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization division restore forbidden response has a 3xx status code
func (o *PostAuthorizationDivisionRestoreForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization division restore forbidden response has a 4xx status code
func (o *PostAuthorizationDivisionRestoreForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post authorization division restore forbidden response has a 5xx status code
func (o *PostAuthorizationDivisionRestoreForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post authorization division restore forbidden response a status code equal to that given
func (o *PostAuthorizationDivisionRestoreForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostAuthorizationDivisionRestoreForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/divisions/{divisionId}/restore][%d] postAuthorizationDivisionRestoreForbidden  %+v", 403, o.Payload)
}

func (o *PostAuthorizationDivisionRestoreForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/divisions/{divisionId}/restore][%d] postAuthorizationDivisionRestoreForbidden  %+v", 403, o.Payload)
}

func (o *PostAuthorizationDivisionRestoreForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationDivisionRestoreForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationDivisionRestoreNotFound creates a PostAuthorizationDivisionRestoreNotFound with default headers values
func NewPostAuthorizationDivisionRestoreNotFound() *PostAuthorizationDivisionRestoreNotFound {
	return &PostAuthorizationDivisionRestoreNotFound{}
}

/*
PostAuthorizationDivisionRestoreNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostAuthorizationDivisionRestoreNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization division restore not found response has a 2xx status code
func (o *PostAuthorizationDivisionRestoreNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization division restore not found response has a 3xx status code
func (o *PostAuthorizationDivisionRestoreNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization division restore not found response has a 4xx status code
func (o *PostAuthorizationDivisionRestoreNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post authorization division restore not found response has a 5xx status code
func (o *PostAuthorizationDivisionRestoreNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post authorization division restore not found response a status code equal to that given
func (o *PostAuthorizationDivisionRestoreNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostAuthorizationDivisionRestoreNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/divisions/{divisionId}/restore][%d] postAuthorizationDivisionRestoreNotFound  %+v", 404, o.Payload)
}

func (o *PostAuthorizationDivisionRestoreNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/divisions/{divisionId}/restore][%d] postAuthorizationDivisionRestoreNotFound  %+v", 404, o.Payload)
}

func (o *PostAuthorizationDivisionRestoreNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationDivisionRestoreNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationDivisionRestoreRequestTimeout creates a PostAuthorizationDivisionRestoreRequestTimeout with default headers values
func NewPostAuthorizationDivisionRestoreRequestTimeout() *PostAuthorizationDivisionRestoreRequestTimeout {
	return &PostAuthorizationDivisionRestoreRequestTimeout{}
}

/*
PostAuthorizationDivisionRestoreRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostAuthorizationDivisionRestoreRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization division restore request timeout response has a 2xx status code
func (o *PostAuthorizationDivisionRestoreRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization division restore request timeout response has a 3xx status code
func (o *PostAuthorizationDivisionRestoreRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization division restore request timeout response has a 4xx status code
func (o *PostAuthorizationDivisionRestoreRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post authorization division restore request timeout response has a 5xx status code
func (o *PostAuthorizationDivisionRestoreRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post authorization division restore request timeout response a status code equal to that given
func (o *PostAuthorizationDivisionRestoreRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostAuthorizationDivisionRestoreRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/divisions/{divisionId}/restore][%d] postAuthorizationDivisionRestoreRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostAuthorizationDivisionRestoreRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/divisions/{divisionId}/restore][%d] postAuthorizationDivisionRestoreRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostAuthorizationDivisionRestoreRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationDivisionRestoreRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationDivisionRestoreConflict creates a PostAuthorizationDivisionRestoreConflict with default headers values
func NewPostAuthorizationDivisionRestoreConflict() *PostAuthorizationDivisionRestoreConflict {
	return &PostAuthorizationDivisionRestoreConflict{}
}

/*
PostAuthorizationDivisionRestoreConflict describes a response with status code 409, with default header values.

Conflict
*/
type PostAuthorizationDivisionRestoreConflict struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization division restore conflict response has a 2xx status code
func (o *PostAuthorizationDivisionRestoreConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization division restore conflict response has a 3xx status code
func (o *PostAuthorizationDivisionRestoreConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization division restore conflict response has a 4xx status code
func (o *PostAuthorizationDivisionRestoreConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this post authorization division restore conflict response has a 5xx status code
func (o *PostAuthorizationDivisionRestoreConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this post authorization division restore conflict response a status code equal to that given
func (o *PostAuthorizationDivisionRestoreConflict) IsCode(code int) bool {
	return code == 409
}

func (o *PostAuthorizationDivisionRestoreConflict) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/divisions/{divisionId}/restore][%d] postAuthorizationDivisionRestoreConflict  %+v", 409, o.Payload)
}

func (o *PostAuthorizationDivisionRestoreConflict) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/divisions/{divisionId}/restore][%d] postAuthorizationDivisionRestoreConflict  %+v", 409, o.Payload)
}

func (o *PostAuthorizationDivisionRestoreConflict) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationDivisionRestoreConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationDivisionRestoreRequestEntityTooLarge creates a PostAuthorizationDivisionRestoreRequestEntityTooLarge with default headers values
func NewPostAuthorizationDivisionRestoreRequestEntityTooLarge() *PostAuthorizationDivisionRestoreRequestEntityTooLarge {
	return &PostAuthorizationDivisionRestoreRequestEntityTooLarge{}
}

/*
PostAuthorizationDivisionRestoreRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PostAuthorizationDivisionRestoreRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization division restore request entity too large response has a 2xx status code
func (o *PostAuthorizationDivisionRestoreRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization division restore request entity too large response has a 3xx status code
func (o *PostAuthorizationDivisionRestoreRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization division restore request entity too large response has a 4xx status code
func (o *PostAuthorizationDivisionRestoreRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post authorization division restore request entity too large response has a 5xx status code
func (o *PostAuthorizationDivisionRestoreRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post authorization division restore request entity too large response a status code equal to that given
func (o *PostAuthorizationDivisionRestoreRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostAuthorizationDivisionRestoreRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/divisions/{divisionId}/restore][%d] postAuthorizationDivisionRestoreRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostAuthorizationDivisionRestoreRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/divisions/{divisionId}/restore][%d] postAuthorizationDivisionRestoreRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostAuthorizationDivisionRestoreRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationDivisionRestoreRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationDivisionRestoreUnsupportedMediaType creates a PostAuthorizationDivisionRestoreUnsupportedMediaType with default headers values
func NewPostAuthorizationDivisionRestoreUnsupportedMediaType() *PostAuthorizationDivisionRestoreUnsupportedMediaType {
	return &PostAuthorizationDivisionRestoreUnsupportedMediaType{}
}

/*
PostAuthorizationDivisionRestoreUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostAuthorizationDivisionRestoreUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization division restore unsupported media type response has a 2xx status code
func (o *PostAuthorizationDivisionRestoreUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization division restore unsupported media type response has a 3xx status code
func (o *PostAuthorizationDivisionRestoreUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization division restore unsupported media type response has a 4xx status code
func (o *PostAuthorizationDivisionRestoreUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post authorization division restore unsupported media type response has a 5xx status code
func (o *PostAuthorizationDivisionRestoreUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post authorization division restore unsupported media type response a status code equal to that given
func (o *PostAuthorizationDivisionRestoreUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostAuthorizationDivisionRestoreUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/divisions/{divisionId}/restore][%d] postAuthorizationDivisionRestoreUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostAuthorizationDivisionRestoreUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/divisions/{divisionId}/restore][%d] postAuthorizationDivisionRestoreUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostAuthorizationDivisionRestoreUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationDivisionRestoreUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationDivisionRestoreTooManyRequests creates a PostAuthorizationDivisionRestoreTooManyRequests with default headers values
func NewPostAuthorizationDivisionRestoreTooManyRequests() *PostAuthorizationDivisionRestoreTooManyRequests {
	return &PostAuthorizationDivisionRestoreTooManyRequests{}
}

/*
PostAuthorizationDivisionRestoreTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostAuthorizationDivisionRestoreTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization division restore too many requests response has a 2xx status code
func (o *PostAuthorizationDivisionRestoreTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization division restore too many requests response has a 3xx status code
func (o *PostAuthorizationDivisionRestoreTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization division restore too many requests response has a 4xx status code
func (o *PostAuthorizationDivisionRestoreTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post authorization division restore too many requests response has a 5xx status code
func (o *PostAuthorizationDivisionRestoreTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post authorization division restore too many requests response a status code equal to that given
func (o *PostAuthorizationDivisionRestoreTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostAuthorizationDivisionRestoreTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/divisions/{divisionId}/restore][%d] postAuthorizationDivisionRestoreTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostAuthorizationDivisionRestoreTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/divisions/{divisionId}/restore][%d] postAuthorizationDivisionRestoreTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostAuthorizationDivisionRestoreTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationDivisionRestoreTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationDivisionRestoreInternalServerError creates a PostAuthorizationDivisionRestoreInternalServerError with default headers values
func NewPostAuthorizationDivisionRestoreInternalServerError() *PostAuthorizationDivisionRestoreInternalServerError {
	return &PostAuthorizationDivisionRestoreInternalServerError{}
}

/*
PostAuthorizationDivisionRestoreInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostAuthorizationDivisionRestoreInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization division restore internal server error response has a 2xx status code
func (o *PostAuthorizationDivisionRestoreInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization division restore internal server error response has a 3xx status code
func (o *PostAuthorizationDivisionRestoreInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization division restore internal server error response has a 4xx status code
func (o *PostAuthorizationDivisionRestoreInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post authorization division restore internal server error response has a 5xx status code
func (o *PostAuthorizationDivisionRestoreInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post authorization division restore internal server error response a status code equal to that given
func (o *PostAuthorizationDivisionRestoreInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostAuthorizationDivisionRestoreInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/divisions/{divisionId}/restore][%d] postAuthorizationDivisionRestoreInternalServerError  %+v", 500, o.Payload)
}

func (o *PostAuthorizationDivisionRestoreInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/divisions/{divisionId}/restore][%d] postAuthorizationDivisionRestoreInternalServerError  %+v", 500, o.Payload)
}

func (o *PostAuthorizationDivisionRestoreInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationDivisionRestoreInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationDivisionRestoreServiceUnavailable creates a PostAuthorizationDivisionRestoreServiceUnavailable with default headers values
func NewPostAuthorizationDivisionRestoreServiceUnavailable() *PostAuthorizationDivisionRestoreServiceUnavailable {
	return &PostAuthorizationDivisionRestoreServiceUnavailable{}
}

/*
PostAuthorizationDivisionRestoreServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostAuthorizationDivisionRestoreServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization division restore service unavailable response has a 2xx status code
func (o *PostAuthorizationDivisionRestoreServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization division restore service unavailable response has a 3xx status code
func (o *PostAuthorizationDivisionRestoreServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization division restore service unavailable response has a 4xx status code
func (o *PostAuthorizationDivisionRestoreServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post authorization division restore service unavailable response has a 5xx status code
func (o *PostAuthorizationDivisionRestoreServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post authorization division restore service unavailable response a status code equal to that given
func (o *PostAuthorizationDivisionRestoreServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostAuthorizationDivisionRestoreServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/divisions/{divisionId}/restore][%d] postAuthorizationDivisionRestoreServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostAuthorizationDivisionRestoreServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/divisions/{divisionId}/restore][%d] postAuthorizationDivisionRestoreServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostAuthorizationDivisionRestoreServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationDivisionRestoreServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationDivisionRestoreGatewayTimeout creates a PostAuthorizationDivisionRestoreGatewayTimeout with default headers values
func NewPostAuthorizationDivisionRestoreGatewayTimeout() *PostAuthorizationDivisionRestoreGatewayTimeout {
	return &PostAuthorizationDivisionRestoreGatewayTimeout{}
}

/*
PostAuthorizationDivisionRestoreGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostAuthorizationDivisionRestoreGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization division restore gateway timeout response has a 2xx status code
func (o *PostAuthorizationDivisionRestoreGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization division restore gateway timeout response has a 3xx status code
func (o *PostAuthorizationDivisionRestoreGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization division restore gateway timeout response has a 4xx status code
func (o *PostAuthorizationDivisionRestoreGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post authorization division restore gateway timeout response has a 5xx status code
func (o *PostAuthorizationDivisionRestoreGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post authorization division restore gateway timeout response a status code equal to that given
func (o *PostAuthorizationDivisionRestoreGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostAuthorizationDivisionRestoreGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/divisions/{divisionId}/restore][%d] postAuthorizationDivisionRestoreGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostAuthorizationDivisionRestoreGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/divisions/{divisionId}/restore][%d] postAuthorizationDivisionRestoreGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostAuthorizationDivisionRestoreGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationDivisionRestoreGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
