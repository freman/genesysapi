// Code generated by go-swagger; DO NOT EDIT.

package authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostAuthorizationRoleComparedefaultRightRoleIDReader is a Reader for the PostAuthorizationRoleComparedefaultRightRoleID structure.
type PostAuthorizationRoleComparedefaultRightRoleIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostAuthorizationRoleComparedefaultRightRoleIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostAuthorizationRoleComparedefaultRightRoleIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostAuthorizationRoleComparedefaultRightRoleIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostAuthorizationRoleComparedefaultRightRoleIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostAuthorizationRoleComparedefaultRightRoleIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostAuthorizationRoleComparedefaultRightRoleIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostAuthorizationRoleComparedefaultRightRoleIDRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostAuthorizationRoleComparedefaultRightRoleIDRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostAuthorizationRoleComparedefaultRightRoleIDUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostAuthorizationRoleComparedefaultRightRoleIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostAuthorizationRoleComparedefaultRightRoleIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostAuthorizationRoleComparedefaultRightRoleIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostAuthorizationRoleComparedefaultRightRoleIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostAuthorizationRoleComparedefaultRightRoleIDOK creates a PostAuthorizationRoleComparedefaultRightRoleIDOK with default headers values
func NewPostAuthorizationRoleComparedefaultRightRoleIDOK() *PostAuthorizationRoleComparedefaultRightRoleIDOK {
	return &PostAuthorizationRoleComparedefaultRightRoleIDOK{}
}

/*PostAuthorizationRoleComparedefaultRightRoleIDOK handles this case with default header values.

successful operation
*/
type PostAuthorizationRoleComparedefaultRightRoleIDOK struct {
	Payload *models.DomainOrgRoleDifference
}

func (o *PostAuthorizationRoleComparedefaultRightRoleIDOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles/{leftRoleId}/comparedefault/{rightRoleId}][%d] postAuthorizationRoleComparedefaultRightRoleIdOK  %+v", 200, o.Payload)
}

func (o *PostAuthorizationRoleComparedefaultRightRoleIDOK) GetPayload() *models.DomainOrgRoleDifference {
	return o.Payload
}

func (o *PostAuthorizationRoleComparedefaultRightRoleIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DomainOrgRoleDifference)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationRoleComparedefaultRightRoleIDBadRequest creates a PostAuthorizationRoleComparedefaultRightRoleIDBadRequest with default headers values
func NewPostAuthorizationRoleComparedefaultRightRoleIDBadRequest() *PostAuthorizationRoleComparedefaultRightRoleIDBadRequest {
	return &PostAuthorizationRoleComparedefaultRightRoleIDBadRequest{}
}

/*PostAuthorizationRoleComparedefaultRightRoleIDBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostAuthorizationRoleComparedefaultRightRoleIDBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PostAuthorizationRoleComparedefaultRightRoleIDBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles/{leftRoleId}/comparedefault/{rightRoleId}][%d] postAuthorizationRoleComparedefaultRightRoleIdBadRequest  %+v", 400, o.Payload)
}

func (o *PostAuthorizationRoleComparedefaultRightRoleIDBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationRoleComparedefaultRightRoleIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationRoleComparedefaultRightRoleIDUnauthorized creates a PostAuthorizationRoleComparedefaultRightRoleIDUnauthorized with default headers values
func NewPostAuthorizationRoleComparedefaultRightRoleIDUnauthorized() *PostAuthorizationRoleComparedefaultRightRoleIDUnauthorized {
	return &PostAuthorizationRoleComparedefaultRightRoleIDUnauthorized{}
}

/*PostAuthorizationRoleComparedefaultRightRoleIDUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PostAuthorizationRoleComparedefaultRightRoleIDUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PostAuthorizationRoleComparedefaultRightRoleIDUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles/{leftRoleId}/comparedefault/{rightRoleId}][%d] postAuthorizationRoleComparedefaultRightRoleIdUnauthorized  %+v", 401, o.Payload)
}

func (o *PostAuthorizationRoleComparedefaultRightRoleIDUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationRoleComparedefaultRightRoleIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationRoleComparedefaultRightRoleIDForbidden creates a PostAuthorizationRoleComparedefaultRightRoleIDForbidden with default headers values
func NewPostAuthorizationRoleComparedefaultRightRoleIDForbidden() *PostAuthorizationRoleComparedefaultRightRoleIDForbidden {
	return &PostAuthorizationRoleComparedefaultRightRoleIDForbidden{}
}

/*PostAuthorizationRoleComparedefaultRightRoleIDForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PostAuthorizationRoleComparedefaultRightRoleIDForbidden struct {
	Payload *models.ErrorBody
}

func (o *PostAuthorizationRoleComparedefaultRightRoleIDForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles/{leftRoleId}/comparedefault/{rightRoleId}][%d] postAuthorizationRoleComparedefaultRightRoleIdForbidden  %+v", 403, o.Payload)
}

func (o *PostAuthorizationRoleComparedefaultRightRoleIDForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationRoleComparedefaultRightRoleIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationRoleComparedefaultRightRoleIDNotFound creates a PostAuthorizationRoleComparedefaultRightRoleIDNotFound with default headers values
func NewPostAuthorizationRoleComparedefaultRightRoleIDNotFound() *PostAuthorizationRoleComparedefaultRightRoleIDNotFound {
	return &PostAuthorizationRoleComparedefaultRightRoleIDNotFound{}
}

/*PostAuthorizationRoleComparedefaultRightRoleIDNotFound handles this case with default header values.

The requested resource was not found.
*/
type PostAuthorizationRoleComparedefaultRightRoleIDNotFound struct {
	Payload *models.ErrorBody
}

func (o *PostAuthorizationRoleComparedefaultRightRoleIDNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles/{leftRoleId}/comparedefault/{rightRoleId}][%d] postAuthorizationRoleComparedefaultRightRoleIdNotFound  %+v", 404, o.Payload)
}

func (o *PostAuthorizationRoleComparedefaultRightRoleIDNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationRoleComparedefaultRightRoleIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationRoleComparedefaultRightRoleIDRequestTimeout creates a PostAuthorizationRoleComparedefaultRightRoleIDRequestTimeout with default headers values
func NewPostAuthorizationRoleComparedefaultRightRoleIDRequestTimeout() *PostAuthorizationRoleComparedefaultRightRoleIDRequestTimeout {
	return &PostAuthorizationRoleComparedefaultRightRoleIDRequestTimeout{}
}

/*PostAuthorizationRoleComparedefaultRightRoleIDRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostAuthorizationRoleComparedefaultRightRoleIDRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostAuthorizationRoleComparedefaultRightRoleIDRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles/{leftRoleId}/comparedefault/{rightRoleId}][%d] postAuthorizationRoleComparedefaultRightRoleIdRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostAuthorizationRoleComparedefaultRightRoleIDRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationRoleComparedefaultRightRoleIDRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationRoleComparedefaultRightRoleIDRequestEntityTooLarge creates a PostAuthorizationRoleComparedefaultRightRoleIDRequestEntityTooLarge with default headers values
func NewPostAuthorizationRoleComparedefaultRightRoleIDRequestEntityTooLarge() *PostAuthorizationRoleComparedefaultRightRoleIDRequestEntityTooLarge {
	return &PostAuthorizationRoleComparedefaultRightRoleIDRequestEntityTooLarge{}
}

/*PostAuthorizationRoleComparedefaultRightRoleIDRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PostAuthorizationRoleComparedefaultRightRoleIDRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PostAuthorizationRoleComparedefaultRightRoleIDRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles/{leftRoleId}/comparedefault/{rightRoleId}][%d] postAuthorizationRoleComparedefaultRightRoleIdRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostAuthorizationRoleComparedefaultRightRoleIDRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationRoleComparedefaultRightRoleIDRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationRoleComparedefaultRightRoleIDUnsupportedMediaType creates a PostAuthorizationRoleComparedefaultRightRoleIDUnsupportedMediaType with default headers values
func NewPostAuthorizationRoleComparedefaultRightRoleIDUnsupportedMediaType() *PostAuthorizationRoleComparedefaultRightRoleIDUnsupportedMediaType {
	return &PostAuthorizationRoleComparedefaultRightRoleIDUnsupportedMediaType{}
}

/*PostAuthorizationRoleComparedefaultRightRoleIDUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostAuthorizationRoleComparedefaultRightRoleIDUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PostAuthorizationRoleComparedefaultRightRoleIDUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles/{leftRoleId}/comparedefault/{rightRoleId}][%d] postAuthorizationRoleComparedefaultRightRoleIdUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostAuthorizationRoleComparedefaultRightRoleIDUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationRoleComparedefaultRightRoleIDUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationRoleComparedefaultRightRoleIDTooManyRequests creates a PostAuthorizationRoleComparedefaultRightRoleIDTooManyRequests with default headers values
func NewPostAuthorizationRoleComparedefaultRightRoleIDTooManyRequests() *PostAuthorizationRoleComparedefaultRightRoleIDTooManyRequests {
	return &PostAuthorizationRoleComparedefaultRightRoleIDTooManyRequests{}
}

/*PostAuthorizationRoleComparedefaultRightRoleIDTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostAuthorizationRoleComparedefaultRightRoleIDTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PostAuthorizationRoleComparedefaultRightRoleIDTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles/{leftRoleId}/comparedefault/{rightRoleId}][%d] postAuthorizationRoleComparedefaultRightRoleIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostAuthorizationRoleComparedefaultRightRoleIDTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationRoleComparedefaultRightRoleIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationRoleComparedefaultRightRoleIDInternalServerError creates a PostAuthorizationRoleComparedefaultRightRoleIDInternalServerError with default headers values
func NewPostAuthorizationRoleComparedefaultRightRoleIDInternalServerError() *PostAuthorizationRoleComparedefaultRightRoleIDInternalServerError {
	return &PostAuthorizationRoleComparedefaultRightRoleIDInternalServerError{}
}

/*PostAuthorizationRoleComparedefaultRightRoleIDInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostAuthorizationRoleComparedefaultRightRoleIDInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PostAuthorizationRoleComparedefaultRightRoleIDInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles/{leftRoleId}/comparedefault/{rightRoleId}][%d] postAuthorizationRoleComparedefaultRightRoleIdInternalServerError  %+v", 500, o.Payload)
}

func (o *PostAuthorizationRoleComparedefaultRightRoleIDInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationRoleComparedefaultRightRoleIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationRoleComparedefaultRightRoleIDServiceUnavailable creates a PostAuthorizationRoleComparedefaultRightRoleIDServiceUnavailable with default headers values
func NewPostAuthorizationRoleComparedefaultRightRoleIDServiceUnavailable() *PostAuthorizationRoleComparedefaultRightRoleIDServiceUnavailable {
	return &PostAuthorizationRoleComparedefaultRightRoleIDServiceUnavailable{}
}

/*PostAuthorizationRoleComparedefaultRightRoleIDServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostAuthorizationRoleComparedefaultRightRoleIDServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PostAuthorizationRoleComparedefaultRightRoleIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles/{leftRoleId}/comparedefault/{rightRoleId}][%d] postAuthorizationRoleComparedefaultRightRoleIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostAuthorizationRoleComparedefaultRightRoleIDServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationRoleComparedefaultRightRoleIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationRoleComparedefaultRightRoleIDGatewayTimeout creates a PostAuthorizationRoleComparedefaultRightRoleIDGatewayTimeout with default headers values
func NewPostAuthorizationRoleComparedefaultRightRoleIDGatewayTimeout() *PostAuthorizationRoleComparedefaultRightRoleIDGatewayTimeout {
	return &PostAuthorizationRoleComparedefaultRightRoleIDGatewayTimeout{}
}

/*PostAuthorizationRoleComparedefaultRightRoleIDGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PostAuthorizationRoleComparedefaultRightRoleIDGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostAuthorizationRoleComparedefaultRightRoleIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles/{leftRoleId}/comparedefault/{rightRoleId}][%d] postAuthorizationRoleComparedefaultRightRoleIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostAuthorizationRoleComparedefaultRightRoleIDGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationRoleComparedefaultRightRoleIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
