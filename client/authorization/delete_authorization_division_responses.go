// Code generated by go-swagger; DO NOT EDIT.

package authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// DeleteAuthorizationDivisionReader is a Reader for the DeleteAuthorizationDivision structure.
type DeleteAuthorizationDivisionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteAuthorizationDivisionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteAuthorizationDivisionNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteAuthorizationDivisionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteAuthorizationDivisionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteAuthorizationDivisionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteAuthorizationDivisionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewDeleteAuthorizationDivisionRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewDeleteAuthorizationDivisionRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDeleteAuthorizationDivisionUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteAuthorizationDivisionTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteAuthorizationDivisionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteAuthorizationDivisionServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteAuthorizationDivisionGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteAuthorizationDivisionNoContent creates a DeleteAuthorizationDivisionNoContent with default headers values
func NewDeleteAuthorizationDivisionNoContent() *DeleteAuthorizationDivisionNoContent {
	return &DeleteAuthorizationDivisionNoContent{}
}

/*DeleteAuthorizationDivisionNoContent handles this case with default header values.

Deleted
*/
type DeleteAuthorizationDivisionNoContent struct {
}

func (o *DeleteAuthorizationDivisionNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/authorization/divisions/{divisionId}][%d] deleteAuthorizationDivisionNoContent ", 204)
}

func (o *DeleteAuthorizationDivisionNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAuthorizationDivisionBadRequest creates a DeleteAuthorizationDivisionBadRequest with default headers values
func NewDeleteAuthorizationDivisionBadRequest() *DeleteAuthorizationDivisionBadRequest {
	return &DeleteAuthorizationDivisionBadRequest{}
}

/*DeleteAuthorizationDivisionBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type DeleteAuthorizationDivisionBadRequest struct {
	Payload *models.ErrorBody
}

func (o *DeleteAuthorizationDivisionBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/authorization/divisions/{divisionId}][%d] deleteAuthorizationDivisionBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteAuthorizationDivisionBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteAuthorizationDivisionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAuthorizationDivisionUnauthorized creates a DeleteAuthorizationDivisionUnauthorized with default headers values
func NewDeleteAuthorizationDivisionUnauthorized() *DeleteAuthorizationDivisionUnauthorized {
	return &DeleteAuthorizationDivisionUnauthorized{}
}

/*DeleteAuthorizationDivisionUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type DeleteAuthorizationDivisionUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *DeleteAuthorizationDivisionUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/authorization/divisions/{divisionId}][%d] deleteAuthorizationDivisionUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteAuthorizationDivisionUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteAuthorizationDivisionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAuthorizationDivisionForbidden creates a DeleteAuthorizationDivisionForbidden with default headers values
func NewDeleteAuthorizationDivisionForbidden() *DeleteAuthorizationDivisionForbidden {
	return &DeleteAuthorizationDivisionForbidden{}
}

/*DeleteAuthorizationDivisionForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type DeleteAuthorizationDivisionForbidden struct {
	Payload *models.ErrorBody
}

func (o *DeleteAuthorizationDivisionForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/authorization/divisions/{divisionId}][%d] deleteAuthorizationDivisionForbidden  %+v", 403, o.Payload)
}

func (o *DeleteAuthorizationDivisionForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteAuthorizationDivisionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAuthorizationDivisionNotFound creates a DeleteAuthorizationDivisionNotFound with default headers values
func NewDeleteAuthorizationDivisionNotFound() *DeleteAuthorizationDivisionNotFound {
	return &DeleteAuthorizationDivisionNotFound{}
}

/*DeleteAuthorizationDivisionNotFound handles this case with default header values.

The requested resource was not found.
*/
type DeleteAuthorizationDivisionNotFound struct {
	Payload *models.ErrorBody
}

func (o *DeleteAuthorizationDivisionNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/authorization/divisions/{divisionId}][%d] deleteAuthorizationDivisionNotFound  %+v", 404, o.Payload)
}

func (o *DeleteAuthorizationDivisionNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteAuthorizationDivisionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAuthorizationDivisionRequestTimeout creates a DeleteAuthorizationDivisionRequestTimeout with default headers values
func NewDeleteAuthorizationDivisionRequestTimeout() *DeleteAuthorizationDivisionRequestTimeout {
	return &DeleteAuthorizationDivisionRequestTimeout{}
}

/*DeleteAuthorizationDivisionRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type DeleteAuthorizationDivisionRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *DeleteAuthorizationDivisionRequestTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/authorization/divisions/{divisionId}][%d] deleteAuthorizationDivisionRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteAuthorizationDivisionRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteAuthorizationDivisionRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAuthorizationDivisionRequestEntityTooLarge creates a DeleteAuthorizationDivisionRequestEntityTooLarge with default headers values
func NewDeleteAuthorizationDivisionRequestEntityTooLarge() *DeleteAuthorizationDivisionRequestEntityTooLarge {
	return &DeleteAuthorizationDivisionRequestEntityTooLarge{}
}

/*DeleteAuthorizationDivisionRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type DeleteAuthorizationDivisionRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *DeleteAuthorizationDivisionRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/authorization/divisions/{divisionId}][%d] deleteAuthorizationDivisionRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteAuthorizationDivisionRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteAuthorizationDivisionRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAuthorizationDivisionUnsupportedMediaType creates a DeleteAuthorizationDivisionUnsupportedMediaType with default headers values
func NewDeleteAuthorizationDivisionUnsupportedMediaType() *DeleteAuthorizationDivisionUnsupportedMediaType {
	return &DeleteAuthorizationDivisionUnsupportedMediaType{}
}

/*DeleteAuthorizationDivisionUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type DeleteAuthorizationDivisionUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *DeleteAuthorizationDivisionUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/authorization/divisions/{divisionId}][%d] deleteAuthorizationDivisionUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteAuthorizationDivisionUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteAuthorizationDivisionUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAuthorizationDivisionTooManyRequests creates a DeleteAuthorizationDivisionTooManyRequests with default headers values
func NewDeleteAuthorizationDivisionTooManyRequests() *DeleteAuthorizationDivisionTooManyRequests {
	return &DeleteAuthorizationDivisionTooManyRequests{}
}

/*DeleteAuthorizationDivisionTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type DeleteAuthorizationDivisionTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *DeleteAuthorizationDivisionTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/authorization/divisions/{divisionId}][%d] deleteAuthorizationDivisionTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteAuthorizationDivisionTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteAuthorizationDivisionTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAuthorizationDivisionInternalServerError creates a DeleteAuthorizationDivisionInternalServerError with default headers values
func NewDeleteAuthorizationDivisionInternalServerError() *DeleteAuthorizationDivisionInternalServerError {
	return &DeleteAuthorizationDivisionInternalServerError{}
}

/*DeleteAuthorizationDivisionInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type DeleteAuthorizationDivisionInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *DeleteAuthorizationDivisionInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/authorization/divisions/{divisionId}][%d] deleteAuthorizationDivisionInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteAuthorizationDivisionInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteAuthorizationDivisionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAuthorizationDivisionServiceUnavailable creates a DeleteAuthorizationDivisionServiceUnavailable with default headers values
func NewDeleteAuthorizationDivisionServiceUnavailable() *DeleteAuthorizationDivisionServiceUnavailable {
	return &DeleteAuthorizationDivisionServiceUnavailable{}
}

/*DeleteAuthorizationDivisionServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type DeleteAuthorizationDivisionServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *DeleteAuthorizationDivisionServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/authorization/divisions/{divisionId}][%d] deleteAuthorizationDivisionServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteAuthorizationDivisionServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteAuthorizationDivisionServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAuthorizationDivisionGatewayTimeout creates a DeleteAuthorizationDivisionGatewayTimeout with default headers values
func NewDeleteAuthorizationDivisionGatewayTimeout() *DeleteAuthorizationDivisionGatewayTimeout {
	return &DeleteAuthorizationDivisionGatewayTimeout{}
}

/*DeleteAuthorizationDivisionGatewayTimeout handles this case with default header values.

The request timed out.
*/
type DeleteAuthorizationDivisionGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *DeleteAuthorizationDivisionGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/authorization/divisions/{divisionId}][%d] deleteAuthorizationDivisionGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteAuthorizationDivisionGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteAuthorizationDivisionGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
