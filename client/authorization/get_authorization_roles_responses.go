// Code generated by go-swagger; DO NOT EDIT.

package authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetAuthorizationRolesReader is a Reader for the GetAuthorizationRoles structure.
type GetAuthorizationRolesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAuthorizationRolesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAuthorizationRolesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAuthorizationRolesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAuthorizationRolesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAuthorizationRolesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAuthorizationRolesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetAuthorizationRolesRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetAuthorizationRolesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetAuthorizationRolesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetAuthorizationRolesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAuthorizationRolesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetAuthorizationRolesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetAuthorizationRolesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAuthorizationRolesOK creates a GetAuthorizationRolesOK with default headers values
func NewGetAuthorizationRolesOK() *GetAuthorizationRolesOK {
	return &GetAuthorizationRolesOK{}
}

/*
GetAuthorizationRolesOK describes a response with status code 200, with default header values.

successful operation
*/
type GetAuthorizationRolesOK struct {
	Payload *models.OrganizationRoleEntityListing
}

// IsSuccess returns true when this get authorization roles o k response has a 2xx status code
func (o *GetAuthorizationRolesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get authorization roles o k response has a 3xx status code
func (o *GetAuthorizationRolesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization roles o k response has a 4xx status code
func (o *GetAuthorizationRolesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get authorization roles o k response has a 5xx status code
func (o *GetAuthorizationRolesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get authorization roles o k response a status code equal to that given
func (o *GetAuthorizationRolesOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetAuthorizationRolesOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/roles][%d] getAuthorizationRolesOK  %+v", 200, o.Payload)
}

func (o *GetAuthorizationRolesOK) String() string {
	return fmt.Sprintf("[GET /api/v2/authorization/roles][%d] getAuthorizationRolesOK  %+v", 200, o.Payload)
}

func (o *GetAuthorizationRolesOK) GetPayload() *models.OrganizationRoleEntityListing {
	return o.Payload
}

func (o *GetAuthorizationRolesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OrganizationRoleEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationRolesBadRequest creates a GetAuthorizationRolesBadRequest with default headers values
func NewGetAuthorizationRolesBadRequest() *GetAuthorizationRolesBadRequest {
	return &GetAuthorizationRolesBadRequest{}
}

/*
GetAuthorizationRolesBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetAuthorizationRolesBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get authorization roles bad request response has a 2xx status code
func (o *GetAuthorizationRolesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorization roles bad request response has a 3xx status code
func (o *GetAuthorizationRolesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization roles bad request response has a 4xx status code
func (o *GetAuthorizationRolesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get authorization roles bad request response has a 5xx status code
func (o *GetAuthorizationRolesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get authorization roles bad request response a status code equal to that given
func (o *GetAuthorizationRolesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetAuthorizationRolesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/roles][%d] getAuthorizationRolesBadRequest  %+v", 400, o.Payload)
}

func (o *GetAuthorizationRolesBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/authorization/roles][%d] getAuthorizationRolesBadRequest  %+v", 400, o.Payload)
}

func (o *GetAuthorizationRolesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationRolesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationRolesUnauthorized creates a GetAuthorizationRolesUnauthorized with default headers values
func NewGetAuthorizationRolesUnauthorized() *GetAuthorizationRolesUnauthorized {
	return &GetAuthorizationRolesUnauthorized{}
}

/*
GetAuthorizationRolesUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetAuthorizationRolesUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get authorization roles unauthorized response has a 2xx status code
func (o *GetAuthorizationRolesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorization roles unauthorized response has a 3xx status code
func (o *GetAuthorizationRolesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization roles unauthorized response has a 4xx status code
func (o *GetAuthorizationRolesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get authorization roles unauthorized response has a 5xx status code
func (o *GetAuthorizationRolesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get authorization roles unauthorized response a status code equal to that given
func (o *GetAuthorizationRolesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetAuthorizationRolesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/roles][%d] getAuthorizationRolesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAuthorizationRolesUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/authorization/roles][%d] getAuthorizationRolesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAuthorizationRolesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationRolesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationRolesForbidden creates a GetAuthorizationRolesForbidden with default headers values
func NewGetAuthorizationRolesForbidden() *GetAuthorizationRolesForbidden {
	return &GetAuthorizationRolesForbidden{}
}

/*
GetAuthorizationRolesForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetAuthorizationRolesForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get authorization roles forbidden response has a 2xx status code
func (o *GetAuthorizationRolesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorization roles forbidden response has a 3xx status code
func (o *GetAuthorizationRolesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization roles forbidden response has a 4xx status code
func (o *GetAuthorizationRolesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get authorization roles forbidden response has a 5xx status code
func (o *GetAuthorizationRolesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get authorization roles forbidden response a status code equal to that given
func (o *GetAuthorizationRolesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetAuthorizationRolesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/roles][%d] getAuthorizationRolesForbidden  %+v", 403, o.Payload)
}

func (o *GetAuthorizationRolesForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/authorization/roles][%d] getAuthorizationRolesForbidden  %+v", 403, o.Payload)
}

func (o *GetAuthorizationRolesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationRolesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationRolesNotFound creates a GetAuthorizationRolesNotFound with default headers values
func NewGetAuthorizationRolesNotFound() *GetAuthorizationRolesNotFound {
	return &GetAuthorizationRolesNotFound{}
}

/*
GetAuthorizationRolesNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetAuthorizationRolesNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get authorization roles not found response has a 2xx status code
func (o *GetAuthorizationRolesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorization roles not found response has a 3xx status code
func (o *GetAuthorizationRolesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization roles not found response has a 4xx status code
func (o *GetAuthorizationRolesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get authorization roles not found response has a 5xx status code
func (o *GetAuthorizationRolesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get authorization roles not found response a status code equal to that given
func (o *GetAuthorizationRolesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetAuthorizationRolesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/roles][%d] getAuthorizationRolesNotFound  %+v", 404, o.Payload)
}

func (o *GetAuthorizationRolesNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/authorization/roles][%d] getAuthorizationRolesNotFound  %+v", 404, o.Payload)
}

func (o *GetAuthorizationRolesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationRolesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationRolesRequestTimeout creates a GetAuthorizationRolesRequestTimeout with default headers values
func NewGetAuthorizationRolesRequestTimeout() *GetAuthorizationRolesRequestTimeout {
	return &GetAuthorizationRolesRequestTimeout{}
}

/*
GetAuthorizationRolesRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetAuthorizationRolesRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get authorization roles request timeout response has a 2xx status code
func (o *GetAuthorizationRolesRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorization roles request timeout response has a 3xx status code
func (o *GetAuthorizationRolesRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization roles request timeout response has a 4xx status code
func (o *GetAuthorizationRolesRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get authorization roles request timeout response has a 5xx status code
func (o *GetAuthorizationRolesRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get authorization roles request timeout response a status code equal to that given
func (o *GetAuthorizationRolesRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetAuthorizationRolesRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/roles][%d] getAuthorizationRolesRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetAuthorizationRolesRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/authorization/roles][%d] getAuthorizationRolesRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetAuthorizationRolesRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationRolesRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationRolesRequestEntityTooLarge creates a GetAuthorizationRolesRequestEntityTooLarge with default headers values
func NewGetAuthorizationRolesRequestEntityTooLarge() *GetAuthorizationRolesRequestEntityTooLarge {
	return &GetAuthorizationRolesRequestEntityTooLarge{}
}

/*
GetAuthorizationRolesRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetAuthorizationRolesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get authorization roles request entity too large response has a 2xx status code
func (o *GetAuthorizationRolesRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorization roles request entity too large response has a 3xx status code
func (o *GetAuthorizationRolesRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization roles request entity too large response has a 4xx status code
func (o *GetAuthorizationRolesRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get authorization roles request entity too large response has a 5xx status code
func (o *GetAuthorizationRolesRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get authorization roles request entity too large response a status code equal to that given
func (o *GetAuthorizationRolesRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetAuthorizationRolesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/roles][%d] getAuthorizationRolesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetAuthorizationRolesRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/authorization/roles][%d] getAuthorizationRolesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetAuthorizationRolesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationRolesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationRolesUnsupportedMediaType creates a GetAuthorizationRolesUnsupportedMediaType with default headers values
func NewGetAuthorizationRolesUnsupportedMediaType() *GetAuthorizationRolesUnsupportedMediaType {
	return &GetAuthorizationRolesUnsupportedMediaType{}
}

/*
GetAuthorizationRolesUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetAuthorizationRolesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get authorization roles unsupported media type response has a 2xx status code
func (o *GetAuthorizationRolesUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorization roles unsupported media type response has a 3xx status code
func (o *GetAuthorizationRolesUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization roles unsupported media type response has a 4xx status code
func (o *GetAuthorizationRolesUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get authorization roles unsupported media type response has a 5xx status code
func (o *GetAuthorizationRolesUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get authorization roles unsupported media type response a status code equal to that given
func (o *GetAuthorizationRolesUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetAuthorizationRolesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/roles][%d] getAuthorizationRolesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetAuthorizationRolesUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/authorization/roles][%d] getAuthorizationRolesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetAuthorizationRolesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationRolesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationRolesTooManyRequests creates a GetAuthorizationRolesTooManyRequests with default headers values
func NewGetAuthorizationRolesTooManyRequests() *GetAuthorizationRolesTooManyRequests {
	return &GetAuthorizationRolesTooManyRequests{}
}

/*
GetAuthorizationRolesTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetAuthorizationRolesTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get authorization roles too many requests response has a 2xx status code
func (o *GetAuthorizationRolesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorization roles too many requests response has a 3xx status code
func (o *GetAuthorizationRolesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization roles too many requests response has a 4xx status code
func (o *GetAuthorizationRolesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get authorization roles too many requests response has a 5xx status code
func (o *GetAuthorizationRolesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get authorization roles too many requests response a status code equal to that given
func (o *GetAuthorizationRolesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetAuthorizationRolesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/roles][%d] getAuthorizationRolesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetAuthorizationRolesTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/authorization/roles][%d] getAuthorizationRolesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetAuthorizationRolesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationRolesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationRolesInternalServerError creates a GetAuthorizationRolesInternalServerError with default headers values
func NewGetAuthorizationRolesInternalServerError() *GetAuthorizationRolesInternalServerError {
	return &GetAuthorizationRolesInternalServerError{}
}

/*
GetAuthorizationRolesInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetAuthorizationRolesInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get authorization roles internal server error response has a 2xx status code
func (o *GetAuthorizationRolesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorization roles internal server error response has a 3xx status code
func (o *GetAuthorizationRolesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization roles internal server error response has a 4xx status code
func (o *GetAuthorizationRolesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get authorization roles internal server error response has a 5xx status code
func (o *GetAuthorizationRolesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get authorization roles internal server error response a status code equal to that given
func (o *GetAuthorizationRolesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetAuthorizationRolesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/roles][%d] getAuthorizationRolesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAuthorizationRolesInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/authorization/roles][%d] getAuthorizationRolesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAuthorizationRolesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationRolesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationRolesServiceUnavailable creates a GetAuthorizationRolesServiceUnavailable with default headers values
func NewGetAuthorizationRolesServiceUnavailable() *GetAuthorizationRolesServiceUnavailable {
	return &GetAuthorizationRolesServiceUnavailable{}
}

/*
GetAuthorizationRolesServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetAuthorizationRolesServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get authorization roles service unavailable response has a 2xx status code
func (o *GetAuthorizationRolesServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorization roles service unavailable response has a 3xx status code
func (o *GetAuthorizationRolesServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization roles service unavailable response has a 4xx status code
func (o *GetAuthorizationRolesServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get authorization roles service unavailable response has a 5xx status code
func (o *GetAuthorizationRolesServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get authorization roles service unavailable response a status code equal to that given
func (o *GetAuthorizationRolesServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetAuthorizationRolesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/roles][%d] getAuthorizationRolesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetAuthorizationRolesServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/authorization/roles][%d] getAuthorizationRolesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetAuthorizationRolesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationRolesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationRolesGatewayTimeout creates a GetAuthorizationRolesGatewayTimeout with default headers values
func NewGetAuthorizationRolesGatewayTimeout() *GetAuthorizationRolesGatewayTimeout {
	return &GetAuthorizationRolesGatewayTimeout{}
}

/*
GetAuthorizationRolesGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetAuthorizationRolesGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get authorization roles gateway timeout response has a 2xx status code
func (o *GetAuthorizationRolesGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorization roles gateway timeout response has a 3xx status code
func (o *GetAuthorizationRolesGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization roles gateway timeout response has a 4xx status code
func (o *GetAuthorizationRolesGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get authorization roles gateway timeout response has a 5xx status code
func (o *GetAuthorizationRolesGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get authorization roles gateway timeout response a status code equal to that given
func (o *GetAuthorizationRolesGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetAuthorizationRolesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/authorization/roles][%d] getAuthorizationRolesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetAuthorizationRolesGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/authorization/roles][%d] getAuthorizationRolesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetAuthorizationRolesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuthorizationRolesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
