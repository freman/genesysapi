// Code generated by go-swagger; DO NOT EDIT.

package authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostAuthorizationRolesReader is a Reader for the PostAuthorizationRoles structure.
type PostAuthorizationRolesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostAuthorizationRolesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostAuthorizationRolesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostAuthorizationRolesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostAuthorizationRolesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostAuthorizationRolesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostAuthorizationRolesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostAuthorizationRolesRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostAuthorizationRolesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostAuthorizationRolesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostAuthorizationRolesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostAuthorizationRolesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostAuthorizationRolesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostAuthorizationRolesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostAuthorizationRolesOK creates a PostAuthorizationRolesOK with default headers values
func NewPostAuthorizationRolesOK() *PostAuthorizationRolesOK {
	return &PostAuthorizationRolesOK{}
}

/*
PostAuthorizationRolesOK describes a response with status code 200, with default header values.

successful operation
*/
type PostAuthorizationRolesOK struct {
	Payload *models.DomainOrganizationRole
}

// IsSuccess returns true when this post authorization roles o k response has a 2xx status code
func (o *PostAuthorizationRolesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post authorization roles o k response has a 3xx status code
func (o *PostAuthorizationRolesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization roles o k response has a 4xx status code
func (o *PostAuthorizationRolesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post authorization roles o k response has a 5xx status code
func (o *PostAuthorizationRolesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post authorization roles o k response a status code equal to that given
func (o *PostAuthorizationRolesOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostAuthorizationRolesOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles][%d] postAuthorizationRolesOK  %+v", 200, o.Payload)
}

func (o *PostAuthorizationRolesOK) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles][%d] postAuthorizationRolesOK  %+v", 200, o.Payload)
}

func (o *PostAuthorizationRolesOK) GetPayload() *models.DomainOrganizationRole {
	return o.Payload
}

func (o *PostAuthorizationRolesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DomainOrganizationRole)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationRolesBadRequest creates a PostAuthorizationRolesBadRequest with default headers values
func NewPostAuthorizationRolesBadRequest() *PostAuthorizationRolesBadRequest {
	return &PostAuthorizationRolesBadRequest{}
}

/*
PostAuthorizationRolesBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostAuthorizationRolesBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization roles bad request response has a 2xx status code
func (o *PostAuthorizationRolesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization roles bad request response has a 3xx status code
func (o *PostAuthorizationRolesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization roles bad request response has a 4xx status code
func (o *PostAuthorizationRolesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post authorization roles bad request response has a 5xx status code
func (o *PostAuthorizationRolesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post authorization roles bad request response a status code equal to that given
func (o *PostAuthorizationRolesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostAuthorizationRolesBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles][%d] postAuthorizationRolesBadRequest  %+v", 400, o.Payload)
}

func (o *PostAuthorizationRolesBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles][%d] postAuthorizationRolesBadRequest  %+v", 400, o.Payload)
}

func (o *PostAuthorizationRolesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationRolesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationRolesUnauthorized creates a PostAuthorizationRolesUnauthorized with default headers values
func NewPostAuthorizationRolesUnauthorized() *PostAuthorizationRolesUnauthorized {
	return &PostAuthorizationRolesUnauthorized{}
}

/*
PostAuthorizationRolesUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostAuthorizationRolesUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization roles unauthorized response has a 2xx status code
func (o *PostAuthorizationRolesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization roles unauthorized response has a 3xx status code
func (o *PostAuthorizationRolesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization roles unauthorized response has a 4xx status code
func (o *PostAuthorizationRolesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post authorization roles unauthorized response has a 5xx status code
func (o *PostAuthorizationRolesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post authorization roles unauthorized response a status code equal to that given
func (o *PostAuthorizationRolesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostAuthorizationRolesUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles][%d] postAuthorizationRolesUnauthorized  %+v", 401, o.Payload)
}

func (o *PostAuthorizationRolesUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles][%d] postAuthorizationRolesUnauthorized  %+v", 401, o.Payload)
}

func (o *PostAuthorizationRolesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationRolesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationRolesForbidden creates a PostAuthorizationRolesForbidden with default headers values
func NewPostAuthorizationRolesForbidden() *PostAuthorizationRolesForbidden {
	return &PostAuthorizationRolesForbidden{}
}

/*
PostAuthorizationRolesForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostAuthorizationRolesForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization roles forbidden response has a 2xx status code
func (o *PostAuthorizationRolesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization roles forbidden response has a 3xx status code
func (o *PostAuthorizationRolesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization roles forbidden response has a 4xx status code
func (o *PostAuthorizationRolesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post authorization roles forbidden response has a 5xx status code
func (o *PostAuthorizationRolesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post authorization roles forbidden response a status code equal to that given
func (o *PostAuthorizationRolesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostAuthorizationRolesForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles][%d] postAuthorizationRolesForbidden  %+v", 403, o.Payload)
}

func (o *PostAuthorizationRolesForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles][%d] postAuthorizationRolesForbidden  %+v", 403, o.Payload)
}

func (o *PostAuthorizationRolesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationRolesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationRolesNotFound creates a PostAuthorizationRolesNotFound with default headers values
func NewPostAuthorizationRolesNotFound() *PostAuthorizationRolesNotFound {
	return &PostAuthorizationRolesNotFound{}
}

/*
PostAuthorizationRolesNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostAuthorizationRolesNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization roles not found response has a 2xx status code
func (o *PostAuthorizationRolesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization roles not found response has a 3xx status code
func (o *PostAuthorizationRolesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization roles not found response has a 4xx status code
func (o *PostAuthorizationRolesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post authorization roles not found response has a 5xx status code
func (o *PostAuthorizationRolesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post authorization roles not found response a status code equal to that given
func (o *PostAuthorizationRolesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostAuthorizationRolesNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles][%d] postAuthorizationRolesNotFound  %+v", 404, o.Payload)
}

func (o *PostAuthorizationRolesNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles][%d] postAuthorizationRolesNotFound  %+v", 404, o.Payload)
}

func (o *PostAuthorizationRolesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationRolesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationRolesRequestTimeout creates a PostAuthorizationRolesRequestTimeout with default headers values
func NewPostAuthorizationRolesRequestTimeout() *PostAuthorizationRolesRequestTimeout {
	return &PostAuthorizationRolesRequestTimeout{}
}

/*
PostAuthorizationRolesRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostAuthorizationRolesRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization roles request timeout response has a 2xx status code
func (o *PostAuthorizationRolesRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization roles request timeout response has a 3xx status code
func (o *PostAuthorizationRolesRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization roles request timeout response has a 4xx status code
func (o *PostAuthorizationRolesRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post authorization roles request timeout response has a 5xx status code
func (o *PostAuthorizationRolesRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post authorization roles request timeout response a status code equal to that given
func (o *PostAuthorizationRolesRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostAuthorizationRolesRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles][%d] postAuthorizationRolesRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostAuthorizationRolesRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles][%d] postAuthorizationRolesRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostAuthorizationRolesRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationRolesRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationRolesRequestEntityTooLarge creates a PostAuthorizationRolesRequestEntityTooLarge with default headers values
func NewPostAuthorizationRolesRequestEntityTooLarge() *PostAuthorizationRolesRequestEntityTooLarge {
	return &PostAuthorizationRolesRequestEntityTooLarge{}
}

/*
PostAuthorizationRolesRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PostAuthorizationRolesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization roles request entity too large response has a 2xx status code
func (o *PostAuthorizationRolesRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization roles request entity too large response has a 3xx status code
func (o *PostAuthorizationRolesRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization roles request entity too large response has a 4xx status code
func (o *PostAuthorizationRolesRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post authorization roles request entity too large response has a 5xx status code
func (o *PostAuthorizationRolesRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post authorization roles request entity too large response a status code equal to that given
func (o *PostAuthorizationRolesRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostAuthorizationRolesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles][%d] postAuthorizationRolesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostAuthorizationRolesRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles][%d] postAuthorizationRolesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostAuthorizationRolesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationRolesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationRolesUnsupportedMediaType creates a PostAuthorizationRolesUnsupportedMediaType with default headers values
func NewPostAuthorizationRolesUnsupportedMediaType() *PostAuthorizationRolesUnsupportedMediaType {
	return &PostAuthorizationRolesUnsupportedMediaType{}
}

/*
PostAuthorizationRolesUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostAuthorizationRolesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization roles unsupported media type response has a 2xx status code
func (o *PostAuthorizationRolesUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization roles unsupported media type response has a 3xx status code
func (o *PostAuthorizationRolesUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization roles unsupported media type response has a 4xx status code
func (o *PostAuthorizationRolesUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post authorization roles unsupported media type response has a 5xx status code
func (o *PostAuthorizationRolesUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post authorization roles unsupported media type response a status code equal to that given
func (o *PostAuthorizationRolesUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostAuthorizationRolesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles][%d] postAuthorizationRolesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostAuthorizationRolesUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles][%d] postAuthorizationRolesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostAuthorizationRolesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationRolesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationRolesTooManyRequests creates a PostAuthorizationRolesTooManyRequests with default headers values
func NewPostAuthorizationRolesTooManyRequests() *PostAuthorizationRolesTooManyRequests {
	return &PostAuthorizationRolesTooManyRequests{}
}

/*
PostAuthorizationRolesTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostAuthorizationRolesTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization roles too many requests response has a 2xx status code
func (o *PostAuthorizationRolesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization roles too many requests response has a 3xx status code
func (o *PostAuthorizationRolesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization roles too many requests response has a 4xx status code
func (o *PostAuthorizationRolesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post authorization roles too many requests response has a 5xx status code
func (o *PostAuthorizationRolesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post authorization roles too many requests response a status code equal to that given
func (o *PostAuthorizationRolesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostAuthorizationRolesTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles][%d] postAuthorizationRolesTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostAuthorizationRolesTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles][%d] postAuthorizationRolesTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostAuthorizationRolesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationRolesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationRolesInternalServerError creates a PostAuthorizationRolesInternalServerError with default headers values
func NewPostAuthorizationRolesInternalServerError() *PostAuthorizationRolesInternalServerError {
	return &PostAuthorizationRolesInternalServerError{}
}

/*
PostAuthorizationRolesInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostAuthorizationRolesInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization roles internal server error response has a 2xx status code
func (o *PostAuthorizationRolesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization roles internal server error response has a 3xx status code
func (o *PostAuthorizationRolesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization roles internal server error response has a 4xx status code
func (o *PostAuthorizationRolesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post authorization roles internal server error response has a 5xx status code
func (o *PostAuthorizationRolesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post authorization roles internal server error response a status code equal to that given
func (o *PostAuthorizationRolesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostAuthorizationRolesInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles][%d] postAuthorizationRolesInternalServerError  %+v", 500, o.Payload)
}

func (o *PostAuthorizationRolesInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles][%d] postAuthorizationRolesInternalServerError  %+v", 500, o.Payload)
}

func (o *PostAuthorizationRolesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationRolesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationRolesServiceUnavailable creates a PostAuthorizationRolesServiceUnavailable with default headers values
func NewPostAuthorizationRolesServiceUnavailable() *PostAuthorizationRolesServiceUnavailable {
	return &PostAuthorizationRolesServiceUnavailable{}
}

/*
PostAuthorizationRolesServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostAuthorizationRolesServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization roles service unavailable response has a 2xx status code
func (o *PostAuthorizationRolesServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization roles service unavailable response has a 3xx status code
func (o *PostAuthorizationRolesServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization roles service unavailable response has a 4xx status code
func (o *PostAuthorizationRolesServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post authorization roles service unavailable response has a 5xx status code
func (o *PostAuthorizationRolesServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post authorization roles service unavailable response a status code equal to that given
func (o *PostAuthorizationRolesServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostAuthorizationRolesServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles][%d] postAuthorizationRolesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostAuthorizationRolesServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles][%d] postAuthorizationRolesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostAuthorizationRolesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationRolesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizationRolesGatewayTimeout creates a PostAuthorizationRolesGatewayTimeout with default headers values
func NewPostAuthorizationRolesGatewayTimeout() *PostAuthorizationRolesGatewayTimeout {
	return &PostAuthorizationRolesGatewayTimeout{}
}

/*
PostAuthorizationRolesGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostAuthorizationRolesGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post authorization roles gateway timeout response has a 2xx status code
func (o *PostAuthorizationRolesGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post authorization roles gateway timeout response has a 3xx status code
func (o *PostAuthorizationRolesGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post authorization roles gateway timeout response has a 4xx status code
func (o *PostAuthorizationRolesGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post authorization roles gateway timeout response has a 5xx status code
func (o *PostAuthorizationRolesGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post authorization roles gateway timeout response a status code equal to that given
func (o *PostAuthorizationRolesGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostAuthorizationRolesGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles][%d] postAuthorizationRolesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostAuthorizationRolesGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/authorization/roles][%d] postAuthorizationRolesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostAuthorizationRolesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostAuthorizationRolesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
