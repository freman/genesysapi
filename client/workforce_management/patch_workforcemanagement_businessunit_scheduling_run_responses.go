// Code generated by go-swagger; DO NOT EDIT.

package workforce_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PatchWorkforcemanagementBusinessunitSchedulingRunReader is a Reader for the PatchWorkforcemanagementBusinessunitSchedulingRun structure.
type PatchWorkforcemanagementBusinessunitSchedulingRunReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPatchWorkforcemanagementBusinessunitSchedulingRunNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchWorkforcemanagementBusinessunitSchedulingRunBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPatchWorkforcemanagementBusinessunitSchedulingRunUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchWorkforcemanagementBusinessunitSchedulingRunForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchWorkforcemanagementBusinessunitSchedulingRunNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPatchWorkforcemanagementBusinessunitSchedulingRunRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPatchWorkforcemanagementBusinessunitSchedulingRunRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPatchWorkforcemanagementBusinessunitSchedulingRunUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPatchWorkforcemanagementBusinessunitSchedulingRunTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchWorkforcemanagementBusinessunitSchedulingRunInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPatchWorkforcemanagementBusinessunitSchedulingRunServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPatchWorkforcemanagementBusinessunitSchedulingRunGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchWorkforcemanagementBusinessunitSchedulingRunNoContent creates a PatchWorkforcemanagementBusinessunitSchedulingRunNoContent with default headers values
func NewPatchWorkforcemanagementBusinessunitSchedulingRunNoContent() *PatchWorkforcemanagementBusinessunitSchedulingRunNoContent {
	return &PatchWorkforcemanagementBusinessunitSchedulingRunNoContent{}
}

/*
PatchWorkforcemanagementBusinessunitSchedulingRunNoContent describes a response with status code 204, with default header values.

The update was successful
*/
type PatchWorkforcemanagementBusinessunitSchedulingRunNoContent struct {
}

// IsSuccess returns true when this patch workforcemanagement businessunit scheduling run no content response has a 2xx status code
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this patch workforcemanagement businessunit scheduling run no content response has a 3xx status code
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement businessunit scheduling run no content response has a 4xx status code
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch workforcemanagement businessunit scheduling run no content response has a 5xx status code
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement businessunit scheduling run no content response a status code equal to that given
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *PatchWorkforcemanagementBusinessunitSchedulingRunNoContent) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/scheduling/runs/{runId}][%d] patchWorkforcemanagementBusinessunitSchedulingRunNoContent ", 204)
}

func (o *PatchWorkforcemanagementBusinessunitSchedulingRunNoContent) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/scheduling/runs/{runId}][%d] patchWorkforcemanagementBusinessunitSchedulingRunNoContent ", 204)
}

func (o *PatchWorkforcemanagementBusinessunitSchedulingRunNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchWorkforcemanagementBusinessunitSchedulingRunBadRequest creates a PatchWorkforcemanagementBusinessunitSchedulingRunBadRequest with default headers values
func NewPatchWorkforcemanagementBusinessunitSchedulingRunBadRequest() *PatchWorkforcemanagementBusinessunitSchedulingRunBadRequest {
	return &PatchWorkforcemanagementBusinessunitSchedulingRunBadRequest{}
}

/*
PatchWorkforcemanagementBusinessunitSchedulingRunBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PatchWorkforcemanagementBusinessunitSchedulingRunBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement businessunit scheduling run bad request response has a 2xx status code
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement businessunit scheduling run bad request response has a 3xx status code
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement businessunit scheduling run bad request response has a 4xx status code
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement businessunit scheduling run bad request response has a 5xx status code
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement businessunit scheduling run bad request response a status code equal to that given
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PatchWorkforcemanagementBusinessunitSchedulingRunBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/scheduling/runs/{runId}][%d] patchWorkforcemanagementBusinessunitSchedulingRunBadRequest  %+v", 400, o.Payload)
}

func (o *PatchWorkforcemanagementBusinessunitSchedulingRunBadRequest) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/scheduling/runs/{runId}][%d] patchWorkforcemanagementBusinessunitSchedulingRunBadRequest  %+v", 400, o.Payload)
}

func (o *PatchWorkforcemanagementBusinessunitSchedulingRunBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementBusinessunitSchedulingRunBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementBusinessunitSchedulingRunUnauthorized creates a PatchWorkforcemanagementBusinessunitSchedulingRunUnauthorized with default headers values
func NewPatchWorkforcemanagementBusinessunitSchedulingRunUnauthorized() *PatchWorkforcemanagementBusinessunitSchedulingRunUnauthorized {
	return &PatchWorkforcemanagementBusinessunitSchedulingRunUnauthorized{}
}

/*
PatchWorkforcemanagementBusinessunitSchedulingRunUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PatchWorkforcemanagementBusinessunitSchedulingRunUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement businessunit scheduling run unauthorized response has a 2xx status code
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement businessunit scheduling run unauthorized response has a 3xx status code
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement businessunit scheduling run unauthorized response has a 4xx status code
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement businessunit scheduling run unauthorized response has a 5xx status code
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement businessunit scheduling run unauthorized response a status code equal to that given
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PatchWorkforcemanagementBusinessunitSchedulingRunUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/scheduling/runs/{runId}][%d] patchWorkforcemanagementBusinessunitSchedulingRunUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchWorkforcemanagementBusinessunitSchedulingRunUnauthorized) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/scheduling/runs/{runId}][%d] patchWorkforcemanagementBusinessunitSchedulingRunUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchWorkforcemanagementBusinessunitSchedulingRunUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementBusinessunitSchedulingRunUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementBusinessunitSchedulingRunForbidden creates a PatchWorkforcemanagementBusinessunitSchedulingRunForbidden with default headers values
func NewPatchWorkforcemanagementBusinessunitSchedulingRunForbidden() *PatchWorkforcemanagementBusinessunitSchedulingRunForbidden {
	return &PatchWorkforcemanagementBusinessunitSchedulingRunForbidden{}
}

/*
PatchWorkforcemanagementBusinessunitSchedulingRunForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PatchWorkforcemanagementBusinessunitSchedulingRunForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement businessunit scheduling run forbidden response has a 2xx status code
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement businessunit scheduling run forbidden response has a 3xx status code
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement businessunit scheduling run forbidden response has a 4xx status code
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement businessunit scheduling run forbidden response has a 5xx status code
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement businessunit scheduling run forbidden response a status code equal to that given
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PatchWorkforcemanagementBusinessunitSchedulingRunForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/scheduling/runs/{runId}][%d] patchWorkforcemanagementBusinessunitSchedulingRunForbidden  %+v", 403, o.Payload)
}

func (o *PatchWorkforcemanagementBusinessunitSchedulingRunForbidden) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/scheduling/runs/{runId}][%d] patchWorkforcemanagementBusinessunitSchedulingRunForbidden  %+v", 403, o.Payload)
}

func (o *PatchWorkforcemanagementBusinessunitSchedulingRunForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementBusinessunitSchedulingRunForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementBusinessunitSchedulingRunNotFound creates a PatchWorkforcemanagementBusinessunitSchedulingRunNotFound with default headers values
func NewPatchWorkforcemanagementBusinessunitSchedulingRunNotFound() *PatchWorkforcemanagementBusinessunitSchedulingRunNotFound {
	return &PatchWorkforcemanagementBusinessunitSchedulingRunNotFound{}
}

/*
PatchWorkforcemanagementBusinessunitSchedulingRunNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PatchWorkforcemanagementBusinessunitSchedulingRunNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement businessunit scheduling run not found response has a 2xx status code
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement businessunit scheduling run not found response has a 3xx status code
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement businessunit scheduling run not found response has a 4xx status code
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement businessunit scheduling run not found response has a 5xx status code
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement businessunit scheduling run not found response a status code equal to that given
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PatchWorkforcemanagementBusinessunitSchedulingRunNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/scheduling/runs/{runId}][%d] patchWorkforcemanagementBusinessunitSchedulingRunNotFound  %+v", 404, o.Payload)
}

func (o *PatchWorkforcemanagementBusinessunitSchedulingRunNotFound) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/scheduling/runs/{runId}][%d] patchWorkforcemanagementBusinessunitSchedulingRunNotFound  %+v", 404, o.Payload)
}

func (o *PatchWorkforcemanagementBusinessunitSchedulingRunNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementBusinessunitSchedulingRunNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementBusinessunitSchedulingRunRequestTimeout creates a PatchWorkforcemanagementBusinessunitSchedulingRunRequestTimeout with default headers values
func NewPatchWorkforcemanagementBusinessunitSchedulingRunRequestTimeout() *PatchWorkforcemanagementBusinessunitSchedulingRunRequestTimeout {
	return &PatchWorkforcemanagementBusinessunitSchedulingRunRequestTimeout{}
}

/*
PatchWorkforcemanagementBusinessunitSchedulingRunRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PatchWorkforcemanagementBusinessunitSchedulingRunRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement businessunit scheduling run request timeout response has a 2xx status code
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement businessunit scheduling run request timeout response has a 3xx status code
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement businessunit scheduling run request timeout response has a 4xx status code
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement businessunit scheduling run request timeout response has a 5xx status code
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement businessunit scheduling run request timeout response a status code equal to that given
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PatchWorkforcemanagementBusinessunitSchedulingRunRequestTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/scheduling/runs/{runId}][%d] patchWorkforcemanagementBusinessunitSchedulingRunRequestTimeout  %+v", 408, o.Payload)
}

func (o *PatchWorkforcemanagementBusinessunitSchedulingRunRequestTimeout) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/scheduling/runs/{runId}][%d] patchWorkforcemanagementBusinessunitSchedulingRunRequestTimeout  %+v", 408, o.Payload)
}

func (o *PatchWorkforcemanagementBusinessunitSchedulingRunRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementBusinessunitSchedulingRunRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementBusinessunitSchedulingRunRequestEntityTooLarge creates a PatchWorkforcemanagementBusinessunitSchedulingRunRequestEntityTooLarge with default headers values
func NewPatchWorkforcemanagementBusinessunitSchedulingRunRequestEntityTooLarge() *PatchWorkforcemanagementBusinessunitSchedulingRunRequestEntityTooLarge {
	return &PatchWorkforcemanagementBusinessunitSchedulingRunRequestEntityTooLarge{}
}

/*
PatchWorkforcemanagementBusinessunitSchedulingRunRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PatchWorkforcemanagementBusinessunitSchedulingRunRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement businessunit scheduling run request entity too large response has a 2xx status code
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement businessunit scheduling run request entity too large response has a 3xx status code
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement businessunit scheduling run request entity too large response has a 4xx status code
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement businessunit scheduling run request entity too large response has a 5xx status code
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement businessunit scheduling run request entity too large response a status code equal to that given
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PatchWorkforcemanagementBusinessunitSchedulingRunRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/scheduling/runs/{runId}][%d] patchWorkforcemanagementBusinessunitSchedulingRunRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PatchWorkforcemanagementBusinessunitSchedulingRunRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/scheduling/runs/{runId}][%d] patchWorkforcemanagementBusinessunitSchedulingRunRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PatchWorkforcemanagementBusinessunitSchedulingRunRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementBusinessunitSchedulingRunRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementBusinessunitSchedulingRunUnsupportedMediaType creates a PatchWorkforcemanagementBusinessunitSchedulingRunUnsupportedMediaType with default headers values
func NewPatchWorkforcemanagementBusinessunitSchedulingRunUnsupportedMediaType() *PatchWorkforcemanagementBusinessunitSchedulingRunUnsupportedMediaType {
	return &PatchWorkforcemanagementBusinessunitSchedulingRunUnsupportedMediaType{}
}

/*
PatchWorkforcemanagementBusinessunitSchedulingRunUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PatchWorkforcemanagementBusinessunitSchedulingRunUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement businessunit scheduling run unsupported media type response has a 2xx status code
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement businessunit scheduling run unsupported media type response has a 3xx status code
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement businessunit scheduling run unsupported media type response has a 4xx status code
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement businessunit scheduling run unsupported media type response has a 5xx status code
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement businessunit scheduling run unsupported media type response a status code equal to that given
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PatchWorkforcemanagementBusinessunitSchedulingRunUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/scheduling/runs/{runId}][%d] patchWorkforcemanagementBusinessunitSchedulingRunUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchWorkforcemanagementBusinessunitSchedulingRunUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/scheduling/runs/{runId}][%d] patchWorkforcemanagementBusinessunitSchedulingRunUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchWorkforcemanagementBusinessunitSchedulingRunUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementBusinessunitSchedulingRunUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementBusinessunitSchedulingRunTooManyRequests creates a PatchWorkforcemanagementBusinessunitSchedulingRunTooManyRequests with default headers values
func NewPatchWorkforcemanagementBusinessunitSchedulingRunTooManyRequests() *PatchWorkforcemanagementBusinessunitSchedulingRunTooManyRequests {
	return &PatchWorkforcemanagementBusinessunitSchedulingRunTooManyRequests{}
}

/*
PatchWorkforcemanagementBusinessunitSchedulingRunTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PatchWorkforcemanagementBusinessunitSchedulingRunTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement businessunit scheduling run too many requests response has a 2xx status code
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement businessunit scheduling run too many requests response has a 3xx status code
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement businessunit scheduling run too many requests response has a 4xx status code
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement businessunit scheduling run too many requests response has a 5xx status code
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement businessunit scheduling run too many requests response a status code equal to that given
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PatchWorkforcemanagementBusinessunitSchedulingRunTooManyRequests) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/scheduling/runs/{runId}][%d] patchWorkforcemanagementBusinessunitSchedulingRunTooManyRequests  %+v", 429, o.Payload)
}

func (o *PatchWorkforcemanagementBusinessunitSchedulingRunTooManyRequests) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/scheduling/runs/{runId}][%d] patchWorkforcemanagementBusinessunitSchedulingRunTooManyRequests  %+v", 429, o.Payload)
}

func (o *PatchWorkforcemanagementBusinessunitSchedulingRunTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementBusinessunitSchedulingRunTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementBusinessunitSchedulingRunInternalServerError creates a PatchWorkforcemanagementBusinessunitSchedulingRunInternalServerError with default headers values
func NewPatchWorkforcemanagementBusinessunitSchedulingRunInternalServerError() *PatchWorkforcemanagementBusinessunitSchedulingRunInternalServerError {
	return &PatchWorkforcemanagementBusinessunitSchedulingRunInternalServerError{}
}

/*
PatchWorkforcemanagementBusinessunitSchedulingRunInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PatchWorkforcemanagementBusinessunitSchedulingRunInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement businessunit scheduling run internal server error response has a 2xx status code
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement businessunit scheduling run internal server error response has a 3xx status code
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement businessunit scheduling run internal server error response has a 4xx status code
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch workforcemanagement businessunit scheduling run internal server error response has a 5xx status code
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this patch workforcemanagement businessunit scheduling run internal server error response a status code equal to that given
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PatchWorkforcemanagementBusinessunitSchedulingRunInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/scheduling/runs/{runId}][%d] patchWorkforcemanagementBusinessunitSchedulingRunInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchWorkforcemanagementBusinessunitSchedulingRunInternalServerError) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/scheduling/runs/{runId}][%d] patchWorkforcemanagementBusinessunitSchedulingRunInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchWorkforcemanagementBusinessunitSchedulingRunInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementBusinessunitSchedulingRunInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementBusinessunitSchedulingRunServiceUnavailable creates a PatchWorkforcemanagementBusinessunitSchedulingRunServiceUnavailable with default headers values
func NewPatchWorkforcemanagementBusinessunitSchedulingRunServiceUnavailable() *PatchWorkforcemanagementBusinessunitSchedulingRunServiceUnavailable {
	return &PatchWorkforcemanagementBusinessunitSchedulingRunServiceUnavailable{}
}

/*
PatchWorkforcemanagementBusinessunitSchedulingRunServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PatchWorkforcemanagementBusinessunitSchedulingRunServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement businessunit scheduling run service unavailable response has a 2xx status code
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement businessunit scheduling run service unavailable response has a 3xx status code
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement businessunit scheduling run service unavailable response has a 4xx status code
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch workforcemanagement businessunit scheduling run service unavailable response has a 5xx status code
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this patch workforcemanagement businessunit scheduling run service unavailable response a status code equal to that given
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PatchWorkforcemanagementBusinessunitSchedulingRunServiceUnavailable) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/scheduling/runs/{runId}][%d] patchWorkforcemanagementBusinessunitSchedulingRunServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PatchWorkforcemanagementBusinessunitSchedulingRunServiceUnavailable) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/scheduling/runs/{runId}][%d] patchWorkforcemanagementBusinessunitSchedulingRunServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PatchWorkforcemanagementBusinessunitSchedulingRunServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementBusinessunitSchedulingRunServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementBusinessunitSchedulingRunGatewayTimeout creates a PatchWorkforcemanagementBusinessunitSchedulingRunGatewayTimeout with default headers values
func NewPatchWorkforcemanagementBusinessunitSchedulingRunGatewayTimeout() *PatchWorkforcemanagementBusinessunitSchedulingRunGatewayTimeout {
	return &PatchWorkforcemanagementBusinessunitSchedulingRunGatewayTimeout{}
}

/*
PatchWorkforcemanagementBusinessunitSchedulingRunGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PatchWorkforcemanagementBusinessunitSchedulingRunGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement businessunit scheduling run gateway timeout response has a 2xx status code
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement businessunit scheduling run gateway timeout response has a 3xx status code
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement businessunit scheduling run gateway timeout response has a 4xx status code
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch workforcemanagement businessunit scheduling run gateway timeout response has a 5xx status code
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this patch workforcemanagement businessunit scheduling run gateway timeout response a status code equal to that given
func (o *PatchWorkforcemanagementBusinessunitSchedulingRunGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PatchWorkforcemanagementBusinessunitSchedulingRunGatewayTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/scheduling/runs/{runId}][%d] patchWorkforcemanagementBusinessunitSchedulingRunGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PatchWorkforcemanagementBusinessunitSchedulingRunGatewayTimeout) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/scheduling/runs/{runId}][%d] patchWorkforcemanagementBusinessunitSchedulingRunGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PatchWorkforcemanagementBusinessunitSchedulingRunGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementBusinessunitSchedulingRunGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
