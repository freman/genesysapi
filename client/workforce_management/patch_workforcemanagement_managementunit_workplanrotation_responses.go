// Code generated by go-swagger; DO NOT EDIT.

package workforce_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PatchWorkforcemanagementManagementunitWorkplanrotationReader is a Reader for the PatchWorkforcemanagementManagementunitWorkplanrotation structure.
type PatchWorkforcemanagementManagementunitWorkplanrotationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchWorkforcemanagementManagementunitWorkplanrotationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchWorkforcemanagementManagementunitWorkplanrotationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPatchWorkforcemanagementManagementunitWorkplanrotationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchWorkforcemanagementManagementunitWorkplanrotationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchWorkforcemanagementManagementunitWorkplanrotationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPatchWorkforcemanagementManagementunitWorkplanrotationRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPatchWorkforcemanagementManagementunitWorkplanrotationConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPatchWorkforcemanagementManagementunitWorkplanrotationRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPatchWorkforcemanagementManagementunitWorkplanrotationUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPatchWorkforcemanagementManagementunitWorkplanrotationTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchWorkforcemanagementManagementunitWorkplanrotationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPatchWorkforcemanagementManagementunitWorkplanrotationServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPatchWorkforcemanagementManagementunitWorkplanrotationGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchWorkforcemanagementManagementunitWorkplanrotationOK creates a PatchWorkforcemanagementManagementunitWorkplanrotationOK with default headers values
func NewPatchWorkforcemanagementManagementunitWorkplanrotationOK() *PatchWorkforcemanagementManagementunitWorkplanrotationOK {
	return &PatchWorkforcemanagementManagementunitWorkplanrotationOK{}
}

/*
PatchWorkforcemanagementManagementunitWorkplanrotationOK describes a response with status code 200, with default header values.

successful operation
*/
type PatchWorkforcemanagementManagementunitWorkplanrotationOK struct {
	Payload *models.WorkPlanRotationResponse
}

// IsSuccess returns true when this patch workforcemanagement managementunit workplanrotation o k response has a 2xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this patch workforcemanagement managementunit workplanrotation o k response has a 3xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement managementunit workplanrotation o k response has a 4xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch workforcemanagement managementunit workplanrotation o k response has a 5xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement managementunit workplanrotation o k response a status code equal to that given
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationOK) IsCode(code int) bool {
	return code == 200
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationOK) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/workplanrotations/{workPlanRotationId}][%d] patchWorkforcemanagementManagementunitWorkplanrotationOK  %+v", 200, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationOK) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/workplanrotations/{workPlanRotationId}][%d] patchWorkforcemanagementManagementunitWorkplanrotationOK  %+v", 200, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationOK) GetPayload() *models.WorkPlanRotationResponse {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WorkPlanRotationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitWorkplanrotationBadRequest creates a PatchWorkforcemanagementManagementunitWorkplanrotationBadRequest with default headers values
func NewPatchWorkforcemanagementManagementunitWorkplanrotationBadRequest() *PatchWorkforcemanagementManagementunitWorkplanrotationBadRequest {
	return &PatchWorkforcemanagementManagementunitWorkplanrotationBadRequest{}
}

/*
PatchWorkforcemanagementManagementunitWorkplanrotationBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PatchWorkforcemanagementManagementunitWorkplanrotationBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement managementunit workplanrotation bad request response has a 2xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement managementunit workplanrotation bad request response has a 3xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement managementunit workplanrotation bad request response has a 4xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement managementunit workplanrotation bad request response has a 5xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement managementunit workplanrotation bad request response a status code equal to that given
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/workplanrotations/{workPlanRotationId}][%d] patchWorkforcemanagementManagementunitWorkplanrotationBadRequest  %+v", 400, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationBadRequest) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/workplanrotations/{workPlanRotationId}][%d] patchWorkforcemanagementManagementunitWorkplanrotationBadRequest  %+v", 400, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitWorkplanrotationUnauthorized creates a PatchWorkforcemanagementManagementunitWorkplanrotationUnauthorized with default headers values
func NewPatchWorkforcemanagementManagementunitWorkplanrotationUnauthorized() *PatchWorkforcemanagementManagementunitWorkplanrotationUnauthorized {
	return &PatchWorkforcemanagementManagementunitWorkplanrotationUnauthorized{}
}

/*
PatchWorkforcemanagementManagementunitWorkplanrotationUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PatchWorkforcemanagementManagementunitWorkplanrotationUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement managementunit workplanrotation unauthorized response has a 2xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement managementunit workplanrotation unauthorized response has a 3xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement managementunit workplanrotation unauthorized response has a 4xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement managementunit workplanrotation unauthorized response has a 5xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement managementunit workplanrotation unauthorized response a status code equal to that given
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/workplanrotations/{workPlanRotationId}][%d] patchWorkforcemanagementManagementunitWorkplanrotationUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationUnauthorized) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/workplanrotations/{workPlanRotationId}][%d] patchWorkforcemanagementManagementunitWorkplanrotationUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitWorkplanrotationForbidden creates a PatchWorkforcemanagementManagementunitWorkplanrotationForbidden with default headers values
func NewPatchWorkforcemanagementManagementunitWorkplanrotationForbidden() *PatchWorkforcemanagementManagementunitWorkplanrotationForbidden {
	return &PatchWorkforcemanagementManagementunitWorkplanrotationForbidden{}
}

/*
PatchWorkforcemanagementManagementunitWorkplanrotationForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PatchWorkforcemanagementManagementunitWorkplanrotationForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement managementunit workplanrotation forbidden response has a 2xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement managementunit workplanrotation forbidden response has a 3xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement managementunit workplanrotation forbidden response has a 4xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement managementunit workplanrotation forbidden response has a 5xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement managementunit workplanrotation forbidden response a status code equal to that given
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/workplanrotations/{workPlanRotationId}][%d] patchWorkforcemanagementManagementunitWorkplanrotationForbidden  %+v", 403, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationForbidden) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/workplanrotations/{workPlanRotationId}][%d] patchWorkforcemanagementManagementunitWorkplanrotationForbidden  %+v", 403, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitWorkplanrotationNotFound creates a PatchWorkforcemanagementManagementunitWorkplanrotationNotFound with default headers values
func NewPatchWorkforcemanagementManagementunitWorkplanrotationNotFound() *PatchWorkforcemanagementManagementunitWorkplanrotationNotFound {
	return &PatchWorkforcemanagementManagementunitWorkplanrotationNotFound{}
}

/*
PatchWorkforcemanagementManagementunitWorkplanrotationNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PatchWorkforcemanagementManagementunitWorkplanrotationNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement managementunit workplanrotation not found response has a 2xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement managementunit workplanrotation not found response has a 3xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement managementunit workplanrotation not found response has a 4xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement managementunit workplanrotation not found response has a 5xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement managementunit workplanrotation not found response a status code equal to that given
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/workplanrotations/{workPlanRotationId}][%d] patchWorkforcemanagementManagementunitWorkplanrotationNotFound  %+v", 404, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationNotFound) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/workplanrotations/{workPlanRotationId}][%d] patchWorkforcemanagementManagementunitWorkplanrotationNotFound  %+v", 404, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitWorkplanrotationRequestTimeout creates a PatchWorkforcemanagementManagementunitWorkplanrotationRequestTimeout with default headers values
func NewPatchWorkforcemanagementManagementunitWorkplanrotationRequestTimeout() *PatchWorkforcemanagementManagementunitWorkplanrotationRequestTimeout {
	return &PatchWorkforcemanagementManagementunitWorkplanrotationRequestTimeout{}
}

/*
PatchWorkforcemanagementManagementunitWorkplanrotationRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PatchWorkforcemanagementManagementunitWorkplanrotationRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement managementunit workplanrotation request timeout response has a 2xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement managementunit workplanrotation request timeout response has a 3xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement managementunit workplanrotation request timeout response has a 4xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement managementunit workplanrotation request timeout response has a 5xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement managementunit workplanrotation request timeout response a status code equal to that given
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationRequestTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/workplanrotations/{workPlanRotationId}][%d] patchWorkforcemanagementManagementunitWorkplanrotationRequestTimeout  %+v", 408, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationRequestTimeout) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/workplanrotations/{workPlanRotationId}][%d] patchWorkforcemanagementManagementunitWorkplanrotationRequestTimeout  %+v", 408, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitWorkplanrotationConflict creates a PatchWorkforcemanagementManagementunitWorkplanrotationConflict with default headers values
func NewPatchWorkforcemanagementManagementunitWorkplanrotationConflict() *PatchWorkforcemanagementManagementunitWorkplanrotationConflict {
	return &PatchWorkforcemanagementManagementunitWorkplanrotationConflict{}
}

/*
PatchWorkforcemanagementManagementunitWorkplanrotationConflict describes a response with status code 409, with default header values.

Conflict
*/
type PatchWorkforcemanagementManagementunitWorkplanrotationConflict struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement managementunit workplanrotation conflict response has a 2xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement managementunit workplanrotation conflict response has a 3xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement managementunit workplanrotation conflict response has a 4xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement managementunit workplanrotation conflict response has a 5xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement managementunit workplanrotation conflict response a status code equal to that given
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationConflict) IsCode(code int) bool {
	return code == 409
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationConflict) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/workplanrotations/{workPlanRotationId}][%d] patchWorkforcemanagementManagementunitWorkplanrotationConflict  %+v", 409, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationConflict) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/workplanrotations/{workPlanRotationId}][%d] patchWorkforcemanagementManagementunitWorkplanrotationConflict  %+v", 409, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationConflict) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitWorkplanrotationRequestEntityTooLarge creates a PatchWorkforcemanagementManagementunitWorkplanrotationRequestEntityTooLarge with default headers values
func NewPatchWorkforcemanagementManagementunitWorkplanrotationRequestEntityTooLarge() *PatchWorkforcemanagementManagementunitWorkplanrotationRequestEntityTooLarge {
	return &PatchWorkforcemanagementManagementunitWorkplanrotationRequestEntityTooLarge{}
}

/*
PatchWorkforcemanagementManagementunitWorkplanrotationRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PatchWorkforcemanagementManagementunitWorkplanrotationRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement managementunit workplanrotation request entity too large response has a 2xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement managementunit workplanrotation request entity too large response has a 3xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement managementunit workplanrotation request entity too large response has a 4xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement managementunit workplanrotation request entity too large response has a 5xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement managementunit workplanrotation request entity too large response a status code equal to that given
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/workplanrotations/{workPlanRotationId}][%d] patchWorkforcemanagementManagementunitWorkplanrotationRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/workplanrotations/{workPlanRotationId}][%d] patchWorkforcemanagementManagementunitWorkplanrotationRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitWorkplanrotationUnsupportedMediaType creates a PatchWorkforcemanagementManagementunitWorkplanrotationUnsupportedMediaType with default headers values
func NewPatchWorkforcemanagementManagementunitWorkplanrotationUnsupportedMediaType() *PatchWorkforcemanagementManagementunitWorkplanrotationUnsupportedMediaType {
	return &PatchWorkforcemanagementManagementunitWorkplanrotationUnsupportedMediaType{}
}

/*
PatchWorkforcemanagementManagementunitWorkplanrotationUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PatchWorkforcemanagementManagementunitWorkplanrotationUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement managementunit workplanrotation unsupported media type response has a 2xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement managementunit workplanrotation unsupported media type response has a 3xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement managementunit workplanrotation unsupported media type response has a 4xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement managementunit workplanrotation unsupported media type response has a 5xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement managementunit workplanrotation unsupported media type response a status code equal to that given
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/workplanrotations/{workPlanRotationId}][%d] patchWorkforcemanagementManagementunitWorkplanrotationUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/workplanrotations/{workPlanRotationId}][%d] patchWorkforcemanagementManagementunitWorkplanrotationUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitWorkplanrotationTooManyRequests creates a PatchWorkforcemanagementManagementunitWorkplanrotationTooManyRequests with default headers values
func NewPatchWorkforcemanagementManagementunitWorkplanrotationTooManyRequests() *PatchWorkforcemanagementManagementunitWorkplanrotationTooManyRequests {
	return &PatchWorkforcemanagementManagementunitWorkplanrotationTooManyRequests{}
}

/*
PatchWorkforcemanagementManagementunitWorkplanrotationTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PatchWorkforcemanagementManagementunitWorkplanrotationTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement managementunit workplanrotation too many requests response has a 2xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement managementunit workplanrotation too many requests response has a 3xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement managementunit workplanrotation too many requests response has a 4xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement managementunit workplanrotation too many requests response has a 5xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement managementunit workplanrotation too many requests response a status code equal to that given
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationTooManyRequests) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/workplanrotations/{workPlanRotationId}][%d] patchWorkforcemanagementManagementunitWorkplanrotationTooManyRequests  %+v", 429, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationTooManyRequests) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/workplanrotations/{workPlanRotationId}][%d] patchWorkforcemanagementManagementunitWorkplanrotationTooManyRequests  %+v", 429, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitWorkplanrotationInternalServerError creates a PatchWorkforcemanagementManagementunitWorkplanrotationInternalServerError with default headers values
func NewPatchWorkforcemanagementManagementunitWorkplanrotationInternalServerError() *PatchWorkforcemanagementManagementunitWorkplanrotationInternalServerError {
	return &PatchWorkforcemanagementManagementunitWorkplanrotationInternalServerError{}
}

/*
PatchWorkforcemanagementManagementunitWorkplanrotationInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PatchWorkforcemanagementManagementunitWorkplanrotationInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement managementunit workplanrotation internal server error response has a 2xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement managementunit workplanrotation internal server error response has a 3xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement managementunit workplanrotation internal server error response has a 4xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch workforcemanagement managementunit workplanrotation internal server error response has a 5xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this patch workforcemanagement managementunit workplanrotation internal server error response a status code equal to that given
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/workplanrotations/{workPlanRotationId}][%d] patchWorkforcemanagementManagementunitWorkplanrotationInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationInternalServerError) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/workplanrotations/{workPlanRotationId}][%d] patchWorkforcemanagementManagementunitWorkplanrotationInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitWorkplanrotationServiceUnavailable creates a PatchWorkforcemanagementManagementunitWorkplanrotationServiceUnavailable with default headers values
func NewPatchWorkforcemanagementManagementunitWorkplanrotationServiceUnavailable() *PatchWorkforcemanagementManagementunitWorkplanrotationServiceUnavailable {
	return &PatchWorkforcemanagementManagementunitWorkplanrotationServiceUnavailable{}
}

/*
PatchWorkforcemanagementManagementunitWorkplanrotationServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PatchWorkforcemanagementManagementunitWorkplanrotationServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement managementunit workplanrotation service unavailable response has a 2xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement managementunit workplanrotation service unavailable response has a 3xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement managementunit workplanrotation service unavailable response has a 4xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch workforcemanagement managementunit workplanrotation service unavailable response has a 5xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this patch workforcemanagement managementunit workplanrotation service unavailable response a status code equal to that given
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationServiceUnavailable) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/workplanrotations/{workPlanRotationId}][%d] patchWorkforcemanagementManagementunitWorkplanrotationServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationServiceUnavailable) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/workplanrotations/{workPlanRotationId}][%d] patchWorkforcemanagementManagementunitWorkplanrotationServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitWorkplanrotationGatewayTimeout creates a PatchWorkforcemanagementManagementunitWorkplanrotationGatewayTimeout with default headers values
func NewPatchWorkforcemanagementManagementunitWorkplanrotationGatewayTimeout() *PatchWorkforcemanagementManagementunitWorkplanrotationGatewayTimeout {
	return &PatchWorkforcemanagementManagementunitWorkplanrotationGatewayTimeout{}
}

/*
PatchWorkforcemanagementManagementunitWorkplanrotationGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PatchWorkforcemanagementManagementunitWorkplanrotationGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement managementunit workplanrotation gateway timeout response has a 2xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement managementunit workplanrotation gateway timeout response has a 3xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement managementunit workplanrotation gateway timeout response has a 4xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch workforcemanagement managementunit workplanrotation gateway timeout response has a 5xx status code
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this patch workforcemanagement managementunit workplanrotation gateway timeout response a status code equal to that given
func (o *PatchWorkforcemanagementManagementunitWorkplanrotationGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationGatewayTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/workplanrotations/{workPlanRotationId}][%d] patchWorkforcemanagementManagementunitWorkplanrotationGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationGatewayTimeout) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/workplanrotations/{workPlanRotationId}][%d] patchWorkforcemanagementManagementunitWorkplanrotationGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitWorkplanrotationGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
