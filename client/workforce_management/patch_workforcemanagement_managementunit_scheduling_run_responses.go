// Code generated by go-swagger; DO NOT EDIT.

package workforce_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PatchWorkforcemanagementManagementunitSchedulingRunReader is a Reader for the PatchWorkforcemanagementManagementunitSchedulingRun structure.
type PatchWorkforcemanagementManagementunitSchedulingRunReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchWorkforcemanagementManagementunitSchedulingRunReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 400:
		result := NewPatchWorkforcemanagementManagementunitSchedulingRunBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPatchWorkforcemanagementManagementunitSchedulingRunUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchWorkforcemanagementManagementunitSchedulingRunForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchWorkforcemanagementManagementunitSchedulingRunNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewPatchWorkforcemanagementManagementunitSchedulingRunGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPatchWorkforcemanagementManagementunitSchedulingRunRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPatchWorkforcemanagementManagementunitSchedulingRunUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPatchWorkforcemanagementManagementunitSchedulingRunTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchWorkforcemanagementManagementunitSchedulingRunInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPatchWorkforcemanagementManagementunitSchedulingRunServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPatchWorkforcemanagementManagementunitSchedulingRunGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewPatchWorkforcemanagementManagementunitSchedulingRunDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPatchWorkforcemanagementManagementunitSchedulingRunBadRequest creates a PatchWorkforcemanagementManagementunitSchedulingRunBadRequest with default headers values
func NewPatchWorkforcemanagementManagementunitSchedulingRunBadRequest() *PatchWorkforcemanagementManagementunitSchedulingRunBadRequest {
	return &PatchWorkforcemanagementManagementunitSchedulingRunBadRequest{}
}

/*PatchWorkforcemanagementManagementunitSchedulingRunBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PatchWorkforcemanagementManagementunitSchedulingRunBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PatchWorkforcemanagementManagementunitSchedulingRunBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/scheduling/runs/{runId}][%d] patchWorkforcemanagementManagementunitSchedulingRunBadRequest  %+v", 400, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitSchedulingRunBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitSchedulingRunBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitSchedulingRunUnauthorized creates a PatchWorkforcemanagementManagementunitSchedulingRunUnauthorized with default headers values
func NewPatchWorkforcemanagementManagementunitSchedulingRunUnauthorized() *PatchWorkforcemanagementManagementunitSchedulingRunUnauthorized {
	return &PatchWorkforcemanagementManagementunitSchedulingRunUnauthorized{}
}

/*PatchWorkforcemanagementManagementunitSchedulingRunUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PatchWorkforcemanagementManagementunitSchedulingRunUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PatchWorkforcemanagementManagementunitSchedulingRunUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/scheduling/runs/{runId}][%d] patchWorkforcemanagementManagementunitSchedulingRunUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitSchedulingRunUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitSchedulingRunUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitSchedulingRunForbidden creates a PatchWorkforcemanagementManagementunitSchedulingRunForbidden with default headers values
func NewPatchWorkforcemanagementManagementunitSchedulingRunForbidden() *PatchWorkforcemanagementManagementunitSchedulingRunForbidden {
	return &PatchWorkforcemanagementManagementunitSchedulingRunForbidden{}
}

/*PatchWorkforcemanagementManagementunitSchedulingRunForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PatchWorkforcemanagementManagementunitSchedulingRunForbidden struct {
	Payload *models.ErrorBody
}

func (o *PatchWorkforcemanagementManagementunitSchedulingRunForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/scheduling/runs/{runId}][%d] patchWorkforcemanagementManagementunitSchedulingRunForbidden  %+v", 403, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitSchedulingRunForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitSchedulingRunForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitSchedulingRunNotFound creates a PatchWorkforcemanagementManagementunitSchedulingRunNotFound with default headers values
func NewPatchWorkforcemanagementManagementunitSchedulingRunNotFound() *PatchWorkforcemanagementManagementunitSchedulingRunNotFound {
	return &PatchWorkforcemanagementManagementunitSchedulingRunNotFound{}
}

/*PatchWorkforcemanagementManagementunitSchedulingRunNotFound handles this case with default header values.

The requested resource was not found.
*/
type PatchWorkforcemanagementManagementunitSchedulingRunNotFound struct {
	Payload *models.ErrorBody
}

func (o *PatchWorkforcemanagementManagementunitSchedulingRunNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/scheduling/runs/{runId}][%d] patchWorkforcemanagementManagementunitSchedulingRunNotFound  %+v", 404, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitSchedulingRunNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitSchedulingRunNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitSchedulingRunGone creates a PatchWorkforcemanagementManagementunitSchedulingRunGone with default headers values
func NewPatchWorkforcemanagementManagementunitSchedulingRunGone() *PatchWorkforcemanagementManagementunitSchedulingRunGone {
	return &PatchWorkforcemanagementManagementunitSchedulingRunGone{}
}

/*PatchWorkforcemanagementManagementunitSchedulingRunGone handles this case with default header values.

Gone
*/
type PatchWorkforcemanagementManagementunitSchedulingRunGone struct {
	Payload *models.ErrorBody
}

func (o *PatchWorkforcemanagementManagementunitSchedulingRunGone) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/scheduling/runs/{runId}][%d] patchWorkforcemanagementManagementunitSchedulingRunGone  %+v", 410, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitSchedulingRunGone) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitSchedulingRunGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitSchedulingRunRequestEntityTooLarge creates a PatchWorkforcemanagementManagementunitSchedulingRunRequestEntityTooLarge with default headers values
func NewPatchWorkforcemanagementManagementunitSchedulingRunRequestEntityTooLarge() *PatchWorkforcemanagementManagementunitSchedulingRunRequestEntityTooLarge {
	return &PatchWorkforcemanagementManagementunitSchedulingRunRequestEntityTooLarge{}
}

/*PatchWorkforcemanagementManagementunitSchedulingRunRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type PatchWorkforcemanagementManagementunitSchedulingRunRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PatchWorkforcemanagementManagementunitSchedulingRunRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/scheduling/runs/{runId}][%d] patchWorkforcemanagementManagementunitSchedulingRunRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitSchedulingRunRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitSchedulingRunRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitSchedulingRunUnsupportedMediaType creates a PatchWorkforcemanagementManagementunitSchedulingRunUnsupportedMediaType with default headers values
func NewPatchWorkforcemanagementManagementunitSchedulingRunUnsupportedMediaType() *PatchWorkforcemanagementManagementunitSchedulingRunUnsupportedMediaType {
	return &PatchWorkforcemanagementManagementunitSchedulingRunUnsupportedMediaType{}
}

/*PatchWorkforcemanagementManagementunitSchedulingRunUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PatchWorkforcemanagementManagementunitSchedulingRunUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PatchWorkforcemanagementManagementunitSchedulingRunUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/scheduling/runs/{runId}][%d] patchWorkforcemanagementManagementunitSchedulingRunUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitSchedulingRunUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitSchedulingRunUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitSchedulingRunTooManyRequests creates a PatchWorkforcemanagementManagementunitSchedulingRunTooManyRequests with default headers values
func NewPatchWorkforcemanagementManagementunitSchedulingRunTooManyRequests() *PatchWorkforcemanagementManagementunitSchedulingRunTooManyRequests {
	return &PatchWorkforcemanagementManagementunitSchedulingRunTooManyRequests{}
}

/*PatchWorkforcemanagementManagementunitSchedulingRunTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type PatchWorkforcemanagementManagementunitSchedulingRunTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PatchWorkforcemanagementManagementunitSchedulingRunTooManyRequests) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/scheduling/runs/{runId}][%d] patchWorkforcemanagementManagementunitSchedulingRunTooManyRequests  %+v", 429, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitSchedulingRunTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitSchedulingRunTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitSchedulingRunInternalServerError creates a PatchWorkforcemanagementManagementunitSchedulingRunInternalServerError with default headers values
func NewPatchWorkforcemanagementManagementunitSchedulingRunInternalServerError() *PatchWorkforcemanagementManagementunitSchedulingRunInternalServerError {
	return &PatchWorkforcemanagementManagementunitSchedulingRunInternalServerError{}
}

/*PatchWorkforcemanagementManagementunitSchedulingRunInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PatchWorkforcemanagementManagementunitSchedulingRunInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PatchWorkforcemanagementManagementunitSchedulingRunInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/scheduling/runs/{runId}][%d] patchWorkforcemanagementManagementunitSchedulingRunInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitSchedulingRunInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitSchedulingRunInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitSchedulingRunServiceUnavailable creates a PatchWorkforcemanagementManagementunitSchedulingRunServiceUnavailable with default headers values
func NewPatchWorkforcemanagementManagementunitSchedulingRunServiceUnavailable() *PatchWorkforcemanagementManagementunitSchedulingRunServiceUnavailable {
	return &PatchWorkforcemanagementManagementunitSchedulingRunServiceUnavailable{}
}

/*PatchWorkforcemanagementManagementunitSchedulingRunServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PatchWorkforcemanagementManagementunitSchedulingRunServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PatchWorkforcemanagementManagementunitSchedulingRunServiceUnavailable) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/scheduling/runs/{runId}][%d] patchWorkforcemanagementManagementunitSchedulingRunServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitSchedulingRunServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitSchedulingRunServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitSchedulingRunGatewayTimeout creates a PatchWorkforcemanagementManagementunitSchedulingRunGatewayTimeout with default headers values
func NewPatchWorkforcemanagementManagementunitSchedulingRunGatewayTimeout() *PatchWorkforcemanagementManagementunitSchedulingRunGatewayTimeout {
	return &PatchWorkforcemanagementManagementunitSchedulingRunGatewayTimeout{}
}

/*PatchWorkforcemanagementManagementunitSchedulingRunGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PatchWorkforcemanagementManagementunitSchedulingRunGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PatchWorkforcemanagementManagementunitSchedulingRunGatewayTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/scheduling/runs/{runId}][%d] patchWorkforcemanagementManagementunitSchedulingRunGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitSchedulingRunGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitSchedulingRunGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitSchedulingRunDefault creates a PatchWorkforcemanagementManagementunitSchedulingRunDefault with default headers values
func NewPatchWorkforcemanagementManagementunitSchedulingRunDefault(code int) *PatchWorkforcemanagementManagementunitSchedulingRunDefault {
	return &PatchWorkforcemanagementManagementunitSchedulingRunDefault{
		_statusCode: code,
	}
}

/*PatchWorkforcemanagementManagementunitSchedulingRunDefault handles this case with default header values.

successful operation
*/
type PatchWorkforcemanagementManagementunitSchedulingRunDefault struct {
	_statusCode int
}

// Code gets the status code for the patch workforcemanagement managementunit scheduling run default response
func (o *PatchWorkforcemanagementManagementunitSchedulingRunDefault) Code() int {
	return o._statusCode
}

func (o *PatchWorkforcemanagementManagementunitSchedulingRunDefault) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/scheduling/runs/{runId}][%d] patchWorkforcemanagementManagementunitSchedulingRun default ", o._statusCode)
}

func (o *PatchWorkforcemanagementManagementunitSchedulingRunDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
