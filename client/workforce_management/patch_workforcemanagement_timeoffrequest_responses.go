// Code generated by go-swagger; DO NOT EDIT.

package workforce_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PatchWorkforcemanagementTimeoffrequestReader is a Reader for the PatchWorkforcemanagementTimeoffrequest structure.
type PatchWorkforcemanagementTimeoffrequestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchWorkforcemanagementTimeoffrequestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchWorkforcemanagementTimeoffrequestOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchWorkforcemanagementTimeoffrequestBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPatchWorkforcemanagementTimeoffrequestUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchWorkforcemanagementTimeoffrequestForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchWorkforcemanagementTimeoffrequestNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPatchWorkforcemanagementTimeoffrequestRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPatchWorkforcemanagementTimeoffrequestRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPatchWorkforcemanagementTimeoffrequestUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPatchWorkforcemanagementTimeoffrequestTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchWorkforcemanagementTimeoffrequestInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPatchWorkforcemanagementTimeoffrequestServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPatchWorkforcemanagementTimeoffrequestGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchWorkforcemanagementTimeoffrequestOK creates a PatchWorkforcemanagementTimeoffrequestOK with default headers values
func NewPatchWorkforcemanagementTimeoffrequestOK() *PatchWorkforcemanagementTimeoffrequestOK {
	return &PatchWorkforcemanagementTimeoffrequestOK{}
}

/*
PatchWorkforcemanagementTimeoffrequestOK describes a response with status code 200, with default header values.

successful operation
*/
type PatchWorkforcemanagementTimeoffrequestOK struct {
	Payload *models.TimeOffRequestResponse
}

// IsSuccess returns true when this patch workforcemanagement timeoffrequest o k response has a 2xx status code
func (o *PatchWorkforcemanagementTimeoffrequestOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this patch workforcemanagement timeoffrequest o k response has a 3xx status code
func (o *PatchWorkforcemanagementTimeoffrequestOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement timeoffrequest o k response has a 4xx status code
func (o *PatchWorkforcemanagementTimeoffrequestOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch workforcemanagement timeoffrequest o k response has a 5xx status code
func (o *PatchWorkforcemanagementTimeoffrequestOK) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement timeoffrequest o k response a status code equal to that given
func (o *PatchWorkforcemanagementTimeoffrequestOK) IsCode(code int) bool {
	return code == 200
}

func (o *PatchWorkforcemanagementTimeoffrequestOK) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/timeoffrequests/{timeOffRequestId}][%d] patchWorkforcemanagementTimeoffrequestOK  %+v", 200, o.Payload)
}

func (o *PatchWorkforcemanagementTimeoffrequestOK) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/timeoffrequests/{timeOffRequestId}][%d] patchWorkforcemanagementTimeoffrequestOK  %+v", 200, o.Payload)
}

func (o *PatchWorkforcemanagementTimeoffrequestOK) GetPayload() *models.TimeOffRequestResponse {
	return o.Payload
}

func (o *PatchWorkforcemanagementTimeoffrequestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TimeOffRequestResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementTimeoffrequestBadRequest creates a PatchWorkforcemanagementTimeoffrequestBadRequest with default headers values
func NewPatchWorkforcemanagementTimeoffrequestBadRequest() *PatchWorkforcemanagementTimeoffrequestBadRequest {
	return &PatchWorkforcemanagementTimeoffrequestBadRequest{}
}

/*
PatchWorkforcemanagementTimeoffrequestBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PatchWorkforcemanagementTimeoffrequestBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement timeoffrequest bad request response has a 2xx status code
func (o *PatchWorkforcemanagementTimeoffrequestBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement timeoffrequest bad request response has a 3xx status code
func (o *PatchWorkforcemanagementTimeoffrequestBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement timeoffrequest bad request response has a 4xx status code
func (o *PatchWorkforcemanagementTimeoffrequestBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement timeoffrequest bad request response has a 5xx status code
func (o *PatchWorkforcemanagementTimeoffrequestBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement timeoffrequest bad request response a status code equal to that given
func (o *PatchWorkforcemanagementTimeoffrequestBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PatchWorkforcemanagementTimeoffrequestBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/timeoffrequests/{timeOffRequestId}][%d] patchWorkforcemanagementTimeoffrequestBadRequest  %+v", 400, o.Payload)
}

func (o *PatchWorkforcemanagementTimeoffrequestBadRequest) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/timeoffrequests/{timeOffRequestId}][%d] patchWorkforcemanagementTimeoffrequestBadRequest  %+v", 400, o.Payload)
}

func (o *PatchWorkforcemanagementTimeoffrequestBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementTimeoffrequestBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementTimeoffrequestUnauthorized creates a PatchWorkforcemanagementTimeoffrequestUnauthorized with default headers values
func NewPatchWorkforcemanagementTimeoffrequestUnauthorized() *PatchWorkforcemanagementTimeoffrequestUnauthorized {
	return &PatchWorkforcemanagementTimeoffrequestUnauthorized{}
}

/*
PatchWorkforcemanagementTimeoffrequestUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PatchWorkforcemanagementTimeoffrequestUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement timeoffrequest unauthorized response has a 2xx status code
func (o *PatchWorkforcemanagementTimeoffrequestUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement timeoffrequest unauthorized response has a 3xx status code
func (o *PatchWorkforcemanagementTimeoffrequestUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement timeoffrequest unauthorized response has a 4xx status code
func (o *PatchWorkforcemanagementTimeoffrequestUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement timeoffrequest unauthorized response has a 5xx status code
func (o *PatchWorkforcemanagementTimeoffrequestUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement timeoffrequest unauthorized response a status code equal to that given
func (o *PatchWorkforcemanagementTimeoffrequestUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PatchWorkforcemanagementTimeoffrequestUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/timeoffrequests/{timeOffRequestId}][%d] patchWorkforcemanagementTimeoffrequestUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchWorkforcemanagementTimeoffrequestUnauthorized) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/timeoffrequests/{timeOffRequestId}][%d] patchWorkforcemanagementTimeoffrequestUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchWorkforcemanagementTimeoffrequestUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementTimeoffrequestUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementTimeoffrequestForbidden creates a PatchWorkforcemanagementTimeoffrequestForbidden with default headers values
func NewPatchWorkforcemanagementTimeoffrequestForbidden() *PatchWorkforcemanagementTimeoffrequestForbidden {
	return &PatchWorkforcemanagementTimeoffrequestForbidden{}
}

/*
PatchWorkforcemanagementTimeoffrequestForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PatchWorkforcemanagementTimeoffrequestForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement timeoffrequest forbidden response has a 2xx status code
func (o *PatchWorkforcemanagementTimeoffrequestForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement timeoffrequest forbidden response has a 3xx status code
func (o *PatchWorkforcemanagementTimeoffrequestForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement timeoffrequest forbidden response has a 4xx status code
func (o *PatchWorkforcemanagementTimeoffrequestForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement timeoffrequest forbidden response has a 5xx status code
func (o *PatchWorkforcemanagementTimeoffrequestForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement timeoffrequest forbidden response a status code equal to that given
func (o *PatchWorkforcemanagementTimeoffrequestForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PatchWorkforcemanagementTimeoffrequestForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/timeoffrequests/{timeOffRequestId}][%d] patchWorkforcemanagementTimeoffrequestForbidden  %+v", 403, o.Payload)
}

func (o *PatchWorkforcemanagementTimeoffrequestForbidden) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/timeoffrequests/{timeOffRequestId}][%d] patchWorkforcemanagementTimeoffrequestForbidden  %+v", 403, o.Payload)
}

func (o *PatchWorkforcemanagementTimeoffrequestForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementTimeoffrequestForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementTimeoffrequestNotFound creates a PatchWorkforcemanagementTimeoffrequestNotFound with default headers values
func NewPatchWorkforcemanagementTimeoffrequestNotFound() *PatchWorkforcemanagementTimeoffrequestNotFound {
	return &PatchWorkforcemanagementTimeoffrequestNotFound{}
}

/*
PatchWorkforcemanagementTimeoffrequestNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PatchWorkforcemanagementTimeoffrequestNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement timeoffrequest not found response has a 2xx status code
func (o *PatchWorkforcemanagementTimeoffrequestNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement timeoffrequest not found response has a 3xx status code
func (o *PatchWorkforcemanagementTimeoffrequestNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement timeoffrequest not found response has a 4xx status code
func (o *PatchWorkforcemanagementTimeoffrequestNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement timeoffrequest not found response has a 5xx status code
func (o *PatchWorkforcemanagementTimeoffrequestNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement timeoffrequest not found response a status code equal to that given
func (o *PatchWorkforcemanagementTimeoffrequestNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PatchWorkforcemanagementTimeoffrequestNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/timeoffrequests/{timeOffRequestId}][%d] patchWorkforcemanagementTimeoffrequestNotFound  %+v", 404, o.Payload)
}

func (o *PatchWorkforcemanagementTimeoffrequestNotFound) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/timeoffrequests/{timeOffRequestId}][%d] patchWorkforcemanagementTimeoffrequestNotFound  %+v", 404, o.Payload)
}

func (o *PatchWorkforcemanagementTimeoffrequestNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementTimeoffrequestNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementTimeoffrequestRequestTimeout creates a PatchWorkforcemanagementTimeoffrequestRequestTimeout with default headers values
func NewPatchWorkforcemanagementTimeoffrequestRequestTimeout() *PatchWorkforcemanagementTimeoffrequestRequestTimeout {
	return &PatchWorkforcemanagementTimeoffrequestRequestTimeout{}
}

/*
PatchWorkforcemanagementTimeoffrequestRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PatchWorkforcemanagementTimeoffrequestRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement timeoffrequest request timeout response has a 2xx status code
func (o *PatchWorkforcemanagementTimeoffrequestRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement timeoffrequest request timeout response has a 3xx status code
func (o *PatchWorkforcemanagementTimeoffrequestRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement timeoffrequest request timeout response has a 4xx status code
func (o *PatchWorkforcemanagementTimeoffrequestRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement timeoffrequest request timeout response has a 5xx status code
func (o *PatchWorkforcemanagementTimeoffrequestRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement timeoffrequest request timeout response a status code equal to that given
func (o *PatchWorkforcemanagementTimeoffrequestRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PatchWorkforcemanagementTimeoffrequestRequestTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/timeoffrequests/{timeOffRequestId}][%d] patchWorkforcemanagementTimeoffrequestRequestTimeout  %+v", 408, o.Payload)
}

func (o *PatchWorkforcemanagementTimeoffrequestRequestTimeout) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/timeoffrequests/{timeOffRequestId}][%d] patchWorkforcemanagementTimeoffrequestRequestTimeout  %+v", 408, o.Payload)
}

func (o *PatchWorkforcemanagementTimeoffrequestRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementTimeoffrequestRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementTimeoffrequestRequestEntityTooLarge creates a PatchWorkforcemanagementTimeoffrequestRequestEntityTooLarge with default headers values
func NewPatchWorkforcemanagementTimeoffrequestRequestEntityTooLarge() *PatchWorkforcemanagementTimeoffrequestRequestEntityTooLarge {
	return &PatchWorkforcemanagementTimeoffrequestRequestEntityTooLarge{}
}

/*
PatchWorkforcemanagementTimeoffrequestRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PatchWorkforcemanagementTimeoffrequestRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement timeoffrequest request entity too large response has a 2xx status code
func (o *PatchWorkforcemanagementTimeoffrequestRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement timeoffrequest request entity too large response has a 3xx status code
func (o *PatchWorkforcemanagementTimeoffrequestRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement timeoffrequest request entity too large response has a 4xx status code
func (o *PatchWorkforcemanagementTimeoffrequestRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement timeoffrequest request entity too large response has a 5xx status code
func (o *PatchWorkforcemanagementTimeoffrequestRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement timeoffrequest request entity too large response a status code equal to that given
func (o *PatchWorkforcemanagementTimeoffrequestRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PatchWorkforcemanagementTimeoffrequestRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/timeoffrequests/{timeOffRequestId}][%d] patchWorkforcemanagementTimeoffrequestRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PatchWorkforcemanagementTimeoffrequestRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/timeoffrequests/{timeOffRequestId}][%d] patchWorkforcemanagementTimeoffrequestRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PatchWorkforcemanagementTimeoffrequestRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementTimeoffrequestRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementTimeoffrequestUnsupportedMediaType creates a PatchWorkforcemanagementTimeoffrequestUnsupportedMediaType with default headers values
func NewPatchWorkforcemanagementTimeoffrequestUnsupportedMediaType() *PatchWorkforcemanagementTimeoffrequestUnsupportedMediaType {
	return &PatchWorkforcemanagementTimeoffrequestUnsupportedMediaType{}
}

/*
PatchWorkforcemanagementTimeoffrequestUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PatchWorkforcemanagementTimeoffrequestUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement timeoffrequest unsupported media type response has a 2xx status code
func (o *PatchWorkforcemanagementTimeoffrequestUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement timeoffrequest unsupported media type response has a 3xx status code
func (o *PatchWorkforcemanagementTimeoffrequestUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement timeoffrequest unsupported media type response has a 4xx status code
func (o *PatchWorkforcemanagementTimeoffrequestUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement timeoffrequest unsupported media type response has a 5xx status code
func (o *PatchWorkforcemanagementTimeoffrequestUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement timeoffrequest unsupported media type response a status code equal to that given
func (o *PatchWorkforcemanagementTimeoffrequestUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PatchWorkforcemanagementTimeoffrequestUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/timeoffrequests/{timeOffRequestId}][%d] patchWorkforcemanagementTimeoffrequestUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchWorkforcemanagementTimeoffrequestUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/timeoffrequests/{timeOffRequestId}][%d] patchWorkforcemanagementTimeoffrequestUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchWorkforcemanagementTimeoffrequestUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementTimeoffrequestUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementTimeoffrequestTooManyRequests creates a PatchWorkforcemanagementTimeoffrequestTooManyRequests with default headers values
func NewPatchWorkforcemanagementTimeoffrequestTooManyRequests() *PatchWorkforcemanagementTimeoffrequestTooManyRequests {
	return &PatchWorkforcemanagementTimeoffrequestTooManyRequests{}
}

/*
PatchWorkforcemanagementTimeoffrequestTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PatchWorkforcemanagementTimeoffrequestTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement timeoffrequest too many requests response has a 2xx status code
func (o *PatchWorkforcemanagementTimeoffrequestTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement timeoffrequest too many requests response has a 3xx status code
func (o *PatchWorkforcemanagementTimeoffrequestTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement timeoffrequest too many requests response has a 4xx status code
func (o *PatchWorkforcemanagementTimeoffrequestTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement timeoffrequest too many requests response has a 5xx status code
func (o *PatchWorkforcemanagementTimeoffrequestTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement timeoffrequest too many requests response a status code equal to that given
func (o *PatchWorkforcemanagementTimeoffrequestTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PatchWorkforcemanagementTimeoffrequestTooManyRequests) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/timeoffrequests/{timeOffRequestId}][%d] patchWorkforcemanagementTimeoffrequestTooManyRequests  %+v", 429, o.Payload)
}

func (o *PatchWorkforcemanagementTimeoffrequestTooManyRequests) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/timeoffrequests/{timeOffRequestId}][%d] patchWorkforcemanagementTimeoffrequestTooManyRequests  %+v", 429, o.Payload)
}

func (o *PatchWorkforcemanagementTimeoffrequestTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementTimeoffrequestTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementTimeoffrequestInternalServerError creates a PatchWorkforcemanagementTimeoffrequestInternalServerError with default headers values
func NewPatchWorkforcemanagementTimeoffrequestInternalServerError() *PatchWorkforcemanagementTimeoffrequestInternalServerError {
	return &PatchWorkforcemanagementTimeoffrequestInternalServerError{}
}

/*
PatchWorkforcemanagementTimeoffrequestInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PatchWorkforcemanagementTimeoffrequestInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement timeoffrequest internal server error response has a 2xx status code
func (o *PatchWorkforcemanagementTimeoffrequestInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement timeoffrequest internal server error response has a 3xx status code
func (o *PatchWorkforcemanagementTimeoffrequestInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement timeoffrequest internal server error response has a 4xx status code
func (o *PatchWorkforcemanagementTimeoffrequestInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch workforcemanagement timeoffrequest internal server error response has a 5xx status code
func (o *PatchWorkforcemanagementTimeoffrequestInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this patch workforcemanagement timeoffrequest internal server error response a status code equal to that given
func (o *PatchWorkforcemanagementTimeoffrequestInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PatchWorkforcemanagementTimeoffrequestInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/timeoffrequests/{timeOffRequestId}][%d] patchWorkforcemanagementTimeoffrequestInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchWorkforcemanagementTimeoffrequestInternalServerError) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/timeoffrequests/{timeOffRequestId}][%d] patchWorkforcemanagementTimeoffrequestInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchWorkforcemanagementTimeoffrequestInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementTimeoffrequestInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementTimeoffrequestServiceUnavailable creates a PatchWorkforcemanagementTimeoffrequestServiceUnavailable with default headers values
func NewPatchWorkforcemanagementTimeoffrequestServiceUnavailable() *PatchWorkforcemanagementTimeoffrequestServiceUnavailable {
	return &PatchWorkforcemanagementTimeoffrequestServiceUnavailable{}
}

/*
PatchWorkforcemanagementTimeoffrequestServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PatchWorkforcemanagementTimeoffrequestServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement timeoffrequest service unavailable response has a 2xx status code
func (o *PatchWorkforcemanagementTimeoffrequestServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement timeoffrequest service unavailable response has a 3xx status code
func (o *PatchWorkforcemanagementTimeoffrequestServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement timeoffrequest service unavailable response has a 4xx status code
func (o *PatchWorkforcemanagementTimeoffrequestServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch workforcemanagement timeoffrequest service unavailable response has a 5xx status code
func (o *PatchWorkforcemanagementTimeoffrequestServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this patch workforcemanagement timeoffrequest service unavailable response a status code equal to that given
func (o *PatchWorkforcemanagementTimeoffrequestServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PatchWorkforcemanagementTimeoffrequestServiceUnavailable) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/timeoffrequests/{timeOffRequestId}][%d] patchWorkforcemanagementTimeoffrequestServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PatchWorkforcemanagementTimeoffrequestServiceUnavailable) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/timeoffrequests/{timeOffRequestId}][%d] patchWorkforcemanagementTimeoffrequestServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PatchWorkforcemanagementTimeoffrequestServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementTimeoffrequestServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementTimeoffrequestGatewayTimeout creates a PatchWorkforcemanagementTimeoffrequestGatewayTimeout with default headers values
func NewPatchWorkforcemanagementTimeoffrequestGatewayTimeout() *PatchWorkforcemanagementTimeoffrequestGatewayTimeout {
	return &PatchWorkforcemanagementTimeoffrequestGatewayTimeout{}
}

/*
PatchWorkforcemanagementTimeoffrequestGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PatchWorkforcemanagementTimeoffrequestGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement timeoffrequest gateway timeout response has a 2xx status code
func (o *PatchWorkforcemanagementTimeoffrequestGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement timeoffrequest gateway timeout response has a 3xx status code
func (o *PatchWorkforcemanagementTimeoffrequestGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement timeoffrequest gateway timeout response has a 4xx status code
func (o *PatchWorkforcemanagementTimeoffrequestGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch workforcemanagement timeoffrequest gateway timeout response has a 5xx status code
func (o *PatchWorkforcemanagementTimeoffrequestGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this patch workforcemanagement timeoffrequest gateway timeout response a status code equal to that given
func (o *PatchWorkforcemanagementTimeoffrequestGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PatchWorkforcemanagementTimeoffrequestGatewayTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/timeoffrequests/{timeOffRequestId}][%d] patchWorkforcemanagementTimeoffrequestGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PatchWorkforcemanagementTimeoffrequestGatewayTimeout) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/timeoffrequests/{timeOffRequestId}][%d] patchWorkforcemanagementTimeoffrequestGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PatchWorkforcemanagementTimeoffrequestGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementTimeoffrequestGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
