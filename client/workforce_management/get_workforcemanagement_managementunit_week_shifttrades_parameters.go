// Code generated by go-swagger; DO NOT EDIT.

package workforce_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetWorkforcemanagementManagementunitWeekShifttradesParams creates a new GetWorkforcemanagementManagementunitWeekShifttradesParams object
// with the default values initialized.
func NewGetWorkforcemanagementManagementunitWeekShifttradesParams() *GetWorkforcemanagementManagementunitWeekShifttradesParams {
	var (
		evaluateMatchesDefault = bool(true)
	)
	return &GetWorkforcemanagementManagementunitWeekShifttradesParams{
		EvaluateMatches: &evaluateMatchesDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewGetWorkforcemanagementManagementunitWeekShifttradesParamsWithTimeout creates a new GetWorkforcemanagementManagementunitWeekShifttradesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetWorkforcemanagementManagementunitWeekShifttradesParamsWithTimeout(timeout time.Duration) *GetWorkforcemanagementManagementunitWeekShifttradesParams {
	var (
		evaluateMatchesDefault = bool(true)
	)
	return &GetWorkforcemanagementManagementunitWeekShifttradesParams{
		EvaluateMatches: &evaluateMatchesDefault,

		timeout: timeout,
	}
}

// NewGetWorkforcemanagementManagementunitWeekShifttradesParamsWithContext creates a new GetWorkforcemanagementManagementunitWeekShifttradesParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetWorkforcemanagementManagementunitWeekShifttradesParamsWithContext(ctx context.Context) *GetWorkforcemanagementManagementunitWeekShifttradesParams {
	var (
		evaluateMatchesDefault = bool(true)
	)
	return &GetWorkforcemanagementManagementunitWeekShifttradesParams{
		EvaluateMatches: &evaluateMatchesDefault,

		Context: ctx,
	}
}

// NewGetWorkforcemanagementManagementunitWeekShifttradesParamsWithHTTPClient creates a new GetWorkforcemanagementManagementunitWeekShifttradesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetWorkforcemanagementManagementunitWeekShifttradesParamsWithHTTPClient(client *http.Client) *GetWorkforcemanagementManagementunitWeekShifttradesParams {
	var (
		evaluateMatchesDefault = bool(true)
	)
	return &GetWorkforcemanagementManagementunitWeekShifttradesParams{
		EvaluateMatches: &evaluateMatchesDefault,
		HTTPClient:      client,
	}
}

/*GetWorkforcemanagementManagementunitWeekShifttradesParams contains all the parameters to send to the API endpoint
for the get workforcemanagement managementunit week shifttrades operation typically these are written to a http.Request
*/
type GetWorkforcemanagementManagementunitWeekShifttradesParams struct {

	/*EvaluateMatches
	  Whether to evaluate the matches for violations

	*/
	EvaluateMatches *bool
	/*ManagementUnitID
	  The management unit ID of the management unit, or 'mine' for the management unit of the logged-in user.

	*/
	ManagementUnitID string
	/*WeekDateID
	  The start date of the week schedule in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd

	*/
	WeekDateID strfmt.Date

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get workforcemanagement managementunit week shifttrades params
func (o *GetWorkforcemanagementManagementunitWeekShifttradesParams) WithTimeout(timeout time.Duration) *GetWorkforcemanagementManagementunitWeekShifttradesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get workforcemanagement managementunit week shifttrades params
func (o *GetWorkforcemanagementManagementunitWeekShifttradesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get workforcemanagement managementunit week shifttrades params
func (o *GetWorkforcemanagementManagementunitWeekShifttradesParams) WithContext(ctx context.Context) *GetWorkforcemanagementManagementunitWeekShifttradesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get workforcemanagement managementunit week shifttrades params
func (o *GetWorkforcemanagementManagementunitWeekShifttradesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get workforcemanagement managementunit week shifttrades params
func (o *GetWorkforcemanagementManagementunitWeekShifttradesParams) WithHTTPClient(client *http.Client) *GetWorkforcemanagementManagementunitWeekShifttradesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get workforcemanagement managementunit week shifttrades params
func (o *GetWorkforcemanagementManagementunitWeekShifttradesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEvaluateMatches adds the evaluateMatches to the get workforcemanagement managementunit week shifttrades params
func (o *GetWorkforcemanagementManagementunitWeekShifttradesParams) WithEvaluateMatches(evaluateMatches *bool) *GetWorkforcemanagementManagementunitWeekShifttradesParams {
	o.SetEvaluateMatches(evaluateMatches)
	return o
}

// SetEvaluateMatches adds the evaluateMatches to the get workforcemanagement managementunit week shifttrades params
func (o *GetWorkforcemanagementManagementunitWeekShifttradesParams) SetEvaluateMatches(evaluateMatches *bool) {
	o.EvaluateMatches = evaluateMatches
}

// WithManagementUnitID adds the managementUnitID to the get workforcemanagement managementunit week shifttrades params
func (o *GetWorkforcemanagementManagementunitWeekShifttradesParams) WithManagementUnitID(managementUnitID string) *GetWorkforcemanagementManagementunitWeekShifttradesParams {
	o.SetManagementUnitID(managementUnitID)
	return o
}

// SetManagementUnitID adds the managementUnitId to the get workforcemanagement managementunit week shifttrades params
func (o *GetWorkforcemanagementManagementunitWeekShifttradesParams) SetManagementUnitID(managementUnitID string) {
	o.ManagementUnitID = managementUnitID
}

// WithWeekDateID adds the weekDateID to the get workforcemanagement managementunit week shifttrades params
func (o *GetWorkforcemanagementManagementunitWeekShifttradesParams) WithWeekDateID(weekDateID strfmt.Date) *GetWorkforcemanagementManagementunitWeekShifttradesParams {
	o.SetWeekDateID(weekDateID)
	return o
}

// SetWeekDateID adds the weekDateId to the get workforcemanagement managementunit week shifttrades params
func (o *GetWorkforcemanagementManagementunitWeekShifttradesParams) SetWeekDateID(weekDateID strfmt.Date) {
	o.WeekDateID = weekDateID
}

// WriteToRequest writes these params to a swagger request
func (o *GetWorkforcemanagementManagementunitWeekShifttradesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.EvaluateMatches != nil {

		// query param evaluateMatches
		var qrEvaluateMatches bool
		if o.EvaluateMatches != nil {
			qrEvaluateMatches = *o.EvaluateMatches
		}
		qEvaluateMatches := swag.FormatBool(qrEvaluateMatches)
		if qEvaluateMatches != "" {
			if err := r.SetQueryParam("evaluateMatches", qEvaluateMatches); err != nil {
				return err
			}
		}

	}

	// path param managementUnitId
	if err := r.SetPathParam("managementUnitId", o.ManagementUnitID); err != nil {
		return err
	}

	// path param weekDateId
	if err := r.SetPathParam("weekDateId", o.WeekDateID.String()); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
