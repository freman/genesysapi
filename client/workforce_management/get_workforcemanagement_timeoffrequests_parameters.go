// Code generated by go-swagger; DO NOT EDIT.

package workforce_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetWorkforcemanagementTimeoffrequestsParams creates a new GetWorkforcemanagementTimeoffrequestsParams object
// with the default values initialized.
func NewGetWorkforcemanagementTimeoffrequestsParams() *GetWorkforcemanagementTimeoffrequestsParams {
	var (
		recentlyReviewedDefault = bool(false)
	)
	return &GetWorkforcemanagementTimeoffrequestsParams{
		RecentlyReviewed: &recentlyReviewedDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewGetWorkforcemanagementTimeoffrequestsParamsWithTimeout creates a new GetWorkforcemanagementTimeoffrequestsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetWorkforcemanagementTimeoffrequestsParamsWithTimeout(timeout time.Duration) *GetWorkforcemanagementTimeoffrequestsParams {
	var (
		recentlyReviewedDefault = bool(false)
	)
	return &GetWorkforcemanagementTimeoffrequestsParams{
		RecentlyReviewed: &recentlyReviewedDefault,

		timeout: timeout,
	}
}

// NewGetWorkforcemanagementTimeoffrequestsParamsWithContext creates a new GetWorkforcemanagementTimeoffrequestsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetWorkforcemanagementTimeoffrequestsParamsWithContext(ctx context.Context) *GetWorkforcemanagementTimeoffrequestsParams {
	var (
		recentlyReviewedDefault = bool(false)
	)
	return &GetWorkforcemanagementTimeoffrequestsParams{
		RecentlyReviewed: &recentlyReviewedDefault,

		Context: ctx,
	}
}

// NewGetWorkforcemanagementTimeoffrequestsParamsWithHTTPClient creates a new GetWorkforcemanagementTimeoffrequestsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetWorkforcemanagementTimeoffrequestsParamsWithHTTPClient(client *http.Client) *GetWorkforcemanagementTimeoffrequestsParams {
	var (
		recentlyReviewedDefault = bool(false)
	)
	return &GetWorkforcemanagementTimeoffrequestsParams{
		RecentlyReviewed: &recentlyReviewedDefault,
		HTTPClient:       client,
	}
}

/*GetWorkforcemanagementTimeoffrequestsParams contains all the parameters to send to the API endpoint
for the get workforcemanagement timeoffrequests operation typically these are written to a http.Request
*/
type GetWorkforcemanagementTimeoffrequestsParams struct {

	/*RecentlyReviewed
	  Limit results to requests that have been reviewed within the preceding 30 days

	*/
	RecentlyReviewed *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get workforcemanagement timeoffrequests params
func (o *GetWorkforcemanagementTimeoffrequestsParams) WithTimeout(timeout time.Duration) *GetWorkforcemanagementTimeoffrequestsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get workforcemanagement timeoffrequests params
func (o *GetWorkforcemanagementTimeoffrequestsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get workforcemanagement timeoffrequests params
func (o *GetWorkforcemanagementTimeoffrequestsParams) WithContext(ctx context.Context) *GetWorkforcemanagementTimeoffrequestsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get workforcemanagement timeoffrequests params
func (o *GetWorkforcemanagementTimeoffrequestsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get workforcemanagement timeoffrequests params
func (o *GetWorkforcemanagementTimeoffrequestsParams) WithHTTPClient(client *http.Client) *GetWorkforcemanagementTimeoffrequestsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get workforcemanagement timeoffrequests params
func (o *GetWorkforcemanagementTimeoffrequestsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithRecentlyReviewed adds the recentlyReviewed to the get workforcemanagement timeoffrequests params
func (o *GetWorkforcemanagementTimeoffrequestsParams) WithRecentlyReviewed(recentlyReviewed *bool) *GetWorkforcemanagementTimeoffrequestsParams {
	o.SetRecentlyReviewed(recentlyReviewed)
	return o
}

// SetRecentlyReviewed adds the recentlyReviewed to the get workforcemanagement timeoffrequests params
func (o *GetWorkforcemanagementTimeoffrequestsParams) SetRecentlyReviewed(recentlyReviewed *bool) {
	o.RecentlyReviewed = recentlyReviewed
}

// WriteToRequest writes these params to a swagger request
func (o *GetWorkforcemanagementTimeoffrequestsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.RecentlyReviewed != nil {

		// query param recentlyReviewed
		var qrRecentlyReviewed bool
		if o.RecentlyReviewed != nil {
			qrRecentlyReviewed = *o.RecentlyReviewed
		}
		qRecentlyReviewed := swag.FormatBool(qrRecentlyReviewed)
		if qRecentlyReviewed != "" {
			if err := r.SetQueryParam("recentlyReviewed", qRecentlyReviewed); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
