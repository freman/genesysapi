// Code generated by go-swagger; DO NOT EDIT.

package workforce_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PatchWorkforcemanagementBusinessunitActivitycodeReader is a Reader for the PatchWorkforcemanagementBusinessunitActivitycode structure.
type PatchWorkforcemanagementBusinessunitActivitycodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchWorkforcemanagementBusinessunitActivitycodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchWorkforcemanagementBusinessunitActivitycodeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchWorkforcemanagementBusinessunitActivitycodeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPatchWorkforcemanagementBusinessunitActivitycodeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchWorkforcemanagementBusinessunitActivitycodeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchWorkforcemanagementBusinessunitActivitycodeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPatchWorkforcemanagementBusinessunitActivitycodeRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPatchWorkforcemanagementBusinessunitActivitycodeConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPatchWorkforcemanagementBusinessunitActivitycodeRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPatchWorkforcemanagementBusinessunitActivitycodeUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPatchWorkforcemanagementBusinessunitActivitycodeTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchWorkforcemanagementBusinessunitActivitycodeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPatchWorkforcemanagementBusinessunitActivitycodeServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPatchWorkforcemanagementBusinessunitActivitycodeGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchWorkforcemanagementBusinessunitActivitycodeOK creates a PatchWorkforcemanagementBusinessunitActivitycodeOK with default headers values
func NewPatchWorkforcemanagementBusinessunitActivitycodeOK() *PatchWorkforcemanagementBusinessunitActivitycodeOK {
	return &PatchWorkforcemanagementBusinessunitActivitycodeOK{}
}

/*
PatchWorkforcemanagementBusinessunitActivitycodeOK describes a response with status code 200, with default header values.

successful operation
*/
type PatchWorkforcemanagementBusinessunitActivitycodeOK struct {
	Payload *models.BusinessUnitActivityCode
}

// IsSuccess returns true when this patch workforcemanagement businessunit activitycode o k response has a 2xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this patch workforcemanagement businessunit activitycode o k response has a 3xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement businessunit activitycode o k response has a 4xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch workforcemanagement businessunit activitycode o k response has a 5xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeOK) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement businessunit activitycode o k response a status code equal to that given
func (o *PatchWorkforcemanagementBusinessunitActivitycodeOK) IsCode(code int) bool {
	return code == 200
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeOK) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/activitycodes/{activityCodeId}][%d] patchWorkforcemanagementBusinessunitActivitycodeOK  %+v", 200, o.Payload)
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeOK) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/activitycodes/{activityCodeId}][%d] patchWorkforcemanagementBusinessunitActivitycodeOK  %+v", 200, o.Payload)
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeOK) GetPayload() *models.BusinessUnitActivityCode {
	return o.Payload
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BusinessUnitActivityCode)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementBusinessunitActivitycodeBadRequest creates a PatchWorkforcemanagementBusinessunitActivitycodeBadRequest with default headers values
func NewPatchWorkforcemanagementBusinessunitActivitycodeBadRequest() *PatchWorkforcemanagementBusinessunitActivitycodeBadRequest {
	return &PatchWorkforcemanagementBusinessunitActivitycodeBadRequest{}
}

/*
PatchWorkforcemanagementBusinessunitActivitycodeBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PatchWorkforcemanagementBusinessunitActivitycodeBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement businessunit activitycode bad request response has a 2xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement businessunit activitycode bad request response has a 3xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement businessunit activitycode bad request response has a 4xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement businessunit activitycode bad request response has a 5xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement businessunit activitycode bad request response a status code equal to that given
func (o *PatchWorkforcemanagementBusinessunitActivitycodeBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/activitycodes/{activityCodeId}][%d] patchWorkforcemanagementBusinessunitActivitycodeBadRequest  %+v", 400, o.Payload)
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeBadRequest) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/activitycodes/{activityCodeId}][%d] patchWorkforcemanagementBusinessunitActivitycodeBadRequest  %+v", 400, o.Payload)
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementBusinessunitActivitycodeUnauthorized creates a PatchWorkforcemanagementBusinessunitActivitycodeUnauthorized with default headers values
func NewPatchWorkforcemanagementBusinessunitActivitycodeUnauthorized() *PatchWorkforcemanagementBusinessunitActivitycodeUnauthorized {
	return &PatchWorkforcemanagementBusinessunitActivitycodeUnauthorized{}
}

/*
PatchWorkforcemanagementBusinessunitActivitycodeUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PatchWorkforcemanagementBusinessunitActivitycodeUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement businessunit activitycode unauthorized response has a 2xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement businessunit activitycode unauthorized response has a 3xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement businessunit activitycode unauthorized response has a 4xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement businessunit activitycode unauthorized response has a 5xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement businessunit activitycode unauthorized response a status code equal to that given
func (o *PatchWorkforcemanagementBusinessunitActivitycodeUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/activitycodes/{activityCodeId}][%d] patchWorkforcemanagementBusinessunitActivitycodeUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeUnauthorized) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/activitycodes/{activityCodeId}][%d] patchWorkforcemanagementBusinessunitActivitycodeUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementBusinessunitActivitycodeForbidden creates a PatchWorkforcemanagementBusinessunitActivitycodeForbidden with default headers values
func NewPatchWorkforcemanagementBusinessunitActivitycodeForbidden() *PatchWorkforcemanagementBusinessunitActivitycodeForbidden {
	return &PatchWorkforcemanagementBusinessunitActivitycodeForbidden{}
}

/*
PatchWorkforcemanagementBusinessunitActivitycodeForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PatchWorkforcemanagementBusinessunitActivitycodeForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement businessunit activitycode forbidden response has a 2xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement businessunit activitycode forbidden response has a 3xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement businessunit activitycode forbidden response has a 4xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement businessunit activitycode forbidden response has a 5xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement businessunit activitycode forbidden response a status code equal to that given
func (o *PatchWorkforcemanagementBusinessunitActivitycodeForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/activitycodes/{activityCodeId}][%d] patchWorkforcemanagementBusinessunitActivitycodeForbidden  %+v", 403, o.Payload)
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeForbidden) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/activitycodes/{activityCodeId}][%d] patchWorkforcemanagementBusinessunitActivitycodeForbidden  %+v", 403, o.Payload)
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementBusinessunitActivitycodeNotFound creates a PatchWorkforcemanagementBusinessunitActivitycodeNotFound with default headers values
func NewPatchWorkforcemanagementBusinessunitActivitycodeNotFound() *PatchWorkforcemanagementBusinessunitActivitycodeNotFound {
	return &PatchWorkforcemanagementBusinessunitActivitycodeNotFound{}
}

/*
PatchWorkforcemanagementBusinessunitActivitycodeNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PatchWorkforcemanagementBusinessunitActivitycodeNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement businessunit activitycode not found response has a 2xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement businessunit activitycode not found response has a 3xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement businessunit activitycode not found response has a 4xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement businessunit activitycode not found response has a 5xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement businessunit activitycode not found response a status code equal to that given
func (o *PatchWorkforcemanagementBusinessunitActivitycodeNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/activitycodes/{activityCodeId}][%d] patchWorkforcemanagementBusinessunitActivitycodeNotFound  %+v", 404, o.Payload)
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeNotFound) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/activitycodes/{activityCodeId}][%d] patchWorkforcemanagementBusinessunitActivitycodeNotFound  %+v", 404, o.Payload)
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementBusinessunitActivitycodeRequestTimeout creates a PatchWorkforcemanagementBusinessunitActivitycodeRequestTimeout with default headers values
func NewPatchWorkforcemanagementBusinessunitActivitycodeRequestTimeout() *PatchWorkforcemanagementBusinessunitActivitycodeRequestTimeout {
	return &PatchWorkforcemanagementBusinessunitActivitycodeRequestTimeout{}
}

/*
PatchWorkforcemanagementBusinessunitActivitycodeRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PatchWorkforcemanagementBusinessunitActivitycodeRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement businessunit activitycode request timeout response has a 2xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement businessunit activitycode request timeout response has a 3xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement businessunit activitycode request timeout response has a 4xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement businessunit activitycode request timeout response has a 5xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement businessunit activitycode request timeout response a status code equal to that given
func (o *PatchWorkforcemanagementBusinessunitActivitycodeRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeRequestTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/activitycodes/{activityCodeId}][%d] patchWorkforcemanagementBusinessunitActivitycodeRequestTimeout  %+v", 408, o.Payload)
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeRequestTimeout) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/activitycodes/{activityCodeId}][%d] patchWorkforcemanagementBusinessunitActivitycodeRequestTimeout  %+v", 408, o.Payload)
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementBusinessunitActivitycodeConflict creates a PatchWorkforcemanagementBusinessunitActivitycodeConflict with default headers values
func NewPatchWorkforcemanagementBusinessunitActivitycodeConflict() *PatchWorkforcemanagementBusinessunitActivitycodeConflict {
	return &PatchWorkforcemanagementBusinessunitActivitycodeConflict{}
}

/*
PatchWorkforcemanagementBusinessunitActivitycodeConflict describes a response with status code 409, with default header values.

Conflict
*/
type PatchWorkforcemanagementBusinessunitActivitycodeConflict struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement businessunit activitycode conflict response has a 2xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement businessunit activitycode conflict response has a 3xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement businessunit activitycode conflict response has a 4xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement businessunit activitycode conflict response has a 5xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement businessunit activitycode conflict response a status code equal to that given
func (o *PatchWorkforcemanagementBusinessunitActivitycodeConflict) IsCode(code int) bool {
	return code == 409
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeConflict) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/activitycodes/{activityCodeId}][%d] patchWorkforcemanagementBusinessunitActivitycodeConflict  %+v", 409, o.Payload)
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeConflict) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/activitycodes/{activityCodeId}][%d] patchWorkforcemanagementBusinessunitActivitycodeConflict  %+v", 409, o.Payload)
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeConflict) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementBusinessunitActivitycodeRequestEntityTooLarge creates a PatchWorkforcemanagementBusinessunitActivitycodeRequestEntityTooLarge with default headers values
func NewPatchWorkforcemanagementBusinessunitActivitycodeRequestEntityTooLarge() *PatchWorkforcemanagementBusinessunitActivitycodeRequestEntityTooLarge {
	return &PatchWorkforcemanagementBusinessunitActivitycodeRequestEntityTooLarge{}
}

/*
PatchWorkforcemanagementBusinessunitActivitycodeRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PatchWorkforcemanagementBusinessunitActivitycodeRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement businessunit activitycode request entity too large response has a 2xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement businessunit activitycode request entity too large response has a 3xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement businessunit activitycode request entity too large response has a 4xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement businessunit activitycode request entity too large response has a 5xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement businessunit activitycode request entity too large response a status code equal to that given
func (o *PatchWorkforcemanagementBusinessunitActivitycodeRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/activitycodes/{activityCodeId}][%d] patchWorkforcemanagementBusinessunitActivitycodeRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/activitycodes/{activityCodeId}][%d] patchWorkforcemanagementBusinessunitActivitycodeRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementBusinessunitActivitycodeUnsupportedMediaType creates a PatchWorkforcemanagementBusinessunitActivitycodeUnsupportedMediaType with default headers values
func NewPatchWorkforcemanagementBusinessunitActivitycodeUnsupportedMediaType() *PatchWorkforcemanagementBusinessunitActivitycodeUnsupportedMediaType {
	return &PatchWorkforcemanagementBusinessunitActivitycodeUnsupportedMediaType{}
}

/*
PatchWorkforcemanagementBusinessunitActivitycodeUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PatchWorkforcemanagementBusinessunitActivitycodeUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement businessunit activitycode unsupported media type response has a 2xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement businessunit activitycode unsupported media type response has a 3xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement businessunit activitycode unsupported media type response has a 4xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement businessunit activitycode unsupported media type response has a 5xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement businessunit activitycode unsupported media type response a status code equal to that given
func (o *PatchWorkforcemanagementBusinessunitActivitycodeUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/activitycodes/{activityCodeId}][%d] patchWorkforcemanagementBusinessunitActivitycodeUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/activitycodes/{activityCodeId}][%d] patchWorkforcemanagementBusinessunitActivitycodeUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementBusinessunitActivitycodeTooManyRequests creates a PatchWorkforcemanagementBusinessunitActivitycodeTooManyRequests with default headers values
func NewPatchWorkforcemanagementBusinessunitActivitycodeTooManyRequests() *PatchWorkforcemanagementBusinessunitActivitycodeTooManyRequests {
	return &PatchWorkforcemanagementBusinessunitActivitycodeTooManyRequests{}
}

/*
PatchWorkforcemanagementBusinessunitActivitycodeTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PatchWorkforcemanagementBusinessunitActivitycodeTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement businessunit activitycode too many requests response has a 2xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement businessunit activitycode too many requests response has a 3xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement businessunit activitycode too many requests response has a 4xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement businessunit activitycode too many requests response has a 5xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement businessunit activitycode too many requests response a status code equal to that given
func (o *PatchWorkforcemanagementBusinessunitActivitycodeTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeTooManyRequests) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/activitycodes/{activityCodeId}][%d] patchWorkforcemanagementBusinessunitActivitycodeTooManyRequests  %+v", 429, o.Payload)
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeTooManyRequests) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/activitycodes/{activityCodeId}][%d] patchWorkforcemanagementBusinessunitActivitycodeTooManyRequests  %+v", 429, o.Payload)
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementBusinessunitActivitycodeInternalServerError creates a PatchWorkforcemanagementBusinessunitActivitycodeInternalServerError with default headers values
func NewPatchWorkforcemanagementBusinessunitActivitycodeInternalServerError() *PatchWorkforcemanagementBusinessunitActivitycodeInternalServerError {
	return &PatchWorkforcemanagementBusinessunitActivitycodeInternalServerError{}
}

/*
PatchWorkforcemanagementBusinessunitActivitycodeInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PatchWorkforcemanagementBusinessunitActivitycodeInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement businessunit activitycode internal server error response has a 2xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement businessunit activitycode internal server error response has a 3xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement businessunit activitycode internal server error response has a 4xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch workforcemanagement businessunit activitycode internal server error response has a 5xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this patch workforcemanagement businessunit activitycode internal server error response a status code equal to that given
func (o *PatchWorkforcemanagementBusinessunitActivitycodeInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/activitycodes/{activityCodeId}][%d] patchWorkforcemanagementBusinessunitActivitycodeInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeInternalServerError) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/activitycodes/{activityCodeId}][%d] patchWorkforcemanagementBusinessunitActivitycodeInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementBusinessunitActivitycodeServiceUnavailable creates a PatchWorkforcemanagementBusinessunitActivitycodeServiceUnavailable with default headers values
func NewPatchWorkforcemanagementBusinessunitActivitycodeServiceUnavailable() *PatchWorkforcemanagementBusinessunitActivitycodeServiceUnavailable {
	return &PatchWorkforcemanagementBusinessunitActivitycodeServiceUnavailable{}
}

/*
PatchWorkforcemanagementBusinessunitActivitycodeServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PatchWorkforcemanagementBusinessunitActivitycodeServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement businessunit activitycode service unavailable response has a 2xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement businessunit activitycode service unavailable response has a 3xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement businessunit activitycode service unavailable response has a 4xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch workforcemanagement businessunit activitycode service unavailable response has a 5xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this patch workforcemanagement businessunit activitycode service unavailable response a status code equal to that given
func (o *PatchWorkforcemanagementBusinessunitActivitycodeServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeServiceUnavailable) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/activitycodes/{activityCodeId}][%d] patchWorkforcemanagementBusinessunitActivitycodeServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeServiceUnavailable) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/activitycodes/{activityCodeId}][%d] patchWorkforcemanagementBusinessunitActivitycodeServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementBusinessunitActivitycodeGatewayTimeout creates a PatchWorkforcemanagementBusinessunitActivitycodeGatewayTimeout with default headers values
func NewPatchWorkforcemanagementBusinessunitActivitycodeGatewayTimeout() *PatchWorkforcemanagementBusinessunitActivitycodeGatewayTimeout {
	return &PatchWorkforcemanagementBusinessunitActivitycodeGatewayTimeout{}
}

/*
PatchWorkforcemanagementBusinessunitActivitycodeGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PatchWorkforcemanagementBusinessunitActivitycodeGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement businessunit activitycode gateway timeout response has a 2xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement businessunit activitycode gateway timeout response has a 3xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement businessunit activitycode gateway timeout response has a 4xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch workforcemanagement businessunit activitycode gateway timeout response has a 5xx status code
func (o *PatchWorkforcemanagementBusinessunitActivitycodeGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this patch workforcemanagement businessunit activitycode gateway timeout response a status code equal to that given
func (o *PatchWorkforcemanagementBusinessunitActivitycodeGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeGatewayTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/activitycodes/{activityCodeId}][%d] patchWorkforcemanagementBusinessunitActivitycodeGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeGatewayTimeout) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/businessunits/{businessUnitId}/activitycodes/{activityCodeId}][%d] patchWorkforcemanagementBusinessunitActivitycodeGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementBusinessunitActivitycodeGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
