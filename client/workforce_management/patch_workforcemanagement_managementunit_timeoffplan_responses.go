// Code generated by go-swagger; DO NOT EDIT.

package workforce_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PatchWorkforcemanagementManagementunitTimeoffplanReader is a Reader for the PatchWorkforcemanagementManagementunitTimeoffplan structure.
type PatchWorkforcemanagementManagementunitTimeoffplanReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchWorkforcemanagementManagementunitTimeoffplanReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchWorkforcemanagementManagementunitTimeoffplanOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchWorkforcemanagementManagementunitTimeoffplanBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPatchWorkforcemanagementManagementunitTimeoffplanUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchWorkforcemanagementManagementunitTimeoffplanForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchWorkforcemanagementManagementunitTimeoffplanNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPatchWorkforcemanagementManagementunitTimeoffplanRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPatchWorkforcemanagementManagementunitTimeoffplanConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPatchWorkforcemanagementManagementunitTimeoffplanRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPatchWorkforcemanagementManagementunitTimeoffplanUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPatchWorkforcemanagementManagementunitTimeoffplanTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchWorkforcemanagementManagementunitTimeoffplanInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPatchWorkforcemanagementManagementunitTimeoffplanServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPatchWorkforcemanagementManagementunitTimeoffplanGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchWorkforcemanagementManagementunitTimeoffplanOK creates a PatchWorkforcemanagementManagementunitTimeoffplanOK with default headers values
func NewPatchWorkforcemanagementManagementunitTimeoffplanOK() *PatchWorkforcemanagementManagementunitTimeoffplanOK {
	return &PatchWorkforcemanagementManagementunitTimeoffplanOK{}
}

/*
PatchWorkforcemanagementManagementunitTimeoffplanOK describes a response with status code 200, with default header values.

successful operation
*/
type PatchWorkforcemanagementManagementunitTimeoffplanOK struct {
	Payload *models.TimeOffPlan
}

// IsSuccess returns true when this patch workforcemanagement managementunit timeoffplan o k response has a 2xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this patch workforcemanagement managementunit timeoffplan o k response has a 3xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement managementunit timeoffplan o k response has a 4xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch workforcemanagement managementunit timeoffplan o k response has a 5xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanOK) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement managementunit timeoffplan o k response a status code equal to that given
func (o *PatchWorkforcemanagementManagementunitTimeoffplanOK) IsCode(code int) bool {
	return code == 200
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanOK) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffplans/{timeOffPlanId}][%d] patchWorkforcemanagementManagementunitTimeoffplanOK  %+v", 200, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanOK) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffplans/{timeOffPlanId}][%d] patchWorkforcemanagementManagementunitTimeoffplanOK  %+v", 200, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanOK) GetPayload() *models.TimeOffPlan {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TimeOffPlan)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitTimeoffplanBadRequest creates a PatchWorkforcemanagementManagementunitTimeoffplanBadRequest with default headers values
func NewPatchWorkforcemanagementManagementunitTimeoffplanBadRequest() *PatchWorkforcemanagementManagementunitTimeoffplanBadRequest {
	return &PatchWorkforcemanagementManagementunitTimeoffplanBadRequest{}
}

/*
PatchWorkforcemanagementManagementunitTimeoffplanBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PatchWorkforcemanagementManagementunitTimeoffplanBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement managementunit timeoffplan bad request response has a 2xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement managementunit timeoffplan bad request response has a 3xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement managementunit timeoffplan bad request response has a 4xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement managementunit timeoffplan bad request response has a 5xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement managementunit timeoffplan bad request response a status code equal to that given
func (o *PatchWorkforcemanagementManagementunitTimeoffplanBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffplans/{timeOffPlanId}][%d] patchWorkforcemanagementManagementunitTimeoffplanBadRequest  %+v", 400, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanBadRequest) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffplans/{timeOffPlanId}][%d] patchWorkforcemanagementManagementunitTimeoffplanBadRequest  %+v", 400, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitTimeoffplanUnauthorized creates a PatchWorkforcemanagementManagementunitTimeoffplanUnauthorized with default headers values
func NewPatchWorkforcemanagementManagementunitTimeoffplanUnauthorized() *PatchWorkforcemanagementManagementunitTimeoffplanUnauthorized {
	return &PatchWorkforcemanagementManagementunitTimeoffplanUnauthorized{}
}

/*
PatchWorkforcemanagementManagementunitTimeoffplanUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PatchWorkforcemanagementManagementunitTimeoffplanUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement managementunit timeoffplan unauthorized response has a 2xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement managementunit timeoffplan unauthorized response has a 3xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement managementunit timeoffplan unauthorized response has a 4xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement managementunit timeoffplan unauthorized response has a 5xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement managementunit timeoffplan unauthorized response a status code equal to that given
func (o *PatchWorkforcemanagementManagementunitTimeoffplanUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffplans/{timeOffPlanId}][%d] patchWorkforcemanagementManagementunitTimeoffplanUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanUnauthorized) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffplans/{timeOffPlanId}][%d] patchWorkforcemanagementManagementunitTimeoffplanUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitTimeoffplanForbidden creates a PatchWorkforcemanagementManagementunitTimeoffplanForbidden with default headers values
func NewPatchWorkforcemanagementManagementunitTimeoffplanForbidden() *PatchWorkforcemanagementManagementunitTimeoffplanForbidden {
	return &PatchWorkforcemanagementManagementunitTimeoffplanForbidden{}
}

/*
PatchWorkforcemanagementManagementunitTimeoffplanForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PatchWorkforcemanagementManagementunitTimeoffplanForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement managementunit timeoffplan forbidden response has a 2xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement managementunit timeoffplan forbidden response has a 3xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement managementunit timeoffplan forbidden response has a 4xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement managementunit timeoffplan forbidden response has a 5xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement managementunit timeoffplan forbidden response a status code equal to that given
func (o *PatchWorkforcemanagementManagementunitTimeoffplanForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffplans/{timeOffPlanId}][%d] patchWorkforcemanagementManagementunitTimeoffplanForbidden  %+v", 403, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanForbidden) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffplans/{timeOffPlanId}][%d] patchWorkforcemanagementManagementunitTimeoffplanForbidden  %+v", 403, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitTimeoffplanNotFound creates a PatchWorkforcemanagementManagementunitTimeoffplanNotFound with default headers values
func NewPatchWorkforcemanagementManagementunitTimeoffplanNotFound() *PatchWorkforcemanagementManagementunitTimeoffplanNotFound {
	return &PatchWorkforcemanagementManagementunitTimeoffplanNotFound{}
}

/*
PatchWorkforcemanagementManagementunitTimeoffplanNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PatchWorkforcemanagementManagementunitTimeoffplanNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement managementunit timeoffplan not found response has a 2xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement managementunit timeoffplan not found response has a 3xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement managementunit timeoffplan not found response has a 4xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement managementunit timeoffplan not found response has a 5xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement managementunit timeoffplan not found response a status code equal to that given
func (o *PatchWorkforcemanagementManagementunitTimeoffplanNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffplans/{timeOffPlanId}][%d] patchWorkforcemanagementManagementunitTimeoffplanNotFound  %+v", 404, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanNotFound) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffplans/{timeOffPlanId}][%d] patchWorkforcemanagementManagementunitTimeoffplanNotFound  %+v", 404, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitTimeoffplanRequestTimeout creates a PatchWorkforcemanagementManagementunitTimeoffplanRequestTimeout with default headers values
func NewPatchWorkforcemanagementManagementunitTimeoffplanRequestTimeout() *PatchWorkforcemanagementManagementunitTimeoffplanRequestTimeout {
	return &PatchWorkforcemanagementManagementunitTimeoffplanRequestTimeout{}
}

/*
PatchWorkforcemanagementManagementunitTimeoffplanRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PatchWorkforcemanagementManagementunitTimeoffplanRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement managementunit timeoffplan request timeout response has a 2xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement managementunit timeoffplan request timeout response has a 3xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement managementunit timeoffplan request timeout response has a 4xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement managementunit timeoffplan request timeout response has a 5xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement managementunit timeoffplan request timeout response a status code equal to that given
func (o *PatchWorkforcemanagementManagementunitTimeoffplanRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanRequestTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffplans/{timeOffPlanId}][%d] patchWorkforcemanagementManagementunitTimeoffplanRequestTimeout  %+v", 408, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanRequestTimeout) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffplans/{timeOffPlanId}][%d] patchWorkforcemanagementManagementunitTimeoffplanRequestTimeout  %+v", 408, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitTimeoffplanConflict creates a PatchWorkforcemanagementManagementunitTimeoffplanConflict with default headers values
func NewPatchWorkforcemanagementManagementunitTimeoffplanConflict() *PatchWorkforcemanagementManagementunitTimeoffplanConflict {
	return &PatchWorkforcemanagementManagementunitTimeoffplanConflict{}
}

/*
PatchWorkforcemanagementManagementunitTimeoffplanConflict describes a response with status code 409, with default header values.

Conflict
*/
type PatchWorkforcemanagementManagementunitTimeoffplanConflict struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement managementunit timeoffplan conflict response has a 2xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement managementunit timeoffplan conflict response has a 3xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement managementunit timeoffplan conflict response has a 4xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement managementunit timeoffplan conflict response has a 5xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement managementunit timeoffplan conflict response a status code equal to that given
func (o *PatchWorkforcemanagementManagementunitTimeoffplanConflict) IsCode(code int) bool {
	return code == 409
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanConflict) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffplans/{timeOffPlanId}][%d] patchWorkforcemanagementManagementunitTimeoffplanConflict  %+v", 409, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanConflict) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffplans/{timeOffPlanId}][%d] patchWorkforcemanagementManagementunitTimeoffplanConflict  %+v", 409, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanConflict) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitTimeoffplanRequestEntityTooLarge creates a PatchWorkforcemanagementManagementunitTimeoffplanRequestEntityTooLarge with default headers values
func NewPatchWorkforcemanagementManagementunitTimeoffplanRequestEntityTooLarge() *PatchWorkforcemanagementManagementunitTimeoffplanRequestEntityTooLarge {
	return &PatchWorkforcemanagementManagementunitTimeoffplanRequestEntityTooLarge{}
}

/*
PatchWorkforcemanagementManagementunitTimeoffplanRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PatchWorkforcemanagementManagementunitTimeoffplanRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement managementunit timeoffplan request entity too large response has a 2xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement managementunit timeoffplan request entity too large response has a 3xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement managementunit timeoffplan request entity too large response has a 4xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement managementunit timeoffplan request entity too large response has a 5xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement managementunit timeoffplan request entity too large response a status code equal to that given
func (o *PatchWorkforcemanagementManagementunitTimeoffplanRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffplans/{timeOffPlanId}][%d] patchWorkforcemanagementManagementunitTimeoffplanRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffplans/{timeOffPlanId}][%d] patchWorkforcemanagementManagementunitTimeoffplanRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitTimeoffplanUnsupportedMediaType creates a PatchWorkforcemanagementManagementunitTimeoffplanUnsupportedMediaType with default headers values
func NewPatchWorkforcemanagementManagementunitTimeoffplanUnsupportedMediaType() *PatchWorkforcemanagementManagementunitTimeoffplanUnsupportedMediaType {
	return &PatchWorkforcemanagementManagementunitTimeoffplanUnsupportedMediaType{}
}

/*
PatchWorkforcemanagementManagementunitTimeoffplanUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PatchWorkforcemanagementManagementunitTimeoffplanUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement managementunit timeoffplan unsupported media type response has a 2xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement managementunit timeoffplan unsupported media type response has a 3xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement managementunit timeoffplan unsupported media type response has a 4xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement managementunit timeoffplan unsupported media type response has a 5xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement managementunit timeoffplan unsupported media type response a status code equal to that given
func (o *PatchWorkforcemanagementManagementunitTimeoffplanUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffplans/{timeOffPlanId}][%d] patchWorkforcemanagementManagementunitTimeoffplanUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffplans/{timeOffPlanId}][%d] patchWorkforcemanagementManagementunitTimeoffplanUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitTimeoffplanTooManyRequests creates a PatchWorkforcemanagementManagementunitTimeoffplanTooManyRequests with default headers values
func NewPatchWorkforcemanagementManagementunitTimeoffplanTooManyRequests() *PatchWorkforcemanagementManagementunitTimeoffplanTooManyRequests {
	return &PatchWorkforcemanagementManagementunitTimeoffplanTooManyRequests{}
}

/*
PatchWorkforcemanagementManagementunitTimeoffplanTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PatchWorkforcemanagementManagementunitTimeoffplanTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement managementunit timeoffplan too many requests response has a 2xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement managementunit timeoffplan too many requests response has a 3xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement managementunit timeoffplan too many requests response has a 4xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement managementunit timeoffplan too many requests response has a 5xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement managementunit timeoffplan too many requests response a status code equal to that given
func (o *PatchWorkforcemanagementManagementunitTimeoffplanTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanTooManyRequests) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffplans/{timeOffPlanId}][%d] patchWorkforcemanagementManagementunitTimeoffplanTooManyRequests  %+v", 429, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanTooManyRequests) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffplans/{timeOffPlanId}][%d] patchWorkforcemanagementManagementunitTimeoffplanTooManyRequests  %+v", 429, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitTimeoffplanInternalServerError creates a PatchWorkforcemanagementManagementunitTimeoffplanInternalServerError with default headers values
func NewPatchWorkforcemanagementManagementunitTimeoffplanInternalServerError() *PatchWorkforcemanagementManagementunitTimeoffplanInternalServerError {
	return &PatchWorkforcemanagementManagementunitTimeoffplanInternalServerError{}
}

/*
PatchWorkforcemanagementManagementunitTimeoffplanInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PatchWorkforcemanagementManagementunitTimeoffplanInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement managementunit timeoffplan internal server error response has a 2xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement managementunit timeoffplan internal server error response has a 3xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement managementunit timeoffplan internal server error response has a 4xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch workforcemanagement managementunit timeoffplan internal server error response has a 5xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this patch workforcemanagement managementunit timeoffplan internal server error response a status code equal to that given
func (o *PatchWorkforcemanagementManagementunitTimeoffplanInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffplans/{timeOffPlanId}][%d] patchWorkforcemanagementManagementunitTimeoffplanInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanInternalServerError) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffplans/{timeOffPlanId}][%d] patchWorkforcemanagementManagementunitTimeoffplanInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitTimeoffplanServiceUnavailable creates a PatchWorkforcemanagementManagementunitTimeoffplanServiceUnavailable with default headers values
func NewPatchWorkforcemanagementManagementunitTimeoffplanServiceUnavailable() *PatchWorkforcemanagementManagementunitTimeoffplanServiceUnavailable {
	return &PatchWorkforcemanagementManagementunitTimeoffplanServiceUnavailable{}
}

/*
PatchWorkforcemanagementManagementunitTimeoffplanServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PatchWorkforcemanagementManagementunitTimeoffplanServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement managementunit timeoffplan service unavailable response has a 2xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement managementunit timeoffplan service unavailable response has a 3xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement managementunit timeoffplan service unavailable response has a 4xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch workforcemanagement managementunit timeoffplan service unavailable response has a 5xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this patch workforcemanagement managementunit timeoffplan service unavailable response a status code equal to that given
func (o *PatchWorkforcemanagementManagementunitTimeoffplanServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanServiceUnavailable) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffplans/{timeOffPlanId}][%d] patchWorkforcemanagementManagementunitTimeoffplanServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanServiceUnavailable) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffplans/{timeOffPlanId}][%d] patchWorkforcemanagementManagementunitTimeoffplanServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitTimeoffplanGatewayTimeout creates a PatchWorkforcemanagementManagementunitTimeoffplanGatewayTimeout with default headers values
func NewPatchWorkforcemanagementManagementunitTimeoffplanGatewayTimeout() *PatchWorkforcemanagementManagementunitTimeoffplanGatewayTimeout {
	return &PatchWorkforcemanagementManagementunitTimeoffplanGatewayTimeout{}
}

/*
PatchWorkforcemanagementManagementunitTimeoffplanGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PatchWorkforcemanagementManagementunitTimeoffplanGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement managementunit timeoffplan gateway timeout response has a 2xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement managementunit timeoffplan gateway timeout response has a 3xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement managementunit timeoffplan gateway timeout response has a 4xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch workforcemanagement managementunit timeoffplan gateway timeout response has a 5xx status code
func (o *PatchWorkforcemanagementManagementunitTimeoffplanGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this patch workforcemanagement managementunit timeoffplan gateway timeout response a status code equal to that given
func (o *PatchWorkforcemanagementManagementunitTimeoffplanGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanGatewayTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffplans/{timeOffPlanId}][%d] patchWorkforcemanagementManagementunitTimeoffplanGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanGatewayTimeout) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffplans/{timeOffPlanId}][%d] patchWorkforcemanagementManagementunitTimeoffplanGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitTimeoffplanGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
