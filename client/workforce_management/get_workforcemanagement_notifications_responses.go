// Code generated by go-swagger; DO NOT EDIT.

package workforce_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetWorkforcemanagementNotificationsReader is a Reader for the GetWorkforcemanagementNotifications structure.
type GetWorkforcemanagementNotificationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetWorkforcemanagementNotificationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetWorkforcemanagementNotificationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetWorkforcemanagementNotificationsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetWorkforcemanagementNotificationsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetWorkforcemanagementNotificationsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetWorkforcemanagementNotificationsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetWorkforcemanagementNotificationsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetWorkforcemanagementNotificationsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetWorkforcemanagementNotificationsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetWorkforcemanagementNotificationsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetWorkforcemanagementNotificationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetWorkforcemanagementNotificationsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetWorkforcemanagementNotificationsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetWorkforcemanagementNotificationsOK creates a GetWorkforcemanagementNotificationsOK with default headers values
func NewGetWorkforcemanagementNotificationsOK() *GetWorkforcemanagementNotificationsOK {
	return &GetWorkforcemanagementNotificationsOK{}
}

/*
GetWorkforcemanagementNotificationsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetWorkforcemanagementNotificationsOK struct {
	Payload *models.NotificationsResponse
}

// IsSuccess returns true when this get workforcemanagement notifications o k response has a 2xx status code
func (o *GetWorkforcemanagementNotificationsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get workforcemanagement notifications o k response has a 3xx status code
func (o *GetWorkforcemanagementNotificationsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workforcemanagement notifications o k response has a 4xx status code
func (o *GetWorkforcemanagementNotificationsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get workforcemanagement notifications o k response has a 5xx status code
func (o *GetWorkforcemanagementNotificationsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get workforcemanagement notifications o k response a status code equal to that given
func (o *GetWorkforcemanagementNotificationsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetWorkforcemanagementNotificationsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/workforcemanagement/notifications][%d] getWorkforcemanagementNotificationsOK  %+v", 200, o.Payload)
}

func (o *GetWorkforcemanagementNotificationsOK) String() string {
	return fmt.Sprintf("[GET /api/v2/workforcemanagement/notifications][%d] getWorkforcemanagementNotificationsOK  %+v", 200, o.Payload)
}

func (o *GetWorkforcemanagementNotificationsOK) GetPayload() *models.NotificationsResponse {
	return o.Payload
}

func (o *GetWorkforcemanagementNotificationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotificationsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkforcemanagementNotificationsBadRequest creates a GetWorkforcemanagementNotificationsBadRequest with default headers values
func NewGetWorkforcemanagementNotificationsBadRequest() *GetWorkforcemanagementNotificationsBadRequest {
	return &GetWorkforcemanagementNotificationsBadRequest{}
}

/*
GetWorkforcemanagementNotificationsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetWorkforcemanagementNotificationsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get workforcemanagement notifications bad request response has a 2xx status code
func (o *GetWorkforcemanagementNotificationsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workforcemanagement notifications bad request response has a 3xx status code
func (o *GetWorkforcemanagementNotificationsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workforcemanagement notifications bad request response has a 4xx status code
func (o *GetWorkforcemanagementNotificationsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workforcemanagement notifications bad request response has a 5xx status code
func (o *GetWorkforcemanagementNotificationsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get workforcemanagement notifications bad request response a status code equal to that given
func (o *GetWorkforcemanagementNotificationsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetWorkforcemanagementNotificationsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/workforcemanagement/notifications][%d] getWorkforcemanagementNotificationsBadRequest  %+v", 400, o.Payload)
}

func (o *GetWorkforcemanagementNotificationsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/workforcemanagement/notifications][%d] getWorkforcemanagementNotificationsBadRequest  %+v", 400, o.Payload)
}

func (o *GetWorkforcemanagementNotificationsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWorkforcemanagementNotificationsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkforcemanagementNotificationsUnauthorized creates a GetWorkforcemanagementNotificationsUnauthorized with default headers values
func NewGetWorkforcemanagementNotificationsUnauthorized() *GetWorkforcemanagementNotificationsUnauthorized {
	return &GetWorkforcemanagementNotificationsUnauthorized{}
}

/*
GetWorkforcemanagementNotificationsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetWorkforcemanagementNotificationsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get workforcemanagement notifications unauthorized response has a 2xx status code
func (o *GetWorkforcemanagementNotificationsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workforcemanagement notifications unauthorized response has a 3xx status code
func (o *GetWorkforcemanagementNotificationsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workforcemanagement notifications unauthorized response has a 4xx status code
func (o *GetWorkforcemanagementNotificationsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workforcemanagement notifications unauthorized response has a 5xx status code
func (o *GetWorkforcemanagementNotificationsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get workforcemanagement notifications unauthorized response a status code equal to that given
func (o *GetWorkforcemanagementNotificationsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetWorkforcemanagementNotificationsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/workforcemanagement/notifications][%d] getWorkforcemanagementNotificationsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetWorkforcemanagementNotificationsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/workforcemanagement/notifications][%d] getWorkforcemanagementNotificationsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetWorkforcemanagementNotificationsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWorkforcemanagementNotificationsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkforcemanagementNotificationsForbidden creates a GetWorkforcemanagementNotificationsForbidden with default headers values
func NewGetWorkforcemanagementNotificationsForbidden() *GetWorkforcemanagementNotificationsForbidden {
	return &GetWorkforcemanagementNotificationsForbidden{}
}

/*
GetWorkforcemanagementNotificationsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetWorkforcemanagementNotificationsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get workforcemanagement notifications forbidden response has a 2xx status code
func (o *GetWorkforcemanagementNotificationsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workforcemanagement notifications forbidden response has a 3xx status code
func (o *GetWorkforcemanagementNotificationsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workforcemanagement notifications forbidden response has a 4xx status code
func (o *GetWorkforcemanagementNotificationsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workforcemanagement notifications forbidden response has a 5xx status code
func (o *GetWorkforcemanagementNotificationsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get workforcemanagement notifications forbidden response a status code equal to that given
func (o *GetWorkforcemanagementNotificationsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetWorkforcemanagementNotificationsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/workforcemanagement/notifications][%d] getWorkforcemanagementNotificationsForbidden  %+v", 403, o.Payload)
}

func (o *GetWorkforcemanagementNotificationsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/workforcemanagement/notifications][%d] getWorkforcemanagementNotificationsForbidden  %+v", 403, o.Payload)
}

func (o *GetWorkforcemanagementNotificationsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWorkforcemanagementNotificationsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkforcemanagementNotificationsNotFound creates a GetWorkforcemanagementNotificationsNotFound with default headers values
func NewGetWorkforcemanagementNotificationsNotFound() *GetWorkforcemanagementNotificationsNotFound {
	return &GetWorkforcemanagementNotificationsNotFound{}
}

/*
GetWorkforcemanagementNotificationsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetWorkforcemanagementNotificationsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get workforcemanagement notifications not found response has a 2xx status code
func (o *GetWorkforcemanagementNotificationsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workforcemanagement notifications not found response has a 3xx status code
func (o *GetWorkforcemanagementNotificationsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workforcemanagement notifications not found response has a 4xx status code
func (o *GetWorkforcemanagementNotificationsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workforcemanagement notifications not found response has a 5xx status code
func (o *GetWorkforcemanagementNotificationsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get workforcemanagement notifications not found response a status code equal to that given
func (o *GetWorkforcemanagementNotificationsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetWorkforcemanagementNotificationsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/workforcemanagement/notifications][%d] getWorkforcemanagementNotificationsNotFound  %+v", 404, o.Payload)
}

func (o *GetWorkforcemanagementNotificationsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/workforcemanagement/notifications][%d] getWorkforcemanagementNotificationsNotFound  %+v", 404, o.Payload)
}

func (o *GetWorkforcemanagementNotificationsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWorkforcemanagementNotificationsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkforcemanagementNotificationsRequestTimeout creates a GetWorkforcemanagementNotificationsRequestTimeout with default headers values
func NewGetWorkforcemanagementNotificationsRequestTimeout() *GetWorkforcemanagementNotificationsRequestTimeout {
	return &GetWorkforcemanagementNotificationsRequestTimeout{}
}

/*
GetWorkforcemanagementNotificationsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetWorkforcemanagementNotificationsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get workforcemanagement notifications request timeout response has a 2xx status code
func (o *GetWorkforcemanagementNotificationsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workforcemanagement notifications request timeout response has a 3xx status code
func (o *GetWorkforcemanagementNotificationsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workforcemanagement notifications request timeout response has a 4xx status code
func (o *GetWorkforcemanagementNotificationsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workforcemanagement notifications request timeout response has a 5xx status code
func (o *GetWorkforcemanagementNotificationsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get workforcemanagement notifications request timeout response a status code equal to that given
func (o *GetWorkforcemanagementNotificationsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetWorkforcemanagementNotificationsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/workforcemanagement/notifications][%d] getWorkforcemanagementNotificationsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetWorkforcemanagementNotificationsRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/workforcemanagement/notifications][%d] getWorkforcemanagementNotificationsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetWorkforcemanagementNotificationsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWorkforcemanagementNotificationsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkforcemanagementNotificationsRequestEntityTooLarge creates a GetWorkforcemanagementNotificationsRequestEntityTooLarge with default headers values
func NewGetWorkforcemanagementNotificationsRequestEntityTooLarge() *GetWorkforcemanagementNotificationsRequestEntityTooLarge {
	return &GetWorkforcemanagementNotificationsRequestEntityTooLarge{}
}

/*
GetWorkforcemanagementNotificationsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetWorkforcemanagementNotificationsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get workforcemanagement notifications request entity too large response has a 2xx status code
func (o *GetWorkforcemanagementNotificationsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workforcemanagement notifications request entity too large response has a 3xx status code
func (o *GetWorkforcemanagementNotificationsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workforcemanagement notifications request entity too large response has a 4xx status code
func (o *GetWorkforcemanagementNotificationsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workforcemanagement notifications request entity too large response has a 5xx status code
func (o *GetWorkforcemanagementNotificationsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get workforcemanagement notifications request entity too large response a status code equal to that given
func (o *GetWorkforcemanagementNotificationsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetWorkforcemanagementNotificationsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/workforcemanagement/notifications][%d] getWorkforcemanagementNotificationsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetWorkforcemanagementNotificationsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/workforcemanagement/notifications][%d] getWorkforcemanagementNotificationsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetWorkforcemanagementNotificationsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWorkforcemanagementNotificationsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkforcemanagementNotificationsUnsupportedMediaType creates a GetWorkforcemanagementNotificationsUnsupportedMediaType with default headers values
func NewGetWorkforcemanagementNotificationsUnsupportedMediaType() *GetWorkforcemanagementNotificationsUnsupportedMediaType {
	return &GetWorkforcemanagementNotificationsUnsupportedMediaType{}
}

/*
GetWorkforcemanagementNotificationsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetWorkforcemanagementNotificationsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get workforcemanagement notifications unsupported media type response has a 2xx status code
func (o *GetWorkforcemanagementNotificationsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workforcemanagement notifications unsupported media type response has a 3xx status code
func (o *GetWorkforcemanagementNotificationsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workforcemanagement notifications unsupported media type response has a 4xx status code
func (o *GetWorkforcemanagementNotificationsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workforcemanagement notifications unsupported media type response has a 5xx status code
func (o *GetWorkforcemanagementNotificationsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get workforcemanagement notifications unsupported media type response a status code equal to that given
func (o *GetWorkforcemanagementNotificationsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetWorkforcemanagementNotificationsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/workforcemanagement/notifications][%d] getWorkforcemanagementNotificationsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetWorkforcemanagementNotificationsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/workforcemanagement/notifications][%d] getWorkforcemanagementNotificationsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetWorkforcemanagementNotificationsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWorkforcemanagementNotificationsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkforcemanagementNotificationsTooManyRequests creates a GetWorkforcemanagementNotificationsTooManyRequests with default headers values
func NewGetWorkforcemanagementNotificationsTooManyRequests() *GetWorkforcemanagementNotificationsTooManyRequests {
	return &GetWorkforcemanagementNotificationsTooManyRequests{}
}

/*
GetWorkforcemanagementNotificationsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetWorkforcemanagementNotificationsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get workforcemanagement notifications too many requests response has a 2xx status code
func (o *GetWorkforcemanagementNotificationsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workforcemanagement notifications too many requests response has a 3xx status code
func (o *GetWorkforcemanagementNotificationsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workforcemanagement notifications too many requests response has a 4xx status code
func (o *GetWorkforcemanagementNotificationsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workforcemanagement notifications too many requests response has a 5xx status code
func (o *GetWorkforcemanagementNotificationsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get workforcemanagement notifications too many requests response a status code equal to that given
func (o *GetWorkforcemanagementNotificationsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetWorkforcemanagementNotificationsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/workforcemanagement/notifications][%d] getWorkforcemanagementNotificationsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetWorkforcemanagementNotificationsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/workforcemanagement/notifications][%d] getWorkforcemanagementNotificationsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetWorkforcemanagementNotificationsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWorkforcemanagementNotificationsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkforcemanagementNotificationsInternalServerError creates a GetWorkforcemanagementNotificationsInternalServerError with default headers values
func NewGetWorkforcemanagementNotificationsInternalServerError() *GetWorkforcemanagementNotificationsInternalServerError {
	return &GetWorkforcemanagementNotificationsInternalServerError{}
}

/*
GetWorkforcemanagementNotificationsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetWorkforcemanagementNotificationsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get workforcemanagement notifications internal server error response has a 2xx status code
func (o *GetWorkforcemanagementNotificationsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workforcemanagement notifications internal server error response has a 3xx status code
func (o *GetWorkforcemanagementNotificationsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workforcemanagement notifications internal server error response has a 4xx status code
func (o *GetWorkforcemanagementNotificationsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get workforcemanagement notifications internal server error response has a 5xx status code
func (o *GetWorkforcemanagementNotificationsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get workforcemanagement notifications internal server error response a status code equal to that given
func (o *GetWorkforcemanagementNotificationsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetWorkforcemanagementNotificationsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/workforcemanagement/notifications][%d] getWorkforcemanagementNotificationsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetWorkforcemanagementNotificationsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/workforcemanagement/notifications][%d] getWorkforcemanagementNotificationsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetWorkforcemanagementNotificationsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWorkforcemanagementNotificationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkforcemanagementNotificationsServiceUnavailable creates a GetWorkforcemanagementNotificationsServiceUnavailable with default headers values
func NewGetWorkforcemanagementNotificationsServiceUnavailable() *GetWorkforcemanagementNotificationsServiceUnavailable {
	return &GetWorkforcemanagementNotificationsServiceUnavailable{}
}

/*
GetWorkforcemanagementNotificationsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetWorkforcemanagementNotificationsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get workforcemanagement notifications service unavailable response has a 2xx status code
func (o *GetWorkforcemanagementNotificationsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workforcemanagement notifications service unavailable response has a 3xx status code
func (o *GetWorkforcemanagementNotificationsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workforcemanagement notifications service unavailable response has a 4xx status code
func (o *GetWorkforcemanagementNotificationsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get workforcemanagement notifications service unavailable response has a 5xx status code
func (o *GetWorkforcemanagementNotificationsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get workforcemanagement notifications service unavailable response a status code equal to that given
func (o *GetWorkforcemanagementNotificationsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetWorkforcemanagementNotificationsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/workforcemanagement/notifications][%d] getWorkforcemanagementNotificationsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetWorkforcemanagementNotificationsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/workforcemanagement/notifications][%d] getWorkforcemanagementNotificationsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetWorkforcemanagementNotificationsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWorkforcemanagementNotificationsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkforcemanagementNotificationsGatewayTimeout creates a GetWorkforcemanagementNotificationsGatewayTimeout with default headers values
func NewGetWorkforcemanagementNotificationsGatewayTimeout() *GetWorkforcemanagementNotificationsGatewayTimeout {
	return &GetWorkforcemanagementNotificationsGatewayTimeout{}
}

/*
GetWorkforcemanagementNotificationsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetWorkforcemanagementNotificationsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get workforcemanagement notifications gateway timeout response has a 2xx status code
func (o *GetWorkforcemanagementNotificationsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workforcemanagement notifications gateway timeout response has a 3xx status code
func (o *GetWorkforcemanagementNotificationsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workforcemanagement notifications gateway timeout response has a 4xx status code
func (o *GetWorkforcemanagementNotificationsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get workforcemanagement notifications gateway timeout response has a 5xx status code
func (o *GetWorkforcemanagementNotificationsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get workforcemanagement notifications gateway timeout response a status code equal to that given
func (o *GetWorkforcemanagementNotificationsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetWorkforcemanagementNotificationsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/workforcemanagement/notifications][%d] getWorkforcemanagementNotificationsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetWorkforcemanagementNotificationsGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/workforcemanagement/notifications][%d] getWorkforcemanagementNotificationsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetWorkforcemanagementNotificationsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWorkforcemanagementNotificationsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
