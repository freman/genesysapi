// Code generated by go-swagger; DO NOT EDIT.

package workforce_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewDeleteWorkforcemanagementManagementunitWorkplanrotationParams creates a new DeleteWorkforcemanagementManagementunitWorkplanrotationParams object
// with the default values initialized.
func NewDeleteWorkforcemanagementManagementunitWorkplanrotationParams() *DeleteWorkforcemanagementManagementunitWorkplanrotationParams {
	var ()
	return &DeleteWorkforcemanagementManagementunitWorkplanrotationParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteWorkforcemanagementManagementunitWorkplanrotationParamsWithTimeout creates a new DeleteWorkforcemanagementManagementunitWorkplanrotationParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteWorkforcemanagementManagementunitWorkplanrotationParamsWithTimeout(timeout time.Duration) *DeleteWorkforcemanagementManagementunitWorkplanrotationParams {
	var ()
	return &DeleteWorkforcemanagementManagementunitWorkplanrotationParams{

		timeout: timeout,
	}
}

// NewDeleteWorkforcemanagementManagementunitWorkplanrotationParamsWithContext creates a new DeleteWorkforcemanagementManagementunitWorkplanrotationParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteWorkforcemanagementManagementunitWorkplanrotationParamsWithContext(ctx context.Context) *DeleteWorkforcemanagementManagementunitWorkplanrotationParams {
	var ()
	return &DeleteWorkforcemanagementManagementunitWorkplanrotationParams{

		Context: ctx,
	}
}

// NewDeleteWorkforcemanagementManagementunitWorkplanrotationParamsWithHTTPClient creates a new DeleteWorkforcemanagementManagementunitWorkplanrotationParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteWorkforcemanagementManagementunitWorkplanrotationParamsWithHTTPClient(client *http.Client) *DeleteWorkforcemanagementManagementunitWorkplanrotationParams {
	var ()
	return &DeleteWorkforcemanagementManagementunitWorkplanrotationParams{
		HTTPClient: client,
	}
}

/*DeleteWorkforcemanagementManagementunitWorkplanrotationParams contains all the parameters to send to the API endpoint
for the delete workforcemanagement managementunit workplanrotation operation typically these are written to a http.Request
*/
type DeleteWorkforcemanagementManagementunitWorkplanrotationParams struct {

	/*ManagementUnitID
	  The ID of the management unit, or 'mine' for the management unit of the logged-in user.

	*/
	ManagementUnitID string
	/*WorkPlanRotationID
	  The ID of the work plan rotation to be deleted

	*/
	WorkPlanRotationID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete workforcemanagement managementunit workplanrotation params
func (o *DeleteWorkforcemanagementManagementunitWorkplanrotationParams) WithTimeout(timeout time.Duration) *DeleteWorkforcemanagementManagementunitWorkplanrotationParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete workforcemanagement managementunit workplanrotation params
func (o *DeleteWorkforcemanagementManagementunitWorkplanrotationParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete workforcemanagement managementunit workplanrotation params
func (o *DeleteWorkforcemanagementManagementunitWorkplanrotationParams) WithContext(ctx context.Context) *DeleteWorkforcemanagementManagementunitWorkplanrotationParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete workforcemanagement managementunit workplanrotation params
func (o *DeleteWorkforcemanagementManagementunitWorkplanrotationParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete workforcemanagement managementunit workplanrotation params
func (o *DeleteWorkforcemanagementManagementunitWorkplanrotationParams) WithHTTPClient(client *http.Client) *DeleteWorkforcemanagementManagementunitWorkplanrotationParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete workforcemanagement managementunit workplanrotation params
func (o *DeleteWorkforcemanagementManagementunitWorkplanrotationParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithManagementUnitID adds the managementUnitID to the delete workforcemanagement managementunit workplanrotation params
func (o *DeleteWorkforcemanagementManagementunitWorkplanrotationParams) WithManagementUnitID(managementUnitID string) *DeleteWorkforcemanagementManagementunitWorkplanrotationParams {
	o.SetManagementUnitID(managementUnitID)
	return o
}

// SetManagementUnitID adds the managementUnitId to the delete workforcemanagement managementunit workplanrotation params
func (o *DeleteWorkforcemanagementManagementunitWorkplanrotationParams) SetManagementUnitID(managementUnitID string) {
	o.ManagementUnitID = managementUnitID
}

// WithWorkPlanRotationID adds the workPlanRotationID to the delete workforcemanagement managementunit workplanrotation params
func (o *DeleteWorkforcemanagementManagementunitWorkplanrotationParams) WithWorkPlanRotationID(workPlanRotationID string) *DeleteWorkforcemanagementManagementunitWorkplanrotationParams {
	o.SetWorkPlanRotationID(workPlanRotationID)
	return o
}

// SetWorkPlanRotationID adds the workPlanRotationId to the delete workforcemanagement managementunit workplanrotation params
func (o *DeleteWorkforcemanagementManagementunitWorkplanrotationParams) SetWorkPlanRotationID(workPlanRotationID string) {
	o.WorkPlanRotationID = workPlanRotationID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteWorkforcemanagementManagementunitWorkplanrotationParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param managementUnitId
	if err := r.SetPathParam("managementUnitId", o.ManagementUnitID); err != nil {
		return err
	}

	// path param workPlanRotationId
	if err := r.SetPathParam("workPlanRotationId", o.WorkPlanRotationID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
