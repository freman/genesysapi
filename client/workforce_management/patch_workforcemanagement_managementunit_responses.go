// Code generated by go-swagger; DO NOT EDIT.

package workforce_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PatchWorkforcemanagementManagementunitReader is a Reader for the PatchWorkforcemanagementManagementunit structure.
type PatchWorkforcemanagementManagementunitReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchWorkforcemanagementManagementunitReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchWorkforcemanagementManagementunitOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchWorkforcemanagementManagementunitBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPatchWorkforcemanagementManagementunitUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchWorkforcemanagementManagementunitForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchWorkforcemanagementManagementunitNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPatchWorkforcemanagementManagementunitRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPatchWorkforcemanagementManagementunitConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPatchWorkforcemanagementManagementunitRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPatchWorkforcemanagementManagementunitUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPatchWorkforcemanagementManagementunitTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchWorkforcemanagementManagementunitInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPatchWorkforcemanagementManagementunitServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPatchWorkforcemanagementManagementunitGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchWorkforcemanagementManagementunitOK creates a PatchWorkforcemanagementManagementunitOK with default headers values
func NewPatchWorkforcemanagementManagementunitOK() *PatchWorkforcemanagementManagementunitOK {
	return &PatchWorkforcemanagementManagementunitOK{}
}

/*
PatchWorkforcemanagementManagementunitOK describes a response with status code 200, with default header values.

successful operation
*/
type PatchWorkforcemanagementManagementunitOK struct {
	Payload *models.ManagementUnit
}

// IsSuccess returns true when this patch workforcemanagement managementunit o k response has a 2xx status code
func (o *PatchWorkforcemanagementManagementunitOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this patch workforcemanagement managementunit o k response has a 3xx status code
func (o *PatchWorkforcemanagementManagementunitOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement managementunit o k response has a 4xx status code
func (o *PatchWorkforcemanagementManagementunitOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch workforcemanagement managementunit o k response has a 5xx status code
func (o *PatchWorkforcemanagementManagementunitOK) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement managementunit o k response a status code equal to that given
func (o *PatchWorkforcemanagementManagementunitOK) IsCode(code int) bool {
	return code == 200
}

func (o *PatchWorkforcemanagementManagementunitOK) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}][%d] patchWorkforcemanagementManagementunitOK  %+v", 200, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitOK) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}][%d] patchWorkforcemanagementManagementunitOK  %+v", 200, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitOK) GetPayload() *models.ManagementUnit {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ManagementUnit)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitBadRequest creates a PatchWorkforcemanagementManagementunitBadRequest with default headers values
func NewPatchWorkforcemanagementManagementunitBadRequest() *PatchWorkforcemanagementManagementunitBadRequest {
	return &PatchWorkforcemanagementManagementunitBadRequest{}
}

/*
PatchWorkforcemanagementManagementunitBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PatchWorkforcemanagementManagementunitBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement managementunit bad request response has a 2xx status code
func (o *PatchWorkforcemanagementManagementunitBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement managementunit bad request response has a 3xx status code
func (o *PatchWorkforcemanagementManagementunitBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement managementunit bad request response has a 4xx status code
func (o *PatchWorkforcemanagementManagementunitBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement managementunit bad request response has a 5xx status code
func (o *PatchWorkforcemanagementManagementunitBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement managementunit bad request response a status code equal to that given
func (o *PatchWorkforcemanagementManagementunitBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PatchWorkforcemanagementManagementunitBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}][%d] patchWorkforcemanagementManagementunitBadRequest  %+v", 400, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitBadRequest) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}][%d] patchWorkforcemanagementManagementunitBadRequest  %+v", 400, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitUnauthorized creates a PatchWorkforcemanagementManagementunitUnauthorized with default headers values
func NewPatchWorkforcemanagementManagementunitUnauthorized() *PatchWorkforcemanagementManagementunitUnauthorized {
	return &PatchWorkforcemanagementManagementunitUnauthorized{}
}

/*
PatchWorkforcemanagementManagementunitUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PatchWorkforcemanagementManagementunitUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement managementunit unauthorized response has a 2xx status code
func (o *PatchWorkforcemanagementManagementunitUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement managementunit unauthorized response has a 3xx status code
func (o *PatchWorkforcemanagementManagementunitUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement managementunit unauthorized response has a 4xx status code
func (o *PatchWorkforcemanagementManagementunitUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement managementunit unauthorized response has a 5xx status code
func (o *PatchWorkforcemanagementManagementunitUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement managementunit unauthorized response a status code equal to that given
func (o *PatchWorkforcemanagementManagementunitUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PatchWorkforcemanagementManagementunitUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}][%d] patchWorkforcemanagementManagementunitUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitUnauthorized) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}][%d] patchWorkforcemanagementManagementunitUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitForbidden creates a PatchWorkforcemanagementManagementunitForbidden with default headers values
func NewPatchWorkforcemanagementManagementunitForbidden() *PatchWorkforcemanagementManagementunitForbidden {
	return &PatchWorkforcemanagementManagementunitForbidden{}
}

/*
PatchWorkforcemanagementManagementunitForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PatchWorkforcemanagementManagementunitForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement managementunit forbidden response has a 2xx status code
func (o *PatchWorkforcemanagementManagementunitForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement managementunit forbidden response has a 3xx status code
func (o *PatchWorkforcemanagementManagementunitForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement managementunit forbidden response has a 4xx status code
func (o *PatchWorkforcemanagementManagementunitForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement managementunit forbidden response has a 5xx status code
func (o *PatchWorkforcemanagementManagementunitForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement managementunit forbidden response a status code equal to that given
func (o *PatchWorkforcemanagementManagementunitForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PatchWorkforcemanagementManagementunitForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}][%d] patchWorkforcemanagementManagementunitForbidden  %+v", 403, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitForbidden) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}][%d] patchWorkforcemanagementManagementunitForbidden  %+v", 403, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitNotFound creates a PatchWorkforcemanagementManagementunitNotFound with default headers values
func NewPatchWorkforcemanagementManagementunitNotFound() *PatchWorkforcemanagementManagementunitNotFound {
	return &PatchWorkforcemanagementManagementunitNotFound{}
}

/*
PatchWorkforcemanagementManagementunitNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PatchWorkforcemanagementManagementunitNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement managementunit not found response has a 2xx status code
func (o *PatchWorkforcemanagementManagementunitNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement managementunit not found response has a 3xx status code
func (o *PatchWorkforcemanagementManagementunitNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement managementunit not found response has a 4xx status code
func (o *PatchWorkforcemanagementManagementunitNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement managementunit not found response has a 5xx status code
func (o *PatchWorkforcemanagementManagementunitNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement managementunit not found response a status code equal to that given
func (o *PatchWorkforcemanagementManagementunitNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PatchWorkforcemanagementManagementunitNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}][%d] patchWorkforcemanagementManagementunitNotFound  %+v", 404, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitNotFound) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}][%d] patchWorkforcemanagementManagementunitNotFound  %+v", 404, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitRequestTimeout creates a PatchWorkforcemanagementManagementunitRequestTimeout with default headers values
func NewPatchWorkforcemanagementManagementunitRequestTimeout() *PatchWorkforcemanagementManagementunitRequestTimeout {
	return &PatchWorkforcemanagementManagementunitRequestTimeout{}
}

/*
PatchWorkforcemanagementManagementunitRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PatchWorkforcemanagementManagementunitRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement managementunit request timeout response has a 2xx status code
func (o *PatchWorkforcemanagementManagementunitRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement managementunit request timeout response has a 3xx status code
func (o *PatchWorkforcemanagementManagementunitRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement managementunit request timeout response has a 4xx status code
func (o *PatchWorkforcemanagementManagementunitRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement managementunit request timeout response has a 5xx status code
func (o *PatchWorkforcemanagementManagementunitRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement managementunit request timeout response a status code equal to that given
func (o *PatchWorkforcemanagementManagementunitRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PatchWorkforcemanagementManagementunitRequestTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}][%d] patchWorkforcemanagementManagementunitRequestTimeout  %+v", 408, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitRequestTimeout) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}][%d] patchWorkforcemanagementManagementunitRequestTimeout  %+v", 408, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitConflict creates a PatchWorkforcemanagementManagementunitConflict with default headers values
func NewPatchWorkforcemanagementManagementunitConflict() *PatchWorkforcemanagementManagementunitConflict {
	return &PatchWorkforcemanagementManagementunitConflict{}
}

/*
PatchWorkforcemanagementManagementunitConflict describes a response with status code 409, with default header values.

Conflict
*/
type PatchWorkforcemanagementManagementunitConflict struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement managementunit conflict response has a 2xx status code
func (o *PatchWorkforcemanagementManagementunitConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement managementunit conflict response has a 3xx status code
func (o *PatchWorkforcemanagementManagementunitConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement managementunit conflict response has a 4xx status code
func (o *PatchWorkforcemanagementManagementunitConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement managementunit conflict response has a 5xx status code
func (o *PatchWorkforcemanagementManagementunitConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement managementunit conflict response a status code equal to that given
func (o *PatchWorkforcemanagementManagementunitConflict) IsCode(code int) bool {
	return code == 409
}

func (o *PatchWorkforcemanagementManagementunitConflict) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}][%d] patchWorkforcemanagementManagementunitConflict  %+v", 409, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitConflict) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}][%d] patchWorkforcemanagementManagementunitConflict  %+v", 409, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitConflict) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitRequestEntityTooLarge creates a PatchWorkforcemanagementManagementunitRequestEntityTooLarge with default headers values
func NewPatchWorkforcemanagementManagementunitRequestEntityTooLarge() *PatchWorkforcemanagementManagementunitRequestEntityTooLarge {
	return &PatchWorkforcemanagementManagementunitRequestEntityTooLarge{}
}

/*
PatchWorkforcemanagementManagementunitRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PatchWorkforcemanagementManagementunitRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement managementunit request entity too large response has a 2xx status code
func (o *PatchWorkforcemanagementManagementunitRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement managementunit request entity too large response has a 3xx status code
func (o *PatchWorkforcemanagementManagementunitRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement managementunit request entity too large response has a 4xx status code
func (o *PatchWorkforcemanagementManagementunitRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement managementunit request entity too large response has a 5xx status code
func (o *PatchWorkforcemanagementManagementunitRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement managementunit request entity too large response a status code equal to that given
func (o *PatchWorkforcemanagementManagementunitRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PatchWorkforcemanagementManagementunitRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}][%d] patchWorkforcemanagementManagementunitRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}][%d] patchWorkforcemanagementManagementunitRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitUnsupportedMediaType creates a PatchWorkforcemanagementManagementunitUnsupportedMediaType with default headers values
func NewPatchWorkforcemanagementManagementunitUnsupportedMediaType() *PatchWorkforcemanagementManagementunitUnsupportedMediaType {
	return &PatchWorkforcemanagementManagementunitUnsupportedMediaType{}
}

/*
PatchWorkforcemanagementManagementunitUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PatchWorkforcemanagementManagementunitUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement managementunit unsupported media type response has a 2xx status code
func (o *PatchWorkforcemanagementManagementunitUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement managementunit unsupported media type response has a 3xx status code
func (o *PatchWorkforcemanagementManagementunitUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement managementunit unsupported media type response has a 4xx status code
func (o *PatchWorkforcemanagementManagementunitUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement managementunit unsupported media type response has a 5xx status code
func (o *PatchWorkforcemanagementManagementunitUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement managementunit unsupported media type response a status code equal to that given
func (o *PatchWorkforcemanagementManagementunitUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PatchWorkforcemanagementManagementunitUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}][%d] patchWorkforcemanagementManagementunitUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}][%d] patchWorkforcemanagementManagementunitUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitTooManyRequests creates a PatchWorkforcemanagementManagementunitTooManyRequests with default headers values
func NewPatchWorkforcemanagementManagementunitTooManyRequests() *PatchWorkforcemanagementManagementunitTooManyRequests {
	return &PatchWorkforcemanagementManagementunitTooManyRequests{}
}

/*
PatchWorkforcemanagementManagementunitTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PatchWorkforcemanagementManagementunitTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement managementunit too many requests response has a 2xx status code
func (o *PatchWorkforcemanagementManagementunitTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement managementunit too many requests response has a 3xx status code
func (o *PatchWorkforcemanagementManagementunitTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement managementunit too many requests response has a 4xx status code
func (o *PatchWorkforcemanagementManagementunitTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workforcemanagement managementunit too many requests response has a 5xx status code
func (o *PatchWorkforcemanagementManagementunitTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workforcemanagement managementunit too many requests response a status code equal to that given
func (o *PatchWorkforcemanagementManagementunitTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PatchWorkforcemanagementManagementunitTooManyRequests) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}][%d] patchWorkforcemanagementManagementunitTooManyRequests  %+v", 429, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitTooManyRequests) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}][%d] patchWorkforcemanagementManagementunitTooManyRequests  %+v", 429, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitInternalServerError creates a PatchWorkforcemanagementManagementunitInternalServerError with default headers values
func NewPatchWorkforcemanagementManagementunitInternalServerError() *PatchWorkforcemanagementManagementunitInternalServerError {
	return &PatchWorkforcemanagementManagementunitInternalServerError{}
}

/*
PatchWorkforcemanagementManagementunitInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PatchWorkforcemanagementManagementunitInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement managementunit internal server error response has a 2xx status code
func (o *PatchWorkforcemanagementManagementunitInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement managementunit internal server error response has a 3xx status code
func (o *PatchWorkforcemanagementManagementunitInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement managementunit internal server error response has a 4xx status code
func (o *PatchWorkforcemanagementManagementunitInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch workforcemanagement managementunit internal server error response has a 5xx status code
func (o *PatchWorkforcemanagementManagementunitInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this patch workforcemanagement managementunit internal server error response a status code equal to that given
func (o *PatchWorkforcemanagementManagementunitInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PatchWorkforcemanagementManagementunitInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}][%d] patchWorkforcemanagementManagementunitInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitInternalServerError) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}][%d] patchWorkforcemanagementManagementunitInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitServiceUnavailable creates a PatchWorkforcemanagementManagementunitServiceUnavailable with default headers values
func NewPatchWorkforcemanagementManagementunitServiceUnavailable() *PatchWorkforcemanagementManagementunitServiceUnavailable {
	return &PatchWorkforcemanagementManagementunitServiceUnavailable{}
}

/*
PatchWorkforcemanagementManagementunitServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PatchWorkforcemanagementManagementunitServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement managementunit service unavailable response has a 2xx status code
func (o *PatchWorkforcemanagementManagementunitServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement managementunit service unavailable response has a 3xx status code
func (o *PatchWorkforcemanagementManagementunitServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement managementunit service unavailable response has a 4xx status code
func (o *PatchWorkforcemanagementManagementunitServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch workforcemanagement managementunit service unavailable response has a 5xx status code
func (o *PatchWorkforcemanagementManagementunitServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this patch workforcemanagement managementunit service unavailable response a status code equal to that given
func (o *PatchWorkforcemanagementManagementunitServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PatchWorkforcemanagementManagementunitServiceUnavailable) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}][%d] patchWorkforcemanagementManagementunitServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitServiceUnavailable) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}][%d] patchWorkforcemanagementManagementunitServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitGatewayTimeout creates a PatchWorkforcemanagementManagementunitGatewayTimeout with default headers values
func NewPatchWorkforcemanagementManagementunitGatewayTimeout() *PatchWorkforcemanagementManagementunitGatewayTimeout {
	return &PatchWorkforcemanagementManagementunitGatewayTimeout{}
}

/*
PatchWorkforcemanagementManagementunitGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PatchWorkforcemanagementManagementunitGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch workforcemanagement managementunit gateway timeout response has a 2xx status code
func (o *PatchWorkforcemanagementManagementunitGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workforcemanagement managementunit gateway timeout response has a 3xx status code
func (o *PatchWorkforcemanagementManagementunitGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workforcemanagement managementunit gateway timeout response has a 4xx status code
func (o *PatchWorkforcemanagementManagementunitGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch workforcemanagement managementunit gateway timeout response has a 5xx status code
func (o *PatchWorkforcemanagementManagementunitGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this patch workforcemanagement managementunit gateway timeout response a status code equal to that given
func (o *PatchWorkforcemanagementManagementunitGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PatchWorkforcemanagementManagementunitGatewayTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}][%d] patchWorkforcemanagementManagementunitGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitGatewayTimeout) String() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}][%d] patchWorkforcemanagementManagementunitGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
