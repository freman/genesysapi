// Code generated by go-swagger; DO NOT EDIT.

package workforce_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetWorkforcemanagementManagementunitWeekSchedulesParams creates a new GetWorkforcemanagementManagementunitWeekSchedulesParams object
// with the default values initialized.
func NewGetWorkforcemanagementManagementunitWeekSchedulesParams() *GetWorkforcemanagementManagementunitWeekSchedulesParams {
	var ()
	return &GetWorkforcemanagementManagementunitWeekSchedulesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetWorkforcemanagementManagementunitWeekSchedulesParamsWithTimeout creates a new GetWorkforcemanagementManagementunitWeekSchedulesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetWorkforcemanagementManagementunitWeekSchedulesParamsWithTimeout(timeout time.Duration) *GetWorkforcemanagementManagementunitWeekSchedulesParams {
	var ()
	return &GetWorkforcemanagementManagementunitWeekSchedulesParams{

		timeout: timeout,
	}
}

// NewGetWorkforcemanagementManagementunitWeekSchedulesParamsWithContext creates a new GetWorkforcemanagementManagementunitWeekSchedulesParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetWorkforcemanagementManagementunitWeekSchedulesParamsWithContext(ctx context.Context) *GetWorkforcemanagementManagementunitWeekSchedulesParams {
	var ()
	return &GetWorkforcemanagementManagementunitWeekSchedulesParams{

		Context: ctx,
	}
}

// NewGetWorkforcemanagementManagementunitWeekSchedulesParamsWithHTTPClient creates a new GetWorkforcemanagementManagementunitWeekSchedulesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetWorkforcemanagementManagementunitWeekSchedulesParamsWithHTTPClient(client *http.Client) *GetWorkforcemanagementManagementunitWeekSchedulesParams {
	var ()
	return &GetWorkforcemanagementManagementunitWeekSchedulesParams{
		HTTPClient: client,
	}
}

/*GetWorkforcemanagementManagementunitWeekSchedulesParams contains all the parameters to send to the API endpoint
for the get workforcemanagement managementunit week schedules operation typically these are written to a http.Request
*/
type GetWorkforcemanagementManagementunitWeekSchedulesParams struct {

	/*EarliestWeekDate
	  The start date of the earliest week to query in yyyy-MM-dd format

	*/
	EarliestWeekDate *string
	/*IncludeOnlyPublished
	  Return only published schedules

	*/
	IncludeOnlyPublished *bool
	/*LatestWeekDate
	  The start date of the latest week to query in yyyy-MM-dd format

	*/
	LatestWeekDate *string
	/*ManagementUnitID
	  The ID of the management unit, or 'mine' for the management unit of the logged-in user.

	*/
	ManagementUnitID string
	/*WeekID
	  First day of schedule week in yyyy-MM-dd format.

	*/
	WeekID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get workforcemanagement managementunit week schedules params
func (o *GetWorkforcemanagementManagementunitWeekSchedulesParams) WithTimeout(timeout time.Duration) *GetWorkforcemanagementManagementunitWeekSchedulesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get workforcemanagement managementunit week schedules params
func (o *GetWorkforcemanagementManagementunitWeekSchedulesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get workforcemanagement managementunit week schedules params
func (o *GetWorkforcemanagementManagementunitWeekSchedulesParams) WithContext(ctx context.Context) *GetWorkforcemanagementManagementunitWeekSchedulesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get workforcemanagement managementunit week schedules params
func (o *GetWorkforcemanagementManagementunitWeekSchedulesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get workforcemanagement managementunit week schedules params
func (o *GetWorkforcemanagementManagementunitWeekSchedulesParams) WithHTTPClient(client *http.Client) *GetWorkforcemanagementManagementunitWeekSchedulesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get workforcemanagement managementunit week schedules params
func (o *GetWorkforcemanagementManagementunitWeekSchedulesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEarliestWeekDate adds the earliestWeekDate to the get workforcemanagement managementunit week schedules params
func (o *GetWorkforcemanagementManagementunitWeekSchedulesParams) WithEarliestWeekDate(earliestWeekDate *string) *GetWorkforcemanagementManagementunitWeekSchedulesParams {
	o.SetEarliestWeekDate(earliestWeekDate)
	return o
}

// SetEarliestWeekDate adds the earliestWeekDate to the get workforcemanagement managementunit week schedules params
func (o *GetWorkforcemanagementManagementunitWeekSchedulesParams) SetEarliestWeekDate(earliestWeekDate *string) {
	o.EarliestWeekDate = earliestWeekDate
}

// WithIncludeOnlyPublished adds the includeOnlyPublished to the get workforcemanagement managementunit week schedules params
func (o *GetWorkforcemanagementManagementunitWeekSchedulesParams) WithIncludeOnlyPublished(includeOnlyPublished *bool) *GetWorkforcemanagementManagementunitWeekSchedulesParams {
	o.SetIncludeOnlyPublished(includeOnlyPublished)
	return o
}

// SetIncludeOnlyPublished adds the includeOnlyPublished to the get workforcemanagement managementunit week schedules params
func (o *GetWorkforcemanagementManagementunitWeekSchedulesParams) SetIncludeOnlyPublished(includeOnlyPublished *bool) {
	o.IncludeOnlyPublished = includeOnlyPublished
}

// WithLatestWeekDate adds the latestWeekDate to the get workforcemanagement managementunit week schedules params
func (o *GetWorkforcemanagementManagementunitWeekSchedulesParams) WithLatestWeekDate(latestWeekDate *string) *GetWorkforcemanagementManagementunitWeekSchedulesParams {
	o.SetLatestWeekDate(latestWeekDate)
	return o
}

// SetLatestWeekDate adds the latestWeekDate to the get workforcemanagement managementunit week schedules params
func (o *GetWorkforcemanagementManagementunitWeekSchedulesParams) SetLatestWeekDate(latestWeekDate *string) {
	o.LatestWeekDate = latestWeekDate
}

// WithManagementUnitID adds the managementUnitID to the get workforcemanagement managementunit week schedules params
func (o *GetWorkforcemanagementManagementunitWeekSchedulesParams) WithManagementUnitID(managementUnitID string) *GetWorkforcemanagementManagementunitWeekSchedulesParams {
	o.SetManagementUnitID(managementUnitID)
	return o
}

// SetManagementUnitID adds the managementUnitId to the get workforcemanagement managementunit week schedules params
func (o *GetWorkforcemanagementManagementunitWeekSchedulesParams) SetManagementUnitID(managementUnitID string) {
	o.ManagementUnitID = managementUnitID
}

// WithWeekID adds the weekID to the get workforcemanagement managementunit week schedules params
func (o *GetWorkforcemanagementManagementunitWeekSchedulesParams) WithWeekID(weekID string) *GetWorkforcemanagementManagementunitWeekSchedulesParams {
	o.SetWeekID(weekID)
	return o
}

// SetWeekID adds the weekId to the get workforcemanagement managementunit week schedules params
func (o *GetWorkforcemanagementManagementunitWeekSchedulesParams) SetWeekID(weekID string) {
	o.WeekID = weekID
}

// WriteToRequest writes these params to a swagger request
func (o *GetWorkforcemanagementManagementunitWeekSchedulesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.EarliestWeekDate != nil {

		// query param earliestWeekDate
		var qrEarliestWeekDate string
		if o.EarliestWeekDate != nil {
			qrEarliestWeekDate = *o.EarliestWeekDate
		}
		qEarliestWeekDate := qrEarliestWeekDate
		if qEarliestWeekDate != "" {
			if err := r.SetQueryParam("earliestWeekDate", qEarliestWeekDate); err != nil {
				return err
			}
		}

	}

	if o.IncludeOnlyPublished != nil {

		// query param includeOnlyPublished
		var qrIncludeOnlyPublished bool
		if o.IncludeOnlyPublished != nil {
			qrIncludeOnlyPublished = *o.IncludeOnlyPublished
		}
		qIncludeOnlyPublished := swag.FormatBool(qrIncludeOnlyPublished)
		if qIncludeOnlyPublished != "" {
			if err := r.SetQueryParam("includeOnlyPublished", qIncludeOnlyPublished); err != nil {
				return err
			}
		}

	}

	if o.LatestWeekDate != nil {

		// query param latestWeekDate
		var qrLatestWeekDate string
		if o.LatestWeekDate != nil {
			qrLatestWeekDate = *o.LatestWeekDate
		}
		qLatestWeekDate := qrLatestWeekDate
		if qLatestWeekDate != "" {
			if err := r.SetQueryParam("latestWeekDate", qLatestWeekDate); err != nil {
				return err
			}
		}

	}

	// path param managementUnitId
	if err := r.SetPathParam("managementUnitId", o.ManagementUnitID); err != nil {
		return err
	}

	// path param weekId
	if err := r.SetPathParam("weekId", o.WeekID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
