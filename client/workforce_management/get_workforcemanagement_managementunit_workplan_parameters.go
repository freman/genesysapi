// Code generated by go-swagger; DO NOT EDIT.

package workforce_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetWorkforcemanagementManagementunitWorkplanParams creates a new GetWorkforcemanagementManagementunitWorkplanParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetWorkforcemanagementManagementunitWorkplanParams() *GetWorkforcemanagementManagementunitWorkplanParams {
	return &GetWorkforcemanagementManagementunitWorkplanParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetWorkforcemanagementManagementunitWorkplanParamsWithTimeout creates a new GetWorkforcemanagementManagementunitWorkplanParams object
// with the ability to set a timeout on a request.
func NewGetWorkforcemanagementManagementunitWorkplanParamsWithTimeout(timeout time.Duration) *GetWorkforcemanagementManagementunitWorkplanParams {
	return &GetWorkforcemanagementManagementunitWorkplanParams{
		timeout: timeout,
	}
}

// NewGetWorkforcemanagementManagementunitWorkplanParamsWithContext creates a new GetWorkforcemanagementManagementunitWorkplanParams object
// with the ability to set a context for a request.
func NewGetWorkforcemanagementManagementunitWorkplanParamsWithContext(ctx context.Context) *GetWorkforcemanagementManagementunitWorkplanParams {
	return &GetWorkforcemanagementManagementunitWorkplanParams{
		Context: ctx,
	}
}

// NewGetWorkforcemanagementManagementunitWorkplanParamsWithHTTPClient creates a new GetWorkforcemanagementManagementunitWorkplanParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetWorkforcemanagementManagementunitWorkplanParamsWithHTTPClient(client *http.Client) *GetWorkforcemanagementManagementunitWorkplanParams {
	return &GetWorkforcemanagementManagementunitWorkplanParams{
		HTTPClient: client,
	}
}

/*
GetWorkforcemanagementManagementunitWorkplanParams contains all the parameters to send to the API endpoint

	for the get workforcemanagement managementunit workplan operation.

	Typically these are written to a http.Request.
*/
type GetWorkforcemanagementManagementunitWorkplanParams struct {

	/* IncludeOnly.

	   limit response to the specified fields
	*/
	IncludeOnly []string

	/* ManagementUnitID.

	   The ID of the management unit, or 'mine' for the management unit of the logged-in user.
	*/
	ManagementUnitID string

	/* WorkPlanID.

	   The ID of the work plan to fetch
	*/
	WorkPlanID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get workforcemanagement managementunit workplan params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetWorkforcemanagementManagementunitWorkplanParams) WithDefaults() *GetWorkforcemanagementManagementunitWorkplanParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get workforcemanagement managementunit workplan params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetWorkforcemanagementManagementunitWorkplanParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get workforcemanagement managementunit workplan params
func (o *GetWorkforcemanagementManagementunitWorkplanParams) WithTimeout(timeout time.Duration) *GetWorkforcemanagementManagementunitWorkplanParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get workforcemanagement managementunit workplan params
func (o *GetWorkforcemanagementManagementunitWorkplanParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get workforcemanagement managementunit workplan params
func (o *GetWorkforcemanagementManagementunitWorkplanParams) WithContext(ctx context.Context) *GetWorkforcemanagementManagementunitWorkplanParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get workforcemanagement managementunit workplan params
func (o *GetWorkforcemanagementManagementunitWorkplanParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get workforcemanagement managementunit workplan params
func (o *GetWorkforcemanagementManagementunitWorkplanParams) WithHTTPClient(client *http.Client) *GetWorkforcemanagementManagementunitWorkplanParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get workforcemanagement managementunit workplan params
func (o *GetWorkforcemanagementManagementunitWorkplanParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIncludeOnly adds the includeOnly to the get workforcemanagement managementunit workplan params
func (o *GetWorkforcemanagementManagementunitWorkplanParams) WithIncludeOnly(includeOnly []string) *GetWorkforcemanagementManagementunitWorkplanParams {
	o.SetIncludeOnly(includeOnly)
	return o
}

// SetIncludeOnly adds the includeOnly to the get workforcemanagement managementunit workplan params
func (o *GetWorkforcemanagementManagementunitWorkplanParams) SetIncludeOnly(includeOnly []string) {
	o.IncludeOnly = includeOnly
}

// WithManagementUnitID adds the managementUnitID to the get workforcemanagement managementunit workplan params
func (o *GetWorkforcemanagementManagementunitWorkplanParams) WithManagementUnitID(managementUnitID string) *GetWorkforcemanagementManagementunitWorkplanParams {
	o.SetManagementUnitID(managementUnitID)
	return o
}

// SetManagementUnitID adds the managementUnitId to the get workforcemanagement managementunit workplan params
func (o *GetWorkforcemanagementManagementunitWorkplanParams) SetManagementUnitID(managementUnitID string) {
	o.ManagementUnitID = managementUnitID
}

// WithWorkPlanID adds the workPlanID to the get workforcemanagement managementunit workplan params
func (o *GetWorkforcemanagementManagementunitWorkplanParams) WithWorkPlanID(workPlanID string) *GetWorkforcemanagementManagementunitWorkplanParams {
	o.SetWorkPlanID(workPlanID)
	return o
}

// SetWorkPlanID adds the workPlanId to the get workforcemanagement managementunit workplan params
func (o *GetWorkforcemanagementManagementunitWorkplanParams) SetWorkPlanID(workPlanID string) {
	o.WorkPlanID = workPlanID
}

// WriteToRequest writes these params to a swagger request
func (o *GetWorkforcemanagementManagementunitWorkplanParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.IncludeOnly != nil {

		// binding items for includeOnly
		joinedIncludeOnly := o.bindParamIncludeOnly(reg)

		// query array param includeOnly
		if err := r.SetQueryParam("includeOnly", joinedIncludeOnly...); err != nil {
			return err
		}
	}

	// path param managementUnitId
	if err := r.SetPathParam("managementUnitId", o.ManagementUnitID); err != nil {
		return err
	}

	// path param workPlanId
	if err := r.SetPathParam("workPlanId", o.WorkPlanID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetWorkforcemanagementManagementunitWorkplan binds the parameter includeOnly
func (o *GetWorkforcemanagementManagementunitWorkplanParams) bindParamIncludeOnly(formats strfmt.Registry) []string {
	includeOnlyIR := o.IncludeOnly

	var includeOnlyIC []string
	for _, includeOnlyIIR := range includeOnlyIR { // explode []string

		includeOnlyIIV := includeOnlyIIR // string as string
		includeOnlyIC = append(includeOnlyIC, includeOnlyIIV)
	}

	// items.CollectionFormat: "multi"
	includeOnlyIS := swag.JoinByFormat(includeOnlyIC, "multi")

	return includeOnlyIS
}
