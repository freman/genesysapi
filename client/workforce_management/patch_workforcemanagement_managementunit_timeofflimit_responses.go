// Code generated by go-swagger; DO NOT EDIT.

package workforce_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PatchWorkforcemanagementManagementunitTimeofflimitReader is a Reader for the PatchWorkforcemanagementManagementunitTimeofflimit structure.
type PatchWorkforcemanagementManagementunitTimeofflimitReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchWorkforcemanagementManagementunitTimeofflimitReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchWorkforcemanagementManagementunitTimeofflimitOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchWorkforcemanagementManagementunitTimeofflimitBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPatchWorkforcemanagementManagementunitTimeofflimitUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchWorkforcemanagementManagementunitTimeofflimitForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchWorkforcemanagementManagementunitTimeofflimitNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPatchWorkforcemanagementManagementunitTimeofflimitRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPatchWorkforcemanagementManagementunitTimeofflimitConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPatchWorkforcemanagementManagementunitTimeofflimitRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPatchWorkforcemanagementManagementunitTimeofflimitUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPatchWorkforcemanagementManagementunitTimeofflimitTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchWorkforcemanagementManagementunitTimeofflimitInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPatchWorkforcemanagementManagementunitTimeofflimitServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPatchWorkforcemanagementManagementunitTimeofflimitGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchWorkforcemanagementManagementunitTimeofflimitOK creates a PatchWorkforcemanagementManagementunitTimeofflimitOK with default headers values
func NewPatchWorkforcemanagementManagementunitTimeofflimitOK() *PatchWorkforcemanagementManagementunitTimeofflimitOK {
	return &PatchWorkforcemanagementManagementunitTimeofflimitOK{}
}

/*PatchWorkforcemanagementManagementunitTimeofflimitOK handles this case with default header values.

successful operation
*/
type PatchWorkforcemanagementManagementunitTimeofflimitOK struct {
	Payload *models.TimeOffLimit
}

func (o *PatchWorkforcemanagementManagementunitTimeofflimitOK) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeofflimits/{timeOffLimitId}][%d] patchWorkforcemanagementManagementunitTimeofflimitOK  %+v", 200, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitTimeofflimitOK) GetPayload() *models.TimeOffLimit {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitTimeofflimitOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TimeOffLimit)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitTimeofflimitBadRequest creates a PatchWorkforcemanagementManagementunitTimeofflimitBadRequest with default headers values
func NewPatchWorkforcemanagementManagementunitTimeofflimitBadRequest() *PatchWorkforcemanagementManagementunitTimeofflimitBadRequest {
	return &PatchWorkforcemanagementManagementunitTimeofflimitBadRequest{}
}

/*PatchWorkforcemanagementManagementunitTimeofflimitBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PatchWorkforcemanagementManagementunitTimeofflimitBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PatchWorkforcemanagementManagementunitTimeofflimitBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeofflimits/{timeOffLimitId}][%d] patchWorkforcemanagementManagementunitTimeofflimitBadRequest  %+v", 400, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitTimeofflimitBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitTimeofflimitBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitTimeofflimitUnauthorized creates a PatchWorkforcemanagementManagementunitTimeofflimitUnauthorized with default headers values
func NewPatchWorkforcemanagementManagementunitTimeofflimitUnauthorized() *PatchWorkforcemanagementManagementunitTimeofflimitUnauthorized {
	return &PatchWorkforcemanagementManagementunitTimeofflimitUnauthorized{}
}

/*PatchWorkforcemanagementManagementunitTimeofflimitUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PatchWorkforcemanagementManagementunitTimeofflimitUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PatchWorkforcemanagementManagementunitTimeofflimitUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeofflimits/{timeOffLimitId}][%d] patchWorkforcemanagementManagementunitTimeofflimitUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitTimeofflimitUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitTimeofflimitUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitTimeofflimitForbidden creates a PatchWorkforcemanagementManagementunitTimeofflimitForbidden with default headers values
func NewPatchWorkforcemanagementManagementunitTimeofflimitForbidden() *PatchWorkforcemanagementManagementunitTimeofflimitForbidden {
	return &PatchWorkforcemanagementManagementunitTimeofflimitForbidden{}
}

/*PatchWorkforcemanagementManagementunitTimeofflimitForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PatchWorkforcemanagementManagementunitTimeofflimitForbidden struct {
	Payload *models.ErrorBody
}

func (o *PatchWorkforcemanagementManagementunitTimeofflimitForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeofflimits/{timeOffLimitId}][%d] patchWorkforcemanagementManagementunitTimeofflimitForbidden  %+v", 403, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitTimeofflimitForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitTimeofflimitForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitTimeofflimitNotFound creates a PatchWorkforcemanagementManagementunitTimeofflimitNotFound with default headers values
func NewPatchWorkforcemanagementManagementunitTimeofflimitNotFound() *PatchWorkforcemanagementManagementunitTimeofflimitNotFound {
	return &PatchWorkforcemanagementManagementunitTimeofflimitNotFound{}
}

/*PatchWorkforcemanagementManagementunitTimeofflimitNotFound handles this case with default header values.

The requested resource was not found.
*/
type PatchWorkforcemanagementManagementunitTimeofflimitNotFound struct {
	Payload *models.ErrorBody
}

func (o *PatchWorkforcemanagementManagementunitTimeofflimitNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeofflimits/{timeOffLimitId}][%d] patchWorkforcemanagementManagementunitTimeofflimitNotFound  %+v", 404, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitTimeofflimitNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitTimeofflimitNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitTimeofflimitRequestTimeout creates a PatchWorkforcemanagementManagementunitTimeofflimitRequestTimeout with default headers values
func NewPatchWorkforcemanagementManagementunitTimeofflimitRequestTimeout() *PatchWorkforcemanagementManagementunitTimeofflimitRequestTimeout {
	return &PatchWorkforcemanagementManagementunitTimeofflimitRequestTimeout{}
}

/*PatchWorkforcemanagementManagementunitTimeofflimitRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PatchWorkforcemanagementManagementunitTimeofflimitRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PatchWorkforcemanagementManagementunitTimeofflimitRequestTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeofflimits/{timeOffLimitId}][%d] patchWorkforcemanagementManagementunitTimeofflimitRequestTimeout  %+v", 408, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitTimeofflimitRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitTimeofflimitRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitTimeofflimitConflict creates a PatchWorkforcemanagementManagementunitTimeofflimitConflict with default headers values
func NewPatchWorkforcemanagementManagementunitTimeofflimitConflict() *PatchWorkforcemanagementManagementunitTimeofflimitConflict {
	return &PatchWorkforcemanagementManagementunitTimeofflimitConflict{}
}

/*PatchWorkforcemanagementManagementunitTimeofflimitConflict handles this case with default header values.

Conflict
*/
type PatchWorkforcemanagementManagementunitTimeofflimitConflict struct {
	Payload *models.ErrorBody
}

func (o *PatchWorkforcemanagementManagementunitTimeofflimitConflict) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeofflimits/{timeOffLimitId}][%d] patchWorkforcemanagementManagementunitTimeofflimitConflict  %+v", 409, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitTimeofflimitConflict) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitTimeofflimitConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitTimeofflimitRequestEntityTooLarge creates a PatchWorkforcemanagementManagementunitTimeofflimitRequestEntityTooLarge with default headers values
func NewPatchWorkforcemanagementManagementunitTimeofflimitRequestEntityTooLarge() *PatchWorkforcemanagementManagementunitTimeofflimitRequestEntityTooLarge {
	return &PatchWorkforcemanagementManagementunitTimeofflimitRequestEntityTooLarge{}
}

/*PatchWorkforcemanagementManagementunitTimeofflimitRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type PatchWorkforcemanagementManagementunitTimeofflimitRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PatchWorkforcemanagementManagementunitTimeofflimitRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeofflimits/{timeOffLimitId}][%d] patchWorkforcemanagementManagementunitTimeofflimitRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitTimeofflimitRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitTimeofflimitRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitTimeofflimitUnsupportedMediaType creates a PatchWorkforcemanagementManagementunitTimeofflimitUnsupportedMediaType with default headers values
func NewPatchWorkforcemanagementManagementunitTimeofflimitUnsupportedMediaType() *PatchWorkforcemanagementManagementunitTimeofflimitUnsupportedMediaType {
	return &PatchWorkforcemanagementManagementunitTimeofflimitUnsupportedMediaType{}
}

/*PatchWorkforcemanagementManagementunitTimeofflimitUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PatchWorkforcemanagementManagementunitTimeofflimitUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PatchWorkforcemanagementManagementunitTimeofflimitUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeofflimits/{timeOffLimitId}][%d] patchWorkforcemanagementManagementunitTimeofflimitUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitTimeofflimitUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitTimeofflimitUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitTimeofflimitTooManyRequests creates a PatchWorkforcemanagementManagementunitTimeofflimitTooManyRequests with default headers values
func NewPatchWorkforcemanagementManagementunitTimeofflimitTooManyRequests() *PatchWorkforcemanagementManagementunitTimeofflimitTooManyRequests {
	return &PatchWorkforcemanagementManagementunitTimeofflimitTooManyRequests{}
}

/*PatchWorkforcemanagementManagementunitTimeofflimitTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PatchWorkforcemanagementManagementunitTimeofflimitTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PatchWorkforcemanagementManagementunitTimeofflimitTooManyRequests) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeofflimits/{timeOffLimitId}][%d] patchWorkforcemanagementManagementunitTimeofflimitTooManyRequests  %+v", 429, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitTimeofflimitTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitTimeofflimitTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitTimeofflimitInternalServerError creates a PatchWorkforcemanagementManagementunitTimeofflimitInternalServerError with default headers values
func NewPatchWorkforcemanagementManagementunitTimeofflimitInternalServerError() *PatchWorkforcemanagementManagementunitTimeofflimitInternalServerError {
	return &PatchWorkforcemanagementManagementunitTimeofflimitInternalServerError{}
}

/*PatchWorkforcemanagementManagementunitTimeofflimitInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PatchWorkforcemanagementManagementunitTimeofflimitInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PatchWorkforcemanagementManagementunitTimeofflimitInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeofflimits/{timeOffLimitId}][%d] patchWorkforcemanagementManagementunitTimeofflimitInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitTimeofflimitInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitTimeofflimitInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitTimeofflimitServiceUnavailable creates a PatchWorkforcemanagementManagementunitTimeofflimitServiceUnavailable with default headers values
func NewPatchWorkforcemanagementManagementunitTimeofflimitServiceUnavailable() *PatchWorkforcemanagementManagementunitTimeofflimitServiceUnavailable {
	return &PatchWorkforcemanagementManagementunitTimeofflimitServiceUnavailable{}
}

/*PatchWorkforcemanagementManagementunitTimeofflimitServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PatchWorkforcemanagementManagementunitTimeofflimitServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PatchWorkforcemanagementManagementunitTimeofflimitServiceUnavailable) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeofflimits/{timeOffLimitId}][%d] patchWorkforcemanagementManagementunitTimeofflimitServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitTimeofflimitServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitTimeofflimitServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkforcemanagementManagementunitTimeofflimitGatewayTimeout creates a PatchWorkforcemanagementManagementunitTimeofflimitGatewayTimeout with default headers values
func NewPatchWorkforcemanagementManagementunitTimeofflimitGatewayTimeout() *PatchWorkforcemanagementManagementunitTimeofflimitGatewayTimeout {
	return &PatchWorkforcemanagementManagementunitTimeofflimitGatewayTimeout{}
}

/*PatchWorkforcemanagementManagementunitTimeofflimitGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PatchWorkforcemanagementManagementunitTimeofflimitGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PatchWorkforcemanagementManagementunitTimeofflimitGatewayTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/workforcemanagement/managementunits/{managementUnitId}/timeofflimits/{timeOffLimitId}][%d] patchWorkforcemanagementManagementunitTimeofflimitGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PatchWorkforcemanagementManagementunitTimeofflimitGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchWorkforcemanagementManagementunitTimeofflimitGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
