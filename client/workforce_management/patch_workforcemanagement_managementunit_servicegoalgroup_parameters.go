// Code generated by go-swagger; DO NOT EDIT.

package workforce_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPatchWorkforcemanagementManagementunitServicegoalgroupParams creates a new PatchWorkforcemanagementManagementunitServicegoalgroupParams object
// with the default values initialized.
func NewPatchWorkforcemanagementManagementunitServicegoalgroupParams() *PatchWorkforcemanagementManagementunitServicegoalgroupParams {
	var ()
	return &PatchWorkforcemanagementManagementunitServicegoalgroupParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPatchWorkforcemanagementManagementunitServicegoalgroupParamsWithTimeout creates a new PatchWorkforcemanagementManagementunitServicegoalgroupParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPatchWorkforcemanagementManagementunitServicegoalgroupParamsWithTimeout(timeout time.Duration) *PatchWorkforcemanagementManagementunitServicegoalgroupParams {
	var ()
	return &PatchWorkforcemanagementManagementunitServicegoalgroupParams{

		timeout: timeout,
	}
}

// NewPatchWorkforcemanagementManagementunitServicegoalgroupParamsWithContext creates a new PatchWorkforcemanagementManagementunitServicegoalgroupParams object
// with the default values initialized, and the ability to set a context for a request
func NewPatchWorkforcemanagementManagementunitServicegoalgroupParamsWithContext(ctx context.Context) *PatchWorkforcemanagementManagementunitServicegoalgroupParams {
	var ()
	return &PatchWorkforcemanagementManagementunitServicegoalgroupParams{

		Context: ctx,
	}
}

// NewPatchWorkforcemanagementManagementunitServicegoalgroupParamsWithHTTPClient creates a new PatchWorkforcemanagementManagementunitServicegoalgroupParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPatchWorkforcemanagementManagementunitServicegoalgroupParamsWithHTTPClient(client *http.Client) *PatchWorkforcemanagementManagementunitServicegoalgroupParams {
	var ()
	return &PatchWorkforcemanagementManagementunitServicegoalgroupParams{
		HTTPClient: client,
	}
}

/*PatchWorkforcemanagementManagementunitServicegoalgroupParams contains all the parameters to send to the API endpoint
for the patch workforcemanagement managementunit servicegoalgroup operation typically these are written to a http.Request
*/
type PatchWorkforcemanagementManagementunitServicegoalgroupParams struct {

	/*ManagementUnitID
	  (Deprecated/gone): The ID of the management unit, or 'mine' for the management unit of the logged-in user.

	*/
	ManagementUnitID string
	/*ServiceGoalGroupID
	  Gone. The ID of the service goal group to update

	*/
	ServiceGoalGroupID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the patch workforcemanagement managementunit servicegoalgroup params
func (o *PatchWorkforcemanagementManagementunitServicegoalgroupParams) WithTimeout(timeout time.Duration) *PatchWorkforcemanagementManagementunitServicegoalgroupParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the patch workforcemanagement managementunit servicegoalgroup params
func (o *PatchWorkforcemanagementManagementunitServicegoalgroupParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the patch workforcemanagement managementunit servicegoalgroup params
func (o *PatchWorkforcemanagementManagementunitServicegoalgroupParams) WithContext(ctx context.Context) *PatchWorkforcemanagementManagementunitServicegoalgroupParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the patch workforcemanagement managementunit servicegoalgroup params
func (o *PatchWorkforcemanagementManagementunitServicegoalgroupParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the patch workforcemanagement managementunit servicegoalgroup params
func (o *PatchWorkforcemanagementManagementunitServicegoalgroupParams) WithHTTPClient(client *http.Client) *PatchWorkforcemanagementManagementunitServicegoalgroupParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the patch workforcemanagement managementunit servicegoalgroup params
func (o *PatchWorkforcemanagementManagementunitServicegoalgroupParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithManagementUnitID adds the managementUnitID to the patch workforcemanagement managementunit servicegoalgroup params
func (o *PatchWorkforcemanagementManagementunitServicegoalgroupParams) WithManagementUnitID(managementUnitID string) *PatchWorkforcemanagementManagementunitServicegoalgroupParams {
	o.SetManagementUnitID(managementUnitID)
	return o
}

// SetManagementUnitID adds the managementUnitId to the patch workforcemanagement managementunit servicegoalgroup params
func (o *PatchWorkforcemanagementManagementunitServicegoalgroupParams) SetManagementUnitID(managementUnitID string) {
	o.ManagementUnitID = managementUnitID
}

// WithServiceGoalGroupID adds the serviceGoalGroupID to the patch workforcemanagement managementunit servicegoalgroup params
func (o *PatchWorkforcemanagementManagementunitServicegoalgroupParams) WithServiceGoalGroupID(serviceGoalGroupID string) *PatchWorkforcemanagementManagementunitServicegoalgroupParams {
	o.SetServiceGoalGroupID(serviceGoalGroupID)
	return o
}

// SetServiceGoalGroupID adds the serviceGoalGroupId to the patch workforcemanagement managementunit servicegoalgroup params
func (o *PatchWorkforcemanagementManagementunitServicegoalgroupParams) SetServiceGoalGroupID(serviceGoalGroupID string) {
	o.ServiceGoalGroupID = serviceGoalGroupID
}

// WriteToRequest writes these params to a swagger request
func (o *PatchWorkforcemanagementManagementunitServicegoalgroupParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param managementUnitId
	if err := r.SetPathParam("managementUnitId", o.ManagementUnitID); err != nil {
		return err
	}

	// path param serviceGoalGroupId
	if err := r.SetPathParam("serviceGoalGroupId", o.ServiceGoalGroupID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
