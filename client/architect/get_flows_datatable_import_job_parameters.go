// Code generated by go-swagger; DO NOT EDIT.

package architect

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetFlowsDatatableImportJobParams creates a new GetFlowsDatatableImportJobParams object
// with the default values initialized.
func NewGetFlowsDatatableImportJobParams() *GetFlowsDatatableImportJobParams {
	var ()
	return &GetFlowsDatatableImportJobParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetFlowsDatatableImportJobParamsWithTimeout creates a new GetFlowsDatatableImportJobParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetFlowsDatatableImportJobParamsWithTimeout(timeout time.Duration) *GetFlowsDatatableImportJobParams {
	var ()
	return &GetFlowsDatatableImportJobParams{

		timeout: timeout,
	}
}

// NewGetFlowsDatatableImportJobParamsWithContext creates a new GetFlowsDatatableImportJobParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetFlowsDatatableImportJobParamsWithContext(ctx context.Context) *GetFlowsDatatableImportJobParams {
	var ()
	return &GetFlowsDatatableImportJobParams{

		Context: ctx,
	}
}

// NewGetFlowsDatatableImportJobParamsWithHTTPClient creates a new GetFlowsDatatableImportJobParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetFlowsDatatableImportJobParamsWithHTTPClient(client *http.Client) *GetFlowsDatatableImportJobParams {
	var ()
	return &GetFlowsDatatableImportJobParams{
		HTTPClient: client,
	}
}

/*GetFlowsDatatableImportJobParams contains all the parameters to send to the API endpoint
for the get flows datatable import job operation typically these are written to a http.Request
*/
type GetFlowsDatatableImportJobParams struct {

	/*DatatableID
	  id of datatable

	*/
	DatatableID string
	/*ImportJobID
	  id of import job

	*/
	ImportJobID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get flows datatable import job params
func (o *GetFlowsDatatableImportJobParams) WithTimeout(timeout time.Duration) *GetFlowsDatatableImportJobParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get flows datatable import job params
func (o *GetFlowsDatatableImportJobParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get flows datatable import job params
func (o *GetFlowsDatatableImportJobParams) WithContext(ctx context.Context) *GetFlowsDatatableImportJobParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get flows datatable import job params
func (o *GetFlowsDatatableImportJobParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get flows datatable import job params
func (o *GetFlowsDatatableImportJobParams) WithHTTPClient(client *http.Client) *GetFlowsDatatableImportJobParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get flows datatable import job params
func (o *GetFlowsDatatableImportJobParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDatatableID adds the datatableID to the get flows datatable import job params
func (o *GetFlowsDatatableImportJobParams) WithDatatableID(datatableID string) *GetFlowsDatatableImportJobParams {
	o.SetDatatableID(datatableID)
	return o
}

// SetDatatableID adds the datatableId to the get flows datatable import job params
func (o *GetFlowsDatatableImportJobParams) SetDatatableID(datatableID string) {
	o.DatatableID = datatableID
}

// WithImportJobID adds the importJobID to the get flows datatable import job params
func (o *GetFlowsDatatableImportJobParams) WithImportJobID(importJobID string) *GetFlowsDatatableImportJobParams {
	o.SetImportJobID(importJobID)
	return o
}

// SetImportJobID adds the importJobId to the get flows datatable import job params
func (o *GetFlowsDatatableImportJobParams) SetImportJobID(importJobID string) {
	o.ImportJobID = importJobID
}

// WriteToRequest writes these params to a swagger request
func (o *GetFlowsDatatableImportJobParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param datatableId
	if err := r.SetPathParam("datatableId", o.DatatableID); err != nil {
		return err
	}

	// path param importJobId
	if err := r.SetPathParam("importJobId", o.ImportJobID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
