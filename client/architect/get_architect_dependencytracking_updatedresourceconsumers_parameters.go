// Code generated by go-swagger; DO NOT EDIT.

package architect

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetArchitectDependencytrackingUpdatedresourceconsumersParams creates a new GetArchitectDependencytrackingUpdatedresourceconsumersParams object
// with the default values initialized.
func NewGetArchitectDependencytrackingUpdatedresourceconsumersParams() *GetArchitectDependencytrackingUpdatedresourceconsumersParams {
	var (
		consumedResourcesDefault = bool(false)
		pageNumberDefault        = int32(1)
		pageSizeDefault          = int32(25)
	)
	return &GetArchitectDependencytrackingUpdatedresourceconsumersParams{
		ConsumedResources: &consumedResourcesDefault,
		PageNumber:        &pageNumberDefault,
		PageSize:          &pageSizeDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewGetArchitectDependencytrackingUpdatedresourceconsumersParamsWithTimeout creates a new GetArchitectDependencytrackingUpdatedresourceconsumersParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetArchitectDependencytrackingUpdatedresourceconsumersParamsWithTimeout(timeout time.Duration) *GetArchitectDependencytrackingUpdatedresourceconsumersParams {
	var (
		consumedResourcesDefault = bool(false)
		pageNumberDefault        = int32(1)
		pageSizeDefault          = int32(25)
	)
	return &GetArchitectDependencytrackingUpdatedresourceconsumersParams{
		ConsumedResources: &consumedResourcesDefault,
		PageNumber:        &pageNumberDefault,
		PageSize:          &pageSizeDefault,

		timeout: timeout,
	}
}

// NewGetArchitectDependencytrackingUpdatedresourceconsumersParamsWithContext creates a new GetArchitectDependencytrackingUpdatedresourceconsumersParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetArchitectDependencytrackingUpdatedresourceconsumersParamsWithContext(ctx context.Context) *GetArchitectDependencytrackingUpdatedresourceconsumersParams {
	var (
		consumedResourcesDefault = bool(false)
		pageNumberDefault        = int32(1)
		pageSizeDefault          = int32(25)
	)
	return &GetArchitectDependencytrackingUpdatedresourceconsumersParams{
		ConsumedResources: &consumedResourcesDefault,
		PageNumber:        &pageNumberDefault,
		PageSize:          &pageSizeDefault,

		Context: ctx,
	}
}

// NewGetArchitectDependencytrackingUpdatedresourceconsumersParamsWithHTTPClient creates a new GetArchitectDependencytrackingUpdatedresourceconsumersParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetArchitectDependencytrackingUpdatedresourceconsumersParamsWithHTTPClient(client *http.Client) *GetArchitectDependencytrackingUpdatedresourceconsumersParams {
	var (
		consumedResourcesDefault = bool(false)
		pageNumberDefault        = int32(1)
		pageSizeDefault          = int32(25)
	)
	return &GetArchitectDependencytrackingUpdatedresourceconsumersParams{
		ConsumedResources: &consumedResourcesDefault,
		PageNumber:        &pageNumberDefault,
		PageSize:          &pageSizeDefault,
		HTTPClient:        client,
	}
}

/*GetArchitectDependencytrackingUpdatedresourceconsumersParams contains all the parameters to send to the API endpoint
for the get architect dependencytracking updatedresourceconsumers operation typically these are written to a http.Request
*/
type GetArchitectDependencytrackingUpdatedresourceconsumersParams struct {

	/*ConsumedResourceType
	  Resource type(s) to return

	*/
	ConsumedResourceType []string
	/*ConsumedResources
	  Return consumed resources?

	*/
	ConsumedResources *bool
	/*Name
	  Name to search for

	*/
	Name *string
	/*ObjectType
	  Object type(s) to search for

	*/
	ObjectType []string
	/*PageNumber
	  Page number

	*/
	PageNumber *int32
	/*PageSize
	  Page size

	*/
	PageSize *int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get architect dependencytracking updatedresourceconsumers params
func (o *GetArchitectDependencytrackingUpdatedresourceconsumersParams) WithTimeout(timeout time.Duration) *GetArchitectDependencytrackingUpdatedresourceconsumersParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get architect dependencytracking updatedresourceconsumers params
func (o *GetArchitectDependencytrackingUpdatedresourceconsumersParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get architect dependencytracking updatedresourceconsumers params
func (o *GetArchitectDependencytrackingUpdatedresourceconsumersParams) WithContext(ctx context.Context) *GetArchitectDependencytrackingUpdatedresourceconsumersParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get architect dependencytracking updatedresourceconsumers params
func (o *GetArchitectDependencytrackingUpdatedresourceconsumersParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get architect dependencytracking updatedresourceconsumers params
func (o *GetArchitectDependencytrackingUpdatedresourceconsumersParams) WithHTTPClient(client *http.Client) *GetArchitectDependencytrackingUpdatedresourceconsumersParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get architect dependencytracking updatedresourceconsumers params
func (o *GetArchitectDependencytrackingUpdatedresourceconsumersParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithConsumedResourceType adds the consumedResourceType to the get architect dependencytracking updatedresourceconsumers params
func (o *GetArchitectDependencytrackingUpdatedresourceconsumersParams) WithConsumedResourceType(consumedResourceType []string) *GetArchitectDependencytrackingUpdatedresourceconsumersParams {
	o.SetConsumedResourceType(consumedResourceType)
	return o
}

// SetConsumedResourceType adds the consumedResourceType to the get architect dependencytracking updatedresourceconsumers params
func (o *GetArchitectDependencytrackingUpdatedresourceconsumersParams) SetConsumedResourceType(consumedResourceType []string) {
	o.ConsumedResourceType = consumedResourceType
}

// WithConsumedResources adds the consumedResources to the get architect dependencytracking updatedresourceconsumers params
func (o *GetArchitectDependencytrackingUpdatedresourceconsumersParams) WithConsumedResources(consumedResources *bool) *GetArchitectDependencytrackingUpdatedresourceconsumersParams {
	o.SetConsumedResources(consumedResources)
	return o
}

// SetConsumedResources adds the consumedResources to the get architect dependencytracking updatedresourceconsumers params
func (o *GetArchitectDependencytrackingUpdatedresourceconsumersParams) SetConsumedResources(consumedResources *bool) {
	o.ConsumedResources = consumedResources
}

// WithName adds the name to the get architect dependencytracking updatedresourceconsumers params
func (o *GetArchitectDependencytrackingUpdatedresourceconsumersParams) WithName(name *string) *GetArchitectDependencytrackingUpdatedresourceconsumersParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the get architect dependencytracking updatedresourceconsumers params
func (o *GetArchitectDependencytrackingUpdatedresourceconsumersParams) SetName(name *string) {
	o.Name = name
}

// WithObjectType adds the objectType to the get architect dependencytracking updatedresourceconsumers params
func (o *GetArchitectDependencytrackingUpdatedresourceconsumersParams) WithObjectType(objectType []string) *GetArchitectDependencytrackingUpdatedresourceconsumersParams {
	o.SetObjectType(objectType)
	return o
}

// SetObjectType adds the objectType to the get architect dependencytracking updatedresourceconsumers params
func (o *GetArchitectDependencytrackingUpdatedresourceconsumersParams) SetObjectType(objectType []string) {
	o.ObjectType = objectType
}

// WithPageNumber adds the pageNumber to the get architect dependencytracking updatedresourceconsumers params
func (o *GetArchitectDependencytrackingUpdatedresourceconsumersParams) WithPageNumber(pageNumber *int32) *GetArchitectDependencytrackingUpdatedresourceconsumersParams {
	o.SetPageNumber(pageNumber)
	return o
}

// SetPageNumber adds the pageNumber to the get architect dependencytracking updatedresourceconsumers params
func (o *GetArchitectDependencytrackingUpdatedresourceconsumersParams) SetPageNumber(pageNumber *int32) {
	o.PageNumber = pageNumber
}

// WithPageSize adds the pageSize to the get architect dependencytracking updatedresourceconsumers params
func (o *GetArchitectDependencytrackingUpdatedresourceconsumersParams) WithPageSize(pageSize *int32) *GetArchitectDependencytrackingUpdatedresourceconsumersParams {
	o.SetPageSize(pageSize)
	return o
}

// SetPageSize adds the pageSize to the get architect dependencytracking updatedresourceconsumers params
func (o *GetArchitectDependencytrackingUpdatedresourceconsumersParams) SetPageSize(pageSize *int32) {
	o.PageSize = pageSize
}

// WriteToRequest writes these params to a swagger request
func (o *GetArchitectDependencytrackingUpdatedresourceconsumersParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	valuesConsumedResourceType := o.ConsumedResourceType

	joinedConsumedResourceType := swag.JoinByFormat(valuesConsumedResourceType, "multi")
	// query array param consumedResourceType
	if err := r.SetQueryParam("consumedResourceType", joinedConsumedResourceType...); err != nil {
		return err
	}

	if o.ConsumedResources != nil {

		// query param consumedResources
		var qrConsumedResources bool
		if o.ConsumedResources != nil {
			qrConsumedResources = *o.ConsumedResources
		}
		qConsumedResources := swag.FormatBool(qrConsumedResources)
		if qConsumedResources != "" {
			if err := r.SetQueryParam("consumedResources", qConsumedResources); err != nil {
				return err
			}
		}

	}

	if o.Name != nil {

		// query param name
		var qrName string
		if o.Name != nil {
			qrName = *o.Name
		}
		qName := qrName
		if qName != "" {
			if err := r.SetQueryParam("name", qName); err != nil {
				return err
			}
		}

	}

	valuesObjectType := o.ObjectType

	joinedObjectType := swag.JoinByFormat(valuesObjectType, "multi")
	// query array param objectType
	if err := r.SetQueryParam("objectType", joinedObjectType...); err != nil {
		return err
	}

	if o.PageNumber != nil {

		// query param pageNumber
		var qrPageNumber int32
		if o.PageNumber != nil {
			qrPageNumber = *o.PageNumber
		}
		qPageNumber := swag.FormatInt32(qrPageNumber)
		if qPageNumber != "" {
			if err := r.SetQueryParam("pageNumber", qPageNumber); err != nil {
				return err
			}
		}

	}

	if o.PageSize != nil {

		// query param pageSize
		var qrPageSize int32
		if o.PageSize != nil {
			qrPageSize = *o.PageSize
		}
		qPageSize := swag.FormatInt32(qrPageSize)
		if qPageSize != "" {
			if err := r.SetQueryParam("pageSize", qPageSize); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
