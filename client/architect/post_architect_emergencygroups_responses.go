// Code generated by go-swagger; DO NOT EDIT.

package architect

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostArchitectEmergencygroupsReader is a Reader for the PostArchitectEmergencygroups structure.
type PostArchitectEmergencygroupsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostArchitectEmergencygroupsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostArchitectEmergencygroupsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostArchitectEmergencygroupsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostArchitectEmergencygroupsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostArchitectEmergencygroupsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostArchitectEmergencygroupsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostArchitectEmergencygroupsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostArchitectEmergencygroupsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostArchitectEmergencygroupsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostArchitectEmergencygroupsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostArchitectEmergencygroupsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostArchitectEmergencygroupsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostArchitectEmergencygroupsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostArchitectEmergencygroupsOK creates a PostArchitectEmergencygroupsOK with default headers values
func NewPostArchitectEmergencygroupsOK() *PostArchitectEmergencygroupsOK {
	return &PostArchitectEmergencygroupsOK{}
}

/*
PostArchitectEmergencygroupsOK describes a response with status code 200, with default header values.

successful operation
*/
type PostArchitectEmergencygroupsOK struct {
	Payload *models.EmergencyGroup
}

// IsSuccess returns true when this post architect emergencygroups o k response has a 2xx status code
func (o *PostArchitectEmergencygroupsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post architect emergencygroups o k response has a 3xx status code
func (o *PostArchitectEmergencygroupsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post architect emergencygroups o k response has a 4xx status code
func (o *PostArchitectEmergencygroupsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post architect emergencygroups o k response has a 5xx status code
func (o *PostArchitectEmergencygroupsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post architect emergencygroups o k response a status code equal to that given
func (o *PostArchitectEmergencygroupsOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostArchitectEmergencygroupsOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/architect/emergencygroups][%d] postArchitectEmergencygroupsOK  %+v", 200, o.Payload)
}

func (o *PostArchitectEmergencygroupsOK) String() string {
	return fmt.Sprintf("[POST /api/v2/architect/emergencygroups][%d] postArchitectEmergencygroupsOK  %+v", 200, o.Payload)
}

func (o *PostArchitectEmergencygroupsOK) GetPayload() *models.EmergencyGroup {
	return o.Payload
}

func (o *PostArchitectEmergencygroupsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EmergencyGroup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostArchitectEmergencygroupsBadRequest creates a PostArchitectEmergencygroupsBadRequest with default headers values
func NewPostArchitectEmergencygroupsBadRequest() *PostArchitectEmergencygroupsBadRequest {
	return &PostArchitectEmergencygroupsBadRequest{}
}

/*
PostArchitectEmergencygroupsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostArchitectEmergencygroupsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post architect emergencygroups bad request response has a 2xx status code
func (o *PostArchitectEmergencygroupsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post architect emergencygroups bad request response has a 3xx status code
func (o *PostArchitectEmergencygroupsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post architect emergencygroups bad request response has a 4xx status code
func (o *PostArchitectEmergencygroupsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post architect emergencygroups bad request response has a 5xx status code
func (o *PostArchitectEmergencygroupsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post architect emergencygroups bad request response a status code equal to that given
func (o *PostArchitectEmergencygroupsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostArchitectEmergencygroupsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/architect/emergencygroups][%d] postArchitectEmergencygroupsBadRequest  %+v", 400, o.Payload)
}

func (o *PostArchitectEmergencygroupsBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/architect/emergencygroups][%d] postArchitectEmergencygroupsBadRequest  %+v", 400, o.Payload)
}

func (o *PostArchitectEmergencygroupsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostArchitectEmergencygroupsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostArchitectEmergencygroupsUnauthorized creates a PostArchitectEmergencygroupsUnauthorized with default headers values
func NewPostArchitectEmergencygroupsUnauthorized() *PostArchitectEmergencygroupsUnauthorized {
	return &PostArchitectEmergencygroupsUnauthorized{}
}

/*
PostArchitectEmergencygroupsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostArchitectEmergencygroupsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post architect emergencygroups unauthorized response has a 2xx status code
func (o *PostArchitectEmergencygroupsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post architect emergencygroups unauthorized response has a 3xx status code
func (o *PostArchitectEmergencygroupsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post architect emergencygroups unauthorized response has a 4xx status code
func (o *PostArchitectEmergencygroupsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post architect emergencygroups unauthorized response has a 5xx status code
func (o *PostArchitectEmergencygroupsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post architect emergencygroups unauthorized response a status code equal to that given
func (o *PostArchitectEmergencygroupsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostArchitectEmergencygroupsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/architect/emergencygroups][%d] postArchitectEmergencygroupsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostArchitectEmergencygroupsUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/architect/emergencygroups][%d] postArchitectEmergencygroupsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostArchitectEmergencygroupsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostArchitectEmergencygroupsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostArchitectEmergencygroupsForbidden creates a PostArchitectEmergencygroupsForbidden with default headers values
func NewPostArchitectEmergencygroupsForbidden() *PostArchitectEmergencygroupsForbidden {
	return &PostArchitectEmergencygroupsForbidden{}
}

/*
PostArchitectEmergencygroupsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostArchitectEmergencygroupsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post architect emergencygroups forbidden response has a 2xx status code
func (o *PostArchitectEmergencygroupsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post architect emergencygroups forbidden response has a 3xx status code
func (o *PostArchitectEmergencygroupsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post architect emergencygroups forbidden response has a 4xx status code
func (o *PostArchitectEmergencygroupsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post architect emergencygroups forbidden response has a 5xx status code
func (o *PostArchitectEmergencygroupsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post architect emergencygroups forbidden response a status code equal to that given
func (o *PostArchitectEmergencygroupsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostArchitectEmergencygroupsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/architect/emergencygroups][%d] postArchitectEmergencygroupsForbidden  %+v", 403, o.Payload)
}

func (o *PostArchitectEmergencygroupsForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/architect/emergencygroups][%d] postArchitectEmergencygroupsForbidden  %+v", 403, o.Payload)
}

func (o *PostArchitectEmergencygroupsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostArchitectEmergencygroupsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostArchitectEmergencygroupsNotFound creates a PostArchitectEmergencygroupsNotFound with default headers values
func NewPostArchitectEmergencygroupsNotFound() *PostArchitectEmergencygroupsNotFound {
	return &PostArchitectEmergencygroupsNotFound{}
}

/*
PostArchitectEmergencygroupsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostArchitectEmergencygroupsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post architect emergencygroups not found response has a 2xx status code
func (o *PostArchitectEmergencygroupsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post architect emergencygroups not found response has a 3xx status code
func (o *PostArchitectEmergencygroupsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post architect emergencygroups not found response has a 4xx status code
func (o *PostArchitectEmergencygroupsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post architect emergencygroups not found response has a 5xx status code
func (o *PostArchitectEmergencygroupsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post architect emergencygroups not found response a status code equal to that given
func (o *PostArchitectEmergencygroupsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostArchitectEmergencygroupsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/architect/emergencygroups][%d] postArchitectEmergencygroupsNotFound  %+v", 404, o.Payload)
}

func (o *PostArchitectEmergencygroupsNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/architect/emergencygroups][%d] postArchitectEmergencygroupsNotFound  %+v", 404, o.Payload)
}

func (o *PostArchitectEmergencygroupsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostArchitectEmergencygroupsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostArchitectEmergencygroupsRequestTimeout creates a PostArchitectEmergencygroupsRequestTimeout with default headers values
func NewPostArchitectEmergencygroupsRequestTimeout() *PostArchitectEmergencygroupsRequestTimeout {
	return &PostArchitectEmergencygroupsRequestTimeout{}
}

/*
PostArchitectEmergencygroupsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostArchitectEmergencygroupsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post architect emergencygroups request timeout response has a 2xx status code
func (o *PostArchitectEmergencygroupsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post architect emergencygroups request timeout response has a 3xx status code
func (o *PostArchitectEmergencygroupsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post architect emergencygroups request timeout response has a 4xx status code
func (o *PostArchitectEmergencygroupsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post architect emergencygroups request timeout response has a 5xx status code
func (o *PostArchitectEmergencygroupsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post architect emergencygroups request timeout response a status code equal to that given
func (o *PostArchitectEmergencygroupsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostArchitectEmergencygroupsRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/architect/emergencygroups][%d] postArchitectEmergencygroupsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostArchitectEmergencygroupsRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/architect/emergencygroups][%d] postArchitectEmergencygroupsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostArchitectEmergencygroupsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostArchitectEmergencygroupsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostArchitectEmergencygroupsRequestEntityTooLarge creates a PostArchitectEmergencygroupsRequestEntityTooLarge with default headers values
func NewPostArchitectEmergencygroupsRequestEntityTooLarge() *PostArchitectEmergencygroupsRequestEntityTooLarge {
	return &PostArchitectEmergencygroupsRequestEntityTooLarge{}
}

/*
PostArchitectEmergencygroupsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PostArchitectEmergencygroupsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post architect emergencygroups request entity too large response has a 2xx status code
func (o *PostArchitectEmergencygroupsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post architect emergencygroups request entity too large response has a 3xx status code
func (o *PostArchitectEmergencygroupsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post architect emergencygroups request entity too large response has a 4xx status code
func (o *PostArchitectEmergencygroupsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post architect emergencygroups request entity too large response has a 5xx status code
func (o *PostArchitectEmergencygroupsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post architect emergencygroups request entity too large response a status code equal to that given
func (o *PostArchitectEmergencygroupsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostArchitectEmergencygroupsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/architect/emergencygroups][%d] postArchitectEmergencygroupsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostArchitectEmergencygroupsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/architect/emergencygroups][%d] postArchitectEmergencygroupsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostArchitectEmergencygroupsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostArchitectEmergencygroupsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostArchitectEmergencygroupsUnsupportedMediaType creates a PostArchitectEmergencygroupsUnsupportedMediaType with default headers values
func NewPostArchitectEmergencygroupsUnsupportedMediaType() *PostArchitectEmergencygroupsUnsupportedMediaType {
	return &PostArchitectEmergencygroupsUnsupportedMediaType{}
}

/*
PostArchitectEmergencygroupsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostArchitectEmergencygroupsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post architect emergencygroups unsupported media type response has a 2xx status code
func (o *PostArchitectEmergencygroupsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post architect emergencygroups unsupported media type response has a 3xx status code
func (o *PostArchitectEmergencygroupsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post architect emergencygroups unsupported media type response has a 4xx status code
func (o *PostArchitectEmergencygroupsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post architect emergencygroups unsupported media type response has a 5xx status code
func (o *PostArchitectEmergencygroupsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post architect emergencygroups unsupported media type response a status code equal to that given
func (o *PostArchitectEmergencygroupsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostArchitectEmergencygroupsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/architect/emergencygroups][%d] postArchitectEmergencygroupsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostArchitectEmergencygroupsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/architect/emergencygroups][%d] postArchitectEmergencygroupsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostArchitectEmergencygroupsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostArchitectEmergencygroupsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostArchitectEmergencygroupsTooManyRequests creates a PostArchitectEmergencygroupsTooManyRequests with default headers values
func NewPostArchitectEmergencygroupsTooManyRequests() *PostArchitectEmergencygroupsTooManyRequests {
	return &PostArchitectEmergencygroupsTooManyRequests{}
}

/*
PostArchitectEmergencygroupsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostArchitectEmergencygroupsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post architect emergencygroups too many requests response has a 2xx status code
func (o *PostArchitectEmergencygroupsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post architect emergencygroups too many requests response has a 3xx status code
func (o *PostArchitectEmergencygroupsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post architect emergencygroups too many requests response has a 4xx status code
func (o *PostArchitectEmergencygroupsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post architect emergencygroups too many requests response has a 5xx status code
func (o *PostArchitectEmergencygroupsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post architect emergencygroups too many requests response a status code equal to that given
func (o *PostArchitectEmergencygroupsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostArchitectEmergencygroupsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/architect/emergencygroups][%d] postArchitectEmergencygroupsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostArchitectEmergencygroupsTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/architect/emergencygroups][%d] postArchitectEmergencygroupsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostArchitectEmergencygroupsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostArchitectEmergencygroupsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostArchitectEmergencygroupsInternalServerError creates a PostArchitectEmergencygroupsInternalServerError with default headers values
func NewPostArchitectEmergencygroupsInternalServerError() *PostArchitectEmergencygroupsInternalServerError {
	return &PostArchitectEmergencygroupsInternalServerError{}
}

/*
PostArchitectEmergencygroupsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostArchitectEmergencygroupsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post architect emergencygroups internal server error response has a 2xx status code
func (o *PostArchitectEmergencygroupsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post architect emergencygroups internal server error response has a 3xx status code
func (o *PostArchitectEmergencygroupsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post architect emergencygroups internal server error response has a 4xx status code
func (o *PostArchitectEmergencygroupsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post architect emergencygroups internal server error response has a 5xx status code
func (o *PostArchitectEmergencygroupsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post architect emergencygroups internal server error response a status code equal to that given
func (o *PostArchitectEmergencygroupsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostArchitectEmergencygroupsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/architect/emergencygroups][%d] postArchitectEmergencygroupsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostArchitectEmergencygroupsInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/architect/emergencygroups][%d] postArchitectEmergencygroupsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostArchitectEmergencygroupsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostArchitectEmergencygroupsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostArchitectEmergencygroupsServiceUnavailable creates a PostArchitectEmergencygroupsServiceUnavailable with default headers values
func NewPostArchitectEmergencygroupsServiceUnavailable() *PostArchitectEmergencygroupsServiceUnavailable {
	return &PostArchitectEmergencygroupsServiceUnavailable{}
}

/*
PostArchitectEmergencygroupsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostArchitectEmergencygroupsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post architect emergencygroups service unavailable response has a 2xx status code
func (o *PostArchitectEmergencygroupsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post architect emergencygroups service unavailable response has a 3xx status code
func (o *PostArchitectEmergencygroupsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post architect emergencygroups service unavailable response has a 4xx status code
func (o *PostArchitectEmergencygroupsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post architect emergencygroups service unavailable response has a 5xx status code
func (o *PostArchitectEmergencygroupsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post architect emergencygroups service unavailable response a status code equal to that given
func (o *PostArchitectEmergencygroupsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostArchitectEmergencygroupsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/architect/emergencygroups][%d] postArchitectEmergencygroupsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostArchitectEmergencygroupsServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/architect/emergencygroups][%d] postArchitectEmergencygroupsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostArchitectEmergencygroupsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostArchitectEmergencygroupsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostArchitectEmergencygroupsGatewayTimeout creates a PostArchitectEmergencygroupsGatewayTimeout with default headers values
func NewPostArchitectEmergencygroupsGatewayTimeout() *PostArchitectEmergencygroupsGatewayTimeout {
	return &PostArchitectEmergencygroupsGatewayTimeout{}
}

/*
PostArchitectEmergencygroupsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostArchitectEmergencygroupsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post architect emergencygroups gateway timeout response has a 2xx status code
func (o *PostArchitectEmergencygroupsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post architect emergencygroups gateway timeout response has a 3xx status code
func (o *PostArchitectEmergencygroupsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post architect emergencygroups gateway timeout response has a 4xx status code
func (o *PostArchitectEmergencygroupsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post architect emergencygroups gateway timeout response has a 5xx status code
func (o *PostArchitectEmergencygroupsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post architect emergencygroups gateway timeout response a status code equal to that given
func (o *PostArchitectEmergencygroupsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostArchitectEmergencygroupsGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/architect/emergencygroups][%d] postArchitectEmergencygroupsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostArchitectEmergencygroupsGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/architect/emergencygroups][%d] postArchitectEmergencygroupsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostArchitectEmergencygroupsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostArchitectEmergencygroupsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
