// Code generated by go-swagger; DO NOT EDIT.

package architect

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetFlowVersionsReader is a Reader for the GetFlowVersions structure.
type GetFlowVersionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFlowVersionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFlowVersionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetFlowVersionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetFlowVersionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetFlowVersionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetFlowVersionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetFlowVersionsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewGetFlowVersionsGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetFlowVersionsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetFlowVersionsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetFlowVersionsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetFlowVersionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetFlowVersionsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetFlowVersionsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetFlowVersionsOK creates a GetFlowVersionsOK with default headers values
func NewGetFlowVersionsOK() *GetFlowVersionsOK {
	return &GetFlowVersionsOK{}
}

/*
GetFlowVersionsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetFlowVersionsOK struct {
	Payload *models.FlowVersionEntityListing
}

// IsSuccess returns true when this get flow versions o k response has a 2xx status code
func (o *GetFlowVersionsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get flow versions o k response has a 3xx status code
func (o *GetFlowVersionsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow versions o k response has a 4xx status code
func (o *GetFlowVersionsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get flow versions o k response has a 5xx status code
func (o *GetFlowVersionsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get flow versions o k response a status code equal to that given
func (o *GetFlowVersionsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetFlowVersionsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/versions][%d] getFlowVersionsOK  %+v", 200, o.Payload)
}

func (o *GetFlowVersionsOK) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/versions][%d] getFlowVersionsOK  %+v", 200, o.Payload)
}

func (o *GetFlowVersionsOK) GetPayload() *models.FlowVersionEntityListing {
	return o.Payload
}

func (o *GetFlowVersionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FlowVersionEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowVersionsBadRequest creates a GetFlowVersionsBadRequest with default headers values
func NewGetFlowVersionsBadRequest() *GetFlowVersionsBadRequest {
	return &GetFlowVersionsBadRequest{}
}

/*
GetFlowVersionsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetFlowVersionsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flow versions bad request response has a 2xx status code
func (o *GetFlowVersionsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flow versions bad request response has a 3xx status code
func (o *GetFlowVersionsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow versions bad request response has a 4xx status code
func (o *GetFlowVersionsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flow versions bad request response has a 5xx status code
func (o *GetFlowVersionsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get flow versions bad request response a status code equal to that given
func (o *GetFlowVersionsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetFlowVersionsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/versions][%d] getFlowVersionsBadRequest  %+v", 400, o.Payload)
}

func (o *GetFlowVersionsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/versions][%d] getFlowVersionsBadRequest  %+v", 400, o.Payload)
}

func (o *GetFlowVersionsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowVersionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowVersionsUnauthorized creates a GetFlowVersionsUnauthorized with default headers values
func NewGetFlowVersionsUnauthorized() *GetFlowVersionsUnauthorized {
	return &GetFlowVersionsUnauthorized{}
}

/*
GetFlowVersionsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetFlowVersionsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flow versions unauthorized response has a 2xx status code
func (o *GetFlowVersionsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flow versions unauthorized response has a 3xx status code
func (o *GetFlowVersionsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow versions unauthorized response has a 4xx status code
func (o *GetFlowVersionsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flow versions unauthorized response has a 5xx status code
func (o *GetFlowVersionsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get flow versions unauthorized response a status code equal to that given
func (o *GetFlowVersionsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetFlowVersionsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/versions][%d] getFlowVersionsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetFlowVersionsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/versions][%d] getFlowVersionsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetFlowVersionsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowVersionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowVersionsForbidden creates a GetFlowVersionsForbidden with default headers values
func NewGetFlowVersionsForbidden() *GetFlowVersionsForbidden {
	return &GetFlowVersionsForbidden{}
}

/*
GetFlowVersionsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetFlowVersionsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flow versions forbidden response has a 2xx status code
func (o *GetFlowVersionsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flow versions forbidden response has a 3xx status code
func (o *GetFlowVersionsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow versions forbidden response has a 4xx status code
func (o *GetFlowVersionsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flow versions forbidden response has a 5xx status code
func (o *GetFlowVersionsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get flow versions forbidden response a status code equal to that given
func (o *GetFlowVersionsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetFlowVersionsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/versions][%d] getFlowVersionsForbidden  %+v", 403, o.Payload)
}

func (o *GetFlowVersionsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/versions][%d] getFlowVersionsForbidden  %+v", 403, o.Payload)
}

func (o *GetFlowVersionsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowVersionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowVersionsNotFound creates a GetFlowVersionsNotFound with default headers values
func NewGetFlowVersionsNotFound() *GetFlowVersionsNotFound {
	return &GetFlowVersionsNotFound{}
}

/*
GetFlowVersionsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetFlowVersionsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flow versions not found response has a 2xx status code
func (o *GetFlowVersionsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flow versions not found response has a 3xx status code
func (o *GetFlowVersionsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow versions not found response has a 4xx status code
func (o *GetFlowVersionsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flow versions not found response has a 5xx status code
func (o *GetFlowVersionsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get flow versions not found response a status code equal to that given
func (o *GetFlowVersionsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetFlowVersionsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/versions][%d] getFlowVersionsNotFound  %+v", 404, o.Payload)
}

func (o *GetFlowVersionsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/versions][%d] getFlowVersionsNotFound  %+v", 404, o.Payload)
}

func (o *GetFlowVersionsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowVersionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowVersionsRequestTimeout creates a GetFlowVersionsRequestTimeout with default headers values
func NewGetFlowVersionsRequestTimeout() *GetFlowVersionsRequestTimeout {
	return &GetFlowVersionsRequestTimeout{}
}

/*
GetFlowVersionsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetFlowVersionsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flow versions request timeout response has a 2xx status code
func (o *GetFlowVersionsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flow versions request timeout response has a 3xx status code
func (o *GetFlowVersionsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow versions request timeout response has a 4xx status code
func (o *GetFlowVersionsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flow versions request timeout response has a 5xx status code
func (o *GetFlowVersionsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get flow versions request timeout response a status code equal to that given
func (o *GetFlowVersionsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetFlowVersionsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/versions][%d] getFlowVersionsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetFlowVersionsRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/versions][%d] getFlowVersionsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetFlowVersionsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowVersionsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowVersionsGone creates a GetFlowVersionsGone with default headers values
func NewGetFlowVersionsGone() *GetFlowVersionsGone {
	return &GetFlowVersionsGone{}
}

/*
GetFlowVersionsGone describes a response with status code 410, with default header values.

Gone
*/
type GetFlowVersionsGone struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flow versions gone response has a 2xx status code
func (o *GetFlowVersionsGone) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flow versions gone response has a 3xx status code
func (o *GetFlowVersionsGone) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow versions gone response has a 4xx status code
func (o *GetFlowVersionsGone) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flow versions gone response has a 5xx status code
func (o *GetFlowVersionsGone) IsServerError() bool {
	return false
}

// IsCode returns true when this get flow versions gone response a status code equal to that given
func (o *GetFlowVersionsGone) IsCode(code int) bool {
	return code == 410
}

func (o *GetFlowVersionsGone) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/versions][%d] getFlowVersionsGone  %+v", 410, o.Payload)
}

func (o *GetFlowVersionsGone) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/versions][%d] getFlowVersionsGone  %+v", 410, o.Payload)
}

func (o *GetFlowVersionsGone) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowVersionsGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowVersionsRequestEntityTooLarge creates a GetFlowVersionsRequestEntityTooLarge with default headers values
func NewGetFlowVersionsRequestEntityTooLarge() *GetFlowVersionsRequestEntityTooLarge {
	return &GetFlowVersionsRequestEntityTooLarge{}
}

/*
GetFlowVersionsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetFlowVersionsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flow versions request entity too large response has a 2xx status code
func (o *GetFlowVersionsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flow versions request entity too large response has a 3xx status code
func (o *GetFlowVersionsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow versions request entity too large response has a 4xx status code
func (o *GetFlowVersionsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flow versions request entity too large response has a 5xx status code
func (o *GetFlowVersionsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get flow versions request entity too large response a status code equal to that given
func (o *GetFlowVersionsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetFlowVersionsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/versions][%d] getFlowVersionsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetFlowVersionsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/versions][%d] getFlowVersionsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetFlowVersionsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowVersionsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowVersionsUnsupportedMediaType creates a GetFlowVersionsUnsupportedMediaType with default headers values
func NewGetFlowVersionsUnsupportedMediaType() *GetFlowVersionsUnsupportedMediaType {
	return &GetFlowVersionsUnsupportedMediaType{}
}

/*
GetFlowVersionsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetFlowVersionsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flow versions unsupported media type response has a 2xx status code
func (o *GetFlowVersionsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flow versions unsupported media type response has a 3xx status code
func (o *GetFlowVersionsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow versions unsupported media type response has a 4xx status code
func (o *GetFlowVersionsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flow versions unsupported media type response has a 5xx status code
func (o *GetFlowVersionsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get flow versions unsupported media type response a status code equal to that given
func (o *GetFlowVersionsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetFlowVersionsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/versions][%d] getFlowVersionsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetFlowVersionsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/versions][%d] getFlowVersionsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetFlowVersionsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowVersionsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowVersionsTooManyRequests creates a GetFlowVersionsTooManyRequests with default headers values
func NewGetFlowVersionsTooManyRequests() *GetFlowVersionsTooManyRequests {
	return &GetFlowVersionsTooManyRequests{}
}

/*
GetFlowVersionsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetFlowVersionsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flow versions too many requests response has a 2xx status code
func (o *GetFlowVersionsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flow versions too many requests response has a 3xx status code
func (o *GetFlowVersionsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow versions too many requests response has a 4xx status code
func (o *GetFlowVersionsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flow versions too many requests response has a 5xx status code
func (o *GetFlowVersionsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get flow versions too many requests response a status code equal to that given
func (o *GetFlowVersionsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetFlowVersionsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/versions][%d] getFlowVersionsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetFlowVersionsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/versions][%d] getFlowVersionsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetFlowVersionsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowVersionsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowVersionsInternalServerError creates a GetFlowVersionsInternalServerError with default headers values
func NewGetFlowVersionsInternalServerError() *GetFlowVersionsInternalServerError {
	return &GetFlowVersionsInternalServerError{}
}

/*
GetFlowVersionsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetFlowVersionsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flow versions internal server error response has a 2xx status code
func (o *GetFlowVersionsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flow versions internal server error response has a 3xx status code
func (o *GetFlowVersionsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow versions internal server error response has a 4xx status code
func (o *GetFlowVersionsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get flow versions internal server error response has a 5xx status code
func (o *GetFlowVersionsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get flow versions internal server error response a status code equal to that given
func (o *GetFlowVersionsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetFlowVersionsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/versions][%d] getFlowVersionsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetFlowVersionsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/versions][%d] getFlowVersionsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetFlowVersionsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowVersionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowVersionsServiceUnavailable creates a GetFlowVersionsServiceUnavailable with default headers values
func NewGetFlowVersionsServiceUnavailable() *GetFlowVersionsServiceUnavailable {
	return &GetFlowVersionsServiceUnavailable{}
}

/*
GetFlowVersionsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetFlowVersionsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flow versions service unavailable response has a 2xx status code
func (o *GetFlowVersionsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flow versions service unavailable response has a 3xx status code
func (o *GetFlowVersionsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow versions service unavailable response has a 4xx status code
func (o *GetFlowVersionsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get flow versions service unavailable response has a 5xx status code
func (o *GetFlowVersionsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get flow versions service unavailable response a status code equal to that given
func (o *GetFlowVersionsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetFlowVersionsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/versions][%d] getFlowVersionsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetFlowVersionsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/versions][%d] getFlowVersionsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetFlowVersionsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowVersionsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowVersionsGatewayTimeout creates a GetFlowVersionsGatewayTimeout with default headers values
func NewGetFlowVersionsGatewayTimeout() *GetFlowVersionsGatewayTimeout {
	return &GetFlowVersionsGatewayTimeout{}
}

/*
GetFlowVersionsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetFlowVersionsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flow versions gateway timeout response has a 2xx status code
func (o *GetFlowVersionsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flow versions gateway timeout response has a 3xx status code
func (o *GetFlowVersionsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow versions gateway timeout response has a 4xx status code
func (o *GetFlowVersionsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get flow versions gateway timeout response has a 5xx status code
func (o *GetFlowVersionsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get flow versions gateway timeout response a status code equal to that given
func (o *GetFlowVersionsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetFlowVersionsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/versions][%d] getFlowVersionsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetFlowVersionsGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/versions][%d] getFlowVersionsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetFlowVersionsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowVersionsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
