// Code generated by go-swagger; DO NOT EDIT.

package architect

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetArchitectPromptReader is a Reader for the GetArchitectPrompt structure.
type GetArchitectPromptReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetArchitectPromptReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetArchitectPromptOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetArchitectPromptBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetArchitectPromptUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetArchitectPromptForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetArchitectPromptNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetArchitectPromptRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetArchitectPromptRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetArchitectPromptUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetArchitectPromptTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetArchitectPromptInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetArchitectPromptServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetArchitectPromptGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetArchitectPromptOK creates a GetArchitectPromptOK with default headers values
func NewGetArchitectPromptOK() *GetArchitectPromptOK {
	return &GetArchitectPromptOK{}
}

/*
GetArchitectPromptOK describes a response with status code 200, with default header values.

successful operation
*/
type GetArchitectPromptOK struct {
	Payload *models.Prompt
}

// IsSuccess returns true when this get architect prompt o k response has a 2xx status code
func (o *GetArchitectPromptOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get architect prompt o k response has a 3xx status code
func (o *GetArchitectPromptOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect prompt o k response has a 4xx status code
func (o *GetArchitectPromptOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get architect prompt o k response has a 5xx status code
func (o *GetArchitectPromptOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get architect prompt o k response a status code equal to that given
func (o *GetArchitectPromptOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetArchitectPromptOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/prompts/{promptId}][%d] getArchitectPromptOK  %+v", 200, o.Payload)
}

func (o *GetArchitectPromptOK) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/prompts/{promptId}][%d] getArchitectPromptOK  %+v", 200, o.Payload)
}

func (o *GetArchitectPromptOK) GetPayload() *models.Prompt {
	return o.Payload
}

func (o *GetArchitectPromptOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Prompt)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectPromptBadRequest creates a GetArchitectPromptBadRequest with default headers values
func NewGetArchitectPromptBadRequest() *GetArchitectPromptBadRequest {
	return &GetArchitectPromptBadRequest{}
}

/*
GetArchitectPromptBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetArchitectPromptBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect prompt bad request response has a 2xx status code
func (o *GetArchitectPromptBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect prompt bad request response has a 3xx status code
func (o *GetArchitectPromptBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect prompt bad request response has a 4xx status code
func (o *GetArchitectPromptBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get architect prompt bad request response has a 5xx status code
func (o *GetArchitectPromptBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get architect prompt bad request response a status code equal to that given
func (o *GetArchitectPromptBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetArchitectPromptBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/prompts/{promptId}][%d] getArchitectPromptBadRequest  %+v", 400, o.Payload)
}

func (o *GetArchitectPromptBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/prompts/{promptId}][%d] getArchitectPromptBadRequest  %+v", 400, o.Payload)
}

func (o *GetArchitectPromptBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectPromptBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectPromptUnauthorized creates a GetArchitectPromptUnauthorized with default headers values
func NewGetArchitectPromptUnauthorized() *GetArchitectPromptUnauthorized {
	return &GetArchitectPromptUnauthorized{}
}

/*
GetArchitectPromptUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetArchitectPromptUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect prompt unauthorized response has a 2xx status code
func (o *GetArchitectPromptUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect prompt unauthorized response has a 3xx status code
func (o *GetArchitectPromptUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect prompt unauthorized response has a 4xx status code
func (o *GetArchitectPromptUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get architect prompt unauthorized response has a 5xx status code
func (o *GetArchitectPromptUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get architect prompt unauthorized response a status code equal to that given
func (o *GetArchitectPromptUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetArchitectPromptUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/prompts/{promptId}][%d] getArchitectPromptUnauthorized  %+v", 401, o.Payload)
}

func (o *GetArchitectPromptUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/prompts/{promptId}][%d] getArchitectPromptUnauthorized  %+v", 401, o.Payload)
}

func (o *GetArchitectPromptUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectPromptUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectPromptForbidden creates a GetArchitectPromptForbidden with default headers values
func NewGetArchitectPromptForbidden() *GetArchitectPromptForbidden {
	return &GetArchitectPromptForbidden{}
}

/*
GetArchitectPromptForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetArchitectPromptForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect prompt forbidden response has a 2xx status code
func (o *GetArchitectPromptForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect prompt forbidden response has a 3xx status code
func (o *GetArchitectPromptForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect prompt forbidden response has a 4xx status code
func (o *GetArchitectPromptForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get architect prompt forbidden response has a 5xx status code
func (o *GetArchitectPromptForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get architect prompt forbidden response a status code equal to that given
func (o *GetArchitectPromptForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetArchitectPromptForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/prompts/{promptId}][%d] getArchitectPromptForbidden  %+v", 403, o.Payload)
}

func (o *GetArchitectPromptForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/prompts/{promptId}][%d] getArchitectPromptForbidden  %+v", 403, o.Payload)
}

func (o *GetArchitectPromptForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectPromptForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectPromptNotFound creates a GetArchitectPromptNotFound with default headers values
func NewGetArchitectPromptNotFound() *GetArchitectPromptNotFound {
	return &GetArchitectPromptNotFound{}
}

/*
GetArchitectPromptNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetArchitectPromptNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect prompt not found response has a 2xx status code
func (o *GetArchitectPromptNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect prompt not found response has a 3xx status code
func (o *GetArchitectPromptNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect prompt not found response has a 4xx status code
func (o *GetArchitectPromptNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get architect prompt not found response has a 5xx status code
func (o *GetArchitectPromptNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get architect prompt not found response a status code equal to that given
func (o *GetArchitectPromptNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetArchitectPromptNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/prompts/{promptId}][%d] getArchitectPromptNotFound  %+v", 404, o.Payload)
}

func (o *GetArchitectPromptNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/prompts/{promptId}][%d] getArchitectPromptNotFound  %+v", 404, o.Payload)
}

func (o *GetArchitectPromptNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectPromptNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectPromptRequestTimeout creates a GetArchitectPromptRequestTimeout with default headers values
func NewGetArchitectPromptRequestTimeout() *GetArchitectPromptRequestTimeout {
	return &GetArchitectPromptRequestTimeout{}
}

/*
GetArchitectPromptRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetArchitectPromptRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect prompt request timeout response has a 2xx status code
func (o *GetArchitectPromptRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect prompt request timeout response has a 3xx status code
func (o *GetArchitectPromptRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect prompt request timeout response has a 4xx status code
func (o *GetArchitectPromptRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get architect prompt request timeout response has a 5xx status code
func (o *GetArchitectPromptRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get architect prompt request timeout response a status code equal to that given
func (o *GetArchitectPromptRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetArchitectPromptRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/prompts/{promptId}][%d] getArchitectPromptRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetArchitectPromptRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/prompts/{promptId}][%d] getArchitectPromptRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetArchitectPromptRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectPromptRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectPromptRequestEntityTooLarge creates a GetArchitectPromptRequestEntityTooLarge with default headers values
func NewGetArchitectPromptRequestEntityTooLarge() *GetArchitectPromptRequestEntityTooLarge {
	return &GetArchitectPromptRequestEntityTooLarge{}
}

/*
GetArchitectPromptRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetArchitectPromptRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect prompt request entity too large response has a 2xx status code
func (o *GetArchitectPromptRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect prompt request entity too large response has a 3xx status code
func (o *GetArchitectPromptRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect prompt request entity too large response has a 4xx status code
func (o *GetArchitectPromptRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get architect prompt request entity too large response has a 5xx status code
func (o *GetArchitectPromptRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get architect prompt request entity too large response a status code equal to that given
func (o *GetArchitectPromptRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetArchitectPromptRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/prompts/{promptId}][%d] getArchitectPromptRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetArchitectPromptRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/prompts/{promptId}][%d] getArchitectPromptRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetArchitectPromptRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectPromptRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectPromptUnsupportedMediaType creates a GetArchitectPromptUnsupportedMediaType with default headers values
func NewGetArchitectPromptUnsupportedMediaType() *GetArchitectPromptUnsupportedMediaType {
	return &GetArchitectPromptUnsupportedMediaType{}
}

/*
GetArchitectPromptUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetArchitectPromptUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect prompt unsupported media type response has a 2xx status code
func (o *GetArchitectPromptUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect prompt unsupported media type response has a 3xx status code
func (o *GetArchitectPromptUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect prompt unsupported media type response has a 4xx status code
func (o *GetArchitectPromptUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get architect prompt unsupported media type response has a 5xx status code
func (o *GetArchitectPromptUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get architect prompt unsupported media type response a status code equal to that given
func (o *GetArchitectPromptUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetArchitectPromptUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/prompts/{promptId}][%d] getArchitectPromptUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetArchitectPromptUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/prompts/{promptId}][%d] getArchitectPromptUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetArchitectPromptUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectPromptUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectPromptTooManyRequests creates a GetArchitectPromptTooManyRequests with default headers values
func NewGetArchitectPromptTooManyRequests() *GetArchitectPromptTooManyRequests {
	return &GetArchitectPromptTooManyRequests{}
}

/*
GetArchitectPromptTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetArchitectPromptTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect prompt too many requests response has a 2xx status code
func (o *GetArchitectPromptTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect prompt too many requests response has a 3xx status code
func (o *GetArchitectPromptTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect prompt too many requests response has a 4xx status code
func (o *GetArchitectPromptTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get architect prompt too many requests response has a 5xx status code
func (o *GetArchitectPromptTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get architect prompt too many requests response a status code equal to that given
func (o *GetArchitectPromptTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetArchitectPromptTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/prompts/{promptId}][%d] getArchitectPromptTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetArchitectPromptTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/prompts/{promptId}][%d] getArchitectPromptTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetArchitectPromptTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectPromptTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectPromptInternalServerError creates a GetArchitectPromptInternalServerError with default headers values
func NewGetArchitectPromptInternalServerError() *GetArchitectPromptInternalServerError {
	return &GetArchitectPromptInternalServerError{}
}

/*
GetArchitectPromptInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetArchitectPromptInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect prompt internal server error response has a 2xx status code
func (o *GetArchitectPromptInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect prompt internal server error response has a 3xx status code
func (o *GetArchitectPromptInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect prompt internal server error response has a 4xx status code
func (o *GetArchitectPromptInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get architect prompt internal server error response has a 5xx status code
func (o *GetArchitectPromptInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get architect prompt internal server error response a status code equal to that given
func (o *GetArchitectPromptInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetArchitectPromptInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/prompts/{promptId}][%d] getArchitectPromptInternalServerError  %+v", 500, o.Payload)
}

func (o *GetArchitectPromptInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/prompts/{promptId}][%d] getArchitectPromptInternalServerError  %+v", 500, o.Payload)
}

func (o *GetArchitectPromptInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectPromptInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectPromptServiceUnavailable creates a GetArchitectPromptServiceUnavailable with default headers values
func NewGetArchitectPromptServiceUnavailable() *GetArchitectPromptServiceUnavailable {
	return &GetArchitectPromptServiceUnavailable{}
}

/*
GetArchitectPromptServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetArchitectPromptServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect prompt service unavailable response has a 2xx status code
func (o *GetArchitectPromptServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect prompt service unavailable response has a 3xx status code
func (o *GetArchitectPromptServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect prompt service unavailable response has a 4xx status code
func (o *GetArchitectPromptServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get architect prompt service unavailable response has a 5xx status code
func (o *GetArchitectPromptServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get architect prompt service unavailable response a status code equal to that given
func (o *GetArchitectPromptServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetArchitectPromptServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/prompts/{promptId}][%d] getArchitectPromptServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetArchitectPromptServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/prompts/{promptId}][%d] getArchitectPromptServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetArchitectPromptServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectPromptServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectPromptGatewayTimeout creates a GetArchitectPromptGatewayTimeout with default headers values
func NewGetArchitectPromptGatewayTimeout() *GetArchitectPromptGatewayTimeout {
	return &GetArchitectPromptGatewayTimeout{}
}

/*
GetArchitectPromptGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetArchitectPromptGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect prompt gateway timeout response has a 2xx status code
func (o *GetArchitectPromptGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect prompt gateway timeout response has a 3xx status code
func (o *GetArchitectPromptGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect prompt gateway timeout response has a 4xx status code
func (o *GetArchitectPromptGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get architect prompt gateway timeout response has a 5xx status code
func (o *GetArchitectPromptGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get architect prompt gateway timeout response a status code equal to that given
func (o *GetArchitectPromptGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetArchitectPromptGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/prompts/{promptId}][%d] getArchitectPromptGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetArchitectPromptGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/prompts/{promptId}][%d] getArchitectPromptGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetArchitectPromptGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectPromptGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
