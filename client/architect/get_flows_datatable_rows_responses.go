// Code generated by go-swagger; DO NOT EDIT.

package architect

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetFlowsDatatableRowsReader is a Reader for the GetFlowsDatatableRows structure.
type GetFlowsDatatableRowsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFlowsDatatableRowsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFlowsDatatableRowsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetFlowsDatatableRowsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetFlowsDatatableRowsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetFlowsDatatableRowsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetFlowsDatatableRowsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetFlowsDatatableRowsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetFlowsDatatableRowsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetFlowsDatatableRowsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetFlowsDatatableRowsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetFlowsDatatableRowsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetFlowsDatatableRowsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetFlowsDatatableRowsOK creates a GetFlowsDatatableRowsOK with default headers values
func NewGetFlowsDatatableRowsOK() *GetFlowsDatatableRowsOK {
	return &GetFlowsDatatableRowsOK{}
}

/*GetFlowsDatatableRowsOK handles this case with default header values.

successful operation
*/
type GetFlowsDatatableRowsOK struct {
	Payload *models.DataTableRowEntityListing
}

func (o *GetFlowsDatatableRowsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/rows][%d] getFlowsDatatableRowsOK  %+v", 200, o.Payload)
}

func (o *GetFlowsDatatableRowsOK) GetPayload() *models.DataTableRowEntityListing {
	return o.Payload
}

func (o *GetFlowsDatatableRowsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DataTableRowEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableRowsBadRequest creates a GetFlowsDatatableRowsBadRequest with default headers values
func NewGetFlowsDatatableRowsBadRequest() *GetFlowsDatatableRowsBadRequest {
	return &GetFlowsDatatableRowsBadRequest{}
}

/*GetFlowsDatatableRowsBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetFlowsDatatableRowsBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetFlowsDatatableRowsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/rows][%d] getFlowsDatatableRowsBadRequest  %+v", 400, o.Payload)
}

func (o *GetFlowsDatatableRowsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableRowsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableRowsUnauthorized creates a GetFlowsDatatableRowsUnauthorized with default headers values
func NewGetFlowsDatatableRowsUnauthorized() *GetFlowsDatatableRowsUnauthorized {
	return &GetFlowsDatatableRowsUnauthorized{}
}

/*GetFlowsDatatableRowsUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetFlowsDatatableRowsUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetFlowsDatatableRowsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/rows][%d] getFlowsDatatableRowsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetFlowsDatatableRowsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableRowsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableRowsForbidden creates a GetFlowsDatatableRowsForbidden with default headers values
func NewGetFlowsDatatableRowsForbidden() *GetFlowsDatatableRowsForbidden {
	return &GetFlowsDatatableRowsForbidden{}
}

/*GetFlowsDatatableRowsForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetFlowsDatatableRowsForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetFlowsDatatableRowsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/rows][%d] getFlowsDatatableRowsForbidden  %+v", 403, o.Payload)
}

func (o *GetFlowsDatatableRowsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableRowsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableRowsNotFound creates a GetFlowsDatatableRowsNotFound with default headers values
func NewGetFlowsDatatableRowsNotFound() *GetFlowsDatatableRowsNotFound {
	return &GetFlowsDatatableRowsNotFound{}
}

/*GetFlowsDatatableRowsNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetFlowsDatatableRowsNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetFlowsDatatableRowsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/rows][%d] getFlowsDatatableRowsNotFound  %+v", 404, o.Payload)
}

func (o *GetFlowsDatatableRowsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableRowsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableRowsRequestEntityTooLarge creates a GetFlowsDatatableRowsRequestEntityTooLarge with default headers values
func NewGetFlowsDatatableRowsRequestEntityTooLarge() *GetFlowsDatatableRowsRequestEntityTooLarge {
	return &GetFlowsDatatableRowsRequestEntityTooLarge{}
}

/*GetFlowsDatatableRowsRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetFlowsDatatableRowsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetFlowsDatatableRowsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/rows][%d] getFlowsDatatableRowsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetFlowsDatatableRowsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableRowsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableRowsUnsupportedMediaType creates a GetFlowsDatatableRowsUnsupportedMediaType with default headers values
func NewGetFlowsDatatableRowsUnsupportedMediaType() *GetFlowsDatatableRowsUnsupportedMediaType {
	return &GetFlowsDatatableRowsUnsupportedMediaType{}
}

/*GetFlowsDatatableRowsUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetFlowsDatatableRowsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetFlowsDatatableRowsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/rows][%d] getFlowsDatatableRowsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetFlowsDatatableRowsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableRowsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableRowsTooManyRequests creates a GetFlowsDatatableRowsTooManyRequests with default headers values
func NewGetFlowsDatatableRowsTooManyRequests() *GetFlowsDatatableRowsTooManyRequests {
	return &GetFlowsDatatableRowsTooManyRequests{}
}

/*GetFlowsDatatableRowsTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type GetFlowsDatatableRowsTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetFlowsDatatableRowsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/rows][%d] getFlowsDatatableRowsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetFlowsDatatableRowsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableRowsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableRowsInternalServerError creates a GetFlowsDatatableRowsInternalServerError with default headers values
func NewGetFlowsDatatableRowsInternalServerError() *GetFlowsDatatableRowsInternalServerError {
	return &GetFlowsDatatableRowsInternalServerError{}
}

/*GetFlowsDatatableRowsInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetFlowsDatatableRowsInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetFlowsDatatableRowsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/rows][%d] getFlowsDatatableRowsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetFlowsDatatableRowsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableRowsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableRowsServiceUnavailable creates a GetFlowsDatatableRowsServiceUnavailable with default headers values
func NewGetFlowsDatatableRowsServiceUnavailable() *GetFlowsDatatableRowsServiceUnavailable {
	return &GetFlowsDatatableRowsServiceUnavailable{}
}

/*GetFlowsDatatableRowsServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetFlowsDatatableRowsServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetFlowsDatatableRowsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/rows][%d] getFlowsDatatableRowsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetFlowsDatatableRowsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableRowsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableRowsGatewayTimeout creates a GetFlowsDatatableRowsGatewayTimeout with default headers values
func NewGetFlowsDatatableRowsGatewayTimeout() *GetFlowsDatatableRowsGatewayTimeout {
	return &GetFlowsDatatableRowsGatewayTimeout{}
}

/*GetFlowsDatatableRowsGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetFlowsDatatableRowsGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetFlowsDatatableRowsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/rows][%d] getFlowsDatatableRowsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetFlowsDatatableRowsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableRowsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
