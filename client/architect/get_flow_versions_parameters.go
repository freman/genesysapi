// Code generated by go-swagger; DO NOT EDIT.

package architect

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetFlowVersionsParams creates a new GetFlowVersionsParams object
// with the default values initialized.
func NewGetFlowVersionsParams() *GetFlowVersionsParams {
	var (
		pageNumberDefault = int32(1)
		pageSizeDefault   = int32(25)
	)
	return &GetFlowVersionsParams{
		PageNumber: &pageNumberDefault,
		PageSize:   &pageSizeDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewGetFlowVersionsParamsWithTimeout creates a new GetFlowVersionsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetFlowVersionsParamsWithTimeout(timeout time.Duration) *GetFlowVersionsParams {
	var (
		pageNumberDefault = int32(1)
		pageSizeDefault   = int32(25)
	)
	return &GetFlowVersionsParams{
		PageNumber: &pageNumberDefault,
		PageSize:   &pageSizeDefault,

		timeout: timeout,
	}
}

// NewGetFlowVersionsParamsWithContext creates a new GetFlowVersionsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetFlowVersionsParamsWithContext(ctx context.Context) *GetFlowVersionsParams {
	var (
		pageNumberDefault = int32(1)
		pageSizeDefault   = int32(25)
	)
	return &GetFlowVersionsParams{
		PageNumber: &pageNumberDefault,
		PageSize:   &pageSizeDefault,

		Context: ctx,
	}
}

// NewGetFlowVersionsParamsWithHTTPClient creates a new GetFlowVersionsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetFlowVersionsParamsWithHTTPClient(client *http.Client) *GetFlowVersionsParams {
	var (
		pageNumberDefault = int32(1)
		pageSizeDefault   = int32(25)
	)
	return &GetFlowVersionsParams{
		PageNumber: &pageNumberDefault,
		PageSize:   &pageSizeDefault,
		HTTPClient: client,
	}
}

/*GetFlowVersionsParams contains all the parameters to send to the API endpoint
for the get flow versions operation typically these are written to a http.Request
*/
type GetFlowVersionsParams struct {

	/*Deleted
	  Include deleted flows

	*/
	Deleted *bool
	/*FlowID
	  Flow ID

	*/
	FlowID string
	/*PageNumber
	  Page number

	*/
	PageNumber *int32
	/*PageSize
	  Page size

	*/
	PageSize *int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get flow versions params
func (o *GetFlowVersionsParams) WithTimeout(timeout time.Duration) *GetFlowVersionsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get flow versions params
func (o *GetFlowVersionsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get flow versions params
func (o *GetFlowVersionsParams) WithContext(ctx context.Context) *GetFlowVersionsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get flow versions params
func (o *GetFlowVersionsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get flow versions params
func (o *GetFlowVersionsParams) WithHTTPClient(client *http.Client) *GetFlowVersionsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get flow versions params
func (o *GetFlowVersionsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDeleted adds the deleted to the get flow versions params
func (o *GetFlowVersionsParams) WithDeleted(deleted *bool) *GetFlowVersionsParams {
	o.SetDeleted(deleted)
	return o
}

// SetDeleted adds the deleted to the get flow versions params
func (o *GetFlowVersionsParams) SetDeleted(deleted *bool) {
	o.Deleted = deleted
}

// WithFlowID adds the flowID to the get flow versions params
func (o *GetFlowVersionsParams) WithFlowID(flowID string) *GetFlowVersionsParams {
	o.SetFlowID(flowID)
	return o
}

// SetFlowID adds the flowId to the get flow versions params
func (o *GetFlowVersionsParams) SetFlowID(flowID string) {
	o.FlowID = flowID
}

// WithPageNumber adds the pageNumber to the get flow versions params
func (o *GetFlowVersionsParams) WithPageNumber(pageNumber *int32) *GetFlowVersionsParams {
	o.SetPageNumber(pageNumber)
	return o
}

// SetPageNumber adds the pageNumber to the get flow versions params
func (o *GetFlowVersionsParams) SetPageNumber(pageNumber *int32) {
	o.PageNumber = pageNumber
}

// WithPageSize adds the pageSize to the get flow versions params
func (o *GetFlowVersionsParams) WithPageSize(pageSize *int32) *GetFlowVersionsParams {
	o.SetPageSize(pageSize)
	return o
}

// SetPageSize adds the pageSize to the get flow versions params
func (o *GetFlowVersionsParams) SetPageSize(pageSize *int32) {
	o.PageSize = pageSize
}

// WriteToRequest writes these params to a swagger request
func (o *GetFlowVersionsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Deleted != nil {

		// query param deleted
		var qrDeleted bool
		if o.Deleted != nil {
			qrDeleted = *o.Deleted
		}
		qDeleted := swag.FormatBool(qrDeleted)
		if qDeleted != "" {
			if err := r.SetQueryParam("deleted", qDeleted); err != nil {
				return err
			}
		}

	}

	// path param flowId
	if err := r.SetPathParam("flowId", o.FlowID); err != nil {
		return err
	}

	if o.PageNumber != nil {

		// query param pageNumber
		var qrPageNumber int32
		if o.PageNumber != nil {
			qrPageNumber = *o.PageNumber
		}
		qPageNumber := swag.FormatInt32(qrPageNumber)
		if qPageNumber != "" {
			if err := r.SetQueryParam("pageNumber", qPageNumber); err != nil {
				return err
			}
		}

	}

	if o.PageSize != nil {

		// query param pageSize
		var qrPageSize int32
		if o.PageSize != nil {
			qrPageSize = *o.PageSize
		}
		qPageSize := swag.FormatInt32(qrPageSize)
		if qPageSize != "" {
			if err := r.SetQueryParam("pageSize", qPageSize); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
