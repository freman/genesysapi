// Code generated by go-swagger; DO NOT EDIT.

package architect

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// DeleteArchitectIvrReader is a Reader for the DeleteArchitectIvr structure.
type DeleteArchitectIvrReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteArchitectIvrReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteArchitectIvrOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteArchitectIvrBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteArchitectIvrUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteArchitectIvrForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteArchitectIvrNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewDeleteArchitectIvrRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeleteArchitectIvrConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewDeleteArchitectIvrRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDeleteArchitectIvrUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteArchitectIvrTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteArchitectIvrInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteArchitectIvrServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteArchitectIvrGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteArchitectIvrOK creates a DeleteArchitectIvrOK with default headers values
func NewDeleteArchitectIvrOK() *DeleteArchitectIvrOK {
	return &DeleteArchitectIvrOK{}
}

/*
DeleteArchitectIvrOK describes a response with status code 200, with default header values.

Operation was successful.
*/
type DeleteArchitectIvrOK struct {
}

// IsSuccess returns true when this delete architect ivr o k response has a 2xx status code
func (o *DeleteArchitectIvrOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete architect ivr o k response has a 3xx status code
func (o *DeleteArchitectIvrOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete architect ivr o k response has a 4xx status code
func (o *DeleteArchitectIvrOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete architect ivr o k response has a 5xx status code
func (o *DeleteArchitectIvrOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete architect ivr o k response a status code equal to that given
func (o *DeleteArchitectIvrOK) IsCode(code int) bool {
	return code == 200
}

func (o *DeleteArchitectIvrOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/ivrs/{ivrId}][%d] deleteArchitectIvrOK ", 200)
}

func (o *DeleteArchitectIvrOK) String() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/ivrs/{ivrId}][%d] deleteArchitectIvrOK ", 200)
}

func (o *DeleteArchitectIvrOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteArchitectIvrBadRequest creates a DeleteArchitectIvrBadRequest with default headers values
func NewDeleteArchitectIvrBadRequest() *DeleteArchitectIvrBadRequest {
	return &DeleteArchitectIvrBadRequest{}
}

/*
DeleteArchitectIvrBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type DeleteArchitectIvrBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete architect ivr bad request response has a 2xx status code
func (o *DeleteArchitectIvrBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete architect ivr bad request response has a 3xx status code
func (o *DeleteArchitectIvrBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete architect ivr bad request response has a 4xx status code
func (o *DeleteArchitectIvrBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete architect ivr bad request response has a 5xx status code
func (o *DeleteArchitectIvrBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete architect ivr bad request response a status code equal to that given
func (o *DeleteArchitectIvrBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteArchitectIvrBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/ivrs/{ivrId}][%d] deleteArchitectIvrBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteArchitectIvrBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/ivrs/{ivrId}][%d] deleteArchitectIvrBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteArchitectIvrBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteArchitectIvrBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArchitectIvrUnauthorized creates a DeleteArchitectIvrUnauthorized with default headers values
func NewDeleteArchitectIvrUnauthorized() *DeleteArchitectIvrUnauthorized {
	return &DeleteArchitectIvrUnauthorized{}
}

/*
DeleteArchitectIvrUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type DeleteArchitectIvrUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete architect ivr unauthorized response has a 2xx status code
func (o *DeleteArchitectIvrUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete architect ivr unauthorized response has a 3xx status code
func (o *DeleteArchitectIvrUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete architect ivr unauthorized response has a 4xx status code
func (o *DeleteArchitectIvrUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete architect ivr unauthorized response has a 5xx status code
func (o *DeleteArchitectIvrUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete architect ivr unauthorized response a status code equal to that given
func (o *DeleteArchitectIvrUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteArchitectIvrUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/ivrs/{ivrId}][%d] deleteArchitectIvrUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteArchitectIvrUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/ivrs/{ivrId}][%d] deleteArchitectIvrUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteArchitectIvrUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteArchitectIvrUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArchitectIvrForbidden creates a DeleteArchitectIvrForbidden with default headers values
func NewDeleteArchitectIvrForbidden() *DeleteArchitectIvrForbidden {
	return &DeleteArchitectIvrForbidden{}
}

/*
DeleteArchitectIvrForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type DeleteArchitectIvrForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete architect ivr forbidden response has a 2xx status code
func (o *DeleteArchitectIvrForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete architect ivr forbidden response has a 3xx status code
func (o *DeleteArchitectIvrForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete architect ivr forbidden response has a 4xx status code
func (o *DeleteArchitectIvrForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete architect ivr forbidden response has a 5xx status code
func (o *DeleteArchitectIvrForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete architect ivr forbidden response a status code equal to that given
func (o *DeleteArchitectIvrForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteArchitectIvrForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/ivrs/{ivrId}][%d] deleteArchitectIvrForbidden  %+v", 403, o.Payload)
}

func (o *DeleteArchitectIvrForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/ivrs/{ivrId}][%d] deleteArchitectIvrForbidden  %+v", 403, o.Payload)
}

func (o *DeleteArchitectIvrForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteArchitectIvrForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArchitectIvrNotFound creates a DeleteArchitectIvrNotFound with default headers values
func NewDeleteArchitectIvrNotFound() *DeleteArchitectIvrNotFound {
	return &DeleteArchitectIvrNotFound{}
}

/*
DeleteArchitectIvrNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type DeleteArchitectIvrNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete architect ivr not found response has a 2xx status code
func (o *DeleteArchitectIvrNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete architect ivr not found response has a 3xx status code
func (o *DeleteArchitectIvrNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete architect ivr not found response has a 4xx status code
func (o *DeleteArchitectIvrNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete architect ivr not found response has a 5xx status code
func (o *DeleteArchitectIvrNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete architect ivr not found response a status code equal to that given
func (o *DeleteArchitectIvrNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteArchitectIvrNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/ivrs/{ivrId}][%d] deleteArchitectIvrNotFound  %+v", 404, o.Payload)
}

func (o *DeleteArchitectIvrNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/ivrs/{ivrId}][%d] deleteArchitectIvrNotFound  %+v", 404, o.Payload)
}

func (o *DeleteArchitectIvrNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteArchitectIvrNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArchitectIvrRequestTimeout creates a DeleteArchitectIvrRequestTimeout with default headers values
func NewDeleteArchitectIvrRequestTimeout() *DeleteArchitectIvrRequestTimeout {
	return &DeleteArchitectIvrRequestTimeout{}
}

/*
DeleteArchitectIvrRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type DeleteArchitectIvrRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete architect ivr request timeout response has a 2xx status code
func (o *DeleteArchitectIvrRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete architect ivr request timeout response has a 3xx status code
func (o *DeleteArchitectIvrRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete architect ivr request timeout response has a 4xx status code
func (o *DeleteArchitectIvrRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete architect ivr request timeout response has a 5xx status code
func (o *DeleteArchitectIvrRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this delete architect ivr request timeout response a status code equal to that given
func (o *DeleteArchitectIvrRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *DeleteArchitectIvrRequestTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/ivrs/{ivrId}][%d] deleteArchitectIvrRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteArchitectIvrRequestTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/ivrs/{ivrId}][%d] deleteArchitectIvrRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteArchitectIvrRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteArchitectIvrRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArchitectIvrConflict creates a DeleteArchitectIvrConflict with default headers values
func NewDeleteArchitectIvrConflict() *DeleteArchitectIvrConflict {
	return &DeleteArchitectIvrConflict{}
}

/*
DeleteArchitectIvrConflict describes a response with status code 409, with default header values.

Conflict
*/
type DeleteArchitectIvrConflict struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete architect ivr conflict response has a 2xx status code
func (o *DeleteArchitectIvrConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete architect ivr conflict response has a 3xx status code
func (o *DeleteArchitectIvrConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete architect ivr conflict response has a 4xx status code
func (o *DeleteArchitectIvrConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete architect ivr conflict response has a 5xx status code
func (o *DeleteArchitectIvrConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this delete architect ivr conflict response a status code equal to that given
func (o *DeleteArchitectIvrConflict) IsCode(code int) bool {
	return code == 409
}

func (o *DeleteArchitectIvrConflict) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/ivrs/{ivrId}][%d] deleteArchitectIvrConflict  %+v", 409, o.Payload)
}

func (o *DeleteArchitectIvrConflict) String() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/ivrs/{ivrId}][%d] deleteArchitectIvrConflict  %+v", 409, o.Payload)
}

func (o *DeleteArchitectIvrConflict) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteArchitectIvrConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArchitectIvrRequestEntityTooLarge creates a DeleteArchitectIvrRequestEntityTooLarge with default headers values
func NewDeleteArchitectIvrRequestEntityTooLarge() *DeleteArchitectIvrRequestEntityTooLarge {
	return &DeleteArchitectIvrRequestEntityTooLarge{}
}

/*
DeleteArchitectIvrRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type DeleteArchitectIvrRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete architect ivr request entity too large response has a 2xx status code
func (o *DeleteArchitectIvrRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete architect ivr request entity too large response has a 3xx status code
func (o *DeleteArchitectIvrRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete architect ivr request entity too large response has a 4xx status code
func (o *DeleteArchitectIvrRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete architect ivr request entity too large response has a 5xx status code
func (o *DeleteArchitectIvrRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this delete architect ivr request entity too large response a status code equal to that given
func (o *DeleteArchitectIvrRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *DeleteArchitectIvrRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/ivrs/{ivrId}][%d] deleteArchitectIvrRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteArchitectIvrRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/ivrs/{ivrId}][%d] deleteArchitectIvrRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteArchitectIvrRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteArchitectIvrRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArchitectIvrUnsupportedMediaType creates a DeleteArchitectIvrUnsupportedMediaType with default headers values
func NewDeleteArchitectIvrUnsupportedMediaType() *DeleteArchitectIvrUnsupportedMediaType {
	return &DeleteArchitectIvrUnsupportedMediaType{}
}

/*
DeleteArchitectIvrUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type DeleteArchitectIvrUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete architect ivr unsupported media type response has a 2xx status code
func (o *DeleteArchitectIvrUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete architect ivr unsupported media type response has a 3xx status code
func (o *DeleteArchitectIvrUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete architect ivr unsupported media type response has a 4xx status code
func (o *DeleteArchitectIvrUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete architect ivr unsupported media type response has a 5xx status code
func (o *DeleteArchitectIvrUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this delete architect ivr unsupported media type response a status code equal to that given
func (o *DeleteArchitectIvrUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *DeleteArchitectIvrUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/ivrs/{ivrId}][%d] deleteArchitectIvrUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteArchitectIvrUnsupportedMediaType) String() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/ivrs/{ivrId}][%d] deleteArchitectIvrUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteArchitectIvrUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteArchitectIvrUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArchitectIvrTooManyRequests creates a DeleteArchitectIvrTooManyRequests with default headers values
func NewDeleteArchitectIvrTooManyRequests() *DeleteArchitectIvrTooManyRequests {
	return &DeleteArchitectIvrTooManyRequests{}
}

/*
DeleteArchitectIvrTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type DeleteArchitectIvrTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete architect ivr too many requests response has a 2xx status code
func (o *DeleteArchitectIvrTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete architect ivr too many requests response has a 3xx status code
func (o *DeleteArchitectIvrTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete architect ivr too many requests response has a 4xx status code
func (o *DeleteArchitectIvrTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete architect ivr too many requests response has a 5xx status code
func (o *DeleteArchitectIvrTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete architect ivr too many requests response a status code equal to that given
func (o *DeleteArchitectIvrTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *DeleteArchitectIvrTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/ivrs/{ivrId}][%d] deleteArchitectIvrTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteArchitectIvrTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/ivrs/{ivrId}][%d] deleteArchitectIvrTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteArchitectIvrTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteArchitectIvrTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArchitectIvrInternalServerError creates a DeleteArchitectIvrInternalServerError with default headers values
func NewDeleteArchitectIvrInternalServerError() *DeleteArchitectIvrInternalServerError {
	return &DeleteArchitectIvrInternalServerError{}
}

/*
DeleteArchitectIvrInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type DeleteArchitectIvrInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete architect ivr internal server error response has a 2xx status code
func (o *DeleteArchitectIvrInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete architect ivr internal server error response has a 3xx status code
func (o *DeleteArchitectIvrInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete architect ivr internal server error response has a 4xx status code
func (o *DeleteArchitectIvrInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete architect ivr internal server error response has a 5xx status code
func (o *DeleteArchitectIvrInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete architect ivr internal server error response a status code equal to that given
func (o *DeleteArchitectIvrInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteArchitectIvrInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/ivrs/{ivrId}][%d] deleteArchitectIvrInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteArchitectIvrInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/ivrs/{ivrId}][%d] deleteArchitectIvrInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteArchitectIvrInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteArchitectIvrInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArchitectIvrServiceUnavailable creates a DeleteArchitectIvrServiceUnavailable with default headers values
func NewDeleteArchitectIvrServiceUnavailable() *DeleteArchitectIvrServiceUnavailable {
	return &DeleteArchitectIvrServiceUnavailable{}
}

/*
DeleteArchitectIvrServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type DeleteArchitectIvrServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete architect ivr service unavailable response has a 2xx status code
func (o *DeleteArchitectIvrServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete architect ivr service unavailable response has a 3xx status code
func (o *DeleteArchitectIvrServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete architect ivr service unavailable response has a 4xx status code
func (o *DeleteArchitectIvrServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete architect ivr service unavailable response has a 5xx status code
func (o *DeleteArchitectIvrServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this delete architect ivr service unavailable response a status code equal to that given
func (o *DeleteArchitectIvrServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *DeleteArchitectIvrServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/ivrs/{ivrId}][%d] deleteArchitectIvrServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteArchitectIvrServiceUnavailable) String() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/ivrs/{ivrId}][%d] deleteArchitectIvrServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteArchitectIvrServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteArchitectIvrServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArchitectIvrGatewayTimeout creates a DeleteArchitectIvrGatewayTimeout with default headers values
func NewDeleteArchitectIvrGatewayTimeout() *DeleteArchitectIvrGatewayTimeout {
	return &DeleteArchitectIvrGatewayTimeout{}
}

/*
DeleteArchitectIvrGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type DeleteArchitectIvrGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete architect ivr gateway timeout response has a 2xx status code
func (o *DeleteArchitectIvrGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete architect ivr gateway timeout response has a 3xx status code
func (o *DeleteArchitectIvrGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete architect ivr gateway timeout response has a 4xx status code
func (o *DeleteArchitectIvrGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete architect ivr gateway timeout response has a 5xx status code
func (o *DeleteArchitectIvrGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this delete architect ivr gateway timeout response a status code equal to that given
func (o *DeleteArchitectIvrGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *DeleteArchitectIvrGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/ivrs/{ivrId}][%d] deleteArchitectIvrGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteArchitectIvrGatewayTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/ivrs/{ivrId}][%d] deleteArchitectIvrGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteArchitectIvrGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteArchitectIvrGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
