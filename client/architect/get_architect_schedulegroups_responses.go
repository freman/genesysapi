// Code generated by go-swagger; DO NOT EDIT.

package architect

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetArchitectSchedulegroupsReader is a Reader for the GetArchitectSchedulegroups structure.
type GetArchitectSchedulegroupsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetArchitectSchedulegroupsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetArchitectSchedulegroupsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetArchitectSchedulegroupsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetArchitectSchedulegroupsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetArchitectSchedulegroupsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetArchitectSchedulegroupsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetArchitectSchedulegroupsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetArchitectSchedulegroupsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetArchitectSchedulegroupsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetArchitectSchedulegroupsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetArchitectSchedulegroupsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetArchitectSchedulegroupsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetArchitectSchedulegroupsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetArchitectSchedulegroupsOK creates a GetArchitectSchedulegroupsOK with default headers values
func NewGetArchitectSchedulegroupsOK() *GetArchitectSchedulegroupsOK {
	return &GetArchitectSchedulegroupsOK{}
}

/*
GetArchitectSchedulegroupsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetArchitectSchedulegroupsOK struct {
	Payload *models.ScheduleGroupEntityListing
}

// IsSuccess returns true when this get architect schedulegroups o k response has a 2xx status code
func (o *GetArchitectSchedulegroupsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get architect schedulegroups o k response has a 3xx status code
func (o *GetArchitectSchedulegroupsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect schedulegroups o k response has a 4xx status code
func (o *GetArchitectSchedulegroupsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get architect schedulegroups o k response has a 5xx status code
func (o *GetArchitectSchedulegroupsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get architect schedulegroups o k response a status code equal to that given
func (o *GetArchitectSchedulegroupsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetArchitectSchedulegroupsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/schedulegroups][%d] getArchitectSchedulegroupsOK  %+v", 200, o.Payload)
}

func (o *GetArchitectSchedulegroupsOK) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/schedulegroups][%d] getArchitectSchedulegroupsOK  %+v", 200, o.Payload)
}

func (o *GetArchitectSchedulegroupsOK) GetPayload() *models.ScheduleGroupEntityListing {
	return o.Payload
}

func (o *GetArchitectSchedulegroupsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ScheduleGroupEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectSchedulegroupsBadRequest creates a GetArchitectSchedulegroupsBadRequest with default headers values
func NewGetArchitectSchedulegroupsBadRequest() *GetArchitectSchedulegroupsBadRequest {
	return &GetArchitectSchedulegroupsBadRequest{}
}

/*
GetArchitectSchedulegroupsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetArchitectSchedulegroupsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect schedulegroups bad request response has a 2xx status code
func (o *GetArchitectSchedulegroupsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect schedulegroups bad request response has a 3xx status code
func (o *GetArchitectSchedulegroupsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect schedulegroups bad request response has a 4xx status code
func (o *GetArchitectSchedulegroupsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get architect schedulegroups bad request response has a 5xx status code
func (o *GetArchitectSchedulegroupsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get architect schedulegroups bad request response a status code equal to that given
func (o *GetArchitectSchedulegroupsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetArchitectSchedulegroupsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/schedulegroups][%d] getArchitectSchedulegroupsBadRequest  %+v", 400, o.Payload)
}

func (o *GetArchitectSchedulegroupsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/schedulegroups][%d] getArchitectSchedulegroupsBadRequest  %+v", 400, o.Payload)
}

func (o *GetArchitectSchedulegroupsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectSchedulegroupsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectSchedulegroupsUnauthorized creates a GetArchitectSchedulegroupsUnauthorized with default headers values
func NewGetArchitectSchedulegroupsUnauthorized() *GetArchitectSchedulegroupsUnauthorized {
	return &GetArchitectSchedulegroupsUnauthorized{}
}

/*
GetArchitectSchedulegroupsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetArchitectSchedulegroupsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect schedulegroups unauthorized response has a 2xx status code
func (o *GetArchitectSchedulegroupsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect schedulegroups unauthorized response has a 3xx status code
func (o *GetArchitectSchedulegroupsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect schedulegroups unauthorized response has a 4xx status code
func (o *GetArchitectSchedulegroupsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get architect schedulegroups unauthorized response has a 5xx status code
func (o *GetArchitectSchedulegroupsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get architect schedulegroups unauthorized response a status code equal to that given
func (o *GetArchitectSchedulegroupsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetArchitectSchedulegroupsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/schedulegroups][%d] getArchitectSchedulegroupsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetArchitectSchedulegroupsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/schedulegroups][%d] getArchitectSchedulegroupsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetArchitectSchedulegroupsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectSchedulegroupsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectSchedulegroupsForbidden creates a GetArchitectSchedulegroupsForbidden with default headers values
func NewGetArchitectSchedulegroupsForbidden() *GetArchitectSchedulegroupsForbidden {
	return &GetArchitectSchedulegroupsForbidden{}
}

/*
GetArchitectSchedulegroupsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetArchitectSchedulegroupsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect schedulegroups forbidden response has a 2xx status code
func (o *GetArchitectSchedulegroupsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect schedulegroups forbidden response has a 3xx status code
func (o *GetArchitectSchedulegroupsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect schedulegroups forbidden response has a 4xx status code
func (o *GetArchitectSchedulegroupsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get architect schedulegroups forbidden response has a 5xx status code
func (o *GetArchitectSchedulegroupsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get architect schedulegroups forbidden response a status code equal to that given
func (o *GetArchitectSchedulegroupsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetArchitectSchedulegroupsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/schedulegroups][%d] getArchitectSchedulegroupsForbidden  %+v", 403, o.Payload)
}

func (o *GetArchitectSchedulegroupsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/schedulegroups][%d] getArchitectSchedulegroupsForbidden  %+v", 403, o.Payload)
}

func (o *GetArchitectSchedulegroupsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectSchedulegroupsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectSchedulegroupsNotFound creates a GetArchitectSchedulegroupsNotFound with default headers values
func NewGetArchitectSchedulegroupsNotFound() *GetArchitectSchedulegroupsNotFound {
	return &GetArchitectSchedulegroupsNotFound{}
}

/*
GetArchitectSchedulegroupsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetArchitectSchedulegroupsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect schedulegroups not found response has a 2xx status code
func (o *GetArchitectSchedulegroupsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect schedulegroups not found response has a 3xx status code
func (o *GetArchitectSchedulegroupsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect schedulegroups not found response has a 4xx status code
func (o *GetArchitectSchedulegroupsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get architect schedulegroups not found response has a 5xx status code
func (o *GetArchitectSchedulegroupsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get architect schedulegroups not found response a status code equal to that given
func (o *GetArchitectSchedulegroupsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetArchitectSchedulegroupsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/schedulegroups][%d] getArchitectSchedulegroupsNotFound  %+v", 404, o.Payload)
}

func (o *GetArchitectSchedulegroupsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/schedulegroups][%d] getArchitectSchedulegroupsNotFound  %+v", 404, o.Payload)
}

func (o *GetArchitectSchedulegroupsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectSchedulegroupsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectSchedulegroupsRequestTimeout creates a GetArchitectSchedulegroupsRequestTimeout with default headers values
func NewGetArchitectSchedulegroupsRequestTimeout() *GetArchitectSchedulegroupsRequestTimeout {
	return &GetArchitectSchedulegroupsRequestTimeout{}
}

/*
GetArchitectSchedulegroupsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetArchitectSchedulegroupsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect schedulegroups request timeout response has a 2xx status code
func (o *GetArchitectSchedulegroupsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect schedulegroups request timeout response has a 3xx status code
func (o *GetArchitectSchedulegroupsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect schedulegroups request timeout response has a 4xx status code
func (o *GetArchitectSchedulegroupsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get architect schedulegroups request timeout response has a 5xx status code
func (o *GetArchitectSchedulegroupsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get architect schedulegroups request timeout response a status code equal to that given
func (o *GetArchitectSchedulegroupsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetArchitectSchedulegroupsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/schedulegroups][%d] getArchitectSchedulegroupsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetArchitectSchedulegroupsRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/schedulegroups][%d] getArchitectSchedulegroupsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetArchitectSchedulegroupsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectSchedulegroupsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectSchedulegroupsRequestEntityTooLarge creates a GetArchitectSchedulegroupsRequestEntityTooLarge with default headers values
func NewGetArchitectSchedulegroupsRequestEntityTooLarge() *GetArchitectSchedulegroupsRequestEntityTooLarge {
	return &GetArchitectSchedulegroupsRequestEntityTooLarge{}
}

/*
GetArchitectSchedulegroupsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetArchitectSchedulegroupsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect schedulegroups request entity too large response has a 2xx status code
func (o *GetArchitectSchedulegroupsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect schedulegroups request entity too large response has a 3xx status code
func (o *GetArchitectSchedulegroupsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect schedulegroups request entity too large response has a 4xx status code
func (o *GetArchitectSchedulegroupsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get architect schedulegroups request entity too large response has a 5xx status code
func (o *GetArchitectSchedulegroupsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get architect schedulegroups request entity too large response a status code equal to that given
func (o *GetArchitectSchedulegroupsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetArchitectSchedulegroupsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/schedulegroups][%d] getArchitectSchedulegroupsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetArchitectSchedulegroupsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/schedulegroups][%d] getArchitectSchedulegroupsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetArchitectSchedulegroupsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectSchedulegroupsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectSchedulegroupsUnsupportedMediaType creates a GetArchitectSchedulegroupsUnsupportedMediaType with default headers values
func NewGetArchitectSchedulegroupsUnsupportedMediaType() *GetArchitectSchedulegroupsUnsupportedMediaType {
	return &GetArchitectSchedulegroupsUnsupportedMediaType{}
}

/*
GetArchitectSchedulegroupsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetArchitectSchedulegroupsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect schedulegroups unsupported media type response has a 2xx status code
func (o *GetArchitectSchedulegroupsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect schedulegroups unsupported media type response has a 3xx status code
func (o *GetArchitectSchedulegroupsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect schedulegroups unsupported media type response has a 4xx status code
func (o *GetArchitectSchedulegroupsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get architect schedulegroups unsupported media type response has a 5xx status code
func (o *GetArchitectSchedulegroupsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get architect schedulegroups unsupported media type response a status code equal to that given
func (o *GetArchitectSchedulegroupsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetArchitectSchedulegroupsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/schedulegroups][%d] getArchitectSchedulegroupsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetArchitectSchedulegroupsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/schedulegroups][%d] getArchitectSchedulegroupsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetArchitectSchedulegroupsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectSchedulegroupsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectSchedulegroupsTooManyRequests creates a GetArchitectSchedulegroupsTooManyRequests with default headers values
func NewGetArchitectSchedulegroupsTooManyRequests() *GetArchitectSchedulegroupsTooManyRequests {
	return &GetArchitectSchedulegroupsTooManyRequests{}
}

/*
GetArchitectSchedulegroupsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetArchitectSchedulegroupsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect schedulegroups too many requests response has a 2xx status code
func (o *GetArchitectSchedulegroupsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect schedulegroups too many requests response has a 3xx status code
func (o *GetArchitectSchedulegroupsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect schedulegroups too many requests response has a 4xx status code
func (o *GetArchitectSchedulegroupsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get architect schedulegroups too many requests response has a 5xx status code
func (o *GetArchitectSchedulegroupsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get architect schedulegroups too many requests response a status code equal to that given
func (o *GetArchitectSchedulegroupsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetArchitectSchedulegroupsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/schedulegroups][%d] getArchitectSchedulegroupsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetArchitectSchedulegroupsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/schedulegroups][%d] getArchitectSchedulegroupsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetArchitectSchedulegroupsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectSchedulegroupsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectSchedulegroupsInternalServerError creates a GetArchitectSchedulegroupsInternalServerError with default headers values
func NewGetArchitectSchedulegroupsInternalServerError() *GetArchitectSchedulegroupsInternalServerError {
	return &GetArchitectSchedulegroupsInternalServerError{}
}

/*
GetArchitectSchedulegroupsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetArchitectSchedulegroupsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect schedulegroups internal server error response has a 2xx status code
func (o *GetArchitectSchedulegroupsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect schedulegroups internal server error response has a 3xx status code
func (o *GetArchitectSchedulegroupsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect schedulegroups internal server error response has a 4xx status code
func (o *GetArchitectSchedulegroupsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get architect schedulegroups internal server error response has a 5xx status code
func (o *GetArchitectSchedulegroupsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get architect schedulegroups internal server error response a status code equal to that given
func (o *GetArchitectSchedulegroupsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetArchitectSchedulegroupsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/schedulegroups][%d] getArchitectSchedulegroupsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetArchitectSchedulegroupsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/schedulegroups][%d] getArchitectSchedulegroupsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetArchitectSchedulegroupsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectSchedulegroupsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectSchedulegroupsServiceUnavailable creates a GetArchitectSchedulegroupsServiceUnavailable with default headers values
func NewGetArchitectSchedulegroupsServiceUnavailable() *GetArchitectSchedulegroupsServiceUnavailable {
	return &GetArchitectSchedulegroupsServiceUnavailable{}
}

/*
GetArchitectSchedulegroupsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetArchitectSchedulegroupsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect schedulegroups service unavailable response has a 2xx status code
func (o *GetArchitectSchedulegroupsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect schedulegroups service unavailable response has a 3xx status code
func (o *GetArchitectSchedulegroupsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect schedulegroups service unavailable response has a 4xx status code
func (o *GetArchitectSchedulegroupsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get architect schedulegroups service unavailable response has a 5xx status code
func (o *GetArchitectSchedulegroupsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get architect schedulegroups service unavailable response a status code equal to that given
func (o *GetArchitectSchedulegroupsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetArchitectSchedulegroupsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/schedulegroups][%d] getArchitectSchedulegroupsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetArchitectSchedulegroupsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/schedulegroups][%d] getArchitectSchedulegroupsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetArchitectSchedulegroupsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectSchedulegroupsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectSchedulegroupsGatewayTimeout creates a GetArchitectSchedulegroupsGatewayTimeout with default headers values
func NewGetArchitectSchedulegroupsGatewayTimeout() *GetArchitectSchedulegroupsGatewayTimeout {
	return &GetArchitectSchedulegroupsGatewayTimeout{}
}

/*
GetArchitectSchedulegroupsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetArchitectSchedulegroupsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect schedulegroups gateway timeout response has a 2xx status code
func (o *GetArchitectSchedulegroupsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect schedulegroups gateway timeout response has a 3xx status code
func (o *GetArchitectSchedulegroupsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect schedulegroups gateway timeout response has a 4xx status code
func (o *GetArchitectSchedulegroupsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get architect schedulegroups gateway timeout response has a 5xx status code
func (o *GetArchitectSchedulegroupsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get architect schedulegroups gateway timeout response a status code equal to that given
func (o *GetArchitectSchedulegroupsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetArchitectSchedulegroupsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/schedulegroups][%d] getArchitectSchedulegroupsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetArchitectSchedulegroupsGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/schedulegroups][%d] getArchitectSchedulegroupsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetArchitectSchedulegroupsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectSchedulegroupsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
