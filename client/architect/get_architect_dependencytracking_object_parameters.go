// Code generated by go-swagger; DO NOT EDIT.

package architect

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetArchitectDependencytrackingObjectParams creates a new GetArchitectDependencytrackingObjectParams object
// with the default values initialized.
func NewGetArchitectDependencytrackingObjectParams() *GetArchitectDependencytrackingObjectParams {
	var ()
	return &GetArchitectDependencytrackingObjectParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetArchitectDependencytrackingObjectParamsWithTimeout creates a new GetArchitectDependencytrackingObjectParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetArchitectDependencytrackingObjectParamsWithTimeout(timeout time.Duration) *GetArchitectDependencytrackingObjectParams {
	var ()
	return &GetArchitectDependencytrackingObjectParams{

		timeout: timeout,
	}
}

// NewGetArchitectDependencytrackingObjectParamsWithContext creates a new GetArchitectDependencytrackingObjectParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetArchitectDependencytrackingObjectParamsWithContext(ctx context.Context) *GetArchitectDependencytrackingObjectParams {
	var ()
	return &GetArchitectDependencytrackingObjectParams{

		Context: ctx,
	}
}

// NewGetArchitectDependencytrackingObjectParamsWithHTTPClient creates a new GetArchitectDependencytrackingObjectParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetArchitectDependencytrackingObjectParamsWithHTTPClient(client *http.Client) *GetArchitectDependencytrackingObjectParams {
	var ()
	return &GetArchitectDependencytrackingObjectParams{
		HTTPClient: client,
	}
}

/*GetArchitectDependencytrackingObjectParams contains all the parameters to send to the API endpoint
for the get architect dependencytracking object operation typically these are written to a http.Request
*/
type GetArchitectDependencytrackingObjectParams struct {

	/*ConsumedResourceRequest
	  Indicate that this is going to look up a consumed resource object

	*/
	ConsumedResourceRequest *bool
	/*ConsumedResourceType
	  Types of consumed resources to return, if consumed resources are requested

	*/
	ConsumedResourceType []string
	/*ConsumedResources
	  Include resources this item consumes

	*/
	ConsumedResources *bool
	/*ConsumingResourceType
	  Types of consuming resources to return, if consuming resources are requested

	*/
	ConsumingResourceType []string
	/*ConsumingResources
	  Include resources that consume this item

	*/
	ConsumingResources *bool
	/*ID
	  Object ID

	*/
	ID string
	/*ObjectType
	  Object type

	*/
	ObjectType *string
	/*Version
	  Object version

	*/
	Version *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get architect dependencytracking object params
func (o *GetArchitectDependencytrackingObjectParams) WithTimeout(timeout time.Duration) *GetArchitectDependencytrackingObjectParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get architect dependencytracking object params
func (o *GetArchitectDependencytrackingObjectParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get architect dependencytracking object params
func (o *GetArchitectDependencytrackingObjectParams) WithContext(ctx context.Context) *GetArchitectDependencytrackingObjectParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get architect dependencytracking object params
func (o *GetArchitectDependencytrackingObjectParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get architect dependencytracking object params
func (o *GetArchitectDependencytrackingObjectParams) WithHTTPClient(client *http.Client) *GetArchitectDependencytrackingObjectParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get architect dependencytracking object params
func (o *GetArchitectDependencytrackingObjectParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithConsumedResourceRequest adds the consumedResourceRequest to the get architect dependencytracking object params
func (o *GetArchitectDependencytrackingObjectParams) WithConsumedResourceRequest(consumedResourceRequest *bool) *GetArchitectDependencytrackingObjectParams {
	o.SetConsumedResourceRequest(consumedResourceRequest)
	return o
}

// SetConsumedResourceRequest adds the consumedResourceRequest to the get architect dependencytracking object params
func (o *GetArchitectDependencytrackingObjectParams) SetConsumedResourceRequest(consumedResourceRequest *bool) {
	o.ConsumedResourceRequest = consumedResourceRequest
}

// WithConsumedResourceType adds the consumedResourceType to the get architect dependencytracking object params
func (o *GetArchitectDependencytrackingObjectParams) WithConsumedResourceType(consumedResourceType []string) *GetArchitectDependencytrackingObjectParams {
	o.SetConsumedResourceType(consumedResourceType)
	return o
}

// SetConsumedResourceType adds the consumedResourceType to the get architect dependencytracking object params
func (o *GetArchitectDependencytrackingObjectParams) SetConsumedResourceType(consumedResourceType []string) {
	o.ConsumedResourceType = consumedResourceType
}

// WithConsumedResources adds the consumedResources to the get architect dependencytracking object params
func (o *GetArchitectDependencytrackingObjectParams) WithConsumedResources(consumedResources *bool) *GetArchitectDependencytrackingObjectParams {
	o.SetConsumedResources(consumedResources)
	return o
}

// SetConsumedResources adds the consumedResources to the get architect dependencytracking object params
func (o *GetArchitectDependencytrackingObjectParams) SetConsumedResources(consumedResources *bool) {
	o.ConsumedResources = consumedResources
}

// WithConsumingResourceType adds the consumingResourceType to the get architect dependencytracking object params
func (o *GetArchitectDependencytrackingObjectParams) WithConsumingResourceType(consumingResourceType []string) *GetArchitectDependencytrackingObjectParams {
	o.SetConsumingResourceType(consumingResourceType)
	return o
}

// SetConsumingResourceType adds the consumingResourceType to the get architect dependencytracking object params
func (o *GetArchitectDependencytrackingObjectParams) SetConsumingResourceType(consumingResourceType []string) {
	o.ConsumingResourceType = consumingResourceType
}

// WithConsumingResources adds the consumingResources to the get architect dependencytracking object params
func (o *GetArchitectDependencytrackingObjectParams) WithConsumingResources(consumingResources *bool) *GetArchitectDependencytrackingObjectParams {
	o.SetConsumingResources(consumingResources)
	return o
}

// SetConsumingResources adds the consumingResources to the get architect dependencytracking object params
func (o *GetArchitectDependencytrackingObjectParams) SetConsumingResources(consumingResources *bool) {
	o.ConsumingResources = consumingResources
}

// WithID adds the id to the get architect dependencytracking object params
func (o *GetArchitectDependencytrackingObjectParams) WithID(id string) *GetArchitectDependencytrackingObjectParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the get architect dependencytracking object params
func (o *GetArchitectDependencytrackingObjectParams) SetID(id string) {
	o.ID = id
}

// WithObjectType adds the objectType to the get architect dependencytracking object params
func (o *GetArchitectDependencytrackingObjectParams) WithObjectType(objectType *string) *GetArchitectDependencytrackingObjectParams {
	o.SetObjectType(objectType)
	return o
}

// SetObjectType adds the objectType to the get architect dependencytracking object params
func (o *GetArchitectDependencytrackingObjectParams) SetObjectType(objectType *string) {
	o.ObjectType = objectType
}

// WithVersion adds the version to the get architect dependencytracking object params
func (o *GetArchitectDependencytrackingObjectParams) WithVersion(version *string) *GetArchitectDependencytrackingObjectParams {
	o.SetVersion(version)
	return o
}

// SetVersion adds the version to the get architect dependencytracking object params
func (o *GetArchitectDependencytrackingObjectParams) SetVersion(version *string) {
	o.Version = version
}

// WriteToRequest writes these params to a swagger request
func (o *GetArchitectDependencytrackingObjectParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ConsumedResourceRequest != nil {

		// query param consumedResourceRequest
		var qrConsumedResourceRequest bool
		if o.ConsumedResourceRequest != nil {
			qrConsumedResourceRequest = *o.ConsumedResourceRequest
		}
		qConsumedResourceRequest := swag.FormatBool(qrConsumedResourceRequest)
		if qConsumedResourceRequest != "" {
			if err := r.SetQueryParam("consumedResourceRequest", qConsumedResourceRequest); err != nil {
				return err
			}
		}

	}

	valuesConsumedResourceType := o.ConsumedResourceType

	joinedConsumedResourceType := swag.JoinByFormat(valuesConsumedResourceType, "multi")
	// query array param consumedResourceType
	if err := r.SetQueryParam("consumedResourceType", joinedConsumedResourceType...); err != nil {
		return err
	}

	if o.ConsumedResources != nil {

		// query param consumedResources
		var qrConsumedResources bool
		if o.ConsumedResources != nil {
			qrConsumedResources = *o.ConsumedResources
		}
		qConsumedResources := swag.FormatBool(qrConsumedResources)
		if qConsumedResources != "" {
			if err := r.SetQueryParam("consumedResources", qConsumedResources); err != nil {
				return err
			}
		}

	}

	valuesConsumingResourceType := o.ConsumingResourceType

	joinedConsumingResourceType := swag.JoinByFormat(valuesConsumingResourceType, "multi")
	// query array param consumingResourceType
	if err := r.SetQueryParam("consumingResourceType", joinedConsumingResourceType...); err != nil {
		return err
	}

	if o.ConsumingResources != nil {

		// query param consumingResources
		var qrConsumingResources bool
		if o.ConsumingResources != nil {
			qrConsumingResources = *o.ConsumingResources
		}
		qConsumingResources := swag.FormatBool(qrConsumingResources)
		if qConsumingResources != "" {
			if err := r.SetQueryParam("consumingResources", qConsumingResources); err != nil {
				return err
			}
		}

	}

	// query param id
	qrID := o.ID
	qID := qrID
	if qID != "" {
		if err := r.SetQueryParam("id", qID); err != nil {
			return err
		}
	}

	if o.ObjectType != nil {

		// query param objectType
		var qrObjectType string
		if o.ObjectType != nil {
			qrObjectType = *o.ObjectType
		}
		qObjectType := qrObjectType
		if qObjectType != "" {
			if err := r.SetQueryParam("objectType", qObjectType); err != nil {
				return err
			}
		}

	}

	if o.Version != nil {

		// query param version
		var qrVersion string
		if o.Version != nil {
			qrVersion = *o.Version
		}
		qVersion := qrVersion
		if qVersion != "" {
			if err := r.SetQueryParam("version", qVersion); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
