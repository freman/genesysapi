// Code generated by go-swagger; DO NOT EDIT.

package architect

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetArchitectSchedulesReader is a Reader for the GetArchitectSchedules structure.
type GetArchitectSchedulesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetArchitectSchedulesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetArchitectSchedulesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetArchitectSchedulesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetArchitectSchedulesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetArchitectSchedulesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetArchitectSchedulesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetArchitectSchedulesRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetArchitectSchedulesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetArchitectSchedulesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetArchitectSchedulesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetArchitectSchedulesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetArchitectSchedulesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetArchitectSchedulesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetArchitectSchedulesOK creates a GetArchitectSchedulesOK with default headers values
func NewGetArchitectSchedulesOK() *GetArchitectSchedulesOK {
	return &GetArchitectSchedulesOK{}
}

/*
GetArchitectSchedulesOK describes a response with status code 200, with default header values.

successful operation
*/
type GetArchitectSchedulesOK struct {
	Payload *models.ScheduleEntityListing
}

// IsSuccess returns true when this get architect schedules o k response has a 2xx status code
func (o *GetArchitectSchedulesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get architect schedules o k response has a 3xx status code
func (o *GetArchitectSchedulesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect schedules o k response has a 4xx status code
func (o *GetArchitectSchedulesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get architect schedules o k response has a 5xx status code
func (o *GetArchitectSchedulesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get architect schedules o k response a status code equal to that given
func (o *GetArchitectSchedulesOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetArchitectSchedulesOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/schedules][%d] getArchitectSchedulesOK  %+v", 200, o.Payload)
}

func (o *GetArchitectSchedulesOK) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/schedules][%d] getArchitectSchedulesOK  %+v", 200, o.Payload)
}

func (o *GetArchitectSchedulesOK) GetPayload() *models.ScheduleEntityListing {
	return o.Payload
}

func (o *GetArchitectSchedulesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ScheduleEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectSchedulesBadRequest creates a GetArchitectSchedulesBadRequest with default headers values
func NewGetArchitectSchedulesBadRequest() *GetArchitectSchedulesBadRequest {
	return &GetArchitectSchedulesBadRequest{}
}

/*
GetArchitectSchedulesBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetArchitectSchedulesBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect schedules bad request response has a 2xx status code
func (o *GetArchitectSchedulesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect schedules bad request response has a 3xx status code
func (o *GetArchitectSchedulesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect schedules bad request response has a 4xx status code
func (o *GetArchitectSchedulesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get architect schedules bad request response has a 5xx status code
func (o *GetArchitectSchedulesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get architect schedules bad request response a status code equal to that given
func (o *GetArchitectSchedulesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetArchitectSchedulesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/schedules][%d] getArchitectSchedulesBadRequest  %+v", 400, o.Payload)
}

func (o *GetArchitectSchedulesBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/schedules][%d] getArchitectSchedulesBadRequest  %+v", 400, o.Payload)
}

func (o *GetArchitectSchedulesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectSchedulesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectSchedulesUnauthorized creates a GetArchitectSchedulesUnauthorized with default headers values
func NewGetArchitectSchedulesUnauthorized() *GetArchitectSchedulesUnauthorized {
	return &GetArchitectSchedulesUnauthorized{}
}

/*
GetArchitectSchedulesUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetArchitectSchedulesUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect schedules unauthorized response has a 2xx status code
func (o *GetArchitectSchedulesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect schedules unauthorized response has a 3xx status code
func (o *GetArchitectSchedulesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect schedules unauthorized response has a 4xx status code
func (o *GetArchitectSchedulesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get architect schedules unauthorized response has a 5xx status code
func (o *GetArchitectSchedulesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get architect schedules unauthorized response a status code equal to that given
func (o *GetArchitectSchedulesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetArchitectSchedulesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/schedules][%d] getArchitectSchedulesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetArchitectSchedulesUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/schedules][%d] getArchitectSchedulesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetArchitectSchedulesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectSchedulesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectSchedulesForbidden creates a GetArchitectSchedulesForbidden with default headers values
func NewGetArchitectSchedulesForbidden() *GetArchitectSchedulesForbidden {
	return &GetArchitectSchedulesForbidden{}
}

/*
GetArchitectSchedulesForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetArchitectSchedulesForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect schedules forbidden response has a 2xx status code
func (o *GetArchitectSchedulesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect schedules forbidden response has a 3xx status code
func (o *GetArchitectSchedulesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect schedules forbidden response has a 4xx status code
func (o *GetArchitectSchedulesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get architect schedules forbidden response has a 5xx status code
func (o *GetArchitectSchedulesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get architect schedules forbidden response a status code equal to that given
func (o *GetArchitectSchedulesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetArchitectSchedulesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/schedules][%d] getArchitectSchedulesForbidden  %+v", 403, o.Payload)
}

func (o *GetArchitectSchedulesForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/schedules][%d] getArchitectSchedulesForbidden  %+v", 403, o.Payload)
}

func (o *GetArchitectSchedulesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectSchedulesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectSchedulesNotFound creates a GetArchitectSchedulesNotFound with default headers values
func NewGetArchitectSchedulesNotFound() *GetArchitectSchedulesNotFound {
	return &GetArchitectSchedulesNotFound{}
}

/*
GetArchitectSchedulesNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetArchitectSchedulesNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect schedules not found response has a 2xx status code
func (o *GetArchitectSchedulesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect schedules not found response has a 3xx status code
func (o *GetArchitectSchedulesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect schedules not found response has a 4xx status code
func (o *GetArchitectSchedulesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get architect schedules not found response has a 5xx status code
func (o *GetArchitectSchedulesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get architect schedules not found response a status code equal to that given
func (o *GetArchitectSchedulesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetArchitectSchedulesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/schedules][%d] getArchitectSchedulesNotFound  %+v", 404, o.Payload)
}

func (o *GetArchitectSchedulesNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/schedules][%d] getArchitectSchedulesNotFound  %+v", 404, o.Payload)
}

func (o *GetArchitectSchedulesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectSchedulesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectSchedulesRequestTimeout creates a GetArchitectSchedulesRequestTimeout with default headers values
func NewGetArchitectSchedulesRequestTimeout() *GetArchitectSchedulesRequestTimeout {
	return &GetArchitectSchedulesRequestTimeout{}
}

/*
GetArchitectSchedulesRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetArchitectSchedulesRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect schedules request timeout response has a 2xx status code
func (o *GetArchitectSchedulesRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect schedules request timeout response has a 3xx status code
func (o *GetArchitectSchedulesRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect schedules request timeout response has a 4xx status code
func (o *GetArchitectSchedulesRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get architect schedules request timeout response has a 5xx status code
func (o *GetArchitectSchedulesRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get architect schedules request timeout response a status code equal to that given
func (o *GetArchitectSchedulesRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetArchitectSchedulesRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/schedules][%d] getArchitectSchedulesRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetArchitectSchedulesRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/schedules][%d] getArchitectSchedulesRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetArchitectSchedulesRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectSchedulesRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectSchedulesRequestEntityTooLarge creates a GetArchitectSchedulesRequestEntityTooLarge with default headers values
func NewGetArchitectSchedulesRequestEntityTooLarge() *GetArchitectSchedulesRequestEntityTooLarge {
	return &GetArchitectSchedulesRequestEntityTooLarge{}
}

/*
GetArchitectSchedulesRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetArchitectSchedulesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect schedules request entity too large response has a 2xx status code
func (o *GetArchitectSchedulesRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect schedules request entity too large response has a 3xx status code
func (o *GetArchitectSchedulesRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect schedules request entity too large response has a 4xx status code
func (o *GetArchitectSchedulesRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get architect schedules request entity too large response has a 5xx status code
func (o *GetArchitectSchedulesRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get architect schedules request entity too large response a status code equal to that given
func (o *GetArchitectSchedulesRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetArchitectSchedulesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/schedules][%d] getArchitectSchedulesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetArchitectSchedulesRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/schedules][%d] getArchitectSchedulesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetArchitectSchedulesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectSchedulesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectSchedulesUnsupportedMediaType creates a GetArchitectSchedulesUnsupportedMediaType with default headers values
func NewGetArchitectSchedulesUnsupportedMediaType() *GetArchitectSchedulesUnsupportedMediaType {
	return &GetArchitectSchedulesUnsupportedMediaType{}
}

/*
GetArchitectSchedulesUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetArchitectSchedulesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect schedules unsupported media type response has a 2xx status code
func (o *GetArchitectSchedulesUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect schedules unsupported media type response has a 3xx status code
func (o *GetArchitectSchedulesUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect schedules unsupported media type response has a 4xx status code
func (o *GetArchitectSchedulesUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get architect schedules unsupported media type response has a 5xx status code
func (o *GetArchitectSchedulesUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get architect schedules unsupported media type response a status code equal to that given
func (o *GetArchitectSchedulesUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetArchitectSchedulesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/schedules][%d] getArchitectSchedulesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetArchitectSchedulesUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/schedules][%d] getArchitectSchedulesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetArchitectSchedulesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectSchedulesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectSchedulesTooManyRequests creates a GetArchitectSchedulesTooManyRequests with default headers values
func NewGetArchitectSchedulesTooManyRequests() *GetArchitectSchedulesTooManyRequests {
	return &GetArchitectSchedulesTooManyRequests{}
}

/*
GetArchitectSchedulesTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetArchitectSchedulesTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect schedules too many requests response has a 2xx status code
func (o *GetArchitectSchedulesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect schedules too many requests response has a 3xx status code
func (o *GetArchitectSchedulesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect schedules too many requests response has a 4xx status code
func (o *GetArchitectSchedulesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get architect schedules too many requests response has a 5xx status code
func (o *GetArchitectSchedulesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get architect schedules too many requests response a status code equal to that given
func (o *GetArchitectSchedulesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetArchitectSchedulesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/schedules][%d] getArchitectSchedulesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetArchitectSchedulesTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/schedules][%d] getArchitectSchedulesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetArchitectSchedulesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectSchedulesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectSchedulesInternalServerError creates a GetArchitectSchedulesInternalServerError with default headers values
func NewGetArchitectSchedulesInternalServerError() *GetArchitectSchedulesInternalServerError {
	return &GetArchitectSchedulesInternalServerError{}
}

/*
GetArchitectSchedulesInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetArchitectSchedulesInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect schedules internal server error response has a 2xx status code
func (o *GetArchitectSchedulesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect schedules internal server error response has a 3xx status code
func (o *GetArchitectSchedulesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect schedules internal server error response has a 4xx status code
func (o *GetArchitectSchedulesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get architect schedules internal server error response has a 5xx status code
func (o *GetArchitectSchedulesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get architect schedules internal server error response a status code equal to that given
func (o *GetArchitectSchedulesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetArchitectSchedulesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/schedules][%d] getArchitectSchedulesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetArchitectSchedulesInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/schedules][%d] getArchitectSchedulesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetArchitectSchedulesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectSchedulesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectSchedulesServiceUnavailable creates a GetArchitectSchedulesServiceUnavailable with default headers values
func NewGetArchitectSchedulesServiceUnavailable() *GetArchitectSchedulesServiceUnavailable {
	return &GetArchitectSchedulesServiceUnavailable{}
}

/*
GetArchitectSchedulesServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetArchitectSchedulesServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect schedules service unavailable response has a 2xx status code
func (o *GetArchitectSchedulesServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect schedules service unavailable response has a 3xx status code
func (o *GetArchitectSchedulesServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect schedules service unavailable response has a 4xx status code
func (o *GetArchitectSchedulesServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get architect schedules service unavailable response has a 5xx status code
func (o *GetArchitectSchedulesServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get architect schedules service unavailable response a status code equal to that given
func (o *GetArchitectSchedulesServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetArchitectSchedulesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/schedules][%d] getArchitectSchedulesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetArchitectSchedulesServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/schedules][%d] getArchitectSchedulesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetArchitectSchedulesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectSchedulesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectSchedulesGatewayTimeout creates a GetArchitectSchedulesGatewayTimeout with default headers values
func NewGetArchitectSchedulesGatewayTimeout() *GetArchitectSchedulesGatewayTimeout {
	return &GetArchitectSchedulesGatewayTimeout{}
}

/*
GetArchitectSchedulesGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetArchitectSchedulesGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect schedules gateway timeout response has a 2xx status code
func (o *GetArchitectSchedulesGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect schedules gateway timeout response has a 3xx status code
func (o *GetArchitectSchedulesGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect schedules gateway timeout response has a 4xx status code
func (o *GetArchitectSchedulesGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get architect schedules gateway timeout response has a 5xx status code
func (o *GetArchitectSchedulesGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get architect schedules gateway timeout response a status code equal to that given
func (o *GetArchitectSchedulesGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetArchitectSchedulesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/schedules][%d] getArchitectSchedulesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetArchitectSchedulesGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/schedules][%d] getArchitectSchedulesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetArchitectSchedulesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectSchedulesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
