// Code generated by go-swagger; DO NOT EDIT.

package architect

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetFlowsDatatableImportJobsReader is a Reader for the GetFlowsDatatableImportJobs structure.
type GetFlowsDatatableImportJobsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFlowsDatatableImportJobsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFlowsDatatableImportJobsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetFlowsDatatableImportJobsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetFlowsDatatableImportJobsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetFlowsDatatableImportJobsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetFlowsDatatableImportJobsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetFlowsDatatableImportJobsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetFlowsDatatableImportJobsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetFlowsDatatableImportJobsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetFlowsDatatableImportJobsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetFlowsDatatableImportJobsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetFlowsDatatableImportJobsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetFlowsDatatableImportJobsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetFlowsDatatableImportJobsOK creates a GetFlowsDatatableImportJobsOK with default headers values
func NewGetFlowsDatatableImportJobsOK() *GetFlowsDatatableImportJobsOK {
	return &GetFlowsDatatableImportJobsOK{}
}

/*
GetFlowsDatatableImportJobsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetFlowsDatatableImportJobsOK struct {
	Payload *models.DataTableImportEntityListing
}

// IsSuccess returns true when this get flows datatable import jobs o k response has a 2xx status code
func (o *GetFlowsDatatableImportJobsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get flows datatable import jobs o k response has a 3xx status code
func (o *GetFlowsDatatableImportJobsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flows datatable import jobs o k response has a 4xx status code
func (o *GetFlowsDatatableImportJobsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get flows datatable import jobs o k response has a 5xx status code
func (o *GetFlowsDatatableImportJobsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get flows datatable import jobs o k response a status code equal to that given
func (o *GetFlowsDatatableImportJobsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetFlowsDatatableImportJobsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs][%d] getFlowsDatatableImportJobsOK  %+v", 200, o.Payload)
}

func (o *GetFlowsDatatableImportJobsOK) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs][%d] getFlowsDatatableImportJobsOK  %+v", 200, o.Payload)
}

func (o *GetFlowsDatatableImportJobsOK) GetPayload() *models.DataTableImportEntityListing {
	return o.Payload
}

func (o *GetFlowsDatatableImportJobsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DataTableImportEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableImportJobsBadRequest creates a GetFlowsDatatableImportJobsBadRequest with default headers values
func NewGetFlowsDatatableImportJobsBadRequest() *GetFlowsDatatableImportJobsBadRequest {
	return &GetFlowsDatatableImportJobsBadRequest{}
}

/*
GetFlowsDatatableImportJobsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetFlowsDatatableImportJobsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flows datatable import jobs bad request response has a 2xx status code
func (o *GetFlowsDatatableImportJobsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flows datatable import jobs bad request response has a 3xx status code
func (o *GetFlowsDatatableImportJobsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flows datatable import jobs bad request response has a 4xx status code
func (o *GetFlowsDatatableImportJobsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flows datatable import jobs bad request response has a 5xx status code
func (o *GetFlowsDatatableImportJobsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get flows datatable import jobs bad request response a status code equal to that given
func (o *GetFlowsDatatableImportJobsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetFlowsDatatableImportJobsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs][%d] getFlowsDatatableImportJobsBadRequest  %+v", 400, o.Payload)
}

func (o *GetFlowsDatatableImportJobsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs][%d] getFlowsDatatableImportJobsBadRequest  %+v", 400, o.Payload)
}

func (o *GetFlowsDatatableImportJobsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableImportJobsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableImportJobsUnauthorized creates a GetFlowsDatatableImportJobsUnauthorized with default headers values
func NewGetFlowsDatatableImportJobsUnauthorized() *GetFlowsDatatableImportJobsUnauthorized {
	return &GetFlowsDatatableImportJobsUnauthorized{}
}

/*
GetFlowsDatatableImportJobsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetFlowsDatatableImportJobsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flows datatable import jobs unauthorized response has a 2xx status code
func (o *GetFlowsDatatableImportJobsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flows datatable import jobs unauthorized response has a 3xx status code
func (o *GetFlowsDatatableImportJobsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flows datatable import jobs unauthorized response has a 4xx status code
func (o *GetFlowsDatatableImportJobsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flows datatable import jobs unauthorized response has a 5xx status code
func (o *GetFlowsDatatableImportJobsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get flows datatable import jobs unauthorized response a status code equal to that given
func (o *GetFlowsDatatableImportJobsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetFlowsDatatableImportJobsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs][%d] getFlowsDatatableImportJobsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetFlowsDatatableImportJobsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs][%d] getFlowsDatatableImportJobsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetFlowsDatatableImportJobsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableImportJobsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableImportJobsForbidden creates a GetFlowsDatatableImportJobsForbidden with default headers values
func NewGetFlowsDatatableImportJobsForbidden() *GetFlowsDatatableImportJobsForbidden {
	return &GetFlowsDatatableImportJobsForbidden{}
}

/*
GetFlowsDatatableImportJobsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetFlowsDatatableImportJobsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flows datatable import jobs forbidden response has a 2xx status code
func (o *GetFlowsDatatableImportJobsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flows datatable import jobs forbidden response has a 3xx status code
func (o *GetFlowsDatatableImportJobsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flows datatable import jobs forbidden response has a 4xx status code
func (o *GetFlowsDatatableImportJobsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flows datatable import jobs forbidden response has a 5xx status code
func (o *GetFlowsDatatableImportJobsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get flows datatable import jobs forbidden response a status code equal to that given
func (o *GetFlowsDatatableImportJobsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetFlowsDatatableImportJobsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs][%d] getFlowsDatatableImportJobsForbidden  %+v", 403, o.Payload)
}

func (o *GetFlowsDatatableImportJobsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs][%d] getFlowsDatatableImportJobsForbidden  %+v", 403, o.Payload)
}

func (o *GetFlowsDatatableImportJobsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableImportJobsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableImportJobsNotFound creates a GetFlowsDatatableImportJobsNotFound with default headers values
func NewGetFlowsDatatableImportJobsNotFound() *GetFlowsDatatableImportJobsNotFound {
	return &GetFlowsDatatableImportJobsNotFound{}
}

/*
GetFlowsDatatableImportJobsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetFlowsDatatableImportJobsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flows datatable import jobs not found response has a 2xx status code
func (o *GetFlowsDatatableImportJobsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flows datatable import jobs not found response has a 3xx status code
func (o *GetFlowsDatatableImportJobsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flows datatable import jobs not found response has a 4xx status code
func (o *GetFlowsDatatableImportJobsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flows datatable import jobs not found response has a 5xx status code
func (o *GetFlowsDatatableImportJobsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get flows datatable import jobs not found response a status code equal to that given
func (o *GetFlowsDatatableImportJobsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetFlowsDatatableImportJobsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs][%d] getFlowsDatatableImportJobsNotFound  %+v", 404, o.Payload)
}

func (o *GetFlowsDatatableImportJobsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs][%d] getFlowsDatatableImportJobsNotFound  %+v", 404, o.Payload)
}

func (o *GetFlowsDatatableImportJobsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableImportJobsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableImportJobsRequestTimeout creates a GetFlowsDatatableImportJobsRequestTimeout with default headers values
func NewGetFlowsDatatableImportJobsRequestTimeout() *GetFlowsDatatableImportJobsRequestTimeout {
	return &GetFlowsDatatableImportJobsRequestTimeout{}
}

/*
GetFlowsDatatableImportJobsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetFlowsDatatableImportJobsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flows datatable import jobs request timeout response has a 2xx status code
func (o *GetFlowsDatatableImportJobsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flows datatable import jobs request timeout response has a 3xx status code
func (o *GetFlowsDatatableImportJobsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flows datatable import jobs request timeout response has a 4xx status code
func (o *GetFlowsDatatableImportJobsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flows datatable import jobs request timeout response has a 5xx status code
func (o *GetFlowsDatatableImportJobsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get flows datatable import jobs request timeout response a status code equal to that given
func (o *GetFlowsDatatableImportJobsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetFlowsDatatableImportJobsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs][%d] getFlowsDatatableImportJobsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetFlowsDatatableImportJobsRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs][%d] getFlowsDatatableImportJobsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetFlowsDatatableImportJobsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableImportJobsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableImportJobsRequestEntityTooLarge creates a GetFlowsDatatableImportJobsRequestEntityTooLarge with default headers values
func NewGetFlowsDatatableImportJobsRequestEntityTooLarge() *GetFlowsDatatableImportJobsRequestEntityTooLarge {
	return &GetFlowsDatatableImportJobsRequestEntityTooLarge{}
}

/*
GetFlowsDatatableImportJobsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetFlowsDatatableImportJobsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flows datatable import jobs request entity too large response has a 2xx status code
func (o *GetFlowsDatatableImportJobsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flows datatable import jobs request entity too large response has a 3xx status code
func (o *GetFlowsDatatableImportJobsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flows datatable import jobs request entity too large response has a 4xx status code
func (o *GetFlowsDatatableImportJobsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flows datatable import jobs request entity too large response has a 5xx status code
func (o *GetFlowsDatatableImportJobsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get flows datatable import jobs request entity too large response a status code equal to that given
func (o *GetFlowsDatatableImportJobsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetFlowsDatatableImportJobsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs][%d] getFlowsDatatableImportJobsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetFlowsDatatableImportJobsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs][%d] getFlowsDatatableImportJobsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetFlowsDatatableImportJobsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableImportJobsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableImportJobsUnsupportedMediaType creates a GetFlowsDatatableImportJobsUnsupportedMediaType with default headers values
func NewGetFlowsDatatableImportJobsUnsupportedMediaType() *GetFlowsDatatableImportJobsUnsupportedMediaType {
	return &GetFlowsDatatableImportJobsUnsupportedMediaType{}
}

/*
GetFlowsDatatableImportJobsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetFlowsDatatableImportJobsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flows datatable import jobs unsupported media type response has a 2xx status code
func (o *GetFlowsDatatableImportJobsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flows datatable import jobs unsupported media type response has a 3xx status code
func (o *GetFlowsDatatableImportJobsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flows datatable import jobs unsupported media type response has a 4xx status code
func (o *GetFlowsDatatableImportJobsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flows datatable import jobs unsupported media type response has a 5xx status code
func (o *GetFlowsDatatableImportJobsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get flows datatable import jobs unsupported media type response a status code equal to that given
func (o *GetFlowsDatatableImportJobsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetFlowsDatatableImportJobsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs][%d] getFlowsDatatableImportJobsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetFlowsDatatableImportJobsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs][%d] getFlowsDatatableImportJobsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetFlowsDatatableImportJobsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableImportJobsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableImportJobsTooManyRequests creates a GetFlowsDatatableImportJobsTooManyRequests with default headers values
func NewGetFlowsDatatableImportJobsTooManyRequests() *GetFlowsDatatableImportJobsTooManyRequests {
	return &GetFlowsDatatableImportJobsTooManyRequests{}
}

/*
GetFlowsDatatableImportJobsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetFlowsDatatableImportJobsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flows datatable import jobs too many requests response has a 2xx status code
func (o *GetFlowsDatatableImportJobsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flows datatable import jobs too many requests response has a 3xx status code
func (o *GetFlowsDatatableImportJobsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flows datatable import jobs too many requests response has a 4xx status code
func (o *GetFlowsDatatableImportJobsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flows datatable import jobs too many requests response has a 5xx status code
func (o *GetFlowsDatatableImportJobsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get flows datatable import jobs too many requests response a status code equal to that given
func (o *GetFlowsDatatableImportJobsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetFlowsDatatableImportJobsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs][%d] getFlowsDatatableImportJobsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetFlowsDatatableImportJobsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs][%d] getFlowsDatatableImportJobsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetFlowsDatatableImportJobsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableImportJobsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableImportJobsInternalServerError creates a GetFlowsDatatableImportJobsInternalServerError with default headers values
func NewGetFlowsDatatableImportJobsInternalServerError() *GetFlowsDatatableImportJobsInternalServerError {
	return &GetFlowsDatatableImportJobsInternalServerError{}
}

/*
GetFlowsDatatableImportJobsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetFlowsDatatableImportJobsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flows datatable import jobs internal server error response has a 2xx status code
func (o *GetFlowsDatatableImportJobsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flows datatable import jobs internal server error response has a 3xx status code
func (o *GetFlowsDatatableImportJobsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flows datatable import jobs internal server error response has a 4xx status code
func (o *GetFlowsDatatableImportJobsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get flows datatable import jobs internal server error response has a 5xx status code
func (o *GetFlowsDatatableImportJobsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get flows datatable import jobs internal server error response a status code equal to that given
func (o *GetFlowsDatatableImportJobsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetFlowsDatatableImportJobsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs][%d] getFlowsDatatableImportJobsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetFlowsDatatableImportJobsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs][%d] getFlowsDatatableImportJobsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetFlowsDatatableImportJobsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableImportJobsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableImportJobsServiceUnavailable creates a GetFlowsDatatableImportJobsServiceUnavailable with default headers values
func NewGetFlowsDatatableImportJobsServiceUnavailable() *GetFlowsDatatableImportJobsServiceUnavailable {
	return &GetFlowsDatatableImportJobsServiceUnavailable{}
}

/*
GetFlowsDatatableImportJobsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetFlowsDatatableImportJobsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flows datatable import jobs service unavailable response has a 2xx status code
func (o *GetFlowsDatatableImportJobsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flows datatable import jobs service unavailable response has a 3xx status code
func (o *GetFlowsDatatableImportJobsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flows datatable import jobs service unavailable response has a 4xx status code
func (o *GetFlowsDatatableImportJobsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get flows datatable import jobs service unavailable response has a 5xx status code
func (o *GetFlowsDatatableImportJobsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get flows datatable import jobs service unavailable response a status code equal to that given
func (o *GetFlowsDatatableImportJobsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetFlowsDatatableImportJobsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs][%d] getFlowsDatatableImportJobsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetFlowsDatatableImportJobsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs][%d] getFlowsDatatableImportJobsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetFlowsDatatableImportJobsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableImportJobsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableImportJobsGatewayTimeout creates a GetFlowsDatatableImportJobsGatewayTimeout with default headers values
func NewGetFlowsDatatableImportJobsGatewayTimeout() *GetFlowsDatatableImportJobsGatewayTimeout {
	return &GetFlowsDatatableImportJobsGatewayTimeout{}
}

/*
GetFlowsDatatableImportJobsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetFlowsDatatableImportJobsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flows datatable import jobs gateway timeout response has a 2xx status code
func (o *GetFlowsDatatableImportJobsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flows datatable import jobs gateway timeout response has a 3xx status code
func (o *GetFlowsDatatableImportJobsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flows datatable import jobs gateway timeout response has a 4xx status code
func (o *GetFlowsDatatableImportJobsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get flows datatable import jobs gateway timeout response has a 5xx status code
func (o *GetFlowsDatatableImportJobsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get flows datatable import jobs gateway timeout response a status code equal to that given
func (o *GetFlowsDatatableImportJobsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetFlowsDatatableImportJobsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs][%d] getFlowsDatatableImportJobsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetFlowsDatatableImportJobsGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs][%d] getFlowsDatatableImportJobsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetFlowsDatatableImportJobsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableImportJobsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
