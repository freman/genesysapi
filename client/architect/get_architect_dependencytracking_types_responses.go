// Code generated by go-swagger; DO NOT EDIT.

package architect

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetArchitectDependencytrackingTypesReader is a Reader for the GetArchitectDependencytrackingTypes structure.
type GetArchitectDependencytrackingTypesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetArchitectDependencytrackingTypesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetArchitectDependencytrackingTypesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetArchitectDependencytrackingTypesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetArchitectDependencytrackingTypesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetArchitectDependencytrackingTypesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetArchitectDependencytrackingTypesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetArchitectDependencytrackingTypesRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetArchitectDependencytrackingTypesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetArchitectDependencytrackingTypesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetArchitectDependencytrackingTypesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetArchitectDependencytrackingTypesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetArchitectDependencytrackingTypesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetArchitectDependencytrackingTypesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetArchitectDependencytrackingTypesOK creates a GetArchitectDependencytrackingTypesOK with default headers values
func NewGetArchitectDependencytrackingTypesOK() *GetArchitectDependencytrackingTypesOK {
	return &GetArchitectDependencytrackingTypesOK{}
}

/*
GetArchitectDependencytrackingTypesOK describes a response with status code 200, with default header values.

successful operation
*/
type GetArchitectDependencytrackingTypesOK struct {
	Payload *models.DependencyTypeEntityListing
}

// IsSuccess returns true when this get architect dependencytracking types o k response has a 2xx status code
func (o *GetArchitectDependencytrackingTypesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get architect dependencytracking types o k response has a 3xx status code
func (o *GetArchitectDependencytrackingTypesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect dependencytracking types o k response has a 4xx status code
func (o *GetArchitectDependencytrackingTypesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get architect dependencytracking types o k response has a 5xx status code
func (o *GetArchitectDependencytrackingTypesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get architect dependencytracking types o k response a status code equal to that given
func (o *GetArchitectDependencytrackingTypesOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetArchitectDependencytrackingTypesOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/dependencytracking/types][%d] getArchitectDependencytrackingTypesOK  %+v", 200, o.Payload)
}

func (o *GetArchitectDependencytrackingTypesOK) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/dependencytracking/types][%d] getArchitectDependencytrackingTypesOK  %+v", 200, o.Payload)
}

func (o *GetArchitectDependencytrackingTypesOK) GetPayload() *models.DependencyTypeEntityListing {
	return o.Payload
}

func (o *GetArchitectDependencytrackingTypesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DependencyTypeEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectDependencytrackingTypesBadRequest creates a GetArchitectDependencytrackingTypesBadRequest with default headers values
func NewGetArchitectDependencytrackingTypesBadRequest() *GetArchitectDependencytrackingTypesBadRequest {
	return &GetArchitectDependencytrackingTypesBadRequest{}
}

/*
GetArchitectDependencytrackingTypesBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetArchitectDependencytrackingTypesBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect dependencytracking types bad request response has a 2xx status code
func (o *GetArchitectDependencytrackingTypesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect dependencytracking types bad request response has a 3xx status code
func (o *GetArchitectDependencytrackingTypesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect dependencytracking types bad request response has a 4xx status code
func (o *GetArchitectDependencytrackingTypesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get architect dependencytracking types bad request response has a 5xx status code
func (o *GetArchitectDependencytrackingTypesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get architect dependencytracking types bad request response a status code equal to that given
func (o *GetArchitectDependencytrackingTypesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetArchitectDependencytrackingTypesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/dependencytracking/types][%d] getArchitectDependencytrackingTypesBadRequest  %+v", 400, o.Payload)
}

func (o *GetArchitectDependencytrackingTypesBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/dependencytracking/types][%d] getArchitectDependencytrackingTypesBadRequest  %+v", 400, o.Payload)
}

func (o *GetArchitectDependencytrackingTypesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectDependencytrackingTypesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectDependencytrackingTypesUnauthorized creates a GetArchitectDependencytrackingTypesUnauthorized with default headers values
func NewGetArchitectDependencytrackingTypesUnauthorized() *GetArchitectDependencytrackingTypesUnauthorized {
	return &GetArchitectDependencytrackingTypesUnauthorized{}
}

/*
GetArchitectDependencytrackingTypesUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetArchitectDependencytrackingTypesUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect dependencytracking types unauthorized response has a 2xx status code
func (o *GetArchitectDependencytrackingTypesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect dependencytracking types unauthorized response has a 3xx status code
func (o *GetArchitectDependencytrackingTypesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect dependencytracking types unauthorized response has a 4xx status code
func (o *GetArchitectDependencytrackingTypesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get architect dependencytracking types unauthorized response has a 5xx status code
func (o *GetArchitectDependencytrackingTypesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get architect dependencytracking types unauthorized response a status code equal to that given
func (o *GetArchitectDependencytrackingTypesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetArchitectDependencytrackingTypesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/dependencytracking/types][%d] getArchitectDependencytrackingTypesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetArchitectDependencytrackingTypesUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/dependencytracking/types][%d] getArchitectDependencytrackingTypesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetArchitectDependencytrackingTypesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectDependencytrackingTypesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectDependencytrackingTypesForbidden creates a GetArchitectDependencytrackingTypesForbidden with default headers values
func NewGetArchitectDependencytrackingTypesForbidden() *GetArchitectDependencytrackingTypesForbidden {
	return &GetArchitectDependencytrackingTypesForbidden{}
}

/*
GetArchitectDependencytrackingTypesForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetArchitectDependencytrackingTypesForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect dependencytracking types forbidden response has a 2xx status code
func (o *GetArchitectDependencytrackingTypesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect dependencytracking types forbidden response has a 3xx status code
func (o *GetArchitectDependencytrackingTypesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect dependencytracking types forbidden response has a 4xx status code
func (o *GetArchitectDependencytrackingTypesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get architect dependencytracking types forbidden response has a 5xx status code
func (o *GetArchitectDependencytrackingTypesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get architect dependencytracking types forbidden response a status code equal to that given
func (o *GetArchitectDependencytrackingTypesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetArchitectDependencytrackingTypesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/dependencytracking/types][%d] getArchitectDependencytrackingTypesForbidden  %+v", 403, o.Payload)
}

func (o *GetArchitectDependencytrackingTypesForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/dependencytracking/types][%d] getArchitectDependencytrackingTypesForbidden  %+v", 403, o.Payload)
}

func (o *GetArchitectDependencytrackingTypesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectDependencytrackingTypesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectDependencytrackingTypesNotFound creates a GetArchitectDependencytrackingTypesNotFound with default headers values
func NewGetArchitectDependencytrackingTypesNotFound() *GetArchitectDependencytrackingTypesNotFound {
	return &GetArchitectDependencytrackingTypesNotFound{}
}

/*
GetArchitectDependencytrackingTypesNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetArchitectDependencytrackingTypesNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect dependencytracking types not found response has a 2xx status code
func (o *GetArchitectDependencytrackingTypesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect dependencytracking types not found response has a 3xx status code
func (o *GetArchitectDependencytrackingTypesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect dependencytracking types not found response has a 4xx status code
func (o *GetArchitectDependencytrackingTypesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get architect dependencytracking types not found response has a 5xx status code
func (o *GetArchitectDependencytrackingTypesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get architect dependencytracking types not found response a status code equal to that given
func (o *GetArchitectDependencytrackingTypesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetArchitectDependencytrackingTypesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/dependencytracking/types][%d] getArchitectDependencytrackingTypesNotFound  %+v", 404, o.Payload)
}

func (o *GetArchitectDependencytrackingTypesNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/dependencytracking/types][%d] getArchitectDependencytrackingTypesNotFound  %+v", 404, o.Payload)
}

func (o *GetArchitectDependencytrackingTypesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectDependencytrackingTypesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectDependencytrackingTypesRequestTimeout creates a GetArchitectDependencytrackingTypesRequestTimeout with default headers values
func NewGetArchitectDependencytrackingTypesRequestTimeout() *GetArchitectDependencytrackingTypesRequestTimeout {
	return &GetArchitectDependencytrackingTypesRequestTimeout{}
}

/*
GetArchitectDependencytrackingTypesRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetArchitectDependencytrackingTypesRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect dependencytracking types request timeout response has a 2xx status code
func (o *GetArchitectDependencytrackingTypesRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect dependencytracking types request timeout response has a 3xx status code
func (o *GetArchitectDependencytrackingTypesRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect dependencytracking types request timeout response has a 4xx status code
func (o *GetArchitectDependencytrackingTypesRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get architect dependencytracking types request timeout response has a 5xx status code
func (o *GetArchitectDependencytrackingTypesRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get architect dependencytracking types request timeout response a status code equal to that given
func (o *GetArchitectDependencytrackingTypesRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetArchitectDependencytrackingTypesRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/dependencytracking/types][%d] getArchitectDependencytrackingTypesRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetArchitectDependencytrackingTypesRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/dependencytracking/types][%d] getArchitectDependencytrackingTypesRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetArchitectDependencytrackingTypesRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectDependencytrackingTypesRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectDependencytrackingTypesRequestEntityTooLarge creates a GetArchitectDependencytrackingTypesRequestEntityTooLarge with default headers values
func NewGetArchitectDependencytrackingTypesRequestEntityTooLarge() *GetArchitectDependencytrackingTypesRequestEntityTooLarge {
	return &GetArchitectDependencytrackingTypesRequestEntityTooLarge{}
}

/*
GetArchitectDependencytrackingTypesRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetArchitectDependencytrackingTypesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect dependencytracking types request entity too large response has a 2xx status code
func (o *GetArchitectDependencytrackingTypesRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect dependencytracking types request entity too large response has a 3xx status code
func (o *GetArchitectDependencytrackingTypesRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect dependencytracking types request entity too large response has a 4xx status code
func (o *GetArchitectDependencytrackingTypesRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get architect dependencytracking types request entity too large response has a 5xx status code
func (o *GetArchitectDependencytrackingTypesRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get architect dependencytracking types request entity too large response a status code equal to that given
func (o *GetArchitectDependencytrackingTypesRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetArchitectDependencytrackingTypesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/dependencytracking/types][%d] getArchitectDependencytrackingTypesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetArchitectDependencytrackingTypesRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/dependencytracking/types][%d] getArchitectDependencytrackingTypesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetArchitectDependencytrackingTypesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectDependencytrackingTypesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectDependencytrackingTypesUnsupportedMediaType creates a GetArchitectDependencytrackingTypesUnsupportedMediaType with default headers values
func NewGetArchitectDependencytrackingTypesUnsupportedMediaType() *GetArchitectDependencytrackingTypesUnsupportedMediaType {
	return &GetArchitectDependencytrackingTypesUnsupportedMediaType{}
}

/*
GetArchitectDependencytrackingTypesUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetArchitectDependencytrackingTypesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect dependencytracking types unsupported media type response has a 2xx status code
func (o *GetArchitectDependencytrackingTypesUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect dependencytracking types unsupported media type response has a 3xx status code
func (o *GetArchitectDependencytrackingTypesUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect dependencytracking types unsupported media type response has a 4xx status code
func (o *GetArchitectDependencytrackingTypesUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get architect dependencytracking types unsupported media type response has a 5xx status code
func (o *GetArchitectDependencytrackingTypesUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get architect dependencytracking types unsupported media type response a status code equal to that given
func (o *GetArchitectDependencytrackingTypesUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetArchitectDependencytrackingTypesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/dependencytracking/types][%d] getArchitectDependencytrackingTypesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetArchitectDependencytrackingTypesUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/dependencytracking/types][%d] getArchitectDependencytrackingTypesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetArchitectDependencytrackingTypesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectDependencytrackingTypesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectDependencytrackingTypesTooManyRequests creates a GetArchitectDependencytrackingTypesTooManyRequests with default headers values
func NewGetArchitectDependencytrackingTypesTooManyRequests() *GetArchitectDependencytrackingTypesTooManyRequests {
	return &GetArchitectDependencytrackingTypesTooManyRequests{}
}

/*
GetArchitectDependencytrackingTypesTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetArchitectDependencytrackingTypesTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect dependencytracking types too many requests response has a 2xx status code
func (o *GetArchitectDependencytrackingTypesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect dependencytracking types too many requests response has a 3xx status code
func (o *GetArchitectDependencytrackingTypesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect dependencytracking types too many requests response has a 4xx status code
func (o *GetArchitectDependencytrackingTypesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get architect dependencytracking types too many requests response has a 5xx status code
func (o *GetArchitectDependencytrackingTypesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get architect dependencytracking types too many requests response a status code equal to that given
func (o *GetArchitectDependencytrackingTypesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetArchitectDependencytrackingTypesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/dependencytracking/types][%d] getArchitectDependencytrackingTypesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetArchitectDependencytrackingTypesTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/dependencytracking/types][%d] getArchitectDependencytrackingTypesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetArchitectDependencytrackingTypesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectDependencytrackingTypesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectDependencytrackingTypesInternalServerError creates a GetArchitectDependencytrackingTypesInternalServerError with default headers values
func NewGetArchitectDependencytrackingTypesInternalServerError() *GetArchitectDependencytrackingTypesInternalServerError {
	return &GetArchitectDependencytrackingTypesInternalServerError{}
}

/*
GetArchitectDependencytrackingTypesInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetArchitectDependencytrackingTypesInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect dependencytracking types internal server error response has a 2xx status code
func (o *GetArchitectDependencytrackingTypesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect dependencytracking types internal server error response has a 3xx status code
func (o *GetArchitectDependencytrackingTypesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect dependencytracking types internal server error response has a 4xx status code
func (o *GetArchitectDependencytrackingTypesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get architect dependencytracking types internal server error response has a 5xx status code
func (o *GetArchitectDependencytrackingTypesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get architect dependencytracking types internal server error response a status code equal to that given
func (o *GetArchitectDependencytrackingTypesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetArchitectDependencytrackingTypesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/dependencytracking/types][%d] getArchitectDependencytrackingTypesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetArchitectDependencytrackingTypesInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/dependencytracking/types][%d] getArchitectDependencytrackingTypesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetArchitectDependencytrackingTypesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectDependencytrackingTypesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectDependencytrackingTypesServiceUnavailable creates a GetArchitectDependencytrackingTypesServiceUnavailable with default headers values
func NewGetArchitectDependencytrackingTypesServiceUnavailable() *GetArchitectDependencytrackingTypesServiceUnavailable {
	return &GetArchitectDependencytrackingTypesServiceUnavailable{}
}

/*
GetArchitectDependencytrackingTypesServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetArchitectDependencytrackingTypesServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect dependencytracking types service unavailable response has a 2xx status code
func (o *GetArchitectDependencytrackingTypesServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect dependencytracking types service unavailable response has a 3xx status code
func (o *GetArchitectDependencytrackingTypesServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect dependencytracking types service unavailable response has a 4xx status code
func (o *GetArchitectDependencytrackingTypesServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get architect dependencytracking types service unavailable response has a 5xx status code
func (o *GetArchitectDependencytrackingTypesServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get architect dependencytracking types service unavailable response a status code equal to that given
func (o *GetArchitectDependencytrackingTypesServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetArchitectDependencytrackingTypesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/dependencytracking/types][%d] getArchitectDependencytrackingTypesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetArchitectDependencytrackingTypesServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/dependencytracking/types][%d] getArchitectDependencytrackingTypesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetArchitectDependencytrackingTypesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectDependencytrackingTypesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectDependencytrackingTypesGatewayTimeout creates a GetArchitectDependencytrackingTypesGatewayTimeout with default headers values
func NewGetArchitectDependencytrackingTypesGatewayTimeout() *GetArchitectDependencytrackingTypesGatewayTimeout {
	return &GetArchitectDependencytrackingTypesGatewayTimeout{}
}

/*
GetArchitectDependencytrackingTypesGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetArchitectDependencytrackingTypesGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect dependencytracking types gateway timeout response has a 2xx status code
func (o *GetArchitectDependencytrackingTypesGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect dependencytracking types gateway timeout response has a 3xx status code
func (o *GetArchitectDependencytrackingTypesGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect dependencytracking types gateway timeout response has a 4xx status code
func (o *GetArchitectDependencytrackingTypesGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get architect dependencytracking types gateway timeout response has a 5xx status code
func (o *GetArchitectDependencytrackingTypesGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get architect dependencytracking types gateway timeout response a status code equal to that given
func (o *GetArchitectDependencytrackingTypesGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetArchitectDependencytrackingTypesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/dependencytracking/types][%d] getArchitectDependencytrackingTypesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetArchitectDependencytrackingTypesGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/dependencytracking/types][%d] getArchitectDependencytrackingTypesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetArchitectDependencytrackingTypesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectDependencytrackingTypesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
