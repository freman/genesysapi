// Code generated by go-swagger; DO NOT EDIT.

package architect

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutFlowsDatatableReader is a Reader for the PutFlowsDatatable structure.
type PutFlowsDatatableReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutFlowsDatatableReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutFlowsDatatableOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutFlowsDatatableBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutFlowsDatatableUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutFlowsDatatableForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutFlowsDatatableNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutFlowsDatatableRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPutFlowsDatatableConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutFlowsDatatableRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutFlowsDatatableUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutFlowsDatatableTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutFlowsDatatableInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutFlowsDatatableServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutFlowsDatatableGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutFlowsDatatableOK creates a PutFlowsDatatableOK with default headers values
func NewPutFlowsDatatableOK() *PutFlowsDatatableOK {
	return &PutFlowsDatatableOK{}
}

/*
PutFlowsDatatableOK describes a response with status code 200, with default header values.

successful operation
*/
type PutFlowsDatatableOK struct {
	Payload *models.DataTable
}

// IsSuccess returns true when this put flows datatable o k response has a 2xx status code
func (o *PutFlowsDatatableOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put flows datatable o k response has a 3xx status code
func (o *PutFlowsDatatableOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put flows datatable o k response has a 4xx status code
func (o *PutFlowsDatatableOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put flows datatable o k response has a 5xx status code
func (o *PutFlowsDatatableOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put flows datatable o k response a status code equal to that given
func (o *PutFlowsDatatableOK) IsCode(code int) bool {
	return code == 200
}

func (o *PutFlowsDatatableOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/flows/datatables/{datatableId}][%d] putFlowsDatatableOK  %+v", 200, o.Payload)
}

func (o *PutFlowsDatatableOK) String() string {
	return fmt.Sprintf("[PUT /api/v2/flows/datatables/{datatableId}][%d] putFlowsDatatableOK  %+v", 200, o.Payload)
}

func (o *PutFlowsDatatableOK) GetPayload() *models.DataTable {
	return o.Payload
}

func (o *PutFlowsDatatableOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DataTable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutFlowsDatatableBadRequest creates a PutFlowsDatatableBadRequest with default headers values
func NewPutFlowsDatatableBadRequest() *PutFlowsDatatableBadRequest {
	return &PutFlowsDatatableBadRequest{}
}

/*
PutFlowsDatatableBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutFlowsDatatableBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put flows datatable bad request response has a 2xx status code
func (o *PutFlowsDatatableBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put flows datatable bad request response has a 3xx status code
func (o *PutFlowsDatatableBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put flows datatable bad request response has a 4xx status code
func (o *PutFlowsDatatableBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put flows datatable bad request response has a 5xx status code
func (o *PutFlowsDatatableBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put flows datatable bad request response a status code equal to that given
func (o *PutFlowsDatatableBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PutFlowsDatatableBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/flows/datatables/{datatableId}][%d] putFlowsDatatableBadRequest  %+v", 400, o.Payload)
}

func (o *PutFlowsDatatableBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/v2/flows/datatables/{datatableId}][%d] putFlowsDatatableBadRequest  %+v", 400, o.Payload)
}

func (o *PutFlowsDatatableBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutFlowsDatatableBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutFlowsDatatableUnauthorized creates a PutFlowsDatatableUnauthorized with default headers values
func NewPutFlowsDatatableUnauthorized() *PutFlowsDatatableUnauthorized {
	return &PutFlowsDatatableUnauthorized{}
}

/*
PutFlowsDatatableUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PutFlowsDatatableUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put flows datatable unauthorized response has a 2xx status code
func (o *PutFlowsDatatableUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put flows datatable unauthorized response has a 3xx status code
func (o *PutFlowsDatatableUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put flows datatable unauthorized response has a 4xx status code
func (o *PutFlowsDatatableUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put flows datatable unauthorized response has a 5xx status code
func (o *PutFlowsDatatableUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put flows datatable unauthorized response a status code equal to that given
func (o *PutFlowsDatatableUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PutFlowsDatatableUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/flows/datatables/{datatableId}][%d] putFlowsDatatableUnauthorized  %+v", 401, o.Payload)
}

func (o *PutFlowsDatatableUnauthorized) String() string {
	return fmt.Sprintf("[PUT /api/v2/flows/datatables/{datatableId}][%d] putFlowsDatatableUnauthorized  %+v", 401, o.Payload)
}

func (o *PutFlowsDatatableUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutFlowsDatatableUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutFlowsDatatableForbidden creates a PutFlowsDatatableForbidden with default headers values
func NewPutFlowsDatatableForbidden() *PutFlowsDatatableForbidden {
	return &PutFlowsDatatableForbidden{}
}

/*
PutFlowsDatatableForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PutFlowsDatatableForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put flows datatable forbidden response has a 2xx status code
func (o *PutFlowsDatatableForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put flows datatable forbidden response has a 3xx status code
func (o *PutFlowsDatatableForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put flows datatable forbidden response has a 4xx status code
func (o *PutFlowsDatatableForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put flows datatable forbidden response has a 5xx status code
func (o *PutFlowsDatatableForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put flows datatable forbidden response a status code equal to that given
func (o *PutFlowsDatatableForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PutFlowsDatatableForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/flows/datatables/{datatableId}][%d] putFlowsDatatableForbidden  %+v", 403, o.Payload)
}

func (o *PutFlowsDatatableForbidden) String() string {
	return fmt.Sprintf("[PUT /api/v2/flows/datatables/{datatableId}][%d] putFlowsDatatableForbidden  %+v", 403, o.Payload)
}

func (o *PutFlowsDatatableForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutFlowsDatatableForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutFlowsDatatableNotFound creates a PutFlowsDatatableNotFound with default headers values
func NewPutFlowsDatatableNotFound() *PutFlowsDatatableNotFound {
	return &PutFlowsDatatableNotFound{}
}

/*
PutFlowsDatatableNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PutFlowsDatatableNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put flows datatable not found response has a 2xx status code
func (o *PutFlowsDatatableNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put flows datatable not found response has a 3xx status code
func (o *PutFlowsDatatableNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put flows datatable not found response has a 4xx status code
func (o *PutFlowsDatatableNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put flows datatable not found response has a 5xx status code
func (o *PutFlowsDatatableNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put flows datatable not found response a status code equal to that given
func (o *PutFlowsDatatableNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PutFlowsDatatableNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/flows/datatables/{datatableId}][%d] putFlowsDatatableNotFound  %+v", 404, o.Payload)
}

func (o *PutFlowsDatatableNotFound) String() string {
	return fmt.Sprintf("[PUT /api/v2/flows/datatables/{datatableId}][%d] putFlowsDatatableNotFound  %+v", 404, o.Payload)
}

func (o *PutFlowsDatatableNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutFlowsDatatableNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutFlowsDatatableRequestTimeout creates a PutFlowsDatatableRequestTimeout with default headers values
func NewPutFlowsDatatableRequestTimeout() *PutFlowsDatatableRequestTimeout {
	return &PutFlowsDatatableRequestTimeout{}
}

/*
PutFlowsDatatableRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutFlowsDatatableRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put flows datatable request timeout response has a 2xx status code
func (o *PutFlowsDatatableRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put flows datatable request timeout response has a 3xx status code
func (o *PutFlowsDatatableRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put flows datatable request timeout response has a 4xx status code
func (o *PutFlowsDatatableRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this put flows datatable request timeout response has a 5xx status code
func (o *PutFlowsDatatableRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this put flows datatable request timeout response a status code equal to that given
func (o *PutFlowsDatatableRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PutFlowsDatatableRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/flows/datatables/{datatableId}][%d] putFlowsDatatableRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutFlowsDatatableRequestTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/flows/datatables/{datatableId}][%d] putFlowsDatatableRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutFlowsDatatableRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutFlowsDatatableRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutFlowsDatatableConflict creates a PutFlowsDatatableConflict with default headers values
func NewPutFlowsDatatableConflict() *PutFlowsDatatableConflict {
	return &PutFlowsDatatableConflict{}
}

/*
PutFlowsDatatableConflict describes a response with status code 409, with default header values.

Conflict
*/
type PutFlowsDatatableConflict struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put flows datatable conflict response has a 2xx status code
func (o *PutFlowsDatatableConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put flows datatable conflict response has a 3xx status code
func (o *PutFlowsDatatableConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put flows datatable conflict response has a 4xx status code
func (o *PutFlowsDatatableConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this put flows datatable conflict response has a 5xx status code
func (o *PutFlowsDatatableConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this put flows datatable conflict response a status code equal to that given
func (o *PutFlowsDatatableConflict) IsCode(code int) bool {
	return code == 409
}

func (o *PutFlowsDatatableConflict) Error() string {
	return fmt.Sprintf("[PUT /api/v2/flows/datatables/{datatableId}][%d] putFlowsDatatableConflict  %+v", 409, o.Payload)
}

func (o *PutFlowsDatatableConflict) String() string {
	return fmt.Sprintf("[PUT /api/v2/flows/datatables/{datatableId}][%d] putFlowsDatatableConflict  %+v", 409, o.Payload)
}

func (o *PutFlowsDatatableConflict) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutFlowsDatatableConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutFlowsDatatableRequestEntityTooLarge creates a PutFlowsDatatableRequestEntityTooLarge with default headers values
func NewPutFlowsDatatableRequestEntityTooLarge() *PutFlowsDatatableRequestEntityTooLarge {
	return &PutFlowsDatatableRequestEntityTooLarge{}
}

/*
PutFlowsDatatableRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PutFlowsDatatableRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put flows datatable request entity too large response has a 2xx status code
func (o *PutFlowsDatatableRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put flows datatable request entity too large response has a 3xx status code
func (o *PutFlowsDatatableRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put flows datatable request entity too large response has a 4xx status code
func (o *PutFlowsDatatableRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this put flows datatable request entity too large response has a 5xx status code
func (o *PutFlowsDatatableRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this put flows datatable request entity too large response a status code equal to that given
func (o *PutFlowsDatatableRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PutFlowsDatatableRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/flows/datatables/{datatableId}][%d] putFlowsDatatableRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutFlowsDatatableRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PUT /api/v2/flows/datatables/{datatableId}][%d] putFlowsDatatableRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutFlowsDatatableRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutFlowsDatatableRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutFlowsDatatableUnsupportedMediaType creates a PutFlowsDatatableUnsupportedMediaType with default headers values
func NewPutFlowsDatatableUnsupportedMediaType() *PutFlowsDatatableUnsupportedMediaType {
	return &PutFlowsDatatableUnsupportedMediaType{}
}

/*
PutFlowsDatatableUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutFlowsDatatableUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put flows datatable unsupported media type response has a 2xx status code
func (o *PutFlowsDatatableUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put flows datatable unsupported media type response has a 3xx status code
func (o *PutFlowsDatatableUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put flows datatable unsupported media type response has a 4xx status code
func (o *PutFlowsDatatableUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this put flows datatable unsupported media type response has a 5xx status code
func (o *PutFlowsDatatableUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this put flows datatable unsupported media type response a status code equal to that given
func (o *PutFlowsDatatableUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PutFlowsDatatableUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/flows/datatables/{datatableId}][%d] putFlowsDatatableUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutFlowsDatatableUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PUT /api/v2/flows/datatables/{datatableId}][%d] putFlowsDatatableUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutFlowsDatatableUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutFlowsDatatableUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutFlowsDatatableTooManyRequests creates a PutFlowsDatatableTooManyRequests with default headers values
func NewPutFlowsDatatableTooManyRequests() *PutFlowsDatatableTooManyRequests {
	return &PutFlowsDatatableTooManyRequests{}
}

/*
PutFlowsDatatableTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutFlowsDatatableTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put flows datatable too many requests response has a 2xx status code
func (o *PutFlowsDatatableTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put flows datatable too many requests response has a 3xx status code
func (o *PutFlowsDatatableTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put flows datatable too many requests response has a 4xx status code
func (o *PutFlowsDatatableTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this put flows datatable too many requests response has a 5xx status code
func (o *PutFlowsDatatableTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this put flows datatable too many requests response a status code equal to that given
func (o *PutFlowsDatatableTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PutFlowsDatatableTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/flows/datatables/{datatableId}][%d] putFlowsDatatableTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutFlowsDatatableTooManyRequests) String() string {
	return fmt.Sprintf("[PUT /api/v2/flows/datatables/{datatableId}][%d] putFlowsDatatableTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutFlowsDatatableTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutFlowsDatatableTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutFlowsDatatableInternalServerError creates a PutFlowsDatatableInternalServerError with default headers values
func NewPutFlowsDatatableInternalServerError() *PutFlowsDatatableInternalServerError {
	return &PutFlowsDatatableInternalServerError{}
}

/*
PutFlowsDatatableInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutFlowsDatatableInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put flows datatable internal server error response has a 2xx status code
func (o *PutFlowsDatatableInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put flows datatable internal server error response has a 3xx status code
func (o *PutFlowsDatatableInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put flows datatable internal server error response has a 4xx status code
func (o *PutFlowsDatatableInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this put flows datatable internal server error response has a 5xx status code
func (o *PutFlowsDatatableInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this put flows datatable internal server error response a status code equal to that given
func (o *PutFlowsDatatableInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PutFlowsDatatableInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/flows/datatables/{datatableId}][%d] putFlowsDatatableInternalServerError  %+v", 500, o.Payload)
}

func (o *PutFlowsDatatableInternalServerError) String() string {
	return fmt.Sprintf("[PUT /api/v2/flows/datatables/{datatableId}][%d] putFlowsDatatableInternalServerError  %+v", 500, o.Payload)
}

func (o *PutFlowsDatatableInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutFlowsDatatableInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutFlowsDatatableServiceUnavailable creates a PutFlowsDatatableServiceUnavailable with default headers values
func NewPutFlowsDatatableServiceUnavailable() *PutFlowsDatatableServiceUnavailable {
	return &PutFlowsDatatableServiceUnavailable{}
}

/*
PutFlowsDatatableServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutFlowsDatatableServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put flows datatable service unavailable response has a 2xx status code
func (o *PutFlowsDatatableServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put flows datatable service unavailable response has a 3xx status code
func (o *PutFlowsDatatableServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put flows datatable service unavailable response has a 4xx status code
func (o *PutFlowsDatatableServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this put flows datatable service unavailable response has a 5xx status code
func (o *PutFlowsDatatableServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this put flows datatable service unavailable response a status code equal to that given
func (o *PutFlowsDatatableServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PutFlowsDatatableServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/flows/datatables/{datatableId}][%d] putFlowsDatatableServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutFlowsDatatableServiceUnavailable) String() string {
	return fmt.Sprintf("[PUT /api/v2/flows/datatables/{datatableId}][%d] putFlowsDatatableServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutFlowsDatatableServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutFlowsDatatableServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutFlowsDatatableGatewayTimeout creates a PutFlowsDatatableGatewayTimeout with default headers values
func NewPutFlowsDatatableGatewayTimeout() *PutFlowsDatatableGatewayTimeout {
	return &PutFlowsDatatableGatewayTimeout{}
}

/*
PutFlowsDatatableGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PutFlowsDatatableGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put flows datatable gateway timeout response has a 2xx status code
func (o *PutFlowsDatatableGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put flows datatable gateway timeout response has a 3xx status code
func (o *PutFlowsDatatableGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put flows datatable gateway timeout response has a 4xx status code
func (o *PutFlowsDatatableGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this put flows datatable gateway timeout response has a 5xx status code
func (o *PutFlowsDatatableGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this put flows datatable gateway timeout response a status code equal to that given
func (o *PutFlowsDatatableGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PutFlowsDatatableGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/flows/datatables/{datatableId}][%d] putFlowsDatatableGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutFlowsDatatableGatewayTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/flows/datatables/{datatableId}][%d] putFlowsDatatableGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutFlowsDatatableGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutFlowsDatatableGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
