// Code generated by go-swagger; DO NOT EDIT.

package architect

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetArchitectPromptHistoryHistoryIDReader is a Reader for the GetArchitectPromptHistoryHistoryID structure.
type GetArchitectPromptHistoryHistoryIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetArchitectPromptHistoryHistoryIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetArchitectPromptHistoryHistoryIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetArchitectPromptHistoryHistoryIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetArchitectPromptHistoryHistoryIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetArchitectPromptHistoryHistoryIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetArchitectPromptHistoryHistoryIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetArchitectPromptHistoryHistoryIDRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetArchitectPromptHistoryHistoryIDRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetArchitectPromptHistoryHistoryIDUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetArchitectPromptHistoryHistoryIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetArchitectPromptHistoryHistoryIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetArchitectPromptHistoryHistoryIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetArchitectPromptHistoryHistoryIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetArchitectPromptHistoryHistoryIDOK creates a GetArchitectPromptHistoryHistoryIDOK with default headers values
func NewGetArchitectPromptHistoryHistoryIDOK() *GetArchitectPromptHistoryHistoryIDOK {
	return &GetArchitectPromptHistoryHistoryIDOK{}
}

/*GetArchitectPromptHistoryHistoryIDOK handles this case with default header values.

successful operation
*/
type GetArchitectPromptHistoryHistoryIDOK struct {
	Payload *models.HistoryListing
}

func (o *GetArchitectPromptHistoryHistoryIDOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/prompts/{promptId}/history/{historyId}][%d] getArchitectPromptHistoryHistoryIdOK  %+v", 200, o.Payload)
}

func (o *GetArchitectPromptHistoryHistoryIDOK) GetPayload() *models.HistoryListing {
	return o.Payload
}

func (o *GetArchitectPromptHistoryHistoryIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HistoryListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectPromptHistoryHistoryIDBadRequest creates a GetArchitectPromptHistoryHistoryIDBadRequest with default headers values
func NewGetArchitectPromptHistoryHistoryIDBadRequest() *GetArchitectPromptHistoryHistoryIDBadRequest {
	return &GetArchitectPromptHistoryHistoryIDBadRequest{}
}

/*GetArchitectPromptHistoryHistoryIDBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetArchitectPromptHistoryHistoryIDBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetArchitectPromptHistoryHistoryIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/prompts/{promptId}/history/{historyId}][%d] getArchitectPromptHistoryHistoryIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetArchitectPromptHistoryHistoryIDBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectPromptHistoryHistoryIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectPromptHistoryHistoryIDUnauthorized creates a GetArchitectPromptHistoryHistoryIDUnauthorized with default headers values
func NewGetArchitectPromptHistoryHistoryIDUnauthorized() *GetArchitectPromptHistoryHistoryIDUnauthorized {
	return &GetArchitectPromptHistoryHistoryIDUnauthorized{}
}

/*GetArchitectPromptHistoryHistoryIDUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetArchitectPromptHistoryHistoryIDUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetArchitectPromptHistoryHistoryIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/prompts/{promptId}/history/{historyId}][%d] getArchitectPromptHistoryHistoryIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetArchitectPromptHistoryHistoryIDUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectPromptHistoryHistoryIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectPromptHistoryHistoryIDForbidden creates a GetArchitectPromptHistoryHistoryIDForbidden with default headers values
func NewGetArchitectPromptHistoryHistoryIDForbidden() *GetArchitectPromptHistoryHistoryIDForbidden {
	return &GetArchitectPromptHistoryHistoryIDForbidden{}
}

/*GetArchitectPromptHistoryHistoryIDForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetArchitectPromptHistoryHistoryIDForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetArchitectPromptHistoryHistoryIDForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/prompts/{promptId}/history/{historyId}][%d] getArchitectPromptHistoryHistoryIdForbidden  %+v", 403, o.Payload)
}

func (o *GetArchitectPromptHistoryHistoryIDForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectPromptHistoryHistoryIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectPromptHistoryHistoryIDNotFound creates a GetArchitectPromptHistoryHistoryIDNotFound with default headers values
func NewGetArchitectPromptHistoryHistoryIDNotFound() *GetArchitectPromptHistoryHistoryIDNotFound {
	return &GetArchitectPromptHistoryHistoryIDNotFound{}
}

/*GetArchitectPromptHistoryHistoryIDNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetArchitectPromptHistoryHistoryIDNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetArchitectPromptHistoryHistoryIDNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/prompts/{promptId}/history/{historyId}][%d] getArchitectPromptHistoryHistoryIdNotFound  %+v", 404, o.Payload)
}

func (o *GetArchitectPromptHistoryHistoryIDNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectPromptHistoryHistoryIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectPromptHistoryHistoryIDRequestTimeout creates a GetArchitectPromptHistoryHistoryIDRequestTimeout with default headers values
func NewGetArchitectPromptHistoryHistoryIDRequestTimeout() *GetArchitectPromptHistoryHistoryIDRequestTimeout {
	return &GetArchitectPromptHistoryHistoryIDRequestTimeout{}
}

/*GetArchitectPromptHistoryHistoryIDRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetArchitectPromptHistoryHistoryIDRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetArchitectPromptHistoryHistoryIDRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/prompts/{promptId}/history/{historyId}][%d] getArchitectPromptHistoryHistoryIdRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetArchitectPromptHistoryHistoryIDRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectPromptHistoryHistoryIDRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectPromptHistoryHistoryIDRequestEntityTooLarge creates a GetArchitectPromptHistoryHistoryIDRequestEntityTooLarge with default headers values
func NewGetArchitectPromptHistoryHistoryIDRequestEntityTooLarge() *GetArchitectPromptHistoryHistoryIDRequestEntityTooLarge {
	return &GetArchitectPromptHistoryHistoryIDRequestEntityTooLarge{}
}

/*GetArchitectPromptHistoryHistoryIDRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetArchitectPromptHistoryHistoryIDRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetArchitectPromptHistoryHistoryIDRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/prompts/{promptId}/history/{historyId}][%d] getArchitectPromptHistoryHistoryIdRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetArchitectPromptHistoryHistoryIDRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectPromptHistoryHistoryIDRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectPromptHistoryHistoryIDUnsupportedMediaType creates a GetArchitectPromptHistoryHistoryIDUnsupportedMediaType with default headers values
func NewGetArchitectPromptHistoryHistoryIDUnsupportedMediaType() *GetArchitectPromptHistoryHistoryIDUnsupportedMediaType {
	return &GetArchitectPromptHistoryHistoryIDUnsupportedMediaType{}
}

/*GetArchitectPromptHistoryHistoryIDUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetArchitectPromptHistoryHistoryIDUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetArchitectPromptHistoryHistoryIDUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/prompts/{promptId}/history/{historyId}][%d] getArchitectPromptHistoryHistoryIdUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetArchitectPromptHistoryHistoryIDUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectPromptHistoryHistoryIDUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectPromptHistoryHistoryIDTooManyRequests creates a GetArchitectPromptHistoryHistoryIDTooManyRequests with default headers values
func NewGetArchitectPromptHistoryHistoryIDTooManyRequests() *GetArchitectPromptHistoryHistoryIDTooManyRequests {
	return &GetArchitectPromptHistoryHistoryIDTooManyRequests{}
}

/*GetArchitectPromptHistoryHistoryIDTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetArchitectPromptHistoryHistoryIDTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetArchitectPromptHistoryHistoryIDTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/prompts/{promptId}/history/{historyId}][%d] getArchitectPromptHistoryHistoryIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetArchitectPromptHistoryHistoryIDTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectPromptHistoryHistoryIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectPromptHistoryHistoryIDInternalServerError creates a GetArchitectPromptHistoryHistoryIDInternalServerError with default headers values
func NewGetArchitectPromptHistoryHistoryIDInternalServerError() *GetArchitectPromptHistoryHistoryIDInternalServerError {
	return &GetArchitectPromptHistoryHistoryIDInternalServerError{}
}

/*GetArchitectPromptHistoryHistoryIDInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetArchitectPromptHistoryHistoryIDInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetArchitectPromptHistoryHistoryIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/prompts/{promptId}/history/{historyId}][%d] getArchitectPromptHistoryHistoryIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetArchitectPromptHistoryHistoryIDInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectPromptHistoryHistoryIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectPromptHistoryHistoryIDServiceUnavailable creates a GetArchitectPromptHistoryHistoryIDServiceUnavailable with default headers values
func NewGetArchitectPromptHistoryHistoryIDServiceUnavailable() *GetArchitectPromptHistoryHistoryIDServiceUnavailable {
	return &GetArchitectPromptHistoryHistoryIDServiceUnavailable{}
}

/*GetArchitectPromptHistoryHistoryIDServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetArchitectPromptHistoryHistoryIDServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetArchitectPromptHistoryHistoryIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/prompts/{promptId}/history/{historyId}][%d] getArchitectPromptHistoryHistoryIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetArchitectPromptHistoryHistoryIDServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectPromptHistoryHistoryIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectPromptHistoryHistoryIDGatewayTimeout creates a GetArchitectPromptHistoryHistoryIDGatewayTimeout with default headers values
func NewGetArchitectPromptHistoryHistoryIDGatewayTimeout() *GetArchitectPromptHistoryHistoryIDGatewayTimeout {
	return &GetArchitectPromptHistoryHistoryIDGatewayTimeout{}
}

/*GetArchitectPromptHistoryHistoryIDGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetArchitectPromptHistoryHistoryIDGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetArchitectPromptHistoryHistoryIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/prompts/{promptId}/history/{historyId}][%d] getArchitectPromptHistoryHistoryIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetArchitectPromptHistoryHistoryIDGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectPromptHistoryHistoryIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
