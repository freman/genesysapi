// Code generated by go-swagger; DO NOT EDIT.

package architect

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetFlowsDivisionviewsReader is a Reader for the GetFlowsDivisionviews structure.
type GetFlowsDivisionviewsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFlowsDivisionviewsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFlowsDivisionviewsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetFlowsDivisionviewsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetFlowsDivisionviewsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetFlowsDivisionviewsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetFlowsDivisionviewsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetFlowsDivisionviewsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetFlowsDivisionviewsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetFlowsDivisionviewsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetFlowsDivisionviewsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetFlowsDivisionviewsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetFlowsDivisionviewsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 501:
		result := NewGetFlowsDivisionviewsNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetFlowsDivisionviewsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetFlowsDivisionviewsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetFlowsDivisionviewsOK creates a GetFlowsDivisionviewsOK with default headers values
func NewGetFlowsDivisionviewsOK() *GetFlowsDivisionviewsOK {
	return &GetFlowsDivisionviewsOK{}
}

/*
GetFlowsDivisionviewsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetFlowsDivisionviewsOK struct {
	Payload *models.FlowDivisionViewEntityListing
}

// IsSuccess returns true when this get flows divisionviews o k response has a 2xx status code
func (o *GetFlowsDivisionviewsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get flows divisionviews o k response has a 3xx status code
func (o *GetFlowsDivisionviewsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flows divisionviews o k response has a 4xx status code
func (o *GetFlowsDivisionviewsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get flows divisionviews o k response has a 5xx status code
func (o *GetFlowsDivisionviewsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get flows divisionviews o k response a status code equal to that given
func (o *GetFlowsDivisionviewsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetFlowsDivisionviewsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/divisionviews][%d] getFlowsDivisionviewsOK  %+v", 200, o.Payload)
}

func (o *GetFlowsDivisionviewsOK) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/divisionviews][%d] getFlowsDivisionviewsOK  %+v", 200, o.Payload)
}

func (o *GetFlowsDivisionviewsOK) GetPayload() *models.FlowDivisionViewEntityListing {
	return o.Payload
}

func (o *GetFlowsDivisionviewsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FlowDivisionViewEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDivisionviewsBadRequest creates a GetFlowsDivisionviewsBadRequest with default headers values
func NewGetFlowsDivisionviewsBadRequest() *GetFlowsDivisionviewsBadRequest {
	return &GetFlowsDivisionviewsBadRequest{}
}

/*
GetFlowsDivisionviewsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetFlowsDivisionviewsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flows divisionviews bad request response has a 2xx status code
func (o *GetFlowsDivisionviewsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flows divisionviews bad request response has a 3xx status code
func (o *GetFlowsDivisionviewsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flows divisionviews bad request response has a 4xx status code
func (o *GetFlowsDivisionviewsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flows divisionviews bad request response has a 5xx status code
func (o *GetFlowsDivisionviewsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get flows divisionviews bad request response a status code equal to that given
func (o *GetFlowsDivisionviewsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetFlowsDivisionviewsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/divisionviews][%d] getFlowsDivisionviewsBadRequest  %+v", 400, o.Payload)
}

func (o *GetFlowsDivisionviewsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/divisionviews][%d] getFlowsDivisionviewsBadRequest  %+v", 400, o.Payload)
}

func (o *GetFlowsDivisionviewsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDivisionviewsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDivisionviewsUnauthorized creates a GetFlowsDivisionviewsUnauthorized with default headers values
func NewGetFlowsDivisionviewsUnauthorized() *GetFlowsDivisionviewsUnauthorized {
	return &GetFlowsDivisionviewsUnauthorized{}
}

/*
GetFlowsDivisionviewsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetFlowsDivisionviewsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flows divisionviews unauthorized response has a 2xx status code
func (o *GetFlowsDivisionviewsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flows divisionviews unauthorized response has a 3xx status code
func (o *GetFlowsDivisionviewsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flows divisionviews unauthorized response has a 4xx status code
func (o *GetFlowsDivisionviewsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flows divisionviews unauthorized response has a 5xx status code
func (o *GetFlowsDivisionviewsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get flows divisionviews unauthorized response a status code equal to that given
func (o *GetFlowsDivisionviewsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetFlowsDivisionviewsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/divisionviews][%d] getFlowsDivisionviewsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetFlowsDivisionviewsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/divisionviews][%d] getFlowsDivisionviewsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetFlowsDivisionviewsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDivisionviewsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDivisionviewsForbidden creates a GetFlowsDivisionviewsForbidden with default headers values
func NewGetFlowsDivisionviewsForbidden() *GetFlowsDivisionviewsForbidden {
	return &GetFlowsDivisionviewsForbidden{}
}

/*
GetFlowsDivisionviewsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetFlowsDivisionviewsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flows divisionviews forbidden response has a 2xx status code
func (o *GetFlowsDivisionviewsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flows divisionviews forbidden response has a 3xx status code
func (o *GetFlowsDivisionviewsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flows divisionviews forbidden response has a 4xx status code
func (o *GetFlowsDivisionviewsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flows divisionviews forbidden response has a 5xx status code
func (o *GetFlowsDivisionviewsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get flows divisionviews forbidden response a status code equal to that given
func (o *GetFlowsDivisionviewsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetFlowsDivisionviewsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/divisionviews][%d] getFlowsDivisionviewsForbidden  %+v", 403, o.Payload)
}

func (o *GetFlowsDivisionviewsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/divisionviews][%d] getFlowsDivisionviewsForbidden  %+v", 403, o.Payload)
}

func (o *GetFlowsDivisionviewsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDivisionviewsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDivisionviewsNotFound creates a GetFlowsDivisionviewsNotFound with default headers values
func NewGetFlowsDivisionviewsNotFound() *GetFlowsDivisionviewsNotFound {
	return &GetFlowsDivisionviewsNotFound{}
}

/*
GetFlowsDivisionviewsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetFlowsDivisionviewsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flows divisionviews not found response has a 2xx status code
func (o *GetFlowsDivisionviewsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flows divisionviews not found response has a 3xx status code
func (o *GetFlowsDivisionviewsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flows divisionviews not found response has a 4xx status code
func (o *GetFlowsDivisionviewsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flows divisionviews not found response has a 5xx status code
func (o *GetFlowsDivisionviewsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get flows divisionviews not found response a status code equal to that given
func (o *GetFlowsDivisionviewsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetFlowsDivisionviewsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/divisionviews][%d] getFlowsDivisionviewsNotFound  %+v", 404, o.Payload)
}

func (o *GetFlowsDivisionviewsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/divisionviews][%d] getFlowsDivisionviewsNotFound  %+v", 404, o.Payload)
}

func (o *GetFlowsDivisionviewsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDivisionviewsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDivisionviewsMethodNotAllowed creates a GetFlowsDivisionviewsMethodNotAllowed with default headers values
func NewGetFlowsDivisionviewsMethodNotAllowed() *GetFlowsDivisionviewsMethodNotAllowed {
	return &GetFlowsDivisionviewsMethodNotAllowed{}
}

/*
GetFlowsDivisionviewsMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetFlowsDivisionviewsMethodNotAllowed struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flows divisionviews method not allowed response has a 2xx status code
func (o *GetFlowsDivisionviewsMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flows divisionviews method not allowed response has a 3xx status code
func (o *GetFlowsDivisionviewsMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flows divisionviews method not allowed response has a 4xx status code
func (o *GetFlowsDivisionviewsMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flows divisionviews method not allowed response has a 5xx status code
func (o *GetFlowsDivisionviewsMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get flows divisionviews method not allowed response a status code equal to that given
func (o *GetFlowsDivisionviewsMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

func (o *GetFlowsDivisionviewsMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/divisionviews][%d] getFlowsDivisionviewsMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *GetFlowsDivisionviewsMethodNotAllowed) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/divisionviews][%d] getFlowsDivisionviewsMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *GetFlowsDivisionviewsMethodNotAllowed) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDivisionviewsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDivisionviewsRequestTimeout creates a GetFlowsDivisionviewsRequestTimeout with default headers values
func NewGetFlowsDivisionviewsRequestTimeout() *GetFlowsDivisionviewsRequestTimeout {
	return &GetFlowsDivisionviewsRequestTimeout{}
}

/*
GetFlowsDivisionviewsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetFlowsDivisionviewsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flows divisionviews request timeout response has a 2xx status code
func (o *GetFlowsDivisionviewsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flows divisionviews request timeout response has a 3xx status code
func (o *GetFlowsDivisionviewsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flows divisionviews request timeout response has a 4xx status code
func (o *GetFlowsDivisionviewsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flows divisionviews request timeout response has a 5xx status code
func (o *GetFlowsDivisionviewsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get flows divisionviews request timeout response a status code equal to that given
func (o *GetFlowsDivisionviewsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetFlowsDivisionviewsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/divisionviews][%d] getFlowsDivisionviewsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetFlowsDivisionviewsRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/divisionviews][%d] getFlowsDivisionviewsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetFlowsDivisionviewsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDivisionviewsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDivisionviewsRequestEntityTooLarge creates a GetFlowsDivisionviewsRequestEntityTooLarge with default headers values
func NewGetFlowsDivisionviewsRequestEntityTooLarge() *GetFlowsDivisionviewsRequestEntityTooLarge {
	return &GetFlowsDivisionviewsRequestEntityTooLarge{}
}

/*
GetFlowsDivisionviewsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetFlowsDivisionviewsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flows divisionviews request entity too large response has a 2xx status code
func (o *GetFlowsDivisionviewsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flows divisionviews request entity too large response has a 3xx status code
func (o *GetFlowsDivisionviewsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flows divisionviews request entity too large response has a 4xx status code
func (o *GetFlowsDivisionviewsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flows divisionviews request entity too large response has a 5xx status code
func (o *GetFlowsDivisionviewsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get flows divisionviews request entity too large response a status code equal to that given
func (o *GetFlowsDivisionviewsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetFlowsDivisionviewsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/divisionviews][%d] getFlowsDivisionviewsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetFlowsDivisionviewsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/divisionviews][%d] getFlowsDivisionviewsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetFlowsDivisionviewsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDivisionviewsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDivisionviewsUnsupportedMediaType creates a GetFlowsDivisionviewsUnsupportedMediaType with default headers values
func NewGetFlowsDivisionviewsUnsupportedMediaType() *GetFlowsDivisionviewsUnsupportedMediaType {
	return &GetFlowsDivisionviewsUnsupportedMediaType{}
}

/*
GetFlowsDivisionviewsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetFlowsDivisionviewsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flows divisionviews unsupported media type response has a 2xx status code
func (o *GetFlowsDivisionviewsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flows divisionviews unsupported media type response has a 3xx status code
func (o *GetFlowsDivisionviewsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flows divisionviews unsupported media type response has a 4xx status code
func (o *GetFlowsDivisionviewsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flows divisionviews unsupported media type response has a 5xx status code
func (o *GetFlowsDivisionviewsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get flows divisionviews unsupported media type response a status code equal to that given
func (o *GetFlowsDivisionviewsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetFlowsDivisionviewsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/divisionviews][%d] getFlowsDivisionviewsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetFlowsDivisionviewsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/divisionviews][%d] getFlowsDivisionviewsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetFlowsDivisionviewsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDivisionviewsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDivisionviewsTooManyRequests creates a GetFlowsDivisionviewsTooManyRequests with default headers values
func NewGetFlowsDivisionviewsTooManyRequests() *GetFlowsDivisionviewsTooManyRequests {
	return &GetFlowsDivisionviewsTooManyRequests{}
}

/*
GetFlowsDivisionviewsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetFlowsDivisionviewsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flows divisionviews too many requests response has a 2xx status code
func (o *GetFlowsDivisionviewsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flows divisionviews too many requests response has a 3xx status code
func (o *GetFlowsDivisionviewsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flows divisionviews too many requests response has a 4xx status code
func (o *GetFlowsDivisionviewsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flows divisionviews too many requests response has a 5xx status code
func (o *GetFlowsDivisionviewsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get flows divisionviews too many requests response a status code equal to that given
func (o *GetFlowsDivisionviewsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetFlowsDivisionviewsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/divisionviews][%d] getFlowsDivisionviewsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetFlowsDivisionviewsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/divisionviews][%d] getFlowsDivisionviewsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetFlowsDivisionviewsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDivisionviewsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDivisionviewsInternalServerError creates a GetFlowsDivisionviewsInternalServerError with default headers values
func NewGetFlowsDivisionviewsInternalServerError() *GetFlowsDivisionviewsInternalServerError {
	return &GetFlowsDivisionviewsInternalServerError{}
}

/*
GetFlowsDivisionviewsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetFlowsDivisionviewsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flows divisionviews internal server error response has a 2xx status code
func (o *GetFlowsDivisionviewsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flows divisionviews internal server error response has a 3xx status code
func (o *GetFlowsDivisionviewsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flows divisionviews internal server error response has a 4xx status code
func (o *GetFlowsDivisionviewsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get flows divisionviews internal server error response has a 5xx status code
func (o *GetFlowsDivisionviewsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get flows divisionviews internal server error response a status code equal to that given
func (o *GetFlowsDivisionviewsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetFlowsDivisionviewsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/divisionviews][%d] getFlowsDivisionviewsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetFlowsDivisionviewsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/divisionviews][%d] getFlowsDivisionviewsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetFlowsDivisionviewsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDivisionviewsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDivisionviewsNotImplemented creates a GetFlowsDivisionviewsNotImplemented with default headers values
func NewGetFlowsDivisionviewsNotImplemented() *GetFlowsDivisionviewsNotImplemented {
	return &GetFlowsDivisionviewsNotImplemented{}
}

/*
GetFlowsDivisionviewsNotImplemented describes a response with status code 501, with default header values.

Not Implemented
*/
type GetFlowsDivisionviewsNotImplemented struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flows divisionviews not implemented response has a 2xx status code
func (o *GetFlowsDivisionviewsNotImplemented) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flows divisionviews not implemented response has a 3xx status code
func (o *GetFlowsDivisionviewsNotImplemented) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flows divisionviews not implemented response has a 4xx status code
func (o *GetFlowsDivisionviewsNotImplemented) IsClientError() bool {
	return false
}

// IsServerError returns true when this get flows divisionviews not implemented response has a 5xx status code
func (o *GetFlowsDivisionviewsNotImplemented) IsServerError() bool {
	return true
}

// IsCode returns true when this get flows divisionviews not implemented response a status code equal to that given
func (o *GetFlowsDivisionviewsNotImplemented) IsCode(code int) bool {
	return code == 501
}

func (o *GetFlowsDivisionviewsNotImplemented) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/divisionviews][%d] getFlowsDivisionviewsNotImplemented  %+v", 501, o.Payload)
}

func (o *GetFlowsDivisionviewsNotImplemented) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/divisionviews][%d] getFlowsDivisionviewsNotImplemented  %+v", 501, o.Payload)
}

func (o *GetFlowsDivisionviewsNotImplemented) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDivisionviewsNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDivisionviewsServiceUnavailable creates a GetFlowsDivisionviewsServiceUnavailable with default headers values
func NewGetFlowsDivisionviewsServiceUnavailable() *GetFlowsDivisionviewsServiceUnavailable {
	return &GetFlowsDivisionviewsServiceUnavailable{}
}

/*
GetFlowsDivisionviewsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetFlowsDivisionviewsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flows divisionviews service unavailable response has a 2xx status code
func (o *GetFlowsDivisionviewsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flows divisionviews service unavailable response has a 3xx status code
func (o *GetFlowsDivisionviewsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flows divisionviews service unavailable response has a 4xx status code
func (o *GetFlowsDivisionviewsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get flows divisionviews service unavailable response has a 5xx status code
func (o *GetFlowsDivisionviewsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get flows divisionviews service unavailable response a status code equal to that given
func (o *GetFlowsDivisionviewsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetFlowsDivisionviewsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/divisionviews][%d] getFlowsDivisionviewsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetFlowsDivisionviewsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/divisionviews][%d] getFlowsDivisionviewsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetFlowsDivisionviewsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDivisionviewsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDivisionviewsGatewayTimeout creates a GetFlowsDivisionviewsGatewayTimeout with default headers values
func NewGetFlowsDivisionviewsGatewayTimeout() *GetFlowsDivisionviewsGatewayTimeout {
	return &GetFlowsDivisionviewsGatewayTimeout{}
}

/*
GetFlowsDivisionviewsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetFlowsDivisionviewsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flows divisionviews gateway timeout response has a 2xx status code
func (o *GetFlowsDivisionviewsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flows divisionviews gateway timeout response has a 3xx status code
func (o *GetFlowsDivisionviewsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flows divisionviews gateway timeout response has a 4xx status code
func (o *GetFlowsDivisionviewsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get flows divisionviews gateway timeout response has a 5xx status code
func (o *GetFlowsDivisionviewsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get flows divisionviews gateway timeout response a status code equal to that given
func (o *GetFlowsDivisionviewsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetFlowsDivisionviewsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/divisionviews][%d] getFlowsDivisionviewsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetFlowsDivisionviewsGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/divisionviews][%d] getFlowsDivisionviewsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetFlowsDivisionviewsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDivisionviewsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
