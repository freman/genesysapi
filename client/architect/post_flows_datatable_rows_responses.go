// Code generated by go-swagger; DO NOT EDIT.

package architect

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostFlowsDatatableRowsReader is a Reader for the PostFlowsDatatableRows structure.
type PostFlowsDatatableRowsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostFlowsDatatableRowsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostFlowsDatatableRowsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostFlowsDatatableRowsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostFlowsDatatableRowsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostFlowsDatatableRowsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostFlowsDatatableRowsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostFlowsDatatableRowsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPostFlowsDatatableRowsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostFlowsDatatableRowsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostFlowsDatatableRowsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostFlowsDatatableRowsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostFlowsDatatableRowsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostFlowsDatatableRowsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostFlowsDatatableRowsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostFlowsDatatableRowsOK creates a PostFlowsDatatableRowsOK with default headers values
func NewPostFlowsDatatableRowsOK() *PostFlowsDatatableRowsOK {
	return &PostFlowsDatatableRowsOK{}
}

/*PostFlowsDatatableRowsOK handles this case with default header values.

successful operation
*/
type PostFlowsDatatableRowsOK struct {
	Payload map[string]interface{}
}

func (o *PostFlowsDatatableRowsOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/datatables/{datatableId}/rows][%d] postFlowsDatatableRowsOK  %+v", 200, o.Payload)
}

func (o *PostFlowsDatatableRowsOK) GetPayload() map[string]interface{} {
	return o.Payload
}

func (o *PostFlowsDatatableRowsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsDatatableRowsBadRequest creates a PostFlowsDatatableRowsBadRequest with default headers values
func NewPostFlowsDatatableRowsBadRequest() *PostFlowsDatatableRowsBadRequest {
	return &PostFlowsDatatableRowsBadRequest{}
}

/*PostFlowsDatatableRowsBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostFlowsDatatableRowsBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PostFlowsDatatableRowsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/datatables/{datatableId}/rows][%d] postFlowsDatatableRowsBadRequest  %+v", 400, o.Payload)
}

func (o *PostFlowsDatatableRowsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsDatatableRowsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsDatatableRowsUnauthorized creates a PostFlowsDatatableRowsUnauthorized with default headers values
func NewPostFlowsDatatableRowsUnauthorized() *PostFlowsDatatableRowsUnauthorized {
	return &PostFlowsDatatableRowsUnauthorized{}
}

/*PostFlowsDatatableRowsUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PostFlowsDatatableRowsUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PostFlowsDatatableRowsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/datatables/{datatableId}/rows][%d] postFlowsDatatableRowsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostFlowsDatatableRowsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsDatatableRowsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsDatatableRowsForbidden creates a PostFlowsDatatableRowsForbidden with default headers values
func NewPostFlowsDatatableRowsForbidden() *PostFlowsDatatableRowsForbidden {
	return &PostFlowsDatatableRowsForbidden{}
}

/*PostFlowsDatatableRowsForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PostFlowsDatatableRowsForbidden struct {
	Payload *models.ErrorBody
}

func (o *PostFlowsDatatableRowsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/datatables/{datatableId}/rows][%d] postFlowsDatatableRowsForbidden  %+v", 403, o.Payload)
}

func (o *PostFlowsDatatableRowsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsDatatableRowsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsDatatableRowsNotFound creates a PostFlowsDatatableRowsNotFound with default headers values
func NewPostFlowsDatatableRowsNotFound() *PostFlowsDatatableRowsNotFound {
	return &PostFlowsDatatableRowsNotFound{}
}

/*PostFlowsDatatableRowsNotFound handles this case with default header values.

The requested resource was not found.
*/
type PostFlowsDatatableRowsNotFound struct {
	Payload *models.ErrorBody
}

func (o *PostFlowsDatatableRowsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/datatables/{datatableId}/rows][%d] postFlowsDatatableRowsNotFound  %+v", 404, o.Payload)
}

func (o *PostFlowsDatatableRowsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsDatatableRowsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsDatatableRowsRequestTimeout creates a PostFlowsDatatableRowsRequestTimeout with default headers values
func NewPostFlowsDatatableRowsRequestTimeout() *PostFlowsDatatableRowsRequestTimeout {
	return &PostFlowsDatatableRowsRequestTimeout{}
}

/*PostFlowsDatatableRowsRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostFlowsDatatableRowsRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostFlowsDatatableRowsRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/datatables/{datatableId}/rows][%d] postFlowsDatatableRowsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostFlowsDatatableRowsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsDatatableRowsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsDatatableRowsConflict creates a PostFlowsDatatableRowsConflict with default headers values
func NewPostFlowsDatatableRowsConflict() *PostFlowsDatatableRowsConflict {
	return &PostFlowsDatatableRowsConflict{}
}

/*PostFlowsDatatableRowsConflict handles this case with default header values.

Conflict
*/
type PostFlowsDatatableRowsConflict struct {
	Payload *models.ErrorBody
}

func (o *PostFlowsDatatableRowsConflict) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/datatables/{datatableId}/rows][%d] postFlowsDatatableRowsConflict  %+v", 409, o.Payload)
}

func (o *PostFlowsDatatableRowsConflict) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsDatatableRowsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsDatatableRowsRequestEntityTooLarge creates a PostFlowsDatatableRowsRequestEntityTooLarge with default headers values
func NewPostFlowsDatatableRowsRequestEntityTooLarge() *PostFlowsDatatableRowsRequestEntityTooLarge {
	return &PostFlowsDatatableRowsRequestEntityTooLarge{}
}

/*PostFlowsDatatableRowsRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type PostFlowsDatatableRowsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PostFlowsDatatableRowsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/datatables/{datatableId}/rows][%d] postFlowsDatatableRowsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostFlowsDatatableRowsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsDatatableRowsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsDatatableRowsUnsupportedMediaType creates a PostFlowsDatatableRowsUnsupportedMediaType with default headers values
func NewPostFlowsDatatableRowsUnsupportedMediaType() *PostFlowsDatatableRowsUnsupportedMediaType {
	return &PostFlowsDatatableRowsUnsupportedMediaType{}
}

/*PostFlowsDatatableRowsUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostFlowsDatatableRowsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PostFlowsDatatableRowsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/datatables/{datatableId}/rows][%d] postFlowsDatatableRowsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostFlowsDatatableRowsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsDatatableRowsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsDatatableRowsTooManyRequests creates a PostFlowsDatatableRowsTooManyRequests with default headers values
func NewPostFlowsDatatableRowsTooManyRequests() *PostFlowsDatatableRowsTooManyRequests {
	return &PostFlowsDatatableRowsTooManyRequests{}
}

/*PostFlowsDatatableRowsTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostFlowsDatatableRowsTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PostFlowsDatatableRowsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/datatables/{datatableId}/rows][%d] postFlowsDatatableRowsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostFlowsDatatableRowsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsDatatableRowsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsDatatableRowsInternalServerError creates a PostFlowsDatatableRowsInternalServerError with default headers values
func NewPostFlowsDatatableRowsInternalServerError() *PostFlowsDatatableRowsInternalServerError {
	return &PostFlowsDatatableRowsInternalServerError{}
}

/*PostFlowsDatatableRowsInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostFlowsDatatableRowsInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PostFlowsDatatableRowsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/datatables/{datatableId}/rows][%d] postFlowsDatatableRowsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostFlowsDatatableRowsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsDatatableRowsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsDatatableRowsServiceUnavailable creates a PostFlowsDatatableRowsServiceUnavailable with default headers values
func NewPostFlowsDatatableRowsServiceUnavailable() *PostFlowsDatatableRowsServiceUnavailable {
	return &PostFlowsDatatableRowsServiceUnavailable{}
}

/*PostFlowsDatatableRowsServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostFlowsDatatableRowsServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PostFlowsDatatableRowsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/datatables/{datatableId}/rows][%d] postFlowsDatatableRowsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostFlowsDatatableRowsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsDatatableRowsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsDatatableRowsGatewayTimeout creates a PostFlowsDatatableRowsGatewayTimeout with default headers values
func NewPostFlowsDatatableRowsGatewayTimeout() *PostFlowsDatatableRowsGatewayTimeout {
	return &PostFlowsDatatableRowsGatewayTimeout{}
}

/*PostFlowsDatatableRowsGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PostFlowsDatatableRowsGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostFlowsDatatableRowsGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/datatables/{datatableId}/rows][%d] postFlowsDatatableRowsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostFlowsDatatableRowsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsDatatableRowsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
