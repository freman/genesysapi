// Code generated by go-swagger; DO NOT EDIT.

package architect

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutArchitectEmergencygroupReader is a Reader for the PutArchitectEmergencygroup structure.
type PutArchitectEmergencygroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutArchitectEmergencygroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutArchitectEmergencygroupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutArchitectEmergencygroupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutArchitectEmergencygroupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutArchitectEmergencygroupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutArchitectEmergencygroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutArchitectEmergencygroupRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutArchitectEmergencygroupRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutArchitectEmergencygroupUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutArchitectEmergencygroupTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutArchitectEmergencygroupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutArchitectEmergencygroupServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutArchitectEmergencygroupGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutArchitectEmergencygroupOK creates a PutArchitectEmergencygroupOK with default headers values
func NewPutArchitectEmergencygroupOK() *PutArchitectEmergencygroupOK {
	return &PutArchitectEmergencygroupOK{}
}

/*
PutArchitectEmergencygroupOK describes a response with status code 200, with default header values.

successful operation
*/
type PutArchitectEmergencygroupOK struct {
	Payload *models.EmergencyGroup
}

// IsSuccess returns true when this put architect emergencygroup o k response has a 2xx status code
func (o *PutArchitectEmergencygroupOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put architect emergencygroup o k response has a 3xx status code
func (o *PutArchitectEmergencygroupOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put architect emergencygroup o k response has a 4xx status code
func (o *PutArchitectEmergencygroupOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put architect emergencygroup o k response has a 5xx status code
func (o *PutArchitectEmergencygroupOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put architect emergencygroup o k response a status code equal to that given
func (o *PutArchitectEmergencygroupOK) IsCode(code int) bool {
	return code == 200
}

func (o *PutArchitectEmergencygroupOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] putArchitectEmergencygroupOK  %+v", 200, o.Payload)
}

func (o *PutArchitectEmergencygroupOK) String() string {
	return fmt.Sprintf("[PUT /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] putArchitectEmergencygroupOK  %+v", 200, o.Payload)
}

func (o *PutArchitectEmergencygroupOK) GetPayload() *models.EmergencyGroup {
	return o.Payload
}

func (o *PutArchitectEmergencygroupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EmergencyGroup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutArchitectEmergencygroupBadRequest creates a PutArchitectEmergencygroupBadRequest with default headers values
func NewPutArchitectEmergencygroupBadRequest() *PutArchitectEmergencygroupBadRequest {
	return &PutArchitectEmergencygroupBadRequest{}
}

/*
PutArchitectEmergencygroupBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutArchitectEmergencygroupBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put architect emergencygroup bad request response has a 2xx status code
func (o *PutArchitectEmergencygroupBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put architect emergencygroup bad request response has a 3xx status code
func (o *PutArchitectEmergencygroupBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put architect emergencygroup bad request response has a 4xx status code
func (o *PutArchitectEmergencygroupBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put architect emergencygroup bad request response has a 5xx status code
func (o *PutArchitectEmergencygroupBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put architect emergencygroup bad request response a status code equal to that given
func (o *PutArchitectEmergencygroupBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PutArchitectEmergencygroupBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] putArchitectEmergencygroupBadRequest  %+v", 400, o.Payload)
}

func (o *PutArchitectEmergencygroupBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] putArchitectEmergencygroupBadRequest  %+v", 400, o.Payload)
}

func (o *PutArchitectEmergencygroupBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutArchitectEmergencygroupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutArchitectEmergencygroupUnauthorized creates a PutArchitectEmergencygroupUnauthorized with default headers values
func NewPutArchitectEmergencygroupUnauthorized() *PutArchitectEmergencygroupUnauthorized {
	return &PutArchitectEmergencygroupUnauthorized{}
}

/*
PutArchitectEmergencygroupUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PutArchitectEmergencygroupUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put architect emergencygroup unauthorized response has a 2xx status code
func (o *PutArchitectEmergencygroupUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put architect emergencygroup unauthorized response has a 3xx status code
func (o *PutArchitectEmergencygroupUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put architect emergencygroup unauthorized response has a 4xx status code
func (o *PutArchitectEmergencygroupUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put architect emergencygroup unauthorized response has a 5xx status code
func (o *PutArchitectEmergencygroupUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put architect emergencygroup unauthorized response a status code equal to that given
func (o *PutArchitectEmergencygroupUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PutArchitectEmergencygroupUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] putArchitectEmergencygroupUnauthorized  %+v", 401, o.Payload)
}

func (o *PutArchitectEmergencygroupUnauthorized) String() string {
	return fmt.Sprintf("[PUT /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] putArchitectEmergencygroupUnauthorized  %+v", 401, o.Payload)
}

func (o *PutArchitectEmergencygroupUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutArchitectEmergencygroupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutArchitectEmergencygroupForbidden creates a PutArchitectEmergencygroupForbidden with default headers values
func NewPutArchitectEmergencygroupForbidden() *PutArchitectEmergencygroupForbidden {
	return &PutArchitectEmergencygroupForbidden{}
}

/*
PutArchitectEmergencygroupForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PutArchitectEmergencygroupForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put architect emergencygroup forbidden response has a 2xx status code
func (o *PutArchitectEmergencygroupForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put architect emergencygroup forbidden response has a 3xx status code
func (o *PutArchitectEmergencygroupForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put architect emergencygroup forbidden response has a 4xx status code
func (o *PutArchitectEmergencygroupForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put architect emergencygroup forbidden response has a 5xx status code
func (o *PutArchitectEmergencygroupForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put architect emergencygroup forbidden response a status code equal to that given
func (o *PutArchitectEmergencygroupForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PutArchitectEmergencygroupForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] putArchitectEmergencygroupForbidden  %+v", 403, o.Payload)
}

func (o *PutArchitectEmergencygroupForbidden) String() string {
	return fmt.Sprintf("[PUT /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] putArchitectEmergencygroupForbidden  %+v", 403, o.Payload)
}

func (o *PutArchitectEmergencygroupForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutArchitectEmergencygroupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutArchitectEmergencygroupNotFound creates a PutArchitectEmergencygroupNotFound with default headers values
func NewPutArchitectEmergencygroupNotFound() *PutArchitectEmergencygroupNotFound {
	return &PutArchitectEmergencygroupNotFound{}
}

/*
PutArchitectEmergencygroupNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PutArchitectEmergencygroupNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put architect emergencygroup not found response has a 2xx status code
func (o *PutArchitectEmergencygroupNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put architect emergencygroup not found response has a 3xx status code
func (o *PutArchitectEmergencygroupNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put architect emergencygroup not found response has a 4xx status code
func (o *PutArchitectEmergencygroupNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put architect emergencygroup not found response has a 5xx status code
func (o *PutArchitectEmergencygroupNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put architect emergencygroup not found response a status code equal to that given
func (o *PutArchitectEmergencygroupNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PutArchitectEmergencygroupNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] putArchitectEmergencygroupNotFound  %+v", 404, o.Payload)
}

func (o *PutArchitectEmergencygroupNotFound) String() string {
	return fmt.Sprintf("[PUT /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] putArchitectEmergencygroupNotFound  %+v", 404, o.Payload)
}

func (o *PutArchitectEmergencygroupNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutArchitectEmergencygroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutArchitectEmergencygroupRequestTimeout creates a PutArchitectEmergencygroupRequestTimeout with default headers values
func NewPutArchitectEmergencygroupRequestTimeout() *PutArchitectEmergencygroupRequestTimeout {
	return &PutArchitectEmergencygroupRequestTimeout{}
}

/*
PutArchitectEmergencygroupRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutArchitectEmergencygroupRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put architect emergencygroup request timeout response has a 2xx status code
func (o *PutArchitectEmergencygroupRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put architect emergencygroup request timeout response has a 3xx status code
func (o *PutArchitectEmergencygroupRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put architect emergencygroup request timeout response has a 4xx status code
func (o *PutArchitectEmergencygroupRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this put architect emergencygroup request timeout response has a 5xx status code
func (o *PutArchitectEmergencygroupRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this put architect emergencygroup request timeout response a status code equal to that given
func (o *PutArchitectEmergencygroupRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PutArchitectEmergencygroupRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] putArchitectEmergencygroupRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutArchitectEmergencygroupRequestTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] putArchitectEmergencygroupRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutArchitectEmergencygroupRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutArchitectEmergencygroupRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutArchitectEmergencygroupRequestEntityTooLarge creates a PutArchitectEmergencygroupRequestEntityTooLarge with default headers values
func NewPutArchitectEmergencygroupRequestEntityTooLarge() *PutArchitectEmergencygroupRequestEntityTooLarge {
	return &PutArchitectEmergencygroupRequestEntityTooLarge{}
}

/*
PutArchitectEmergencygroupRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PutArchitectEmergencygroupRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put architect emergencygroup request entity too large response has a 2xx status code
func (o *PutArchitectEmergencygroupRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put architect emergencygroup request entity too large response has a 3xx status code
func (o *PutArchitectEmergencygroupRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put architect emergencygroup request entity too large response has a 4xx status code
func (o *PutArchitectEmergencygroupRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this put architect emergencygroup request entity too large response has a 5xx status code
func (o *PutArchitectEmergencygroupRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this put architect emergencygroup request entity too large response a status code equal to that given
func (o *PutArchitectEmergencygroupRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PutArchitectEmergencygroupRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] putArchitectEmergencygroupRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutArchitectEmergencygroupRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PUT /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] putArchitectEmergencygroupRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutArchitectEmergencygroupRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutArchitectEmergencygroupRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutArchitectEmergencygroupUnsupportedMediaType creates a PutArchitectEmergencygroupUnsupportedMediaType with default headers values
func NewPutArchitectEmergencygroupUnsupportedMediaType() *PutArchitectEmergencygroupUnsupportedMediaType {
	return &PutArchitectEmergencygroupUnsupportedMediaType{}
}

/*
PutArchitectEmergencygroupUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutArchitectEmergencygroupUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put architect emergencygroup unsupported media type response has a 2xx status code
func (o *PutArchitectEmergencygroupUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put architect emergencygroup unsupported media type response has a 3xx status code
func (o *PutArchitectEmergencygroupUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put architect emergencygroup unsupported media type response has a 4xx status code
func (o *PutArchitectEmergencygroupUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this put architect emergencygroup unsupported media type response has a 5xx status code
func (o *PutArchitectEmergencygroupUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this put architect emergencygroup unsupported media type response a status code equal to that given
func (o *PutArchitectEmergencygroupUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PutArchitectEmergencygroupUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] putArchitectEmergencygroupUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutArchitectEmergencygroupUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PUT /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] putArchitectEmergencygroupUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutArchitectEmergencygroupUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutArchitectEmergencygroupUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutArchitectEmergencygroupTooManyRequests creates a PutArchitectEmergencygroupTooManyRequests with default headers values
func NewPutArchitectEmergencygroupTooManyRequests() *PutArchitectEmergencygroupTooManyRequests {
	return &PutArchitectEmergencygroupTooManyRequests{}
}

/*
PutArchitectEmergencygroupTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutArchitectEmergencygroupTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put architect emergencygroup too many requests response has a 2xx status code
func (o *PutArchitectEmergencygroupTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put architect emergencygroup too many requests response has a 3xx status code
func (o *PutArchitectEmergencygroupTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put architect emergencygroup too many requests response has a 4xx status code
func (o *PutArchitectEmergencygroupTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this put architect emergencygroup too many requests response has a 5xx status code
func (o *PutArchitectEmergencygroupTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this put architect emergencygroup too many requests response a status code equal to that given
func (o *PutArchitectEmergencygroupTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PutArchitectEmergencygroupTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] putArchitectEmergencygroupTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutArchitectEmergencygroupTooManyRequests) String() string {
	return fmt.Sprintf("[PUT /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] putArchitectEmergencygroupTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutArchitectEmergencygroupTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutArchitectEmergencygroupTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutArchitectEmergencygroupInternalServerError creates a PutArchitectEmergencygroupInternalServerError with default headers values
func NewPutArchitectEmergencygroupInternalServerError() *PutArchitectEmergencygroupInternalServerError {
	return &PutArchitectEmergencygroupInternalServerError{}
}

/*
PutArchitectEmergencygroupInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutArchitectEmergencygroupInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put architect emergencygroup internal server error response has a 2xx status code
func (o *PutArchitectEmergencygroupInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put architect emergencygroup internal server error response has a 3xx status code
func (o *PutArchitectEmergencygroupInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put architect emergencygroup internal server error response has a 4xx status code
func (o *PutArchitectEmergencygroupInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this put architect emergencygroup internal server error response has a 5xx status code
func (o *PutArchitectEmergencygroupInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this put architect emergencygroup internal server error response a status code equal to that given
func (o *PutArchitectEmergencygroupInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PutArchitectEmergencygroupInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] putArchitectEmergencygroupInternalServerError  %+v", 500, o.Payload)
}

func (o *PutArchitectEmergencygroupInternalServerError) String() string {
	return fmt.Sprintf("[PUT /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] putArchitectEmergencygroupInternalServerError  %+v", 500, o.Payload)
}

func (o *PutArchitectEmergencygroupInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutArchitectEmergencygroupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutArchitectEmergencygroupServiceUnavailable creates a PutArchitectEmergencygroupServiceUnavailable with default headers values
func NewPutArchitectEmergencygroupServiceUnavailable() *PutArchitectEmergencygroupServiceUnavailable {
	return &PutArchitectEmergencygroupServiceUnavailable{}
}

/*
PutArchitectEmergencygroupServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutArchitectEmergencygroupServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put architect emergencygroup service unavailable response has a 2xx status code
func (o *PutArchitectEmergencygroupServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put architect emergencygroup service unavailable response has a 3xx status code
func (o *PutArchitectEmergencygroupServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put architect emergencygroup service unavailable response has a 4xx status code
func (o *PutArchitectEmergencygroupServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this put architect emergencygroup service unavailable response has a 5xx status code
func (o *PutArchitectEmergencygroupServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this put architect emergencygroup service unavailable response a status code equal to that given
func (o *PutArchitectEmergencygroupServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PutArchitectEmergencygroupServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] putArchitectEmergencygroupServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutArchitectEmergencygroupServiceUnavailable) String() string {
	return fmt.Sprintf("[PUT /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] putArchitectEmergencygroupServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutArchitectEmergencygroupServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutArchitectEmergencygroupServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutArchitectEmergencygroupGatewayTimeout creates a PutArchitectEmergencygroupGatewayTimeout with default headers values
func NewPutArchitectEmergencygroupGatewayTimeout() *PutArchitectEmergencygroupGatewayTimeout {
	return &PutArchitectEmergencygroupGatewayTimeout{}
}

/*
PutArchitectEmergencygroupGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PutArchitectEmergencygroupGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put architect emergencygroup gateway timeout response has a 2xx status code
func (o *PutArchitectEmergencygroupGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put architect emergencygroup gateway timeout response has a 3xx status code
func (o *PutArchitectEmergencygroupGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put architect emergencygroup gateway timeout response has a 4xx status code
func (o *PutArchitectEmergencygroupGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this put architect emergencygroup gateway timeout response has a 5xx status code
func (o *PutArchitectEmergencygroupGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this put architect emergencygroup gateway timeout response a status code equal to that given
func (o *PutArchitectEmergencygroupGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PutArchitectEmergencygroupGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] putArchitectEmergencygroupGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutArchitectEmergencygroupGatewayTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] putArchitectEmergencygroupGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutArchitectEmergencygroupGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutArchitectEmergencygroupGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
