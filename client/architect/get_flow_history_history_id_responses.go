// Code generated by go-swagger; DO NOT EDIT.

package architect

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetFlowHistoryHistoryIDReader is a Reader for the GetFlowHistoryHistoryID structure.
type GetFlowHistoryHistoryIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFlowHistoryHistoryIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFlowHistoryHistoryIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetFlowHistoryHistoryIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetFlowHistoryHistoryIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetFlowHistoryHistoryIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetFlowHistoryHistoryIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetFlowHistoryHistoryIDRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetFlowHistoryHistoryIDRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetFlowHistoryHistoryIDUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetFlowHistoryHistoryIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetFlowHistoryHistoryIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetFlowHistoryHistoryIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetFlowHistoryHistoryIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetFlowHistoryHistoryIDOK creates a GetFlowHistoryHistoryIDOK with default headers values
func NewGetFlowHistoryHistoryIDOK() *GetFlowHistoryHistoryIDOK {
	return &GetFlowHistoryHistoryIDOK{}
}

/*
GetFlowHistoryHistoryIDOK describes a response with status code 200, with default header values.

successful operation
*/
type GetFlowHistoryHistoryIDOK struct {
	Payload *models.HistoryListing
}

// IsSuccess returns true when this get flow history history Id o k response has a 2xx status code
func (o *GetFlowHistoryHistoryIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get flow history history Id o k response has a 3xx status code
func (o *GetFlowHistoryHistoryIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow history history Id o k response has a 4xx status code
func (o *GetFlowHistoryHistoryIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get flow history history Id o k response has a 5xx status code
func (o *GetFlowHistoryHistoryIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get flow history history Id o k response a status code equal to that given
func (o *GetFlowHistoryHistoryIDOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetFlowHistoryHistoryIDOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/history/{historyId}][%d] getFlowHistoryHistoryIdOK  %+v", 200, o.Payload)
}

func (o *GetFlowHistoryHistoryIDOK) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/history/{historyId}][%d] getFlowHistoryHistoryIdOK  %+v", 200, o.Payload)
}

func (o *GetFlowHistoryHistoryIDOK) GetPayload() *models.HistoryListing {
	return o.Payload
}

func (o *GetFlowHistoryHistoryIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HistoryListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowHistoryHistoryIDBadRequest creates a GetFlowHistoryHistoryIDBadRequest with default headers values
func NewGetFlowHistoryHistoryIDBadRequest() *GetFlowHistoryHistoryIDBadRequest {
	return &GetFlowHistoryHistoryIDBadRequest{}
}

/*
GetFlowHistoryHistoryIDBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetFlowHistoryHistoryIDBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flow history history Id bad request response has a 2xx status code
func (o *GetFlowHistoryHistoryIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flow history history Id bad request response has a 3xx status code
func (o *GetFlowHistoryHistoryIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow history history Id bad request response has a 4xx status code
func (o *GetFlowHistoryHistoryIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flow history history Id bad request response has a 5xx status code
func (o *GetFlowHistoryHistoryIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get flow history history Id bad request response a status code equal to that given
func (o *GetFlowHistoryHistoryIDBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetFlowHistoryHistoryIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/history/{historyId}][%d] getFlowHistoryHistoryIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetFlowHistoryHistoryIDBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/history/{historyId}][%d] getFlowHistoryHistoryIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetFlowHistoryHistoryIDBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowHistoryHistoryIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowHistoryHistoryIDUnauthorized creates a GetFlowHistoryHistoryIDUnauthorized with default headers values
func NewGetFlowHistoryHistoryIDUnauthorized() *GetFlowHistoryHistoryIDUnauthorized {
	return &GetFlowHistoryHistoryIDUnauthorized{}
}

/*
GetFlowHistoryHistoryIDUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetFlowHistoryHistoryIDUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flow history history Id unauthorized response has a 2xx status code
func (o *GetFlowHistoryHistoryIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flow history history Id unauthorized response has a 3xx status code
func (o *GetFlowHistoryHistoryIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow history history Id unauthorized response has a 4xx status code
func (o *GetFlowHistoryHistoryIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flow history history Id unauthorized response has a 5xx status code
func (o *GetFlowHistoryHistoryIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get flow history history Id unauthorized response a status code equal to that given
func (o *GetFlowHistoryHistoryIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetFlowHistoryHistoryIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/history/{historyId}][%d] getFlowHistoryHistoryIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetFlowHistoryHistoryIDUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/history/{historyId}][%d] getFlowHistoryHistoryIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetFlowHistoryHistoryIDUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowHistoryHistoryIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowHistoryHistoryIDForbidden creates a GetFlowHistoryHistoryIDForbidden with default headers values
func NewGetFlowHistoryHistoryIDForbidden() *GetFlowHistoryHistoryIDForbidden {
	return &GetFlowHistoryHistoryIDForbidden{}
}

/*
GetFlowHistoryHistoryIDForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetFlowHistoryHistoryIDForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flow history history Id forbidden response has a 2xx status code
func (o *GetFlowHistoryHistoryIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flow history history Id forbidden response has a 3xx status code
func (o *GetFlowHistoryHistoryIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow history history Id forbidden response has a 4xx status code
func (o *GetFlowHistoryHistoryIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flow history history Id forbidden response has a 5xx status code
func (o *GetFlowHistoryHistoryIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get flow history history Id forbidden response a status code equal to that given
func (o *GetFlowHistoryHistoryIDForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetFlowHistoryHistoryIDForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/history/{historyId}][%d] getFlowHistoryHistoryIdForbidden  %+v", 403, o.Payload)
}

func (o *GetFlowHistoryHistoryIDForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/history/{historyId}][%d] getFlowHistoryHistoryIdForbidden  %+v", 403, o.Payload)
}

func (o *GetFlowHistoryHistoryIDForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowHistoryHistoryIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowHistoryHistoryIDNotFound creates a GetFlowHistoryHistoryIDNotFound with default headers values
func NewGetFlowHistoryHistoryIDNotFound() *GetFlowHistoryHistoryIDNotFound {
	return &GetFlowHistoryHistoryIDNotFound{}
}

/*
GetFlowHistoryHistoryIDNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetFlowHistoryHistoryIDNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flow history history Id not found response has a 2xx status code
func (o *GetFlowHistoryHistoryIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flow history history Id not found response has a 3xx status code
func (o *GetFlowHistoryHistoryIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow history history Id not found response has a 4xx status code
func (o *GetFlowHistoryHistoryIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flow history history Id not found response has a 5xx status code
func (o *GetFlowHistoryHistoryIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get flow history history Id not found response a status code equal to that given
func (o *GetFlowHistoryHistoryIDNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetFlowHistoryHistoryIDNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/history/{historyId}][%d] getFlowHistoryHistoryIdNotFound  %+v", 404, o.Payload)
}

func (o *GetFlowHistoryHistoryIDNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/history/{historyId}][%d] getFlowHistoryHistoryIdNotFound  %+v", 404, o.Payload)
}

func (o *GetFlowHistoryHistoryIDNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowHistoryHistoryIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowHistoryHistoryIDRequestTimeout creates a GetFlowHistoryHistoryIDRequestTimeout with default headers values
func NewGetFlowHistoryHistoryIDRequestTimeout() *GetFlowHistoryHistoryIDRequestTimeout {
	return &GetFlowHistoryHistoryIDRequestTimeout{}
}

/*
GetFlowHistoryHistoryIDRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetFlowHistoryHistoryIDRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flow history history Id request timeout response has a 2xx status code
func (o *GetFlowHistoryHistoryIDRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flow history history Id request timeout response has a 3xx status code
func (o *GetFlowHistoryHistoryIDRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow history history Id request timeout response has a 4xx status code
func (o *GetFlowHistoryHistoryIDRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flow history history Id request timeout response has a 5xx status code
func (o *GetFlowHistoryHistoryIDRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get flow history history Id request timeout response a status code equal to that given
func (o *GetFlowHistoryHistoryIDRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetFlowHistoryHistoryIDRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/history/{historyId}][%d] getFlowHistoryHistoryIdRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetFlowHistoryHistoryIDRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/history/{historyId}][%d] getFlowHistoryHistoryIdRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetFlowHistoryHistoryIDRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowHistoryHistoryIDRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowHistoryHistoryIDRequestEntityTooLarge creates a GetFlowHistoryHistoryIDRequestEntityTooLarge with default headers values
func NewGetFlowHistoryHistoryIDRequestEntityTooLarge() *GetFlowHistoryHistoryIDRequestEntityTooLarge {
	return &GetFlowHistoryHistoryIDRequestEntityTooLarge{}
}

/*
GetFlowHistoryHistoryIDRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetFlowHistoryHistoryIDRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flow history history Id request entity too large response has a 2xx status code
func (o *GetFlowHistoryHistoryIDRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flow history history Id request entity too large response has a 3xx status code
func (o *GetFlowHistoryHistoryIDRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow history history Id request entity too large response has a 4xx status code
func (o *GetFlowHistoryHistoryIDRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flow history history Id request entity too large response has a 5xx status code
func (o *GetFlowHistoryHistoryIDRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get flow history history Id request entity too large response a status code equal to that given
func (o *GetFlowHistoryHistoryIDRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetFlowHistoryHistoryIDRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/history/{historyId}][%d] getFlowHistoryHistoryIdRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetFlowHistoryHistoryIDRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/history/{historyId}][%d] getFlowHistoryHistoryIdRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetFlowHistoryHistoryIDRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowHistoryHistoryIDRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowHistoryHistoryIDUnsupportedMediaType creates a GetFlowHistoryHistoryIDUnsupportedMediaType with default headers values
func NewGetFlowHistoryHistoryIDUnsupportedMediaType() *GetFlowHistoryHistoryIDUnsupportedMediaType {
	return &GetFlowHistoryHistoryIDUnsupportedMediaType{}
}

/*
GetFlowHistoryHistoryIDUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetFlowHistoryHistoryIDUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flow history history Id unsupported media type response has a 2xx status code
func (o *GetFlowHistoryHistoryIDUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flow history history Id unsupported media type response has a 3xx status code
func (o *GetFlowHistoryHistoryIDUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow history history Id unsupported media type response has a 4xx status code
func (o *GetFlowHistoryHistoryIDUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flow history history Id unsupported media type response has a 5xx status code
func (o *GetFlowHistoryHistoryIDUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get flow history history Id unsupported media type response a status code equal to that given
func (o *GetFlowHistoryHistoryIDUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetFlowHistoryHistoryIDUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/history/{historyId}][%d] getFlowHistoryHistoryIdUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetFlowHistoryHistoryIDUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/history/{historyId}][%d] getFlowHistoryHistoryIdUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetFlowHistoryHistoryIDUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowHistoryHistoryIDUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowHistoryHistoryIDTooManyRequests creates a GetFlowHistoryHistoryIDTooManyRequests with default headers values
func NewGetFlowHistoryHistoryIDTooManyRequests() *GetFlowHistoryHistoryIDTooManyRequests {
	return &GetFlowHistoryHistoryIDTooManyRequests{}
}

/*
GetFlowHistoryHistoryIDTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetFlowHistoryHistoryIDTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flow history history Id too many requests response has a 2xx status code
func (o *GetFlowHistoryHistoryIDTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flow history history Id too many requests response has a 3xx status code
func (o *GetFlowHistoryHistoryIDTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow history history Id too many requests response has a 4xx status code
func (o *GetFlowHistoryHistoryIDTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flow history history Id too many requests response has a 5xx status code
func (o *GetFlowHistoryHistoryIDTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get flow history history Id too many requests response a status code equal to that given
func (o *GetFlowHistoryHistoryIDTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetFlowHistoryHistoryIDTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/history/{historyId}][%d] getFlowHistoryHistoryIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetFlowHistoryHistoryIDTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/history/{historyId}][%d] getFlowHistoryHistoryIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetFlowHistoryHistoryIDTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowHistoryHistoryIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowHistoryHistoryIDInternalServerError creates a GetFlowHistoryHistoryIDInternalServerError with default headers values
func NewGetFlowHistoryHistoryIDInternalServerError() *GetFlowHistoryHistoryIDInternalServerError {
	return &GetFlowHistoryHistoryIDInternalServerError{}
}

/*
GetFlowHistoryHistoryIDInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetFlowHistoryHistoryIDInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flow history history Id internal server error response has a 2xx status code
func (o *GetFlowHistoryHistoryIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flow history history Id internal server error response has a 3xx status code
func (o *GetFlowHistoryHistoryIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow history history Id internal server error response has a 4xx status code
func (o *GetFlowHistoryHistoryIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get flow history history Id internal server error response has a 5xx status code
func (o *GetFlowHistoryHistoryIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get flow history history Id internal server error response a status code equal to that given
func (o *GetFlowHistoryHistoryIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetFlowHistoryHistoryIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/history/{historyId}][%d] getFlowHistoryHistoryIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetFlowHistoryHistoryIDInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/history/{historyId}][%d] getFlowHistoryHistoryIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetFlowHistoryHistoryIDInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowHistoryHistoryIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowHistoryHistoryIDServiceUnavailable creates a GetFlowHistoryHistoryIDServiceUnavailable with default headers values
func NewGetFlowHistoryHistoryIDServiceUnavailable() *GetFlowHistoryHistoryIDServiceUnavailable {
	return &GetFlowHistoryHistoryIDServiceUnavailable{}
}

/*
GetFlowHistoryHistoryIDServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetFlowHistoryHistoryIDServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flow history history Id service unavailable response has a 2xx status code
func (o *GetFlowHistoryHistoryIDServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flow history history Id service unavailable response has a 3xx status code
func (o *GetFlowHistoryHistoryIDServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow history history Id service unavailable response has a 4xx status code
func (o *GetFlowHistoryHistoryIDServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get flow history history Id service unavailable response has a 5xx status code
func (o *GetFlowHistoryHistoryIDServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get flow history history Id service unavailable response a status code equal to that given
func (o *GetFlowHistoryHistoryIDServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetFlowHistoryHistoryIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/history/{historyId}][%d] getFlowHistoryHistoryIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetFlowHistoryHistoryIDServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/history/{historyId}][%d] getFlowHistoryHistoryIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetFlowHistoryHistoryIDServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowHistoryHistoryIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowHistoryHistoryIDGatewayTimeout creates a GetFlowHistoryHistoryIDGatewayTimeout with default headers values
func NewGetFlowHistoryHistoryIDGatewayTimeout() *GetFlowHistoryHistoryIDGatewayTimeout {
	return &GetFlowHistoryHistoryIDGatewayTimeout{}
}

/*
GetFlowHistoryHistoryIDGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetFlowHistoryHistoryIDGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flow history history Id gateway timeout response has a 2xx status code
func (o *GetFlowHistoryHistoryIDGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flow history history Id gateway timeout response has a 3xx status code
func (o *GetFlowHistoryHistoryIDGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow history history Id gateway timeout response has a 4xx status code
func (o *GetFlowHistoryHistoryIDGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get flow history history Id gateway timeout response has a 5xx status code
func (o *GetFlowHistoryHistoryIDGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get flow history history Id gateway timeout response a status code equal to that given
func (o *GetFlowHistoryHistoryIDGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetFlowHistoryHistoryIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/history/{historyId}][%d] getFlowHistoryHistoryIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetFlowHistoryHistoryIDGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/{flowId}/history/{historyId}][%d] getFlowHistoryHistoryIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetFlowHistoryHistoryIDGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowHistoryHistoryIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
