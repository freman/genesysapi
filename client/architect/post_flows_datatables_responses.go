// Code generated by go-swagger; DO NOT EDIT.

package architect

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostFlowsDatatablesReader is a Reader for the PostFlowsDatatables structure.
type PostFlowsDatatablesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostFlowsDatatablesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostFlowsDatatablesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostFlowsDatatablesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostFlowsDatatablesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostFlowsDatatablesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostFlowsDatatablesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostFlowsDatatablesRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPostFlowsDatatablesConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostFlowsDatatablesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostFlowsDatatablesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostFlowsDatatablesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostFlowsDatatablesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostFlowsDatatablesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostFlowsDatatablesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostFlowsDatatablesOK creates a PostFlowsDatatablesOK with default headers values
func NewPostFlowsDatatablesOK() *PostFlowsDatatablesOK {
	return &PostFlowsDatatablesOK{}
}

/*PostFlowsDatatablesOK handles this case with default header values.

successful operation
*/
type PostFlowsDatatablesOK struct {
	Payload *models.DataTable
}

func (o *PostFlowsDatatablesOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/datatables][%d] postFlowsDatatablesOK  %+v", 200, o.Payload)
}

func (o *PostFlowsDatatablesOK) GetPayload() *models.DataTable {
	return o.Payload
}

func (o *PostFlowsDatatablesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DataTable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsDatatablesBadRequest creates a PostFlowsDatatablesBadRequest with default headers values
func NewPostFlowsDatatablesBadRequest() *PostFlowsDatatablesBadRequest {
	return &PostFlowsDatatablesBadRequest{}
}

/*PostFlowsDatatablesBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostFlowsDatatablesBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PostFlowsDatatablesBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/datatables][%d] postFlowsDatatablesBadRequest  %+v", 400, o.Payload)
}

func (o *PostFlowsDatatablesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsDatatablesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsDatatablesUnauthorized creates a PostFlowsDatatablesUnauthorized with default headers values
func NewPostFlowsDatatablesUnauthorized() *PostFlowsDatatablesUnauthorized {
	return &PostFlowsDatatablesUnauthorized{}
}

/*PostFlowsDatatablesUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PostFlowsDatatablesUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PostFlowsDatatablesUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/datatables][%d] postFlowsDatatablesUnauthorized  %+v", 401, o.Payload)
}

func (o *PostFlowsDatatablesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsDatatablesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsDatatablesForbidden creates a PostFlowsDatatablesForbidden with default headers values
func NewPostFlowsDatatablesForbidden() *PostFlowsDatatablesForbidden {
	return &PostFlowsDatatablesForbidden{}
}

/*PostFlowsDatatablesForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PostFlowsDatatablesForbidden struct {
	Payload *models.ErrorBody
}

func (o *PostFlowsDatatablesForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/datatables][%d] postFlowsDatatablesForbidden  %+v", 403, o.Payload)
}

func (o *PostFlowsDatatablesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsDatatablesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsDatatablesNotFound creates a PostFlowsDatatablesNotFound with default headers values
func NewPostFlowsDatatablesNotFound() *PostFlowsDatatablesNotFound {
	return &PostFlowsDatatablesNotFound{}
}

/*PostFlowsDatatablesNotFound handles this case with default header values.

The requested resource was not found.
*/
type PostFlowsDatatablesNotFound struct {
	Payload *models.ErrorBody
}

func (o *PostFlowsDatatablesNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/datatables][%d] postFlowsDatatablesNotFound  %+v", 404, o.Payload)
}

func (o *PostFlowsDatatablesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsDatatablesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsDatatablesRequestTimeout creates a PostFlowsDatatablesRequestTimeout with default headers values
func NewPostFlowsDatatablesRequestTimeout() *PostFlowsDatatablesRequestTimeout {
	return &PostFlowsDatatablesRequestTimeout{}
}

/*PostFlowsDatatablesRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostFlowsDatatablesRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostFlowsDatatablesRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/datatables][%d] postFlowsDatatablesRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostFlowsDatatablesRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsDatatablesRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsDatatablesConflict creates a PostFlowsDatatablesConflict with default headers values
func NewPostFlowsDatatablesConflict() *PostFlowsDatatablesConflict {
	return &PostFlowsDatatablesConflict{}
}

/*PostFlowsDatatablesConflict handles this case with default header values.

Conflict
*/
type PostFlowsDatatablesConflict struct {
	Payload *models.ErrorBody
}

func (o *PostFlowsDatatablesConflict) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/datatables][%d] postFlowsDatatablesConflict  %+v", 409, o.Payload)
}

func (o *PostFlowsDatatablesConflict) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsDatatablesConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsDatatablesRequestEntityTooLarge creates a PostFlowsDatatablesRequestEntityTooLarge with default headers values
func NewPostFlowsDatatablesRequestEntityTooLarge() *PostFlowsDatatablesRequestEntityTooLarge {
	return &PostFlowsDatatablesRequestEntityTooLarge{}
}

/*PostFlowsDatatablesRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type PostFlowsDatatablesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PostFlowsDatatablesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/datatables][%d] postFlowsDatatablesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostFlowsDatatablesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsDatatablesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsDatatablesUnsupportedMediaType creates a PostFlowsDatatablesUnsupportedMediaType with default headers values
func NewPostFlowsDatatablesUnsupportedMediaType() *PostFlowsDatatablesUnsupportedMediaType {
	return &PostFlowsDatatablesUnsupportedMediaType{}
}

/*PostFlowsDatatablesUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostFlowsDatatablesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PostFlowsDatatablesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/datatables][%d] postFlowsDatatablesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostFlowsDatatablesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsDatatablesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsDatatablesTooManyRequests creates a PostFlowsDatatablesTooManyRequests with default headers values
func NewPostFlowsDatatablesTooManyRequests() *PostFlowsDatatablesTooManyRequests {
	return &PostFlowsDatatablesTooManyRequests{}
}

/*PostFlowsDatatablesTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostFlowsDatatablesTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PostFlowsDatatablesTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/datatables][%d] postFlowsDatatablesTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostFlowsDatatablesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsDatatablesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsDatatablesInternalServerError creates a PostFlowsDatatablesInternalServerError with default headers values
func NewPostFlowsDatatablesInternalServerError() *PostFlowsDatatablesInternalServerError {
	return &PostFlowsDatatablesInternalServerError{}
}

/*PostFlowsDatatablesInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostFlowsDatatablesInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PostFlowsDatatablesInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/datatables][%d] postFlowsDatatablesInternalServerError  %+v", 500, o.Payload)
}

func (o *PostFlowsDatatablesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsDatatablesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsDatatablesServiceUnavailable creates a PostFlowsDatatablesServiceUnavailable with default headers values
func NewPostFlowsDatatablesServiceUnavailable() *PostFlowsDatatablesServiceUnavailable {
	return &PostFlowsDatatablesServiceUnavailable{}
}

/*PostFlowsDatatablesServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostFlowsDatatablesServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PostFlowsDatatablesServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/datatables][%d] postFlowsDatatablesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostFlowsDatatablesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsDatatablesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsDatatablesGatewayTimeout creates a PostFlowsDatatablesGatewayTimeout with default headers values
func NewPostFlowsDatatablesGatewayTimeout() *PostFlowsDatatablesGatewayTimeout {
	return &PostFlowsDatatablesGatewayTimeout{}
}

/*PostFlowsDatatablesGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PostFlowsDatatablesGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostFlowsDatatablesGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/datatables][%d] postFlowsDatatablesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostFlowsDatatablesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsDatatablesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
