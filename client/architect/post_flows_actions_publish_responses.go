// Code generated by go-swagger; DO NOT EDIT.

package architect

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostFlowsActionsPublishReader is a Reader for the PostFlowsActionsPublish structure.
type PostFlowsActionsPublishReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostFlowsActionsPublishReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostFlowsActionsPublishOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewPostFlowsActionsPublishAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostFlowsActionsPublishBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostFlowsActionsPublishUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostFlowsActionsPublishForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostFlowsActionsPublishNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewPostFlowsActionsPublishMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostFlowsActionsPublishRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPostFlowsActionsPublishConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewPostFlowsActionsPublishGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostFlowsActionsPublishRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostFlowsActionsPublishUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostFlowsActionsPublishTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostFlowsActionsPublishInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostFlowsActionsPublishServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostFlowsActionsPublishGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostFlowsActionsPublishOK creates a PostFlowsActionsPublishOK with default headers values
func NewPostFlowsActionsPublishOK() *PostFlowsActionsPublishOK {
	return &PostFlowsActionsPublishOK{}
}

/*
PostFlowsActionsPublishOK describes a response with status code 200, with default header values.

successful operation
*/
type PostFlowsActionsPublishOK struct {
	Payload *models.Operation
}

// IsSuccess returns true when this post flows actions publish o k response has a 2xx status code
func (o *PostFlowsActionsPublishOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post flows actions publish o k response has a 3xx status code
func (o *PostFlowsActionsPublishOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post flows actions publish o k response has a 4xx status code
func (o *PostFlowsActionsPublishOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post flows actions publish o k response has a 5xx status code
func (o *PostFlowsActionsPublishOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post flows actions publish o k response a status code equal to that given
func (o *PostFlowsActionsPublishOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostFlowsActionsPublishOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/publish][%d] postFlowsActionsPublishOK  %+v", 200, o.Payload)
}

func (o *PostFlowsActionsPublishOK) String() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/publish][%d] postFlowsActionsPublishOK  %+v", 200, o.Payload)
}

func (o *PostFlowsActionsPublishOK) GetPayload() *models.Operation {
	return o.Payload
}

func (o *PostFlowsActionsPublishOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Operation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsActionsPublishAccepted creates a PostFlowsActionsPublishAccepted with default headers values
func NewPostFlowsActionsPublishAccepted() *PostFlowsActionsPublishAccepted {
	return &PostFlowsActionsPublishAccepted{}
}

/*
PostFlowsActionsPublishAccepted describes a response with status code 202, with default header values.

Accepted - the publish has begun
*/
type PostFlowsActionsPublishAccepted struct {
}

// IsSuccess returns true when this post flows actions publish accepted response has a 2xx status code
func (o *PostFlowsActionsPublishAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post flows actions publish accepted response has a 3xx status code
func (o *PostFlowsActionsPublishAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post flows actions publish accepted response has a 4xx status code
func (o *PostFlowsActionsPublishAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this post flows actions publish accepted response has a 5xx status code
func (o *PostFlowsActionsPublishAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this post flows actions publish accepted response a status code equal to that given
func (o *PostFlowsActionsPublishAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *PostFlowsActionsPublishAccepted) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/publish][%d] postFlowsActionsPublishAccepted ", 202)
}

func (o *PostFlowsActionsPublishAccepted) String() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/publish][%d] postFlowsActionsPublishAccepted ", 202)
}

func (o *PostFlowsActionsPublishAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostFlowsActionsPublishBadRequest creates a PostFlowsActionsPublishBadRequest with default headers values
func NewPostFlowsActionsPublishBadRequest() *PostFlowsActionsPublishBadRequest {
	return &PostFlowsActionsPublishBadRequest{}
}

/*
PostFlowsActionsPublishBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostFlowsActionsPublishBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post flows actions publish bad request response has a 2xx status code
func (o *PostFlowsActionsPublishBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post flows actions publish bad request response has a 3xx status code
func (o *PostFlowsActionsPublishBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post flows actions publish bad request response has a 4xx status code
func (o *PostFlowsActionsPublishBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post flows actions publish bad request response has a 5xx status code
func (o *PostFlowsActionsPublishBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post flows actions publish bad request response a status code equal to that given
func (o *PostFlowsActionsPublishBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostFlowsActionsPublishBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/publish][%d] postFlowsActionsPublishBadRequest  %+v", 400, o.Payload)
}

func (o *PostFlowsActionsPublishBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/publish][%d] postFlowsActionsPublishBadRequest  %+v", 400, o.Payload)
}

func (o *PostFlowsActionsPublishBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsActionsPublishBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsActionsPublishUnauthorized creates a PostFlowsActionsPublishUnauthorized with default headers values
func NewPostFlowsActionsPublishUnauthorized() *PostFlowsActionsPublishUnauthorized {
	return &PostFlowsActionsPublishUnauthorized{}
}

/*
PostFlowsActionsPublishUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostFlowsActionsPublishUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post flows actions publish unauthorized response has a 2xx status code
func (o *PostFlowsActionsPublishUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post flows actions publish unauthorized response has a 3xx status code
func (o *PostFlowsActionsPublishUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post flows actions publish unauthorized response has a 4xx status code
func (o *PostFlowsActionsPublishUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post flows actions publish unauthorized response has a 5xx status code
func (o *PostFlowsActionsPublishUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post flows actions publish unauthorized response a status code equal to that given
func (o *PostFlowsActionsPublishUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostFlowsActionsPublishUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/publish][%d] postFlowsActionsPublishUnauthorized  %+v", 401, o.Payload)
}

func (o *PostFlowsActionsPublishUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/publish][%d] postFlowsActionsPublishUnauthorized  %+v", 401, o.Payload)
}

func (o *PostFlowsActionsPublishUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsActionsPublishUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsActionsPublishForbidden creates a PostFlowsActionsPublishForbidden with default headers values
func NewPostFlowsActionsPublishForbidden() *PostFlowsActionsPublishForbidden {
	return &PostFlowsActionsPublishForbidden{}
}

/*
PostFlowsActionsPublishForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostFlowsActionsPublishForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post flows actions publish forbidden response has a 2xx status code
func (o *PostFlowsActionsPublishForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post flows actions publish forbidden response has a 3xx status code
func (o *PostFlowsActionsPublishForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post flows actions publish forbidden response has a 4xx status code
func (o *PostFlowsActionsPublishForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post flows actions publish forbidden response has a 5xx status code
func (o *PostFlowsActionsPublishForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post flows actions publish forbidden response a status code equal to that given
func (o *PostFlowsActionsPublishForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostFlowsActionsPublishForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/publish][%d] postFlowsActionsPublishForbidden  %+v", 403, o.Payload)
}

func (o *PostFlowsActionsPublishForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/publish][%d] postFlowsActionsPublishForbidden  %+v", 403, o.Payload)
}

func (o *PostFlowsActionsPublishForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsActionsPublishForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsActionsPublishNotFound creates a PostFlowsActionsPublishNotFound with default headers values
func NewPostFlowsActionsPublishNotFound() *PostFlowsActionsPublishNotFound {
	return &PostFlowsActionsPublishNotFound{}
}

/*
PostFlowsActionsPublishNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostFlowsActionsPublishNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post flows actions publish not found response has a 2xx status code
func (o *PostFlowsActionsPublishNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post flows actions publish not found response has a 3xx status code
func (o *PostFlowsActionsPublishNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post flows actions publish not found response has a 4xx status code
func (o *PostFlowsActionsPublishNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post flows actions publish not found response has a 5xx status code
func (o *PostFlowsActionsPublishNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post flows actions publish not found response a status code equal to that given
func (o *PostFlowsActionsPublishNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostFlowsActionsPublishNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/publish][%d] postFlowsActionsPublishNotFound  %+v", 404, o.Payload)
}

func (o *PostFlowsActionsPublishNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/publish][%d] postFlowsActionsPublishNotFound  %+v", 404, o.Payload)
}

func (o *PostFlowsActionsPublishNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsActionsPublishNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsActionsPublishMethodNotAllowed creates a PostFlowsActionsPublishMethodNotAllowed with default headers values
func NewPostFlowsActionsPublishMethodNotAllowed() *PostFlowsActionsPublishMethodNotAllowed {
	return &PostFlowsActionsPublishMethodNotAllowed{}
}

/*
PostFlowsActionsPublishMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type PostFlowsActionsPublishMethodNotAllowed struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post flows actions publish method not allowed response has a 2xx status code
func (o *PostFlowsActionsPublishMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post flows actions publish method not allowed response has a 3xx status code
func (o *PostFlowsActionsPublishMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post flows actions publish method not allowed response has a 4xx status code
func (o *PostFlowsActionsPublishMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this post flows actions publish method not allowed response has a 5xx status code
func (o *PostFlowsActionsPublishMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this post flows actions publish method not allowed response a status code equal to that given
func (o *PostFlowsActionsPublishMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

func (o *PostFlowsActionsPublishMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/publish][%d] postFlowsActionsPublishMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *PostFlowsActionsPublishMethodNotAllowed) String() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/publish][%d] postFlowsActionsPublishMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *PostFlowsActionsPublishMethodNotAllowed) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsActionsPublishMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsActionsPublishRequestTimeout creates a PostFlowsActionsPublishRequestTimeout with default headers values
func NewPostFlowsActionsPublishRequestTimeout() *PostFlowsActionsPublishRequestTimeout {
	return &PostFlowsActionsPublishRequestTimeout{}
}

/*
PostFlowsActionsPublishRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostFlowsActionsPublishRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post flows actions publish request timeout response has a 2xx status code
func (o *PostFlowsActionsPublishRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post flows actions publish request timeout response has a 3xx status code
func (o *PostFlowsActionsPublishRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post flows actions publish request timeout response has a 4xx status code
func (o *PostFlowsActionsPublishRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post flows actions publish request timeout response has a 5xx status code
func (o *PostFlowsActionsPublishRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post flows actions publish request timeout response a status code equal to that given
func (o *PostFlowsActionsPublishRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostFlowsActionsPublishRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/publish][%d] postFlowsActionsPublishRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostFlowsActionsPublishRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/publish][%d] postFlowsActionsPublishRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostFlowsActionsPublishRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsActionsPublishRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsActionsPublishConflict creates a PostFlowsActionsPublishConflict with default headers values
func NewPostFlowsActionsPublishConflict() *PostFlowsActionsPublishConflict {
	return &PostFlowsActionsPublishConflict{}
}

/*
PostFlowsActionsPublishConflict describes a response with status code 409, with default header values.

Conflict
*/
type PostFlowsActionsPublishConflict struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post flows actions publish conflict response has a 2xx status code
func (o *PostFlowsActionsPublishConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post flows actions publish conflict response has a 3xx status code
func (o *PostFlowsActionsPublishConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post flows actions publish conflict response has a 4xx status code
func (o *PostFlowsActionsPublishConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this post flows actions publish conflict response has a 5xx status code
func (o *PostFlowsActionsPublishConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this post flows actions publish conflict response a status code equal to that given
func (o *PostFlowsActionsPublishConflict) IsCode(code int) bool {
	return code == 409
}

func (o *PostFlowsActionsPublishConflict) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/publish][%d] postFlowsActionsPublishConflict  %+v", 409, o.Payload)
}

func (o *PostFlowsActionsPublishConflict) String() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/publish][%d] postFlowsActionsPublishConflict  %+v", 409, o.Payload)
}

func (o *PostFlowsActionsPublishConflict) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsActionsPublishConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsActionsPublishGone creates a PostFlowsActionsPublishGone with default headers values
func NewPostFlowsActionsPublishGone() *PostFlowsActionsPublishGone {
	return &PostFlowsActionsPublishGone{}
}

/*
PostFlowsActionsPublishGone describes a response with status code 410, with default header values.

Gone
*/
type PostFlowsActionsPublishGone struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post flows actions publish gone response has a 2xx status code
func (o *PostFlowsActionsPublishGone) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post flows actions publish gone response has a 3xx status code
func (o *PostFlowsActionsPublishGone) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post flows actions publish gone response has a 4xx status code
func (o *PostFlowsActionsPublishGone) IsClientError() bool {
	return true
}

// IsServerError returns true when this post flows actions publish gone response has a 5xx status code
func (o *PostFlowsActionsPublishGone) IsServerError() bool {
	return false
}

// IsCode returns true when this post flows actions publish gone response a status code equal to that given
func (o *PostFlowsActionsPublishGone) IsCode(code int) bool {
	return code == 410
}

func (o *PostFlowsActionsPublishGone) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/publish][%d] postFlowsActionsPublishGone  %+v", 410, o.Payload)
}

func (o *PostFlowsActionsPublishGone) String() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/publish][%d] postFlowsActionsPublishGone  %+v", 410, o.Payload)
}

func (o *PostFlowsActionsPublishGone) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsActionsPublishGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsActionsPublishRequestEntityTooLarge creates a PostFlowsActionsPublishRequestEntityTooLarge with default headers values
func NewPostFlowsActionsPublishRequestEntityTooLarge() *PostFlowsActionsPublishRequestEntityTooLarge {
	return &PostFlowsActionsPublishRequestEntityTooLarge{}
}

/*
PostFlowsActionsPublishRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PostFlowsActionsPublishRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post flows actions publish request entity too large response has a 2xx status code
func (o *PostFlowsActionsPublishRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post flows actions publish request entity too large response has a 3xx status code
func (o *PostFlowsActionsPublishRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post flows actions publish request entity too large response has a 4xx status code
func (o *PostFlowsActionsPublishRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post flows actions publish request entity too large response has a 5xx status code
func (o *PostFlowsActionsPublishRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post flows actions publish request entity too large response a status code equal to that given
func (o *PostFlowsActionsPublishRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostFlowsActionsPublishRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/publish][%d] postFlowsActionsPublishRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostFlowsActionsPublishRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/publish][%d] postFlowsActionsPublishRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostFlowsActionsPublishRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsActionsPublishRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsActionsPublishUnsupportedMediaType creates a PostFlowsActionsPublishUnsupportedMediaType with default headers values
func NewPostFlowsActionsPublishUnsupportedMediaType() *PostFlowsActionsPublishUnsupportedMediaType {
	return &PostFlowsActionsPublishUnsupportedMediaType{}
}

/*
PostFlowsActionsPublishUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostFlowsActionsPublishUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post flows actions publish unsupported media type response has a 2xx status code
func (o *PostFlowsActionsPublishUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post flows actions publish unsupported media type response has a 3xx status code
func (o *PostFlowsActionsPublishUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post flows actions publish unsupported media type response has a 4xx status code
func (o *PostFlowsActionsPublishUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post flows actions publish unsupported media type response has a 5xx status code
func (o *PostFlowsActionsPublishUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post flows actions publish unsupported media type response a status code equal to that given
func (o *PostFlowsActionsPublishUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostFlowsActionsPublishUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/publish][%d] postFlowsActionsPublishUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostFlowsActionsPublishUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/publish][%d] postFlowsActionsPublishUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostFlowsActionsPublishUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsActionsPublishUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsActionsPublishTooManyRequests creates a PostFlowsActionsPublishTooManyRequests with default headers values
func NewPostFlowsActionsPublishTooManyRequests() *PostFlowsActionsPublishTooManyRequests {
	return &PostFlowsActionsPublishTooManyRequests{}
}

/*
PostFlowsActionsPublishTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostFlowsActionsPublishTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post flows actions publish too many requests response has a 2xx status code
func (o *PostFlowsActionsPublishTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post flows actions publish too many requests response has a 3xx status code
func (o *PostFlowsActionsPublishTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post flows actions publish too many requests response has a 4xx status code
func (o *PostFlowsActionsPublishTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post flows actions publish too many requests response has a 5xx status code
func (o *PostFlowsActionsPublishTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post flows actions publish too many requests response a status code equal to that given
func (o *PostFlowsActionsPublishTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostFlowsActionsPublishTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/publish][%d] postFlowsActionsPublishTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostFlowsActionsPublishTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/publish][%d] postFlowsActionsPublishTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostFlowsActionsPublishTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsActionsPublishTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsActionsPublishInternalServerError creates a PostFlowsActionsPublishInternalServerError with default headers values
func NewPostFlowsActionsPublishInternalServerError() *PostFlowsActionsPublishInternalServerError {
	return &PostFlowsActionsPublishInternalServerError{}
}

/*
PostFlowsActionsPublishInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostFlowsActionsPublishInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post flows actions publish internal server error response has a 2xx status code
func (o *PostFlowsActionsPublishInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post flows actions publish internal server error response has a 3xx status code
func (o *PostFlowsActionsPublishInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post flows actions publish internal server error response has a 4xx status code
func (o *PostFlowsActionsPublishInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post flows actions publish internal server error response has a 5xx status code
func (o *PostFlowsActionsPublishInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post flows actions publish internal server error response a status code equal to that given
func (o *PostFlowsActionsPublishInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostFlowsActionsPublishInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/publish][%d] postFlowsActionsPublishInternalServerError  %+v", 500, o.Payload)
}

func (o *PostFlowsActionsPublishInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/publish][%d] postFlowsActionsPublishInternalServerError  %+v", 500, o.Payload)
}

func (o *PostFlowsActionsPublishInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsActionsPublishInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsActionsPublishServiceUnavailable creates a PostFlowsActionsPublishServiceUnavailable with default headers values
func NewPostFlowsActionsPublishServiceUnavailable() *PostFlowsActionsPublishServiceUnavailable {
	return &PostFlowsActionsPublishServiceUnavailable{}
}

/*
PostFlowsActionsPublishServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostFlowsActionsPublishServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post flows actions publish service unavailable response has a 2xx status code
func (o *PostFlowsActionsPublishServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post flows actions publish service unavailable response has a 3xx status code
func (o *PostFlowsActionsPublishServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post flows actions publish service unavailable response has a 4xx status code
func (o *PostFlowsActionsPublishServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post flows actions publish service unavailable response has a 5xx status code
func (o *PostFlowsActionsPublishServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post flows actions publish service unavailable response a status code equal to that given
func (o *PostFlowsActionsPublishServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostFlowsActionsPublishServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/publish][%d] postFlowsActionsPublishServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostFlowsActionsPublishServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/publish][%d] postFlowsActionsPublishServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostFlowsActionsPublishServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsActionsPublishServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsActionsPublishGatewayTimeout creates a PostFlowsActionsPublishGatewayTimeout with default headers values
func NewPostFlowsActionsPublishGatewayTimeout() *PostFlowsActionsPublishGatewayTimeout {
	return &PostFlowsActionsPublishGatewayTimeout{}
}

/*
PostFlowsActionsPublishGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostFlowsActionsPublishGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post flows actions publish gateway timeout response has a 2xx status code
func (o *PostFlowsActionsPublishGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post flows actions publish gateway timeout response has a 3xx status code
func (o *PostFlowsActionsPublishGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post flows actions publish gateway timeout response has a 4xx status code
func (o *PostFlowsActionsPublishGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post flows actions publish gateway timeout response has a 5xx status code
func (o *PostFlowsActionsPublishGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post flows actions publish gateway timeout response a status code equal to that given
func (o *PostFlowsActionsPublishGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostFlowsActionsPublishGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/publish][%d] postFlowsActionsPublishGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostFlowsActionsPublishGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/publish][%d] postFlowsActionsPublishGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostFlowsActionsPublishGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsActionsPublishGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
