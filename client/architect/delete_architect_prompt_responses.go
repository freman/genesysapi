// Code generated by go-swagger; DO NOT EDIT.

package architect

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// DeleteArchitectPromptReader is a Reader for the DeleteArchitectPrompt structure.
type DeleteArchitectPromptReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteArchitectPromptReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 400:
		result := NewDeleteArchitectPromptBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteArchitectPromptUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteArchitectPromptForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteArchitectPromptNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewDeleteArchitectPromptRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeleteArchitectPromptConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewDeleteArchitectPromptGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewDeleteArchitectPromptRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDeleteArchitectPromptUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteArchitectPromptTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteArchitectPromptInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteArchitectPromptServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteArchitectPromptGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteArchitectPromptDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteArchitectPromptBadRequest creates a DeleteArchitectPromptBadRequest with default headers values
func NewDeleteArchitectPromptBadRequest() *DeleteArchitectPromptBadRequest {
	return &DeleteArchitectPromptBadRequest{}
}

/*
DeleteArchitectPromptBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type DeleteArchitectPromptBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete architect prompt bad request response has a 2xx status code
func (o *DeleteArchitectPromptBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete architect prompt bad request response has a 3xx status code
func (o *DeleteArchitectPromptBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete architect prompt bad request response has a 4xx status code
func (o *DeleteArchitectPromptBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete architect prompt bad request response has a 5xx status code
func (o *DeleteArchitectPromptBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete architect prompt bad request response a status code equal to that given
func (o *DeleteArchitectPromptBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteArchitectPromptBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/prompts/{promptId}][%d] deleteArchitectPromptBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteArchitectPromptBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/prompts/{promptId}][%d] deleteArchitectPromptBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteArchitectPromptBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteArchitectPromptBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArchitectPromptUnauthorized creates a DeleteArchitectPromptUnauthorized with default headers values
func NewDeleteArchitectPromptUnauthorized() *DeleteArchitectPromptUnauthorized {
	return &DeleteArchitectPromptUnauthorized{}
}

/*
DeleteArchitectPromptUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type DeleteArchitectPromptUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete architect prompt unauthorized response has a 2xx status code
func (o *DeleteArchitectPromptUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete architect prompt unauthorized response has a 3xx status code
func (o *DeleteArchitectPromptUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete architect prompt unauthorized response has a 4xx status code
func (o *DeleteArchitectPromptUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete architect prompt unauthorized response has a 5xx status code
func (o *DeleteArchitectPromptUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete architect prompt unauthorized response a status code equal to that given
func (o *DeleteArchitectPromptUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteArchitectPromptUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/prompts/{promptId}][%d] deleteArchitectPromptUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteArchitectPromptUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/prompts/{promptId}][%d] deleteArchitectPromptUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteArchitectPromptUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteArchitectPromptUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArchitectPromptForbidden creates a DeleteArchitectPromptForbidden with default headers values
func NewDeleteArchitectPromptForbidden() *DeleteArchitectPromptForbidden {
	return &DeleteArchitectPromptForbidden{}
}

/*
DeleteArchitectPromptForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type DeleteArchitectPromptForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete architect prompt forbidden response has a 2xx status code
func (o *DeleteArchitectPromptForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete architect prompt forbidden response has a 3xx status code
func (o *DeleteArchitectPromptForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete architect prompt forbidden response has a 4xx status code
func (o *DeleteArchitectPromptForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete architect prompt forbidden response has a 5xx status code
func (o *DeleteArchitectPromptForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete architect prompt forbidden response a status code equal to that given
func (o *DeleteArchitectPromptForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteArchitectPromptForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/prompts/{promptId}][%d] deleteArchitectPromptForbidden  %+v", 403, o.Payload)
}

func (o *DeleteArchitectPromptForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/prompts/{promptId}][%d] deleteArchitectPromptForbidden  %+v", 403, o.Payload)
}

func (o *DeleteArchitectPromptForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteArchitectPromptForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArchitectPromptNotFound creates a DeleteArchitectPromptNotFound with default headers values
func NewDeleteArchitectPromptNotFound() *DeleteArchitectPromptNotFound {
	return &DeleteArchitectPromptNotFound{}
}

/*
DeleteArchitectPromptNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type DeleteArchitectPromptNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete architect prompt not found response has a 2xx status code
func (o *DeleteArchitectPromptNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete architect prompt not found response has a 3xx status code
func (o *DeleteArchitectPromptNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete architect prompt not found response has a 4xx status code
func (o *DeleteArchitectPromptNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete architect prompt not found response has a 5xx status code
func (o *DeleteArchitectPromptNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete architect prompt not found response a status code equal to that given
func (o *DeleteArchitectPromptNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteArchitectPromptNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/prompts/{promptId}][%d] deleteArchitectPromptNotFound  %+v", 404, o.Payload)
}

func (o *DeleteArchitectPromptNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/prompts/{promptId}][%d] deleteArchitectPromptNotFound  %+v", 404, o.Payload)
}

func (o *DeleteArchitectPromptNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteArchitectPromptNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArchitectPromptRequestTimeout creates a DeleteArchitectPromptRequestTimeout with default headers values
func NewDeleteArchitectPromptRequestTimeout() *DeleteArchitectPromptRequestTimeout {
	return &DeleteArchitectPromptRequestTimeout{}
}

/*
DeleteArchitectPromptRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type DeleteArchitectPromptRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete architect prompt request timeout response has a 2xx status code
func (o *DeleteArchitectPromptRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete architect prompt request timeout response has a 3xx status code
func (o *DeleteArchitectPromptRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete architect prompt request timeout response has a 4xx status code
func (o *DeleteArchitectPromptRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete architect prompt request timeout response has a 5xx status code
func (o *DeleteArchitectPromptRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this delete architect prompt request timeout response a status code equal to that given
func (o *DeleteArchitectPromptRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *DeleteArchitectPromptRequestTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/prompts/{promptId}][%d] deleteArchitectPromptRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteArchitectPromptRequestTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/prompts/{promptId}][%d] deleteArchitectPromptRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteArchitectPromptRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteArchitectPromptRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArchitectPromptConflict creates a DeleteArchitectPromptConflict with default headers values
func NewDeleteArchitectPromptConflict() *DeleteArchitectPromptConflict {
	return &DeleteArchitectPromptConflict{}
}

/*
DeleteArchitectPromptConflict describes a response with status code 409, with default header values.

Conflict
*/
type DeleteArchitectPromptConflict struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete architect prompt conflict response has a 2xx status code
func (o *DeleteArchitectPromptConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete architect prompt conflict response has a 3xx status code
func (o *DeleteArchitectPromptConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete architect prompt conflict response has a 4xx status code
func (o *DeleteArchitectPromptConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete architect prompt conflict response has a 5xx status code
func (o *DeleteArchitectPromptConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this delete architect prompt conflict response a status code equal to that given
func (o *DeleteArchitectPromptConflict) IsCode(code int) bool {
	return code == 409
}

func (o *DeleteArchitectPromptConflict) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/prompts/{promptId}][%d] deleteArchitectPromptConflict  %+v", 409, o.Payload)
}

func (o *DeleteArchitectPromptConflict) String() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/prompts/{promptId}][%d] deleteArchitectPromptConflict  %+v", 409, o.Payload)
}

func (o *DeleteArchitectPromptConflict) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteArchitectPromptConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArchitectPromptGone creates a DeleteArchitectPromptGone with default headers values
func NewDeleteArchitectPromptGone() *DeleteArchitectPromptGone {
	return &DeleteArchitectPromptGone{}
}

/*
DeleteArchitectPromptGone describes a response with status code 410, with default header values.

Gone
*/
type DeleteArchitectPromptGone struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete architect prompt gone response has a 2xx status code
func (o *DeleteArchitectPromptGone) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete architect prompt gone response has a 3xx status code
func (o *DeleteArchitectPromptGone) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete architect prompt gone response has a 4xx status code
func (o *DeleteArchitectPromptGone) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete architect prompt gone response has a 5xx status code
func (o *DeleteArchitectPromptGone) IsServerError() bool {
	return false
}

// IsCode returns true when this delete architect prompt gone response a status code equal to that given
func (o *DeleteArchitectPromptGone) IsCode(code int) bool {
	return code == 410
}

func (o *DeleteArchitectPromptGone) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/prompts/{promptId}][%d] deleteArchitectPromptGone  %+v", 410, o.Payload)
}

func (o *DeleteArchitectPromptGone) String() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/prompts/{promptId}][%d] deleteArchitectPromptGone  %+v", 410, o.Payload)
}

func (o *DeleteArchitectPromptGone) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteArchitectPromptGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArchitectPromptRequestEntityTooLarge creates a DeleteArchitectPromptRequestEntityTooLarge with default headers values
func NewDeleteArchitectPromptRequestEntityTooLarge() *DeleteArchitectPromptRequestEntityTooLarge {
	return &DeleteArchitectPromptRequestEntityTooLarge{}
}

/*
DeleteArchitectPromptRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type DeleteArchitectPromptRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete architect prompt request entity too large response has a 2xx status code
func (o *DeleteArchitectPromptRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete architect prompt request entity too large response has a 3xx status code
func (o *DeleteArchitectPromptRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete architect prompt request entity too large response has a 4xx status code
func (o *DeleteArchitectPromptRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete architect prompt request entity too large response has a 5xx status code
func (o *DeleteArchitectPromptRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this delete architect prompt request entity too large response a status code equal to that given
func (o *DeleteArchitectPromptRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *DeleteArchitectPromptRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/prompts/{promptId}][%d] deleteArchitectPromptRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteArchitectPromptRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/prompts/{promptId}][%d] deleteArchitectPromptRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteArchitectPromptRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteArchitectPromptRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArchitectPromptUnsupportedMediaType creates a DeleteArchitectPromptUnsupportedMediaType with default headers values
func NewDeleteArchitectPromptUnsupportedMediaType() *DeleteArchitectPromptUnsupportedMediaType {
	return &DeleteArchitectPromptUnsupportedMediaType{}
}

/*
DeleteArchitectPromptUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type DeleteArchitectPromptUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete architect prompt unsupported media type response has a 2xx status code
func (o *DeleteArchitectPromptUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete architect prompt unsupported media type response has a 3xx status code
func (o *DeleteArchitectPromptUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete architect prompt unsupported media type response has a 4xx status code
func (o *DeleteArchitectPromptUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete architect prompt unsupported media type response has a 5xx status code
func (o *DeleteArchitectPromptUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this delete architect prompt unsupported media type response a status code equal to that given
func (o *DeleteArchitectPromptUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *DeleteArchitectPromptUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/prompts/{promptId}][%d] deleteArchitectPromptUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteArchitectPromptUnsupportedMediaType) String() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/prompts/{promptId}][%d] deleteArchitectPromptUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteArchitectPromptUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteArchitectPromptUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArchitectPromptTooManyRequests creates a DeleteArchitectPromptTooManyRequests with default headers values
func NewDeleteArchitectPromptTooManyRequests() *DeleteArchitectPromptTooManyRequests {
	return &DeleteArchitectPromptTooManyRequests{}
}

/*
DeleteArchitectPromptTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type DeleteArchitectPromptTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete architect prompt too many requests response has a 2xx status code
func (o *DeleteArchitectPromptTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete architect prompt too many requests response has a 3xx status code
func (o *DeleteArchitectPromptTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete architect prompt too many requests response has a 4xx status code
func (o *DeleteArchitectPromptTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete architect prompt too many requests response has a 5xx status code
func (o *DeleteArchitectPromptTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete architect prompt too many requests response a status code equal to that given
func (o *DeleteArchitectPromptTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *DeleteArchitectPromptTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/prompts/{promptId}][%d] deleteArchitectPromptTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteArchitectPromptTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/prompts/{promptId}][%d] deleteArchitectPromptTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteArchitectPromptTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteArchitectPromptTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArchitectPromptInternalServerError creates a DeleteArchitectPromptInternalServerError with default headers values
func NewDeleteArchitectPromptInternalServerError() *DeleteArchitectPromptInternalServerError {
	return &DeleteArchitectPromptInternalServerError{}
}

/*
DeleteArchitectPromptInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type DeleteArchitectPromptInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete architect prompt internal server error response has a 2xx status code
func (o *DeleteArchitectPromptInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete architect prompt internal server error response has a 3xx status code
func (o *DeleteArchitectPromptInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete architect prompt internal server error response has a 4xx status code
func (o *DeleteArchitectPromptInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete architect prompt internal server error response has a 5xx status code
func (o *DeleteArchitectPromptInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete architect prompt internal server error response a status code equal to that given
func (o *DeleteArchitectPromptInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteArchitectPromptInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/prompts/{promptId}][%d] deleteArchitectPromptInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteArchitectPromptInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/prompts/{promptId}][%d] deleteArchitectPromptInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteArchitectPromptInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteArchitectPromptInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArchitectPromptServiceUnavailable creates a DeleteArchitectPromptServiceUnavailable with default headers values
func NewDeleteArchitectPromptServiceUnavailable() *DeleteArchitectPromptServiceUnavailable {
	return &DeleteArchitectPromptServiceUnavailable{}
}

/*
DeleteArchitectPromptServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type DeleteArchitectPromptServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete architect prompt service unavailable response has a 2xx status code
func (o *DeleteArchitectPromptServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete architect prompt service unavailable response has a 3xx status code
func (o *DeleteArchitectPromptServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete architect prompt service unavailable response has a 4xx status code
func (o *DeleteArchitectPromptServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete architect prompt service unavailable response has a 5xx status code
func (o *DeleteArchitectPromptServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this delete architect prompt service unavailable response a status code equal to that given
func (o *DeleteArchitectPromptServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *DeleteArchitectPromptServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/prompts/{promptId}][%d] deleteArchitectPromptServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteArchitectPromptServiceUnavailable) String() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/prompts/{promptId}][%d] deleteArchitectPromptServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteArchitectPromptServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteArchitectPromptServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArchitectPromptGatewayTimeout creates a DeleteArchitectPromptGatewayTimeout with default headers values
func NewDeleteArchitectPromptGatewayTimeout() *DeleteArchitectPromptGatewayTimeout {
	return &DeleteArchitectPromptGatewayTimeout{}
}

/*
DeleteArchitectPromptGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type DeleteArchitectPromptGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete architect prompt gateway timeout response has a 2xx status code
func (o *DeleteArchitectPromptGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete architect prompt gateway timeout response has a 3xx status code
func (o *DeleteArchitectPromptGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete architect prompt gateway timeout response has a 4xx status code
func (o *DeleteArchitectPromptGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete architect prompt gateway timeout response has a 5xx status code
func (o *DeleteArchitectPromptGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this delete architect prompt gateway timeout response a status code equal to that given
func (o *DeleteArchitectPromptGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *DeleteArchitectPromptGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/prompts/{promptId}][%d] deleteArchitectPromptGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteArchitectPromptGatewayTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/prompts/{promptId}][%d] deleteArchitectPromptGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteArchitectPromptGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteArchitectPromptGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArchitectPromptDefault creates a DeleteArchitectPromptDefault with default headers values
func NewDeleteArchitectPromptDefault(code int) *DeleteArchitectPromptDefault {
	return &DeleteArchitectPromptDefault{
		_statusCode: code,
	}
}

/*
DeleteArchitectPromptDefault describes a response with status code -1, with default header values.

successful operation
*/
type DeleteArchitectPromptDefault struct {
	_statusCode int
}

// Code gets the status code for the delete architect prompt default response
func (o *DeleteArchitectPromptDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this delete architect prompt default response has a 2xx status code
func (o *DeleteArchitectPromptDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this delete architect prompt default response has a 3xx status code
func (o *DeleteArchitectPromptDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this delete architect prompt default response has a 4xx status code
func (o *DeleteArchitectPromptDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this delete architect prompt default response has a 5xx status code
func (o *DeleteArchitectPromptDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this delete architect prompt default response a status code equal to that given
func (o *DeleteArchitectPromptDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *DeleteArchitectPromptDefault) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/prompts/{promptId}][%d] deleteArchitectPrompt default ", o._statusCode)
}

func (o *DeleteArchitectPromptDefault) String() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/prompts/{promptId}][%d] deleteArchitectPrompt default ", o._statusCode)
}

func (o *DeleteArchitectPromptDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
