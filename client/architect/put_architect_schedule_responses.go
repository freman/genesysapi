// Code generated by go-swagger; DO NOT EDIT.

package architect

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutArchitectScheduleReader is a Reader for the PutArchitectSchedule structure.
type PutArchitectScheduleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutArchitectScheduleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutArchitectScheduleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutArchitectScheduleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutArchitectScheduleUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutArchitectScheduleForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutArchitectScheduleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutArchitectScheduleRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutArchitectScheduleRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutArchitectScheduleUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutArchitectScheduleTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutArchitectScheduleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutArchitectScheduleServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutArchitectScheduleGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutArchitectScheduleOK creates a PutArchitectScheduleOK with default headers values
func NewPutArchitectScheduleOK() *PutArchitectScheduleOK {
	return &PutArchitectScheduleOK{}
}

/*PutArchitectScheduleOK handles this case with default header values.

successful operation
*/
type PutArchitectScheduleOK struct {
	Payload *models.Schedule
}

func (o *PutArchitectScheduleOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/architect/schedules/{scheduleId}][%d] putArchitectScheduleOK  %+v", 200, o.Payload)
}

func (o *PutArchitectScheduleOK) GetPayload() *models.Schedule {
	return o.Payload
}

func (o *PutArchitectScheduleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Schedule)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutArchitectScheduleBadRequest creates a PutArchitectScheduleBadRequest with default headers values
func NewPutArchitectScheduleBadRequest() *PutArchitectScheduleBadRequest {
	return &PutArchitectScheduleBadRequest{}
}

/*PutArchitectScheduleBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutArchitectScheduleBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PutArchitectScheduleBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/architect/schedules/{scheduleId}][%d] putArchitectScheduleBadRequest  %+v", 400, o.Payload)
}

func (o *PutArchitectScheduleBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutArchitectScheduleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutArchitectScheduleUnauthorized creates a PutArchitectScheduleUnauthorized with default headers values
func NewPutArchitectScheduleUnauthorized() *PutArchitectScheduleUnauthorized {
	return &PutArchitectScheduleUnauthorized{}
}

/*PutArchitectScheduleUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PutArchitectScheduleUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PutArchitectScheduleUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/architect/schedules/{scheduleId}][%d] putArchitectScheduleUnauthorized  %+v", 401, o.Payload)
}

func (o *PutArchitectScheduleUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutArchitectScheduleUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutArchitectScheduleForbidden creates a PutArchitectScheduleForbidden with default headers values
func NewPutArchitectScheduleForbidden() *PutArchitectScheduleForbidden {
	return &PutArchitectScheduleForbidden{}
}

/*PutArchitectScheduleForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PutArchitectScheduleForbidden struct {
	Payload *models.ErrorBody
}

func (o *PutArchitectScheduleForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/architect/schedules/{scheduleId}][%d] putArchitectScheduleForbidden  %+v", 403, o.Payload)
}

func (o *PutArchitectScheduleForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutArchitectScheduleForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutArchitectScheduleNotFound creates a PutArchitectScheduleNotFound with default headers values
func NewPutArchitectScheduleNotFound() *PutArchitectScheduleNotFound {
	return &PutArchitectScheduleNotFound{}
}

/*PutArchitectScheduleNotFound handles this case with default header values.

The requested resource was not found.
*/
type PutArchitectScheduleNotFound struct {
	Payload *models.ErrorBody
}

func (o *PutArchitectScheduleNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/architect/schedules/{scheduleId}][%d] putArchitectScheduleNotFound  %+v", 404, o.Payload)
}

func (o *PutArchitectScheduleNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutArchitectScheduleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutArchitectScheduleRequestTimeout creates a PutArchitectScheduleRequestTimeout with default headers values
func NewPutArchitectScheduleRequestTimeout() *PutArchitectScheduleRequestTimeout {
	return &PutArchitectScheduleRequestTimeout{}
}

/*PutArchitectScheduleRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutArchitectScheduleRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PutArchitectScheduleRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/architect/schedules/{scheduleId}][%d] putArchitectScheduleRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutArchitectScheduleRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutArchitectScheduleRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutArchitectScheduleRequestEntityTooLarge creates a PutArchitectScheduleRequestEntityTooLarge with default headers values
func NewPutArchitectScheduleRequestEntityTooLarge() *PutArchitectScheduleRequestEntityTooLarge {
	return &PutArchitectScheduleRequestEntityTooLarge{}
}

/*PutArchitectScheduleRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PutArchitectScheduleRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PutArchitectScheduleRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/architect/schedules/{scheduleId}][%d] putArchitectScheduleRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutArchitectScheduleRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutArchitectScheduleRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutArchitectScheduleUnsupportedMediaType creates a PutArchitectScheduleUnsupportedMediaType with default headers values
func NewPutArchitectScheduleUnsupportedMediaType() *PutArchitectScheduleUnsupportedMediaType {
	return &PutArchitectScheduleUnsupportedMediaType{}
}

/*PutArchitectScheduleUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutArchitectScheduleUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PutArchitectScheduleUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/architect/schedules/{scheduleId}][%d] putArchitectScheduleUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutArchitectScheduleUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutArchitectScheduleUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutArchitectScheduleTooManyRequests creates a PutArchitectScheduleTooManyRequests with default headers values
func NewPutArchitectScheduleTooManyRequests() *PutArchitectScheduleTooManyRequests {
	return &PutArchitectScheduleTooManyRequests{}
}

/*PutArchitectScheduleTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutArchitectScheduleTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PutArchitectScheduleTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/architect/schedules/{scheduleId}][%d] putArchitectScheduleTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutArchitectScheduleTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutArchitectScheduleTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutArchitectScheduleInternalServerError creates a PutArchitectScheduleInternalServerError with default headers values
func NewPutArchitectScheduleInternalServerError() *PutArchitectScheduleInternalServerError {
	return &PutArchitectScheduleInternalServerError{}
}

/*PutArchitectScheduleInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutArchitectScheduleInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PutArchitectScheduleInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/architect/schedules/{scheduleId}][%d] putArchitectScheduleInternalServerError  %+v", 500, o.Payload)
}

func (o *PutArchitectScheduleInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutArchitectScheduleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutArchitectScheduleServiceUnavailable creates a PutArchitectScheduleServiceUnavailable with default headers values
func NewPutArchitectScheduleServiceUnavailable() *PutArchitectScheduleServiceUnavailable {
	return &PutArchitectScheduleServiceUnavailable{}
}

/*PutArchitectScheduleServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutArchitectScheduleServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PutArchitectScheduleServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/architect/schedules/{scheduleId}][%d] putArchitectScheduleServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutArchitectScheduleServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutArchitectScheduleServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutArchitectScheduleGatewayTimeout creates a PutArchitectScheduleGatewayTimeout with default headers values
func NewPutArchitectScheduleGatewayTimeout() *PutArchitectScheduleGatewayTimeout {
	return &PutArchitectScheduleGatewayTimeout{}
}

/*PutArchitectScheduleGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PutArchitectScheduleGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PutArchitectScheduleGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/architect/schedules/{scheduleId}][%d] putArchitectScheduleGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutArchitectScheduleGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutArchitectScheduleGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
