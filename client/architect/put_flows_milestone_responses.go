// Code generated by go-swagger; DO NOT EDIT.

package architect

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutFlowsMilestoneReader is a Reader for the PutFlowsMilestone structure.
type PutFlowsMilestoneReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutFlowsMilestoneReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutFlowsMilestoneOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutFlowsMilestoneBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutFlowsMilestoneUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutFlowsMilestoneForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutFlowsMilestoneNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewPutFlowsMilestoneMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutFlowsMilestoneRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPutFlowsMilestoneConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutFlowsMilestoneRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutFlowsMilestoneUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutFlowsMilestoneTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutFlowsMilestoneInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutFlowsMilestoneServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutFlowsMilestoneGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutFlowsMilestoneOK creates a PutFlowsMilestoneOK with default headers values
func NewPutFlowsMilestoneOK() *PutFlowsMilestoneOK {
	return &PutFlowsMilestoneOK{}
}

/*
PutFlowsMilestoneOK describes a response with status code 200, with default header values.

successful operation
*/
type PutFlowsMilestoneOK struct {
	Payload *models.FlowMilestone
}

// IsSuccess returns true when this put flows milestone o k response has a 2xx status code
func (o *PutFlowsMilestoneOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put flows milestone o k response has a 3xx status code
func (o *PutFlowsMilestoneOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put flows milestone o k response has a 4xx status code
func (o *PutFlowsMilestoneOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put flows milestone o k response has a 5xx status code
func (o *PutFlowsMilestoneOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put flows milestone o k response a status code equal to that given
func (o *PutFlowsMilestoneOK) IsCode(code int) bool {
	return code == 200
}

func (o *PutFlowsMilestoneOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/flows/milestones/{milestoneId}][%d] putFlowsMilestoneOK  %+v", 200, o.Payload)
}

func (o *PutFlowsMilestoneOK) String() string {
	return fmt.Sprintf("[PUT /api/v2/flows/milestones/{milestoneId}][%d] putFlowsMilestoneOK  %+v", 200, o.Payload)
}

func (o *PutFlowsMilestoneOK) GetPayload() *models.FlowMilestone {
	return o.Payload
}

func (o *PutFlowsMilestoneOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FlowMilestone)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutFlowsMilestoneBadRequest creates a PutFlowsMilestoneBadRequest with default headers values
func NewPutFlowsMilestoneBadRequest() *PutFlowsMilestoneBadRequest {
	return &PutFlowsMilestoneBadRequest{}
}

/*
PutFlowsMilestoneBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutFlowsMilestoneBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put flows milestone bad request response has a 2xx status code
func (o *PutFlowsMilestoneBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put flows milestone bad request response has a 3xx status code
func (o *PutFlowsMilestoneBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put flows milestone bad request response has a 4xx status code
func (o *PutFlowsMilestoneBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put flows milestone bad request response has a 5xx status code
func (o *PutFlowsMilestoneBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put flows milestone bad request response a status code equal to that given
func (o *PutFlowsMilestoneBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PutFlowsMilestoneBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/flows/milestones/{milestoneId}][%d] putFlowsMilestoneBadRequest  %+v", 400, o.Payload)
}

func (o *PutFlowsMilestoneBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/v2/flows/milestones/{milestoneId}][%d] putFlowsMilestoneBadRequest  %+v", 400, o.Payload)
}

func (o *PutFlowsMilestoneBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutFlowsMilestoneBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutFlowsMilestoneUnauthorized creates a PutFlowsMilestoneUnauthorized with default headers values
func NewPutFlowsMilestoneUnauthorized() *PutFlowsMilestoneUnauthorized {
	return &PutFlowsMilestoneUnauthorized{}
}

/*
PutFlowsMilestoneUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PutFlowsMilestoneUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put flows milestone unauthorized response has a 2xx status code
func (o *PutFlowsMilestoneUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put flows milestone unauthorized response has a 3xx status code
func (o *PutFlowsMilestoneUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put flows milestone unauthorized response has a 4xx status code
func (o *PutFlowsMilestoneUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put flows milestone unauthorized response has a 5xx status code
func (o *PutFlowsMilestoneUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put flows milestone unauthorized response a status code equal to that given
func (o *PutFlowsMilestoneUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PutFlowsMilestoneUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/flows/milestones/{milestoneId}][%d] putFlowsMilestoneUnauthorized  %+v", 401, o.Payload)
}

func (o *PutFlowsMilestoneUnauthorized) String() string {
	return fmt.Sprintf("[PUT /api/v2/flows/milestones/{milestoneId}][%d] putFlowsMilestoneUnauthorized  %+v", 401, o.Payload)
}

func (o *PutFlowsMilestoneUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutFlowsMilestoneUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutFlowsMilestoneForbidden creates a PutFlowsMilestoneForbidden with default headers values
func NewPutFlowsMilestoneForbidden() *PutFlowsMilestoneForbidden {
	return &PutFlowsMilestoneForbidden{}
}

/*
PutFlowsMilestoneForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PutFlowsMilestoneForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put flows milestone forbidden response has a 2xx status code
func (o *PutFlowsMilestoneForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put flows milestone forbidden response has a 3xx status code
func (o *PutFlowsMilestoneForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put flows milestone forbidden response has a 4xx status code
func (o *PutFlowsMilestoneForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put flows milestone forbidden response has a 5xx status code
func (o *PutFlowsMilestoneForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put flows milestone forbidden response a status code equal to that given
func (o *PutFlowsMilestoneForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PutFlowsMilestoneForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/flows/milestones/{milestoneId}][%d] putFlowsMilestoneForbidden  %+v", 403, o.Payload)
}

func (o *PutFlowsMilestoneForbidden) String() string {
	return fmt.Sprintf("[PUT /api/v2/flows/milestones/{milestoneId}][%d] putFlowsMilestoneForbidden  %+v", 403, o.Payload)
}

func (o *PutFlowsMilestoneForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutFlowsMilestoneForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutFlowsMilestoneNotFound creates a PutFlowsMilestoneNotFound with default headers values
func NewPutFlowsMilestoneNotFound() *PutFlowsMilestoneNotFound {
	return &PutFlowsMilestoneNotFound{}
}

/*
PutFlowsMilestoneNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PutFlowsMilestoneNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put flows milestone not found response has a 2xx status code
func (o *PutFlowsMilestoneNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put flows milestone not found response has a 3xx status code
func (o *PutFlowsMilestoneNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put flows milestone not found response has a 4xx status code
func (o *PutFlowsMilestoneNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put flows milestone not found response has a 5xx status code
func (o *PutFlowsMilestoneNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put flows milestone not found response a status code equal to that given
func (o *PutFlowsMilestoneNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PutFlowsMilestoneNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/flows/milestones/{milestoneId}][%d] putFlowsMilestoneNotFound  %+v", 404, o.Payload)
}

func (o *PutFlowsMilestoneNotFound) String() string {
	return fmt.Sprintf("[PUT /api/v2/flows/milestones/{milestoneId}][%d] putFlowsMilestoneNotFound  %+v", 404, o.Payload)
}

func (o *PutFlowsMilestoneNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutFlowsMilestoneNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutFlowsMilestoneMethodNotAllowed creates a PutFlowsMilestoneMethodNotAllowed with default headers values
func NewPutFlowsMilestoneMethodNotAllowed() *PutFlowsMilestoneMethodNotAllowed {
	return &PutFlowsMilestoneMethodNotAllowed{}
}

/*
PutFlowsMilestoneMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type PutFlowsMilestoneMethodNotAllowed struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put flows milestone method not allowed response has a 2xx status code
func (o *PutFlowsMilestoneMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put flows milestone method not allowed response has a 3xx status code
func (o *PutFlowsMilestoneMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put flows milestone method not allowed response has a 4xx status code
func (o *PutFlowsMilestoneMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this put flows milestone method not allowed response has a 5xx status code
func (o *PutFlowsMilestoneMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this put flows milestone method not allowed response a status code equal to that given
func (o *PutFlowsMilestoneMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

func (o *PutFlowsMilestoneMethodNotAllowed) Error() string {
	return fmt.Sprintf("[PUT /api/v2/flows/milestones/{milestoneId}][%d] putFlowsMilestoneMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *PutFlowsMilestoneMethodNotAllowed) String() string {
	return fmt.Sprintf("[PUT /api/v2/flows/milestones/{milestoneId}][%d] putFlowsMilestoneMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *PutFlowsMilestoneMethodNotAllowed) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutFlowsMilestoneMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutFlowsMilestoneRequestTimeout creates a PutFlowsMilestoneRequestTimeout with default headers values
func NewPutFlowsMilestoneRequestTimeout() *PutFlowsMilestoneRequestTimeout {
	return &PutFlowsMilestoneRequestTimeout{}
}

/*
PutFlowsMilestoneRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutFlowsMilestoneRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put flows milestone request timeout response has a 2xx status code
func (o *PutFlowsMilestoneRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put flows milestone request timeout response has a 3xx status code
func (o *PutFlowsMilestoneRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put flows milestone request timeout response has a 4xx status code
func (o *PutFlowsMilestoneRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this put flows milestone request timeout response has a 5xx status code
func (o *PutFlowsMilestoneRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this put flows milestone request timeout response a status code equal to that given
func (o *PutFlowsMilestoneRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PutFlowsMilestoneRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/flows/milestones/{milestoneId}][%d] putFlowsMilestoneRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutFlowsMilestoneRequestTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/flows/milestones/{milestoneId}][%d] putFlowsMilestoneRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutFlowsMilestoneRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutFlowsMilestoneRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutFlowsMilestoneConflict creates a PutFlowsMilestoneConflict with default headers values
func NewPutFlowsMilestoneConflict() *PutFlowsMilestoneConflict {
	return &PutFlowsMilestoneConflict{}
}

/*
PutFlowsMilestoneConflict describes a response with status code 409, with default header values.

Conflict
*/
type PutFlowsMilestoneConflict struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put flows milestone conflict response has a 2xx status code
func (o *PutFlowsMilestoneConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put flows milestone conflict response has a 3xx status code
func (o *PutFlowsMilestoneConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put flows milestone conflict response has a 4xx status code
func (o *PutFlowsMilestoneConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this put flows milestone conflict response has a 5xx status code
func (o *PutFlowsMilestoneConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this put flows milestone conflict response a status code equal to that given
func (o *PutFlowsMilestoneConflict) IsCode(code int) bool {
	return code == 409
}

func (o *PutFlowsMilestoneConflict) Error() string {
	return fmt.Sprintf("[PUT /api/v2/flows/milestones/{milestoneId}][%d] putFlowsMilestoneConflict  %+v", 409, o.Payload)
}

func (o *PutFlowsMilestoneConflict) String() string {
	return fmt.Sprintf("[PUT /api/v2/flows/milestones/{milestoneId}][%d] putFlowsMilestoneConflict  %+v", 409, o.Payload)
}

func (o *PutFlowsMilestoneConflict) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutFlowsMilestoneConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutFlowsMilestoneRequestEntityTooLarge creates a PutFlowsMilestoneRequestEntityTooLarge with default headers values
func NewPutFlowsMilestoneRequestEntityTooLarge() *PutFlowsMilestoneRequestEntityTooLarge {
	return &PutFlowsMilestoneRequestEntityTooLarge{}
}

/*
PutFlowsMilestoneRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PutFlowsMilestoneRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put flows milestone request entity too large response has a 2xx status code
func (o *PutFlowsMilestoneRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put flows milestone request entity too large response has a 3xx status code
func (o *PutFlowsMilestoneRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put flows milestone request entity too large response has a 4xx status code
func (o *PutFlowsMilestoneRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this put flows milestone request entity too large response has a 5xx status code
func (o *PutFlowsMilestoneRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this put flows milestone request entity too large response a status code equal to that given
func (o *PutFlowsMilestoneRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PutFlowsMilestoneRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/flows/milestones/{milestoneId}][%d] putFlowsMilestoneRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutFlowsMilestoneRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PUT /api/v2/flows/milestones/{milestoneId}][%d] putFlowsMilestoneRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutFlowsMilestoneRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutFlowsMilestoneRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutFlowsMilestoneUnsupportedMediaType creates a PutFlowsMilestoneUnsupportedMediaType with default headers values
func NewPutFlowsMilestoneUnsupportedMediaType() *PutFlowsMilestoneUnsupportedMediaType {
	return &PutFlowsMilestoneUnsupportedMediaType{}
}

/*
PutFlowsMilestoneUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutFlowsMilestoneUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put flows milestone unsupported media type response has a 2xx status code
func (o *PutFlowsMilestoneUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put flows milestone unsupported media type response has a 3xx status code
func (o *PutFlowsMilestoneUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put flows milestone unsupported media type response has a 4xx status code
func (o *PutFlowsMilestoneUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this put flows milestone unsupported media type response has a 5xx status code
func (o *PutFlowsMilestoneUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this put flows milestone unsupported media type response a status code equal to that given
func (o *PutFlowsMilestoneUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PutFlowsMilestoneUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/flows/milestones/{milestoneId}][%d] putFlowsMilestoneUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutFlowsMilestoneUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PUT /api/v2/flows/milestones/{milestoneId}][%d] putFlowsMilestoneUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutFlowsMilestoneUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutFlowsMilestoneUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutFlowsMilestoneTooManyRequests creates a PutFlowsMilestoneTooManyRequests with default headers values
func NewPutFlowsMilestoneTooManyRequests() *PutFlowsMilestoneTooManyRequests {
	return &PutFlowsMilestoneTooManyRequests{}
}

/*
PutFlowsMilestoneTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutFlowsMilestoneTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put flows milestone too many requests response has a 2xx status code
func (o *PutFlowsMilestoneTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put flows milestone too many requests response has a 3xx status code
func (o *PutFlowsMilestoneTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put flows milestone too many requests response has a 4xx status code
func (o *PutFlowsMilestoneTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this put flows milestone too many requests response has a 5xx status code
func (o *PutFlowsMilestoneTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this put flows milestone too many requests response a status code equal to that given
func (o *PutFlowsMilestoneTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PutFlowsMilestoneTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/flows/milestones/{milestoneId}][%d] putFlowsMilestoneTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutFlowsMilestoneTooManyRequests) String() string {
	return fmt.Sprintf("[PUT /api/v2/flows/milestones/{milestoneId}][%d] putFlowsMilestoneTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutFlowsMilestoneTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutFlowsMilestoneTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutFlowsMilestoneInternalServerError creates a PutFlowsMilestoneInternalServerError with default headers values
func NewPutFlowsMilestoneInternalServerError() *PutFlowsMilestoneInternalServerError {
	return &PutFlowsMilestoneInternalServerError{}
}

/*
PutFlowsMilestoneInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutFlowsMilestoneInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put flows milestone internal server error response has a 2xx status code
func (o *PutFlowsMilestoneInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put flows milestone internal server error response has a 3xx status code
func (o *PutFlowsMilestoneInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put flows milestone internal server error response has a 4xx status code
func (o *PutFlowsMilestoneInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this put flows milestone internal server error response has a 5xx status code
func (o *PutFlowsMilestoneInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this put flows milestone internal server error response a status code equal to that given
func (o *PutFlowsMilestoneInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PutFlowsMilestoneInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/flows/milestones/{milestoneId}][%d] putFlowsMilestoneInternalServerError  %+v", 500, o.Payload)
}

func (o *PutFlowsMilestoneInternalServerError) String() string {
	return fmt.Sprintf("[PUT /api/v2/flows/milestones/{milestoneId}][%d] putFlowsMilestoneInternalServerError  %+v", 500, o.Payload)
}

func (o *PutFlowsMilestoneInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutFlowsMilestoneInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutFlowsMilestoneServiceUnavailable creates a PutFlowsMilestoneServiceUnavailable with default headers values
func NewPutFlowsMilestoneServiceUnavailable() *PutFlowsMilestoneServiceUnavailable {
	return &PutFlowsMilestoneServiceUnavailable{}
}

/*
PutFlowsMilestoneServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutFlowsMilestoneServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put flows milestone service unavailable response has a 2xx status code
func (o *PutFlowsMilestoneServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put flows milestone service unavailable response has a 3xx status code
func (o *PutFlowsMilestoneServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put flows milestone service unavailable response has a 4xx status code
func (o *PutFlowsMilestoneServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this put flows milestone service unavailable response has a 5xx status code
func (o *PutFlowsMilestoneServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this put flows milestone service unavailable response a status code equal to that given
func (o *PutFlowsMilestoneServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PutFlowsMilestoneServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/flows/milestones/{milestoneId}][%d] putFlowsMilestoneServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutFlowsMilestoneServiceUnavailable) String() string {
	return fmt.Sprintf("[PUT /api/v2/flows/milestones/{milestoneId}][%d] putFlowsMilestoneServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutFlowsMilestoneServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutFlowsMilestoneServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutFlowsMilestoneGatewayTimeout creates a PutFlowsMilestoneGatewayTimeout with default headers values
func NewPutFlowsMilestoneGatewayTimeout() *PutFlowsMilestoneGatewayTimeout {
	return &PutFlowsMilestoneGatewayTimeout{}
}

/*
PutFlowsMilestoneGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PutFlowsMilestoneGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put flows milestone gateway timeout response has a 2xx status code
func (o *PutFlowsMilestoneGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put flows milestone gateway timeout response has a 3xx status code
func (o *PutFlowsMilestoneGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put flows milestone gateway timeout response has a 4xx status code
func (o *PutFlowsMilestoneGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this put flows milestone gateway timeout response has a 5xx status code
func (o *PutFlowsMilestoneGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this put flows milestone gateway timeout response a status code equal to that given
func (o *PutFlowsMilestoneGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PutFlowsMilestoneGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/flows/milestones/{milestoneId}][%d] putFlowsMilestoneGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutFlowsMilestoneGatewayTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/flows/milestones/{milestoneId}][%d] putFlowsMilestoneGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutFlowsMilestoneGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutFlowsMilestoneGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
