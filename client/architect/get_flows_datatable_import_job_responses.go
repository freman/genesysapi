// Code generated by go-swagger; DO NOT EDIT.

package architect

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetFlowsDatatableImportJobReader is a Reader for the GetFlowsDatatableImportJob structure.
type GetFlowsDatatableImportJobReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFlowsDatatableImportJobReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFlowsDatatableImportJobOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewGetFlowsDatatableImportJobAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetFlowsDatatableImportJobBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetFlowsDatatableImportJobUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetFlowsDatatableImportJobForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetFlowsDatatableImportJobNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetFlowsDatatableImportJobRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetFlowsDatatableImportJobRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetFlowsDatatableImportJobUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetFlowsDatatableImportJobTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetFlowsDatatableImportJobInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetFlowsDatatableImportJobServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetFlowsDatatableImportJobGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetFlowsDatatableImportJobOK creates a GetFlowsDatatableImportJobOK with default headers values
func NewGetFlowsDatatableImportJobOK() *GetFlowsDatatableImportJobOK {
	return &GetFlowsDatatableImportJobOK{}
}

/*
GetFlowsDatatableImportJobOK describes a response with status code 200, with default header values.

successful operation
*/
type GetFlowsDatatableImportJobOK struct {
	Payload *models.DataTableImportJob
}

// IsSuccess returns true when this get flows datatable import job o k response has a 2xx status code
func (o *GetFlowsDatatableImportJobOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get flows datatable import job o k response has a 3xx status code
func (o *GetFlowsDatatableImportJobOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flows datatable import job o k response has a 4xx status code
func (o *GetFlowsDatatableImportJobOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get flows datatable import job o k response has a 5xx status code
func (o *GetFlowsDatatableImportJobOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get flows datatable import job o k response a status code equal to that given
func (o *GetFlowsDatatableImportJobOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetFlowsDatatableImportJobOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs/{importJobId}][%d] getFlowsDatatableImportJobOK  %+v", 200, o.Payload)
}

func (o *GetFlowsDatatableImportJobOK) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs/{importJobId}][%d] getFlowsDatatableImportJobOK  %+v", 200, o.Payload)
}

func (o *GetFlowsDatatableImportJobOK) GetPayload() *models.DataTableImportJob {
	return o.Payload
}

func (o *GetFlowsDatatableImportJobOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DataTableImportJob)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableImportJobAccepted creates a GetFlowsDatatableImportJobAccepted with default headers values
func NewGetFlowsDatatableImportJobAccepted() *GetFlowsDatatableImportJobAccepted {
	return &GetFlowsDatatableImportJobAccepted{}
}

/*
GetFlowsDatatableImportJobAccepted describes a response with status code 202, with default header values.

Request Accepted
*/
type GetFlowsDatatableImportJobAccepted struct {
	Payload *models.DataTableImportJob
}

// IsSuccess returns true when this get flows datatable import job accepted response has a 2xx status code
func (o *GetFlowsDatatableImportJobAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get flows datatable import job accepted response has a 3xx status code
func (o *GetFlowsDatatableImportJobAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flows datatable import job accepted response has a 4xx status code
func (o *GetFlowsDatatableImportJobAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this get flows datatable import job accepted response has a 5xx status code
func (o *GetFlowsDatatableImportJobAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this get flows datatable import job accepted response a status code equal to that given
func (o *GetFlowsDatatableImportJobAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *GetFlowsDatatableImportJobAccepted) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs/{importJobId}][%d] getFlowsDatatableImportJobAccepted  %+v", 202, o.Payload)
}

func (o *GetFlowsDatatableImportJobAccepted) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs/{importJobId}][%d] getFlowsDatatableImportJobAccepted  %+v", 202, o.Payload)
}

func (o *GetFlowsDatatableImportJobAccepted) GetPayload() *models.DataTableImportJob {
	return o.Payload
}

func (o *GetFlowsDatatableImportJobAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DataTableImportJob)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableImportJobBadRequest creates a GetFlowsDatatableImportJobBadRequest with default headers values
func NewGetFlowsDatatableImportJobBadRequest() *GetFlowsDatatableImportJobBadRequest {
	return &GetFlowsDatatableImportJobBadRequest{}
}

/*
GetFlowsDatatableImportJobBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetFlowsDatatableImportJobBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flows datatable import job bad request response has a 2xx status code
func (o *GetFlowsDatatableImportJobBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flows datatable import job bad request response has a 3xx status code
func (o *GetFlowsDatatableImportJobBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flows datatable import job bad request response has a 4xx status code
func (o *GetFlowsDatatableImportJobBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flows datatable import job bad request response has a 5xx status code
func (o *GetFlowsDatatableImportJobBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get flows datatable import job bad request response a status code equal to that given
func (o *GetFlowsDatatableImportJobBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetFlowsDatatableImportJobBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs/{importJobId}][%d] getFlowsDatatableImportJobBadRequest  %+v", 400, o.Payload)
}

func (o *GetFlowsDatatableImportJobBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs/{importJobId}][%d] getFlowsDatatableImportJobBadRequest  %+v", 400, o.Payload)
}

func (o *GetFlowsDatatableImportJobBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableImportJobBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableImportJobUnauthorized creates a GetFlowsDatatableImportJobUnauthorized with default headers values
func NewGetFlowsDatatableImportJobUnauthorized() *GetFlowsDatatableImportJobUnauthorized {
	return &GetFlowsDatatableImportJobUnauthorized{}
}

/*
GetFlowsDatatableImportJobUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetFlowsDatatableImportJobUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flows datatable import job unauthorized response has a 2xx status code
func (o *GetFlowsDatatableImportJobUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flows datatable import job unauthorized response has a 3xx status code
func (o *GetFlowsDatatableImportJobUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flows datatable import job unauthorized response has a 4xx status code
func (o *GetFlowsDatatableImportJobUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flows datatable import job unauthorized response has a 5xx status code
func (o *GetFlowsDatatableImportJobUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get flows datatable import job unauthorized response a status code equal to that given
func (o *GetFlowsDatatableImportJobUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetFlowsDatatableImportJobUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs/{importJobId}][%d] getFlowsDatatableImportJobUnauthorized  %+v", 401, o.Payload)
}

func (o *GetFlowsDatatableImportJobUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs/{importJobId}][%d] getFlowsDatatableImportJobUnauthorized  %+v", 401, o.Payload)
}

func (o *GetFlowsDatatableImportJobUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableImportJobUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableImportJobForbidden creates a GetFlowsDatatableImportJobForbidden with default headers values
func NewGetFlowsDatatableImportJobForbidden() *GetFlowsDatatableImportJobForbidden {
	return &GetFlowsDatatableImportJobForbidden{}
}

/*
GetFlowsDatatableImportJobForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetFlowsDatatableImportJobForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flows datatable import job forbidden response has a 2xx status code
func (o *GetFlowsDatatableImportJobForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flows datatable import job forbidden response has a 3xx status code
func (o *GetFlowsDatatableImportJobForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flows datatable import job forbidden response has a 4xx status code
func (o *GetFlowsDatatableImportJobForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flows datatable import job forbidden response has a 5xx status code
func (o *GetFlowsDatatableImportJobForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get flows datatable import job forbidden response a status code equal to that given
func (o *GetFlowsDatatableImportJobForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetFlowsDatatableImportJobForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs/{importJobId}][%d] getFlowsDatatableImportJobForbidden  %+v", 403, o.Payload)
}

func (o *GetFlowsDatatableImportJobForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs/{importJobId}][%d] getFlowsDatatableImportJobForbidden  %+v", 403, o.Payload)
}

func (o *GetFlowsDatatableImportJobForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableImportJobForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableImportJobNotFound creates a GetFlowsDatatableImportJobNotFound with default headers values
func NewGetFlowsDatatableImportJobNotFound() *GetFlowsDatatableImportJobNotFound {
	return &GetFlowsDatatableImportJobNotFound{}
}

/*
GetFlowsDatatableImportJobNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetFlowsDatatableImportJobNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flows datatable import job not found response has a 2xx status code
func (o *GetFlowsDatatableImportJobNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flows datatable import job not found response has a 3xx status code
func (o *GetFlowsDatatableImportJobNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flows datatable import job not found response has a 4xx status code
func (o *GetFlowsDatatableImportJobNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flows datatable import job not found response has a 5xx status code
func (o *GetFlowsDatatableImportJobNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get flows datatable import job not found response a status code equal to that given
func (o *GetFlowsDatatableImportJobNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetFlowsDatatableImportJobNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs/{importJobId}][%d] getFlowsDatatableImportJobNotFound  %+v", 404, o.Payload)
}

func (o *GetFlowsDatatableImportJobNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs/{importJobId}][%d] getFlowsDatatableImportJobNotFound  %+v", 404, o.Payload)
}

func (o *GetFlowsDatatableImportJobNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableImportJobNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableImportJobRequestTimeout creates a GetFlowsDatatableImportJobRequestTimeout with default headers values
func NewGetFlowsDatatableImportJobRequestTimeout() *GetFlowsDatatableImportJobRequestTimeout {
	return &GetFlowsDatatableImportJobRequestTimeout{}
}

/*
GetFlowsDatatableImportJobRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetFlowsDatatableImportJobRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flows datatable import job request timeout response has a 2xx status code
func (o *GetFlowsDatatableImportJobRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flows datatable import job request timeout response has a 3xx status code
func (o *GetFlowsDatatableImportJobRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flows datatable import job request timeout response has a 4xx status code
func (o *GetFlowsDatatableImportJobRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flows datatable import job request timeout response has a 5xx status code
func (o *GetFlowsDatatableImportJobRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get flows datatable import job request timeout response a status code equal to that given
func (o *GetFlowsDatatableImportJobRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetFlowsDatatableImportJobRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs/{importJobId}][%d] getFlowsDatatableImportJobRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetFlowsDatatableImportJobRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs/{importJobId}][%d] getFlowsDatatableImportJobRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetFlowsDatatableImportJobRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableImportJobRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableImportJobRequestEntityTooLarge creates a GetFlowsDatatableImportJobRequestEntityTooLarge with default headers values
func NewGetFlowsDatatableImportJobRequestEntityTooLarge() *GetFlowsDatatableImportJobRequestEntityTooLarge {
	return &GetFlowsDatatableImportJobRequestEntityTooLarge{}
}

/*
GetFlowsDatatableImportJobRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetFlowsDatatableImportJobRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flows datatable import job request entity too large response has a 2xx status code
func (o *GetFlowsDatatableImportJobRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flows datatable import job request entity too large response has a 3xx status code
func (o *GetFlowsDatatableImportJobRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flows datatable import job request entity too large response has a 4xx status code
func (o *GetFlowsDatatableImportJobRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flows datatable import job request entity too large response has a 5xx status code
func (o *GetFlowsDatatableImportJobRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get flows datatable import job request entity too large response a status code equal to that given
func (o *GetFlowsDatatableImportJobRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetFlowsDatatableImportJobRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs/{importJobId}][%d] getFlowsDatatableImportJobRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetFlowsDatatableImportJobRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs/{importJobId}][%d] getFlowsDatatableImportJobRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetFlowsDatatableImportJobRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableImportJobRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableImportJobUnsupportedMediaType creates a GetFlowsDatatableImportJobUnsupportedMediaType with default headers values
func NewGetFlowsDatatableImportJobUnsupportedMediaType() *GetFlowsDatatableImportJobUnsupportedMediaType {
	return &GetFlowsDatatableImportJobUnsupportedMediaType{}
}

/*
GetFlowsDatatableImportJobUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetFlowsDatatableImportJobUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flows datatable import job unsupported media type response has a 2xx status code
func (o *GetFlowsDatatableImportJobUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flows datatable import job unsupported media type response has a 3xx status code
func (o *GetFlowsDatatableImportJobUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flows datatable import job unsupported media type response has a 4xx status code
func (o *GetFlowsDatatableImportJobUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flows datatable import job unsupported media type response has a 5xx status code
func (o *GetFlowsDatatableImportJobUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get flows datatable import job unsupported media type response a status code equal to that given
func (o *GetFlowsDatatableImportJobUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetFlowsDatatableImportJobUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs/{importJobId}][%d] getFlowsDatatableImportJobUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetFlowsDatatableImportJobUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs/{importJobId}][%d] getFlowsDatatableImportJobUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetFlowsDatatableImportJobUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableImportJobUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableImportJobTooManyRequests creates a GetFlowsDatatableImportJobTooManyRequests with default headers values
func NewGetFlowsDatatableImportJobTooManyRequests() *GetFlowsDatatableImportJobTooManyRequests {
	return &GetFlowsDatatableImportJobTooManyRequests{}
}

/*
GetFlowsDatatableImportJobTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetFlowsDatatableImportJobTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flows datatable import job too many requests response has a 2xx status code
func (o *GetFlowsDatatableImportJobTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flows datatable import job too many requests response has a 3xx status code
func (o *GetFlowsDatatableImportJobTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flows datatable import job too many requests response has a 4xx status code
func (o *GetFlowsDatatableImportJobTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flows datatable import job too many requests response has a 5xx status code
func (o *GetFlowsDatatableImportJobTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get flows datatable import job too many requests response a status code equal to that given
func (o *GetFlowsDatatableImportJobTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetFlowsDatatableImportJobTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs/{importJobId}][%d] getFlowsDatatableImportJobTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetFlowsDatatableImportJobTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs/{importJobId}][%d] getFlowsDatatableImportJobTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetFlowsDatatableImportJobTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableImportJobTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableImportJobInternalServerError creates a GetFlowsDatatableImportJobInternalServerError with default headers values
func NewGetFlowsDatatableImportJobInternalServerError() *GetFlowsDatatableImportJobInternalServerError {
	return &GetFlowsDatatableImportJobInternalServerError{}
}

/*
GetFlowsDatatableImportJobInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetFlowsDatatableImportJobInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flows datatable import job internal server error response has a 2xx status code
func (o *GetFlowsDatatableImportJobInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flows datatable import job internal server error response has a 3xx status code
func (o *GetFlowsDatatableImportJobInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flows datatable import job internal server error response has a 4xx status code
func (o *GetFlowsDatatableImportJobInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get flows datatable import job internal server error response has a 5xx status code
func (o *GetFlowsDatatableImportJobInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get flows datatable import job internal server error response a status code equal to that given
func (o *GetFlowsDatatableImportJobInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetFlowsDatatableImportJobInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs/{importJobId}][%d] getFlowsDatatableImportJobInternalServerError  %+v", 500, o.Payload)
}

func (o *GetFlowsDatatableImportJobInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs/{importJobId}][%d] getFlowsDatatableImportJobInternalServerError  %+v", 500, o.Payload)
}

func (o *GetFlowsDatatableImportJobInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableImportJobInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableImportJobServiceUnavailable creates a GetFlowsDatatableImportJobServiceUnavailable with default headers values
func NewGetFlowsDatatableImportJobServiceUnavailable() *GetFlowsDatatableImportJobServiceUnavailable {
	return &GetFlowsDatatableImportJobServiceUnavailable{}
}

/*
GetFlowsDatatableImportJobServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetFlowsDatatableImportJobServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flows datatable import job service unavailable response has a 2xx status code
func (o *GetFlowsDatatableImportJobServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flows datatable import job service unavailable response has a 3xx status code
func (o *GetFlowsDatatableImportJobServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flows datatable import job service unavailable response has a 4xx status code
func (o *GetFlowsDatatableImportJobServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get flows datatable import job service unavailable response has a 5xx status code
func (o *GetFlowsDatatableImportJobServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get flows datatable import job service unavailable response a status code equal to that given
func (o *GetFlowsDatatableImportJobServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetFlowsDatatableImportJobServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs/{importJobId}][%d] getFlowsDatatableImportJobServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetFlowsDatatableImportJobServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs/{importJobId}][%d] getFlowsDatatableImportJobServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetFlowsDatatableImportJobServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableImportJobServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableImportJobGatewayTimeout creates a GetFlowsDatatableImportJobGatewayTimeout with default headers values
func NewGetFlowsDatatableImportJobGatewayTimeout() *GetFlowsDatatableImportJobGatewayTimeout {
	return &GetFlowsDatatableImportJobGatewayTimeout{}
}

/*
GetFlowsDatatableImportJobGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetFlowsDatatableImportJobGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get flows datatable import job gateway timeout response has a 2xx status code
func (o *GetFlowsDatatableImportJobGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flows datatable import job gateway timeout response has a 3xx status code
func (o *GetFlowsDatatableImportJobGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flows datatable import job gateway timeout response has a 4xx status code
func (o *GetFlowsDatatableImportJobGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get flows datatable import job gateway timeout response has a 5xx status code
func (o *GetFlowsDatatableImportJobGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get flows datatable import job gateway timeout response a status code equal to that given
func (o *GetFlowsDatatableImportJobGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetFlowsDatatableImportJobGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs/{importJobId}][%d] getFlowsDatatableImportJobGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetFlowsDatatableImportJobGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs/{importJobId}][%d] getFlowsDatatableImportJobGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetFlowsDatatableImportJobGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableImportJobGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
