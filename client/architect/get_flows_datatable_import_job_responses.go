// Code generated by go-swagger; DO NOT EDIT.

package architect

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetFlowsDatatableImportJobReader is a Reader for the GetFlowsDatatableImportJob structure.
type GetFlowsDatatableImportJobReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFlowsDatatableImportJobReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFlowsDatatableImportJobOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewGetFlowsDatatableImportJobAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetFlowsDatatableImportJobBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetFlowsDatatableImportJobUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetFlowsDatatableImportJobForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetFlowsDatatableImportJobNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetFlowsDatatableImportJobRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetFlowsDatatableImportJobUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetFlowsDatatableImportJobTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetFlowsDatatableImportJobInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetFlowsDatatableImportJobServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetFlowsDatatableImportJobGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetFlowsDatatableImportJobOK creates a GetFlowsDatatableImportJobOK with default headers values
func NewGetFlowsDatatableImportJobOK() *GetFlowsDatatableImportJobOK {
	return &GetFlowsDatatableImportJobOK{}
}

/*GetFlowsDatatableImportJobOK handles this case with default header values.

successful operation
*/
type GetFlowsDatatableImportJobOK struct {
	Payload *models.DataTableImportJob
}

func (o *GetFlowsDatatableImportJobOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs/{importJobId}][%d] getFlowsDatatableImportJobOK  %+v", 200, o.Payload)
}

func (o *GetFlowsDatatableImportJobOK) GetPayload() *models.DataTableImportJob {
	return o.Payload
}

func (o *GetFlowsDatatableImportJobOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DataTableImportJob)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableImportJobAccepted creates a GetFlowsDatatableImportJobAccepted with default headers values
func NewGetFlowsDatatableImportJobAccepted() *GetFlowsDatatableImportJobAccepted {
	return &GetFlowsDatatableImportJobAccepted{}
}

/*GetFlowsDatatableImportJobAccepted handles this case with default header values.

Request Accepted
*/
type GetFlowsDatatableImportJobAccepted struct {
	Payload *models.DataTableImportJob
}

func (o *GetFlowsDatatableImportJobAccepted) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs/{importJobId}][%d] getFlowsDatatableImportJobAccepted  %+v", 202, o.Payload)
}

func (o *GetFlowsDatatableImportJobAccepted) GetPayload() *models.DataTableImportJob {
	return o.Payload
}

func (o *GetFlowsDatatableImportJobAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DataTableImportJob)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableImportJobBadRequest creates a GetFlowsDatatableImportJobBadRequest with default headers values
func NewGetFlowsDatatableImportJobBadRequest() *GetFlowsDatatableImportJobBadRequest {
	return &GetFlowsDatatableImportJobBadRequest{}
}

/*GetFlowsDatatableImportJobBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetFlowsDatatableImportJobBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetFlowsDatatableImportJobBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs/{importJobId}][%d] getFlowsDatatableImportJobBadRequest  %+v", 400, o.Payload)
}

func (o *GetFlowsDatatableImportJobBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableImportJobBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableImportJobUnauthorized creates a GetFlowsDatatableImportJobUnauthorized with default headers values
func NewGetFlowsDatatableImportJobUnauthorized() *GetFlowsDatatableImportJobUnauthorized {
	return &GetFlowsDatatableImportJobUnauthorized{}
}

/*GetFlowsDatatableImportJobUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetFlowsDatatableImportJobUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetFlowsDatatableImportJobUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs/{importJobId}][%d] getFlowsDatatableImportJobUnauthorized  %+v", 401, o.Payload)
}

func (o *GetFlowsDatatableImportJobUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableImportJobUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableImportJobForbidden creates a GetFlowsDatatableImportJobForbidden with default headers values
func NewGetFlowsDatatableImportJobForbidden() *GetFlowsDatatableImportJobForbidden {
	return &GetFlowsDatatableImportJobForbidden{}
}

/*GetFlowsDatatableImportJobForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetFlowsDatatableImportJobForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetFlowsDatatableImportJobForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs/{importJobId}][%d] getFlowsDatatableImportJobForbidden  %+v", 403, o.Payload)
}

func (o *GetFlowsDatatableImportJobForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableImportJobForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableImportJobNotFound creates a GetFlowsDatatableImportJobNotFound with default headers values
func NewGetFlowsDatatableImportJobNotFound() *GetFlowsDatatableImportJobNotFound {
	return &GetFlowsDatatableImportJobNotFound{}
}

/*GetFlowsDatatableImportJobNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetFlowsDatatableImportJobNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetFlowsDatatableImportJobNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs/{importJobId}][%d] getFlowsDatatableImportJobNotFound  %+v", 404, o.Payload)
}

func (o *GetFlowsDatatableImportJobNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableImportJobNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableImportJobRequestEntityTooLarge creates a GetFlowsDatatableImportJobRequestEntityTooLarge with default headers values
func NewGetFlowsDatatableImportJobRequestEntityTooLarge() *GetFlowsDatatableImportJobRequestEntityTooLarge {
	return &GetFlowsDatatableImportJobRequestEntityTooLarge{}
}

/*GetFlowsDatatableImportJobRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetFlowsDatatableImportJobRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetFlowsDatatableImportJobRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs/{importJobId}][%d] getFlowsDatatableImportJobRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetFlowsDatatableImportJobRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableImportJobRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableImportJobUnsupportedMediaType creates a GetFlowsDatatableImportJobUnsupportedMediaType with default headers values
func NewGetFlowsDatatableImportJobUnsupportedMediaType() *GetFlowsDatatableImportJobUnsupportedMediaType {
	return &GetFlowsDatatableImportJobUnsupportedMediaType{}
}

/*GetFlowsDatatableImportJobUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetFlowsDatatableImportJobUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetFlowsDatatableImportJobUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs/{importJobId}][%d] getFlowsDatatableImportJobUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetFlowsDatatableImportJobUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableImportJobUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableImportJobTooManyRequests creates a GetFlowsDatatableImportJobTooManyRequests with default headers values
func NewGetFlowsDatatableImportJobTooManyRequests() *GetFlowsDatatableImportJobTooManyRequests {
	return &GetFlowsDatatableImportJobTooManyRequests{}
}

/*GetFlowsDatatableImportJobTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type GetFlowsDatatableImportJobTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetFlowsDatatableImportJobTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs/{importJobId}][%d] getFlowsDatatableImportJobTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetFlowsDatatableImportJobTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableImportJobTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableImportJobInternalServerError creates a GetFlowsDatatableImportJobInternalServerError with default headers values
func NewGetFlowsDatatableImportJobInternalServerError() *GetFlowsDatatableImportJobInternalServerError {
	return &GetFlowsDatatableImportJobInternalServerError{}
}

/*GetFlowsDatatableImportJobInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetFlowsDatatableImportJobInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetFlowsDatatableImportJobInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs/{importJobId}][%d] getFlowsDatatableImportJobInternalServerError  %+v", 500, o.Payload)
}

func (o *GetFlowsDatatableImportJobInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableImportJobInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableImportJobServiceUnavailable creates a GetFlowsDatatableImportJobServiceUnavailable with default headers values
func NewGetFlowsDatatableImportJobServiceUnavailable() *GetFlowsDatatableImportJobServiceUnavailable {
	return &GetFlowsDatatableImportJobServiceUnavailable{}
}

/*GetFlowsDatatableImportJobServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetFlowsDatatableImportJobServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetFlowsDatatableImportJobServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs/{importJobId}][%d] getFlowsDatatableImportJobServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetFlowsDatatableImportJobServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableImportJobServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableImportJobGatewayTimeout creates a GetFlowsDatatableImportJobGatewayTimeout with default headers values
func NewGetFlowsDatatableImportJobGatewayTimeout() *GetFlowsDatatableImportJobGatewayTimeout {
	return &GetFlowsDatatableImportJobGatewayTimeout{}
}

/*GetFlowsDatatableImportJobGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetFlowsDatatableImportJobGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetFlowsDatatableImportJobGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/import/jobs/{importJobId}][%d] getFlowsDatatableImportJobGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetFlowsDatatableImportJobGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableImportJobGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
