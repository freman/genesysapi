// Code generated by go-swagger; DO NOT EDIT.

package architect

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPostFlowsActionsPublishParams creates a new PostFlowsActionsPublishParams object
// with the default values initialized.
func NewPostFlowsActionsPublishParams() *PostFlowsActionsPublishParams {
	var ()
	return &PostFlowsActionsPublishParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostFlowsActionsPublishParamsWithTimeout creates a new PostFlowsActionsPublishParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostFlowsActionsPublishParamsWithTimeout(timeout time.Duration) *PostFlowsActionsPublishParams {
	var ()
	return &PostFlowsActionsPublishParams{

		timeout: timeout,
	}
}

// NewPostFlowsActionsPublishParamsWithContext creates a new PostFlowsActionsPublishParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostFlowsActionsPublishParamsWithContext(ctx context.Context) *PostFlowsActionsPublishParams {
	var ()
	return &PostFlowsActionsPublishParams{

		Context: ctx,
	}
}

// NewPostFlowsActionsPublishParamsWithHTTPClient creates a new PostFlowsActionsPublishParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostFlowsActionsPublishParamsWithHTTPClient(client *http.Client) *PostFlowsActionsPublishParams {
	var ()
	return &PostFlowsActionsPublishParams{
		HTTPClient: client,
	}
}

/*PostFlowsActionsPublishParams contains all the parameters to send to the API endpoint
for the post flows actions publish operation typically these are written to a http.Request
*/
type PostFlowsActionsPublishParams struct {

	/*Flow
	  Flow ID

	*/
	Flow string
	/*Version
	  version

	*/
	Version *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post flows actions publish params
func (o *PostFlowsActionsPublishParams) WithTimeout(timeout time.Duration) *PostFlowsActionsPublishParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post flows actions publish params
func (o *PostFlowsActionsPublishParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post flows actions publish params
func (o *PostFlowsActionsPublishParams) WithContext(ctx context.Context) *PostFlowsActionsPublishParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post flows actions publish params
func (o *PostFlowsActionsPublishParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post flows actions publish params
func (o *PostFlowsActionsPublishParams) WithHTTPClient(client *http.Client) *PostFlowsActionsPublishParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post flows actions publish params
func (o *PostFlowsActionsPublishParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFlow adds the flow to the post flows actions publish params
func (o *PostFlowsActionsPublishParams) WithFlow(flow string) *PostFlowsActionsPublishParams {
	o.SetFlow(flow)
	return o
}

// SetFlow adds the flow to the post flows actions publish params
func (o *PostFlowsActionsPublishParams) SetFlow(flow string) {
	o.Flow = flow
}

// WithVersion adds the version to the post flows actions publish params
func (o *PostFlowsActionsPublishParams) WithVersion(version *string) *PostFlowsActionsPublishParams {
	o.SetVersion(version)
	return o
}

// SetVersion adds the version to the post flows actions publish params
func (o *PostFlowsActionsPublishParams) SetVersion(version *string) {
	o.Version = version
}

// WriteToRequest writes these params to a swagger request
func (o *PostFlowsActionsPublishParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param flow
	qrFlow := o.Flow
	qFlow := qrFlow
	if qFlow != "" {
		if err := r.SetQueryParam("flow", qFlow); err != nil {
			return err
		}
	}

	if o.Version != nil {

		// query param version
		var qrVersion string
		if o.Version != nil {
			qrVersion = *o.Version
		}
		qVersion := qrVersion
		if qVersion != "" {
			if err := r.SetQueryParam("version", qVersion); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
