// Code generated by go-swagger; DO NOT EDIT.

package architect

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// DeleteArchitectSchedulegroupReader is a Reader for the DeleteArchitectSchedulegroup structure.
type DeleteArchitectSchedulegroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteArchitectSchedulegroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteArchitectSchedulegroupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteArchitectSchedulegroupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteArchitectSchedulegroupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteArchitectSchedulegroupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteArchitectSchedulegroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewDeleteArchitectSchedulegroupRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeleteArchitectSchedulegroupConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewDeleteArchitectSchedulegroupRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDeleteArchitectSchedulegroupUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteArchitectSchedulegroupTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteArchitectSchedulegroupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteArchitectSchedulegroupServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteArchitectSchedulegroupGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteArchitectSchedulegroupOK creates a DeleteArchitectSchedulegroupOK with default headers values
func NewDeleteArchitectSchedulegroupOK() *DeleteArchitectSchedulegroupOK {
	return &DeleteArchitectSchedulegroupOK{}
}

/*
DeleteArchitectSchedulegroupOK describes a response with status code 200, with default header values.

Operation was successful.
*/
type DeleteArchitectSchedulegroupOK struct {
}

// IsSuccess returns true when this delete architect schedulegroup o k response has a 2xx status code
func (o *DeleteArchitectSchedulegroupOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete architect schedulegroup o k response has a 3xx status code
func (o *DeleteArchitectSchedulegroupOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete architect schedulegroup o k response has a 4xx status code
func (o *DeleteArchitectSchedulegroupOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete architect schedulegroup o k response has a 5xx status code
func (o *DeleteArchitectSchedulegroupOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete architect schedulegroup o k response a status code equal to that given
func (o *DeleteArchitectSchedulegroupOK) IsCode(code int) bool {
	return code == 200
}

func (o *DeleteArchitectSchedulegroupOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/schedulegroups/{scheduleGroupId}][%d] deleteArchitectSchedulegroupOK ", 200)
}

func (o *DeleteArchitectSchedulegroupOK) String() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/schedulegroups/{scheduleGroupId}][%d] deleteArchitectSchedulegroupOK ", 200)
}

func (o *DeleteArchitectSchedulegroupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteArchitectSchedulegroupBadRequest creates a DeleteArchitectSchedulegroupBadRequest with default headers values
func NewDeleteArchitectSchedulegroupBadRequest() *DeleteArchitectSchedulegroupBadRequest {
	return &DeleteArchitectSchedulegroupBadRequest{}
}

/*
DeleteArchitectSchedulegroupBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type DeleteArchitectSchedulegroupBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete architect schedulegroup bad request response has a 2xx status code
func (o *DeleteArchitectSchedulegroupBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete architect schedulegroup bad request response has a 3xx status code
func (o *DeleteArchitectSchedulegroupBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete architect schedulegroup bad request response has a 4xx status code
func (o *DeleteArchitectSchedulegroupBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete architect schedulegroup bad request response has a 5xx status code
func (o *DeleteArchitectSchedulegroupBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete architect schedulegroup bad request response a status code equal to that given
func (o *DeleteArchitectSchedulegroupBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteArchitectSchedulegroupBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/schedulegroups/{scheduleGroupId}][%d] deleteArchitectSchedulegroupBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteArchitectSchedulegroupBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/schedulegroups/{scheduleGroupId}][%d] deleteArchitectSchedulegroupBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteArchitectSchedulegroupBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteArchitectSchedulegroupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArchitectSchedulegroupUnauthorized creates a DeleteArchitectSchedulegroupUnauthorized with default headers values
func NewDeleteArchitectSchedulegroupUnauthorized() *DeleteArchitectSchedulegroupUnauthorized {
	return &DeleteArchitectSchedulegroupUnauthorized{}
}

/*
DeleteArchitectSchedulegroupUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type DeleteArchitectSchedulegroupUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete architect schedulegroup unauthorized response has a 2xx status code
func (o *DeleteArchitectSchedulegroupUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete architect schedulegroup unauthorized response has a 3xx status code
func (o *DeleteArchitectSchedulegroupUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete architect schedulegroup unauthorized response has a 4xx status code
func (o *DeleteArchitectSchedulegroupUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete architect schedulegroup unauthorized response has a 5xx status code
func (o *DeleteArchitectSchedulegroupUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete architect schedulegroup unauthorized response a status code equal to that given
func (o *DeleteArchitectSchedulegroupUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteArchitectSchedulegroupUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/schedulegroups/{scheduleGroupId}][%d] deleteArchitectSchedulegroupUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteArchitectSchedulegroupUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/schedulegroups/{scheduleGroupId}][%d] deleteArchitectSchedulegroupUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteArchitectSchedulegroupUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteArchitectSchedulegroupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArchitectSchedulegroupForbidden creates a DeleteArchitectSchedulegroupForbidden with default headers values
func NewDeleteArchitectSchedulegroupForbidden() *DeleteArchitectSchedulegroupForbidden {
	return &DeleteArchitectSchedulegroupForbidden{}
}

/*
DeleteArchitectSchedulegroupForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type DeleteArchitectSchedulegroupForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete architect schedulegroup forbidden response has a 2xx status code
func (o *DeleteArchitectSchedulegroupForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete architect schedulegroup forbidden response has a 3xx status code
func (o *DeleteArchitectSchedulegroupForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete architect schedulegroup forbidden response has a 4xx status code
func (o *DeleteArchitectSchedulegroupForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete architect schedulegroup forbidden response has a 5xx status code
func (o *DeleteArchitectSchedulegroupForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete architect schedulegroup forbidden response a status code equal to that given
func (o *DeleteArchitectSchedulegroupForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteArchitectSchedulegroupForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/schedulegroups/{scheduleGroupId}][%d] deleteArchitectSchedulegroupForbidden  %+v", 403, o.Payload)
}

func (o *DeleteArchitectSchedulegroupForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/schedulegroups/{scheduleGroupId}][%d] deleteArchitectSchedulegroupForbidden  %+v", 403, o.Payload)
}

func (o *DeleteArchitectSchedulegroupForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteArchitectSchedulegroupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArchitectSchedulegroupNotFound creates a DeleteArchitectSchedulegroupNotFound with default headers values
func NewDeleteArchitectSchedulegroupNotFound() *DeleteArchitectSchedulegroupNotFound {
	return &DeleteArchitectSchedulegroupNotFound{}
}

/*
DeleteArchitectSchedulegroupNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type DeleteArchitectSchedulegroupNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete architect schedulegroup not found response has a 2xx status code
func (o *DeleteArchitectSchedulegroupNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete architect schedulegroup not found response has a 3xx status code
func (o *DeleteArchitectSchedulegroupNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete architect schedulegroup not found response has a 4xx status code
func (o *DeleteArchitectSchedulegroupNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete architect schedulegroup not found response has a 5xx status code
func (o *DeleteArchitectSchedulegroupNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete architect schedulegroup not found response a status code equal to that given
func (o *DeleteArchitectSchedulegroupNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteArchitectSchedulegroupNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/schedulegroups/{scheduleGroupId}][%d] deleteArchitectSchedulegroupNotFound  %+v", 404, o.Payload)
}

func (o *DeleteArchitectSchedulegroupNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/schedulegroups/{scheduleGroupId}][%d] deleteArchitectSchedulegroupNotFound  %+v", 404, o.Payload)
}

func (o *DeleteArchitectSchedulegroupNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteArchitectSchedulegroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArchitectSchedulegroupRequestTimeout creates a DeleteArchitectSchedulegroupRequestTimeout with default headers values
func NewDeleteArchitectSchedulegroupRequestTimeout() *DeleteArchitectSchedulegroupRequestTimeout {
	return &DeleteArchitectSchedulegroupRequestTimeout{}
}

/*
DeleteArchitectSchedulegroupRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type DeleteArchitectSchedulegroupRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete architect schedulegroup request timeout response has a 2xx status code
func (o *DeleteArchitectSchedulegroupRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete architect schedulegroup request timeout response has a 3xx status code
func (o *DeleteArchitectSchedulegroupRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete architect schedulegroup request timeout response has a 4xx status code
func (o *DeleteArchitectSchedulegroupRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete architect schedulegroup request timeout response has a 5xx status code
func (o *DeleteArchitectSchedulegroupRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this delete architect schedulegroup request timeout response a status code equal to that given
func (o *DeleteArchitectSchedulegroupRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *DeleteArchitectSchedulegroupRequestTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/schedulegroups/{scheduleGroupId}][%d] deleteArchitectSchedulegroupRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteArchitectSchedulegroupRequestTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/schedulegroups/{scheduleGroupId}][%d] deleteArchitectSchedulegroupRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteArchitectSchedulegroupRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteArchitectSchedulegroupRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArchitectSchedulegroupConflict creates a DeleteArchitectSchedulegroupConflict with default headers values
func NewDeleteArchitectSchedulegroupConflict() *DeleteArchitectSchedulegroupConflict {
	return &DeleteArchitectSchedulegroupConflict{}
}

/*
DeleteArchitectSchedulegroupConflict describes a response with status code 409, with default header values.

Conflict
*/
type DeleteArchitectSchedulegroupConflict struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete architect schedulegroup conflict response has a 2xx status code
func (o *DeleteArchitectSchedulegroupConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete architect schedulegroup conflict response has a 3xx status code
func (o *DeleteArchitectSchedulegroupConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete architect schedulegroup conflict response has a 4xx status code
func (o *DeleteArchitectSchedulegroupConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete architect schedulegroup conflict response has a 5xx status code
func (o *DeleteArchitectSchedulegroupConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this delete architect schedulegroup conflict response a status code equal to that given
func (o *DeleteArchitectSchedulegroupConflict) IsCode(code int) bool {
	return code == 409
}

func (o *DeleteArchitectSchedulegroupConflict) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/schedulegroups/{scheduleGroupId}][%d] deleteArchitectSchedulegroupConflict  %+v", 409, o.Payload)
}

func (o *DeleteArchitectSchedulegroupConflict) String() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/schedulegroups/{scheduleGroupId}][%d] deleteArchitectSchedulegroupConflict  %+v", 409, o.Payload)
}

func (o *DeleteArchitectSchedulegroupConflict) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteArchitectSchedulegroupConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArchitectSchedulegroupRequestEntityTooLarge creates a DeleteArchitectSchedulegroupRequestEntityTooLarge with default headers values
func NewDeleteArchitectSchedulegroupRequestEntityTooLarge() *DeleteArchitectSchedulegroupRequestEntityTooLarge {
	return &DeleteArchitectSchedulegroupRequestEntityTooLarge{}
}

/*
DeleteArchitectSchedulegroupRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type DeleteArchitectSchedulegroupRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete architect schedulegroup request entity too large response has a 2xx status code
func (o *DeleteArchitectSchedulegroupRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete architect schedulegroup request entity too large response has a 3xx status code
func (o *DeleteArchitectSchedulegroupRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete architect schedulegroup request entity too large response has a 4xx status code
func (o *DeleteArchitectSchedulegroupRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete architect schedulegroup request entity too large response has a 5xx status code
func (o *DeleteArchitectSchedulegroupRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this delete architect schedulegroup request entity too large response a status code equal to that given
func (o *DeleteArchitectSchedulegroupRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *DeleteArchitectSchedulegroupRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/schedulegroups/{scheduleGroupId}][%d] deleteArchitectSchedulegroupRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteArchitectSchedulegroupRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/schedulegroups/{scheduleGroupId}][%d] deleteArchitectSchedulegroupRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteArchitectSchedulegroupRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteArchitectSchedulegroupRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArchitectSchedulegroupUnsupportedMediaType creates a DeleteArchitectSchedulegroupUnsupportedMediaType with default headers values
func NewDeleteArchitectSchedulegroupUnsupportedMediaType() *DeleteArchitectSchedulegroupUnsupportedMediaType {
	return &DeleteArchitectSchedulegroupUnsupportedMediaType{}
}

/*
DeleteArchitectSchedulegroupUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type DeleteArchitectSchedulegroupUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete architect schedulegroup unsupported media type response has a 2xx status code
func (o *DeleteArchitectSchedulegroupUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete architect schedulegroup unsupported media type response has a 3xx status code
func (o *DeleteArchitectSchedulegroupUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete architect schedulegroup unsupported media type response has a 4xx status code
func (o *DeleteArchitectSchedulegroupUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete architect schedulegroup unsupported media type response has a 5xx status code
func (o *DeleteArchitectSchedulegroupUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this delete architect schedulegroup unsupported media type response a status code equal to that given
func (o *DeleteArchitectSchedulegroupUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *DeleteArchitectSchedulegroupUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/schedulegroups/{scheduleGroupId}][%d] deleteArchitectSchedulegroupUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteArchitectSchedulegroupUnsupportedMediaType) String() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/schedulegroups/{scheduleGroupId}][%d] deleteArchitectSchedulegroupUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteArchitectSchedulegroupUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteArchitectSchedulegroupUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArchitectSchedulegroupTooManyRequests creates a DeleteArchitectSchedulegroupTooManyRequests with default headers values
func NewDeleteArchitectSchedulegroupTooManyRequests() *DeleteArchitectSchedulegroupTooManyRequests {
	return &DeleteArchitectSchedulegroupTooManyRequests{}
}

/*
DeleteArchitectSchedulegroupTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type DeleteArchitectSchedulegroupTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete architect schedulegroup too many requests response has a 2xx status code
func (o *DeleteArchitectSchedulegroupTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete architect schedulegroup too many requests response has a 3xx status code
func (o *DeleteArchitectSchedulegroupTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete architect schedulegroup too many requests response has a 4xx status code
func (o *DeleteArchitectSchedulegroupTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete architect schedulegroup too many requests response has a 5xx status code
func (o *DeleteArchitectSchedulegroupTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete architect schedulegroup too many requests response a status code equal to that given
func (o *DeleteArchitectSchedulegroupTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *DeleteArchitectSchedulegroupTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/schedulegroups/{scheduleGroupId}][%d] deleteArchitectSchedulegroupTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteArchitectSchedulegroupTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/schedulegroups/{scheduleGroupId}][%d] deleteArchitectSchedulegroupTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteArchitectSchedulegroupTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteArchitectSchedulegroupTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArchitectSchedulegroupInternalServerError creates a DeleteArchitectSchedulegroupInternalServerError with default headers values
func NewDeleteArchitectSchedulegroupInternalServerError() *DeleteArchitectSchedulegroupInternalServerError {
	return &DeleteArchitectSchedulegroupInternalServerError{}
}

/*
DeleteArchitectSchedulegroupInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type DeleteArchitectSchedulegroupInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete architect schedulegroup internal server error response has a 2xx status code
func (o *DeleteArchitectSchedulegroupInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete architect schedulegroup internal server error response has a 3xx status code
func (o *DeleteArchitectSchedulegroupInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete architect schedulegroup internal server error response has a 4xx status code
func (o *DeleteArchitectSchedulegroupInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete architect schedulegroup internal server error response has a 5xx status code
func (o *DeleteArchitectSchedulegroupInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete architect schedulegroup internal server error response a status code equal to that given
func (o *DeleteArchitectSchedulegroupInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteArchitectSchedulegroupInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/schedulegroups/{scheduleGroupId}][%d] deleteArchitectSchedulegroupInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteArchitectSchedulegroupInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/schedulegroups/{scheduleGroupId}][%d] deleteArchitectSchedulegroupInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteArchitectSchedulegroupInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteArchitectSchedulegroupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArchitectSchedulegroupServiceUnavailable creates a DeleteArchitectSchedulegroupServiceUnavailable with default headers values
func NewDeleteArchitectSchedulegroupServiceUnavailable() *DeleteArchitectSchedulegroupServiceUnavailable {
	return &DeleteArchitectSchedulegroupServiceUnavailable{}
}

/*
DeleteArchitectSchedulegroupServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type DeleteArchitectSchedulegroupServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete architect schedulegroup service unavailable response has a 2xx status code
func (o *DeleteArchitectSchedulegroupServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete architect schedulegroup service unavailable response has a 3xx status code
func (o *DeleteArchitectSchedulegroupServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete architect schedulegroup service unavailable response has a 4xx status code
func (o *DeleteArchitectSchedulegroupServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete architect schedulegroup service unavailable response has a 5xx status code
func (o *DeleteArchitectSchedulegroupServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this delete architect schedulegroup service unavailable response a status code equal to that given
func (o *DeleteArchitectSchedulegroupServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *DeleteArchitectSchedulegroupServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/schedulegroups/{scheduleGroupId}][%d] deleteArchitectSchedulegroupServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteArchitectSchedulegroupServiceUnavailable) String() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/schedulegroups/{scheduleGroupId}][%d] deleteArchitectSchedulegroupServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteArchitectSchedulegroupServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteArchitectSchedulegroupServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArchitectSchedulegroupGatewayTimeout creates a DeleteArchitectSchedulegroupGatewayTimeout with default headers values
func NewDeleteArchitectSchedulegroupGatewayTimeout() *DeleteArchitectSchedulegroupGatewayTimeout {
	return &DeleteArchitectSchedulegroupGatewayTimeout{}
}

/*
DeleteArchitectSchedulegroupGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type DeleteArchitectSchedulegroupGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete architect schedulegroup gateway timeout response has a 2xx status code
func (o *DeleteArchitectSchedulegroupGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete architect schedulegroup gateway timeout response has a 3xx status code
func (o *DeleteArchitectSchedulegroupGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete architect schedulegroup gateway timeout response has a 4xx status code
func (o *DeleteArchitectSchedulegroupGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete architect schedulegroup gateway timeout response has a 5xx status code
func (o *DeleteArchitectSchedulegroupGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this delete architect schedulegroup gateway timeout response a status code equal to that given
func (o *DeleteArchitectSchedulegroupGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *DeleteArchitectSchedulegroupGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/schedulegroups/{scheduleGroupId}][%d] deleteArchitectSchedulegroupGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteArchitectSchedulegroupGatewayTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/architect/schedulegroups/{scheduleGroupId}][%d] deleteArchitectSchedulegroupGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteArchitectSchedulegroupGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteArchitectSchedulegroupGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
