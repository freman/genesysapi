// Code generated by go-swagger; DO NOT EDIT.

package architect

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostFlowsActionsRevertReader is a Reader for the PostFlowsActionsRevert structure.
type PostFlowsActionsRevertReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostFlowsActionsRevertReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostFlowsActionsRevertOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostFlowsActionsRevertBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostFlowsActionsRevertUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostFlowsActionsRevertForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostFlowsActionsRevertNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewPostFlowsActionsRevertMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostFlowsActionsRevertRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPostFlowsActionsRevertConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewPostFlowsActionsRevertGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostFlowsActionsRevertRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostFlowsActionsRevertUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostFlowsActionsRevertTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostFlowsActionsRevertInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostFlowsActionsRevertServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostFlowsActionsRevertGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostFlowsActionsRevertOK creates a PostFlowsActionsRevertOK with default headers values
func NewPostFlowsActionsRevertOK() *PostFlowsActionsRevertOK {
	return &PostFlowsActionsRevertOK{}
}

/*PostFlowsActionsRevertOK handles this case with default header values.

successful operation
*/
type PostFlowsActionsRevertOK struct {
	Payload *models.Flow
}

func (o *PostFlowsActionsRevertOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/revert][%d] postFlowsActionsRevertOK  %+v", 200, o.Payload)
}

func (o *PostFlowsActionsRevertOK) GetPayload() *models.Flow {
	return o.Payload
}

func (o *PostFlowsActionsRevertOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Flow)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsActionsRevertBadRequest creates a PostFlowsActionsRevertBadRequest with default headers values
func NewPostFlowsActionsRevertBadRequest() *PostFlowsActionsRevertBadRequest {
	return &PostFlowsActionsRevertBadRequest{}
}

/*PostFlowsActionsRevertBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostFlowsActionsRevertBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PostFlowsActionsRevertBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/revert][%d] postFlowsActionsRevertBadRequest  %+v", 400, o.Payload)
}

func (o *PostFlowsActionsRevertBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsActionsRevertBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsActionsRevertUnauthorized creates a PostFlowsActionsRevertUnauthorized with default headers values
func NewPostFlowsActionsRevertUnauthorized() *PostFlowsActionsRevertUnauthorized {
	return &PostFlowsActionsRevertUnauthorized{}
}

/*PostFlowsActionsRevertUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PostFlowsActionsRevertUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PostFlowsActionsRevertUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/revert][%d] postFlowsActionsRevertUnauthorized  %+v", 401, o.Payload)
}

func (o *PostFlowsActionsRevertUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsActionsRevertUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsActionsRevertForbidden creates a PostFlowsActionsRevertForbidden with default headers values
func NewPostFlowsActionsRevertForbidden() *PostFlowsActionsRevertForbidden {
	return &PostFlowsActionsRevertForbidden{}
}

/*PostFlowsActionsRevertForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PostFlowsActionsRevertForbidden struct {
	Payload *models.ErrorBody
}

func (o *PostFlowsActionsRevertForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/revert][%d] postFlowsActionsRevertForbidden  %+v", 403, o.Payload)
}

func (o *PostFlowsActionsRevertForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsActionsRevertForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsActionsRevertNotFound creates a PostFlowsActionsRevertNotFound with default headers values
func NewPostFlowsActionsRevertNotFound() *PostFlowsActionsRevertNotFound {
	return &PostFlowsActionsRevertNotFound{}
}

/*PostFlowsActionsRevertNotFound handles this case with default header values.

The requested resource was not found.
*/
type PostFlowsActionsRevertNotFound struct {
	Payload *models.ErrorBody
}

func (o *PostFlowsActionsRevertNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/revert][%d] postFlowsActionsRevertNotFound  %+v", 404, o.Payload)
}

func (o *PostFlowsActionsRevertNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsActionsRevertNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsActionsRevertMethodNotAllowed creates a PostFlowsActionsRevertMethodNotAllowed with default headers values
func NewPostFlowsActionsRevertMethodNotAllowed() *PostFlowsActionsRevertMethodNotAllowed {
	return &PostFlowsActionsRevertMethodNotAllowed{}
}

/*PostFlowsActionsRevertMethodNotAllowed handles this case with default header values.

Method Not Allowed
*/
type PostFlowsActionsRevertMethodNotAllowed struct {
	Payload *models.ErrorBody
}

func (o *PostFlowsActionsRevertMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/revert][%d] postFlowsActionsRevertMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *PostFlowsActionsRevertMethodNotAllowed) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsActionsRevertMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsActionsRevertRequestTimeout creates a PostFlowsActionsRevertRequestTimeout with default headers values
func NewPostFlowsActionsRevertRequestTimeout() *PostFlowsActionsRevertRequestTimeout {
	return &PostFlowsActionsRevertRequestTimeout{}
}

/*PostFlowsActionsRevertRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostFlowsActionsRevertRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostFlowsActionsRevertRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/revert][%d] postFlowsActionsRevertRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostFlowsActionsRevertRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsActionsRevertRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsActionsRevertConflict creates a PostFlowsActionsRevertConflict with default headers values
func NewPostFlowsActionsRevertConflict() *PostFlowsActionsRevertConflict {
	return &PostFlowsActionsRevertConflict{}
}

/*PostFlowsActionsRevertConflict handles this case with default header values.

Conflict
*/
type PostFlowsActionsRevertConflict struct {
	Payload *models.ErrorBody
}

func (o *PostFlowsActionsRevertConflict) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/revert][%d] postFlowsActionsRevertConflict  %+v", 409, o.Payload)
}

func (o *PostFlowsActionsRevertConflict) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsActionsRevertConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsActionsRevertGone creates a PostFlowsActionsRevertGone with default headers values
func NewPostFlowsActionsRevertGone() *PostFlowsActionsRevertGone {
	return &PostFlowsActionsRevertGone{}
}

/*PostFlowsActionsRevertGone handles this case with default header values.

Gone
*/
type PostFlowsActionsRevertGone struct {
	Payload *models.ErrorBody
}

func (o *PostFlowsActionsRevertGone) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/revert][%d] postFlowsActionsRevertGone  %+v", 410, o.Payload)
}

func (o *PostFlowsActionsRevertGone) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsActionsRevertGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsActionsRevertRequestEntityTooLarge creates a PostFlowsActionsRevertRequestEntityTooLarge with default headers values
func NewPostFlowsActionsRevertRequestEntityTooLarge() *PostFlowsActionsRevertRequestEntityTooLarge {
	return &PostFlowsActionsRevertRequestEntityTooLarge{}
}

/*PostFlowsActionsRevertRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type PostFlowsActionsRevertRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PostFlowsActionsRevertRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/revert][%d] postFlowsActionsRevertRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostFlowsActionsRevertRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsActionsRevertRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsActionsRevertUnsupportedMediaType creates a PostFlowsActionsRevertUnsupportedMediaType with default headers values
func NewPostFlowsActionsRevertUnsupportedMediaType() *PostFlowsActionsRevertUnsupportedMediaType {
	return &PostFlowsActionsRevertUnsupportedMediaType{}
}

/*PostFlowsActionsRevertUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostFlowsActionsRevertUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PostFlowsActionsRevertUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/revert][%d] postFlowsActionsRevertUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostFlowsActionsRevertUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsActionsRevertUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsActionsRevertTooManyRequests creates a PostFlowsActionsRevertTooManyRequests with default headers values
func NewPostFlowsActionsRevertTooManyRequests() *PostFlowsActionsRevertTooManyRequests {
	return &PostFlowsActionsRevertTooManyRequests{}
}

/*PostFlowsActionsRevertTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostFlowsActionsRevertTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PostFlowsActionsRevertTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/revert][%d] postFlowsActionsRevertTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostFlowsActionsRevertTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsActionsRevertTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsActionsRevertInternalServerError creates a PostFlowsActionsRevertInternalServerError with default headers values
func NewPostFlowsActionsRevertInternalServerError() *PostFlowsActionsRevertInternalServerError {
	return &PostFlowsActionsRevertInternalServerError{}
}

/*PostFlowsActionsRevertInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostFlowsActionsRevertInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PostFlowsActionsRevertInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/revert][%d] postFlowsActionsRevertInternalServerError  %+v", 500, o.Payload)
}

func (o *PostFlowsActionsRevertInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsActionsRevertInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsActionsRevertServiceUnavailable creates a PostFlowsActionsRevertServiceUnavailable with default headers values
func NewPostFlowsActionsRevertServiceUnavailable() *PostFlowsActionsRevertServiceUnavailable {
	return &PostFlowsActionsRevertServiceUnavailable{}
}

/*PostFlowsActionsRevertServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostFlowsActionsRevertServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PostFlowsActionsRevertServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/revert][%d] postFlowsActionsRevertServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostFlowsActionsRevertServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsActionsRevertServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsActionsRevertGatewayTimeout creates a PostFlowsActionsRevertGatewayTimeout with default headers values
func NewPostFlowsActionsRevertGatewayTimeout() *PostFlowsActionsRevertGatewayTimeout {
	return &PostFlowsActionsRevertGatewayTimeout{}
}

/*PostFlowsActionsRevertGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PostFlowsActionsRevertGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostFlowsActionsRevertGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/revert][%d] postFlowsActionsRevertGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostFlowsActionsRevertGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsActionsRevertGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
